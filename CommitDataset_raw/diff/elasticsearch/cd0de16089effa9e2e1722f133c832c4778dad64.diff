[+++ b/plugins/repository-s3/build.gradle, +final String minioAddress = "127.0.0.1", +    ext.minioPort = 0, +      // get free port, +      for (int port = 60920; port < 60940; port++) {, +        try {, +          javax.net.ServerSocketFactory.getDefault().createServerSocket(port, 1, InetAddress.getByName(minioAddress)).close(), +          minioPort = port, +          break, +        } catch (BindException e) {, +          logger.info("Port " + port + " for Minio process is already taken", e), +        }, +      }, +      if (minioPort == 0) {, +        throw new GradleException("Could not find a free port for Minio"), +      }, +, +              minioAddress + ":" + minioPort,, +            assert httpPort == minioPort : "Port mismatch, expected ${minioPort} but was ${httpPort}", +    cluster.dependsOn(startMinio) // otherwise we don't know the Minio port, +    Closure<String> minioAddressAndPort = {, +      assert startMinio.minioPort > 0, +      return 'http://' + minioAddress + ':' + startMinio.minioPort, +    }, +    cluster.setting 's3.client.integration_test_permanent.endpoint', "${ -> minioAddressAndPort.call()}"]