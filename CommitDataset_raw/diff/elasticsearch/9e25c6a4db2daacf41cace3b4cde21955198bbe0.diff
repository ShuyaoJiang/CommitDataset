[+++ b/src/test/java/org/elasticsearch/index/cache/id/SimpleIdCacheTests.java, +    public static class StubIndexService implements IndexService {, +        public StubIndexService(MapperService mapperService) {, +++ b/src/test/java/org/elasticsearch/index/cache/id/SimpleIdCacheTests.java, +    public static class StubIndexService implements IndexService {, +        public StubIndexService(MapperService mapperService) {, +++ b/src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements. See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations under, + * the License., + */, +, +package org.elasticsearch.index.search.child;, +, +import com.carrotsearch.hppc.ObjectObjectOpenHashMap;, +import org.apache.lucene.document.Document;, +import org.apache.lucene.document.Field;, +import org.apache.lucene.document.StringField;, +import org.apache.lucene.index.*;, +import org.apache.lucene.queries.TermFilter;, +import org.apache.lucene.search.*;, +import org.apache.lucene.store.Directory;, +import org.apache.lucene.util.FixedBitSet;, +import org.elasticsearch.ElasticSearchException;, +import org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest;, +import org.elasticsearch.action.search.SearchType;, +import org.elasticsearch.cache.recycler.CacheRecycler;, +import org.elasticsearch.common.lease.Releasable;, +import org.elasticsearch.common.lucene.search.NoopCollector;, +import org.elasticsearch.common.lucene.search.XConstantScoreQuery;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.analysis.AnalysisService;, +import org.elasticsearch.index.cache.docset.DocSetCache;, +import org.elasticsearch.index.cache.filter.FilterCache;, +import org.elasticsearch.index.cache.id.IdCache;, +import org.elasticsearch.index.cache.id.SimpleIdCacheTests;, +import org.elasticsearch.index.cache.id.simple.SimpleIdCache;, +import org.elasticsearch.index.engine.Engine;, +import org.elasticsearch.index.fielddata.IndexFieldDataService;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.FieldMappers;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.mapper.Uid;, +import org.elasticsearch.index.mapper.internal.ParentFieldMapper;, +import org.elasticsearch.index.mapper.internal.TypeFieldMapper;, +import org.elasticsearch.index.mapper.internal.UidFieldMapper;, +import org.elasticsearch.index.query.IndexQueryParserService;, +import org.elasticsearch.index.query.ParsedFilter;, +import org.elasticsearch.index.query.ParsedQuery;, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.index.shard.service.IndexShard;, +import org.elasticsearch.index.similarity.SimilarityService;, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.search.Scroll;, +import org.elasticsearch.search.SearchShardTarget;, +import org.elasticsearch.search.dfs.DfsSearchResult;, +import org.elasticsearch.search.facet.SearchContextFacets;, +import org.elasticsearch.search.fetch.FetchSearchResult;, +import org.elasticsearch.search.fetch.partial.PartialFieldsContext;, +import org.elasticsearch.search.fetch.script.ScriptFieldsContext;, +import org.elasticsearch.search.fetch.source.FetchSourceContext;, +import org.elasticsearch.search.highlight.SearchContextHighlight;, +import org.elasticsearch.search.internal.ContextIndexSearcher;, +import org.elasticsearch.search.internal.SearchContext;, +import org.elasticsearch.search.internal.ShardSearchRequest;, +import org.elasticsearch.search.lookup.SearchLookup;, +import org.elasticsearch.search.query.QuerySearchResult;, +import org.elasticsearch.search.rescore.RescoreSearchContext;, +import org.elasticsearch.search.scan.ScanContext;, +import org.elasticsearch.search.suggest.SuggestionSearchContext;, +import org.elasticsearch.test.ElasticsearchLuceneTestCase;, +import org.hamcrest.Description;, +import org.hamcrest.StringDescription;, +import org.junit.AfterClass;, +import org.junit.BeforeClass;, +import org.junit.Test;, +, +import java.io.IOException;, +import java.util.List;, +import java.util.NavigableSet;, +import java.util.TreeSet;, +, +import static org.hamcrest.Matchers.equalTo;, +, +public class ChildrenConstantScoreQueryTests extends ElasticsearchLuceneTestCase {]