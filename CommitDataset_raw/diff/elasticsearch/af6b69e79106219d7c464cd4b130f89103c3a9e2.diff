[+++ b/bin/elasticsearch.in.bat, +REM Use our provided JNA always versus the system one, +set JAVA_OPTS=%JAVA_OPTS% -Djna.nosys=true, +, +++ b/bin/elasticsearch.in.bat, +REM Use our provided JNA always versus the system one, +set JAVA_OPTS=%JAVA_OPTS% -Djna.nosys=true, +, +++ b/bin/elasticsearch.in.sh, +, +# Use our provided JNA always versus the system one, +JAVA_OPTS="$JAVA_OPTS -Djna.nosys=true", +++ b/bin/elasticsearch.in.bat, +REM Use our provided JNA always versus the system one, +set JAVA_OPTS=%JAVA_OPTS% -Djna.nosys=true, +, +++ b/bin/elasticsearch.in.sh, +, +# Use our provided JNA always versus the system one, +JAVA_OPTS="$JAVA_OPTS -Djna.nosys=true", +++ b/docs/reference/search/request/sort.asciidoc, +`median`:: Use the median of all values as sort value.  Only applicable, +           for number based array fields., +++ b/bin/elasticsearch.in.bat, +REM Use our provided JNA always versus the system one, +set JAVA_OPTS=%JAVA_OPTS% -Djna.nosys=true, +, +++ b/bin/elasticsearch.in.sh, +, +# Use our provided JNA always versus the system one, +JAVA_OPTS="$JAVA_OPTS -Djna.nosys=true", +++ b/docs/reference/search/request/sort.asciidoc, +`median`:: Use the median of all values as sort value.  Only applicable, +           for number based array fields., +++ b/pom.xml, +                <argument>-Djna.nosys=true</argument>, +++ b/bin/elasticsearch.in.bat, +REM Use our provided JNA always versus the system one, +set JAVA_OPTS=%JAVA_OPTS% -Djna.nosys=true, +, +++ b/bin/elasticsearch.in.sh, +, +# Use our provided JNA always versus the system one, +JAVA_OPTS="$JAVA_OPTS -Djna.nosys=true", +++ b/docs/reference/search/request/sort.asciidoc, +`median`:: Use the median of all values as sort value.  Only applicable, +           for number based array fields., +++ b/pom.xml, +                <argument>-Djna.nosys=true</argument>, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +                if (input.length() == 0) {, +                    continue;, +                }, +                if (input.length() == 0) {, +                    continue;, +                }, +++ b/bin/elasticsearch.in.bat, +REM Use our provided JNA always versus the system one, +set JAVA_OPTS=%JAVA_OPTS% -Djna.nosys=true, +, +++ b/bin/elasticsearch.in.sh, +, +# Use our provided JNA always versus the system one, +JAVA_OPTS="$JAVA_OPTS -Djna.nosys=true", +++ b/docs/reference/search/request/sort.asciidoc, +`median`:: Use the median of all values as sort value.  Only applicable, +           for number based array fields., +++ b/pom.xml, +                <argument>-Djna.nosys=true</argument>, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +                if (input.length() == 0) {, +                    continue;, +                }, +                if (input.length() == 0) {, +                    continue;, +                }, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/SourceFieldMapper.java, +                if (fieldName.equals("enabled") && parserContext.indexVersionCreated().before(Version.V_2_0_0)) {, +                } else if (fieldName.equals("includes") && parserContext.indexVersionCreated().before(Version.V_2_0_0)) {, +                } else if (fieldName.equals("excludes") && parserContext.indexVersionCreated().before(Version.V_2_0_0)) {, +    private String[] includes;, +    private String[] excludes;, +        if (!mergeResult.simulate()) {, +            if (sourceMergeWith.includes != null) {, +                this.includes = sourceMergeWith.includes;, +            }, +            if (sourceMergeWith.excludes != null) {, +                this.excludes = sourceMergeWith.excludes;, +            }, +++ b/bin/elasticsearch.in.bat, +REM Use our provided JNA always versus the system one, +set JAVA_OPTS=%JAVA_OPTS% -Djna.nosys=true, +, +++ b/bin/elasticsearch.in.sh, +, +# Use our provided JNA always versus the system one, +JAVA_OPTS="$JAVA_OPTS -Djna.nosys=true", +++ b/docs/reference/search/request/sort.asciidoc, +`median`:: Use the median of all values as sort value.  Only applicable, +           for number based array fields.]