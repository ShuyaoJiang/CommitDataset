[+++ b/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +    private String fragmenter;, +    /**, +     * Sets what fragmenter to use to break up text that is eligible for highlighting., +     * This option is only applicable when using plain / normal highlighter., +     */, +    public HighlightBuilder fragmenter(String fragmenter) {, +        this.fragmenter = fragmenter;, +        return this;, +    }, +, +        if (fragmenter != null) {, +            builder.field("fragmenter", fragmenter);, +        }, +                if (field.fragmenter != null) {, +                    builder.field("fragmenter", field.fragmenter);, +                }, +        String fragmenter;, +, +        public Field fragmenter(String fragmenter) {, +            this.fragmenter = fragmenter;, +            return this;, +        }, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +    private String fragmenter;, +    /**, +     * Sets what fragmenter to use to break up text that is eligible for highlighting., +     * This option is only applicable when using plain / normal highlighter., +     */, +    public HighlightBuilder fragmenter(String fragmenter) {, +        this.fragmenter = fragmenter;, +        return this;, +    }, +, +        if (fragmenter != null) {, +            builder.field("fragmenter", fragmenter);, +        }, +                if (field.fragmenter != null) {, +                    builder.field("fragmenter", field.fragmenter);, +                }, +        String fragmenter;, +, +        public Field fragmenter(String fragmenter) {, +            this.fragmenter = fragmenter;, +            return this;, +        }, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +                    throw new ElasticSearchIllegalArgumentException("the field [" + field.field() + "] should be indexed with term vector with position offsets to be used with fast vector highlighter");, +                throw new ElasticSearchIllegalArgumentException("unknown highlighter type [" + field.highlighterType() + "] for the field [" + field.field() + "]");, +                    } else if (field.fragmenter() == null) {, +                    } else if ("simple".equals(field.fragmenter())) {, +                        fragmenter = new SimpleFragmenter(field.fragmentCharSize());, +                    } else if ("span".equals(field.fragmenter())) {, +                        fragmenter = new SimpleSpanFragmenter(queryScorer, field.fragmentCharSize());, +                    } else {, +                        throw new ElasticSearchIllegalArgumentException("unknown fragmenter option [" + field.fragmenter() + "] for the field [" + field.field() + "]");, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +    private String fragmenter;, +    /**, +     * Sets what fragmenter to use to break up text that is eligible for highlighting., +     * This option is only applicable when using plain / normal highlighter., +     */, +    public HighlightBuilder fragmenter(String fragmenter) {, +        this.fragmenter = fragmenter;, +        return this;, +    }, +, +        if (fragmenter != null) {, +            builder.field("fragmenter", fragmenter);, +        }, +                if (field.fragmenter != null) {, +                    builder.field("fragmenter", field.fragmenter);, +                }, +        String fragmenter;, +, +        public Field fragmenter(String fragmenter) {, +            this.fragmenter = fragmenter;, +            return this;, +        }, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +                    throw new ElasticSearchIllegalArgumentException("the field [" + field.field() + "] should be indexed with term vector with position offsets to be used with fast vector highlighter");, +                throw new ElasticSearchIllegalArgumentException("unknown highlighter type [" + field.highlighterType() + "] for the field [" + field.field() + "]");, +                    } else if (field.fragmenter() == null) {, +                    } else if ("simple".equals(field.fragmenter())) {, +                        fragmenter = new SimpleFragmenter(field.fragmentCharSize());, +                    } else if ("span".equals(field.fragmenter())) {, +                        fragmenter = new SimpleSpanFragmenter(queryScorer, field.fragmentCharSize());, +                    } else {, +                        throw new ElasticSearchIllegalArgumentException("unknown fragmenter option [" + field.fragmenter() + "] for the field [" + field.field() + "]");, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java, +        String globalFragmenter = null;, +                } else if ("fragmenter".equals(topLevelFieldName)) {, +                    globalFragmenter = parser.text();, +                                    } else if ("fragmenter".equals(fieldName)) {, +                                        field.fragmenter(parser.text());, +            if (field.fragmenter() == null) {, +                field.fragmenter(globalFragmenter);, +            }]