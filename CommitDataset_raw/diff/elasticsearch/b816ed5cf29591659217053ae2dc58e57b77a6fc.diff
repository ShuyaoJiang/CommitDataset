[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.node.info.TransportNodesInfoAction;, +import org.elasticsearch.action.admin.cluster.node.stats.TransportNodesStatsAction;, +        bind(TransportNodesInfoAction.class).asEagerSingleton();, +        bind(TransportNodesStatsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.node.info.TransportNodesInfoAction;, +import org.elasticsearch.action.admin.cluster.node.stats.TransportNodesStatsAction;, +        bind(TransportNodesInfoAction.class).asEagerSingleton();, +        bind(TransportNodesStatsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.threadpool.ThreadPoolInfo;, +    private ThreadPoolInfo threadPool;, +, +                    OsInfo os, ProcessInfo process, JvmInfo jvm, NetworkInfo network, ThreadPoolInfo threadPool) {, +        this.threadPool = threadPool;, +    /**, +     * Thread Pool level information., +     */, +    public ThreadPoolInfo threadPool() {, +        return threadPool;, +    }, +, +    /**, +     * Thread Pool level information., +     */, +    public ThreadPoolInfo getThreadPool() {, +        return threadPool();, +    }, +, +        if (in.readBoolean()) {, +            threadPool = ThreadPoolInfo.readThreadPoolInfo(in);, +        }, +        if (threadPool == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            threadPool.writeTo(out);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.node.info.TransportNodesInfoAction;, +import org.elasticsearch.action.admin.cluster.node.stats.TransportNodesStatsAction;, +        bind(TransportNodesInfoAction.class).asEagerSingleton();, +        bind(TransportNodesStatsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.threadpool.ThreadPoolInfo;, +    private ThreadPoolInfo threadPool;, +, +                    OsInfo os, ProcessInfo process, JvmInfo jvm, NetworkInfo network, ThreadPoolInfo threadPool) {, +        this.threadPool = threadPool;, +    /**, +     * Thread Pool level information., +     */, +    public ThreadPoolInfo threadPool() {, +        return threadPool;, +    }, +, +    /**, +     * Thread Pool level information., +     */, +    public ThreadPoolInfo getThreadPool() {, +        return threadPool();, +    }, +, +        if (in.readBoolean()) {, +            threadPool = ThreadPoolInfo.readThreadPoolInfo(in);, +        }, +        if (threadPool == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            threadPool.writeTo(out);, +        }, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.admin.cluster.node.info.TransportNodesInfoAction;, +import org.elasticsearch.action.admin.cluster.node.stats.TransportNodesStatsAction;, +        bind(TransportNodesInfoAction.class).asEagerSingleton();, +        bind(TransportNodesStatsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +import org.elasticsearch.threadpool.ThreadPoolInfo;, +    private ThreadPoolInfo threadPool;, +, +                    OsInfo os, ProcessInfo process, JvmInfo jvm, NetworkInfo network, ThreadPoolInfo threadPool) {, +        this.threadPool = threadPool;, +    /**, +     * Thread Pool level information., +     */, +    public ThreadPoolInfo threadPool() {, +        return threadPool;, +    }, +, +    /**, +     * Thread Pool level information., +     */, +    public ThreadPoolInfo getThreadPool() {, +        return threadPool();, +    }, +, +        if (in.readBoolean()) {]