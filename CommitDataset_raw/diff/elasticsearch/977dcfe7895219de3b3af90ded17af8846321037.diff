[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +    private static final DeprecationLogger DEPRECATION_LOGGER = new DeprecationLogger(Loggers.getLogger(SignificantTermsAggregatorFactory.class));, +                execution = ExecutionMode.fromString(executionHint, DEPRECATION_LOGGER);, +            if (valuesSource instanceof ValuesSource.Bytes.WithOrdinals == false) {, +                boolean remapGlobalOrd = true;, +                if (Aggregator.descendsFromBucketAggregator(parent) == false &&, +                        factories == AggregatorFactories.EMPTY &&, +                        includeExclude == null) {, +                    /**, +                     * We don't need to remap global ords iff this aggregator:, +                     *    - is not a child of a bucket aggregator AND, +                     *    - has no include/exclude rules AND, +                     *    - has no sub-aggregator, +                     **/, +                    remapGlobalOrd = false;, +                }, +                        aggregationContext, parent, remapGlobalOrd, significanceHeuristic, termsAggregatorFactory, pipelineAggregators, metaData);, +        public static ExecutionMode fromString(String value, final DeprecationLogger deprecationLogger) {, +            if ("global_ordinals".equals(value)) {, +                return GLOBAL_ORDINALS;, +            } else if ("global_ordinals_hash".equals(value)) {, +                deprecationLogger.deprecated("global_ordinals_hash is deprecated. Please use [global_ordinals] instead.");, +                return GLOBAL_ORDINALS;, +            } else if ("map".equals(value)) {, +                return MAP;, +            throw new IllegalArgumentException("Unknown `execution_hint`: [" + value + "], expected any of [map, global_ordinals]");, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +    private static final DeprecationLogger DEPRECATION_LOGGER = new DeprecationLogger(Loggers.getLogger(SignificantTermsAggregatorFactory.class));, +                execution = ExecutionMode.fromString(executionHint, DEPRECATION_LOGGER);, +            if (valuesSource instanceof ValuesSource.Bytes.WithOrdinals == false) {, +                boolean remapGlobalOrd = true;, +                if (Aggregator.descendsFromBucketAggregator(parent) == false &&, +                        factories == AggregatorFactories.EMPTY &&, +                        includeExclude == null) {, +                    /**, +                     * We don't need to remap global ords iff this aggregator:, +                     *    - is not a child of a bucket aggregator AND, +                     *    - has no include/exclude rules AND, +                     *    - has no sub-aggregator, +                     **/, +                    remapGlobalOrd = false;, +                }, +                        aggregationContext, parent, remapGlobalOrd, significanceHeuristic, termsAggregatorFactory, pipelineAggregators, metaData);, +        public static ExecutionMode fromString(String value, final DeprecationLogger deprecationLogger) {, +            if ("global_ordinals".equals(value)) {, +                return GLOBAL_ORDINALS;, +            } else if ("global_ordinals_hash".equals(value)) {, +                deprecationLogger.deprecated("global_ordinals_hash is deprecated. Please use [global_ordinals] instead.");, +                return GLOBAL_ORDINALS;, +            } else if ("map".equals(value)) {, +                return MAP;, +            throw new IllegalArgumentException("Unknown `execution_hint`: [" + value + "], expected any of [map, global_ordinals]");, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java, +                                               boolean remapGlobalOrds,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +    private static final DeprecationLogger DEPRECATION_LOGGER = new DeprecationLogger(Loggers.getLogger(SignificantTermsAggregatorFactory.class));, +                execution = ExecutionMode.fromString(executionHint, DEPRECATION_LOGGER);, +            if (valuesSource instanceof ValuesSource.Bytes.WithOrdinals == false) {, +                boolean remapGlobalOrd = true;, +                if (Aggregator.descendsFromBucketAggregator(parent) == false &&, +                        factories == AggregatorFactories.EMPTY &&, +                        includeExclude == null) {, +                    /**, +                     * We don't need to remap global ords iff this aggregator:, +                     *    - is not a child of a bucket aggregator AND, +                     *    - has no include/exclude rules AND, +                     *    - has no sub-aggregator, +                     **/, +                    remapGlobalOrd = false;, +                }, +                        aggregationContext, parent, remapGlobalOrd, significanceHeuristic, termsAggregatorFactory, pipelineAggregators, metaData);, +        public static ExecutionMode fromString(String value, final DeprecationLogger deprecationLogger) {, +            if ("global_ordinals".equals(value)) {, +                return GLOBAL_ORDINALS;, +            } else if ("global_ordinals_hash".equals(value)) {, +                deprecationLogger.deprecated("global_ordinals_hash is deprecated. Please use [global_ordinals] instead.");, +                return GLOBAL_ORDINALS;, +            } else if ("map".equals(value)) {, +                return MAP;, +            throw new IllegalArgumentException("Unknown `execution_hint`: [" + value + "], expected any of [map, global_ordinals]");, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java, +                                               boolean remapGlobalOrds,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +    private static final DeprecationLogger DEPRECATION_LOGGER = new DeprecationLogger(Loggers.getLogger(TermsAggregatorFactory.class));, +    private final boolean showTermDocCountError;, +                execution = ExecutionMode.fromString(executionHint, DEPRECATION_LOGGER);, +            if (valuesSource instanceof ValuesSource.Bytes.WithOrdinals == false) {, +            final long maxOrd = getMaxOrd(valuesSource, context.searcher());, +    /**, +     * Get the maximum global ordinal value for the provided {@link ValuesSource} or -1, +     * if the values source is not an instance of {@link ValuesSource.Bytes.WithOrdinals}., +     */]