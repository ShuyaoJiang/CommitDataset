[+++ b/TESTING.asciidoc, +* fedora-24, +* oel-6 aka Oracle Enterprise Linux 6, +++ b/TESTING.asciidoc, +* fedora-24, +* oel-6 aka Oracle Enterprise Linux 6, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +     * This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch., +            final boolean quiet,, +        final boolean closeStandardStreams = (foreground == false) || quiet;, +            if (closeStandardStreams) {, +            if (closeStandardStreams) {, +++ b/TESTING.asciidoc, +* fedora-24, +* oel-6 aka Oracle Enterprise Linux 6, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +     * This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch., +            final boolean quiet,, +        final boolean closeStandardStreams = (foreground == false) || quiet;, +            if (closeStandardStreams) {, +            if (closeStandardStreams) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapException.java, + * these checked exceptions so that {@link Bootstrap#init(boolean, Path, boolean, Map)} does not have to, +++ b/TESTING.asciidoc, +* fedora-24, +* oel-6 aka Oracle Enterprise Linux 6, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +     * This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch., +            final boolean quiet,, +        final boolean closeStandardStreams = (foreground == false) || quiet;, +            if (closeStandardStreams) {, +            if (closeStandardStreams) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapException.java, + * these checked exceptions so that {@link Bootstrap#init(boolean, Path, boolean, Map)} does not have to, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +    private final OptionSpecBuilder quietOption;, +        quietOption = parser.acceptsAll(Arrays.asList("q", "quiet"),, +            "Turns off standard ouput/error streams logging in console"), +            .availableUnless(versionOption), +            .availableUnless(daemonizeOption);, +        final boolean quiet = options.has(quietOption);, +            init(daemonize, pidFile, quiet, settings);, +    void init(final boolean daemonize, final Path pidFile, final boolean quiet, final Map<String, String> esSettings), +            throws  NodeValidationException {, +            Bootstrap.init(!daemonize, pidFile, quiet, esSettings);, +++ b/TESTING.asciidoc, +* fedora-24, +* oel-6 aka Oracle Enterprise Linux 6, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +     * This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch., +            final boolean quiet,, +        final boolean closeStandardStreams = (foreground == false) || quiet;, +            if (closeStandardStreams) {, +            if (closeStandardStreams) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapException.java, + * these checked exceptions so that {@link Bootstrap#init(boolean, Path, boolean, Map)} does not have to, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java, +    private final OptionSpecBuilder quietOption;, +        quietOption = parser.acceptsAll(Arrays.asList("q", "quiet"),, +            "Turns off standard ouput/error streams logging in console"), +            .availableUnless(versionOption), +            .availableUnless(daemonizeOption);, +        final boolean quiet = options.has(quietOption);, +            init(daemonize, pidFile, quiet, settings);, +    void init(final boolean daemonize, final Path pidFile, final boolean quiet, final Map<String, String> esSettings), +            throws  NodeValidationException {, +            Bootstrap.init(!daemonize, pidFile, quiet, esSettings);, +++ b/core/src/test/java/org/elasticsearch/bootstrap/ElasticsearchCliTests.java, +        runTestThatVersionIsMutuallyExclusiveToOtherOptions("--version", "-q");, +        runTestThatVersionIsMutuallyExclusiveToOtherOptions("--version", "--quiet");, +, +        runTest(expectedStatus, false, outputConsumer, (foreground, pidFile, quiet, esSettings) -> {}, args);, +            (foreground, pidFile, quiet, esSettings) -> {},, +            (foreground, pidFile, quiet, esSettings) -> {},, +            (foreground, pidFile, quiet, esSettings) -> {},, +                (foreground, pidFile, quiet, esSettings) -> assertThat(pidFile.toString(), equalTo(expectedPidFile.toString())),, +                (foreground, pidFile, quiet, esSettings) -> assertThat(foreground, equalTo(!expectedDaemonize)),, +                args);, +    }, +, +    public void testThatParsingQuietOptionWorks() throws Exception {, +        runQuietTest(true, "-q");, +        runQuietTest(true, "--quiet");, +        runQuietTest(false);, +    }, +, +    private void runQuietTest(final boolean expectedQuiet, final String... args) throws Exception {, +        runTest(, +                ExitCodes.OK,, +                true,, +                output -> {},, +                (foreground, pidFile, quiet, esSettings) -> assertThat(quiet, equalTo(expectedQuiet)),, +                (foreground, pidFile, quiet, esSettings) -> {, +                (foreground, pidFile, quiet, esSettings) -> {},, +                (foreground, pidFile, quiet, esSettings) -> {},, +++ b/TESTING.asciidoc, +* fedora-24, +* oel-6 aka Oracle Enterprise Linux 6, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +     * This method is invoked by {@link Elasticsearch#main(String[])} to startup elasticsearch.]