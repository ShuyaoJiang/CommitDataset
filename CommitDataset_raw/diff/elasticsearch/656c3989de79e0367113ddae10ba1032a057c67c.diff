[+++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java, +import org.elasticsearch.common.Nullable;, +    public void writeBytesHolder(@Nullable BytesHolder bytes) throws IOException {, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java, +import org.elasticsearch.common.Nullable;, +    public void writeBytesHolder(@Nullable BytesHolder bytes) throws IOException {, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +    public void writeBytesHolder(@Nullable BytesHolder bytes) throws IOException {, +        if (bytes == null) {, +            writeVInt(0);, +        } else {, +    }, +++ b/src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java, +import org.elasticsearch.common.Nullable;, +    public void writeBytesHolder(@Nullable BytesHolder bytes) throws IOException {, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +    public void writeBytesHolder(@Nullable BytesHolder bytes) throws IOException {, +        if (bytes == null) {, +            writeVInt(0);, +        } else {, +    }, +++ b/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java, +import org.elasticsearch.common.BytesHolder;, +    private BytesHolder source;, +        this.source = source == null ? null : new BytesHolder(source);, +        if (LZF.isCompressed(source.bytes(), source.offset(), source.length())) {, +                this.source = new BytesHolder(LZFDecoder.decode(source.bytes(), source.offset(), source.length()));, +        return this.source.copyBytes();, +        return Unicode.fromBytes(source.bytes(), source.offset(), source.length());, +            RestXContentBuilder.restDocumentSource(source.bytes(), source.offset(), source.length(), builder, params);, +        source = in.readBytesReference();, +        if (source.length() == 0) {, +            source = null;, +        int size = in.readVInt();, +        out.writeBytesHolder(source);]