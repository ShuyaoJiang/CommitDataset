[+++ b/buildSrc/build.gradle, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        Configuration forbiddenApisConfiguration = project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar ('de.thetaphi:forbiddenapis:2.5'), +        }, +, +            configureThirdPartyAudit(project), +    private static Task configureThirdPartyAudit(Project project) {, +        ThirdPartyAuditTask thirdPartyAuditTask = project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        ExportElasticsearchBuildResourcesTask buildResources = project.tasks.getByName('buildResources'), +        thirdPartyAuditTask.configure {, +            dependsOn(buildResources), +            signatureFile = buildResources.copy("forbidden/third-party-audit.txt"), +            javaHome = project.runtimeJavaHome, +        return thirdPartyAuditTask, +    }, +    private static Task configureForbiddenApisCli(Project project) {, +        Task forbiddenApisCli = project.tasks.create('forbiddenApis'), +                    it.sourceSet = sourceSet, +                    javaHome = project.runtimeJavaHome, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        Configuration forbiddenApisConfiguration = project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar ('de.thetaphi:forbiddenapis:2.5'), +        }, +, +            configureThirdPartyAudit(project), +    private static Task configureThirdPartyAudit(Project project) {, +        ThirdPartyAuditTask thirdPartyAuditTask = project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        ExportElasticsearchBuildResourcesTask buildResources = project.tasks.getByName('buildResources'), +        thirdPartyAuditTask.configure {, +            dependsOn(buildResources), +            signatureFile = buildResources.copy("forbidden/third-party-audit.txt"), +            javaHome = project.runtimeJavaHome, +        return thirdPartyAuditTask, +    }, +    private static Task configureForbiddenApisCli(Project project) {, +        Task forbiddenApisCli = project.tasks.create('forbiddenApis'), +                    it.sourceSet = sourceSet, +                    javaHome = project.runtimeJavaHome, +++ /dev/null, +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        Configuration forbiddenApisConfiguration = project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar ('de.thetaphi:forbiddenapis:2.5'), +        }, +, +            configureThirdPartyAudit(project), +    private static Task configureThirdPartyAudit(Project project) {, +        ThirdPartyAuditTask thirdPartyAuditTask = project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        ExportElasticsearchBuildResourcesTask buildResources = project.tasks.getByName('buildResources'), +        thirdPartyAuditTask.configure {, +            dependsOn(buildResources), +            signatureFile = buildResources.copy("forbidden/third-party-audit.txt"), +            javaHome = project.runtimeJavaHome, +        return thirdPartyAuditTask, +    }, +    private static Task configureForbiddenApisCli(Project project) {, +        Task forbiddenApisCli = project.tasks.create('forbiddenApis'), +                    it.sourceSet = sourceSet, +                    javaHome = project.runtimeJavaHome, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneRestTestPlugin.groovy, +        // create a compileOnly configuration as others might expect it, +        project.configurations.create("compileOnly"), +++ b/buildSrc/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +        Configuration forbiddenApisConfiguration = project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar ('de.thetaphi:forbiddenapis:2.5'), +        }, +, +            configureThirdPartyAudit(project), +    private static Task configureThirdPartyAudit(Project project) {, +        ThirdPartyAuditTask thirdPartyAuditTask = project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        ExportElasticsearchBuildResourcesTask buildResources = project.tasks.getByName('buildResources'), +        thirdPartyAuditTask.configure {, +            dependsOn(buildResources), +            signatureFile = buildResources.copy("forbidden/third-party-audit.txt"), +            javaHome = project.runtimeJavaHome, +        return thirdPartyAuditTask, +    }, +    private static Task configureForbiddenApisCli(Project project) {, +        Task forbiddenApisCli = project.tasks.create('forbiddenApis'), +                    it.sourceSet = sourceSet, +                    javaHome = project.runtimeJavaHome, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneRestTestPlugin.groovy, +        // create a compileOnly configuration as others might expect it, +        project.configurations.create("compileOnly"), +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/JdkJarHellCheck.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under]