[+++ b/core/src/test/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java, +                if (randomBoolean() && aggs.size() > 1) {, +                    // never do am incremental reduce with only one - some aggs can't deal with this., +                    List<InternalAggregation> internalAggregations = randomSubsetOf(randomIntBetween(2, aggs.size()), aggs);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java, +                if (randomBoolean() && aggs.size() > 1) {, +                    // never do am incremental reduce with only one - some aggs can't deal with this., +                    List<InternalAggregation> internalAggregations = randomSubsetOf(randomIntBetween(2, aggs.size()), aggs);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationTestCase.java, +        if (randomBoolean() && toReduceSize > 1) {, +            // never do am incremental reduce with only one - some aggs can't deal with this., +            List<InternalAggregation> internalAggregations = randomSubsetOf(randomIntBetween(2, toReduceSize), toReduce);]