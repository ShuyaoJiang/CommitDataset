[+++ b/core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java, +import java.util.Collection;, +import java.util.Map;, +     * Returns a {@link ScriptEngine} instance or <code>null</code> if this plugin doesn't add a new script engine., +     * @param settings Node settings, +     * @param contexts The contexts that {@link ScriptEngine#compile(String, String, ScriptContext, Map)} may be called with, +    default ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java, +import java.util.Collection;, +import java.util.Map;, +     * Returns a {@link ScriptEngine} instance or <code>null</code> if this plugin doesn't add a new script engine., +     * @param settings Node settings, +     * @param contexts The contexts that {@link ScriptEngine#compile(String, String, ScriptContext, Map)} may be called with, +    default ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptModule.java, +        }, +        for (ScriptPlugin plugin : scriptPlugins) {, +            ScriptEngine engine = plugin.getScriptEngine(settings, contexts.values());, +++ b/core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java, +import java.util.Collection;, +import java.util.Map;, +     * Returns a {@link ScriptEngine} instance or <code>null</code> if this plugin doesn't add a new script engine., +     * @param settings Node settings, +     * @param contexts The contexts that {@link ScriptEngine#compile(String, String, ScriptContext, Map)} may be called with, +    default ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptModule.java, +        }, +        for (ScriptPlugin plugin : scriptPlugins) {, +            ScriptEngine engine = plugin.getScriptEngine(settings, contexts.values());, +++ b/core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java, +        public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java, +import java.util.Collection;, +import java.util.Map;, +     * Returns a {@link ScriptEngine} instance or <code>null</code> if this plugin doesn't add a new script engine., +     * @param settings Node settings, +     * @param contexts The contexts that {@link ScriptEngine#compile(String, String, ScriptContext, Map)} may be called with, +    default ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptModule.java, +        }, +        for (ScriptPlugin plugin : scriptPlugins) {, +            ScriptEngine engine = plugin.getScriptEngine(settings, contexts.values());, +++ b/core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java, +        public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java, +        public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java, +import java.util.Collection;, +import java.util.Map;, +     * Returns a {@link ScriptEngine} instance or <code>null</code> if this plugin doesn't add a new script engine., +     * @param settings Node settings, +     * @param contexts The contexts that {@link ScriptEngine#compile(String, String, ScriptContext, Map)} may be called with, +    default ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptModule.java, +        }, +        for (ScriptPlugin plugin : scriptPlugins) {, +            ScriptEngine engine = plugin.getScriptEngine(settings, contexts.values());, +++ b/core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java, +        public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java, +        public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionPlugin.java, +import java.util.Collection;, +, +import org.elasticsearch.script.ScriptContext;, +    public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java, +import java.util.Collection;, +import java.util.Map;, +     * Returns a {@link ScriptEngine} instance or <code>null</code> if this plugin doesn't add a new script engine., +     * @param settings Node settings, +     * @param contexts The contexts that {@link ScriptEngine#compile(String, String, ScriptContext, Map)} may be called with, +    default ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptModule.java, +        }, +        for (ScriptPlugin plugin : scriptPlugins) {, +            ScriptEngine engine = plugin.getScriptEngine(settings, contexts.values());, +++ b/core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java, +        public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java, +        public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionPlugin.java, +import java.util.Collection;, +, +import org.elasticsearch.script.ScriptContext;, +    public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustachePlugin.java, +import org.elasticsearch.script.ScriptContext;, +import java.util.Collection;, +    public ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>>contexts) {, +++ b/core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java, +import java.util.Collection;, +import java.util.Map;, +     * Returns a {@link ScriptEngine} instance or <code>null</code> if this plugin doesn't add a new script engine., +     * @param settings Node settings, +     * @param contexts The contexts that {@link ScriptEngine#compile(String, String, ScriptContext, Map)} may be called with, +    default ScriptEngine getScriptEngine(Settings settings, Collection<ScriptContext<?>> contexts) {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptModule.java, +        }, +        for (ScriptPlugin plugin : scriptPlugins) {]