[+++ b/build.gradle, +    // minimum java 8, +    sourceCompatibility = JavaVersion.VERSION_1_8, +    targetCompatibility = sourceCompatibility, +, +      languageLevel = sourceCompatibility, +++ b/build.gradle, +    // minimum java 8, +    sourceCompatibility = JavaVersion.VERSION_1_8, +    targetCompatibility = sourceCompatibility, +, +      languageLevel = sourceCompatibility, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        globalBuildInfo(project), +        configureRepositories(project), +            if (!JavaVersion.current().isJava8Compatible()) {, +                throw new GradleException('Java 8 or above is required to build Elasticsearch'), +++ b/build.gradle, +    // minimum java 8, +    sourceCompatibility = JavaVersion.VERSION_1_8, +    targetCompatibility = sourceCompatibility, +, +      languageLevel = sourceCompatibility, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        globalBuildInfo(project), +        configureRepositories(project), +            if (!JavaVersion.current().isJava8Compatible()) {, +                throw new GradleException('Java 8 or above is required to build Elasticsearch'), +++ b/core/src/test/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeActionTests.java, +import org.elasticsearch.action.support.ActionFilter;, +    private TransportService transportService;, +        transportService = new TransportService(transport, THREAD_POOL);, +                new ActionFilters(new HashSet<ActionFilter>()),, +                .addGlobalBlock(new ClusterBlock(1, "", false, true, RestStatus.SERVICE_UNAVAILABLE, ClusterBlockLevel.ALL));, +, +, +            if (shard.currentNodeId() != masterNode.id()) {, +                map.put(shard.currentNodeId(), new ArrayList<ShardRouting>());, +++ b/build.gradle, +    // minimum java 8, +    sourceCompatibility = JavaVersion.VERSION_1_8, +    targetCompatibility = sourceCompatibility, +, +      languageLevel = sourceCompatibility, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        globalBuildInfo(project), +        configureRepositories(project), +            if (!JavaVersion.current().isJava8Compatible()) {, +                throw new GradleException('Java 8 or above is required to build Elasticsearch'), +++ b/core/src/test/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeActionTests.java, +import org.elasticsearch.action.support.ActionFilter;, +    private TransportService transportService;, +        transportService = new TransportService(transport, THREAD_POOL);, +                new ActionFilters(new HashSet<ActionFilter>()),, +                .addGlobalBlock(new ClusterBlock(1, "", false, true, RestStatus.SERVICE_UNAVAILABLE, ClusterBlockLevel.ALL));, +, +, +            if (shard.currentNodeId() != masterNode.id()) {, +                map.put(shard.currentNodeId(), new ArrayList<ShardRouting>());, +++ b/core/src/test/java/org/elasticsearch/action/support/master/IndexingMasterFailoverIT.java, +                .put("transport.host", "127.0.0.1") // only bind on one IF we use v4 here by default, +++ b/build.gradle, +    // minimum java 8, +    sourceCompatibility = JavaVersion.VERSION_1_8, +    targetCompatibility = sourceCompatibility, +, +      languageLevel = sourceCompatibility, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        globalBuildInfo(project), +        configureRepositories(project), +            if (!JavaVersion.current().isJava8Compatible()) {, +                throw new GradleException('Java 8 or above is required to build Elasticsearch'), +++ b/core/src/test/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeActionTests.java, +import org.elasticsearch.action.support.ActionFilter;, +    private TransportService transportService;, +        transportService = new TransportService(transport, THREAD_POOL);, +                new ActionFilters(new HashSet<ActionFilter>()),, +                .addGlobalBlock(new ClusterBlock(1, "", false, true, RestStatus.SERVICE_UNAVAILABLE, ClusterBlockLevel.ALL));, +, +, +            if (shard.currentNodeId() != masterNode.id()) {, +                map.put(shard.currentNodeId(), new ArrayList<ShardRouting>());, +++ b/core/src/test/java/org/elasticsearch/action/support/master/IndexingMasterFailoverIT.java, +                .put("transport.host", "127.0.0.1") // only bind on one IF we use v4 here by default, +++ b/core/src/test/java/org/elasticsearch/cluster/ClusterInfoServiceIT.java, +            mockTransportService.addDelegate(node, new MockTransportService.DelegateTransport(mockTransportService.original()) {, +++ b/build.gradle, +    // minimum java 8, +    sourceCompatibility = JavaVersion.VERSION_1_8, +    targetCompatibility = sourceCompatibility, +, +      languageLevel = sourceCompatibility, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        globalBuildInfo(project), +        configureRepositories(project), +            if (!JavaVersion.current().isJava8Compatible()) {, +                throw new GradleException('Java 8 or above is required to build Elasticsearch'), +++ b/core/src/test/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeActionTests.java, +import org.elasticsearch.action.support.ActionFilter;, +    private TransportService transportService;]