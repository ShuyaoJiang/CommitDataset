[+++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings, mapperService.documentMapperParser(),, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings, mapperService.documentMapperParser(),, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/repository-url/build.gradle, +forbiddenApisTest {, +    // we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +    bundledSignatures -= 'jdk-non-portable', +    bundledSignatures += 'jdk-internal', +}, +, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings, mapperService.documentMapperParser(),, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT))]