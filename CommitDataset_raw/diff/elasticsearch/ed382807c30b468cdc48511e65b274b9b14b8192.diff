[+++ b/plugin/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import org.elasticsearch.Version;, +                              @Nullable IPFilter ipFilter) {, +                        sslUsage, auditUsage, ipFilterUsage, anonymousUsage));, +            if (in.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older send its usage, so read the map and ignore, +                in.readMap();, +            }, +                     Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage) {, +            if (out.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older versions still expected it so send a empty map, +                out.writeMap(Collections.emptyMap());, +            }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import org.elasticsearch.Version;, +                              @Nullable IPFilter ipFilter) {, +                        sslUsage, auditUsage, ipFilterUsage, anonymousUsage));, +            if (in.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older send its usage, so read the map and ignore, +                in.readMap();, +            }, +                     Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage) {, +            if (out.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older versions still expected it so send a empty map, +                out.writeMap(Collections.emptyMap());, +            }, +++ b/plugin/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import org.elasticsearch.Version;, +                              @Nullable IPFilter ipFilter) {, +                        sslUsage, auditUsage, ipFilterUsage, anonymousUsage));, +            if (in.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older send its usage, so read the map and ignore, +                in.readMap();, +            }, +                     Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage) {, +            if (out.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older versions still expected it so send a empty map, +                out.writeMap(Collections.emptyMap());, +            }, +++ b/plugin/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java, +++ b/plugin/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import org.elasticsearch.Version;, +                              @Nullable IPFilter ipFilter) {, +                        sslUsage, auditUsage, ipFilterUsage, anonymousUsage));, +            if (in.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older send its usage, so read the map and ignore, +                in.readMap();, +            }, +                     Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage) {, +            if (out.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older versions still expected it so send a empty map, +                out.writeMap(Collections.emptyMap());, +            }, +++ b/plugin/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java, +++ b/plugin/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java, +++ b/plugin/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +        static String writeFile(Path folder, String name, String content) throws IOException {, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import org.elasticsearch.Version;, +                              @Nullable IPFilter ipFilter) {, +                        sslUsage, auditUsage, ipFilterUsage, anonymousUsage));, +            if (in.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older send its usage, so read the map and ignore, +                in.readMap();, +            }, +                     Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage) {, +            if (out.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older versions still expected it so send a empty map, +                out.writeMap(Collections.emptyMap());, +            }, +++ b/plugin/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java, +++ b/plugin/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java, +++ b/plugin/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +        static String writeFile(Path folder, String name, String content) throws IOException {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/SecurityFeatureSetTests.java, +                rolesStore, roleMappingStore, ipFilter);, +                rolesStore, roleMappingStore, ipFilter);, +                rolesStore, roleMappingStore, ipFilter);, +                realms, rolesStore, roleMappingStore, ipFilter);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/SecurityFeatureSet.java, +import org.elasticsearch.Version;, +                              @Nullable IPFilter ipFilter) {, +                        sslUsage, auditUsage, ipFilterUsage, anonymousUsage));, +            if (in.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older send its usage, so read the map and ignore, +                in.readMap();, +            }, +                     Map<String, Object> ipFilterUsage, Map<String, Object> anonymousUsage) {, +            if (out.getVersion().before(Version.V_6_0_0_alpha3)) {, +                // system key has been removed but older versions still expected it so send a empty map, +                out.writeMap(Collections.emptyMap());, +            }, +++ b/plugin/src/test/java/org/elasticsearch/test/SecurityIntegTestCase.java, +++ b/plugin/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java, +++ b/plugin/src/test/java/org/elasticsearch/xpack/monitoring/test/MonitoringIntegTestCase.java, +        static String writeFile(Path folder, String name, String content) throws IOException {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/SecurityFeatureSetTests.java, +                rolesStore, roleMappingStore, ipFilter);]