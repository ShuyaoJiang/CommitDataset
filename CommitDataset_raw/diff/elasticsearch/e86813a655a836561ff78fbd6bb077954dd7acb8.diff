[+++ b/watcher/src/test/java/org/elasticsearch/watcher/input/search/SearchInputTests.java, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")));, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")), +                        .query(boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}"))));, +++ b/watcher/src/test/java/org/elasticsearch/watcher/input/search/SearchInputTests.java, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")));, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")), +                        .query(boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}"))));, +++ b/watcher/src/test/java/org/elasticsearch/watcher/license/LicenseIntegrationTests.java, +        long throttledCount = docCount(HistoryStore.INDEX_PREFIX + "*", HistoryStore.DOC_TYPE, boolQuery(), +                .must(matchQuery("result.actions.reason", "watcher license expired")), +                .must(termQuery("result.actions.status", "throttled")));, +++ b/watcher/src/test/java/org/elasticsearch/watcher/input/search/SearchInputTests.java, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")));, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")), +                        .query(boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}"))));, +++ b/watcher/src/test/java/org/elasticsearch/watcher/license/LicenseIntegrationTests.java, +        long throttledCount = docCount(HistoryStore.INDEX_PREFIX + "*", HistoryStore.DOC_TYPE, boolQuery(), +                .must(matchQuery("result.actions.reason", "watcher license expired")), +                .must(termQuery("result.actions.status", "throttled")));, +++ b/watcher/src/test/java/org/elasticsearch/watcher/test/integration/BasicWatcherTests.java, +        SearchSourceBuilder searchSourceBuilder = searchSource().query(boolQuery(), +                .must(matchQuery("level", "a")), +                .must(rangeQuery("_timestamp"), +        SearchSourceBuilder searchSourceBuilder = searchSource().query(boolQuery(), +                .must(matchQuery("level", "a")), +                .must(rangeQuery("_timestamp"), +++ b/watcher/src/test/java/org/elasticsearch/watcher/input/search/SearchInputTests.java, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")));, +                boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}")), +                        .query(boolQuery().must(matchQuery("event_type", "a")).must(rangeQuery("_timestamp").from("{{ctx.trigger.scheduled_time}}||-30s").to("{{ctx.trigger.triggered_time}}"))));, +++ b/watcher/src/test/java/org/elasticsearch/watcher/license/LicenseIntegrationTests.java, +        long throttledCount = docCount(HistoryStore.INDEX_PREFIX + "*", HistoryStore.DOC_TYPE, boolQuery(), +                .must(matchQuery("result.actions.reason", "watcher license expired")), +                .must(termQuery("result.actions.status", "throttled")));, +++ b/watcher/src/test/java/org/elasticsearch/watcher/test/integration/BasicWatcherTests.java, +        SearchSourceBuilder searchSourceBuilder = searchSource().query(boolQuery(), +                .must(matchQuery("level", "a")), +                .must(rangeQuery("_timestamp"), +        SearchSourceBuilder searchSourceBuilder = searchSource().query(boolQuery(), +                .must(matchQuery("level", "a")), +                .must(rangeQuery("_timestamp"), +++ b/watcher/src/test/java/org/elasticsearch/watcher/transform/search/SearchTransformTests.java, +        SearchRequest request = Requests.searchRequest("idx").source(searchSource().query(boolQuery(), +                .must(termQuery("value", "{{ctx.payload.value}}"))));, +                termQuery("value", "val_3")), +        SearchSourceBuilder searchSourceBuilder = searchSource().query(boolQuery(), +              .must(matchQuery("event_type", "a")), +              .must(rangeQuery("_timestamp")]