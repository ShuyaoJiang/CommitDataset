[+++ b/dev-tools/smoke_test_rc.py, +from urllib.parse import urlparse, +def wait_for_node_startup(es_dir, timeout=60, header={}):, +    conn = None, +      host, port = get_host_from_ports_file(es_dir), +      conn = HTTPConnection(host=host, port=port, timeout=timeout), +    except IOError as e:, +      if conn:, +def get_host_from_ports_file(es_dir):, +  first_host_with_port = read_fully(os.path.join(es_dir, 'logs/http.ports')).splitlines()[0], +  host = urlparse('http://%s' % first_host_with_port), +  return host.hostname, host.port, +, +    es_dir = os.path.join(tmp_dir, 'elasticsearch-%s' % (release)), +    es_run_path = os.path.join(es_dir, 'bin/elasticsearch'), +    es_plugin_path = os.path.join(es_dir, 'bin/elasticsearch-plugin'), +      es_shield_path = os.path.join(es_dir, 'bin/x-pack/users'), +    print('  Starting elasticsearch deamon from [%s]' % es_dir), +      run('%s; %s -Ees.node.name=smoke_tester -Ees.cluster.name=prepare_release -Ees.script.inline=true -Ees.script.indexed=true -Ees.repositories.url.allowed_urls=http://snapshot.test* %s -Ees.pidfile=%s -Ees.node.portsfile=true', +          % (java_exe(), es_run_path, '-d', os.path.join(es_dir, 'es-smoke.pid'))), +      if not wait_for_node_startup(es_dir, header=headers):, +        logs = read_fully(os.path.join(es_dir, 'logs/prepare_release.log')), +        host,port = get_host_from_ports_file(es_dir), +        conn = HTTPConnection(host=host, port=port, timeout=20), +      pid_path = os.path.join(es_dir, 'es-smoke.pid')]