[+++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported., +     * Determines if cookies are supported for CORS requests., +     * By default cookies are not included in CORS requests but if isCredentialsAllowed returns, +     * true cookies will be added to CORS requests. Setting this value to true will set the, +     * Please note that cookie support needs to be enabled on the client side as well., +     * The client needs to opt-in to send cookies by calling:, +     * The default value for 'withCredentials' is false in which case no cookies are sent., +     * Setting this to true will included cookies in cross origin requests., +     * @return {@code true} if cookies are supported., +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported., +     * Determines if cookies are supported for CORS requests., +     * By default cookies are not included in CORS requests but if isCredentialsAllowed returns, +     * true cookies will be added to CORS requests. Setting this value to true will set the, +     * Please note that cookie support needs to be enabled on the client side as well., +     * The client needs to opt-in to send cookies by calling:, +     * The default value for 'withCredentials' is false in which case no cookies are sent., +     * Setting this to true will included cookies in cross origin requests., +     * @return {@code true} if cookies are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported., +     * Determines if cookies are supported for CORS requests., +     * By default cookies are not included in CORS requests but if isCredentialsAllowed returns, +     * true cookies will be added to CORS requests. Setting this value to true will set the, +     * Please note that cookie support needs to be enabled on the client side as well., +     * The client needs to opt-in to send cookies by calling:, +     * The default value for 'withCredentials' is false in which case no cookies are sent., +     * Setting this to true will included cookies in cross origin requests., +     * @return {@code true} if cookies are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/HttpReadWriteHandler.java, +                         NamedXContentRegistry xContentRegistry, ThreadContext threadContext) {, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, httpRequest, sequence, settings, threadContext);, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, innerRequest, sequence, settings, threadContext);, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported., +     * Determines if cookies are supported for CORS requests., +     * By default cookies are not included in CORS requests but if isCredentialsAllowed returns, +     * true cookies will be added to CORS requests. Setting this value to true will set the, +     * Please note that cookie support needs to be enabled on the client side as well., +     * The client needs to opt-in to send cookies by calling:, +     * The default value for 'withCredentials' is false in which case no cookies are sent., +     * Setting this to true will included cookies in cross origin requests., +     * @return {@code true} if cookies are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/HttpReadWriteHandler.java, +                         NamedXContentRegistry xContentRegistry, ThreadContext threadContext) {, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, httpRequest, sequence, settings, threadContext);, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, innerRequest, sequence, settings, threadContext);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/NioHttpChannel.java, +                   HttpHandlingSettings settings, ThreadContext threadContext) {, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported., +     * Determines if cookies are supported for CORS requests., +     * By default cookies are not included in CORS requests but if isCredentialsAllowed returns, +     * true cookies will be added to CORS requests. Setting this value to true will set the, +     * Please note that cookie support needs to be enabled on the client side as well., +     * The client needs to opt-in to send cookies by calling:, +     * The default value for 'withCredentials' is false in which case no cookies are sent., +     * Setting this to true will included cookies in cross origin requests., +     * @return {@code true} if cookies are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/HttpReadWriteHandler.java, +                         NamedXContentRegistry xContentRegistry, ThreadContext threadContext) {, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, httpRequest, sequence, settings, threadContext);, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, innerRequest, sequence, settings, threadContext);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/NioHttpChannel.java, +                   HttpHandlingSettings settings, ThreadContext threadContext) {, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/NioHttpServerTransport.java, +import org.elasticsearch.http.AbstractHttpServerTransport;, +                httpHandlingSettings, xContentRegistry, threadPool.getThreadContext());, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/cors/Netty4CorsConfig.java, +     * Determines whether a wildcard origin, '*', is supported., +     * Determines if cookies are supported for CORS requests., +     * By default cookies are not included in CORS requests but if isCredentialsAllowed returns, +     * true cookies will be added to CORS requests. Setting this value to true will set the, +     * Please note that cookie support needs to be enabled on the client side as well., +     * The client needs to opt-in to send cookies by calling:, +     * The default value for 'withCredentials' is false in which case no cookies are sent., +     * Setting this to true will included cookies in cross origin requests., +     * @return {@code true} if cookies are supported., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final RuleBasedBreakIterator breakers[] = new RuleBasedBreakIterator[UScript.CODE_LIMIT];, +    private RuleBasedBreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/HttpReadWriteHandler.java, +                         NamedXContentRegistry xContentRegistry, ThreadContext threadContext) {, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, httpRequest, sequence, settings, threadContext);, +                    innerChannel = new NioHttpChannel(nioChannel, bigArrays, innerRequest, sequence, settings, threadContext);, +++ b/plugins/transport-nio/src/main/java/org/elasticsearch/http/nio/NioHttpChannel.java, +                   HttpHandlingSettings settings, ThreadContext threadContext) {]