[+++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoPolygonQueryBuilder.java, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +        builder.field(COERCE_FIELD.getPreferredName(), GeoValidationMethod.isCoerce(validationMethod));, +        builder.field(IGNORE_MALFORMED_FIELD.getPreferredName(),, +                GeoValidationMethod.isIgnoreMalformed(validationMethod));, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceRangeQueryBuilder.java, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoPolygonQueryBuilder.java, +    private static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +    private static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +        builder.field(COERCE_FIELD.getPreferredName(), GeoValidationMethod.isCoerce(validationMethod));, +        builder.field(IGNORE_MALFORMED_FIELD.getPreferredName(),, +                GeoValidationMethod.isIgnoreMalformed(validationMethod));, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +    public static final boolean DEFAULT_COERCE = false;, +    public static final boolean DEFAULT_IGNORE_MALFORMED = false;, +    public static final ParseField UNIT_FIELD = new ParseField("unit");, +    public static final ParseField DISTANCE_TYPE_FIELD = new ParseField("distance_type");, +    public static final ParseField COERCE_FIELD = new ParseField("coerce", "normalize");, +    public static final ParseField IGNORE_MALFORMED_FIELD = new ParseField("ignore_malformed");, +    public static final ParseField SORTMODE_FIELD = new ParseField("mode", "sort_mode");, +    public static final ParseField NESTED_PATH_FIELD = new ParseField("nested_path");, +    public static final ParseField NESTED_FILTER_FIELD = new ParseField("nested_filter");, +    public static final ParseField REVERSE_FORBIDDEN = new ParseField("reverse");, +    // TODO switch to GeoValidationMethod enum, +    private boolean coerce = DEFAULT_COERCE;, +    private boolean ignoreMalformed = DEFAULT_IGNORE_MALFORMED;, +        this.coerce = original.coerce;, +        this.ignoreMalformed = original.ignoreMalformed;, +        coerce = in.readBoolean();, +        ignoreMalformed =in.readBoolean();, +        out.writeBoolean(coerce);, +        out.writeBoolean(ignoreMalformed);, +    public GeoDistanceSortBuilder coerce(boolean coerce) {, +        this.coerce = coerce;, +        return this;, +    }, +, +    public boolean coerce() {, +        return this.coerce;, +    }, +, +    public GeoDistanceSortBuilder ignoreMalformed(boolean ignoreMalformed) {, +        if (coerce == false) {, +            this.ignoreMalformed = ignoreMalformed;, +        }, +        return this;, +    }, +, +    public boolean ignoreMalformed() {, +        return this.ignoreMalformed;, +    }, +, +        builder.field(COERCE_FIELD.getPreferredName(), coerce);, +        builder.field(IGNORE_MALFORMED_FIELD.getPreferredName(), ignoreMalformed);, +                Objects.equals(coerce, other.coerce) &&, +                Objects.equals(ignoreMalformed, other.ignoreMalformed);, +                this.unit, this.sortMode, this.order, this.nestedFilter, this.nestedPath, this.coerce, this.ignoreMalformed);, +        boolean coerce = GeoDistanceSortBuilder.DEFAULT_COERCE;, +        boolean ignoreMalformed = GeoDistanceSortBuilder.DEFAULT_IGNORE_MALFORMED;, +        result.coerce(coerce);, +        result.ignoreMalformed(ignoreMalformed);, +        if (!indexCreatedBeforeV2_0 && !ignoreMalformed) {, +        if (coerce) {, +                GeoUtils.normalizePoint(point, coerce, coerce);]