[+++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +        return fromOptions(ignoreUnavailable, allowNoIndices, expandToOpenIndices, expandToClosedIndices, true, false, false);, +        return fromOptions(ignoreUnavailable, allowNoIndices, expandToOpenIndices, expandToClosedIndices, defaultOptions.allowAliasesToMultipleIndices(), defaultOptions.forbidClosedIndices(), defaultOptions.ignoreAliases());, +                defaultSettings.forbidClosedIndices(),, +                defaultSettings.ignoreAliases(), +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +        return fromOptions(ignoreUnavailable, allowNoIndices, expandToOpenIndices, expandToClosedIndices, true, false, false);, +        return fromOptions(ignoreUnavailable, allowNoIndices, expandToOpenIndices, expandToClosedIndices, defaultOptions.allowAliasesToMultipleIndices(), defaultOptions.forbidClosedIndices(), defaultOptions.ignoreAliases());, +                defaultSettings.forbidClosedIndices(),, +                defaultSettings.ignoreAliases(), +++ b/core/src/test/java/org/elasticsearch/action/support/IndicesOptionsTests.java, +        IndicesOptions indicesOptions = IndicesOptions.fromOptions(ignoreUnavailable, allowNoIndices,expandToOpenIndices,, +                expandToClosedIndices, allowAliasesToMultipleIndices, forbidClosedIndices, ignoreAliases);, +, +    public void testFromOptionsWithDefaultOptions() {, +        boolean ignoreUnavailable = randomBoolean();, +        boolean allowNoIndices = randomBoolean();, +        boolean expandToOpenIndices = randomBoolean();, +        boolean expandToClosedIndices = randomBoolean();, +, +        IndicesOptions defaultOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(),, +                randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());, +, +        IndicesOptions indicesOptions = IndicesOptions.fromOptions(ignoreUnavailable, allowNoIndices,expandToOpenIndices,, +                expandToClosedIndices, defaultOptions);, +, +        assertEquals(ignoreUnavailable, indicesOptions.ignoreUnavailable());, +        assertEquals(allowNoIndices, indicesOptions.allowNoIndices());, +        assertEquals(expandToOpenIndices, indicesOptions.expandWildcardsOpen());, +        assertEquals(expandToClosedIndices, indicesOptions.expandWildcardsClosed());, +        assertEquals(defaultOptions.allowAliasesToMultipleIndices(), indicesOptions.allowAliasesToMultipleIndices());, +        assertEquals(defaultOptions.forbidClosedIndices(), indicesOptions.forbidClosedIndices());, +        assertEquals(defaultOptions.ignoreAliases(), indicesOptions.ignoreAliases());, +    }, +, +    public void testFromParameters() {, +        boolean expandWildcardsOpen = randomBoolean();, +        boolean expandWildcardsClosed = randomBoolean();, +        String expandWildcardsString;, +        if (expandWildcardsOpen && expandWildcardsClosed) {, +            if (randomBoolean()) {, +                expandWildcardsString = "open,closed";, +            } else {, +                expandWildcardsString = "all";, +            }, +        } else if (expandWildcardsOpen) {, +            expandWildcardsString = "open";, +        } else if (expandWildcardsClosed) {, +            expandWildcardsString = "closed";, +        } else {, +            expandWildcardsString = "none";, +        }, +        boolean ignoreUnavailable = randomBoolean();, +        String ignoreUnavailableString = Boolean.toString(ignoreUnavailable);, +        boolean allowNoIndices = randomBoolean();, +        String allowNoIndicesString = Boolean.toString(allowNoIndices);, +, +        IndicesOptions defaultOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(),, +                randomBoolean(), randomBoolean(), randomBoolean());, +, +        IndicesOptions updatedOptions = IndicesOptions.fromParameters(expandWildcardsString, ignoreUnavailableString,, +                allowNoIndicesString, defaultOptions);, +, +        assertEquals(expandWildcardsOpen, updatedOptions.expandWildcardsOpen());, +        assertEquals(expandWildcardsClosed, updatedOptions.expandWildcardsClosed());, +        assertEquals(ignoreUnavailable, updatedOptions.ignoreUnavailable());, +        assertEquals(allowNoIndices, updatedOptions.allowNoIndices());, +        assertEquals(defaultOptions.allowAliasesToMultipleIndices(), updatedOptions.allowAliasesToMultipleIndices());, +        assertEquals(defaultOptions.forbidClosedIndices(), updatedOptions.forbidClosedIndices());, +        assertEquals(defaultOptions.ignoreAliases(), updatedOptions.ignoreAliases());, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +        return fromOptions(ignoreUnavailable, allowNoIndices, expandToOpenIndices, expandToClosedIndices, true, false, false);, +        return fromOptions(ignoreUnavailable, allowNoIndices, expandToOpenIndices, expandToClosedIndices, defaultOptions.allowAliasesToMultipleIndices(), defaultOptions.forbidClosedIndices(), defaultOptions.ignoreAliases());, +                defaultSettings.forbidClosedIndices(),, +                defaultSettings.ignoreAliases(), +++ b/core/src/test/java/org/elasticsearch/action/support/IndicesOptionsTests.java, +        IndicesOptions indicesOptions = IndicesOptions.fromOptions(ignoreUnavailable, allowNoIndices,expandToOpenIndices,, +                expandToClosedIndices, allowAliasesToMultipleIndices, forbidClosedIndices, ignoreAliases);, +, +    public void testFromOptionsWithDefaultOptions() {, +        boolean ignoreUnavailable = randomBoolean();, +        boolean allowNoIndices = randomBoolean();, +        boolean expandToOpenIndices = randomBoolean();, +        boolean expandToClosedIndices = randomBoolean();, +, +        IndicesOptions defaultOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(),, +                randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());, +, +        IndicesOptions indicesOptions = IndicesOptions.fromOptions(ignoreUnavailable, allowNoIndices,expandToOpenIndices,, +                expandToClosedIndices, defaultOptions);, +, +        assertEquals(ignoreUnavailable, indicesOptions.ignoreUnavailable());, +        assertEquals(allowNoIndices, indicesOptions.allowNoIndices());, +        assertEquals(expandToOpenIndices, indicesOptions.expandWildcardsOpen());, +        assertEquals(expandToClosedIndices, indicesOptions.expandWildcardsClosed());, +        assertEquals(defaultOptions.allowAliasesToMultipleIndices(), indicesOptions.allowAliasesToMultipleIndices());, +        assertEquals(defaultOptions.forbidClosedIndices(), indicesOptions.forbidClosedIndices());, +        assertEquals(defaultOptions.ignoreAliases(), indicesOptions.ignoreAliases());, +    }, +]