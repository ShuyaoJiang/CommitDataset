[+++ b/src/test/java/org/elasticsearch/index/fielddata/DisabledFieldDataFormatTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class DisabledFieldDataFormatTests extends ElasticsearchSingleNodeTest {, +        createIndex("test", ImmutableSettings.EMPTY, "type", "s", "type=string");, +        client().admin().indices().prepareRefresh().execute().actionGet();, +        client().admin().indices().prepareRefresh().execute().actionGet();, +++ b/src/test/java/org/elasticsearch/index/fielddata/DisabledFieldDataFormatTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class DisabledFieldDataFormatTests extends ElasticsearchSingleNodeTest {, +        createIndex("test", ImmutableSettings.EMPTY, "type", "s", "type=string");, +        client().admin().indices().prepareRefresh().execute().actionGet();, +        client().admin().indices().prepareRefresh().execute().actionGet();, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +import org.elasticsearch.client.Client;, +        assertAcked(client().admin().indices().prepareDelete("*").get());, +        MetaData metaData = client().admin().cluster().prepareState().get().getState().getMetaData();, +     * Returns a client to the single-node cluster., +     */, +    public static Client client() {, +        return Holder.NODE.client();, +    }, +, +    /**, +        return createIndex(index, settings, null, (XContentBuilder) null);, +        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings);, +        return createIndex(index, createIndexRequestBuilder);, +    }, +, +    /**, +     * Create a new index on the singleton node with the provided index settings., +     */, +    protected static IndexService createIndex(String index, Settings settings, String type, Object... mappings) {, +        CreateIndexRequestBuilder createIndexRequestBuilder = client().admin().indices().prepareCreate(index).setSettings(settings);, +        if (type != null && mappings != null) {, +            createIndexRequestBuilder.addMapping(type, mappings);, +        }, +        return createIndex(index, createIndexRequestBuilder);, +    }, +, +    private static IndexService createIndex(String index, CreateIndexRequestBuilder createIndexRequestBuilder) {, +        ClusterHealthResponse health = client().admin().cluster()]