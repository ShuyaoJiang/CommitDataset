[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/mapping/create/CreateMappingRequest.java, +import org.elasticsearch.util.TimeValue;, +import java.util.concurrent.TimeUnit;, +import static org.elasticsearch.util.TimeValue.*;, +    private TimeValue timeout = new TimeValue(10, TimeUnit.SECONDS);, +, +    String type() {, +    public CreateMappingRequest type(String mappingType) {, +    TimeValue timeout() {, +        return timeout;, +    }, +, +    public CreateMappingRequest timeout(TimeValue timeout) {, +        this.timeout = timeout;, +        return this;, +    }, +, +        timeout = readTimeValue(in);, +        timeout.writeTo(out);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/mapping/create/CreateMappingRequest.java, +import org.elasticsearch.util.TimeValue;, +import java.util.concurrent.TimeUnit;, +import static org.elasticsearch.util.TimeValue.*;, +    private TimeValue timeout = new TimeValue(10, TimeUnit.SECONDS);, +, +    String type() {, +    public CreateMappingRequest type(String mappingType) {, +    TimeValue timeout() {, +        return timeout;, +    }, +, +    public CreateMappingRequest timeout(TimeValue timeout) {, +        this.timeout = timeout;, +        return this;, +    }, +, +        timeout = readTimeValue(in);, +        timeout.writeTo(out);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/mapping/create/TransportCreateMappingAction.java, +                        metaDataService.addMapping(indices, request.type(), request.mappingSource(), request.timeout());, +                metaDataService.addMapping(indices, request.type(), request.mappingSource(), request.timeout());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/mapping/create/CreateMappingRequest.java, +import org.elasticsearch.util.TimeValue;, +import java.util.concurrent.TimeUnit;, +import static org.elasticsearch.util.TimeValue.*;, +    private TimeValue timeout = new TimeValue(10, TimeUnit.SECONDS);, +, +    String type() {, +    public CreateMappingRequest type(String mappingType) {, +    TimeValue timeout() {, +        return timeout;, +    }, +, +    public CreateMappingRequest timeout(TimeValue timeout) {, +        this.timeout = timeout;, +        return this;, +    }, +, +        timeout = readTimeValue(in);, +        timeout.writeTo(out);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/mapping/create/TransportCreateMappingAction.java, +                        metaDataService.addMapping(indices, request.type(), request.mappingSource(), request.timeout());, +                metaDataService.addMapping(indices, request.type(), request.mappingSource(), request.timeout());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.action.index.NodeMappingCreatedAction;, +        bind(NodeMappingCreatedAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/mapping/create/CreateMappingRequest.java, +import org.elasticsearch.util.TimeValue;, +import java.util.concurrent.TimeUnit;, +import static org.elasticsearch.util.TimeValue.*;, +    private TimeValue timeout = new TimeValue(10, TimeUnit.SECONDS);, +, +    String type() {, +    public CreateMappingRequest type(String mappingType) {, +    TimeValue timeout() {, +        return timeout;, +    }, +, +    public CreateMappingRequest timeout(TimeValue timeout) {, +        this.timeout = timeout;, +        return this;, +    }, +, +        timeout = readTimeValue(in);, +        timeout.writeTo(out);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/mapping/create/TransportCreateMappingAction.java, +                        metaDataService.addMapping(indices, request.type(), request.mappingSource(), request.timeout());, +                metaDataService.addMapping(indices, request.type(), request.mappingSource(), request.timeout());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +import org.elasticsearch.cluster.action.index.NodeMappingCreatedAction;, +        bind(NodeMappingCreatedAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/action/index/NodeMappingCreatedAction.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at]