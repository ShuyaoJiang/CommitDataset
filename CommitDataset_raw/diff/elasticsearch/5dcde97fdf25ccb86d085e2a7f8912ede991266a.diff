[+++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/rule/Rule.java, +/**, + * Rules that apply transformation to a tree. In addition, performs, + * type filtering so that a rule that the rule implementation doesn't, + * have to manually filter., + * <p>, + * Rules <strong>could</strong> could be built as lambdas but most, + * rules are much larger so we keep them as full blown subclasses., + */, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/rule/Rule.java, +/**, + * Rules that apply transformation to a tree. In addition, performs, + * type filtering so that a rule that the rule implementation doesn't, + * have to manually filter., + * <p>, + * Rules <strong>could</strong> could be built as lambdas but most, + * rules are much larger so we keep them as full blown subclasses., + */, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/rule/RuleExecutor.java, +                log.trace("Batch {} applied took {}\n{}",, +                    batch.name, TimeValue.timeValueMillis(batchDuration), NodeUtils.diffString(before, after));, +        if (false == currentPlan.equals(plan) && log.isDebugEnabled()) {, +            log.debug("Tree transformation took {}\n{}",, +                TimeValue.timeValueMillis(totalDuration), NodeUtils.diffString(plan, currentPlan));]