[+++ b/server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.elasticsearch.ElasticsearchParseException;, +     *  @throws IllegalArgumentException if {@code value} cannot be converted to the expected data type or if the field is not searchable, +     *      due to the way it is configured (eg. not indexed), +     *  @throws ElasticsearchParseException if {@code value} cannot be converted to the expected data type, +     *  @throws UnsupportedOperationException if the field is not searchable regardless of options, +     *  @throws QueryShardException if the field is not searchable regardless of options, +     */, +    // TODO: Standardize exception types, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.elasticsearch.ElasticsearchParseException;, +     *  @throws IllegalArgumentException if {@code value} cannot be converted to the expected data type or if the field is not searchable, +     *      due to the way it is configured (eg. not indexed), +     *  @throws ElasticsearchParseException if {@code value} cannot be converted to the expected data type, +     *  @throws UnsupportedOperationException if the field is not searchable regardless of options, +     *  @throws QueryShardException if the field is not searchable regardless of options, +     */, +    // TODO: Standardize exception types, +++ b/server/src/main/java/org/elasticsearch/index/search/QueryParserHelper.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.index.query.QueryShardException;, +     *                       If false, only searchable field types are added., +     *                       If false, only searchable field types are added., +            if (acceptMetadataField == false && fieldType.name().startsWith("_")) {, +                // Ignore metadata fields, +            if (acceptAllTypes == false) {, +                try {, +                    fieldType.termQuery("", context);, +                } catch (QueryShardException |UnsupportedOperationException e) {, +                    // field type is never searchable with term queries (eg. geo point): ignore, +                } catch (IllegalArgumentException |ElasticsearchParseException e) {, +                    // other exceptions are parsing errors or not indexed fields: keep, +                }, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.elasticsearch.ElasticsearchParseException;, +     *  @throws IllegalArgumentException if {@code value} cannot be converted to the expected data type or if the field is not searchable, +     *      due to the way it is configured (eg. not indexed), +     *  @throws ElasticsearchParseException if {@code value} cannot be converted to the expected data type, +     *  @throws UnsupportedOperationException if the field is not searchable regardless of options, +     *  @throws QueryShardException if the field is not searchable regardless of options, +     */, +    // TODO: Standardize exception types, +++ b/server/src/main/java/org/elasticsearch/index/search/QueryParserHelper.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.index.query.QueryShardException;, +     *                       If false, only searchable field types are added., +     *                       If false, only searchable field types are added., +            if (acceptMetadataField == false && fieldType.name().startsWith("_")) {, +                // Ignore metadata fields, +            if (acceptAllTypes == false) {, +                try {, +                    fieldType.termQuery("", context);, +                } catch (QueryShardException |UnsupportedOperationException e) {, +                    // field type is never searchable with term queries (eg. geo point): ignore, +                } catch (IllegalArgumentException |ElasticsearchParseException e) {, +                    // other exceptions are parsing errors or not indexed fields: keep, +                }, +++ b/server/src/test/java/org/elasticsearch/search/query/QueryStringIT.java, +        // The wildcard field matches aliases for both a text and geo_point field., +        // By default, the geo_point field should be ignored when building the query., +++ b/server/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +import org.elasticsearch.ElasticsearchParseException;, +     *  @throws IllegalArgumentException if {@code value} cannot be converted to the expected data type or if the field is not searchable, +     *      due to the way it is configured (eg. not indexed), +     *  @throws ElasticsearchParseException if {@code value} cannot be converted to the expected data type, +     *  @throws UnsupportedOperationException if the field is not searchable regardless of options, +     *  @throws QueryShardException if the field is not searchable regardless of options, +     */, +    // TODO: Standardize exception types, +++ b/server/src/main/java/org/elasticsearch/index/search/QueryParserHelper.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.index.query.QueryShardException;, +     *                       If false, only searchable field types are added., +     *                       If false, only searchable field types are added., +            if (acceptMetadataField == false && fieldType.name().startsWith("_")) {, +                // Ignore metadata fields, +            if (acceptAllTypes == false) {, +                try {, +                    fieldType.termQuery("", context);, +                } catch (QueryShardException |UnsupportedOperationException e) {, +                    // field type is never searchable with term queries (eg. geo point): ignore, +                } catch (IllegalArgumentException |ElasticsearchParseException e) {, +                    // other exceptions are parsing errors or not indexed fields: keep, +                }, +++ b/server/src/test/java/org/elasticsearch/search/query/QueryStringIT.java, +        // The wildcard field matches aliases for both a text and geo_point field., +        // By default, the geo_point field should be ignored when building the query., +++ b/server/src/test/resources/org/elasticsearch/search/query/all-query-index.json, +        "f_geop_alias": {, +          "type": "alias",, +          "path": "f_geop", +        },]