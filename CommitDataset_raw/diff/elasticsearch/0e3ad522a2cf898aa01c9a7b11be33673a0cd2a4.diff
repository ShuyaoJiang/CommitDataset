[+++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +import org.elasticsearch.index.query.Rewriteable;, +        ActionListener<SearchSourceBuilder> rewriteListener = ActionListener.wrap(source -> {, +            if (source != searchRequest.source()) {, +                // only set it if it changed - we don't allow null values to be set but it might be already null be we want to catch, +                // situations when it possible due to a bug changes to null, +                searchRequest.source(source);, +            }, +                remoteClusterService.collectSearchShards(searchRequest.indicesOptions(), searchRequest.preference(),, +                    searchRequest.routing(), remoteClusterIndices, ActionListener.wrap((searchShardsResponses) -> {, +                        executeSearch((SearchTask) task, timeProvider, searchRequest, localIndices, remoteClusterIndices,, +                            remoteShardIterators, clusterNodeLookup, clusterState, remoteAliasFilters, listener, numNodesInvovled);, +        }, listener::onFailure);, +        if (searchRequest.source() == null) {, +            rewriteListener.onResponse(searchRequest.source());, +        } else {, +            Rewriteable.rewriteAndFetch(searchRequest.source(), searchService.getRewriteContext(timeProvider::getAbsoluteStartMillis),, +                rewriteListener);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +import org.elasticsearch.index.query.Rewriteable;, +        ActionListener<SearchSourceBuilder> rewriteListener = ActionListener.wrap(source -> {, +            if (source != searchRequest.source()) {, +                // only set it if it changed - we don't allow null values to be set but it might be already null be we want to catch, +                // situations when it possible due to a bug changes to null, +                searchRequest.source(source);, +            }, +                remoteClusterService.collectSearchShards(searchRequest.indicesOptions(), searchRequest.preference(),, +                    searchRequest.routing(), remoteClusterIndices, ActionListener.wrap((searchShardsResponses) -> {, +                        executeSearch((SearchTask) task, timeProvider, searchRequest, localIndices, remoteClusterIndices,, +                            remoteShardIterators, clusterNodeLookup, clusterState, remoteAliasFilters, listener, numNodesInvovled);, +        }, listener::onFailure);, +        if (searchRequest.source() == null) {, +            rewriteListener.onResponse(searchRequest.source());, +        } else {, +            Rewriteable.rewriteAndFetch(searchRequest.source(), searchService.getRewriteContext(timeProvider::getAbsoluteStartMillis),, +                rewriteListener);, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +    /**, +     * Returns a new {@link QueryRewriteContext} with the given <tt>now</tt> provider, +     */, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +import org.elasticsearch.index.query.Rewriteable;, +        ActionListener<SearchSourceBuilder> rewriteListener = ActionListener.wrap(source -> {, +            if (source != searchRequest.source()) {, +                // only set it if it changed - we don't allow null values to be set but it might be already null be we want to catch, +                // situations when it possible due to a bug changes to null, +                searchRequest.source(source);, +            }, +                remoteClusterService.collectSearchShards(searchRequest.indicesOptions(), searchRequest.preference(),, +                    searchRequest.routing(), remoteClusterIndices, ActionListener.wrap((searchShardsResponses) -> {, +                        executeSearch((SearchTask) task, timeProvider, searchRequest, localIndices, remoteClusterIndices,, +                            remoteShardIterators, clusterNodeLookup, clusterState, remoteAliasFilters, listener, numNodesInvovled);, +        }, listener::onFailure);, +        if (searchRequest.source() == null) {, +            rewriteListener.onResponse(searchRequest.source());, +        } else {, +            Rewriteable.rewriteAndFetch(searchRequest.source(), searchService.getRewriteContext(timeProvider::getAbsoluteStartMillis),, +                rewriteListener);, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +    /**, +     * Returns a new {@link QueryRewriteContext} with the given <tt>now</tt> provider, +     */, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import java.util.function.LongSupplier;, +        // we also do rewrite on the coordinating node (TransportSearchService) but we also need to do it here for BWC as well as, +        // AliasFilters that might need to be rewritten. These are edge-cases but we are every efficient doing the rewrite here so it's not, +        // adding a lot of overhead, +, +    /**, +     * Returns a new {@link QueryRewriteContext} with the given <tt>now</tt> provider, +     */, +    public QueryRewriteContext getRewriteContext(LongSupplier nowInMillis) {, +        return indicesService.getRewriteContext(nowInMillis);, +    }, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +import org.elasticsearch.index.query.Rewriteable;, +        ActionListener<SearchSourceBuilder> rewriteListener = ActionListener.wrap(source -> {, +            if (source != searchRequest.source()) {, +                // only set it if it changed - we don't allow null values to be set but it might be already null be we want to catch, +                // situations when it possible due to a bug changes to null, +                searchRequest.source(source);, +            }, +                remoteClusterService.collectSearchShards(searchRequest.indicesOptions(), searchRequest.preference(),, +                    searchRequest.routing(), remoteClusterIndices, ActionListener.wrap((searchShardsResponses) -> {, +                        executeSearch((SearchTask) task, timeProvider, searchRequest, localIndices, remoteClusterIndices,, +                            remoteShardIterators, clusterNodeLookup, clusterState, remoteAliasFilters, listener, numNodesInvovled);, +        }, listener::onFailure);, +        if (searchRequest.source() == null) {, +            rewriteListener.onResponse(searchRequest.source());, +        } else {, +            Rewriteable.rewriteAndFetch(searchRequest.source(), searchService.getRewriteContext(timeProvider::getAbsoluteStartMillis),, +                rewriteListener);, +        }, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +    /**, +     * Returns a new {@link QueryRewriteContext} with the given <tt>now</tt> provider, +     */]