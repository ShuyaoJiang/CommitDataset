[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +            throw new IllegalStateException("unable to upgrade the mappings for the index [" + indexMetaData.getIndex() + "], reason: [" + ex.getMessage() + "]", ex);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +            throw new IllegalStateException("unable to upgrade the mappings for the index [" + indexMetaData.getIndex() + "], reason: [" + ex.getMessage() + "]", ex);, +++ b/core/src/main/java/org/elasticsearch/common/Base64.java, +            assert false : ex.getMessage();, +            assert false : ex.getMessage();, +            assert false : "IOExceptions only come from GZipping, which is turned off: " + ex.getMessage();, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +            throw new IllegalStateException("unable to upgrade the mappings for the index [" + indexMetaData.getIndex() + "], reason: [" + ex.getMessage() + "]", ex);, +++ b/core/src/main/java/org/elasticsearch/common/Base64.java, +            assert false : ex.getMessage();, +            assert false : ex.getMessage();, +            assert false : "IOExceptions only come from GZipping, which is turned off: " + ex.getMessage();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +            throw new IllegalStateException("unable to upgrade the mappings for the index [" + indexMetaData.getIndex() + "], reason: [" + ex.getMessage() + "]", ex);, +++ b/core/src/main/java/org/elasticsearch/common/Base64.java, +            assert false : ex.getMessage();, +            assert false : ex.getMessage();, +            assert false : "IOExceptions only come from GZipping, which is turned off: " + ex.getMessage();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/multibindings/Multibinder.java, +                new Message(emptyList(), npe.toString(), npe)));, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +            throw new IllegalStateException("unable to upgrade the mappings for the index [" + indexMetaData.getIndex() + "], reason: [" + ex.getMessage() + "]", ex);, +++ b/core/src/main/java/org/elasticsearch/common/Base64.java, +            assert false : ex.getMessage();, +            assert false : ex.getMessage();, +            assert false : "IOExceptions only come from GZipping, which is turned off: " + ex.getMessage();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/multibindings/Multibinder.java, +                new Message(emptyList(), npe.toString(), npe)));, +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/Message.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +            throw new IllegalStateException("unable to upgrade the mappings for the index [" + indexMetaData.getIndex() + "], reason: [" + ex.getMessage() + "]", ex);, +++ b/core/src/main/java/org/elasticsearch/common/Base64.java, +            assert false : ex.getMessage();, +            assert false : ex.getMessage();, +            assert false : "IOExceptions only come from GZipping, which is turned off: " + ex.getMessage();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/multibindings/Multibinder.java, +                new Message(emptyList(), npe.toString(), npe)));, +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/Message.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +            handleMasterGone(node, "shut_down");, +    private void handleMasterGone(final DiscoveryNode masterNode, final String reason) {, +        logger.info("master_left [{}], reason [{}]", masterNode, reason);, +        public void onMasterFailure(DiscoveryNode masterNode, String reason) {, +            handleMasterGone(masterNode, reason);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java, +            logger.warn("unable to install syscall filter: " + t.getMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +            throw new IllegalStateException("unable to upgrade the mappings for the index [" + indexMetaData.getIndex() + "], reason: [" + ex.getMessage() + "]", ex);, +++ b/core/src/main/java/org/elasticsearch/common/Base64.java, +            assert false : ex.getMessage();, +            assert false : ex.getMessage();, +            assert false : "IOExceptions only come from GZipping, which is turned off: " + ex.getMessage();, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/multibindings/Multibinder.java, +                new Message(emptyList(), npe.toString(), npe)));, +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/Message.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +            handleMasterGone(node, "shut_down");, +    private void handleMasterGone(final DiscoveryNode masterNode, final String reason) {, +        logger.info("master_left [{}], reason [{}]", masterNode, reason);, +        public void onMasterFailure(DiscoveryNode masterNode, String reason) {, +            handleMasterGone(masterNode, reason);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        void onMasterFailure(DiscoveryNode masterNode, String reason);, +            notifyMasterFailure(masterNode, "failed to perform initial connect [" + e.getMessage() + "]");, +                    notifyMasterFailure(masterNode, "transport disconnected (with verified connect)");, +                notifyMasterFailure(node, "transport disconnected");, +    private void notifyMasterFailure(final DiscoveryNode masterNode, final String reason) {, +                        listener.onMasterFailure(masterNode, reason);, +                                        notifyMasterFailure(masterToPing, "no longer master");, +                                        notifyMasterFailure(masterToPing, "not master");]