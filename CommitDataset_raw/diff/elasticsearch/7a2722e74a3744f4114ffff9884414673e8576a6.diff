[+++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone, +            // conversion anyway and thus the long value is relevant, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone, +            // conversion anyway and thus the long value is relevant, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/QueryInitResponse.java, +    public QueryInitResponse(long serverTimeQueryReceived, long serverTimeResponseSent, String requestId, List<ColumnInfo> columns,, +            Payload data) {, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone, +            // conversion anyway and thus the long value is relevant, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/QueryInitResponse.java, +    public QueryInitResponse(long serverTimeQueryReceived, long serverTimeResponseSent, String requestId, List<ColumnInfo> columns,, +            Payload data) {, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +                        if (d.print != null) {, +                            d.print.close();, +                        }, +            if (d.print != null) {, +                d.print.close();, +            }, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone, +            // conversion anyway and thus the long value is relevant, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/QueryInitResponse.java, +    public QueryInitResponse(long serverTimeQueryReceived, long serverTimeResponseSent, String requestId, List<ColumnInfo> columns,, +            Payload data) {, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +                        if (d.print != null) {, +                            d.print.close();, +                        }, +            if (d.print != null) {, +                d.print.close();, +            }, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConnection.java, +/**, + * Implementation of {@link Connection} for Elasticsearch., + */, +    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability), +            throws SQLException {, +    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability), +            throws SQLException {, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone, +            // conversion anyway and thus the long value is relevant, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/QueryInitResponse.java, +    public QueryInitResponse(long serverTimeQueryReceived, long serverTimeResponseSent, String requestId, List<ColumnInfo> columns,, +            Payload data) {, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +                        if (d.print != null) {, +                            d.print.close();, +                        }, +            if (d.print != null) {, +                d.print.close();, +            }, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcConnection.java, +/**, + * Implementation of {@link Connection} for Elasticsearch., + */, +    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability), +            throws SQLException {, +    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability), +            throws SQLException {, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcDatabaseMetaData.java, +/**, + * Implementation of {@link DatabaseMetaData} for Elasticsearch. Draws inspiration, + * from <a href="https://www.postgresql.org/docs/9.0/static/information-schema.html">, + * PostgreSQL</a>. Virtual/synthetic tables are not supported so the client returns, + * empty data instead of creating a query., + */, +    public ResultSet getProcedureColumns(String catalog, String schemaPattern, String procedureNamePattern, String columnNamePattern), +            throws SQLException {, +    public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern), +            throws SQLException {, +        List<MetaColumnInfo> columns = con.client.metaInfoColumns(, +                sqlWildcardToSimplePattern(tableNamePattern), sqlWildcardToRegexPattern(columnNamePattern));, +    public ResultSet getCrossReference(String parentCatalog, String parentSchema, String parentTable, String foreignCatalog,, +            String foreignSchema, String foreignTable) throws SQLException {, +    public ResultSet getAttributes(String catalog, String schemaPattern, String typeNamePattern, String attributeNamePattern), +            throws SQLException {, +    public ResultSet getFunctionColumns(String catalog, String schemaPattern, String functionNamePattern, String columnNamePattern), +            throws SQLException {, +    public ResultSet getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern), +            throws SQLException {, +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/ProtoUtils.java, +            // NB: date/time is kept in its raw form since the JdbcDriver has to do calendar/timezone, +            // conversion anyway and thus the long value is relevant, +++ b/sql/jdbc-proto/src/main/java/org/elasticsearch/xpack/sql/jdbc/net/protocol/QueryInitResponse.java, +    public QueryInitResponse(long serverTimeQueryReceived, long serverTimeResponseSent, String requestId, List<ColumnInfo> columns,, +            Payload data) {, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +                        if (d.print != null) {]