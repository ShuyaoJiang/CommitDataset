[+++ b/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeTests.java, +import org.elasticsearch.search.aggregations.bucket.range.date.DateRangeBuilder;, +    public void dateMath() throws Exception {, +        DateRangeBuilder rangeBuilder = dateRange("range");, +        if (randomBoolean()) {, +            rangeBuilder.field("date");, +        } else {, +            rangeBuilder.script("doc['date'].value");, +        }, +        SearchResponse response = client().prepareSearch("idx"), +                .addAggregation(rangeBuilder, +                        .addUnboundedTo("a long time ago", "now-50y"), +                        .addRange("recently", "now-50y", "now-1y"), +                        .addUnboundedFrom("last year", "now-1y")), +                .execute().actionGet();, +, +        assertSearchResponse(response);, +, +        DateRange range = response.getAggregations().get("range");, +        assertThat(range, notNullValue());, +        assertThat(range.getName(), equalTo("range"));, +        assertThat(range.buckets().size(), equalTo(3));, +, +        DateRange.Bucket bucket = range.buckets().get(0);, +        assertThat(bucket.getKey(), equalTo("a long time ago"));, +        assertThat(bucket.getDocCount(), equalTo(0L));, +, +        bucket = range.buckets().get(1);, +        assertThat(bucket.getKey(), equalTo("recently"));, +        assertThat(bucket.getDocCount(), equalTo((long) numDocs));, +, +        bucket = range.buckets().get(2);, +        assertThat(bucket.getKey(), equalTo("last year"));, +        assertThat(bucket.getDocCount(), equalTo(0L));, +    }, +, +    @Test]