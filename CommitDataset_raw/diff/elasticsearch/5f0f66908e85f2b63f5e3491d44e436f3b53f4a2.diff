[+++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsContext.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +public class FieldDataFieldsContext implements FetchSubPhaseContext{, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsContext.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +public class FieldDataFieldsContext implements FetchSubPhaseContext{, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsFetchSubPhase.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    public static final String[] NAMES = {"fielddata_fields", "fielddataFields"};, +    public static final ContextFactory CONTEXT_FACTORY = new ContextFactory() {, +, +        @Override, +        public String getName() {, +            return NAMES[0];, +        }, +, +        @Override, +        public FetchSubPhaseContext newContextInstance() {, +            return new FieldDataFieldsContext();, +        }, +    };, +, +        return context.hasFetchSubPhaseContext(CONTEXT_FACTORY);, +        for (FieldDataFieldsContext.FieldDataField field : ((FieldDataFieldsContext)context.getFetchSubPhaseContext(CONTEXT_FACTORY)).fields()) {, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsContext.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +public class FieldDataFieldsContext implements FetchSubPhaseContext{, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsFetchSubPhase.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    public static final String[] NAMES = {"fielddata_fields", "fielddataFields"};, +    public static final ContextFactory CONTEXT_FACTORY = new ContextFactory() {, +, +        @Override, +        public String getName() {, +            return NAMES[0];, +        }, +, +        @Override, +        public FetchSubPhaseContext newContextInstance() {, +            return new FieldDataFieldsContext();, +        }, +    };, +, +        return context.hasFetchSubPhaseContext(CONTEXT_FACTORY);, +        for (FieldDataFieldsContext.FieldDataField field : ((FieldDataFieldsContext)context.getFetchSubPhaseContext(CONTEXT_FACTORY)).fields()) {, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsParseElement.java, +        FieldDataFieldsContext fieldDataFieldsContext = (FieldDataFieldsContext)context.getFetchSubPhaseContext(FieldDataFieldsFetchSubPhase.CONTEXT_FACTORY);, +                fieldDataFieldsContext.add(new FieldDataFieldsContext.FieldDataField(fieldName));, +            fieldDataFieldsContext.add(new FieldDataFieldsContext.FieldDataField(fieldName));, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsContext.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +public class FieldDataFieldsContext implements FetchSubPhaseContext{, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsFetchSubPhase.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    public static final String[] NAMES = {"fielddata_fields", "fielddataFields"};, +    public static final ContextFactory CONTEXT_FACTORY = new ContextFactory() {, +, +        @Override, +        public String getName() {, +            return NAMES[0];, +        }, +, +        @Override, +        public FetchSubPhaseContext newContextInstance() {, +            return new FieldDataFieldsContext();, +        }, +    };, +, +        return context.hasFetchSubPhaseContext(CONTEXT_FACTORY);, +        for (FieldDataFieldsContext.FieldDataField field : ((FieldDataFieldsContext)context.getFetchSubPhaseContext(CONTEXT_FACTORY)).fields()) {, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsParseElement.java, +        FieldDataFieldsContext fieldDataFieldsContext = (FieldDataFieldsContext)context.getFetchSubPhaseContext(FieldDataFieldsFetchSubPhase.CONTEXT_FACTORY);, +                fieldDataFieldsContext.add(new FieldDataFieldsContext.FieldDataField(fieldName));, +            fieldDataFieldsContext.add(new FieldDataFieldsContext.FieldDataField(fieldName));, +++ b/core/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +++ b/core/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsContext.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +public class FieldDataFieldsContext implements FetchSubPhaseContext{, +++ b/core/src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsFetchSubPhase.java, +import org.elasticsearch.search.fetch.FetchSubPhaseContext;, +    public static final String[] NAMES = {"fielddata_fields", "fielddataFields"};, +    public static final ContextFactory CONTEXT_FACTORY = new ContextFactory() {, +, +        @Override, +        public String getName() {, +            return NAMES[0];, +        }, +, +        @Override, +        public FetchSubPhaseContext newContextInstance() {, +            return new FieldDataFieldsContext();, +        }, +    };, +]