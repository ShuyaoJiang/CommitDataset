[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/AllocateAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey allocateKey = new StepKey(phase, NAME, NAME);, +        StepKey allocationRoutedKey = new StepKey(phase, NAME, AllocationRoutedStep.NAME);, +        return Arrays.asList(allocateKey, allocationRoutedKey);, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/AllocateAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey allocateKey = new StepKey(phase, NAME, NAME);, +        StepKey allocationRoutedKey = new StepKey(phase, NAME, AllocationRoutedStep.NAME);, +        return Arrays.asList(allocateKey, allocationRoutedKey);, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/DeleteAction.java, +import org.elasticsearch.xpack.core.indexlifecycle.Step.StepKey;, +    public List<StepKey> toStepKeys(String phase) {, +        return Collections.singletonList(new Step.StepKey(phase, NAME, DeleteStep.NAME));, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/AllocateAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey allocateKey = new StepKey(phase, NAME, NAME);, +        StepKey allocationRoutedKey = new StepKey(phase, NAME, AllocationRoutedStep.NAME);, +        return Arrays.asList(allocateKey, allocationRoutedKey);, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/DeleteAction.java, +import org.elasticsearch.xpack.core.indexlifecycle.Step.StepKey;, +    public List<StepKey> toStepKeys(String phase) {, +        return Collections.singletonList(new Step.StepKey(phase, NAME, DeleteStep.NAME));, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/ForceMergeAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);, +        StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);, +        return Arrays.asList(forceMergeKey, countKey);, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/AllocateAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey allocateKey = new StepKey(phase, NAME, NAME);, +        StepKey allocationRoutedKey = new StepKey(phase, NAME, AllocationRoutedStep.NAME);, +        return Arrays.asList(allocateKey, allocationRoutedKey);, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/DeleteAction.java, +import org.elasticsearch.xpack.core.indexlifecycle.Step.StepKey;, +    public List<StepKey> toStepKeys(String phase) {, +        return Collections.singletonList(new Step.StepKey(phase, NAME, DeleteStep.NAME));, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/ForceMergeAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);, +        StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);, +        return Arrays.asList(forceMergeKey, countKey);, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/LifecycleAction.java, +import org.elasticsearch.xpack.core.indexlifecycle.Step.StepKey;, +     * , +     * @param phase, +     *            the name of the phase this action is being executed within, +     * @return the {@link StepKey}s for the steps which will be executed in this, +     *         action, +     */, +    List<StepKey> toStepKeys(String phase);, +, +    /**, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/AllocateAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey allocateKey = new StepKey(phase, NAME, NAME);, +        StepKey allocationRoutedKey = new StepKey(phase, NAME, AllocationRoutedStep.NAME);, +        return Arrays.asList(allocateKey, allocationRoutedKey);, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/DeleteAction.java, +import org.elasticsearch.xpack.core.indexlifecycle.Step.StepKey;, +    public List<StepKey> toStepKeys(String phase) {, +        return Collections.singletonList(new Step.StepKey(phase, NAME, DeleteStep.NAME));, +    }, +, +    @Override, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/indexlifecycle/ForceMergeAction.java, +    public List<StepKey> toStepKeys(String phase) {, +        StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);, +        StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);, +        return Arrays.asList(forceMergeKey, countKey);]