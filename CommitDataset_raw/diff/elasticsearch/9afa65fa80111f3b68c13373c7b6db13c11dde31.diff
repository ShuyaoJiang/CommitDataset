[+++ b/x-pack/plugin/sql/build.gradle, +ext {, +    // SQL dependency versions, +    jlineVersion="3.10.0", +    antlrVersion="4.5.3", +}, +, +    regenerate "org.antlr:antlr4:${antlrVersion}", +++ b/x-pack/plugin/sql/build.gradle, +ext {, +    // SQL dependency versions, +    jlineVersion="3.10.0", +    antlrVersion="4.5.3", +}, +, +    regenerate "org.antlr:antlr4:${antlrVersion}", +++ b/x-pack/plugin/sql/qa/build.gradle, + , +  // select just the parts of JLine that are needed, +  compile("org.jline:jline-terminal-jna:${jlineVersion}") {, +    exclude group: "net.java.dev.jna", +  }, +  compile "org.jline:jline-terminal:${jlineVersion}", +  compile "org.jline:jline-reader:${jlineVersion}", +  compile "org.jline:jline-style:${jlineVersion}", +, +  testRuntime "org.elasticsearch:jna:${versions.jna}", +    testRuntime("org.antlr:antlr4-runtime:${antlrVersion}") {, +, +    testRuntime("org.jline:jline-terminal-jna:${jlineVersion}") {, +      exclude group: "net.java.dev.jna", +    }, +    testRuntime "org.jline:jline-terminal:${jlineVersion}", +    testRuntime "org.jline:jline-reader:${jlineVersion}", +    testRuntime "org.jline:jline-style:${jlineVersion}", +, +    testRuntime "org.elasticsearch:jna:${versions.jna}", +++ b/x-pack/plugin/sql/build.gradle, +ext {, +    // SQL dependency versions, +    jlineVersion="3.10.0", +    antlrVersion="4.5.3", +}, +, +    regenerate "org.antlr:antlr4:${antlrVersion}", +++ b/x-pack/plugin/sql/qa/build.gradle, + , +  // select just the parts of JLine that are needed, +  compile("org.jline:jline-terminal-jna:${jlineVersion}") {, +    exclude group: "net.java.dev.jna", +  }, +  compile "org.jline:jline-terminal:${jlineVersion}", +  compile "org.jline:jline-reader:${jlineVersion}", +  compile "org.jline:jline-style:${jlineVersion}", +, +  testRuntime "org.elasticsearch:jna:${versions.jna}", +    testRuntime("org.antlr:antlr4-runtime:${antlrVersion}") {, +, +    testRuntime("org.jline:jline-terminal-jna:${jlineVersion}") {, +      exclude group: "net.java.dev.jna", +    }, +    testRuntime "org.jline:jline-terminal:${jlineVersion}", +    testRuntime "org.jline:jline-reader:${jlineVersion}", +    testRuntime "org.jline:jline-style:${jlineVersion}", +, +    testRuntime "org.elasticsearch:jna:${versions.jna}", +++ b/x-pack/plugin/sql/sql-cli/build.gradle, +    , +    // select just the parts of JLine that are needed, +    compile "org.jline:jline-terminal:${jlineVersion}", +    compile("org.jline:jline-terminal-jna:${jlineVersion}") {, +        exclude group: "net.java.dev.jna", +    }, +    compile "org.jline:jline-reader:${jlineVersion}", +    compile "org.jline:jline-style:${jlineVersion}", +    , +    mapping from: /jline-.*/, to: 'jline', + * can be easily shipped around and used., +++ b/x-pack/plugin/sql/build.gradle, +ext {, +    // SQL dependency versions, +    jlineVersion="3.10.0", +    antlrVersion="4.5.3", +}, +, +    regenerate "org.antlr:antlr4:${antlrVersion}", +++ b/x-pack/plugin/sql/qa/build.gradle, + , +  // select just the parts of JLine that are needed, +  compile("org.jline:jline-terminal-jna:${jlineVersion}") {, +    exclude group: "net.java.dev.jna", +  }, +  compile "org.jline:jline-terminal:${jlineVersion}", +  compile "org.jline:jline-reader:${jlineVersion}", +  compile "org.jline:jline-style:${jlineVersion}", +, +  testRuntime "org.elasticsearch:jna:${versions.jna}", +    testRuntime("org.antlr:antlr4-runtime:${antlrVersion}") {, +, +    testRuntime("org.jline:jline-terminal-jna:${jlineVersion}") {]