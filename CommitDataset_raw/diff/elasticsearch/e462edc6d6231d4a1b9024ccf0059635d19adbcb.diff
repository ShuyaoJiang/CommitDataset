[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +    public MetaDataIndexTemplateService(Settings settings, ClusterService clusterService,, +                                        MetaDataCreateIndexService metaDataCreateIndexService,, +                                        AliasValidator aliasValidator, IndicesService indicesService,, +                                        NodeServicesProvider nodeServicesProvider,, +                                        IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        try {, +            indexScopedSettings.validate(request.settings);, +        } catch (IllegalArgumentException iae) {, +            validationErrors.add(iae.getMessage());, +            for (Throwable t : iae.getSuppressed()) {, +                validationErrors.add(t.getMessage());, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +    public MetaDataIndexTemplateService(Settings settings, ClusterService clusterService,, +                                        MetaDataCreateIndexService metaDataCreateIndexService,, +                                        AliasValidator aliasValidator, IndicesService indicesService,, +                                        NodeServicesProvider nodeServicesProvider,, +                                        IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        try {, +            indexScopedSettings.validate(request.settings);, +        } catch (IllegalArgumentException iae) {, +            validationErrors.add(iae.getMessage());, +            for (Throwable t : iae.getSuppressed()) {, +                validationErrors.add(t.getMessage());, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), Collections.emptySet(), version);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +    public MetaDataIndexTemplateService(Settings settings, ClusterService clusterService,, +                                        MetaDataCreateIndexService metaDataCreateIndexService,, +                                        AliasValidator aliasValidator, IndicesService indicesService,, +                                        NodeServicesProvider nodeServicesProvider,, +                                        IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        try {, +            indexScopedSettings.validate(request.settings);, +        } catch (IllegalArgumentException iae) {, +            validationErrors.add(iae.getMessage());, +            for (Throwable t : iae.getSuppressed()) {, +                validationErrors.add(t.getMessage());, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), Collections.emptySet(), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        publishClusterState.close();, +        membership.close();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +    public MetaDataIndexTemplateService(Settings settings, ClusterService clusterService,, +                                        MetaDataCreateIndexService metaDataCreateIndexService,, +                                        AliasValidator aliasValidator, IndicesService indicesService,, +                                        NodeServicesProvider nodeServicesProvider,, +                                        IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        try {, +            indexScopedSettings.validate(request.settings);, +        } catch (IllegalArgumentException iae) {, +            validationErrors.add(iae.getMessage());, +            for (Throwable t : iae.getSuppressed()) {, +                validationErrors.add(t.getMessage());, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), Collections.emptySet(), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        publishClusterState.close();, +        membership.close();, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +        transportService.removeHandler(MASTER_PING_ACTION_NAME);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +    public MetaDataIndexTemplateService(Settings settings, ClusterService clusterService,, +                                        MetaDataCreateIndexService metaDataCreateIndexService,, +                                        AliasValidator aliasValidator, IndicesService indicesService,, +                                        NodeServicesProvider nodeServicesProvider,, +                                        IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        try {, +            indexScopedSettings.validate(request.settings);, +        } catch (IllegalArgumentException iae) {]