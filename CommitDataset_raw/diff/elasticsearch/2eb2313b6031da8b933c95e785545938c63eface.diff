[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PutDatafeedRequest;, +    static Request putDatafeed(PutDatafeedRequest putDatafeedRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("datafeeds"), +                .addPathPart(putDatafeedRequest.getDatafeed().getId()), +                .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(putDatafeedRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PutDatafeedRequest;, +    static Request putDatafeed(PutDatafeedRequest putDatafeedRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("datafeeds"), +                .addPathPart(putDatafeedRequest.getDatafeed().getId()), +                .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(putDatafeedRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.DeleteForecastRequest;, +import org.elasticsearch.client.ml.ForecastJobRequest;, +import org.elasticsearch.client.ml.ForecastJobResponse;, +import org.elasticsearch.client.ml.PostDataRequest;, +import org.elasticsearch.client.ml.PostDataResponse;, +import org.elasticsearch.client.ml.PutDatafeedRequest;, +import org.elasticsearch.client.ml.PutDatafeedResponse;, +import org.elasticsearch.client.ml.UpdateJobRequest;, +, +     * Creates a new Machine Learning Datafeed, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html">ML PUT datafeed documentation</a>, +     *, +     * @param request The PutDatafeedRequest containing the {@link org.elasticsearch.client.ml.datafeed.DatafeedConfig} settings, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return PutDatafeedResponse with enclosed {@link org.elasticsearch.client.ml.datafeed.DatafeedConfig} object, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public PutDatafeedResponse putDatafeed(PutDatafeedRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +                MLRequestConverters::putDatafeed,, +                options,, +                PutDatafeedResponse::fromXContent,, +                Collections.emptySet());, +    }, +, +    /**, +     * Creates a new Machine Learning Datafeed asynchronously and notifies listener on completion, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html">ML PUT datafeed documentation</a>, +     *, +     * @param request  The request containing the {@link org.elasticsearch.client.ml.datafeed.DatafeedConfig} settings, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void putDatafeedAsync(PutDatafeedRequest request, RequestOptions options, ActionListener<PutDatafeedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +                MLRequestConverters::putDatafeed,, +                options,, +                PutDatafeedResponse::fromXContent,, +                listener,, +                Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PutDatafeedRequest;, +    static Request putDatafeed(PutDatafeedRequest putDatafeedRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +                .addPathPartAsIs("_xpack"), +                .addPathPartAsIs("ml"), +                .addPathPartAsIs("datafeeds"), +                .addPathPart(putDatafeedRequest.getDatafeed().getId()), +                .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(putDatafeedRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.DeleteForecastRequest;, +import org.elasticsearch.client.ml.ForecastJobRequest;, +import org.elasticsearch.client.ml.ForecastJobResponse;, +import org.elasticsearch.client.ml.PostDataRequest;, +import org.elasticsearch.client.ml.PostDataResponse;, +import org.elasticsearch.client.ml.PutDatafeedRequest;, +import org.elasticsearch.client.ml.PutDatafeedResponse;, +import org.elasticsearch.client.ml.UpdateJobRequest;, +]