[+++ b/docs/reference/query-dsl/queries/multi-match-query.asciidoc, +The `multi_match` query builds on the <<query-dsl-match-query,`match` query>>, +to allow multi-field queries:, +[source,js], +--------------------------------------------------, +{, +  "multi_match" : {, +    "query":    "this is a test", <1>, +    "fields": [ "subject", "message" ] <2>, +  }, +}, +--------------------------------------------------, +<1> The query string., +<2> The fields to be queried., +, +[float], +=== `fields` and per-field boosting, +, +Fields can be specified with wildcards, eg:, +, +[source,js], +--------------------------------------------------, +{, +  "multi_match" : {, +    "query":    "Will Smith", +    "fields": [ "title", "*_name" ] <1>, +  }, +}, +--------------------------------------------------, +<1> Query the `title`, `first_name` and `last_name` fields., +, +Individual fields can be boosted with the caret (`^`) notation:, +    "fields" : [ "subject^3", "message" ] <1>, +  }, +}, +--------------------------------------------------, +<1> The `subject` field is three times as important than the `message` field., +, +[float], +=== `use_dis_max`, +, +deprecated[1.1.0,Use `type:best_fields` or `type:most_fields` instead. See <<multi-match-types>>], +, +By default, the `multi_match` query generates a `match` clause per field, then wraps them, +in a `dis_max` query.  By setting `use_dis_max` to `false`, they will be wrapped in a, +`bool` query instead., +, +[[multi-match-types]], +[float], +=== Types of `multi_match` query:, +, +coming[1.1.0], +, +The way the `multi_match` query is executed internally depends on the `type`, +parameter, which can be set to:, +, +[horizontal], +`best_fields`::     (*default*) Finds documents which match any field, but, +                    uses the  `_score` from the best field.  See <<type-best-fields>>., +, +`most_fields`::     Finds documents which match any field and combines, +                    the `_score` from each field.  See <<type-most-fields>>., +, +`cross_fields`::    Treats fields with the same `analyzer` as though they, +                    were one big field. Looks for each word in *any*, +                    field. See <<type-cross-fields>>., +, +`phrase`::          Runs a `match_phrase` query on each field and combines, +                    the `_score` from each field.  See <<type-phrase>>., +, +`phrase_prefix`::   Runs a `match_phrase_prefix` query on each field and, +                    combines the `_score` from each field.  See <<type-phrase>>., +, +[[type-best-fields]], +==== `best_fields`, +, +The `best_fields` type is most useful when you are searching for multiple, +words best found in the same field. For instance ``brown fox'' in a single, +field is more meaningful than ``brown'' in one field and ``fox'' in the other., +, +The `best_fields` type generates a <<query-dsl-match-query,`match` query>> for, +each field and wraps them in a <<query-dsl-dis-max-query,`dis_max`>> query, to, +find the single best matching field.  For instance, this query:, +, +[source,js], +--------------------------------------------------, +{, +  "multi_match" : {, +    "query":      "brown fox",, +    "type":       "best_fields",, +    "fields":     [ "subject", "message" ],, +    "tie_breaker": 0.3, +  }, +}, +--------------------------------------------------, +, +would be executed as:, +, +[source,js], +--------------------------------------------------]