[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +import org.elasticsearch.index.settings.IndexSettingsService;, +    private final IndexSettingsService indexSettingsService;, +, +    private volatile TimeValue snapshotInterval;, +    private final SnapshotRunnable snapshotRunnable = new SnapshotRunnable();, +, +    private final ApplySettings applySettings = new ApplySettings();, +, +    @Inject public IndexShardGatewayService(ShardId shardId, @IndexSettings Settings indexSettings, IndexSettingsService indexSettingsService,, +        this.indexSettingsService = indexSettingsService;, +, +        indexSettingsService.addListener(applySettings);, +    }, +, +    class ApplySettings implements IndexSettingsService.Listener {, +        @Override public void onRefreshSettings(Settings settings) {, +            TimeValue snapshotInterval = settings.getAsTime("index.gateway.snapshot_interval", IndexShardGatewayService.this.snapshotInterval);, +            if (!snapshotInterval.equals(IndexShardGatewayService.this.snapshotInterval)) {, +                logger.info("updating snapshot_interval from [{}] to [{}]", IndexShardGatewayService.this.snapshotInterval, snapshotInterval);, +                IndexShardGatewayService.this.snapshotInterval = snapshotInterval;, +                if (snapshotScheduleFuture != null) {, +                    snapshotScheduleFuture.cancel(false);, +                    snapshotScheduleFuture = null;, +                }, +                scheduleSnapshotIfNeeded();, +            }, +        }, +        indexSettingsService.removeListener(applySettings);, +            snapshotScheduleFuture = threadPool.schedule(snapshotInterval, ThreadPool.Names.SNAPSHOT, snapshotRunnable);, +        @Override public synchronized void run() {]