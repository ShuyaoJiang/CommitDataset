[+++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java, +        id = in.readString();, +        out.writeString(id);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java, +        id = in.readString();, +        out.writeString(id);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineResponse.java, +        out.writeString(pipelineId);, +        this.pipelineId = in.readString();, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java, +        id = in.readString();, +        out.writeString(id);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineResponse.java, +        out.writeString(pipelineId);, +        this.pipelineId = in.readString();, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +import java.util.Collection;, +import java.util.Collections;, +            Explanation factorExplanation;, +            if (filterExplanations.size() > 0) {, +                factorExplanation = Explanation.match(, +, +            } else {, +                // it is a little weird to add a match although no function matches but that is the way function_score behaves right now, +                factorExplanation = Explanation.match(1.0f,, +                    "No function matched", Collections.emptyList());, +            expl = combineFunction.explain(expl, factorExplanation, maxBoost);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java, +        id = in.readString();, +        out.writeString(id);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineResponse.java, +        out.writeString(pipelineId);, +        this.pipelineId = in.readString();, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +import java.util.Collection;, +import java.util.Collections;, +            Explanation factorExplanation;, +            if (filterExplanations.size() > 0) {, +                factorExplanation = Explanation.match(, +, +            } else {, +                // it is a little weird to add a match although no function matches but that is the way function_score behaves right now, +                factorExplanation = Explanation.match(1.0f,, +                    "No function matched", Collections.emptyList());, +            expl = combineFunction.explain(expl, factorExplanation, maxBoost);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java, +        id = in.readString();, +        out.writeString(id);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineResponse.java, +        out.writeString(pipelineId);, +        this.pipelineId = in.readString();, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +import java.util.Collection;, +import java.util.Collections;, +            Explanation factorExplanation;, +            if (filterExplanations.size() > 0) {, +                factorExplanation = Explanation.match(, +, +            } else {, +                // it is a little weird to add a match although no function matches but that is the way function_score behaves right now, +                factorExplanation = Explanation.match(1.0f,, +                    "No function matched", Collections.emptyList());, +            expl = combineFunction.explain(expl, factorExplanation, maxBoost);, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineResponseTests.java, +        SimulatePipelineResponse response = new SimulatePipelineResponse(randomAsciiOfLengthBetween(1, 10), isVerbose, results);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java, +        id = in.readString();, +        out.writeString(id);, +++ b/core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineResponse.java, +        out.writeString(pipelineId);, +        this.pipelineId = in.readString();, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +import java.util.Collection;, +import java.util.Collections;, +            Explanation factorExplanation;, +            if (filterExplanations.size() > 0) {, +                factorExplanation = Explanation.match(, +, +            } else {, +                // it is a little weird to add a match although no function matches but that is the way function_score behaves right now, +                factorExplanation = Explanation.match(1.0f,, +                    "No function matched", Collections.emptyList());, +            expl = combineFunction.explain(expl, factorExplanation, maxBoost);, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineResponseTests.java, +        SimulatePipelineResponse response = new SimulatePipelineResponse(randomAsciiOfLengthBetween(1, 10), isVerbose, results);, +++ b/core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreTests.java, +        assertEquals(queryExpl.getDescription(), ffsqExpl.getDetails()[0].getDescription());, +    public void testExplanationAndScoreEqualsEvenIfNoFunctionMatches() throws IOException {, +        IndexSearcher localSearcher = newSearcher(reader);, +        ScoreMode scoreMode = randomFrom(new, +            ScoreMode[]{ScoreMode.SUM, ScoreMode.AVG, ScoreMode.FIRST, ScoreMode.MIN, ScoreMode.MAX, ScoreMode.MULTIPLY});, +        CombineFunction combineFunction = randomFrom(new, +            CombineFunction[]{CombineFunction.SUM, CombineFunction.AVG, CombineFunction.MIN, CombineFunction.MAX,, +            CombineFunction.MULTIPLY, CombineFunction.REPLACE});, +, +        // check for document that has no macthing function, +        FiltersFunctionScoreQuery query = new FiltersFunctionScoreQuery(new TermQuery(new Term(FIELD, "out")), scoreMode,]