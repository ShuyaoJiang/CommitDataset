[+++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/MultiFieldQueryParserSettings.java, +import org.elasticsearch.common.trove.map.hash.TObjectFloatHashMap;, +    TObjectFloatHashMap<String> boosts = null;, +    public TObjectFloatHashMap<String> boosts() {, +    public void boosts(TObjectFloatHashMap<String> boosts) {, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/MultiFieldQueryParserSettings.java, +import org.elasticsearch.common.trove.map.hash.TObjectFloatHashMap;, +    TObjectFloatHashMap<String> boosts = null;, +    public TObjectFloatHashMap<String> boosts() {, +    public void boosts(TObjectFloatHashMap<String> boosts) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java, +import org.elasticsearch.common.trove.map.hash.TIntObjectHashMap;, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/MultiFieldQueryParserSettings.java, +import org.elasticsearch.common.trove.map.hash.TObjectFloatHashMap;, +    TObjectFloatHashMap<String> boosts = null;, +    public TObjectFloatHashMap<String> boosts() {, +    public void boosts(TObjectFloatHashMap<String> boosts) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java, +import org.elasticsearch.common.trove.map.hash.TIntObjectHashMap;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamOutput.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TObjectIntHashMap;, +    private final TObjectIntHashMap<String> handles = new TObjectIntHashMap<String>(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, -1);, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/MultiFieldQueryParserSettings.java, +import org.elasticsearch.common.trove.map.hash.TObjectFloatHashMap;, +    TObjectFloatHashMap<String> boosts = null;, +    public TObjectFloatHashMap<String> boosts() {, +    public void boosts(TObjectFloatHashMap<String> boosts) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java, +import org.elasticsearch.common.trove.map.hash.TIntObjectHashMap;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamOutput.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TObjectIntHashMap;, +    private final TObjectIntHashMap<String> handles = new TObjectIntHashMap<String>(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, -1);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.trove.list.array.TIntArrayList;, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/MultiFieldQueryParserSettings.java, +import org.elasticsearch.common.trove.map.hash.TObjectFloatHashMap;, +    TObjectFloatHashMap<String> boosts = null;, +    public TObjectFloatHashMap<String> boosts() {, +    public void boosts(TObjectFloatHashMap<String> boosts) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java, +import org.elasticsearch.common.trove.map.hash.TIntObjectHashMap;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamOutput.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TObjectIntHashMap;, +    private final TObjectIntHashMap<String> handles = new TObjectIntHashMap<String>(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, -1);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.trove.list.array.TIntArrayList;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/versioned/NativeVersionedMap.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TIntIntHashMap;, + * An implementation of {@link VersionedMap} based on trove., +        final TIntIntHashMap map = new TIntIntHashMap(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, 0, -1);, +, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/MultiFieldQueryParserSettings.java, +import org.elasticsearch.common.trove.map.hash.TObjectFloatHashMap;, +    TObjectFloatHashMap<String> boosts = null;, +    public TObjectFloatHashMap<String> boosts() {, +    public void boosts(TObjectFloatHashMap<String> boosts) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java, +import org.elasticsearch.common.trove.map.hash.TIntObjectHashMap;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamOutput.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TObjectIntHashMap;, +    private final TObjectIntHashMap<String> handles = new TObjectIntHashMap<String>(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, -1);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.trove.list.array.TIntArrayList;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/versioned/NativeVersionedMap.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TIntIntHashMap;, + * An implementation of {@link VersionedMap} based on trove., +        final TIntIntHashMap map = new TIntIntHashMap(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, 0, -1);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/transport/PortsRange.java, +import org.elasticsearch.common.trove.list.array.TIntArrayList;, +        return ports.toArray(new int[ports.size()]);, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/queryParser/MultiFieldQueryParserSettings.java, +import org.elasticsearch.common.trove.map.hash.TObjectFloatHashMap;, +    TObjectFloatHashMap<String> boosts = null;, +    public TObjectFloatHashMap<String> boosts() {, +    public void boosts(TObjectFloatHashMap<String> boosts) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java, +import org.elasticsearch.common.trove.map.hash.TIntObjectHashMap;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/stream/HandlesStreamOutput.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TObjectIntHashMap;, +    private final TObjectIntHashMap<String> handles = new TObjectIntHashMap<String>(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, -1);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.elasticsearch.common.trove.list.array.TIntArrayList;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/versioned/NativeVersionedMap.java, +import org.elasticsearch.common.trove.impl.Constants;, +import org.elasticsearch.common.trove.map.hash.TIntIntHashMap;, + * An implementation of {@link VersionedMap} based on trove., +        final TIntIntHashMap map = new TIntIntHashMap(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, 0, -1);, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/transport/PortsRange.java, +import org.elasticsearch.common.trove.list.array.TIntArrayList;, +        return ports.toArray(new int[ports.size()]);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/trove/ExtTIntArrayList.java]