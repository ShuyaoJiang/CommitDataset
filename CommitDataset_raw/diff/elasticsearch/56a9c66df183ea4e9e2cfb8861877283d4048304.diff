[+++ b/src/main/java/org/elasticsearch/index/mapper/FieldMappers.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Iterator;, +    private final FieldMapper[] fieldMappers;, +    private final List<FieldMapper> fieldMappersAsList;, +        this.fieldMappers = new FieldMapper[0];, +        this.fieldMappersAsList = Arrays.asList(fieldMappers);, +        this.fieldMappers = new FieldMapper[]{fieldMapper};, +        this.fieldMappersAsList = Arrays.asList(this.fieldMappers);, +    private FieldMappers(FieldMapper[] fieldMappers) {, +        this.fieldMappersAsList = Arrays.asList(this.fieldMappers);, +        if (fieldMappers.length == 0) {, +        return fieldMappers[0];, +        return fieldMappers.length == 0;, +    public List<FieldMapper> mappers() {, +        return this.fieldMappersAsList;, +    public Iterator<FieldMapper> iterator() {, +        return fieldMappersAsList.iterator();, +        FieldMapper[] newMappers = new FieldMapper[fieldMappers.length + 1];, +        System.arraycopy(fieldMappers, 0, newMappers, 0, fieldMappers.length);, +        newMappers[fieldMappers.length] = mapper;, +        return new FieldMappers(newMappers);, +        ArrayList<FieldMapper> list = new ArrayList<FieldMapper>(fieldMappers.length);, +                list.add(fieldMapper);, +        return new FieldMappers(list.toArray(new FieldMapper[list.size()]));, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMappers.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Iterator;, +    private final FieldMapper[] fieldMappers;, +    private final List<FieldMapper> fieldMappersAsList;, +        this.fieldMappers = new FieldMapper[0];, +        this.fieldMappersAsList = Arrays.asList(fieldMappers);, +        this.fieldMappers = new FieldMapper[]{fieldMapper};, +        this.fieldMappersAsList = Arrays.asList(this.fieldMappers);, +    private FieldMappers(FieldMapper[] fieldMappers) {, +        this.fieldMappersAsList = Arrays.asList(this.fieldMappers);, +        if (fieldMappers.length == 0) {, +        return fieldMappers[0];, +        return fieldMappers.length == 0;, +    public List<FieldMapper> mappers() {, +        return this.fieldMappersAsList;, +    public Iterator<FieldMapper> iterator() {, +        return fieldMappersAsList.iterator();, +        FieldMapper[] newMappers = new FieldMapper[fieldMappers.length + 1];, +        System.arraycopy(fieldMappers, 0, newMappers, 0, fieldMappers.length);, +        newMappers[fieldMappers.length] = mapper;, +        return new FieldMappers(newMappers);, +        ArrayList<FieldMapper> list = new ArrayList<FieldMapper>(fieldMappers.length);, +                list.add(fieldMapper);, +        return new FieldMappers(list.toArray(new FieldMapper[list.size()]));, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import com.google.common.collect.Iterators;, +    private volatile Map<String, DocumentMapper> mappers = ImmutableMap.of();, +    private volatile Map<String, FieldMappers> nameFieldMappers = ImmutableMap.of();, +    private volatile Map<String, FieldMappers> indexNameFieldMappers = ImmutableMap.of();, +    private volatile Map<String, FieldMappers> fullNameFieldMappers = ImmutableMap.of();, +    private volatile Map<String, ObjectMappers> objectMappers = ImmutableMap.of();, +        return Iterators.unmodifiableIterator(mappers.values().iterator());, +                mappers = newMapBuilder(mappers).put(type, mapper).map();, +            mappers = newMapBuilder(mappers).put(mapper.type(), mapper).map();, +            mappers = newMapBuilder(mappers).remove(type).map();, +                    nameFieldMappers = newMapBuilder(nameFieldMappers).remove(mapper.names().name()).map();, +                    nameFieldMappers = newMapBuilder(nameFieldMappers).put(mapper.names().name(), mappers).map();, +                    indexNameFieldMappers = newMapBuilder(indexNameFieldMappers).remove(mapper.names().indexName()).map();, +                    indexNameFieldMappers = newMapBuilder(indexNameFieldMappers).put(mapper.names().indexName(), mappers).map();, +                    fullNameFieldMappers = newMapBuilder(fullNameFieldMappers).remove(mapper.names().fullName()).map();, +                    fullNameFieldMappers = newMapBuilder(fullNameFieldMappers).put(mapper.names().fullName(), mappers).map();, +                    objectMappers = newMapBuilder(objectMappers).remove(mapper.fullPath()).map();, +                    objectMappers = newMapBuilder(objectMappers).put(mapper.fullPath(), mappers).map();, +                nameFieldMappers = newMapBuilder(nameFieldMappers).put(fieldMapper.names().name(), mappers).map();, +                indexNameFieldMappers = newMapBuilder(indexNameFieldMappers).put(fieldMapper.names().indexName(), mappers).map();, +                fullNameFieldMappers = newMapBuilder(fullNameFieldMappers).put(fieldMapper.names().fullName(), mappers).map();, +            objectMappers = newMapBuilder(objectMappers).put(objectMapper.fullPath(), mappers).map();]