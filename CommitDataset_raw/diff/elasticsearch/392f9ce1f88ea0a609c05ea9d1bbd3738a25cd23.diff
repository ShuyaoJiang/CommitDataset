[+++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.BooleanQuery;, +import org.apache.lucene.search.similarities.Similarity;, + * stopwords. This query basically builds 2 queries off the {@link #add(Term), +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.BooleanQuery;, +import org.apache.lucene.search.similarities.Similarity;, + * stopwords. This query basically builds 2 queries off the {@link #add(Term), +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +        if (aggregations != null || aggregationsBinary != null) {, +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.BooleanQuery;, +import org.apache.lucene.search.similarities.Similarity;, + * stopwords. This query basically builds 2 queries off the {@link #add(Term), +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +        if (aggregations != null || aggregationsBinary != null) {, +++ b/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.BooleanQuery;, +import org.apache.lucene.search.similarities.Similarity;, + * stopwords. This query basically builds 2 queries off the {@link #add(Term), +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +        if (aggregations != null || aggregationsBinary != null) {, +++ b/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.BooleanQuery;, +import org.apache.lucene.search.similarities.Similarity;, + * stopwords. This query basically builds 2 queries off the {@link #add(Term), +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +        if (aggregations != null || aggregationsBinary != null) {, +++ b/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/BucketHelpers.java, +            InternalMultiBucketAggregation.Bucket bucket, List<String> aggPathAsList, GapPolicy gapPolicy) {, +            Object propertyValue = bucket.getProperty(agg.getName(), aggPathAsList);]