[+++ b/src/main/java/org/elasticsearch/index/query/TemplateQueryParser.java, +++ b/src/main/java/org/elasticsearch/index/query/TemplateQueryParser.java, +++ b/src/test/java/org/elasticsearch/index/query/TemplateQueryTest.java, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertNoFailures;, +import static org.hamcrest.Matchers.equalTo;, +    public void testTemplateInBodyWithSize() throws IOException {, +        String request = "{\n" +, +                "    \"size\":0,"+, +                "    \"query\": {\n" +, +                "        \"template\": {\n" +, +                "            \"query\": {\"match_{{template}}\": {}},\n" +, +                "            \"params\" : {\n" +, +                "                \"template\" : \"all\"\n" +, +                "            }\n" +, +                "        }\n" +, +                "    }\n" +, +                "}";, +        SearchResponse sr = client().prepareSearch().setSource(request), +                .execute().actionGet();, +        assertNoFailures(sr);, +        assertThat(sr.getHits().hits().length, equalTo(0));, +        request = "{\n" +, +                "    \"query\": {\n" +, +                "        \"template\": {\n" +, +                "            \"query\": {\"match_{{template}}\": {}},\n" +, +                "            \"params\" : {\n" +, +                "                \"template\" : \"all\"\n" +, +                "            }\n" +, +                "        }\n" +, +                "    },\n" +, +                "    \"size\":0"+, +                "}";, +, +        sr = client().prepareSearch().setSource(request), +                .execute().actionGet();, +        assertNoFailures(sr);, +        assertThat(sr.getHits().hits().length, equalTo(0));, +, +    }, +, +    @Test]