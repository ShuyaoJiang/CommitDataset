[+++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    private SortMode sortMode;, +    private QueryBuilder<?> nestedFilter;, +        if (template.sortMode != null) {, +        }, +    public FieldSortBuilder sortMode(SortMode sortMode) {, +        Objects.requireNonNull(sortMode, "sort mode cannot be null");, +    public SortMode sortMode() {, +        out.writeBoolean(this.sortMode != null);, +        if (this.sortMode != null) {, +           this.sortMode.writeTo(out);, +        }, +            QueryBuilder<?> query = in.readQuery();, +        if (in.readBoolean()) {, +            result.sortMode(SortMode.PROTOTYPE.readFrom(in));, +        }, +        QueryBuilder<?> nestedFilter = null;, +        SortMode sortMode = null;, +                    sortMode = SortMode.fromString(parser.text());, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    private SortMode sortMode;, +    private QueryBuilder<?> nestedFilter;, +        if (template.sortMode != null) {, +        }, +    public FieldSortBuilder sortMode(SortMode sortMode) {, +        Objects.requireNonNull(sortMode, "sort mode cannot be null");, +    public SortMode sortMode() {, +        out.writeBoolean(this.sortMode != null);, +        if (this.sortMode != null) {, +           this.sortMode.writeTo(out);, +        }, +            QueryBuilder<?> query = in.readQuery();, +        if (in.readBoolean()) {, +            result.sortMode(SortMode.PROTOTYPE.readFrom(in));, +        }, +        QueryBuilder<?> nestedFilter = null;, +        SortMode sortMode = null;, +                    sortMode = SortMode.fromString(parser.text());, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +    private SortMode sortMode = null;, +    public GeoDistanceSortBuilder sortMode(SortMode sortMode) {, +        Objects.requireNonNull(sortMode, "sort mode cannot be null");, +        if (sortMode == SortMode.SUM) {, +    public SortMode sortMode() {, +        out.writeBoolean(this.sortMode != null);, +        if (this.sortMode != null) {, +            sortMode.writeTo(out);, +        }, +        if (in.readBoolean()) {, +            result.sortMode = SortMode.PROTOTYPE.readFrom(in);, +        SortMode sortMode = null;, +                    sortMode = SortMode.fromString(parser.text());, +            result.sortMode(sortMode);, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    private SortMode sortMode;, +    private QueryBuilder<?> nestedFilter;, +        if (template.sortMode != null) {, +        }, +    public FieldSortBuilder sortMode(SortMode sortMode) {, +        Objects.requireNonNull(sortMode, "sort mode cannot be null");, +    public SortMode sortMode() {, +        out.writeBoolean(this.sortMode != null);, +        if (this.sortMode != null) {, +           this.sortMode.writeTo(out);, +        }, +            QueryBuilder<?> query = in.readQuery();, +        if (in.readBoolean()) {, +            result.sortMode(SortMode.PROTOTYPE.readFrom(in));, +        }, +        QueryBuilder<?> nestedFilter = null;, +        SortMode sortMode = null;, +                    sortMode = SortMode.fromString(parser.text());, +++ b/core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java, +    private SortMode sortMode = null;, +    public GeoDistanceSortBuilder sortMode(SortMode sortMode) {, +        Objects.requireNonNull(sortMode, "sort mode cannot be null");, +        if (sortMode == SortMode.SUM) {, +    public SortMode sortMode() {, +        out.writeBoolean(this.sortMode != null);, +        if (this.sortMode != null) {, +            sortMode.writeTo(out);, +        }, +        if (in.readBoolean()) {, +            result.sortMode = SortMode.PROTOTYPE.readFrom(in);, +        SortMode sortMode = null;, +                    sortMode = SortMode.fromString(parser.text());, +            result.sortMode(sortMode);, +++ b/core/src/main/java/org/elasticsearch/search/sort/ScoreSortBuilder.java, +public class ScoreSortBuilder extends SortBuilder<ScoreSortBuilder> implements SortBuilderParser<ScoreSortBuilder> {, +++ b/core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java, +    private SortMode sortMode;, +    private QueryBuilder<?> nestedFilter;, +        if (template.sortMode != null) {, +        }, +    public FieldSortBuilder sortMode(SortMode sortMode) {, +        Objects.requireNonNull(sortMode, "sort mode cannot be null");, +    public SortMode sortMode() {, +        out.writeBoolean(this.sortMode != null);, +        if (this.sortMode != null) {, +           this.sortMode.writeTo(out);]