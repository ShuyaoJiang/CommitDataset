[+++ b/docs/reference/modules/snapshots.asciidoc, +will be present in the snapshot. The snapshot process starts immediately for the primary shards that has been started, +and are not relocating at the moment. Before version 1.2.0 the snapshot operation fails if cluster has any relocating or, +initializing primaries of indices participating in the snapshot. Starting with version 1.2.0, Elasticsearch waits for, +are relocating or initializing shards to start before snapshotting them., +++ b/docs/reference/modules/snapshots.asciidoc, +will be present in the snapshot. The snapshot process starts immediately for the primary shards that has been started, +and are not relocating at the moment. Before version 1.2.0 the snapshot operation fails if cluster has any relocating or, +initializing primaries of indices participating in the snapshot. Starting with version 1.2.0, Elasticsearch waits for, +are relocating or initializing shards to start before snapshotting them., +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotIndexShardStatus.java, +        this.stats = new SnapshotStats();, +++ b/docs/reference/modules/snapshots.asciidoc, +will be present in the snapshot. The snapshot process starts immediately for the primary shards that has been started, +and are not relocating at the moment. Before version 1.2.0 the snapshot operation fails if cluster has any relocating or, +initializing primaries of indices participating in the snapshot. Starting with version 1.2.0, Elasticsearch waits for, +are relocating or initializing shards to start before snapshotting them., +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotIndexShardStatus.java, +        this.stats = new SnapshotStats();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +                    try {, +                    } catch (Throwable e) {, +                        listener.onFailure(e);, +                    }, +                        case WAITING:, +++ b/docs/reference/modules/snapshots.asciidoc, +will be present in the snapshot. The snapshot process starts immediately for the primary shards that has been started, +and are not relocating at the moment. Before version 1.2.0 the snapshot operation fails if cluster has any relocating or, +initializing primaries of indices participating in the snapshot. Starting with version 1.2.0, Elasticsearch waits for, +are relocating or initializing shards to start before snapshotting them., +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotIndexShardStatus.java, +        this.stats = new SnapshotStats();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +                    try {, +                    } catch (Throwable e) {, +                        listener.onFailure(e);, +                    }, +                        case WAITING:, +++ b/src/main/java/org/elasticsearch/cluster/metadata/SnapshotMetaData.java, +import static com.google.common.collect.Maps.newHashMap;, +, +        private final ImmutableMap<String, ImmutableList<ShardId>> waitingIndices;, +                this.waitingIndices = ImmutableMap.of();, +                this.waitingIndices = findWaitingIndices(shards);, +        public ImmutableMap<String, ImmutableList<ShardId>> waitingIndices() {, +            return waitingIndices;, +        }, +, +, +        private ImmutableMap<String, ImmutableList<ShardId>> findWaitingIndices(ImmutableMap<ShardId, ShardSnapshotStatus> shards) {, +            Map<String, ImmutableList.Builder<ShardId>> waitingIndicesMap = newHashMap();, +            for (ImmutableMap.Entry<ShardId, ShardSnapshotStatus> entry : shards.entrySet()) {, +                if (entry.getValue().state() == State.WAITING) {, +                    ImmutableList.Builder<ShardId> waitingShards = waitingIndicesMap.get(entry.getKey().getIndex());, +                    if (waitingShards == null) {, +                        waitingShards = ImmutableList.builder();, +                        waitingIndicesMap.put(entry.getKey().getIndex(), waitingShards);, +                    }, +                    waitingShards.add(entry.getKey());, +                }, +            }, +            if (!waitingIndicesMap.isEmpty()) {, +                ImmutableMap.Builder<String, ImmutableList<ShardId>> waitingIndicesBuilder = ImmutableMap.builder();, +                for (Map.Entry<String, ImmutableList.Builder<ShardId>> entry : waitingIndicesMap.entrySet()) {, +                    waitingIndicesBuilder.put(entry.getKey(), entry.getValue().build());, +                }, +                return waitingIndicesBuilder.build();, +            } else {, +                return ImmutableMap.of();, +            }, +, +        }, +, +        INIT((byte) 0, false, false),, +        STARTED((byte) 1, false, false),, +        SUCCESS((byte) 2, true, false),, +        FAILED((byte) 3, true, true),, +        ABORTED((byte) 4, false, true),, +        MISSING((byte) 5, true, true),, +        WAITING((byte) 6, false, false);, +        private boolean completed;, +, +        private boolean failed;, +, +        State(byte value, boolean completed, boolean failed) {, +            this.completed = completed;, +            this.failed = failed;, +            return completed;, +            return failed;, +                case 6:, +                    return WAITING;, +++ b/docs/reference/modules/snapshots.asciidoc, +will be present in the snapshot. The snapshot process starts immediately for the primary shards that has been started, +and are not relocating at the moment. Before version 1.2.0 the snapshot operation fails if cluster has any relocating or, +initializing primaries of indices participating in the snapshot. Starting with version 1.2.0, Elasticsearch waits for, +are relocating or initializing shards to start before snapshotting them., +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotIndexShardStatus.java, +        this.stats = new SnapshotStats();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +                    try {]