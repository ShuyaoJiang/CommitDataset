[+++ b/client/benchmark/README.md, +3. Build an uberjar with `gradle :client:benchmark:shadowJar` and execute it., +rest 192.168.2.2 /home/your_user_name/.rally/benchmarks/data/geonames/documents.json geonames type 8647880 5000 "{ \"query\": { \"match_phrase\": { \"name\": \"Sankt Georgen\" } } }\"", +* Client type: Use either "rest" or "transport", +++ b/client/benchmark/README.md, +3. Build an uberjar with `gradle :client:benchmark:shadowJar` and execute it., +rest 192.168.2.2 /home/your_user_name/.rally/benchmarks/data/geonames/documents.json geonames type 8647880 5000 "{ \"query\": { \"match_phrase\": { \"name\": \"Sankt Georgen\" } } }\"", +* Client type: Use either "rest" or "transport", +++ b/client/benchmark/build.gradle, +buildscript {, +  repositories {, +    maven {, +      url 'https://plugins.gradle.org/m2/', +    }, +  }, +  dependencies {, +    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3', +  }, +}, +, +, +// build an uberjar with all benchmarks, +apply plugin: 'com.github.johnrengelman.shadow', +// have the shadow plugin provide the runShadow task, +apply plugin: 'application', +archivesBaseName = 'client-benchmarks', +mainClassName = 'org.elasticsearch.client.benchmark.BenchmarkMain', +, +, +++ b/client/benchmark/README.md, +3. Build an uberjar with `gradle :client:benchmark:shadowJar` and execute it., +rest 192.168.2.2 /home/your_user_name/.rally/benchmarks/data/geonames/documents.json geonames type 8647880 5000 "{ \"query\": { \"match_phrase\": { \"name\": \"Sankt Georgen\" } } }\"", +* Client type: Use either "rest" or "transport", +++ b/client/benchmark/build.gradle, +buildscript {, +  repositories {, +    maven {, +      url 'https://plugins.gradle.org/m2/', +    }, +  }, +  dependencies {, +    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3', +  }, +}, +, +, +// build an uberjar with all benchmarks, +apply plugin: 'com.github.johnrengelman.shadow', +// have the shadow plugin provide the runShadow task, +apply plugin: 'application', +archivesBaseName = 'client-benchmarks', +mainClassName = 'org.elasticsearch.client.benchmark.BenchmarkMain', +, +, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/AbstractBenchmark.java, +import java.lang.management.GarbageCollectorMXBean;, +import java.lang.management.ManagementFactory;, +import java.util.List;, +                        //GC between trials to reduce the likelihood of a GC occurring in the middle of a trial., +                        runGc();, +, +    /**, +     * Requests a full GC and checks whether the GC did actually run after a request. It retries up to 5 times in case the GC did not, +     * run in time., +     */, +    @SuppressForbidden(reason = "we need to request a system GC for the benchmark"), +    private void runGc() {, +        long previousCollections = getTotalGcCount();, +        int attempts = 0;, +        do {, +            // request a full GC ..., +            System.gc();, +            // ... and give GC a chance to run, +            try {, +                Thread.sleep(2000);, +            } catch (InterruptedException e) {, +                Thread.currentThread().interrupt();, +                return;, +            }, +            attempts++;, +        } while (previousCollections == getTotalGcCount() || attempts < 5);, +    }, +, +    private long getTotalGcCount() {, +        List<GarbageCollectorMXBean> gcMxBeans = ManagementFactory.getGarbageCollectorMXBeans();, +        return gcMxBeans.stream().mapToLong(GarbageCollectorMXBean::getCollectionCount).sum();, +    }, +++ b/client/benchmark/README.md, +3. Build an uberjar with `gradle :client:benchmark:shadowJar` and execute it., +rest 192.168.2.2 /home/your_user_name/.rally/benchmarks/data/geonames/documents.json geonames type 8647880 5000 "{ \"query\": { \"match_phrase\": { \"name\": \"Sankt Georgen\" } } }\"", +* Client type: Use either "rest" or "transport", +++ b/client/benchmark/build.gradle, +buildscript {, +  repositories {, +    maven {, +      url 'https://plugins.gradle.org/m2/', +    }, +  }, +  dependencies {, +    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3']