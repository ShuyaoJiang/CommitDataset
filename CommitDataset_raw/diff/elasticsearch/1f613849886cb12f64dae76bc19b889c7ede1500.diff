[+++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/shard/MockEngineFactoryPlugin.class</include>, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/shard/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/shard/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      TokenStream ts = queryAnalyzer.tokenStream("", key.toString());, +      try {, +      } finally {, +          IOUtils.closeWhileHandlingException(ts);, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/shard/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore, +                    try {, +                        TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                        source.close();, +                TokenStream source = getAnalyzer().tokenStream(field, tmp.toString());, +                source.close();, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      TokenStream ts = queryAnalyzer.tokenStream("", key.toString());, +      try {, +      } finally {, +          IOUtils.closeWhileHandlingException(ts);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        CREATE_FAILED_ENGINE_EXCEPTION(org.elasticsearch.index.engine.CreateFailedEngineException.class, org.elasticsearch.index.engine.CreateFailedEngineException::new, 22),, +        DOCUMENT_ALREADY_EXISTS_EXCEPTION(org.elasticsearch.index.engine.DocumentAlreadyExistsException.class, org.elasticsearch.index.engine.DocumentAlreadyExistsException::new, 54),, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/shard/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        TokenStream source;, +        List<String> tlist = new ArrayList<>();, +, +        try {, +            source.close();, +        } catch (IOException e) {, +            // ignore]