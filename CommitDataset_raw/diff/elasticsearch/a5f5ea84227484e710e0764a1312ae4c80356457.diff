[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("ignore_unavailable", Boolean.FALSE.toString());, +        }, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("verbose", Boolean.TRUE.toString());, +        }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("ignore_unavailable", Boolean.FALSE.toString());, +        }, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("verbose", Boolean.TRUE.toString());, +        }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SnapshotClientDocumentationIT.java, +import org.elasticsearch.snapshots.SnapshotId;, +import org.elasticsearch.snapshots.SnapshotShardFailure;, +import org.elasticsearch.snapshots.SnapshotState;, +        List<SnapshotInfo> snapshotsInfos = response.getSnapshots();, +        SnapshotInfo snapshotInfo = snapshotsInfos.get(0);, +        RestStatus restStatus = snapshotInfo.status(); // <1>, +        SnapshotId snapshotId = snapshotInfo.snapshotId(); // <2>, +        SnapshotState snapshotState = snapshotInfo.state(); // <3>, +        List<SnapshotShardFailure> snapshotShardFailures = snapshotInfo.shardFailures(); // <4>, +        long startTime = snapshotInfo.startTime(); // <5>, +        long endTime = snapshotInfo.endTime(); // <6>, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("ignore_unavailable", Boolean.FALSE.toString());, +        }, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("verbose", Boolean.TRUE.toString());, +        }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SnapshotClientDocumentationIT.java, +import org.elasticsearch.snapshots.SnapshotId;, +import org.elasticsearch.snapshots.SnapshotShardFailure;, +import org.elasticsearch.snapshots.SnapshotState;, +        List<SnapshotInfo> snapshotsInfos = response.getSnapshots();, +        SnapshotInfo snapshotInfo = snapshotsInfos.get(0);, +        RestStatus restStatus = snapshotInfo.status(); // <1>, +        SnapshotId snapshotId = snapshotInfo.snapshotId(); // <2>, +        SnapshotState snapshotState = snapshotInfo.state(); // <3>, +        List<SnapshotShardFailure> snapshotShardFailures = snapshotInfo.shardFailures(); // <4>, +        long startTime = snapshotInfo.startTime(); // <5>, +        long endTime = snapshotInfo.endTime(); // <6>, +++ b/docs/java-rest/high-level/snapshot/get_snapshots.asciidoc, +The returned `GetSnapshotsResponse` allows the retrieval of information about the requested, +snapshots:, +<1> The REST status of a snapshot, +<2> The snapshot id, +<3> The current state of the snapshot, +<4> Information about failures that occurred during the shard snapshot process., +<5> The snapshot start time, +<6> The snapshot end time, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("ignore_unavailable", Boolean.FALSE.toString());, +        }, +        if (randomBoolean()) {, +        } else {, +            expectedParams.put("verbose", Boolean.TRUE.toString());, +        }, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SnapshotClientDocumentationIT.java, +import org.elasticsearch.snapshots.SnapshotId;, +import org.elasticsearch.snapshots.SnapshotShardFailure;, +import org.elasticsearch.snapshots.SnapshotState;, +        List<SnapshotInfo> snapshotsInfos = response.getSnapshots();, +        SnapshotInfo snapshotInfo = snapshotsInfos.get(0);, +        RestStatus restStatus = snapshotInfo.status(); // <1>, +        SnapshotId snapshotId = snapshotInfo.snapshotId(); // <2>, +        SnapshotState snapshotState = snapshotInfo.state(); // <3>, +        List<SnapshotShardFailure> snapshotShardFailures = snapshotInfo.shardFailures(); // <4>, +        long startTime = snapshotInfo.startTime(); // <5>, +        long endTime = snapshotInfo.endTime(); // <6>, +++ b/docs/java-rest/high-level/snapshot/get_snapshots.asciidoc, +The returned `GetSnapshotsResponse` allows the retrieval of information about the requested, +snapshots:, +<1> The REST status of a snapshot, +<2> The snapshot id, +<3> The current state of the snapshot, +<4> Information about failures that occurred during the shard snapshot process., +<5> The snapshot start time, +<6> The snapshot end time, +++ b/server/src/main/java/org/elasticsearch/snapshots/SnapshotShardFailure.java, +     * Returns {@link RestStatus} corresponding to this failure, +     * @return REST status]