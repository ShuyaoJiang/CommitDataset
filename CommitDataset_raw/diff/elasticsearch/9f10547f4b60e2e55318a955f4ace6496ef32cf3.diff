[+++ b/docs/reference/docs/index_.asciidoc, +`external`. The value provided must be a numeric, long value greater or equal to 0,, +version will be used as the new version and will be stored with the new document. The supplied, +version must be a non-negative long number., +and will be stored with the new document. The supplied version must be a non-negative long number., +++ b/docs/reference/docs/index_.asciidoc, +`external`. The value provided must be a numeric, long value greater or equal to 0,, +version will be used as the new version and will be stored with the new document. The supplied, +version must be a non-negative long number., +and will be stored with the new document. The supplied version must be a non-negative long number., +++ b/rest-api-spec/test/index/35_external_version.yaml, +          version:        0, +, + - match:   { _version: 0 }, +, + - do:, +      index:, +          index:          test_1, +          type:           test, +          id:             1, +          body:           { foo: bar }, +          version_type:   external, +      catch:             conflict, +      index:, +          index:          test_1, +          type:           test, +          id:             1, +          body:           { foo: bar }, +          version_type:   external, +          version:        0, +, + - do:, +++ b/docs/reference/docs/index_.asciidoc, +`external`. The value provided must be a numeric, long value greater or equal to 0,, +version will be used as the new version and will be stored with the new document. The supplied, +version must be a non-negative long number., +and will be stored with the new document. The supplied version must be a non-negative long number., +++ b/rest-api-spec/test/index/35_external_version.yaml, +          version:        0, +, + - match:   { _version: 0 }, +, + - do:, +      index:, +          index:          test_1, +          type:           test, +          id:             1, +          body:           { foo: bar }, +          version_type:   external, +      catch:             conflict, +      index:, +          index:          test_1, +          type:           test, +          id:             1, +          body:           { foo: bar }, +          version_type:   external, +          version:        0, +, + - do:, +++ b/rest-api-spec/test/index/36_external_gte_version.yaml, +          version:        0, +, + - match:   { _version: 0}, +, + - do:, +      index:, +          index:          test_1, +          type:           test, +          id:             1, +          body:           { foo: bar }, +          version_type:   external_gte, +          version:        0, +++ b/docs/reference/docs/index_.asciidoc, +`external`. The value provided must be a numeric, long value greater or equal to 0,, +version will be used as the new version and will be stored with the new document. The supplied, +version must be a non-negative long number., +and will be stored with the new document. The supplied version must be a non-negative long number., +++ b/rest-api-spec/test/index/35_external_version.yaml, +          version:        0, +, + - match:   { _version: 0 }, +, + - do:, +      index:, +          index:          test_1, +          type:           test, +          id:             1, +          body:           { foo: bar }, +          version_type:   external, +      catch:             conflict, +      index:, +          index:          test_1, +          type:           test, +          id:             1, +          body:           { foo: bar }, +          version_type:   external, +          version:        0, +, + - do:, +++ b/rest-api-spec/test/index/36_external_gte_version.yaml]