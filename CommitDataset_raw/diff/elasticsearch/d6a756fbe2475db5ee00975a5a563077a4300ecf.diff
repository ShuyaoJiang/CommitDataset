[+++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.extraconfigurations.ProvidedBasePlugin, +        // TODO: add target compatibility (java version) to elasticsearch properties and set for the project, +            project.jar.configure {, +                baseName project.pluginProperties.extension.name, +            project.bundlePlugin.configure {, +                baseName project.pluginProperties.extension.name, +            }, +            project.integTest.configure {, +                dependsOn project.bundlePlugin, +                cluster {, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +                }, +            }, +        }, +        RestIntegTestTask.configure(project), +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.extraconfigurations.ProvidedBasePlugin, +        // TODO: add target compatibility (java version) to elasticsearch properties and set for the project, +            project.jar.configure {, +                baseName project.pluginProperties.extension.name, +            project.bundlePlugin.configure {, +                baseName project.pluginProperties.extension.name, +            }, +            project.integTest.configure {, +                dependsOn project.bundlePlugin, +                cluster {, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +                }, +            }, +        }, +        RestIntegTestTask.configure(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +import org.gradle.api.tasks.OutputFile, +    @OutputFile, +    File outputMarker = new File(project.buildDir, "markers/forbiddenPatterns"), +, +        outputMarker.setText('done', 'UTF-8'), +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.extraconfigurations.ProvidedBasePlugin, +        // TODO: add target compatibility (java version) to elasticsearch properties and set for the project, +            project.jar.configure {, +                baseName project.pluginProperties.extension.name, +            project.bundlePlugin.configure {, +                baseName project.pluginProperties.extension.name, +            }, +            project.integTest.configure {, +                dependsOn project.bundlePlugin, +                cluster {, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +                }, +            }, +        }, +        RestIntegTestTask.configure(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +import org.gradle.api.tasks.OutputFile, +    @OutputFile, +    File outputMarker = new File(project.buildDir, "markers/forbiddenPatterns"), +, +        outputMarker.setText('done', 'UTF-8'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.extraconfigurations.ProvidedBasePlugin, +        // TODO: add target compatibility (java version) to elasticsearch properties and set for the project, +            project.jar.configure {, +                baseName project.pluginProperties.extension.name, +            project.bundlePlugin.configure {, +                baseName project.pluginProperties.extension.name, +            }, +            project.integTest.configure {, +                dependsOn project.bundlePlugin, +                cluster {, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +                }, +            }, +        }, +        RestIntegTestTask.configure(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +import org.gradle.api.tasks.OutputFile, +    @OutputFile, +    File outputMarker = new File(project.buildDir, "markers/forbiddenPatterns"), +, +        outputMarker.setText('done', 'UTF-8'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +import org.gradle.api.tasks.TaskAction, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.extraconfigurations.ProvidedBasePlugin]