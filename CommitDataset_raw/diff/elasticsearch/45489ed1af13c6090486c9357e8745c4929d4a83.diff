[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/ActionFuture.java, +import org.elasticsearch.util.TimeValue;, +, +    /**, +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just wrapping the {@link InterruptedException} with, +     * {@link org.elasticsearch.ElasticSearchInterruptedException}, and throwing the actual, +     * cause of the {@link java.util.concurrent.ExecutionException}., +     */, +    T actionGet(TimeValue timeout) throws ElasticSearchException;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/ActionFuture.java, +import org.elasticsearch.util.TimeValue;, +, +    /**, +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just wrapping the {@link InterruptedException} with, +     * {@link org.elasticsearch.ElasticSearchInterruptedException}, and throwing the actual, +     * cause of the {@link java.util.concurrent.ExecutionException}., +     */, +    T actionGet(TimeValue timeout) throws ElasticSearchException;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/PlainActionFuture.java, +import org.elasticsearch.util.TimeValue;, +    @Override public T actionGet(TimeValue timeout) throws ElasticSearchException {, +        return actionGet(timeout.millis(), TimeUnit.MILLISECONDS);, +    }, +]