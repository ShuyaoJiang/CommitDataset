[+++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.index.seqno.RetentionLeaseStats;, +                    RetentionLeaseStats retentionLeaseStats;, +                        retentionLeaseStats = indexShard.getRetentionLeaseStats();, +                    } catch (final AlreadyClosedException e) {, +                        retentionLeaseStats = null;, +                                    seqNoStats,, +                                    retentionLeaseStats));, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.index.seqno.RetentionLeaseStats;, +                    RetentionLeaseStats retentionLeaseStats;, +                        retentionLeaseStats = indexShard.getRetentionLeaseStats();, +                    } catch (final AlreadyClosedException e) {, +                        retentionLeaseStats = null;, +                                    seqNoStats,, +                                    retentionLeaseStats));, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +import org.elasticsearch.index.seqno.RetentionLeaseStats;, +, +, +    @Nullable, +    private RetentionLeaseStats retentionLeaseStats;, +, +    /**, +     * Gets the current retention lease stats., +     *, +     * @return the current retention lease stats, +     */, +    public RetentionLeaseStats getRetentionLeaseStats() {, +        return retentionLeaseStats;, +    }, +, +    public ShardStats(, +            final ShardRouting routing,, +            final ShardPath shardPath,, +            final CommonStats commonStats,, +            final CommitStats commitStats,, +            final SeqNoStats seqNoStats,, +            final RetentionLeaseStats retentionLeaseStats) {, +        this.retentionLeaseStats = retentionLeaseStats;, +        if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +            retentionLeaseStats = in.readOptionalWriteable(RetentionLeaseStats::new);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +            out.writeOptionalWriteable(retentionLeaseStats);, +        }, +        if (retentionLeaseStats != null) {, +            retentionLeaseStats.toXContent(builder, params);, +        }, +, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +import org.elasticsearch.index.seqno.RetentionLeaseStats;, +                    RetentionLeaseStats retentionLeaseStats;, +                        retentionLeaseStats = indexShard.getRetentionLeaseStats();, +                    } catch (final AlreadyClosedException e) {, +                        retentionLeaseStats = null;, +                                    seqNoStats,, +                                    retentionLeaseStats));, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +import org.elasticsearch.index.seqno.RetentionLeaseStats;, +, +, +    @Nullable, +    private RetentionLeaseStats retentionLeaseStats;, +, +    /**, +     * Gets the current retention lease stats., +     *, +     * @return the current retention lease stats, +     */, +    public RetentionLeaseStats getRetentionLeaseStats() {, +        return retentionLeaseStats;, +    }, +, +    public ShardStats(, +            final ShardRouting routing,, +            final ShardPath shardPath,, +            final CommonStats commonStats,, +            final CommitStats commitStats,, +            final SeqNoStats seqNoStats,, +            final RetentionLeaseStats retentionLeaseStats) {, +        this.retentionLeaseStats = retentionLeaseStats;, +        if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +            retentionLeaseStats = in.readOptionalWriteable(RetentionLeaseStats::new);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +            out.writeOptionalWriteable(retentionLeaseStats);, +        }, +        if (retentionLeaseStats != null) {, +            retentionLeaseStats.toXContent(builder, params);, +        }, +, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java, +import org.elasticsearch.index.seqno.RetentionLeaseStats;, +        RetentionLeaseStats retentionLeaseStats;, +            retentionLeaseStats = indexShard.getRetentionLeaseStats();, +        } catch (final AlreadyClosedException e) {, +            retentionLeaseStats = null;, +        return new ShardStats(, +                indexShard.routingEntry(),]