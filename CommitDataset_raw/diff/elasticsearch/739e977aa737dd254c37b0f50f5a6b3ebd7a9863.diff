[+++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +        final AtomicArray<BulkItemResponse> responses = new AtomicArray<>(bulkRequest.requests.size());, +                    createIndexAction.execute(new CreateIndexRequest(index).cause("auto(bulk api)").masterNodeTimeout(bulkRequest.timeout()), new ActionListener<CreateIndexResponse>() {, +                                try {, +                                } catch (Throwable t) {, +                                    listener.onFailure(t);, +                                }, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +        final AtomicArray<BulkItemResponse> responses = new AtomicArray<>(bulkRequest.requests.size());, +                    createIndexAction.execute(new CreateIndexRequest(index).cause("auto(bulk api)").masterNodeTimeout(bulkRequest.timeout()), new ActionListener<CreateIndexResponse>() {, +                                try {, +                                } catch (Throwable t) {, +                                    listener.onFailure(t);, +                                }, +++ b/src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java, +import org.elasticsearch.action.bulk.BulkRequestBuilder;, +import org.elasticsearch.discovery.MasterNotDiscoveredException;, +import static org.elasticsearch.test.ElasticsearchIntegrationTest.Scope;, +import static org.hamcrest.Matchers.*;, +        // note, sometimes, we want to check with the fact that an index gets created, sometimes not..., +        boolean autoCreateIndex = randomBoolean();, +        logger.info("auto_create_index set to {}", autoCreateIndex);, +, +                .put("action.auto_create_index", autoCreateIndex), +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +        now = System.currentTimeMillis();, +        try {, +            BulkRequestBuilder bulkRequestBuilder = client().prepareBulk();, +            bulkRequestBuilder.add(client().prepareIndex("test", "type1", "1").setSource(XContentFactory.jsonBuilder().startObject().endObject()));, +            bulkRequestBuilder.add(client().prepareIndex("test", "type1", "2").setSource(XContentFactory.jsonBuilder().startObject().endObject()));, +            bulkRequestBuilder.setTimeout(timeout);, +            bulkRequestBuilder.get();, +            fail("Expected ClusterBlockException");, +        } catch (ClusterBlockException | MasterNotDiscoveredException e) {, +            if (autoCreateIndex) {, +                // if its auto create index, the timeout will be based on the create index API, +                assertThat(System.currentTimeMillis() - now, greaterThan(timeout.millis() - 50));, +            } else {, +                // TODO note, today we don't retry on global block for bulk operations-Dtests.seed=80C397728140167, +                assertThat(System.currentTimeMillis() - now, lessThan(50l));, +            }, +            assertThat(e.status(), equalTo(RestStatus.SERVICE_UNAVAILABLE));, +        }, +]