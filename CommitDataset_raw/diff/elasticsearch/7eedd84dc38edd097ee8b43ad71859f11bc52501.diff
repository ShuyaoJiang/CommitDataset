[+++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +import org.elasticsearch.action.support.ToXContentToBytes;, +public abstract class ShapeBuilder extends ToXContentToBytes {, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +import org.elasticsearch.action.support.ToXContentToBytes;, +public abstract class ShapeBuilder extends ToXContentToBytes {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder;, +    /**, +     * Reads a {@link org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder} from the current stream, +     */, +    public ScoreFunctionBuilder<?> readScoreFunction() throws IOException {, +        return readNamedWriteable(ScoreFunctionBuilder.class);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +import org.elasticsearch.action.support.ToXContentToBytes;, +public abstract class ShapeBuilder extends ToXContentToBytes {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder;, +    /**, +     * Reads a {@link org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder} from the current stream, +     */, +    public ScoreFunctionBuilder<?> readScoreFunction() throws IOException {, +        return readNamedWriteable(ScoreFunctionBuilder.class);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder;, +, +    /**, +     * Writes a {@link ScoreFunctionBuilder} to the current stream, +     */, +    public void writeScoreFunction(ScoreFunctionBuilder<?> scoreFunctionBuilder) throws IOException {, +        writeNamedWriteable(scoreFunctionBuilder);, +    }, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +import org.elasticsearch.action.support.ToXContentToBytes;, +public abstract class ShapeBuilder extends ToXContentToBytes {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder;, +    /**, +     * Reads a {@link org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder} from the current stream, +     */, +    public ScoreFunctionBuilder<?> readScoreFunction() throws IOException {, +        return readNamedWriteable(ScoreFunctionBuilder.class);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder;, +, +    /**, +     * Writes a {@link ScoreFunctionBuilder} to the current stream, +     */, +    public void writeScoreFunction(ScoreFunctionBuilder<?> scoreFunctionBuilder) throws IOException {, +        writeNamedWriteable(scoreFunctionBuilder);, +    }, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/CombineFunction.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Writeable;, +import java.io.IOException;, +import java.util.Locale;, +, +public enum CombineFunction implements Writeable<CombineFunction> {, +    MULTIPLY {, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeVInt(this.ordinal());, +    }, +, +    @Override, +    public CombineFunction readFrom(StreamInput in) throws IOException {, +        int ordinal = in.readVInt();, +        if (ordinal < 0 || ordinal >= values().length) {, +            throw new IOException("Unknown CombineFunction ordinal [" + ordinal + "]");, +        }, +        return values()[ordinal];, +    }, +, +    public static CombineFunction readCombineFunctionFrom(StreamInput in) throws IOException {, +        return CombineFunction.MULTIPLY.readFrom(in);, +    }, +, +    public static CombineFunction fromString(String combineFunction) {, +        return valueOf(combineFunction.toUpperCase(Locale.ROOT));, +    }, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +import org.elasticsearch.action.support.ToXContentToBytes;, +public abstract class ShapeBuilder extends ToXContentToBytes {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder;, +    /**, +     * Reads a {@link org.elasticsearch.index.query.functionscore.ScoreFunctionBuilder} from the current stream, +     */, +    public ScoreFunctionBuilder<?> readScoreFunction() throws IOException {, +        return readNamedWriteable(ScoreFunctionBuilder.class);, +    }, +]