[+++ b/build.gradle, +import org.eclipse.jgit.lib.Repository, +import org.eclipse.jgit.lib.RepositoryBuilder, +    nexus {, +      String buildSnapshot = System.getProperty('build.snapshot', 'true'), +      if (buildSnapshot == 'false') {, +        Repository repo = new RepositoryBuilder().findGitDir(new File('.')).build(), +        String shortHash = repo.resolve('HEAD')?.name?.substring(0,7), +        repositoryUrl = project.hasProperty('build.repository') ? project.property('build.repository') : "file://${System.getenv('HOME')}/elasticsearch-releases/${version}-${shortHash}/", +      }, +    }, +    // TODO: add gpg signing prompts, which is tricky, as the buildDeb/buildRpm tasks are executed before this code block, +        // no need for username/password on local deploy, +        if (project.nexus.repositoryUrl.startsWith('file://')) {, +          project.rootProject.allprojects.each {, +            it.ext.nexusUsername = 'foo', +            it.ext.nexusPassword = 'bar', +          }, +        } else {, +}, +++ b/build.gradle, +import org.eclipse.jgit.lib.Repository, +import org.eclipse.jgit.lib.RepositoryBuilder, +    nexus {, +      String buildSnapshot = System.getProperty('build.snapshot', 'true'), +      if (buildSnapshot == 'false') {, +        Repository repo = new RepositoryBuilder().findGitDir(new File('.')).build(), +        String shortHash = repo.resolve('HEAD')?.name?.substring(0,7), +        repositoryUrl = project.hasProperty('build.repository') ? project.property('build.repository') : "file://${System.getenv('HOME')}/elasticsearch-releases/${version}-${shortHash}/", +      }, +    }, +    // TODO: add gpg signing prompts, which is tricky, as the buildDeb/buildRpm tasks are executed before this code block, +        // no need for username/password on local deploy, +        if (project.nexus.repositoryUrl.startsWith('file://')) {, +          project.rootProject.allprojects.each {, +            it.ext.nexusUsername = 'foo', +            it.ext.nexusPassword = 'bar', +          }, +        } else {, +}, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.ParseFieldMatcherSupplier;, +    private static ObjectParser<ClusterAllocationExplainRequest, ParseFieldMatcherSupplier> PARSER = new ObjectParser(, +            "cluster/allocation/explain");, +        ClusterAllocationExplainRequest req = PARSER.parse(parser, new ClusterAllocationExplainRequest(), () -> ParseFieldMatcher.STRICT);, +++ b/build.gradle, +import org.eclipse.jgit.lib.Repository, +import org.eclipse.jgit.lib.RepositoryBuilder, +    nexus {, +      String buildSnapshot = System.getProperty('build.snapshot', 'true'), +      if (buildSnapshot == 'false') {, +        Repository repo = new RepositoryBuilder().findGitDir(new File('.')).build(), +        String shortHash = repo.resolve('HEAD')?.name?.substring(0,7), +        repositoryUrl = project.hasProperty('build.repository') ? project.property('build.repository') : "file://${System.getenv('HOME')}/elasticsearch-releases/${version}-${shortHash}/", +      }, +    }, +    // TODO: add gpg signing prompts, which is tricky, as the buildDeb/buildRpm tasks are executed before this code block, +        // no need for username/password on local deploy, +        if (project.nexus.repositoryUrl.startsWith('file://')) {, +          project.rootProject.allprojects.each {, +            it.ext.nexusUsername = 'foo', +            it.ext.nexusPassword = 'bar', +          }, +        } else {, +}, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.ParseFieldMatcherSupplier;, +    private static ObjectParser<ClusterAllocationExplainRequest, ParseFieldMatcherSupplier> PARSER = new ObjectParser(, +            "cluster/allocation/explain");, +        ClusterAllocationExplainRequest req = PARSER.parse(parser, new ClusterAllocationExplainRequest(), () -> ParseFieldMatcher.STRICT);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java, +                        this.commands = AllocationCommands.fromXContent(parser, parseFieldMatcher, registry);, +++ b/build.gradle, +import org.eclipse.jgit.lib.Repository, +import org.eclipse.jgit.lib.RepositoryBuilder, +    nexus {, +      String buildSnapshot = System.getProperty('build.snapshot', 'true'), +      if (buildSnapshot == 'false') {, +        Repository repo = new RepositoryBuilder().findGitDir(new File('.')).build(), +        String shortHash = repo.resolve('HEAD')?.name?.substring(0,7), +        repositoryUrl = project.hasProperty('build.repository') ? project.property('build.repository') : "file://${System.getenv('HOME')}/elasticsearch-releases/${version}-${shortHash}/", +      }, +    }, +    // TODO: add gpg signing prompts, which is tricky, as the buildDeb/buildRpm tasks are executed before this code block, +        // no need for username/password on local deploy, +        if (project.nexus.repositoryUrl.startsWith('file://')) {, +          project.rootProject.allprojects.each {, +            it.ext.nexusUsername = 'foo', +            it.ext.nexusPassword = 'bar', +          }, +        } else {, +}, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseFieldMatcher;, +import org.elasticsearch.common.ParseFieldMatcherSupplier;, +    private static ObjectParser<ClusterAllocationExplainRequest, ParseFieldMatcherSupplier> PARSER = new ObjectParser(, +            "cluster/allocation/explain");, +        ClusterAllocationExplainRequest req = PARSER.parse(parser, new ClusterAllocationExplainRequest(), () -> ParseFieldMatcher.STRICT);]