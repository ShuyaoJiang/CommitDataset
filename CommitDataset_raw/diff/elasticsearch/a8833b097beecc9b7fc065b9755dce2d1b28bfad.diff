[+++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        if (bwcVersion != null && bwcVersion.before("6.5.0")) {, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        if (bwcVersion != null && bwcVersion.before("6.5.0")) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            if (node.nodeVersion.onOrAfter("6.5.0")) {, +                    String unicastTransportUri = node.config.unicastTransportUri(nodes.get(0), node, project.createAntBuilder()), +                String unicastHost = node.config.unicastTransportUri(node, null, project.createAntBuilder()), +        AntBuilder ant = project.createAntBuilder(), +        ant.project.addBuildListener(listener), +        Object retVal = command(ant), +        ant.project.removeBuildListener(listener), +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        if (bwcVersion != null && bwcVersion.before("6.5.0")) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            if (node.nodeVersion.onOrAfter("6.5.0")) {, +                    String unicastTransportUri = node.config.unicastTransportUri(nodes.get(0), node, project.createAntBuilder()), +                String unicastHost = node.config.unicastTransportUri(node, null, project.createAntBuilder()), +        AntBuilder ant = project.createAntBuilder(), +        ant.project.addBuildListener(listener), +        Object retVal = command(ant), +        ant.project.removeBuildListener(listener), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        if (bwcVersion != null && bwcVersion.before("6.5.0")) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            if (node.nodeVersion.onOrAfter("6.5.0")) {, +                    String unicastTransportUri = node.config.unicastTransportUri(nodes.get(0), node, project.createAntBuilder()), +                String unicastHost = node.config.unicastTransportUri(node, null, project.createAntBuilder()), +        AntBuilder ant = project.createAntBuilder(), +        ant.project.addBuildListener(listener), +        Object retVal = command(ant), +        ant.project.removeBuildListener(listener), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.DeleteModelSnapshotRequest;, +    static Request deleteModelSnapshot(DeleteModelSnapshotRequest deleteModelSnapshotRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(deleteModelSnapshotRequest.getJobId()), +            .addPathPartAsIs("model_snapshots"), +            .addPathPart(deleteModelSnapshotRequest.getSnapshotId()), +            .build();, +        return new Request(HttpDelete.METHOD_NAME, endpoint);, +    }, +, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        if (bwcVersion != null && bwcVersion.before("6.5.0")) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            if (node.nodeVersion.onOrAfter("6.5.0")) {, +                    String unicastTransportUri = node.config.unicastTransportUri(nodes.get(0), node, project.createAntBuilder()), +                String unicastHost = node.config.unicastTransportUri(node, null, project.createAntBuilder()), +        AntBuilder ant = project.createAntBuilder(), +        ant.project.addBuildListener(listener), +        Object retVal = command(ant), +        ant.project.removeBuildListener(listener), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.DeleteModelSnapshotRequest;, +    static Request deleteModelSnapshot(DeleteModelSnapshotRequest deleteModelSnapshotRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(deleteModelSnapshotRequest.getJobId()), +            .addPathPartAsIs("model_snapshots"), +            .addPathPart(deleteModelSnapshotRequest.getSnapshotId()), +            .build();, +        return new Request(HttpDelete.METHOD_NAME, endpoint);, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.DeleteModelSnapshotRequest;, +     * Deletes Machine Learning Model Snapshots, +     * <p>, +     * For additional info, +     * see <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-delete-snapshot.html">, +     *     ML Delete Model Snapshot documentation</a>, +     *, +     * @param request The request to delete the model snapshot]