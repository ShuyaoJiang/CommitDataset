[+++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestSnapshotAction.java, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.snapshots.SnapshotState;, +                .addCell("duration", "alias:dur,duration;text-align:right;desc:duration"), +            final long durationMillis;, +            if (snapshotStatus.state() == SnapshotState.IN_PROGRESS) {, +                durationMillis = System.currentTimeMillis() - snapshotStatus.startTime();, +            } else {, +                durationMillis = snapshotStatus.endTime() - snapshotStatus.startTime();, +            }, +            table.addCell(TimeValue.timeValueMillis(durationMillis));, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestSnapshotAction.java, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.snapshots.SnapshotState;, +                .addCell("duration", "alias:dur,duration;text-align:right;desc:duration"), +            final long durationMillis;, +            if (snapshotStatus.state() == SnapshotState.IN_PROGRESS) {, +                durationMillis = System.currentTimeMillis() - snapshotStatus.startTime();, +            } else {, +                durationMillis = snapshotStatus.endTime() - snapshotStatus.startTime();, +            }, +            table.addCell(TimeValue.timeValueMillis(durationMillis));, +++ b/docs/reference/cat/snapshots.asciidoc, +id     status start_epoch start_time end_epoch  end_time duration indices successful_shards failed_shards total_shards, +snap1  FAILED 1445616705  18:11:45   1445616978 18:16:18     4.6m       1                 4             1            5, +snap2 SUCCESS 1445634298  23:04:58   1445634672 23:11:12     6.2m       2                10             0           10, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestSnapshotAction.java, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.snapshots.SnapshotState;, +                .addCell("duration", "alias:dur,duration;text-align:right;desc:duration"), +            final long durationMillis;, +            if (snapshotStatus.state() == SnapshotState.IN_PROGRESS) {, +                durationMillis = System.currentTimeMillis() - snapshotStatus.startTime();, +            } else {, +                durationMillis = snapshotStatus.endTime() - snapshotStatus.startTime();, +            }, +            table.addCell(TimeValue.timeValueMillis(durationMillis));, +++ b/docs/reference/cat/snapshots.asciidoc, +id     status start_epoch start_time end_epoch  end_time duration indices successful_shards failed_shards total_shards, +snap1  FAILED 1445616705  18:11:45   1445616978 18:16:18     4.6m       1                 4             1            5, +snap2 SUCCESS 1445634298  23:04:58   1445634672 23:11:12     6.2m       2                10             0           10, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cat.snapshots/10_basic.yaml, +                    duration          .+   \n, +               /^   snap1\s+ SUCCESS\s+ \d+\s+ \d\d\:\d\d\:\d\d\s+ \d+\s+ \d\d\:\d\d\:\d\d\s+ \S+\s+ 2\s+ 2\s+ 0\s+ 2\s*\n, +                    snap2\s+ SUCCESS\s+ \d+\s+ \d\d\:\d\d\:\d\d\s+ \d+\s+ \d\d\:\d\d\:\d\d\s+ \S+\s+ 2\s+ 2\s+ 0\s+ 2\s*\n]