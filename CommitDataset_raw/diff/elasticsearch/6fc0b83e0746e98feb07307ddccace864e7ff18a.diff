[+++ b/pom.xml, +            <version>0.3</version>, +++ b/pom.xml, +            <version>0.3</version>, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeParser.java, +import com.spatial4j.core.shape.impl.RectangleImpl;, +            return new JtsPoint(GEOMETRY_FACTORY.createPoint(node.coordinate), GeoShapeConstants.SPATIAL_CONTEXT);, +            return new JtsGeometry(GEOMETRY_FACTORY.createLineString(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createPolygon(shell, holes), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createMultiPoint(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new RectangleImpl(coordinates[0].x, coordinates[1].x, coordinates[1].y, coordinates[0].y, GeoShapeConstants.SPATIAL_CONTEXT);, +++ b/pom.xml, +            <version>0.3</version>, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeParser.java, +import com.spatial4j.core.shape.impl.RectangleImpl;, +            return new JtsPoint(GEOMETRY_FACTORY.createPoint(node.coordinate), GeoShapeConstants.SPATIAL_CONTEXT);, +            return new JtsGeometry(GEOMETRY_FACTORY.createLineString(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createPolygon(shell, holes), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createMultiPoint(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new RectangleImpl(coordinates[0].x, coordinates[1].x, coordinates[1].y, coordinates[0].y, GeoShapeConstants.SPATIAL_CONTEXT);, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeSerializer.java, +            Geometry geometry = ((JtsGeometry) shape).getGeom();, +++ b/pom.xml, +            <version>0.3</version>, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeParser.java, +import com.spatial4j.core.shape.impl.RectangleImpl;, +            return new JtsPoint(GEOMETRY_FACTORY.createPoint(node.coordinate), GeoShapeConstants.SPATIAL_CONTEXT);, +            return new JtsGeometry(GEOMETRY_FACTORY.createLineString(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createPolygon(shell, holes), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createMultiPoint(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new RectangleImpl(coordinates[0].x, coordinates[1].x, coordinates[1].y, coordinates[0].y, GeoShapeConstants.SPATIAL_CONTEXT);, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeSerializer.java, +            Geometry geometry = ((JtsGeometry) shape).getGeom();, +++ b/src/main/java/org/elasticsearch/common/geo/GeoShapeConstants.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.geo;, +, +import com.spatial4j.core.context.jts.JtsSpatialContext;, +, +/**, + * Common constants through the GeoShape codebase, + */, +public interface GeoShapeConstants {, +, +    public static final JtsSpatialContext SPATIAL_CONTEXT = new JtsSpatialContext(true);, +}, +++ b/pom.xml, +            <version>0.3</version>, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeParser.java, +import com.spatial4j.core.shape.impl.RectangleImpl;, +            return new JtsPoint(GEOMETRY_FACTORY.createPoint(node.coordinate), GeoShapeConstants.SPATIAL_CONTEXT);, +            return new JtsGeometry(GEOMETRY_FACTORY.createLineString(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createPolygon(shell, holes), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new JtsGeometry(GEOMETRY_FACTORY.createMultiPoint(toCoordinates(node)), GeoShapeConstants.SPATIAL_CONTEXT, true);, +            return new RectangleImpl(coordinates[0].x, coordinates[1].x, coordinates[1].y, coordinates[0].y, GeoShapeConstants.SPATIAL_CONTEXT);, +++ b/src/main/java/org/elasticsearch/common/geo/GeoJSONShapeSerializer.java, +            Geometry geometry = ((JtsGeometry) shape).getGeom();, +++ b/src/main/java/org/elasticsearch/common/geo/GeoShapeConstants.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.geo;, +, +import com.spatial4j.core.context.jts.JtsSpatialContext;, +, +/**]