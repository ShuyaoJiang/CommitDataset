[+++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java, +        return WordScorer.join(separator, result, toJoin);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java, +        return WordScorer.join(separator, result, toJoin);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGeneratorBuilder.java, +            // TODO Jaro and Winkler are 2 people - so apply same naming logic, +            // as damerau_levenshtein, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java, +        return WordScorer.join(separator, result, toJoin);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGeneratorBuilder.java, +            // TODO Jaro and Winkler are 2 people - so apply same naming logic, +            // as damerau_levenshtein, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LaplaceScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w_2.term, w_1.term, word.term);, +        join(separator, spare, w_1.term, word.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java, +        return WordScorer.join(separator, result, toJoin);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGeneratorBuilder.java, +            // TODO Jaro and Winkler are 2 people - so apply same naming logic, +            // as damerau_levenshtein, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LaplaceScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w_2.term, w_1.term, word.term);, +        join(separator, spare, w_1.term, word.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpolatingScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w.term, w_1.term, w_2.term);, +        join(separator, spare, w.term, w_1.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java, +        return WordScorer.join(separator, result, toJoin);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGeneratorBuilder.java, +            // TODO Jaro and Winkler are 2 people - so apply same naming logic, +            // as damerau_levenshtein, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LaplaceScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w_2.term, w_1.term, word.term);, +        join(separator, spare, w_1.term, word.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpolatingScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w.term, w_1.term, w_2.term);, +        join(separator, spare, w.term, w_1.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/StupidBackoffScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w_1.term, w.term);, +        join(separator, spare, w_2.term, w_1.term, w.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java, +        return WordScorer.join(separator, result, toJoin);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGeneratorBuilder.java, +            // TODO Jaro and Winkler are 2 people - so apply same naming logic, +            // as damerau_levenshtein, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LaplaceScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w_2.term, w_1.term, word.term);, +        join(separator, spare, w_1.term, word.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpolatingScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w.term, w_1.term, w_2.term);, +        join(separator, spare, w.term, w_1.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/StupidBackoffScorer.java, +        join(separator, spare, w_1.term, word.term);, +        join(separator, spare, w_1.term, w.term);, +        join(separator, spare, w_2.term, w_1.term, w.term);, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/WordScorer.java, +   public static BytesRef join(BytesRef separator, BytesRefBuilder result, BytesRef... toJoin) {, +       result.clear();, +       for (int i = 0; i < toJoin.length - 1; i++) {, +           result.append(toJoin[i]);, +           result.append(separator);, +       }, +       result.append(toJoin[toJoin.length-1]);, +       return result.get();, +   }, +]