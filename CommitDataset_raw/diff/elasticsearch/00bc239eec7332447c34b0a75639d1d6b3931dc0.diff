[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilterChain.java, +public interface ActionFilterChain {, +    void proceed(Task task, final String action, final ActionRequest request, final ActionListener listener);, +    void proceed(final String action, final ActionResponse response, final ActionListener listener);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilterChain.java, +public interface ActionFilterChain {, +    void proceed(Task task, final String action, final ActionRequest request, final ActionListener listener);, +    void proceed(final String action, final ActionResponse response, final ActionListener listener);, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportAction.java, +            RequestFilterChain requestFilterChain = new RequestFilterChain<>(this, logger);, +    private static class RequestFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse> implements ActionFilterChain {, +        @Override @SuppressWarnings("unchecked"), +        public void proceed(Task task, String actionName, ActionRequest request, ActionListener listener) {, +                    this.action.doExecute(task, (Request) request, new FilteredActionListener<Response>(actionName, listener, new ResponseFilterChain(this.action.filters, logger)));, +        public void proceed(String action, ActionResponse response, ActionListener listener) {, +    private static class ResponseFilterChain implements ActionFilterChain {, +        public void proceed(Task task, String action, ActionRequest request, ActionListener listener) {, +        @Override @SuppressWarnings("unchecked"), +        public void proceed(String action, ActionResponse response, ActionListener listener) {, +        private final ActionListener listener;, +        private final ResponseFilterChain chain;, +        private FilteredActionListener(String actionName, ActionListener listener, ResponseFilterChain chain) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {, +        public final void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain) {, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilterChain.java, +public interface ActionFilterChain {, +    void proceed(Task task, final String action, final ActionRequest request, final ActionListener listener);, +    void proceed(final String action, final ActionResponse response, final ActionListener listener);, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportAction.java, +            RequestFilterChain requestFilterChain = new RequestFilterChain<>(this, logger);, +    private static class RequestFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse> implements ActionFilterChain {, +        @Override @SuppressWarnings("unchecked"), +        public void proceed(Task task, String actionName, ActionRequest request, ActionListener listener) {, +                    this.action.doExecute(task, (Request) request, new FilteredActionListener<Response>(actionName, listener, new ResponseFilterChain(this.action.filters, logger)));, +        public void proceed(String action, ActionResponse response, ActionListener listener) {, +    private static class ResponseFilterChain implements ActionFilterChain {, +        public void proceed(Task task, String action, ActionRequest request, ActionListener listener) {, +        @Override @SuppressWarnings("unchecked"), +        public void proceed(String action, ActionResponse response, ActionListener listener) {, +        private final ActionListener listener;, +        private final ResponseFilterChain chain;, +        private FilteredActionListener(String actionName, ActionListener listener, ResponseFilterChain chain) {, +++ b/core/src/test/java/org/elasticsearch/action/support/TransportActionFilterChainTests.java, +            public void execute(Task task, final String action, final ActionRequest actionRequest, final ActionListener actionListener, final ActionFilterChain actionFilterChain) {, +                    actionFilterChain.proceed(task, action, actionRequest, actionListener);, +            public void execute(String action, ActionResponse response, ActionListener listener, ActionFilterChain chain) {, +        @SuppressWarnings("unchecked"), +        public void apply(Task task, String action, ActionRequest actionRequest, ActionListener actionListener, ActionFilterChain actionFilterChain) {, +            this.callback.execute(task, action, actionRequest, actionListener, actionFilterChain);, +        public void apply(String action, ActionResponse response, ActionListener listener, ActionFilterChain chain) {, +        public void apply(Task task, String action, ActionRequest request, ActionListener listener, ActionFilterChain chain) {, +        public void apply(String action, ActionResponse response, ActionListener listener, ActionFilterChain chain) {, +            public void execute(Task task, String action, ActionRequest actionRequest, ActionListener actionListener, ActionFilterChain actionFilterChain) {, +                actionFilterChain.proceed(task, action, actionRequest, actionListener);, +            @SuppressWarnings("unchecked"), +            public void execute(Task task, String action, ActionRequest actionRequest, ActionListener actionListener, ActionFilterChain actionFilterChain) {, +                actionListener.onResponse(new TestResponse());, +            public void execute(Task task, String action, ActionRequest actionRequest, ActionListener actionListener, ActionFilterChain actionFilterChain) {, +                actionListener.onFailure(new ElasticsearchTimeoutException(""));, +            public void execute(String action, ActionResponse response, ActionListener listener, ActionFilterChain chain) {, +            @SuppressWarnings("unchecked"), +            public void execute(String action, ActionResponse response, ActionListener listener, ActionFilterChain chain) {, +                listener.onResponse(new TestResponse());, +            public void execute(String action, ActionResponse response, ActionListener listener, ActionFilterChain chain) {, +        void execute(Task task, String action, ActionRequest actionRequest, ActionListener actionListener, ActionFilterChain actionFilterChain);, +        void execute(String action, ActionResponse response, ActionListener listener, ActionFilterChain chain);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain);, +    void apply(String action, ActionResponse response, ActionListener<?> listener, ActionFilterChain chain);, +        public final void apply(Task task, String action, ActionRequest<?> request, ActionListener<?> listener, ActionFilterChain chain) {]