[+++ b/docs/reference/query-dsl/queries/function-score-query.asciidoc, +            "boost_factor": "3",, +            "boost_factor": "3",, +++ b/docs/reference/query-dsl/queries/function-score-query.asciidoc, +            "boost_factor": "3",, +            "boost_factor": "3",, +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/CombineFunction.java, +            return "multiply";, +++ b/docs/reference/query-dsl/queries/function-score-query.asciidoc, +            "boost_factor": "3",, +            "boost_factor": "3",, +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/CombineFunction.java, +            return "multiply";, +++ b/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java, +import com.google.common.collect.ImmutableMap;, +import com.google.common.collect.ImmutableMap.Builder;, +    private static final ImmutableMap<String, CombineFunction> combineFunctionsMap;, +, +    static {, +        CombineFunction[] values = CombineFunction.values();, +        Builder<String, CombineFunction> combineFunctionMapBuilder = ImmutableMap.<String, CombineFunction>builder();, +        for (CombineFunction combineFunction : values) {, +            combineFunctionMapBuilder.put(combineFunction.getName(), combineFunction);, +        }, +        combineFunctionsMap = combineFunctionMapBuilder.build();, +    }, +, +        CombineFunction cf = combineFunctionsMap.get(boostMode);, +        if (cf == null) {, +        return cf;, +    }]