[+++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getBwcIndicesPath().resolve(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getBwcIndicesPath().resolve(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RecoveryWithUnsupportedIndicesIT.java, +        Settings nodeSettings = prepareBackwardsDataDir(getBwcIndicesPath().resolve(indexName + ".zip"), Node.HTTP_ENABLED, true);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getBwcIndicesPath().resolve(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RecoveryWithUnsupportedIndicesIT.java, +        Settings nodeSettings = prepareBackwardsDataDir(getBwcIndicesPath().resolve(indexName + ".zip"), Node.HTTP_ENABLED, true);, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/RoutingServiceTests.java, +import org.elasticsearch.test.junit.annotations.TestLogging;, +    @TestLogging("_root:DEBUG"), +        assertFalse("no shards should be unassigned", clusterState.getRoutingNodes().hasUnassigned());, +                assertTrue("routing service should have run a reroute", routingService.hasReroutedAndClear());, +            logger.info("--> performing fake reroute [{}]", reason);]