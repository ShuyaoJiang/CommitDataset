[+++ b/CONTRIBUTING.md, +* Wildcard imports (`import foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/CONTRIBUTING.md, +* Wildcard imports (`import foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/build.gradle, +, +  idea {, +    module {, +      // same as for the IntelliJ Gradle tooling integration, +      inheritOutputDirs = false, +      outputDir = file('build/classes/main'), +      testOutputDir = file('build/classes/test'), +, +      iml {, +        // fix so that Gradle idea plugin properly generates support for resource folders, +        // see also https://issues.gradle.org/browse/GRADLE-2975, +        withXml {, +          it.asNode().component.content.sourceFolder.findAll { it.@url == 'file://$MODULE_DIR$/src/main/resources' }.each {, +            it.attributes().remove('isTestSource'), +            it.attributes().put('type', 'java-resource'), +          }, +          it.asNode().component.content.sourceFolder.findAll { it.@url == 'file://$MODULE_DIR$/src/test/resources' }.each {, +            it.attributes().remove('isTestSource'), +            it.attributes().put('type', 'java-test-resource'), +          }, +        }, +      }, +    }, +  }, +++ b/CONTRIBUTING.md, +* Wildcard imports (`import foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/build.gradle, +, +  idea {, +    module {, +      // same as for the IntelliJ Gradle tooling integration, +      inheritOutputDirs = false, +      outputDir = file('build/classes/main'), +      testOutputDir = file('build/classes/test'), +, +      iml {, +        // fix so that Gradle idea plugin properly generates support for resource folders, +        // see also https://issues.gradle.org/browse/GRADLE-2975, +        withXml {, +          it.asNode().component.content.sourceFolder.findAll { it.@url == 'file://$MODULE_DIR$/src/main/resources' }.each {, +            it.attributes().remove('isTestSource'), +            it.attributes().put('type', 'java-resource'), +          }, +          it.asNode().component.content.sourceFolder.findAll { it.@url == 'file://$MODULE_DIR$/src/test/resources' }.each {, +            it.attributes().remove('isTestSource'), +            it.attributes().put('type', 'java-test-resource'), +          }, +        }, +      }, +    }, +  }, +++ b/buildSrc/build.gradle, +  compile 'org.apache.rat:apache-rat:0.11', +++ b/CONTRIBUTING.md, +* Wildcard imports (`import foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/build.gradle, +, +  idea {, +    module {, +      // same as for the IntelliJ Gradle tooling integration, +      inheritOutputDirs = false, +      outputDir = file('build/classes/main'), +      testOutputDir = file('build/classes/test'), +, +      iml {, +        // fix so that Gradle idea plugin properly generates support for resource folders, +        // see also https://issues.gradle.org/browse/GRADLE-2975, +        withXml {, +          it.asNode().component.content.sourceFolder.findAll { it.@url == 'file://$MODULE_DIR$/src/main/resources' }.each {, +            it.attributes().remove('isTestSource'), +            it.attributes().put('type', 'java-resource'), +          }, +          it.asNode().component.content.sourceFolder.findAll { it.@url == 'file://$MODULE_DIR$/src/test/resources' }.each {, +            it.attributes().remove('isTestSource'), +            it.attributes().put('type', 'java-test-resource'), +          }, +        }, +      }, +    }, +  }, +++ b/buildSrc/build.gradle, +  compile 'org.apache.rat:apache-rat:0.11', +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import org.gradle.api.tasks.Input, +import org.gradle.api.tasks.InputDirectory, +import org.gradle.api.tasks.Optional, +import org.gradle.api.tasks.TaskAction]