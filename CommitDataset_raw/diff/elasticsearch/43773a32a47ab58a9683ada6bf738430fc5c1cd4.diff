[+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/RethrottleRequest.java, +    public RethrottleRequest() {, +    }, +, +    public RethrottleRequest(StreamInput in) throws IOException {, +        super(in);, +        this.requestsPerSecond = in.readFloat();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeFloat(requestsPerSecond);, +    }, +, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/RethrottleRequest.java, +    public RethrottleRequest() {, +    }, +, +    public RethrottleRequest(StreamInput in) throws IOException {, +        super(in);, +        this.requestsPerSecond = in.readFloat();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeFloat(requestsPerSecond);, +    }, +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/RoundTripTests.java, +        RethrottleRequest tripped = new RethrottleRequest(toInputByteStream(request));, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/RethrottleRequest.java, +    public RethrottleRequest() {, +    }, +, +    public RethrottleRequest(StreamInput in) throws IOException {, +        super(in);, +        this.requestsPerSecond = in.readFloat();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeFloat(requestsPerSecond);, +    }, +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/RoundTripTests.java, +        RethrottleRequest tripped = new RethrottleRequest(toInputByteStream(request));, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksRequest.java, +    public CancelTasksRequest() {}, +, +    public CancelTasksRequest(StreamInput in) throws IOException {, +        super(in);, +        this.reason = in.readString();, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/RethrottleRequest.java, +    public RethrottleRequest() {, +    }, +, +    public RethrottleRequest(StreamInput in) throws IOException {, +        super(in);, +        this.requestsPerSecond = in.readFloat();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeFloat(requestsPerSecond);, +    }, +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/RoundTripTests.java, +        RethrottleRequest tripped = new RethrottleRequest(toInputByteStream(request));, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksRequest.java, +    public CancelTasksRequest() {}, +, +    public CancelTasksRequest(StreamInput in) throws IOException {, +        super(in);, +        this.reason = in.readString();, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +        transportService.registerRequestHandler(BAN_PARENT_ACTION_NAME, ThreadPool.Names.SAME, BanParentTaskRequest::new,, +            new BanParentRequestHandler());, +        private final TaskId parentTaskId;, +        private final boolean ban;, +        private final String reason;, +            this.reason = null;, +        private BanParentTaskRequest(StreamInput in) throws IOException {, +            super(in);, +            reason = ban ? in.readString() : null;, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/RethrottleRequest.java, +    public RethrottleRequest() {, +    }, +, +    public RethrottleRequest(StreamInput in) throws IOException {, +        super(in);, +        this.requestsPerSecond = in.readFloat();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);]