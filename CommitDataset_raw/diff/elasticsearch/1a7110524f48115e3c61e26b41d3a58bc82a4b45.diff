[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc, +    Auto-expand the number of replicas based on the number of data nodes in the cluster., +    Note that the auto-expanded number of replicas does not take any other allocation, +    rules into account, such as <<allocation-awareness,shard allocation awareness>>,, +    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,, +    and this can lead to the cluster health becoming `YELLOW` if the applicable rules, +    prevent all the replicas from being allocated., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc, +    Auto-expand the number of replicas based on the number of data nodes in the cluster., +    Note that the auto-expanded number of replicas does not take any other allocation, +    rules into account, such as <<allocation-awareness,shard allocation awareness>>,, +    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,, +    and this can lead to the cluster health becoming `YELLOW` if the applicable rules, +    prevent all the replicas from being allocated., +++ b/modules/repository-url/build.gradle, +    dependsOn testClasses, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc, +    Auto-expand the number of replicas based on the number of data nodes in the cluster., +    Note that the auto-expanded number of replicas does not take any other allocation, +    rules into account, such as <<allocation-awareness,shard allocation awareness>>,, +    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,, +    and this can lead to the cluster health becoming `YELLOW` if the applicable rules, +    prevent all the replicas from being allocated., +++ b/modules/repository-url/build.gradle, +    dependsOn testClasses, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/pipeline/moving/avg/MovAvgIT.java, +                    valuesMovAvg.value(), expectedValue, 0.1 * Math.abs(valuesMovAvg.value()));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc, +    Auto-expand the number of replicas based on the number of data nodes in the cluster., +    Note that the auto-expanded number of replicas does not take any other allocation, +    rules into account, such as <<allocation-awareness,shard allocation awareness>>,, +    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,, +    and this can lead to the cluster health becoming `YELLOW` if the applicable rules, +    prevent all the replicas from being allocated., +++ b/modules/repository-url/build.gradle, +    dependsOn testClasses, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/pipeline/moving/avg/MovAvgIT.java, +                    valuesMovAvg.value(), expectedValue, 0.1 * Math.abs(valuesMovAvg.value()));, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc, +    Auto-expand the number of replicas based on the number of data nodes in the cluster., +    Note that the auto-expanded number of replicas does not take any other allocation, +    rules into account, such as <<allocation-awareness,shard allocation awareness>>,, +    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,, +    and this can lead to the cluster health becoming `YELLOW` if the applicable rules, +    prevent all the replicas from being allocated., +++ b/modules/repository-url/build.gradle, +    dependsOn testClasses, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/pipeline/moving/avg/MovAvgIT.java, +                    valuesMovAvg.value(), expectedValue, 0.1 * Math.abs(valuesMovAvg.value()));, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc, +    Auto-expand the number of replicas based on the number of data nodes in the cluster., +    Note that the auto-expanded number of replicas does not take any other allocation, +    rules into account, such as <<allocation-awareness,shard allocation awareness>>,, +    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,, +    and this can lead to the cluster health becoming `YELLOW` if the applicable rules, +    prevent all the replicas from being allocated., +++ b/modules/repository-url/build.gradle, +    dependsOn testClasses, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/pipeline/moving/avg/MovAvgIT.java, +                    valuesMovAvg.value(), expectedValue, 0.1 * Math.abs(valuesMovAvg.value()));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc, +    Auto-expand the number of replicas based on the number of data nodes in the cluster., +    Note that the auto-expanded number of replicas does not take any other allocation, +    rules into account, such as <<allocation-awareness,shard allocation awareness>>,, +    <<shard-allocation-filtering,filtering>> or <<allocation-total-shards,total shards per node>>,, +    and this can lead to the cluster health becoming `YELLOW` if the applicable rules, +    prevent all the replicas from being allocated., +++ b/modules/repository-url/build.gradle, +    dependsOn testClasses, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/pipeline/moving/avg/MovAvgIT.java, +                    valuesMovAvg.value(), expectedValue, 0.1 * Math.abs(valuesMovAvg.value()));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            additionalTest.dependsOn(project.tasks.testClasses), +++ b/docs/reference/index-modules.asciidoc]