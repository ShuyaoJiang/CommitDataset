[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plan/logical/command/sys/SysColumns.java, +import org.elasticsearch.xpack.sql.proto.Mode;, +        return output(false);, +    }, +    , +    private List<Attribute> output(boolean odbcCompatible) {, +        // https://github.com/elastic/elasticsearch/issues/35376, +        // ODBC expects some fields as SHORT while JDBC as Integer, +        // which causes conversion issues and CCE, +        DataType clientBasedType = odbcCompatible ? SHORT : INTEGER;, +                      field("DATA_TYPE", clientBasedType),, +                      field("DECIMAL_DIGITS", clientBasedType),, +                      field("NUM_PREC_RADIX", clientBasedType),, +                      field("NULLABLE", clientBasedType),, +                      field("SQL_DATA_TYPE", clientBasedType),, +                      field("SQL_DATETIME_SUB", clientBasedType),, +        boolean isOdbcClient = session.settings().mode() == Mode.ODBC;, +        List<Attribute> output = output(isOdbcClient);, +            listener.onResponse(Rows.empty(output));, +                fillInRows(cluster, esIndex.name(), esIndex.mapping(), null, rows, columnMatcher, isOdbcClient);, +            listener.onResponse(Rows.of(output, rows));, +            Pattern columnMatcher, boolean isOdbcClient) {, +                        odbcCompatible(type.sqlType.getVendorTypeNumber(), isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlRadix(type), isOdbcClient),, +                        odbcCompatible(DatabaseMetaData.columnNullable, isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlDataType(type), isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlDateTimeSub(type), isOdbcClient),, +                fillInRows(clusterName, indexName, field.getProperties(), name, rows, columnMatcher, isOdbcClient);, +    private static Object odbcCompatible(Integer value, boolean isOdbcClient) {, +        if (isOdbcClient && value != null) {, +            return Short.valueOf(value.shortValue());, +        }, +        return value;, +    }, +, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plan/logical/command/sys/SysColumns.java, +import org.elasticsearch.xpack.sql.proto.Mode;, +        return output(false);, +    }, +    , +    private List<Attribute> output(boolean odbcCompatible) {, +        // https://github.com/elastic/elasticsearch/issues/35376, +        // ODBC expects some fields as SHORT while JDBC as Integer, +        // which causes conversion issues and CCE, +        DataType clientBasedType = odbcCompatible ? SHORT : INTEGER;, +                      field("DATA_TYPE", clientBasedType),, +                      field("DECIMAL_DIGITS", clientBasedType),, +                      field("NUM_PREC_RADIX", clientBasedType),, +                      field("NULLABLE", clientBasedType),, +                      field("SQL_DATA_TYPE", clientBasedType),, +                      field("SQL_DATETIME_SUB", clientBasedType),, +        boolean isOdbcClient = session.settings().mode() == Mode.ODBC;, +        List<Attribute> output = output(isOdbcClient);, +            listener.onResponse(Rows.empty(output));, +                fillInRows(cluster, esIndex.name(), esIndex.mapping(), null, rows, columnMatcher, isOdbcClient);, +            listener.onResponse(Rows.of(output, rows));, +            Pattern columnMatcher, boolean isOdbcClient) {, +                        odbcCompatible(type.sqlType.getVendorTypeNumber(), isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlRadix(type), isOdbcClient),, +                        odbcCompatible(DatabaseMetaData.columnNullable, isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlDataType(type), isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlDateTimeSub(type), isOdbcClient),, +                fillInRows(clusterName, indexName, field.getProperties(), name, rows, columnMatcher, isOdbcClient);, +    private static Object odbcCompatible(Integer value, boolean isOdbcClient) {, +        if (isOdbcClient && value != null) {, +            return Short.valueOf(value.shortValue());, +        }, +        return value;, +    }, +, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TransportSqlQueryAction.java, +                request.filter(), request.mode());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plan/logical/command/sys/SysColumns.java, +import org.elasticsearch.xpack.sql.proto.Mode;, +        return output(false);, +    }, +    , +    private List<Attribute> output(boolean odbcCompatible) {, +        // https://github.com/elastic/elasticsearch/issues/35376, +        // ODBC expects some fields as SHORT while JDBC as Integer, +        // which causes conversion issues and CCE, +        DataType clientBasedType = odbcCompatible ? SHORT : INTEGER;, +                      field("DATA_TYPE", clientBasedType),, +                      field("DECIMAL_DIGITS", clientBasedType),, +                      field("NUM_PREC_RADIX", clientBasedType),, +                      field("NULLABLE", clientBasedType),, +                      field("SQL_DATA_TYPE", clientBasedType),, +                      field("SQL_DATETIME_SUB", clientBasedType),, +        boolean isOdbcClient = session.settings().mode() == Mode.ODBC;, +        List<Attribute> output = output(isOdbcClient);, +            listener.onResponse(Rows.empty(output));, +                fillInRows(cluster, esIndex.name(), esIndex.mapping(), null, rows, columnMatcher, isOdbcClient);, +            listener.onResponse(Rows.of(output, rows));, +            Pattern columnMatcher, boolean isOdbcClient) {, +                        odbcCompatible(type.sqlType.getVendorTypeNumber(), isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlRadix(type), isOdbcClient),, +                        odbcCompatible(DatabaseMetaData.columnNullable, isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlDataType(type), isOdbcClient),, +                        odbcCompatible(DataTypes.metaSqlDateTimeSub(type), isOdbcClient),, +                fillInRows(clusterName, indexName, field.getProperties(), name, rows, columnMatcher, isOdbcClient);]