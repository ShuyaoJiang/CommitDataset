[+++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +++ b/core/build.gradle, +  if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {, +}, +, +if (isEclipse) {, +  // in eclipse the project is under a fake root, we need to change around the source sets, +  sourceSets {, +    if (project.path == "${projectsPrefix}:core") {, +      main.java.srcDirs = ['java'], +      main.resources.srcDirs = ['resources'], +    } else {, +      test.java.srcDirs = ['java'], +      test.resources.srcDirs = ['resources'], +    }, +  }, +}, +if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {, +}, +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +++ b/core/build.gradle, +  if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {, +}, +, +if (isEclipse) {, +  // in eclipse the project is under a fake root, we need to change around the source sets, +  sourceSets {, +    if (project.path == "${projectsPrefix}:core") {, +      main.java.srcDirs = ['java'], +      main.resources.srcDirs = ['resources'], +    } else {, +      test.java.srcDirs = ['java'], +      test.resources.srcDirs = ['resources'], +    }, +  }, +}, +if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {, +}, +++ b/core/src/main/eclipse-build.gradle, +, +// this is just shell gradle file for eclipse to have separate projects for core src and tests, +apply from: '../../build.gradle', +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +++ b/core/build.gradle, +  if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {, +}, +, +if (isEclipse) {, +  // in eclipse the project is under a fake root, we need to change around the source sets, +  sourceSets {, +    if (project.path == "${projectsPrefix}:core") {, +      main.java.srcDirs = ['java'], +      main.resources.srcDirs = ['resources'], +    } else {, +      test.java.srcDirs = ['java'], +      test.resources.srcDirs = ['resources'], +    }, +  }, +}, +if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {, +}, +++ b/core/src/main/eclipse-build.gradle, +, +// this is just shell gradle file for eclipse to have separate projects for core src and tests, +apply from: '../../build.gradle', +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocators.java, +++ b/build.gradle, +, +    // for eclipse hacks..., +    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse'), +++ b/core/build.gradle, +  if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {, +}, +, +if (isEclipse) {, +  // in eclipse the project is under a fake root, we need to change around the source sets, +  sourceSets {, +    if (project.path == "${projectsPrefix}:core") {, +      main.java.srcDirs = ['java'], +      main.resources.srcDirs = ['resources'], +    } else {, +      test.java.srcDirs = ['java'], +      test.resources.srcDirs = ['resources'], +    }, +  }, +}, +if (isEclipse == false || project.path == "${projectsPrefix}:core-tests") {]