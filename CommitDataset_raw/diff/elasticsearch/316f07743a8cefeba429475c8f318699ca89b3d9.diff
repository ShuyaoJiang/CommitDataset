[+++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/build.gradle, +      javadoc = false, +if (hasProperty('projectsPrefix') == false) {, +  allprojects {, +    project.ext['projectsPrefix'] = '', +  }  , +}, +, +  gradle.projectsEvaluated {, +  configurations {, +    all {, +      resolutionStrategy {, +        dependencySubstitution {, +          substitute module("org.elasticsearch:rest-api-spec:${version}") with project("${projectsPrefix}:rest-api-spec"), +          substitute module("org.elasticsearch:elasticsearch:${version}") with project("${projectsPrefix}:core"), +          substitute module("org.elasticsearch:test-framework:${version}") with project("${projectsPrefix}:test-framework"), +          substitute module("org.elasticsearch.distribution.zip:elasticsearch:${version}") with project("${projectsPrefix}:distribution:zip"), +          substitute module("org.elasticsearch.distribution.tar:elasticsearch:${version}") with project("${projectsPrefix}:distribution:tar"), +if (projectsPrefix.isEmpty()) {, +      languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava, +  tasks.cleanIdea {, +    delete '.idea', +task clean(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['clean'], +}, +task run(dependsOn: ':distribution:run'), +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/build.gradle, +      javadoc = false, +if (hasProperty('projectsPrefix') == false) {, +  allprojects {, +    project.ext['projectsPrefix'] = '', +  }  , +}, +, +  gradle.projectsEvaluated {, +  configurations {, +    all {, +      resolutionStrategy {, +        dependencySubstitution {, +          substitute module("org.elasticsearch:rest-api-spec:${version}") with project("${projectsPrefix}:rest-api-spec"), +          substitute module("org.elasticsearch:elasticsearch:${version}") with project("${projectsPrefix}:core"), +          substitute module("org.elasticsearch:test-framework:${version}") with project("${projectsPrefix}:test-framework"), +          substitute module("org.elasticsearch.distribution.zip:elasticsearch:${version}") with project("${projectsPrefix}:distribution:zip"), +          substitute module("org.elasticsearch.distribution.tar:elasticsearch:${version}") with project("${projectsPrefix}:distribution:tar"), +if (projectsPrefix.isEmpty()) {, +      languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava, +  tasks.cleanIdea {, +    delete '.idea', +task clean(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['clean'], +}, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +            haltOnFailure: haltOnFailure,, +        def junit4 = NamespaceBuilder.newInstance(ant, 'junit4'), +++ b/TESTING.asciidoc, +gradle copyDepsToTestRoot, +If you want to run elasticsearch from your IDE, you should execute gradle run, +It opens a remote debugging port that you can connect with your IDE., +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/releases, +export TAR=/elasticsearch/distribution/tar/build/releases, +export RPM=/elasticsearch/distribution/rpm/build/releases, +export DEB=/elasticsearch/distribution/deb/build/releases, +++ b/build.gradle, +      javadoc = false, +if (hasProperty('projectsPrefix') == false) {]