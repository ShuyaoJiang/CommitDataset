[+++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    shardRoutingsToBeApplied.add(new FailedRerouteAllocation.FailedShard(entry.shardRouting, entry.message, entry.failure));, +                            shardRoutingToBeApplied.add(entry.shardRouting);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    shardRoutingsToBeApplied.add(new FailedRerouteAllocation.FailedShard(entry.shardRouting, entry.message, entry.failure));, +                            shardRoutingToBeApplied.add(entry.shardRouting);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/AllocationId.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +public class AllocationId implements ToXContent {, +        return new AllocationId(allocationId.getRelocationId(), allocationId.getId());, +     *, +     * Note that this is expected to be called on the allocation id, +     * of the *source* shard, +     * */, +     * Creates a new allocation id finalizing a relocation., +     *, +     * Note that this is expected to be called on the allocation id, +     * of the *target* shard and thus it only needs to clear the relocating id., +        return new AllocationId(allocationId.getId(), null);, +, +    @Override, +    public String toString() {, +        return "[id=" + id + (relocationId == null ? "" : ", rId=" + relocationId) + "]";, +    }, +, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject("allocation_id");, +        builder.field("id", id);, +        if (relocationId != null) {, +            builder.field("relocation_id", relocationId);, +        }, +        builder.endObject();, +        return builder;, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    shardRoutingsToBeApplied.add(new FailedRerouteAllocation.FailedShard(entry.shardRouting, entry.message, entry.failure));, +                            shardRoutingToBeApplied.add(entry.shardRouting);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/AllocationId.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +public class AllocationId implements ToXContent {, +        return new AllocationId(allocationId.getRelocationId(), allocationId.getId());, +     *, +     * Note that this is expected to be called on the allocation id, +     * of the *source* shard, +     * */, +     * Creates a new allocation id finalizing a relocation., +     *, +     * Note that this is expected to be called on the allocation id, +     * of the *target* shard and thus it only needs to clear the relocating id., +        return new AllocationId(allocationId.getId(), null);, +, +    @Override, +    public String toString() {, +        return "[id=" + id + (relocationId == null ? "" : ", rId=" + relocationId) + "]";, +    }, +, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject("allocation_id");, +        builder.field("id", id);, +        if (relocationId != null) {, +            builder.field("relocation_id", relocationId);, +        }, +        builder.endObject();, +        return builder;, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +        assert !shard.active() : "expected an intializing shard " + shard;, +        if (shard.relocatingNodeId() == null) {, +            // if this is not a target shard for relocation, we need to update statistics, +        private boolean removed = false;, +            removed = false;, +            removed = true;, +        }, +, +, +        /** returns true if {@link #remove()} or {@link #moveToUnassigned(UnassignedInfo)} were called on the current shard */, +        public boolean isRemoved() {, +            return removed;, +            if (isRemoved() == false) {, +            }, +, +        public ShardRouting current() {, +            return shard;, +        }, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +                    shardRoutingsToBeApplied.add(new FailedRerouteAllocation.FailedShard(entry.shardRouting, entry.message, entry.failure));, +                            shardRoutingToBeApplied.add(entry.shardRouting);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/AllocationId.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +public class AllocationId implements ToXContent {, +        return new AllocationId(allocationId.getRelocationId(), allocationId.getId());, +     *, +     * Note that this is expected to be called on the allocation id, +     * of the *source* shard, +     * */]