[+++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, + * stopwords. This query basically builds 2 queries off the {@link #addAggregator(Term), +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, + * stopwords. This query basically builds 2 queries off the {@link #addAggregator(Term), +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java, +, +import org.elasticsearch.search.aggregations.reducers.Reducer;, +    private List<Class<? extends Aggregator.Parser>> aggParsers = Lists.newArrayList();, +    private List<Class<? extends Reducer.Parser>> reducerParsers = Lists.newArrayList();, +        aggParsers.add(AvgParser.class);, +        aggParsers.add(SumParser.class);, +        aggParsers.add(MinParser.class);, +        aggParsers.add(MaxParser.class);, +        aggParsers.add(StatsParser.class);, +        aggParsers.add(ExtendedStatsParser.class);, +        aggParsers.add(ValueCountParser.class);, +        aggParsers.add(PercentilesParser.class);, +        aggParsers.add(PercentileRanksParser.class);, +        aggParsers.add(CardinalityParser.class);, +        aggParsers.add(GlobalParser.class);, +        aggParsers.add(MissingParser.class);, +        aggParsers.add(FilterParser.class);, +        aggParsers.add(FiltersParser.class);, +        aggParsers.add(TermsParser.class);, +        aggParsers.add(SignificantTermsParser.class);, +        aggParsers.add(RangeParser.class);, +        aggParsers.add(DateRangeParser.class);, +        aggParsers.add(IpRangeParser.class);, +        aggParsers.add(HistogramParser.class);, +        aggParsers.add(DateHistogramParser.class);, +        aggParsers.add(GeoDistanceParser.class);, +        aggParsers.add(GeoHashGridParser.class);, +        aggParsers.add(NestedParser.class);, +        aggParsers.add(ReverseNestedParser.class);, +        aggParsers.add(TopHitsParser.class);, +        aggParsers.add(GeoBoundsParser.class);, +        aggParsers.add(ScriptedMetricParser.class);, +        aggParsers.add(ChildrenParser.class);, +        aggParsers.add(parser);, +        Multibinder<Aggregator.Parser> multibinderAggParser = Multibinder.newSetBinder(binder(), Aggregator.Parser.class);, +        for (Class<? extends Aggregator.Parser> parser : aggParsers) {, +            multibinderAggParser.addBinding().to(parser);, +        }, +        Multibinder<Reducer.Parser> multibinderReducerParser = Multibinder.newSetBinder(binder(), Reducer.Parser.class);, +        for (Class<? extends Reducer.Parser> parser : reducerParsers) {, +            multibinderReducerParser.addBinding().to(parser);, +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, + * stopwords. This query basically builds 2 queries off the {@link #addAggregator(Term), +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java, +, +import org.elasticsearch.search.aggregations.reducers.Reducer;, +    private List<Class<? extends Aggregator.Parser>> aggParsers = Lists.newArrayList();, +    private List<Class<? extends Reducer.Parser>> reducerParsers = Lists.newArrayList();, +        aggParsers.add(AvgParser.class);, +        aggParsers.add(SumParser.class);, +        aggParsers.add(MinParser.class);, +        aggParsers.add(MaxParser.class);, +        aggParsers.add(StatsParser.class);, +        aggParsers.add(ExtendedStatsParser.class);, +        aggParsers.add(ValueCountParser.class);, +        aggParsers.add(PercentilesParser.class);, +        aggParsers.add(PercentileRanksParser.class);, +        aggParsers.add(CardinalityParser.class);, +        aggParsers.add(GlobalParser.class);, +        aggParsers.add(MissingParser.class);, +        aggParsers.add(FilterParser.class);, +        aggParsers.add(FiltersParser.class);, +        aggParsers.add(TermsParser.class);, +        aggParsers.add(SignificantTermsParser.class);, +        aggParsers.add(RangeParser.class);, +        aggParsers.add(DateRangeParser.class);, +        aggParsers.add(IpRangeParser.class);, +        aggParsers.add(HistogramParser.class);, +        aggParsers.add(DateHistogramParser.class);, +        aggParsers.add(GeoDistanceParser.class);, +        aggParsers.add(GeoHashGridParser.class);, +        aggParsers.add(NestedParser.class);, +        aggParsers.add(ReverseNestedParser.class);, +        aggParsers.add(TopHitsParser.class);, +        aggParsers.add(GeoBoundsParser.class);, +        aggParsers.add(ScriptedMetricParser.class);, +        aggParsers.add(ChildrenParser.class);, +        aggParsers.add(parser);, +        Multibinder<Aggregator.Parser> multibinderAggParser = Multibinder.newSetBinder(binder(), Aggregator.Parser.class);, +        for (Class<? extends Aggregator.Parser> parser : aggParsers) {, +            multibinderAggParser.addBinding().to(parser);, +        }, +        Multibinder<Reducer.Parser> multibinderReducerParser = Multibinder.newSetBinder(binder(), Reducer.Parser.class);, +        for (Class<? extends Reducer.Parser> parser : reducerParsers) {, +            multibinderReducerParser.addBinding().to(parser);, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java, +import org.elasticsearch.search.aggregations.reducers.ReducerFactory;, +    private List<ReducerFactory> reducerFactories;, +    private AggregatorFactories(AggregatorFactory[] factories, List<ReducerFactory> reducers) {, +        this.reducerFactories = reducers;, +    public List<Reducer> createReducers() throws IOException {, +        List<Reducer> reducers = new ArrayList<>();, +        for (ReducerFactory factory : this.reducerFactories) {, +            reducers.add(factory.create(null, null, false)); // NOCOMIT add context, parent etc., +        }]