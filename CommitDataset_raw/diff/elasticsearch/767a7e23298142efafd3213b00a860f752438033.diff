[+++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java, +    public Term getTerm() {, +        return term;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java, +    public Term getTerm() {, +        return term;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/search/MatchQuery.java, +import org.elasticsearch.common.lucene.all.AllTermQuery;, +            } else if (query instanceof AllTermQuery) {, +                prefixQuery.add(((AllTermQuery) query).getTerm());, +                return prefixQuery;, +++ b/core/src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java, +    public Term getTerm() {, +        return term;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/search/MatchQuery.java, +import org.elasticsearch.common.lucene.all.AllTermQuery;, +            } else if (query instanceof AllTermQuery) {, +                prefixQuery.add(((AllTermQuery) query).getTerm());, +                return prefixQuery;, +++ b/core/src/test/java/org/elasticsearch/index/search/MultiMatchQueryTests.java, +import org.apache.lucene.search.BooleanClause.Occur;, +import org.elasticsearch.common.lucene.search.MultiPhrasePrefixQuery;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.instanceOf;, +, +    public void testMultiMatchPrefixWithAllField() throws IOException {, +        QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setAllowUnmappedFields(true);, +        Query parsedQuery =, +            multiMatchQuery("foo").field("_all").type(MultiMatchQueryBuilder.Type.PHRASE_PREFIX).toQuery(queryShardContext);, +        assertThat(parsedQuery, instanceOf(MultiPhrasePrefixQuery.class));, +        assertThat(parsedQuery.toString(), equalTo("_all:\"foo*\""));, +    }]