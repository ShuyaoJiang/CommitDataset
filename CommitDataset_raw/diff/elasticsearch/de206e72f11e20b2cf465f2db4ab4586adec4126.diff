[+++ b/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java, +import static org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders.scriptFunction;, +        SearchResponse searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 2l);, +        assertSearchHits(searchResponse, "1", "2");, +        searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 3l);, +        assertSearchHits(searchResponse, "1", "2", "3");, +        searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 3l);, +        assertSearchHits(searchResponse, "1", "2", "3");, +        searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 1l);, +        assertFirstHit(searchResponse, hasId("1"));, +        SearchResponse searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 2l);, +        assertSearchHits(searchResponse, "1", "2");, +        searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 3l);, +        assertSearchHits(searchResponse, "1", "2", "3");, +        searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 3l);, +        assertSearchHits(searchResponse, "1", "2", "3");, +        searchResponse = client().prepareSearch("index1", "index2", "index3"), +        assertHitCount(searchResponse, 1l);, +        assertFirstHit(searchResponse, hasId("1"));, +                        .endObject().endObject().endObject()).get();, +        SearchResponse searchResponse = client().prepareSearch("related", "simple"), +        assertHitCount(searchResponse, 2l);, +        assertSearchHits(searchResponse, "1", "2");, +                        .endObject().endObject().endObject()).get();, +        SearchResponse searchResponse = client().prepareSearch("related", "simple"), +        assertHitCount(searchResponse, 2l);, +        assertSearchHits(searchResponse, "1", "2");, +    }, +, +    @Test, +    public void testMinScore() {, +        createIndex("test");, +        ensureGreen();, +, +        client().prepareIndex("test", "test", "1").setSource("score", 1.5).get();, +        client().prepareIndex("test", "test", "2").setSource("score", 1).get();, +        client().prepareIndex("test", "test", "3").setSource("score", 2).get();, +        client().prepareIndex("test", "test", "4").setSource("score", 0.5).get();, +, +        refresh();, +, +        SearchResponse searchResponse = client().prepareSearch("test").setQuery(, +                functionScoreQuery(scriptFunction("_doc['score'].value"))).setMinScore(1.5f).get();, +        assertHitCount(searchResponse, 2);, +, +        assertFirstHit(searchResponse, hasId("3"));, +        assertSecondHit(searchResponse, hasId("1"));]