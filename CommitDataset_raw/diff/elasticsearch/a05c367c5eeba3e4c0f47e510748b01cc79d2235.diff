[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +    public void snapshotOnClose() {, +        if (snapshotOnClose) {, +    }, +, +    public synchronized void close(boolean delete) {, +        if (snapshotScheduleFuture != null) {, +            snapshotScheduleFuture.cancel(true);, +            snapshotScheduleFuture = null;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +    public void snapshotOnClose() {, +        if (snapshotOnClose) {, +    }, +, +    public synchronized void close(boolean delete) {, +        if (snapshotScheduleFuture != null) {, +            snapshotScheduleFuture.cancel(true);, +            snapshotScheduleFuture = null;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +                            deleteShard(shardId, delete, !delete, delete);, +        deleteShard(shardId, true, false, false);, +    private void deleteShard(int shardId, boolean delete, boolean snapshotGateway, boolean deleteGateway) throws ElasticSearchException {, +, +            if (snapshotGateway) {, +                shardInjector.getInstance(IndexShardGatewayService.class).snapshotOnClose();, +            }, +        } catch (Exception e) {, +            // ignore, +        }, +        try {]