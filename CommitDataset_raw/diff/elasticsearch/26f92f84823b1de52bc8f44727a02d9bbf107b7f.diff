[+++ b/docs/reference/cluster/allocation-explain.asciidoc, +The purpose of the cluster allocation explain API is to provide, +explanations for shard allocations in the cluster.  For unassigned shards,, +the explain API provides an explanation for why the shard is unassigned., +For assigned shards, the explain API provides an explanation for why the, +shard is remaining on its current moved and has not moved or rebalanced to, +another node.  This API can be very useful when attempting to diagnose why, +a shard is unassigned or why a shard continues to remain on its current node, +when you might expect otherwise., +=== Explain API Request, +, +To explain the allocation of a shard, issue a request:, +  "primary": true, +for, as well as the `primary` flag to indicate whether to explain the primary, +shard for the given shard id or one of its replica shards.  These three request, +parameters are required., +You may also specify an optional `current_node` request parameter to only explain, +a shard that is currently located on `current_node`.  The `current_node` can be, +specified as either the node id or node name., +$ curl -XGET 'http://localhost:9200/_cluster/allocation/explain' -d '{, +  "shard": 0,, +  "primary": false,, +  "current_node": "nodeA"                         <1>, +}', +<1> The node where shard 0 currently has a replica on, +shard that it finds by sending an empty body for the request:, +=== Explain API Response, +, +This section includes examples of the cluster allocation explain API response output, +under various scenarios., +, +The API response for an unassigned shard:, +, +[source,js], +--------------------------------------------------, +{, +  "index" : "idx",, +  "shard" : 0,, +  "primary" : true,, +  "current_state" : "unassigned",                 <1>, +  "unassigned_info" : {, +    "reason" : "INDEX_CREATED",                   <2>, +    "at" : "2017-01-04T18:08:16.600Z",, +    "last_allocation_status" : "no", +  },, +  "can_allocate" : "no",                          <3>, +  "allocate_explanation" : "cannot allocate because allocation is not permitted to any of the nodes",, +  "node_allocation_decisions" : [, +    {, +      "node_id" : "8qt2rY-pT6KNZB3-hGfLnw",, +      "node_name" : "node_t1",, +      "transport_address" : "127.0.0.1:9401",, +      "node_decision" : "no",                     <4>, +      "weight_ranking" : 1,, +      "deciders" : [, +        {, +          "decider" : "filter",                   <5>, +          "decision" : "NO",, +          "explanation" : "node does not match index setting [index.routing.allocation.include] filters [_name:\"non_existent_node\"]"  <6>, +        }, +      ], +    },, +    {, +      "node_id" : "7Wr-QxLXRLKDxhzNm50pFA",, +      "node_name" : "node_t0",, +      "transport_address" : "127.0.0.1:9400",, +      "node_decision" : "no",, +      "weight_ranking" : 2,, +      "deciders" : [, +        {, +          "decider" : "filter",, +          "decision" : "NO",, +          "explanation" : "node does not match index setting [index.routing.allocation.include] filters [_name:\"non_existent_node\"]", +        }, +      ], +    }, +  ], +}, +--------------------------------------------------, +<1> The current state of the shard, +<2> The reason for the shard originally becoming unassigned, +<3> Whether to allocate the shard, +<4> Whether to allocate the shard to the particular node, +<5> The decider which led to the `no` decision for the node, +<6> An explanation as to why the decider returned a `no` decision, with a helpful hint pointing to the setting that led to the decision, +, +You can return information gathered by the cluster info service about disk usage, +and shard sizes by setting the `include_disk_info` parameter to `true`:, +, +[source,js], +--------------------------------------------------, +$ curl -XGET 'http://localhost:9200/_cluster/allocation/explain?include_disk_info=true', +--------------------------------------------------, +, +Additionally, if you would like to include all decisions that were factored into the final, +decision, the `include_yes_decisions` parameter will return all decisions for each node:, +The default value for `include_yes_decisions` is `false`, which will only, +include the `no` decisions in the response.  This is generally what you would, +want, as the `no` decisions indicate why a shard is unassigned or cannot be moved,, +and including all decisions include the `yes` ones adds a lot of verbosity to the]