[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrClient.java, +import org.elasticsearch.client.ccr.UnfollowRequest;, +    /**, +     * Instructs a follower index to unfollow and become a regular index., +     * Note that index following needs to be paused and the follower index needs to be closed., +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">, +     * the docs</a> for more., +     *, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(, +            request,, +            CcrRequestConverters::unfollow,, +            options,, +            AcknowledgedResponse::fromXContent,, +            Collections.emptySet(), +        );, +    }, +, +    /**, +     * Asynchronously instructs a follower index to unfollow and become a regular index., +     * Note that index following needs to be paused and the follower index needs to be closed., +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">, +     * the docs</a> for more., +     *, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     */, +    public void unfollowAsync(UnfollowRequest request,, +                              RequestOptions options,, +                              ActionListener<AcknowledgedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(, +            request,, +            CcrRequestConverters::unfollow,, +            options,, +            AcknowledgedResponse::fromXContent,, +            listener,, +            Collections.emptySet(), +        );, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrClient.java, +import org.elasticsearch.client.ccr.UnfollowRequest;, +    /**, +     * Instructs a follower index to unfollow and become a regular index., +     * Note that index following needs to be paused and the follower index needs to be closed., +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">, +     * the docs</a> for more., +     *, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(, +            request,, +            CcrRequestConverters::unfollow,, +            options,, +            AcknowledgedResponse::fromXContent,, +            Collections.emptySet(), +        );, +    }, +, +    /**, +     * Asynchronously instructs a follower index to unfollow and become a regular index., +     * Note that index following needs to be paused and the follower index needs to be closed., +     *, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">, +     * the docs</a> for more., +     *, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     */, +    public void unfollowAsync(UnfollowRequest request,, +                              RequestOptions options,, +                              ActionListener<AcknowledgedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(, +            request,, +            CcrRequestConverters::unfollow,, +            options,, +            AcknowledgedResponse::fromXContent,, +            listener,, +            Collections.emptySet(), +        );, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/CcrRequestConverters.java, +import org.elasticsearch.client.ccr.UnfollowRequest;, +    static Request unfollow(UnfollowRequest unfollowRequest) {, +        String endpoint = new RequestConverters.EndpointBuilder(), +            .addPathPart(unfollowRequest.getFollowerIndex()), +            .addPathPartAsIs("_ccr", "unfollow")]