[+++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.queries.BoostingQuery;, +import org.apache.lucene.search.BoostQuery;, +        if (sourceQuery instanceof BoostQuery) {, +            BoostQuery bq = (BoostQuery) sourceQuery;, +            sourceQuery = bq.getQuery();, +            boost *= bq.getBoost();, +            flatten(sourceQuery, reader, flatQueries, boost);, +        } else if (sourceQuery instanceof SpanTermQuery) {, +        } else if (sourceQuery instanceof BoostingQuery) {, +            BoostingQuery boostingQuery = (BoostingQuery) sourceQuery;, +            //flatten positive query with query boost, +            flatten(boostingQuery.getMatch(), reader, flatQueries, boost);, +            //flatten negative query with negative boost, +            flatten(boostingQuery.getContext(), reader, flatQueries, boostingQuery.getBoost());, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.queries.BoostingQuery;, +import org.apache.lucene.search.BoostQuery;, +        if (sourceQuery instanceof BoostQuery) {, +            BoostQuery bq = (BoostQuery) sourceQuery;, +            sourceQuery = bq.getQuery();, +            boost *= bq.getBoost();, +            flatten(sourceQuery, reader, flatQueries, boost);, +        } else if (sourceQuery instanceof SpanTermQuery) {, +        } else if (sourceQuery instanceof BoostingQuery) {, +            BoostingQuery boostingQuery = (BoostingQuery) sourceQuery;, +            //flatten positive query with query boost, +            flatten(boostingQuery.getMatch(), reader, flatQueries, boost);, +            //flatten negative query with negative boost, +            flatten(boostingQuery.getContext(), reader, flatQueries, boostingQuery.getBoost());, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java]