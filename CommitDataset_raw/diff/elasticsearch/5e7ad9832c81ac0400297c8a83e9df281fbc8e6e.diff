[+++ b/src/main/java/org/elasticsearch/index/fielddata/BytesValues.java, +            protected int innerOrd;, +            protected BytesValues.WithOrdinals withOrds;, +            protected Ordinals.Docs.Iter ordsIter;, +            protected final BytesRef scratch = new BytesRef();, +++ b/src/main/java/org/elasticsearch/index/fielddata/BytesValues.java, +            protected int innerOrd;, +            protected BytesValues.WithOrdinals withOrds;, +            protected Ordinals.Docs.Iter ordsIter;, +            protected final BytesRef scratch = new BytesRef();, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ConcreteBytesRefAtomicFieldData.java, +            protected Iter.Multi newMultiIter() {, +                return new Iter.Multi(this) {, +                    private BytesRef current = null;, +                    @Override, +                    public BytesRef next() {, +                        current = withOrds.getValueByOrd(innerOrd);, +                        ord = innerOrd;, +                        innerOrd = ordsIter.next();, +                        return current;, +                    } , +                    public int hash() {, +                        assert current != null;, +                        return current.hashCode();, +                    }, +                };, +            }, +, +            @Override, +                    private BytesRef current = null;, +                    @Override, +                    public BytesRef next() {, +                        current = withOrds.getValueByOrd(innerOrd);, +                        ord = innerOrd;, +                        innerOrd = ordsIter.next();, +                        return current;, +                    } , +, +++ b/src/main/java/org/elasticsearch/index/fielddata/BytesValues.java, +            protected int innerOrd;, +            protected BytesValues.WithOrdinals withOrds;, +            protected Ordinals.Docs.Iter ordsIter;, +            protected final BytesRef scratch = new BytesRef();, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ConcreteBytesRefAtomicFieldData.java, +            protected Iter.Multi newMultiIter() {, +                return new Iter.Multi(this) {, +                    private BytesRef current = null;, +                    @Override, +                    public BytesRef next() {, +                        current = withOrds.getValueByOrd(innerOrd);, +                        ord = innerOrd;, +                        innerOrd = ordsIter.next();, +                        return current;, +                    } , +                    public int hash() {, +                        assert current != null;, +                        return current.hashCode();, +                    }, +                };, +            }, +, +            @Override, +                    private BytesRef current = null;, +                    @Override, +                    public BytesRef next() {, +                        current = withOrds.getValueByOrd(innerOrd);, +                        ord = innerOrd;, +                        innerOrd = ordsIter.next();, +                        return current;, +                    } , +, +++ b/src/main/java/org/elasticsearch/search/facet/terms/strings/FieldsTermsStringFacetExecutor.java, +        try {, +        } finally {, +            aggregator.release();, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/BytesValues.java, +            protected int innerOrd;, +            protected BytesValues.WithOrdinals withOrds;, +            protected Ordinals.Docs.Iter ordsIter;, +            protected final BytesRef scratch = new BytesRef();, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ConcreteBytesRefAtomicFieldData.java, +            protected Iter.Multi newMultiIter() {, +                return new Iter.Multi(this) {, +                    private BytesRef current = null;, +                    @Override, +                    public BytesRef next() {, +                        current = withOrds.getValueByOrd(innerOrd);, +                        ord = innerOrd;, +                        innerOrd = ordsIter.next();, +                        return current;, +                    } , +                    public int hash() {, +                        assert current != null;, +                        return current.hashCode();, +                    }, +                };, +            }, +, +            @Override]