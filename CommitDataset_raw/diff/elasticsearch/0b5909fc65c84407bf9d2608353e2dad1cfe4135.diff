[+++ b/plugin/src/main/java/org/elasticsearch/xpack/common/http/HttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/common/http/HttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/IntegrationAccount.java, +            sentMessages.add(SentMessages.SentMessage.error(room, SentMessages.SentMessage.TargetType.ROOM, message, e));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/common/http/HttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/IntegrationAccount.java, +            sentMessages.add(SentMessages.SentMessage.error(room, SentMessages.SentMessage.TargetType.ROOM, message, e));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/SentMessages.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.common.ParseField;, +    private static final ParseField ACCOUNT = new ParseField("account");, +    private static final ParseField SENT_MESSAGES = new ParseField("sent_messages");, +, +        builder.field(ACCOUNT.getPreferredName(), accountName);, +        builder.startArray(SENT_MESSAGES.getPreferredName());, +        private static final ParseField STATUS = new ParseField("status");, +        private static final ParseField REQUEST = new ParseField("request");, +        private static final ParseField RESPONSE = new ParseField("response");, +        private static final ParseField MESSAGE = new ParseField("message");, +, +        @Nullable final Exception exception;, +            return new SentMessage(targetName, targetType, message, request, response, null);, +        public static SentMessage error(String targetName, TargetType targetType, HipChatMessage message, Exception e) {, +            return new SentMessage(targetName, targetType, message, null, null, e);, +                            Exception exception) {, +            this.exception = exception;, +        public Exception getException() {, +            return exception;, +        }, +, +        public boolean isSuccess() {, +            return response != null && response.status() >= 200 && response.status() < 300;, +            builder.field(STATUS.getPreferredName(), isSuccess() ? "success" : "failure");, +            if (isSuccess() == false) {, +                builder.field(STATUS.getPreferredName(), "failure");, +                    builder.field(REQUEST.getPreferredName());, +                    builder.field(RESPONSE.getPreferredName());, +                if (exception != null) {, +                    ElasticsearchException.generateFailureXContent(builder, params, exception, true);, +                }, +            builder.field(MESSAGE.getPreferredName());, +++ b/plugin/src/main/java/org/elasticsearch/xpack/common/http/HttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/IntegrationAccount.java, +            sentMessages.add(SentMessages.SentMessage.error(room, SentMessages.SentMessage.TargetType.ROOM, message, e));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/SentMessages.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.common.ParseField;, +    private static final ParseField ACCOUNT = new ParseField("account");, +    private static final ParseField SENT_MESSAGES = new ParseField("sent_messages");, +, +        builder.field(ACCOUNT.getPreferredName(), accountName);, +        builder.startArray(SENT_MESSAGES.getPreferredName());, +        private static final ParseField STATUS = new ParseField("status");, +        private static final ParseField REQUEST = new ParseField("request");, +        private static final ParseField RESPONSE = new ParseField("response");, +        private static final ParseField MESSAGE = new ParseField("message");, +, +        @Nullable final Exception exception;, +            return new SentMessage(targetName, targetType, message, request, response, null);, +        public static SentMessage error(String targetName, TargetType targetType, HipChatMessage message, Exception e) {, +            return new SentMessage(targetName, targetType, message, null, null, e);, +                            Exception exception) {, +            this.exception = exception;, +        public Exception getException() {, +            return exception;, +        }, +, +        public boolean isSuccess() {, +            return response != null && response.status() >= 200 && response.status() < 300;, +            builder.field(STATUS.getPreferredName(), isSuccess() ? "success" : "failure");, +            if (isSuccess() == false) {, +                builder.field(STATUS.getPreferredName(), "failure");, +                    builder.field(REQUEST.getPreferredName());, +                    builder.field(RESPONSE.getPreferredName());, +                if (exception != null) {, +                    ElasticsearchException.generateFailureXContent(builder, params, exception, true);, +                }, +            builder.field(MESSAGE.getPreferredName());, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/UserAccount.java, +                    sentMessages.add(SentMessages.SentMessage.error(room, SentMessages.SentMessage.TargetType.ROOM, message, e));, +                    sentMessages.add(SentMessages.SentMessage.error(user, SentMessages.SentMessage.TargetType.USER, message, e));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/common/http/HttpClient.java, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/IntegrationAccount.java, +            sentMessages.add(SentMessages.SentMessage.error(room, SentMessages.SentMessage.TargetType.ROOM, message, e));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/notification/hipchat/SentMessages.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.common.ParseField;, +    private static final ParseField ACCOUNT = new ParseField("account");, +    private static final ParseField SENT_MESSAGES = new ParseField("sent_messages");, +, +        builder.field(ACCOUNT.getPreferredName(), accountName);, +        builder.startArray(SENT_MESSAGES.getPreferredName());, +        private static final ParseField STATUS = new ParseField("status");, +        private static final ParseField REQUEST = new ParseField("request");, +        private static final ParseField RESPONSE = new ParseField("response");, +        private static final ParseField MESSAGE = new ParseField("message");, +]