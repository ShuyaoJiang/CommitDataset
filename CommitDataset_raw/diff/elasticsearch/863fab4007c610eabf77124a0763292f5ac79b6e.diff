[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +import java.util.concurrent.TimeUnit;, +    private final long startTime;, +, +    private final long runningTimeNanos;, +, +    public TaskInfo(DiscoveryNode node, long id, String type, String action, String description, Task.Status status, long startTime,, +                    long runningTimeNanos, TaskId parentTaskId) {, +        this.startTime = startTime;, +        this.runningTimeNanos = runningTimeNanos;, +        startTime = in.readLong();, +        runningTimeNanos = in.readLong();, +    /**, +     * Returns the task start time, +     */, +    public long getStartTime() {, +        return startTime;, +    }, +, +    /**, +     * Returns the task running time, +     */, +    public long getRunningTimeNanos() {, +        return runningTimeNanos;, +    }, +, +    /**, +     * Returns the parent task id, +     */, +        out.writeLong(startTime);, +        out.writeLong(runningTimeNanos);, +        builder.dateValueField("start_time_in_millis", "start_time", startTime);, +        builder.timeValueField("running_time_in_nanos", "running_time", runningTimeNanos, TimeUnit.NANOSECONDS);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +import java.util.concurrent.TimeUnit;, +    private final long startTime;, +, +    private final long runningTimeNanos;, +, +    public TaskInfo(DiscoveryNode node, long id, String type, String action, String description, Task.Status status, long startTime,, +                    long runningTimeNanos, TaskId parentTaskId) {, +        this.startTime = startTime;, +        this.runningTimeNanos = runningTimeNanos;, +        startTime = in.readLong();, +        runningTimeNanos = in.readLong();, +    /**, +     * Returns the task start time, +     */, +    public long getStartTime() {, +        return startTime;, +    }, +, +    /**, +     * Returns the task running time, +     */, +    public long getRunningTimeNanos() {, +        return runningTimeNanos;, +    }, +, +    /**, +     * Returns the parent task id, +     */, +        out.writeLong(startTime);, +        out.writeLong(runningTimeNanos);, +        builder.dateValueField("start_time_in_millis", "start_time", startTime);, +        builder.timeValueField("running_time_in_nanos", "running_time", runningTimeNanos, TimeUnit.NANOSECONDS);, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +import java.util.concurrent.TimeUnit;, +    public XContentBuilder timeValueField(String rawFieldName, String readableFieldName, long rawTime, TimeUnit timeUnit) throws, +        IOException {, +        if (humanReadable) {, +            field(readableFieldName, new TimeValue(rawTime, timeUnit).toString());, +        }, +        field(rawFieldName, rawTime);, +        return this;, +    }, +, +    public XContentBuilder dateValueField(String rawFieldName, String readableFieldName, long rawTimestamp) throws IOException {, +        if (humanReadable) {, +            field(readableFieldName, defaultDatePrinter.print(rawTimestamp));, +        }, +        field(rawFieldName, rawTimestamp);, +        return this;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TaskInfo.java, +import java.util.concurrent.TimeUnit;, +    private final long startTime;, +, +    private final long runningTimeNanos;, +, +    public TaskInfo(DiscoveryNode node, long id, String type, String action, String description, Task.Status status, long startTime,, +                    long runningTimeNanos, TaskId parentTaskId) {, +        this.startTime = startTime;, +        this.runningTimeNanos = runningTimeNanos;, +        startTime = in.readLong();, +        runningTimeNanos = in.readLong();, +    /**, +     * Returns the task start time, +     */]