[+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            indexPatterns = in.readStringList();, +            out.writeStringCollection(indexPatterns);, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            indexPatterns = in.readStringList();, +            out.writeStringCollection(indexPatterns);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +            builder.patterns(in.readStringList());, +            out.writeStringCollection(patterns);, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            indexPatterns = in.readStringList();, +            out.writeStringCollection(indexPatterns);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +            builder.patterns(in.readStringList());, +            out.writeStringCollection(patterns);, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +     * Reads a list of objects. The list is expected to have been written using {@link StreamOutput#writeList(List)} or, +     * {@link StreamOutput#writeStreamableList(List)}., +     *, +     * @return the list of objects, +     * @throws IOException if an I/O exception occurs reading the list, +    public <T> List<T> readList(final Writeable.Reader<T> reader) throws IOException {, +     * Reads a list of strings. The list is expected to have been written using {@link StreamOutput#writeStringCollection(Collection)}., +     *, +     * @return the list of strings, +     * @throws IOException if an I/O exception occurs reading the list, +     */, +    public List<String> readStringList() throws IOException {, +        return readList(StreamInput::readString);, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            indexPatterns = in.readStringList();, +            out.writeStringCollection(indexPatterns);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +            builder.patterns(in.readStringList());, +            out.writeStringCollection(patterns);, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +     * Reads a list of objects. The list is expected to have been written using {@link StreamOutput#writeList(List)} or, +     * {@link StreamOutput#writeStreamableList(List)}., +     *, +     * @return the list of objects, +     * @throws IOException if an I/O exception occurs reading the list, +    public <T> List<T> readList(final Writeable.Reader<T> reader) throws IOException {, +     * Reads a list of strings. The list is expected to have been written using {@link StreamOutput#writeStringCollection(Collection)}., +     *, +     * @return the list of strings, +     * @throws IOException if an I/O exception occurs reading the list, +     */, +    public List<String> readStringList() throws IOException {, +        return readList(StreamInput::readString);, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +     * Writes a collection of objects via a {@link Writer}., +     *, +     * @param collection the collection of objects, +     * @throws IOException if an I/O exception occurs writing the collection, +    public <T> void writeCollection(final Collection<T> collection, final Writer<T> writer) throws IOException {, +        for (final T val: collection) {, +     * Writes a collection of a strings. The corresponding collection can be read from a stream input using, +     * {@link StreamInput#readList(Writeable.Reader)}., +     *, +     * @param collection the collection of strings, +     * @throws IOException if an I/O exception occurs writing the collection, +    public void writeStringCollection(final Collection<String> collection) throws IOException {, +        writeCollection(collection, StreamOutput::writeString);, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java, +            indexPatterns = in.readStringList();, +            out.writeStringCollection(indexPatterns);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +            builder.patterns(in.readStringList());, +            out.writeStringCollection(patterns);, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +     * Reads a list of objects. The list is expected to have been written using {@link StreamOutput#writeList(List)} or, +     * {@link StreamOutput#writeStreamableList(List)}., +     *, +     * @return the list of objects, +     * @throws IOException if an I/O exception occurs reading the list, +    public <T> List<T> readList(final Writeable.Reader<T> reader) throws IOException {, +     * Reads a list of strings. The list is expected to have been written using {@link StreamOutput#writeStringCollection(Collection)}., +     *, +     * @return the list of strings, +     * @throws IOException if an I/O exception occurs reading the list, +     */, +    public List<String> readStringList() throws IOException {, +        return readList(StreamInput::readString);, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +     * Writes a collection of objects via a {@link Writer}., +     *, +     * @param collection the collection of objects, +     * @throws IOException if an I/O exception occurs writing the collection, +    public <T> void writeCollection(final Collection<T> collection, final Writer<T> writer) throws IOException {, +        for (final T val: collection) {, +     * Writes a collection of a strings. The corresponding collection can be read from a stream input using]