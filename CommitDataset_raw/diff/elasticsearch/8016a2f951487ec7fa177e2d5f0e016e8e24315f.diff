[+++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/build.gradle, +++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                configurePomGeneration(project), +    private static void configurePomGeneration(Project project) {, +        project.plugins.apply(MavenManifestPlugin.class), +++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                configurePomGeneration(project), +    private static void configurePomGeneration(Project project) {, +        project.plugins.apply(MavenManifestPlugin.class), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]monitor[/\\]jvm[/\\]JvmGcMonitorService.java" checks="LineLength" />, +++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                configurePomGeneration(project), +    private static void configurePomGeneration(Project project) {, +        project.plugins.apply(MavenManifestPlugin.class), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]monitor[/\\]jvm[/\\]JvmGcMonitorService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/TransportClusterAllocationExplainAction.java, +import com.carrotsearch.hppc.cursors.ObjectObjectCursor;, +import org.elasticsearch.cluster.ClusterName;, +import org.elasticsearch.cluster.metadata.MetaData.Custom;, +import org.elasticsearch.cluster.routing.RoutingTable;, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +import org.elasticsearch.cluster.routing.allocation.RoutingExplanations;, +import java.util.Iterator;, +    private final AllocationService allocationService;, +                                                   AllocationService allocationService, ClusterInfoService clusterInfoService,, +                                                   AllocationDeciders allocationDeciders, ShardsAllocator shardAllocator,, +                                                   TransportIndicesShardStoresAction shardStoresAction) {, +        this.allocationService = allocationService;, +        final RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, state.nodes(),, +++ b/CONTRIBUTING.md, +IntelliJ users acn automatically configure their IDE: `gradle idea`, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                configurePomGeneration(project), +    private static void configurePomGeneration(Project project) {, +        project.plugins.apply(MavenManifestPlugin.class), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]monitor[/\\]jvm[/\\]JvmGcMonitorService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/TransportClusterAllocationExplainAction.java, +import com.carrotsearch.hppc.cursors.ObjectObjectCursor;, +import org.elasticsearch.cluster.ClusterName;, +import org.elasticsearch.cluster.metadata.MetaData.Custom;, +import org.elasticsearch.cluster.routing.RoutingTable;, +import org.elasticsearch.cluster.routing.allocation.AllocationService;, +import org.elasticsearch.cluster.routing.allocation.RoutingExplanations;, +import java.util.Iterator;, +    private final AllocationService allocationService;, +                                                   AllocationService allocationService, ClusterInfoService clusterInfoService,, +                                                   AllocationDeciders allocationDeciders, ShardsAllocator shardAllocator,, +                                                   TransportIndicesShardStoresAction shardStoresAction) {]