[+++ b/core/src/main/java/org/elasticsearch/ingest/IngestMetadata.java, +import org.elasticsearch.cluster.Diff;, +import org.elasticsearch.cluster.Diffable;, +import org.elasticsearch.cluster.DiffableUtils;, +public final class IngestMetadata implements MetaData.Custom {, +    public IngestMetadata readFrom(StreamInput in) throws IOException {, +    public IngestMetadata fromXContent(XContentParser parser) throws IOException {, +    @Override, +    public Diff<MetaData.Custom> diff(MetaData.Custom before) {, +        return new IngestMetadataDiff((IngestMetadata) before, this);, +    }, +, +    @Override, +    public Diff<MetaData.Custom> readDiffFrom(StreamInput in) throws IOException {, +        return new IngestMetadataDiff(in);, +    }, +, +    static class IngestMetadataDiff implements Diff<MetaData.Custom> {, +, +        final Diff<Map<String, PipelineConfiguration>> pipelines;, +, +        IngestMetadataDiff(IngestMetadata before, IngestMetadata after) {, +            this.pipelines = DiffableUtils.diff(before.pipelines, after.pipelines, DiffableUtils.getStringKeySerializer());, +        }, +, +        public IngestMetadataDiff(StreamInput in) throws IOException {, +            pipelines = DiffableUtils.readJdkMapDiff(in, DiffableUtils.getStringKeySerializer(), PipelineConfiguration.PROTOTYPE);, +        }, +, +        @Override, +        public MetaData.Custom apply(MetaData.Custom part) {, +            return new IngestMetadata(pipelines.apply(((IngestMetadata) part).pipelines));, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            pipelines.writeTo(out);, +        }, +    }, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +, +        IngestMetadata that = (IngestMetadata) o;, +, +        return pipelines.equals(that.pipelines);, +, +    }, +, +    @Override, +    public int hashCode() {, +        return pipelines.hashCode();, +    }, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestMetadata.java, +import org.elasticsearch.cluster.Diff;, +import org.elasticsearch.cluster.Diffable;, +import org.elasticsearch.cluster.DiffableUtils;, +public final class IngestMetadata implements MetaData.Custom {, +    public IngestMetadata readFrom(StreamInput in) throws IOException {, +    public IngestMetadata fromXContent(XContentParser parser) throws IOException {, +    @Override, +    public Diff<MetaData.Custom> diff(MetaData.Custom before) {, +        return new IngestMetadataDiff((IngestMetadata) before, this);, +    }, +, +    @Override, +    public Diff<MetaData.Custom> readDiffFrom(StreamInput in) throws IOException {, +        return new IngestMetadataDiff(in);, +    }, +, +    static class IngestMetadataDiff implements Diff<MetaData.Custom> {, +, +        final Diff<Map<String, PipelineConfiguration>> pipelines;, +, +        IngestMetadataDiff(IngestMetadata before, IngestMetadata after) {, +            this.pipelines = DiffableUtils.diff(before.pipelines, after.pipelines, DiffableUtils.getStringKeySerializer());, +        }, +, +        public IngestMetadataDiff(StreamInput in) throws IOException {, +            pipelines = DiffableUtils.readJdkMapDiff(in, DiffableUtils.getStringKeySerializer(), PipelineConfiguration.PROTOTYPE);, +        }, +, +        @Override, +        public MetaData.Custom apply(MetaData.Custom part) {, +            return new IngestMetadata(pipelines.apply(((IngestMetadata) part).pipelines));, +        }, +, +        @Override, +        public void writeTo(StreamOutput out) throws IOException {, +            pipelines.writeTo(out);, +        }, +    }, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +]