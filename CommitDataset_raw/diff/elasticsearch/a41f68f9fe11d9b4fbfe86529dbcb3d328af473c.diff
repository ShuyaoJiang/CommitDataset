[+++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public class ShardGetService extends AbstractIndexShardComponent {, +, +    private final ScriptService scriptService;, +, +, +    private final IndexFieldDataService fieldDataService;, +, +    private IndexShard indexShard;, +, +    @Inject, +    public ShardGetService(ShardId shardId, @IndexSettings Settings indexSettings, ScriptService scriptService,, +                           MapperService mapperService, IndexFieldDataService fieldDataService) {, +        super(shardId, indexSettings);, +        this.scriptService = scriptService;, +        this.fieldDataService = fieldDataService;, +    // sadly, to overcome cyclic dep, we need to do this and inject it ourselves..., +    public ShardGetService setIndexShard(IndexShard indexShard) {, +        this.indexShard = indexShard;, +        return this;, +    }, +    public GetResult get(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields), +            {, +    protected FetchSourceContext normalizeFetchSourceContent(@Nullable FetchSourceContext context, @Nullable String[] gFields) {, +    public GetResult innerGet(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +                                searchLookup = new SearchLookup(mapperService, fieldDataService, new String[]{type});, +                        searchLookup = new SearchLookup(mapperService, fieldDataService, new String[]{type});, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public class ShardGetService extends AbstractIndexShardComponent {, +, +    private final ScriptService scriptService;, +, +, +    private final IndexFieldDataService fieldDataService;, +, +    private IndexShard indexShard;, +, +    @Inject, +    public ShardGetService(ShardId shardId, @IndexSettings Settings indexSettings, ScriptService scriptService,, +                           MapperService mapperService, IndexFieldDataService fieldDataService) {, +        super(shardId, indexSettings);, +        this.scriptService = scriptService;, +        this.fieldDataService = fieldDataService;, +    // sadly, to overcome cyclic dep, we need to do this and inject it ourselves..., +    public ShardGetService setIndexShard(IndexShard indexShard) {, +        this.indexShard = indexShard;, +        return this;, +    }, +    public GetResult get(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields), +            {, +    protected FetchSourceContext normalizeFetchSourceContent(@Nullable FetchSourceContext context, @Nullable String[] gFields) {, +    public GetResult innerGet(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +                                searchLookup = new SearchLookup(mapperService, fieldDataService, new String[]{type});, +                        searchLookup = new SearchLookup(mapperService, fieldDataService, new String[]{type});, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                      ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, ShardIndexingService indexingService, ShardGetService getService, ShardSearchService searchService, ShardIndexWarmerService shardWarmerService,, +        this.getService = getService.setIndexShard(this);, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public class ShardGetService extends AbstractIndexShardComponent {, +, +    private final ScriptService scriptService;, +, +, +    private final IndexFieldDataService fieldDataService;, +, +    private IndexShard indexShard;, +, +    @Inject, +    public ShardGetService(ShardId shardId, @IndexSettings Settings indexSettings, ScriptService scriptService,, +                           MapperService mapperService, IndexFieldDataService fieldDataService) {, +        super(shardId, indexSettings);, +        this.scriptService = scriptService;, +        this.fieldDataService = fieldDataService;, +    // sadly, to overcome cyclic dep, we need to do this and inject it ourselves..., +    public ShardGetService setIndexShard(IndexShard indexShard) {, +        this.indexShard = indexShard;, +        return this;, +    }, +    public GetResult get(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields), +            {, +    protected FetchSourceContext normalizeFetchSourceContent(@Nullable FetchSourceContext context, @Nullable String[] gFields) {, +    public GetResult innerGet(String type, String id, String[] gFields, boolean realtime, long version, VersionType versionType, FetchSourceContext fetchSourceContext, boolean ignoreErrorsOnGeneratedFields) {, +                                searchLookup = new SearchLookup(mapperService, fieldDataService, new String[]{type});, +                        searchLookup = new SearchLookup(mapperService, fieldDataService, new String[]{type});, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                      ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, ShardIndexingService indexingService, ShardGetService getService, ShardSearchService searchService, ShardIndexWarmerService shardWarmerService,, +        this.getService = getService.setIndexShard(this);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +import org.elasticsearch.index.get.ShardGetService;, +        bind(ShardGetService.class).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +public class ShardGetService extends AbstractIndexShardComponent {, +, +    private final ScriptService scriptService;, +, +, +    private final IndexFieldDataService fieldDataService;, +, +    private IndexShard indexShard;, +]