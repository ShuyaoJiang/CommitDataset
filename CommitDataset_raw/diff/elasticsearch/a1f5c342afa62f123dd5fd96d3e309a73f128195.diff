[+++ b/src/main/java/org/elasticsearch/index/translog/TranslogStats.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +    public TranslogStats() {, +    }, +        assert estimatedNumberOfOperations >= 0 : "estimatedNumberOfOperations must be >=0, got [" + estimatedNumberOfOperations + "]";, +        assert translogSizeInBytes >= 0 : "translogSizeInBytes must be >=0, got [" + translogSizeInBytes + "]";, +    public ByteSizeValue translogSizeInBytes() {, +        return new ByteSizeValue(translogSizeInBytes);, +    }, +, +    public long estimatedNumberOfOperations() {, +        return estimatedNumberOfOperations;, +    }, +, +        translogSizeInBytes = in.readVLong();, +        out.writeVLong(translogSizeInBytes);, +++ b/src/main/java/org/elasticsearch/index/translog/TranslogStats.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +    public TranslogStats() {, +    }, +        assert estimatedNumberOfOperations >= 0 : "estimatedNumberOfOperations must be >=0, got [" + estimatedNumberOfOperations + "]";, +        assert translogSizeInBytes >= 0 : "translogSizeInBytes must be >=0, got [" + translogSizeInBytes + "]";, +    public ByteSizeValue translogSizeInBytes() {, +        return new ByteSizeValue(translogSizeInBytes);, +    }, +, +    public long estimatedNumberOfOperations() {, +        return estimatedNumberOfOperations;, +    }, +, +        translogSizeInBytes = in.readVLong();, +        out.writeVLong(translogSizeInBytes);, +++ b/src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.BytesStreamOutput;, +import static org.hamcrest.Matchers.*;, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(0));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(1));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(1));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(2));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(1)); // now its one, since it only includes "2", +        assertThat(snapshot, TranslogSizeMatcher.translogSize(0));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(1));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(2));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(3));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(4));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(0));, +    protected TranslogStats stats() throws IOException {, +        // force flushing and updating of stats, +        translog.sync();, +        TranslogStats stats = translog.stats();, +        if (randomBoolean()) {, +            BytesStreamOutput out = new BytesStreamOutput();, +            stats.writeTo(out);, +            BytesStreamInput in = new BytesStreamInput(out.bytes());, +            stats = new TranslogStats();, +            stats.readFrom(in);, +        }, +        return stats;, +    }, +, +    @Test, +    public void testStats() throws IOException {, +        TranslogStats stats = stats();, +        assertThat(stats.estimatedNumberOfOperations(), equalTo(0l));, +        long lastSize = stats.translogSizeInBytes().bytes();, +        assertThat(lastSize, equalTo(17l));, +, +        translog.add(new Translog.Create("test", "1", new byte[]{1}));, +        stats = stats();, +        assertThat(stats.estimatedNumberOfOperations(), equalTo(1l));, +        assertThat(stats.translogSizeInBytes().bytes(), greaterThan(lastSize));, +        lastSize = stats.translogSizeInBytes().bytes();, +, +        translog.add(new Translog.Index("test", "2", new byte[]{2}));, +        stats = stats();, +        assertThat(stats.estimatedNumberOfOperations(), equalTo(2l));, +        assertThat(stats.translogSizeInBytes().bytes(), greaterThan(lastSize));, +        lastSize = stats.translogSizeInBytes().bytes();, +, +        translog.add(new Translog.Delete(newUid("3")));, +        stats = stats();, +        assertThat(stats.estimatedNumberOfOperations(), equalTo(3l));, +        assertThat(stats.translogSizeInBytes().bytes(), greaterThan(lastSize));, +        lastSize = stats.translogSizeInBytes().bytes();, +, +, +        translog.add(new Translog.DeleteByQuery(new BytesArray(new byte[]{4}), null));, +        stats = stats();, +        assertThat(stats.estimatedNumberOfOperations(), equalTo(4l));, +        assertThat(stats.translogSizeInBytes().bytes(), greaterThan(lastSize));, +, +        translog.newTranslog(2);, +        stats = stats();, +        assertThat(stats.estimatedNumberOfOperations(), equalTo(0l));, +        assertThat(stats.translogSizeInBytes().bytes(), equalTo(17l));, +    }, +, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(0));, +        assertThat(snapshot, TranslogSizeMatcher.translogSize(1));]