[+++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.action.support.broadcast.BroadcastOperationRequestBuilder;, +    public PercolateRequestBuilder addSort(SortBuilder sort) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.action.support.broadcast.BroadcastOperationRequestBuilder;, +    public PercolateRequestBuilder addSort(SortBuilder sort) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +    private QueryBuilder queryBuilder;, +    private List<SortBuilder> sorts;, +    private List<PipelineAggregatorBuilder> pipelineAggregationBuilders;, +    public PercolateSourceBuilder setQueryBuilder(QueryBuilder queryBuilder) {, +    public PercolateSourceBuilder addSort(SortBuilder sort) {, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +            for (SortBuilder sort : sorts) {, +                builder.startObject();, +                builder.endObject();, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationBuilders) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.action.support.broadcast.BroadcastOperationRequestBuilder;, +    public PercolateRequestBuilder addSort(SortBuilder sort) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +    private QueryBuilder queryBuilder;, +    private List<SortBuilder> sorts;, +    private List<PipelineAggregatorBuilder> pipelineAggregationBuilders;, +    public PercolateSourceBuilder setQueryBuilder(QueryBuilder queryBuilder) {, +    public PercolateSourceBuilder addSort(SortBuilder sort) {, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +            for (SortBuilder sort : sorts) {, +                builder.startObject();, +                builder.endObject();, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationBuilders) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.AggregatorBuilder;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public AggregatorBuilder readAggregatorFactory() throws IOException {, +    public PipelineAggregatorBuilder readPipelineAggregatorFactory() throws IOException {, +    public QueryBuilder readQuery() throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.action.support.broadcast.BroadcastOperationRequestBuilder;, +    public PercolateRequestBuilder addSort(SortBuilder sort) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +    private QueryBuilder queryBuilder;, +    private List<SortBuilder> sorts;, +    private List<PipelineAggregatorBuilder> pipelineAggregationBuilders;, +    public PercolateSourceBuilder setQueryBuilder(QueryBuilder queryBuilder) {, +    public PercolateSourceBuilder addSort(SortBuilder sort) {, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +            for (SortBuilder sort : sorts) {, +                builder.startObject();, +                builder.endObject();, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationBuilders) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.AggregatorBuilder;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public AggregatorBuilder readAggregatorFactory() throws IOException {, +    public PipelineAggregatorBuilder readPipelineAggregatorFactory() throws IOException {, +    public QueryBuilder readQuery() throws IOException {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.suggest.completion.context.QueryContext;, +import org.elasticsearch.search.aggregations.AggregatorBuilder;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public void writeOptionalWriteable(@Nullable Writeable writeable) throws IOException {, +    void writeNamedWriteable(NamedWriteable namedWriteable) throws IOException {, +    public void writeQuery(QueryBuilder queryBuilder) throws IOException {, +    public void writeSuggestion(SuggestionBuilder suggestion) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.action.support.broadcast.BroadcastOperationRequestBuilder;, +    public PercolateRequestBuilder addSort(SortBuilder sort) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +    private QueryBuilder queryBuilder;, +    private List<SortBuilder> sorts;, +    private List<PipelineAggregatorBuilder> pipelineAggregationBuilders;, +    public PercolateSourceBuilder setQueryBuilder(QueryBuilder queryBuilder) {, +    public PercolateSourceBuilder addSort(SortBuilder sort) {, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +            for (SortBuilder sort : sorts) {, +                builder.startObject();, +                builder.endObject();, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationBuilders) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.AggregatorBuilder;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public AggregatorBuilder readAggregatorFactory() throws IOException {, +    public PipelineAggregatorBuilder readPipelineAggregatorFactory() throws IOException {, +    public QueryBuilder readQuery() throws IOException {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.suggest.completion.context.QueryContext;, +import org.elasticsearch.search.aggregations.AggregatorBuilder;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public void writeOptionalWriteable(@Nullable Writeable writeable) throws IOException {, +    void writeNamedWriteable(NamedWriteable namedWriteable) throws IOException {, +    public void writeQuery(QueryBuilder queryBuilder) throws IOException {, +    public void writeSuggestion(SuggestionBuilder suggestion) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/index/query/support/InnerHitsQueryParserHelper.java, +import org.elasticsearch.search.sort.SortParseElement;, +    private static final SortParseElement sortParseElement = new SortParseElement();, +                        parseCommonInnerHitOptions(parser, token, fieldName, subSearchContext, sortParseElement, sourceParseElement, highlighterParseElement, scriptFieldsParseElement, fieldDataFieldsParseElement);, +                    parseCommonInnerHitOptions(parser, token, fieldName, subSearchContext, sortParseElement, sourceParseElement, highlighterParseElement, scriptFieldsParseElement, fieldDataFieldsParseElement);, +                                                  SortParseElement sortParseElement, FetchSourceParseElement sourceParseElement, HighlighterParseElement highlighterParseElement,, +            sortParseElement.parse(parser, subSearchContext);]