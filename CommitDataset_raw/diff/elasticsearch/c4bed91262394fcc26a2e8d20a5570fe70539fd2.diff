[+++ b/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    /**, +     * Writes the binary content of the given BytesRef, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    public XContentBuilder field(String name, BytesRef value) throws IOException {, +        field(name);, +        generator.writeBinary(value.bytes, value.offset, value.length);, +        return this;, +    }, +, +    /**, +     * Writes the binary content of the given BytesRef, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    public XContentBuilder field(XContentBuilderString name, BytesRef value) throws IOException {, +        field(name);, +        generator.writeBinary(value.bytes, value.offset, value.length);, +        return this;, +    }, +, +    /**, +     * Writes the binary content of the given BytesReference, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    /**, +     * Writes the binary content of the given BytesReference, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    /**, +     * Writes the binary content of the given BytesRef as UTF-8 bytes, +     * Use {@link XContentParser#utf8Bytes()} to read the value back, +     */, +    /**, +     * Writes the binary content of the given BytesRef as UTF-8 bytes, +     * Use {@link XContentParser#utf8Bytes()} to read the value back, +     */, +    public XContentBuilder utf8Field(String name, BytesRef value) throws IOException {, +        field(name);, +        generator.writeUTF8String(value.bytes, value.offset, value.length);, +        return this;, +    }, +, +    /**, +     * Writes the binary content of the given BytesRef, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    public XContentBuilder value(BytesRef value) throws IOException {, +        if (value == null) {, +            return nullValue();, +        }, +        generator.writeBinary(value.bytes, value.offset, value.length);, +        return this;, +    }, +, +    /**, +     * Writes the binary content of the given BytesReference, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +        } else if (value instanceof BytesRef) {, +            BytesRef bytes = (BytesRef) value;, +            generator.writeBinary(bytes.bytes, bytes.offset, bytes.length);, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    /**, +     * Writes the binary content of the given BytesRef, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    public XContentBuilder field(String name, BytesRef value) throws IOException {, +        field(name);, +        generator.writeBinary(value.bytes, value.offset, value.length);, +        return this;, +    }, +, +    /**, +     * Writes the binary content of the given BytesRef, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    public XContentBuilder field(XContentBuilderString name, BytesRef value) throws IOException {, +        field(name);, +        generator.writeBinary(value.bytes, value.offset, value.length);, +        return this;, +    }, +, +    /**, +     * Writes the binary content of the given BytesReference, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    /**, +     * Writes the binary content of the given BytesReference, +     * Use {@link org.elasticsearch.common.xcontent.XContentParser#binaryValue()} to read the value back, +     */, +    /**, +     * Writes the binary content of the given BytesRef as UTF-8 bytes, +     * Use {@link XContentParser#utf8Bytes()} to read the value back, +     */, +    /**, +     * Writes the binary content of the given BytesRef as UTF-8 bytes, +     * Use {@link XContentParser#utf8Bytes()} to read the value back, +     */, +    public XContentBuilder utf8Field(String name, BytesRef value) throws IOException {]