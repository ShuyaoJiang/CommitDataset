[+++ b/core/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java, +import org.apache.lucene.util.IOUtils;, +        StreamInput wrappedStream = null;, +        try {, +                boolean success = false;, +                try {, +                    final int nextByte = wrappedStream.read();, +                    // calling read() is useful to make sure the message is fully read, even if there is an EOS marker, +                    if (nextByte != -1) {, +                        throw new IllegalStateException("Message not fully read (request) for requestId [" + requestId + "], action [", +                                + action + "], readerIndex [" + buffer.readerIndex() + "] vs expected [" + expectedIndexReader + "]; resetting");, +                    if (buffer.readerIndex() < expectedIndexReader) {, +                        throw new IllegalStateException("Message is fully read (request), yet there are " + (expectedIndexReader - buffer.readerIndex()) + " remaining bytes; resetting");, +                    }, +                    if (buffer.readerIndex() > expectedIndexReader) {, +                        throw new IllegalStateException("Message read past expected size (request) for requestId [" + requestId + "], action [", +                                + action + "], readerIndex [" + buffer.readerIndex() + "] vs expected [" + expectedIndexReader + "]; resetting");, +                    }, +                    success = true;, +                } finally {, +                    if (!success) {, +                }, +, +                boolean success = false;, +                try {, +                    final int nextByte = wrappedStream.read();, +                    // calling read() is useful to make sure the message is fully read, even if there is an EOS marker, +                    if (nextByte != -1) {, +                        throw new IllegalStateException("Message not fully read (response) for requestId [" + requestId + "], handler [", +                                + handler + "], error [" + TransportStatus.isError(status) + "]; resetting");, +                    if (buffer.readerIndex() < expectedIndexReader) {, +                        throw new IllegalStateException("Message is fully read (response), yet there are " + (expectedIndexReader - buffer.readerIndex()) + " remaining bytes; resetting");, +                    }, +                    if (buffer.readerIndex() > expectedIndexReader) {, +                        throw new IllegalStateException("Message read past expected size (response) for requestId [" + requestId + "], handler [", +                                + handler + "], error [" + TransportStatus.isError(status) + "]; resetting");, +                    }, +                    success = true;, +                } finally {, +                    if (!success) {, +            }, +        } finally {, +            IOUtils.close(wrappedStream);, +        }]