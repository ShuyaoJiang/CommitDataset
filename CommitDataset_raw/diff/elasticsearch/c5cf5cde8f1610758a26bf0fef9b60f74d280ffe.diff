[+++ b/core/src/test/java/org/elasticsearch/action/admin/indices/create/CreateIndexIT.java, +        final AtomicInteger indexVersion = new AtomicInteger(0);, +        final Object indexVersionLock = new Object();, +            client().prepareIndex("test", "test").setSource("index_version", indexVersion.get()).get();, +        synchronized (indexVersionLock) { // not necessarily needed here but for completeness we lock here too, +            indexVersion.incrementAndGet();, +                             client().prepareIndex("test", "test").setSource("index_version", indexVersion.get()).get(); // recreate that index, +                             synchronized (indexVersionLock) {, +                                 // we sync here since we have to ensure that all indexing operations below for a given ID are done before we increment the, +                                 // index version otherwise a doc that is in-flight could make it into an index that it was supposed to be deleted for and our assertion fail..., +                                 indexVersion.incrementAndGet();, +                             assertAcked(client().admin().indices().prepareDelete("test").get()); // from here on all docs with index_version == 0|1 must be gone!!!! only 2 are ok;, +                    throw new RuntimeException(e);, +                synchronized (indexVersionLock) {, +                    client().prepareIndex("test", "test").setSource("index_version", indexVersion.get()).get();, +, +        // we only really assert that we never reuse segments of old indices or anything like this here and that nothing fails with crazy exceptions, +        SearchResponse expected = client().prepareSearch("test").setIndicesOptions(IndicesOptions.lenientExpandOpen()).setQuery(new RangeQueryBuilder("index_version").from(indexVersion.get(), true)).get();, +        assertEquals(expected + " vs. " + all, expected.getHits().getTotalHits(), all.getHits().getTotalHits());]