[+++ b/.idea/dictionaries/kimchy.xml, +      <w>pluggable</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>pluggable</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/Nodes.java, +     * Is this a valid nodes that has the minimal information set. The minimal set is defined, +     * by the localNodeId being set., +     */, +    public boolean valid() {, +        return localNodeId != null;, +    }, +, +    /**, +        if (localNodeId == null) {, +            // we don't know yet the local node id, return false, +            return false;, +        }, +++ b/.idea/dictionaries/kimchy.xml, +      <w>pluggable</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/Nodes.java, +     * Is this a valid nodes that has the minimal information set. The minimal set is defined, +     * by the localNodeId being set., +     */, +    public boolean valid() {, +        return localNodeId != null;, +    }, +, +    /**, +        if (localNodeId == null) {, +            // we don't know yet the local node id, return false, +            return false;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/Discovery.java, + * A pluggable module allowing to implement discovery of other nodes, publishing of the cluster, + * state to all nodes, electing a master of the cluster that raises cluster state change, + * events., + *, + * @author kimchy (shay.banon), +    /**, +     * Is the discovery of this node caused this node to be the first master in the cluster., +     */, +++ b/.idea/dictionaries/kimchy.xml, +      <w>pluggable</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/Nodes.java, +     * Is this a valid nodes that has the minimal information set. The minimal set is defined, +     * by the localNodeId being set., +     */, +    public boolean valid() {, +        return localNodeId != null;, +    }, +, +    /**, +        if (localNodeId == null) {, +            // we don't know yet the local node id, return false, +            return false;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/Discovery.java, + * A pluggable module allowing to implement discovery of other nodes, publishing of the cluster, + * state to all nodes, electing a master of the cluster that raises cluster state change, + * events., + *, + * @author kimchy (shay.banon), +    /**, +     * Is the discovery of this node caused this node to be the first master in the cluster., +     */, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayService.java, +import static java.util.concurrent.Executors.*;, +import static org.elasticsearch.util.concurrent.DynamicExecutors.*;, +        this.executor = newSingleThreadExecutor(daemonThreadFactory(settings, "gateway"));]