[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public GatewayRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public GatewayRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public PeerRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public GatewayRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public PeerRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +                    in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong());, +                    in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public GatewayRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public PeerRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +                    in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong());, +                    in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                    peerRecoveryStatus.phase1TotalSize(), peerRecoveryStatus.phase1ExistingTotalSize(),, +            shardStatus.gatewayRecoveryStatus = new GatewayRecoveryStatus(stage, gatewayRecoveryStatus.startTime(), gatewayRecoveryStatus.time(),, +                    gatewayRecoveryStatus.index().totalSize(), gatewayRecoveryStatus.index().existingTotalSize(), gatewayRecoveryStatus.index().currentFilesSize(), gatewayRecoveryStatus.translog().currentTranslogOperations());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public GatewayRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java, +        INDEX((byte) 1),, +        TRANSLOG((byte) 2),, +        FINALIZE((byte) 3),, +        DONE((byte) 4);, +            } else if (value == 2) {, +            } else if (value == 3) {, +            } else if (value == 4) {, +    public PeerRecoveryStatus(Stage stage, long startTime, long time, long indexSize, long reusedIndexSize,, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +                    in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong());, +                    in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong(), in.readVLong());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +                    peerRecoveryStatus.phase1TotalSize(), peerRecoveryStatus.phase1ExistingTotalSize(),, +            shardStatus.gatewayRecoveryStatus = new GatewayRecoveryStatus(stage, gatewayRecoveryStatus.startTime(), gatewayRecoveryStatus.time(),, +                    gatewayRecoveryStatus.index().totalSize(), gatewayRecoveryStatus.index().existingTotalSize(), gatewayRecoveryStatus.index().currentFilesSize(), gatewayRecoveryStatus.translog().currentTranslogOperations());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocations.java, +                .add(new ThrottlingNodeAllocation(settings))]