[+++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java, +        if (retainingSequenceNumber < 0) {, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java, +        if (retainingSequenceNumber < 0) {, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +                    final long retainingSequenceNumber = randomLongBetween(0, Math.max(0, globalCheckpoint.get()));, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java, +        if (retainingSequenceNumber < 0) {, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +                    final long retainingSequenceNumber = randomLongBetween(0, Math.max(0, globalCheckpoint.get()));, +++ b/server/src/test/java/org/elasticsearch/index/engine/SoftDeletesPolicyTests.java, +            retainingSequenceNumbers[i] = new AtomicLong();, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java, +        if (retainingSequenceNumber < 0) {, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +                    final long retainingSequenceNumber = randomLongBetween(0, Math.max(0, globalCheckpoint.get()));, +++ b/server/src/test/java/org/elasticsearch/index/engine/SoftDeletesPolicyTests.java, +            retainingSequenceNumbers[i] = new AtomicLong();, +++ b/server/src/test/java/org/elasticsearch/index/seqno/ReplicationTrackerRetentionLeaseTests.java, +        retainingSequenceNumbers[0] = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java, +        if (retainingSequenceNumber < 0) {, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +                    final long retainingSequenceNumber = randomLongBetween(0, Math.max(0, globalCheckpoint.get()));, +++ b/server/src/test/java/org/elasticsearch/index/engine/SoftDeletesPolicyTests.java, +            retainingSequenceNumbers[i] = new AtomicLong();, +++ b/server/src/test/java/org/elasticsearch/index/seqno/ReplicationTrackerRetentionLeaseTests.java, +        retainingSequenceNumbers[0] = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/test/java/org/elasticsearch/index/seqno/RetentionLeaseSyncIT.java, +            final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +            final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java, +        if (retainingSequenceNumber < 0) {, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +                    final long retainingSequenceNumber = randomLongBetween(0, Math.max(0, globalCheckpoint.get()));, +++ b/server/src/test/java/org/elasticsearch/index/engine/SoftDeletesPolicyTests.java, +            retainingSequenceNumbers[i] = new AtomicLong();, +++ b/server/src/test/java/org/elasticsearch/index/seqno/ReplicationTrackerRetentionLeaseTests.java, +        retainingSequenceNumbers[0] = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/test/java/org/elasticsearch/index/seqno/RetentionLeaseSyncIT.java, +            final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +            final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/test/java/org/elasticsearch/index/seqno/RetentionLeaseTests.java, +        final long retainingSequenceNumber = randomLongBetween(Long.MIN_VALUE, -1);, +                () -> new RetentionLease("id", randomNonNegativeLong(), timestamp, "source"));, +        final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/main/java/org/elasticsearch/index/seqno/RetentionLease.java, +        if (retainingSequenceNumber < 0) {, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +                    final long retainingSequenceNumber = randomLongBetween(0, Math.max(0, globalCheckpoint.get()));, +++ b/server/src/test/java/org/elasticsearch/index/engine/SoftDeletesPolicyTests.java, +            retainingSequenceNumbers[i] = new AtomicLong();, +++ b/server/src/test/java/org/elasticsearch/index/seqno/ReplicationTrackerRetentionLeaseTests.java, +        retainingSequenceNumbers[0] = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/test/java/org/elasticsearch/index/seqno/RetentionLeaseSyncIT.java, +            final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +            final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/test/java/org/elasticsearch/index/seqno/RetentionLeaseTests.java, +        final long retainingSequenceNumber = randomLongBetween(Long.MIN_VALUE, -1);, +                () -> new RetentionLease("id", randomNonNegativeLong(), timestamp, "source"));, +        final long retainingSequenceNumber = randomLongBetween(0, Long.MAX_VALUE);, +++ b/server/src/test/java/org/elasticsearch/index/shard/IndexShardRetentionLeaseTests.java, +            retainingSequenceNumbers[0] = randomLongBetween(0, Long.MAX_VALUE);]