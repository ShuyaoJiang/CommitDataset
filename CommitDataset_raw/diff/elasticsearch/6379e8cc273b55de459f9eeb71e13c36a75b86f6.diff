[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Loader.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +    public YamlNode compose(Reader yaml) {, +    public Iterable<YamlNode> composeAll(Reader yaml) {, +        Iterator<YamlNode> result = new Iterator<YamlNode>() {, +            public YamlNode next() {, +    private class NodeIterable implements Iterable<YamlNode> {, +        private Iterator<YamlNode> iterator;, +        public NodeIterable(Iterator<YamlNode> iterator) {, +        public Iterator<YamlNode> iterator() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Loader.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +    public YamlNode compose(Reader yaml) {, +    public Iterable<YamlNode> composeAll(Reader yaml) {, +        Iterator<YamlNode> result = new Iterator<YamlNode>() {, +            public YamlNode next() {, +    private class NodeIterable implements Iterable<YamlNode> {, +        private Iterator<YamlNode> iterator;, +        public NodeIterable(Iterator<YamlNode> iterator) {, +        public Iterator<YamlNode> iterator() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Yaml.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +    public YamlNode compose(Reader io) {, +    public Iterable<YamlNode> composeAll(Reader io) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Loader.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +    public YamlNode compose(Reader yaml) {, +    public Iterable<YamlNode> composeAll(Reader yaml) {, +        Iterator<YamlNode> result = new Iterator<YamlNode>() {, +            public YamlNode next() {, +    private class NodeIterable implements Iterable<YamlNode> {, +        private Iterator<YamlNode> iterator;, +        public NodeIterable(Iterator<YamlNode> iterator) {, +        public Iterator<YamlNode> iterator() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Yaml.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +    public YamlNode compose(Reader io) {, +    public Iterable<YamlNode> composeAll(Reader io) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/composer/Composer.java, +    private final Map<String, YamlNode> anchors;, +    private final Set<YamlNode> recursiveNodes;, +        this.anchors = new HashMap<String, YamlNode>();, +        this.recursiveNodes = new HashSet<YamlNode>();, +    public YamlNode getNode() {, +            return (YamlNode) null;, +    public YamlNode getSingleNode() {, +        YamlNode document = null;, +    private YamlNode composeDocument() {, +        YamlNode node = composeNode(null, null);, +    private YamlNode composeNode(YamlNode parent, Object index) {, +            YamlNode result = (YamlNode) anchors.get(anchor);, +        YamlNode node = null;, +    private YamlNode composeScalarNode(String anchor) {, +        YamlNode node = new ScalarNode(nodeTag, resolved, ev.getValue(), ev.getStartMark(), ev, +    private YamlNode composeSequenceNode(String anchor) {, +        SequenceNode node = new SequenceNode(nodeTag, resolved, new ArrayList<YamlNode>(), startEvent, +    private YamlNode composeMappingNode(String anchor) {, +            YamlNode itemKey = composeNode(node, null);, +            YamlNode itemValue = composeNode(node, itemKey);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Loader.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +    public YamlNode compose(Reader yaml) {, +    public Iterable<YamlNode> composeAll(Reader yaml) {, +        Iterator<YamlNode> result = new Iterator<YamlNode>() {, +            public YamlNode next() {, +    private class NodeIterable implements Iterable<YamlNode> {, +        private Iterator<YamlNode> iterator;, +        public NodeIterable(Iterator<YamlNode> iterator) {, +        public Iterator<YamlNode> iterator() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Yaml.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +    public YamlNode compose(Reader io) {, +    public Iterable<YamlNode> composeAll(Reader io) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/composer/Composer.java, +    private final Map<String, YamlNode> anchors;, +    private final Set<YamlNode> recursiveNodes;, +        this.anchors = new HashMap<String, YamlNode>();, +        this.recursiveNodes = new HashSet<YamlNode>();, +    public YamlNode getNode() {, +            return (YamlNode) null;, +    public YamlNode getSingleNode() {, +        YamlNode document = null;, +    private YamlNode composeDocument() {, +        YamlNode node = composeNode(null, null);, +    private YamlNode composeNode(YamlNode parent, Object index) {, +            YamlNode result = (YamlNode) anchors.get(anchor);, +        YamlNode node = null;, +    private YamlNode composeScalarNode(String anchor) {, +        YamlNode node = new ScalarNode(nodeTag, resolved, ev.getValue(), ev.getStartMark(), ev, +    private YamlNode composeSequenceNode(String anchor) {, +        SequenceNode node = new SequenceNode(nodeTag, resolved, new ArrayList<YamlNode>(), startEvent, +    private YamlNode composeMappingNode(String anchor) {, +            YamlNode itemKey = composeNode(node, null);, +            YamlNode itemValue = composeNode(node, itemKey);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/constructor/AbstractConstruct.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;, +     * @see org.elasticsearch.util.yaml.snakeyaml.constructor.Construct#construct2ndStep(org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode ,, +    public void construct2ndStep(YamlNode node, Object data) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/util/yaml/snakeyaml/Loader.java, +import org.elasticsearch.util.yaml.snakeyaml.nodes.YamlNode;]