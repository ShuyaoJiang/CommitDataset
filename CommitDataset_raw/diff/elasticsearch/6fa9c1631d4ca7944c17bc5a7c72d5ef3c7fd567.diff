[+++ b/elasticsearch/qa/smoke-test-plugins-ssl/build.gradle, +, +// location of generated keystores and certificates, +File keystoreDir = new File(project.buildDir, 'keystore'), +, +// Generate the node's keystore, +File nodeKeystore = new File(keystoreDir, 'test-node.jks'), +task createNodeKeyStore(type: LoggedExec) {, +  doFirst {, +    if (nodeKeystore.parentFile.exists() == false) {, +      nodeKeystore.parentFile.mkdirs(), +    }, +    if (nodeKeystore.exists()) {, +      delete nodeKeystore, +    }, +  }, +          '-keystore', nodeKeystore,, +// Generate the client's keystore, +File clientKeyStore = new File(keystoreDir, 'test-client.jks'), +task createClientKeyStore(type: LoggedExec) {, +  doFirst {, +    if (clientKeyStore.parentFile.exists() == false) {, +      clientKeyStore.parentFile.mkdirs(), +    }, +    if (clientKeyStore.exists()) {, +      delete clientKeyStore, +    }, +  }, +  executable = 'keytool', +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-client',, +          '-keystore', clientKeyStore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=smoke-test-plugins-ssl',, +          '-keypass', 'keypass',, +          '-storepass', 'keypass',, +          '-ext', san, +}, +, +// Export the node's certificate, +File nodeCertificate = new File(keystoreDir, 'test-node.cert'), +task exportNodeCertificate(type: LoggedExec) {, +  doFirst {, +    if (nodeCertificate.parentFile.exists() == false) {, +      nodeCertificate.parentFile.mkdirs(), +    }, +    if (nodeCertificate.exists()) {, +      delete nodeCertificate, +    }, +  }, +  executable = 'keytool', +  args '-export',, +          '-alias', 'test-node',, +          '-keystore', nodeKeystore,, +          '-storepass', 'keypass',, +          '-file', nodeCertificate, +}, +, +// Import the node certificate in the client's keystore, +task importNodeCertificateInClientKeyStore(type: LoggedExec) {, +  dependsOn exportNodeCertificate, +  executable = 'keytool', +  args '-import',, +          '-alias', 'test-node',, +          '-keystore', clientKeyStore,, +          '-storepass', 'keypass',, +          '-file', nodeCertificate,, +          '-noprompt', +}, +, +// Export the client's certificate, +File clientCertificate = new File(keystoreDir, 'test-client.cert'), +task exportClientCertificate(type: LoggedExec) {, +  doFirst {, +    if (clientCertificate.parentFile.exists() == false) {, +      clientCertificate.parentFile.mkdirs(), +    }, +    if (clientCertificate.exists()) {, +      delete clientCertificate, +    }, +  }, +  executable = 'keytool', +  args '-export',, +          '-alias', 'test-client',, +          '-keystore', clientKeyStore,, +          '-storepass', 'keypass',, +          '-file', clientCertificate, +}, +, +// Import the client certificate in the node's keystore, +task importClientCertificateInNodeKeyStore(type: LoggedExec) {, +  dependsOn exportClientCertificate, +  executable = 'keytool', +  args '-import',, +          '-alias', 'test-client',, +          '-keystore', nodeKeystore,, +          '-storepass', 'keypass',]