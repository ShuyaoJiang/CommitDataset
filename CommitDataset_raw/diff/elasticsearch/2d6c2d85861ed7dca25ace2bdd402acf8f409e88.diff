[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private float boostTerms = -1;, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public MoreLikeThisRequest boostTerms(float boostTerms) {, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public float boostTerms() {, +        boostTerms = in.readFloat();, +        out.writeFloat(boostTerms);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private float boostTerms = -1;, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public MoreLikeThisRequest boostTerms(float boostTerms) {, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public float boostTerms() {, +        boostTerms = in.readFloat();, +        out.writeFloat(boostTerms);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private float boostTerms = -1;, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public MoreLikeThisRequest boostTerms(float boostTerms) {, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public float boostTerms() {, +        boostTerms = in.readFloat();, +        out.writeFloat(boostTerms);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisFieldJsonQueryBuilder.java, +    private float boostTerms = -1;, +    public MoreLikeThisFieldJsonQueryBuilder boostTerms(float boostTerms) {, +        this.boostTerms = boostTerms;, +        if (boostTerms != -1) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private float boostTerms = -1;, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public MoreLikeThisRequest boostTerms(float boostTerms) {, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public float boostTerms() {, +        boostTerms = in.readFloat();, +        out.writeFloat(boostTerms);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisFieldJsonQueryBuilder.java, +    private float boostTerms = -1;, +    public MoreLikeThisFieldJsonQueryBuilder boostTerms(float boostTerms) {, +        this.boostTerms = boostTerms;, +        if (boostTerms != -1) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisFieldJsonQueryParser.java, +                    mltQuery.setBoostTerms(true);, +                } else if ("boost_term".equals(currentFieldName)) {, +                    mltQuery.setBoostTerms(true);, +                if ("boost_terms".equals(currentFieldName)) {, +                    mltQuery.setBoostTerms(true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private float boostTerms = -1;, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public MoreLikeThisRequest boostTerms(float boostTerms) {, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public float boostTerms() {, +        boostTerms = in.readFloat();, +        out.writeFloat(boostTerms);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisFieldJsonQueryBuilder.java, +    private float boostTerms = -1;, +    public MoreLikeThisFieldJsonQueryBuilder boostTerms(float boostTerms) {, +        this.boostTerms = boostTerms;, +        if (boostTerms != -1) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisFieldJsonQueryParser.java, +                    mltQuery.setBoostTerms(true);, +                } else if ("boost_term".equals(currentFieldName)) {, +                    mltQuery.setBoostTerms(true);, +                if ("boost_terms".equals(currentFieldName)) {, +                    mltQuery.setBoostTerms(true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisJsonQueryBuilder.java, +    private float boostTerms = -1;, +    public MoreLikeThisJsonQueryBuilder boostTerms(float boostTerms) {, +        this.boostTerms = boostTerms;, +        if (boostTerms != -1) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +    private float boostTerms = -1;, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public MoreLikeThisRequest boostTerms(float boostTerms) {, +     * The boost factor to use when boosting terms. Defaults to <tt>1</tt>., +    public float boostTerms() {, +        boostTerms = in.readFloat();, +        out.writeFloat(boostTerms);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisFieldJsonQueryBuilder.java, +    private float boostTerms = -1;, +    public MoreLikeThisFieldJsonQueryBuilder boostTerms(float boostTerms) {, +        this.boostTerms = boostTerms;, +        if (boostTerms != -1) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisFieldJsonQueryParser.java, +                    mltQuery.setBoostTerms(true);, +                } else if ("boost_term".equals(currentFieldName)) {, +                    mltQuery.setBoostTerms(true);, +                if ("boost_terms".equals(currentFieldName)) {, +                    mltQuery.setBoostTerms(true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/MoreLikeThisJsonQueryBuilder.java, +    private float boostTerms = -1;, +    public MoreLikeThisJsonQueryBuilder boostTerms(float boostTerms) {, +        this.boostTerms = boostTerms;]