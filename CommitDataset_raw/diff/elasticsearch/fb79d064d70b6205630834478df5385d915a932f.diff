[+++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, + * A bulk request holds an ordered {@link IndexRequest}s, {@link DeleteRequest}s and {@link UpdateRequest}s, + * and allows to executes it in a single batch., + * Note that we only support refresh on the bulk request not per item., +    /**, +     * Add a request to the current BulkRequest., +     * @param request Request to add, +     * @param payload Optional payload, +     * @return the current bulk request, +     */, +        // lack of source is validated in validate() method, +        sizeInBytes += (request.source() != null ? request.source().length() : 0) + REQUEST_OVERHEAD;, +        for (ActionRequest request : requests) {, +            // We first check if refresh has been set, +            if ((request instanceof DeleteRequest && ((DeleteRequest)request).refresh()) ||, +                    (request instanceof UpdateRequest && ((UpdateRequest)request).refresh()) ||, +                    (request instanceof IndexRequest && ((IndexRequest)request).refresh())) {, +                    validationException = addValidationError("Refresh is not supported on an item request, set the refresh flag on the BulkRequest instead.", validationException);, +            }, +            ActionRequestValidationException ex = request.validate();, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, + * A bulk request holds an ordered {@link IndexRequest}s, {@link DeleteRequest}s and {@link UpdateRequest}s, + * and allows to executes it in a single batch., + * Note that we only support refresh on the bulk request not per item., +    /**, +     * Add a request to the current BulkRequest., +     * @param request Request to add, +     * @param payload Optional payload, +     * @return the current bulk request, +     */, +        // lack of source is validated in validate() method, +        sizeInBytes += (request.source() != null ? request.source().length() : 0) + REQUEST_OVERHEAD;, +        for (ActionRequest request : requests) {, +            // We first check if refresh has been set, +            if ((request instanceof DeleteRequest && ((DeleteRequest)request).refresh()) ||, +                    (request instanceof UpdateRequest && ((UpdateRequest)request).refresh()) ||, +                    (request instanceof IndexRequest && ((IndexRequest)request).refresh())) {, +                    validationException = addValidationError("Refresh is not supported on an item request, set the refresh flag on the BulkRequest instead.", validationException);, +            }, +            ActionRequestValidationException ex = request.validate();, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +                MergeResult result = oldMapper.merge(mapper.mapping(), false, updateAllTypes);, +                    // TODO: What should we do???, +                    if (logger.isDebugEnabled()) {, +                        logger.debug("merging mapping for type [{}] resulted in conflicts: [{}]", mapper.type(), Arrays.toString(result.buildConflicts()));, +                }, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, + * A bulk request holds an ordered {@link IndexRequest}s, {@link DeleteRequest}s and {@link UpdateRequest}s, + * and allows to executes it in a single batch., + * Note that we only support refresh on the bulk request not per item., +    /**, +     * Add a request to the current BulkRequest., +     * @param request Request to add, +     * @param payload Optional payload, +     * @return the current bulk request, +     */, +        // lack of source is validated in validate() method, +        sizeInBytes += (request.source() != null ? request.source().length() : 0) + REQUEST_OVERHEAD;, +        for (ActionRequest request : requests) {, +            // We first check if refresh has been set, +            if ((request instanceof DeleteRequest && ((DeleteRequest)request).refresh()) ||, +                    (request instanceof UpdateRequest && ((UpdateRequest)request).refresh()) ||, +                    (request instanceof IndexRequest && ((IndexRequest)request).refresh())) {, +                    validationException = addValidationError("Refresh is not supported on an item request, set the refresh flag on the BulkRequest instead.", validationException);, +            }, +            ActionRequestValidationException ex = request.validate();, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +                MergeResult result = oldMapper.merge(mapper.mapping(), false, updateAllTypes);, +                    // TODO: What should we do???, +                    if (logger.isDebugEnabled()) {, +                        logger.debug("merging mapping for type [{}] resulted in conflicts: [{}]", mapper.type(), Arrays.toString(result.buildConflicts()));, +                }, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java, +import org.elasticsearch.action.ActionRequestValidationException;, +import static org.hamcrest.Matchers.*;, +, +    // issue 7361, +    public void testBulkRequestWithRefresh() throws Exception {, +        BulkRequest bulkRequest = new BulkRequest();, +        // We force here a "id is missing" validation error, +        bulkRequest.add(new DeleteRequest("index", "type", null).refresh(true));, +        // We force here a "type is missing" validation error, +        bulkRequest.add(new DeleteRequest("index", null, "id"));, +        bulkRequest.add(new DeleteRequest("index", "type", "id").refresh(true));, +        bulkRequest.add(new UpdateRequest("index", "type", "id").doc("{}").refresh(true));, +        bulkRequest.add(new IndexRequest("index", "type", "id").source("{}").refresh(true));, +        ActionRequestValidationException validate = bulkRequest.validate();, +        assertThat(validate, notNullValue());, +        assertThat(validate.validationErrors(), not(empty()));, +        assertThat(validate.validationErrors(), contains(, +                "Refresh is not supported on an item request, set the refresh flag on the BulkRequest instead.",, +                "id is missing",, +                "type is missing",, +                "Refresh is not supported on an item request, set the refresh flag on the BulkRequest instead.",, +                "Refresh is not supported on an item request, set the refresh flag on the BulkRequest instead.",, +                "Refresh is not supported on an item request, set the refresh flag on the BulkRequest instead."));, +    }, +, +    // issue 15120, +    public void testBulkNoSource() throws Exception {]