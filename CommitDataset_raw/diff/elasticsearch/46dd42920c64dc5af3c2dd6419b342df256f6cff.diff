[+++ b/pom.xml, +        <dependency>, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-join</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +        </dependency>, +++ b/pom.xml, +        <dependency>, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-join</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +        </dependency>, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java, +++ b/pom.xml, +        <dependency>, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-join</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +        </dependency>, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +                    throw new QueryParsingException(parseContext.index(), "the [_scope] support in [has_child] filter has been removed, use a filter as a facet_filter in the relevant global facet");, +        HasChildFilter childFilter = HasChildFilter.create(query, null, parentType, childType, searchContext, executionType);, +++ b/pom.xml, +        <dependency>, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-join</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +        </dependency>, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +                    throw new QueryParsingException(parseContext.index(), "the [_scope] support in [has_child] filter has been removed, use a filter as a facet_filter in the relevant global facet");, +        HasChildFilter childFilter = HasChildFilter.create(query, null, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        if (executionType != null) {, +            builder.field("execution_type", executionType);, +        }, +++ b/pom.xml, +        <dependency>, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-join</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +        </dependency>, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +                    throw new QueryParsingException(parseContext.index(), "the [_scope] support in [has_child] filter has been removed, use a filter as a facet_filter in the relevant global facet");, +        HasChildFilter childFilter = HasChildFilter.create(query, null, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        if (executionType != null) {, +            builder.field("execution_type", executionType);, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +                } else if ("execution_type".equals(currentFieldName) || "executionType".equals(currentFieldName)) {// This option is experimental and will most likely be removed., +                    executionType = parser.text();, +                    throw new QueryParsingException(parseContext.index(), "the [_scope] support in [has_child] query has been removed, use a filter as a facet_filter in the relevant global facet");, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, null, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, null, parentType, childType, searchContext, executionType);, +++ b/pom.xml, +        <dependency>, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-join</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +        </dependency>, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +                    throw new QueryParsingException(parseContext.index(), "the [_scope] support in [has_child] filter has been removed, use a filter as a facet_filter in the relevant global facet");, +        HasChildFilter childFilter = HasChildFilter.create(query, null, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        if (executionType != null) {, +            builder.field("execution_type", executionType);, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +                } else if ("execution_type".equals(currentFieldName) || "executionType".equals(currentFieldName)) {// This option is experimental and will most likely be removed., +                    executionType = parser.text();, +                    throw new QueryParsingException(parseContext.index(), "the [_scope] support in [has_child] query has been removed, use a filter as a facet_filter in the relevant global facet");, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, null, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, null, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterBuilder.java, +++ b/pom.xml, +        <dependency>, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-join</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +        </dependency>, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +                    throw new QueryParsingException(parseContext.index(), "the [_scope] support in [has_child] filter has been removed, use a filter as a facet_filter in the relevant global facet");, +        HasChildFilter childFilter = HasChildFilter.create(query, null, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        if (executionType != null) {, +            builder.field("execution_type", executionType);, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java]