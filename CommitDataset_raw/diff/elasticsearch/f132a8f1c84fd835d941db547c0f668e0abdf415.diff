[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                if (Definition.OBJECT_TYPE.equals(actual)), +                    switch (expected.sort) {, +                        case BYTE:, +                            if (internal && explicit), +                                return new Cast(actual, Definition.BYTE_OBJ_TYPE, true, false, true, false, false);, +, +                            break;, +                        case SHORT:, +                            if (internal && explicit), +                                return new Cast(actual, Definition.SHORT_OBJ_TYPE, true, false, true, false, false);, +, +                            break;, +                        case CHAR:, +                            if (internal && explicit), +                                return new Cast(actual, Definition.CHAR_OBJ_TYPE, true, false, true, false, false);, +, +                            break;, +                        case INT:, +                            if (internal && explicit), +                                return new Cast(actual, Definition.INT_OBJ_TYPE, true, false, true, false, false);, +, +                            break;, +                        case LONG:, +                            if (internal && explicit), +                                return new Cast(actual, Definition.LONG_OBJ_TYPE, true, false, true, false, false);, +, +                            break;, +                        case FLOAT:, +                            if (internal && explicit), +                                return new Cast(actual, Definition.FLOAT_OBJ_TYPE, true, false, true, false, false);, +, +                            break;, +                        case DOUBLE:, +                            if (internal && explicit), +                                return new Cast(actual, Definition.DOUBLE_OBJ_TYPE, true, false, true, false, false);, +, +                            break;, +                    }, +                break;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +, +                        break;, +                        if (Definition.OBJECT_TYPE.equals(expected) && internal), +                            return new Cast(actual, actual, explicit, false, false, false, true);, +]