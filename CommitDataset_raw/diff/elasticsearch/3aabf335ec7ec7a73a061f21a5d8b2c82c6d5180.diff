[+++ b/core/src/test/java/org/elasticsearch/common/geo/builders/AbstractShapeBuilderTestCase.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.XContentType;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.not;, +++ b/core/src/test/java/org/elasticsearch/common/geo/builders/AbstractShapeBuilderTestCase.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.XContentType;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.not;, +++ b/core/src/test/java/org/elasticsearch/search/geo/GeoShapeQueryTests.java, +, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.greaterThan;, +import static org.hamcrest.Matchers.nullValue;, +        // no shape, +        filter = QueryBuilders.geoShapeQuery("location", ShapeBuilders.newGeometryCollection());, +        result = client().prepareSearch("test").setTypes("type").setQuery(QueryBuilders.matchAllQuery()), +                .setPostFilter(filter).get();, +        assertSearchResponse(result);, +        assertHitCount(result, 0);]