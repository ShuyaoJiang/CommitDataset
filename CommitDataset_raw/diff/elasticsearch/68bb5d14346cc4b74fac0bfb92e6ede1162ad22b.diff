[+++ b/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +        public Builder filter(CompressedString filter) {, +            this.filter = filter;, +            return this;, +        }, +, +            boolean binary = params.paramAsBoolean("binary", false);, +, +                if (binary) {, +                    builder.field("filter", aliasMetaData.filter.compressed());, +                } else {, +            }, +                } else if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {, +                    if ("filter".equals(currentFieldName)) {, +                        builder.filter(new CompressedString(parser.binaryValue()));, +                    }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +        public Builder filter(CompressedString filter) {, +            this.filter = filter;, +            return this;, +        }, +, +            boolean binary = params.paramAsBoolean("binary", false);, +, +                if (binary) {, +                    builder.field("filter", aliasMetaData.filter.compressed());, +                } else {, +            }, +                } else if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {, +                    if ("filter".equals(currentFieldName)) {, +                        builder.filter(new CompressedString(parser.binaryValue()));, +                    }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.compress.CompressedString;, +                putMapping(new MappingMetaData(type, parser.mapOrdered()));, +            boolean binary = params.paramAsBoolean("binary", false);, +, +                if (binary) {, +                    builder.value(entry.getValue().source().compressed());, +                } else {, +            }, +                            if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {, +                                builder.putMapping(new MappingMetaData(new CompressedString(parser.binaryValue())));, +                            } else {, +                        }, +                } else if (token == XContentParser.Token.START_ARRAY) {, +                    if ("mappings".equals(currentFieldName)) {, +                        while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {, +                            if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {, +                                builder.putMapping(new MappingMetaData(new CompressedString(parser.binaryValue())));, +                            } else {, +                                Map<String, Object> mapping = parser.mapOrdered();, +                                if (mapping.size() == 1) {, +                                    String mappingType = mapping.keySet().iterator().next();, +                                    builder.putMapping(new MappingMetaData(mappingType, mapping));, +                                }, +                            }, +                        }, +                    }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +        public Builder filter(CompressedString filter) {, +            this.filter = filter;, +            return this;, +        }, +, +            boolean binary = params.paramAsBoolean("binary", false);, +, +                if (binary) {, +                    builder.field("filter", aliasMetaData.filter.compressed());, +                } else {, +            }, +                } else if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {, +                    if ("filter".equals(currentFieldName)) {, +                        builder.filter(new CompressedString(parser.binaryValue()));, +                    }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.compress.CompressedString;, +                putMapping(new MappingMetaData(type, parser.mapOrdered()));, +            boolean binary = params.paramAsBoolean("binary", false);, +, +                if (binary) {, +                    builder.value(entry.getValue().source().compressed());, +                } else {, +            }, +                            if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {, +                                builder.putMapping(new MappingMetaData(new CompressedString(parser.binaryValue())));, +                            } else {, +                        }, +                } else if (token == XContentParser.Token.START_ARRAY) {, +                    if ("mappings".equals(currentFieldName)) {, +                        while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {, +                            if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {, +                                builder.putMapping(new MappingMetaData(new CompressedString(parser.binaryValue())));, +                            } else {, +                                Map<String, Object> mapping = parser.mapOrdered();, +                                if (mapping.size() == 1) {, +                                    String mappingType = mapping.keySet().iterator().next();, +                                    builder.putMapping(new MappingMetaData(mappingType, mapping));, +                                }, +                            }]