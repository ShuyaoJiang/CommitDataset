[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PutFilterRequest;, +, +    static Request putFilter(PutFilterRequest putFilterRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("filters"), +            .addPathPart(putFilterRequest.getMlFilter().getId()), +            .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(putFilterRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PutFilterRequest;, +, +    static Request putFilter(PutFilterRequest putFilterRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("filters"), +            .addPathPart(putFilterRequest.getMlFilter().getId()), +            .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(putFilterRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.PutFilterRequest;, +import org.elasticsearch.client.ml.PutFilterResponse;, +, +    /**, +     * Creates a new Machine Learning Filter, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-filter.html">ML PUT Filter documentation</a>, +     *, +     * @param request The PutFilterRequest containing the {@link org.elasticsearch.client.ml.job.config.MlFilter} settings, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return PutFilterResponse with enclosed {@link org.elasticsearch.client.ml.job.config.MlFilter} object, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public PutFilterResponse putFilter(PutFilterRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::putFilter,, +            options,, +            PutFilterResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Creates a new Machine Learning Filter asynchronously and notifies listener on completion, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-filter.html">ML PUT Filter documentation</a>, +     *, +     * @param request  The request containing the {@link org.elasticsearch.client.ml.job.config.MlFilter} settings, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void putFilterAsync(PutFilterRequest request, RequestOptions options, ActionListener<PutFilterResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::putFilter,, +            options,, +            PutFilterResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PutFilterRequest;, +, +    static Request putFilter(PutFilterRequest putFilterRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("filters"), +            .addPathPart(putFilterRequest.getMlFilter().getId()), +            .build();, +        Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(putFilterRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.PutFilterRequest;, +import org.elasticsearch.client.ml.PutFilterResponse;, +, +    /**, +     * Creates a new Machine Learning Filter, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-filter.html">ML PUT Filter documentation</a>, +     *, +     * @param request The PutFilterRequest containing the {@link org.elasticsearch.client.ml.job.config.MlFilter} settings, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return PutFilterResponse with enclosed {@link org.elasticsearch.client.ml.job.config.MlFilter} object, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public PutFilterResponse putFilter(PutFilterRequest request, RequestOptions options) throws IOException {]