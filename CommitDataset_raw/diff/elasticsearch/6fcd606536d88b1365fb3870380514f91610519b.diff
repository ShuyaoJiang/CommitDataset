[+++ b/x-pack/qa/ml-native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeAutodetectIntegTestCase.java, +import org.elasticsearch.action.get.GetResponse;, +        GetResponse getResponse = client().prepareGet(), +                .setIndex(AnomalyDetectorsIndex.jobResultsAliasedName(jobId)), +                .setId(ForecastRequestStats.documentId(jobId, forecastId)), +, +        if (getResponse.isExists() == false) {, +        try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(, +                    getResponse.getSourceAsBytesRef().streamInput())) {, +++ b/x-pack/qa/ml-native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/MlNativeAutodetectIntegTestCase.java, +import org.elasticsearch.action.get.GetResponse;, +        GetResponse getResponse = client().prepareGet(), +                .setIndex(AnomalyDetectorsIndex.jobResultsAliasedName(jobId)), +                .setId(ForecastRequestStats.documentId(jobId, forecastId)), +, +        if (getResponse.isExists() == false) {, +        try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(, +                    getResponse.getSourceAsBytesRef().streamInput())) {, +++ b/x-pack/qa/ml-native-multi-node-tests/src/test/java/org/elasticsearch/xpack/ml/integration/RestoreModelSnapshotIT.java, +import static org.hamcrest.Matchers.anyOf;, +import static org.hamcrest.Matchers.empty;, +import static org.hamcrest.Matchers.greaterThan;, +import static org.hamcrest.Matchers.nullValue;, +        assertThat(forecastStats.getMessages(), anyOf(nullValue(), empty()));, +        assertThat(forecastStats.getMemoryUsage(), greaterThan(0L));, +        assertEquals(forecastStats.getRecordCount(), 3L);]