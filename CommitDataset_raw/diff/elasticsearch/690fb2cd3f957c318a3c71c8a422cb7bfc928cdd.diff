[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], bucketDocCount(bucketOrd), bucketAggregations(bucketOrd), keyed);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(otherBucketKey, bucketDocCount(bucketOrd),, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], 0, subAggs, keyed);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], bucketDocCount(bucketOrd), bucketAggregations(bucketOrd), keyed);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(otherBucketKey, bucketDocCount(bucketOrd),, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], 0, subAggs, keyed);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java, +public class InternalFilters extends InternalMultiBucketAggregation<InternalFilters, InternalFilters.InternalBucket> implements Filters {, +    private final static BucketStreams.Stream<InternalBucket> BUCKET_STREAM = new BucketStreams.Stream<InternalBucket>() {, +        public InternalBucket readResult(StreamInput in, BucketStreamContext context) throws IOException {, +            InternalBucket filters = new InternalBucket(context.keyed());, +        public BucketStreamContext getBucketStreamContext(InternalBucket bucket) {, +    public static class InternalBucket extends InternalMultiBucketAggregation.InternalBucket implements Filters.Bucket {, +        private InternalBucket(boolean keyed) {, +        public InternalBucket(String key, long docCount, InternalAggregations aggregations, boolean keyed) {, +        InternalBucket reduce(List<InternalBucket> buckets, ReduceContext context) {, +            InternalBucket reduced = null;, +            for (InternalBucket bucket : buckets) {, +                    reduced = new InternalBucket(bucket.key, bucket.docCount, bucket.aggregations, bucket.keyed);, +    private List<InternalBucket> buckets;, +    private Map<String, InternalBucket> bucketMap;, +    public InternalFilters(String name, List<InternalBucket> buckets, boolean keyed, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {, +    public InternalFilters create(List<InternalBucket> buckets) {, +    public InternalBucket createBucket(InternalAggregations aggregations, InternalBucket prototype) {, +        return new InternalBucket(prototype.key, prototype.docCount, aggregations, prototype.keyed);, +    public List<InternalBucket> getBuckets() {, +    public InternalBucket getBucketByKey(String key) {, +            for (InternalBucket bucket : buckets) {, +        List<List<InternalBucket>> bucketsList = null;, +                for (InternalBucket bucket : filters.buckets) {, +                    List<InternalBucket> sameRangeList = new ArrayList<>(aggregations.size());, +                for (InternalBucket bucket : filters.buckets) {, +        InternalFilters reduced = new InternalFilters(name, new ArrayList<InternalBucket>(bucketsList.size()), keyed, pipelineAggregators(), getMetaData());, +        for (List<InternalBucket> sameRangeList : bucketsList) {, +        List<InternalBucket> buckets = new ArrayList<>(size);, +            InternalBucket bucket = new InternalBucket(keyed);, +        for (InternalBucket bucket : buckets) {, +        for (InternalBucket bucket : buckets) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], bucketDocCount(bucketOrd), bucketAggregations(bucketOrd), keyed);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(otherBucketKey, bucketDocCount(bucketOrd),, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], 0, subAggs, keyed);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java, +public class InternalFilters extends InternalMultiBucketAggregation<InternalFilters, InternalFilters.InternalBucket> implements Filters {, +    private final static BucketStreams.Stream<InternalBucket> BUCKET_STREAM = new BucketStreams.Stream<InternalBucket>() {, +        public InternalBucket readResult(StreamInput in, BucketStreamContext context) throws IOException {, +            InternalBucket filters = new InternalBucket(context.keyed());, +        public BucketStreamContext getBucketStreamContext(InternalBucket bucket) {, +    public static class InternalBucket extends InternalMultiBucketAggregation.InternalBucket implements Filters.Bucket {, +        private InternalBucket(boolean keyed) {, +        public InternalBucket(String key, long docCount, InternalAggregations aggregations, boolean keyed) {, +        InternalBucket reduce(List<InternalBucket> buckets, ReduceContext context) {, +            InternalBucket reduced = null;, +            for (InternalBucket bucket : buckets) {, +                    reduced = new InternalBucket(bucket.key, bucket.docCount, bucket.aggregations, bucket.keyed);, +    private List<InternalBucket> buckets;, +    private Map<String, InternalBucket> bucketMap;, +    public InternalFilters(String name, List<InternalBucket> buckets, boolean keyed, List<PipelineAggregator> pipelineAggregators, Map<String, Object> metaData) {, +    public InternalFilters create(List<InternalBucket> buckets) {, +    public InternalBucket createBucket(InternalAggregations aggregations, InternalBucket prototype) {, +        return new InternalBucket(prototype.key, prototype.docCount, aggregations, prototype.keyed);, +    public List<InternalBucket> getBuckets() {, +    public InternalBucket getBucketByKey(String key) {, +            for (InternalBucket bucket : buckets) {, +        List<List<InternalBucket>> bucketsList = null;, +                for (InternalBucket bucket : filters.buckets) {, +                    List<InternalBucket> sameRangeList = new ArrayList<>(aggregations.size());, +                for (InternalBucket bucket : filters.buckets) {, +        InternalFilters reduced = new InternalFilters(name, new ArrayList<InternalBucket>(bucketsList.size()), keyed, pipelineAggregators(), getMetaData());, +        for (List<InternalBucket> sameRangeList : bucketsList) {, +        List<InternalBucket> buckets = new ArrayList<>(size);, +            InternalBucket bucket = new InternalBucket(keyed);, +        for (InternalBucket bucket : buckets) {, +        for (InternalBucket bucket : buckets) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/derivative/DerivativePipelineAggregator.java, +            throw new AggregationExecutionException("InternalBucket keys must be either a Number or a DateTime for aggregation " + name(), +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], bucketDocCount(bucketOrd), bucketAggregations(bucketOrd), keyed);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(otherBucketKey, bucketDocCount(bucketOrd),, +        List<InternalFilters.InternalBucket> buckets = new ArrayList<>(filters.length);, +            InternalFilters.InternalBucket bucket = new InternalFilters.InternalBucket(keys[i], 0, subAggs, keyed);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java, +public class InternalFilters extends InternalMultiBucketAggregation<InternalFilters, InternalFilters.InternalBucket> implements Filters {, +    private final static BucketStreams.Stream<InternalBucket> BUCKET_STREAM = new BucketStreams.Stream<InternalBucket>() {, +        public InternalBucket readResult(StreamInput in, BucketStreamContext context) throws IOException {, +            InternalBucket filters = new InternalBucket(context.keyed());, +        public BucketStreamContext getBucketStreamContext(InternalBucket bucket) {, +    public static class InternalBucket extends InternalMultiBucketAggregation.InternalBucket implements Filters.Bucket {, +        private InternalBucket(boolean keyed) {, +        public InternalBucket(String key, long docCount, InternalAggregations aggregations, boolean keyed) {, +        InternalBucket reduce(List<InternalBucket> buckets, ReduceContext context) {]