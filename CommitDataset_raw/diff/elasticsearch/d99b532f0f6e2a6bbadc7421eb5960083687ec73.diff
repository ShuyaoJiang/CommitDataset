[+++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/ByteValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += (byte) readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/ByteValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += (byte) readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/ByteValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += (byte) readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleValuesComparatorBase.java, +abstract class DoubleValuesComparatorBase<T extends Number> extends NumberComparatorBase<T> {, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/ByteValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += (byte) readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleValuesComparatorBase.java, +abstract class DoubleValuesComparatorBase<T extends Number> extends NumberComparatorBase<T> {, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/FloatValuesComparator.java, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += (float) readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {, +        values[slot] /= divisor;, +    }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/ByteValuesComparator.java, +, +    @Override, +    public void add(int slot, int doc) {, +        values[slot] += (byte) readerValues.getValueMissing(doc, missingValue);, +    }, +, +    @Override, +    public void divide(int slot, int divisor) {]