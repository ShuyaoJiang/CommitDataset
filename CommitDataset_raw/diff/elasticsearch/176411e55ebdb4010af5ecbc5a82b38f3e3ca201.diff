[+++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/action/MonitoringBulkResponse.java, +import org.elasticsearch.Version;, +    private boolean ignored;, +    public MonitoringBulkResponse(final long tookInMillis, final boolean ignored) {, +        this.tookInMillis = tookInMillis;, +        this.ignored = ignored;, +    public MonitoringBulkResponse(final long tookInMillis, final Error error) {, +        this(tookInMillis, false);, +     * Determine if the request was ignored., +     *, +     * @return {@code true} if the request was ignored because collection was disabled., +     */, +    public boolean isIgnored() {, +        return ignored;, +    }, +, +    /**, +     *, +     * <li>{@link RestStatus#ACCEPTED} if monitoring bulk request was ignored because collection is disabled</li>, +        if (error == null) {, +            return ignored ? RestStatus.ACCEPTED : RestStatus.OK;, +        }, +, +        return RestStatus.INTERNAL_SERVER_ERROR;, +, +        if (in.getVersion().onOrAfter(Version.V_6_3_0)) {, +            ignored = in.readBoolean();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_6_3_0)) {, +            out.writeBoolean(ignored);, +        }, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/action/MonitoringBulkResponse.java, +import org.elasticsearch.Version;, +    private boolean ignored;, +    public MonitoringBulkResponse(final long tookInMillis, final boolean ignored) {, +        this.tookInMillis = tookInMillis;, +        this.ignored = ignored;, +    public MonitoringBulkResponse(final long tookInMillis, final Error error) {, +        this(tookInMillis, false);, +     * Determine if the request was ignored., +     *, +     * @return {@code true} if the request was ignored because collection was disabled., +     */, +    public boolean isIgnored() {, +        return ignored;, +    }, +, +    /**, +     *, +     * <li>{@link RestStatus#ACCEPTED} if monitoring bulk request was ignored because collection is disabled</li>, +        if (error == null) {, +            return ignored ? RestStatus.ACCEPTED : RestStatus.OK;, +        }, +, +        return RestStatus.INTERNAL_SERVER_ERROR;, +, +        if (in.getVersion().onOrAfter(Version.V_6_3_0)) {, +            ignored = in.readBoolean();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_6_3_0)) {, +            out.writeBoolean(ignored);, +        }, +++ b/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/MonitoringService.java, +    public boolean isMonitoringActive() {, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/action/MonitoringBulkResponse.java, +import org.elasticsearch.Version;, +    private boolean ignored;, +    public MonitoringBulkResponse(final long tookInMillis, final boolean ignored) {, +        this.tookInMillis = tookInMillis;, +        this.ignored = ignored;, +    public MonitoringBulkResponse(final long tookInMillis, final Error error) {, +        this(tookInMillis, false);, +     * Determine if the request was ignored., +     *, +     * @return {@code true} if the request was ignored because collection was disabled., +     */, +    public boolean isIgnored() {, +        return ignored;, +    }, +, +    /**, +     *, +     * <li>{@link RestStatus#ACCEPTED} if monitoring bulk request was ignored because collection is disabled</li>, +        if (error == null) {, +            return ignored ? RestStatus.ACCEPTED : RestStatus.OK;, +        }, +, +        return RestStatus.INTERNAL_SERVER_ERROR;, +, +        if (in.getVersion().onOrAfter(Version.V_6_3_0)) {, +            ignored = in.readBoolean();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_6_3_0)) {, +            out.writeBoolean(ignored);, +        }, +++ b/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/MonitoringService.java, +    public boolean isMonitoringActive() {]