[+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/DetailAnalyzeResponse.java, +            if (tokens != null) {, +            }, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/DetailAnalyzeResponse.java, +            if (tokens != null) {, +            }, +++ b/server/src/test/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponseTests.java, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.json.JsonXContent;, +import static org.hamcrest.Matchers.equalTo;, +, +, +    public void testNullResponseToXContent() throws IOException {, +        DetailAnalyzeResponse.CharFilteredText[] charfilters = null;, +, +        String name = "test_tokens_null";, +        AnalyzeResponse.AnalyzeToken[] tokens = null;, +        DetailAnalyzeResponse.AnalyzeTokenList tokenizer = null;, +, +, +        DetailAnalyzeResponse.AnalyzeTokenList tokenfiltersItem = new DetailAnalyzeResponse.AnalyzeTokenList(name, tokens);, +        DetailAnalyzeResponse.AnalyzeTokenList[] tokenfilters = {tokenfiltersItem};, +, +        DetailAnalyzeResponse detail = new DetailAnalyzeResponse(charfilters, tokenizer, tokenfilters);, +, +        AnalyzeResponse response = new AnalyzeResponse(null, detail);, +        try (XContentBuilder builder = JsonXContent.contentBuilder()) {, +            response.toXContent(builder, ToXContent.EMPTY_PARAMS);, +            Map<String, Object> converted = XContentHelper.convertToMap(BytesReference.bytes(builder), false, builder.contentType()).v2();, +            List<Map<String, Object>> tokenfiltersValue = (List<Map<String, Object>>) ((Map<String, Object>), +                converted.get("detail")).get("tokenfilters");, +            List<Map<String, Object>> nullTokens = (List<Map<String, Object>>) tokenfiltersValue.get(0).get("tokens");, +            String nameValue = (String) tokenfiltersValue.get(0).get("name");, +            assertThat(nullTokens.size(), equalTo(0));, +            assertThat(name, equalTo(nameValue));, +        }, +, +    }]