[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('-Djna.nosys=true'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('-Djna.nosys=true'), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('-Djna.nosys=true'), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +            DiscoveryNode dn = new DiscoveryNode(in);, +            DiscoveryNode dn = new DiscoveryNode(in);, +                        for (Map.Entry<String, String> attrEntry : node.getAttributes().entrySet()) {, +                            builder.field(attrEntry.getKey(), attrEntry.getValue());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('-Djna.nosys=true'), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +            DiscoveryNode dn = new DiscoveryNode(in);, +            DiscoveryNode dn = new DiscoveryNode(in);, +                        for (Map.Entry<String, String> attrEntry : node.getAttributes().entrySet()) {, +                            builder.field(attrEntry.getKey(), attrEntry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +            builder.startArray("roles");, +            for (DiscoveryNode.Role role : nodeInfo.getNode().getRoles()) {, +                builder.value(role.getRoleName());, +            }, +            builder.endArray();, +, +            if (!nodeInfo.getNode().getAttributes().isEmpty()) {, +                for (Map.Entry<String, String> entry : nodeInfo.getNode().getAttributes().entrySet()) {, +                    builder.field(entry.getKey(), entry.getValue(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('-Djna.nosys=true'), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +            DiscoveryNode dn = new DiscoveryNode(in);, +            DiscoveryNode dn = new DiscoveryNode(in);, +                        for (Map.Entry<String, String> attrEntry : node.getAttributes().entrySet()) {, +                            builder.field(attrEntry.getKey(), attrEntry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +            builder.startArray("roles");, +            for (DiscoveryNode.Role role : nodeInfo.getNode().getRoles()) {, +                builder.value(role.getRoleName());, +            }, +            builder.endArray();, +, +            if (!nodeInfo.getNode().getAttributes().isEmpty()) {, +                for (Map.Entry<String, String> entry : nodeInfo.getNode().getAttributes().entrySet()) {, +                    builder.field(entry.getKey(), entry.getValue(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/LivenessResponse.java, +        node = in.readOptionalWriteable(DiscoveryNode::new);, +        out.writeOptionalWriteable(node);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('-Djna.nosys=true'), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +            DiscoveryNode dn = new DiscoveryNode(in);, +            DiscoveryNode dn = new DiscoveryNode(in);, +                        for (Map.Entry<String, String> attrEntry : node.getAttributes().entrySet()) {, +                            builder.field(attrEntry.getKey(), attrEntry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +            builder.startArray("roles");, +            for (DiscoveryNode.Role role : nodeInfo.getNode().getRoles()) {, +                builder.value(role.getRoleName());, +            }, +            builder.endArray();, +, +            if (!nodeInfo.getNode().getAttributes().isEmpty()) {, +                for (Map.Entry<String, String> entry : nodeInfo.getNode().getAttributes().entrySet()) {, +                    builder.field(entry.getKey(), entry.getValue(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/LivenessResponse.java, +        node = in.readOptionalWriteable(DiscoveryNode::new);, +        out.writeOptionalWriteable(node);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import java.util.Map;, +            builder.startArray("roles");, +            for (DiscoveryNode.Role role : getNode().getRoles()) {, +                builder.value(role.getRoleName());, +            }, +            builder.endArray();, +, +            if (!getNode().getAttributes().isEmpty()) {, +                for (Map.Entry<String, String> attrEntry : getNode().getAttributes().entrySet()) {, +                    builder.field(attrEntry.getKey(), attrEntry.getValue(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/NamingConventionsTask.groovy, +                args('-Djna.nosys=true'), +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplanation.java, +            DiscoveryNode dn = new DiscoveryNode(in);, +            DiscoveryNode dn = new DiscoveryNode(in);, +                        for (Map.Entry<String, String> attrEntry : node.getAttributes().entrySet()) {, +                            builder.field(attrEntry.getKey(), attrEntry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +            builder.startArray("roles");, +            for (DiscoveryNode.Role role : nodeInfo.getNode().getRoles()) {, +                builder.value(role.getRoleName());]