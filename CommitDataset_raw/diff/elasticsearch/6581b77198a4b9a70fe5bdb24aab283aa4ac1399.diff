[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, + *      <li>{@link IndexStore} - Custom {@link IndexStore} instances can be registered via {@link #addIndexStore(String, Function)}</li>, +    private final Map<String, Function<IndexSettings, IndexStore>> storeTypes = new HashMap<>();, +    public IndexModule(IndexSettings indexSettings, AnalysisRegistry analysisRegistry) {, +    public void addIndexStore(String type, Function<IndexSettings, IndexStore> provider) {, +            store = new IndexStore(indexSettings);, +            Function<IndexSettings, IndexStore> factory = storeTypes.get(storeType);, +            store = factory.apply(indexSettings);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, + *      <li>{@link IndexStore} - Custom {@link IndexStore} instances can be registered via {@link #addIndexStore(String, Function)}</li>, +    private final Map<String, Function<IndexSettings, IndexStore>> storeTypes = new HashMap<>();, +    public IndexModule(IndexSettings indexSettings, AnalysisRegistry analysisRegistry) {, +    public void addIndexStore(String type, Function<IndexSettings, IndexStore> provider) {, +            store = new IndexStore(indexSettings);, +            Function<IndexSettings, IndexStore> factory = storeTypes.get(storeType);, +            store = factory.apply(indexSettings);, +++ b/core/src/main/java/org/elasticsearch/index/store/DirectoryService.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, + *      <li>{@link IndexStore} - Custom {@link IndexStore} instances can be registered via {@link #addIndexStore(String, Function)}</li>, +    private final Map<String, Function<IndexSettings, IndexStore>> storeTypes = new HashMap<>();, +    public IndexModule(IndexSettings indexSettings, AnalysisRegistry analysisRegistry) {, +    public void addIndexStore(String type, Function<IndexSettings, IndexStore> provider) {, +            store = new IndexStore(indexSettings);, +            Function<IndexSettings, IndexStore> factory = storeTypes.get(storeType);, +            store = factory.apply(indexSettings);, +++ b/core/src/main/java/org/elasticsearch/index/store/DirectoryService.java, +++ b/core/src/main/java/org/elasticsearch/index/store/FsDirectoryService.java, +public class FsDirectoryService extends DirectoryService {, +        return wrapped;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, + *      <li>{@link IndexStore} - Custom {@link IndexStore} instances can be registered via {@link #addIndexStore(String, Function)}</li>, +    private final Map<String, Function<IndexSettings, IndexStore>> storeTypes = new HashMap<>();, +    public IndexModule(IndexSettings indexSettings, AnalysisRegistry analysisRegistry) {, +    public void addIndexStore(String type, Function<IndexSettings, IndexStore> provider) {, +            store = new IndexStore(indexSettings);, +            Function<IndexSettings, IndexStore> factory = storeTypes.get(storeType);, +            store = factory.apply(indexSettings);, +++ b/core/src/main/java/org/elasticsearch/index/store/DirectoryService.java, +++ b/core/src/main/java/org/elasticsearch/index/store/FsDirectoryService.java, +public class FsDirectoryService extends DirectoryService {, +        return wrapped;, +++ b/core/src/main/java/org/elasticsearch/index/store/IndexStore.java, +    public IndexStore(IndexSettings indexSettings) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, + *      <li>{@link IndexStore} - Custom {@link IndexStore} instances can be registered via {@link #addIndexStore(String, Function)}</li>, +    private final Map<String, Function<IndexSettings, IndexStore>> storeTypes = new HashMap<>();, +    public IndexModule(IndexSettings indexSettings, AnalysisRegistry analysisRegistry) {, +    public void addIndexStore(String type, Function<IndexSettings, IndexStore> provider) {, +            store = new IndexStore(indexSettings);]