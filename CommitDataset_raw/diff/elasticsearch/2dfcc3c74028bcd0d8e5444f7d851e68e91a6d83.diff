[+++ b/src/test/java/org/elasticsearch/test/unit/index/fielddata/StringFieldDataTests.java, +import org.apache.lucene.search.*;, +import static org.hamcrest.MatcherAssert.assertThat;, +import static org.hamcrest.Matchers.*;, +, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        // Some impls (FST) return size 0 and some (PagedBytes) do take size in the case no actual data is loaded, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThanOrEqualTo(0l));, +++ b/src/test/java/org/elasticsearch/test/unit/index/fielddata/StringFieldDataTests.java, +import org.apache.lucene.search.*;, +import static org.hamcrest.MatcherAssert.assertThat;, +import static org.hamcrest.Matchers.*;, +, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThan(0l));, +        // Some impls (FST) return size 0 and some (PagedBytes) do take size in the case no actual data is loaded, +        assertThat(fieldData.getMemorySizeInBytes(), greaterThanOrEqualTo(0l));, +++ b/src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/MultiOrdinalsTests.java, +import java.util.*;, +, +import static org.hamcrest.MatcherAssert.assertThat;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.greaterThan;, +, +        assertThat(ordinals.getMemorySizeInBytes(), greaterThan(0l));]