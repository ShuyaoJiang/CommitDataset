[+++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java, +import org.apache.lucene.spatial.geopoint.document.GeoPointField;, +import org.apache.lucene.spatial.util.GeoEncodingUtils;, +     * A {@link TermsEnum} that iterates only highest resolution geo prefix coded terms., +     *, +     * @see #buildFromTerms(TermsEnum), +     */, +    public static TermsEnum wrapGeoPointTerms(TermsEnum termsEnum) {, +        return new FilteredTermsEnum(termsEnum, false) {, +            @Override, +            protected AcceptStatus accept(BytesRef term) throws IOException {, +                // accept only the max resolution terms, +                // todo is this necessary?, +                return GeoEncodingUtils.getPrefixCodedShift(term) == GeoPointField.PRECISION_STEP * 4 ?, +                    AcceptStatus.YES : AcceptStatus.END;, +            }, +        };, +    }, +, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java, +import org.apache.lucene.spatial.geopoint.document.GeoPointField;, +import org.apache.lucene.spatial.util.GeoEncodingUtils;, +     * A {@link TermsEnum} that iterates only highest resolution geo prefix coded terms., +     *, +     * @see #buildFromTerms(TermsEnum), +     */, +    public static TermsEnum wrapGeoPointTerms(TermsEnum termsEnum) {, +        return new FilteredTermsEnum(termsEnum, false) {, +            @Override, +            protected AcceptStatus accept(BytesRef term) throws IOException {, +                // accept only the max resolution terms, +                // todo is this necessary?, +                return GeoEncodingUtils.getPrefixCodedShift(term) == GeoPointField.PRECISION_STEP * 4 ?, +                    AcceptStatus.YES : AcceptStatus.END;, +            }, +        };, +    }, +, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexGeoPointFieldData.java, +import org.apache.lucene.spatial.util.GeoEncodingUtils;, +        private final GeoPointField.TermEncoding termEncoding;, +            this.termEncoding = termEncoding;, +            if (termEncoding == GeoPointField.TermEncoding.PREFIX) {, +                return GeoEncodingUtils.prefixCodedToGeoCoded(term);, +            } else if (termEncoding == GeoPointField.TermEncoding.NUMERIC) {, +            throw new IllegalArgumentException("GeoPoint.TermEncoding should be one of: " + GeoPointField.TermEncoding.PREFIX, +                + " or " + GeoPointField.TermEncoding.NUMERIC + " found: " + termEncoding);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java, +import org.apache.lucene.spatial.geopoint.document.GeoPointField;, +import org.apache.lucene.spatial.util.GeoEncodingUtils;, +     * A {@link TermsEnum} that iterates only highest resolution geo prefix coded terms., +     *, +     * @see #buildFromTerms(TermsEnum), +     */, +    public static TermsEnum wrapGeoPointTerms(TermsEnum termsEnum) {, +        return new FilteredTermsEnum(termsEnum, false) {, +            @Override, +            protected AcceptStatus accept(BytesRef term) throws IOException {, +                // accept only the max resolution terms, +                // todo is this necessary?, +                return GeoEncodingUtils.getPrefixCodedShift(term) == GeoPointField.PRECISION_STEP * 4 ?, +                    AcceptStatus.YES : AcceptStatus.END;, +            }, +        };, +    }, +, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexGeoPointFieldData.java, +import org.apache.lucene.spatial.util.GeoEncodingUtils;, +        private final GeoPointField.TermEncoding termEncoding;, +            this.termEncoding = termEncoding;, +            if (termEncoding == GeoPointField.TermEncoding.PREFIX) {, +                return GeoEncodingUtils.prefixCodedToGeoCoded(term);, +            } else if (termEncoding == GeoPointField.TermEncoding.NUMERIC) {, +            throw new IllegalArgumentException("GeoPoint.TermEncoding should be one of: " + GeoPointField.TermEncoding.PREFIX, +                + " or " + GeoPointField.TermEncoding.NUMERIC + " found: " + termEncoding);, +        }, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointArrayIndexFieldData.java, +import org.apache.lucene.index.TermsEnum;, +            final TermsEnum termsEnum;, +            final GeoPointField.TermEncoding termEncoding;, +            if (indexSettings.getIndexVersionCreated().onOrAfter(Version.V_2_3_0)) {, +                termEncoding = GeoPointField.TermEncoding.PREFIX;, +                termsEnum = OrdinalsBuilder.wrapGeoPointTerms(terms.iterator());, +            } else {, +                termEncoding = GeoPointField.TermEncoding.NUMERIC;, +                termsEnum = OrdinalsBuilder.wrapNumeric64Bit(terms.iterator());, +            }, +, +            final GeoPointTermsEnum iter = new GeoPointTermsEnum(builder.buildFromTerms(termsEnum), termEncoding);, +, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java, +import org.apache.lucene.spatial.geopoint.document.GeoPointField;, +import org.apache.lucene.spatial.util.GeoEncodingUtils;]