[+++ b/src/test/java/org/elasticsearch/search/stats/SearchStatsTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_REPLICAS;, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_SHARDS;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +        final int numNodes = cluster().dataNodes();, +        assertThat(numNodes, greaterThanOrEqualTo(2));, +        final int shardsIdx1 = randomIntBetween(1, 10); // we make sure each node gets at least a single shard..., +        final int shardsIdx2 = Math.max(numNodes - shardsIdx1, randomIntBetween(1, 10));, +        assertThat(numNodes, lessThanOrEqualTo(shardsIdx1 + shardsIdx2));, +        assertAcked(prepareCreate("test1").setSettings(ImmutableSettings.builder(), +                .put(SETTING_NUMBER_OF_SHARDS, shardsIdx1), +                .put(SETTING_NUMBER_OF_REPLICAS, 0)));, +        int docsTest1 = scaledRandomIntBetween(3*shardsIdx1, 5*shardsIdx1);, +        assertAcked(prepareCreate("test2").setSettings(ImmutableSettings.builder(), +                .put(SETTING_NUMBER_OF_SHARDS, shardsIdx2), +                .put(SETTING_NUMBER_OF_REPLICAS, 0)));, +        int docsTest2 = scaledRandomIntBetween(3*shardsIdx2, 5*shardsIdx2);, +        assertThat(shardsIdx1+shardsIdx2, equalTo(numAssignedShards("test1", "test2")));, +        int iters = scaledRandomIntBetween(20, 50);, +        final int docs = scaledRandomIntBetween(20, 50);]