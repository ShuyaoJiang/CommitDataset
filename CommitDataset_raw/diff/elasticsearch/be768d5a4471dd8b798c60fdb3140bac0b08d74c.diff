[+++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnectionFactory.java, +            String searchFilter = "(&(objectClass=user)(|(sAMAccountName={0})(userPrincipalName={1})))";, +                ctx.search(userSearchDN, searchFilter, new Object[] { userName, userPrincipal }, searchCtls))) {, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnectionFactory.java, +            String searchFilter = "(&(objectClass=user)(|(sAMAccountName={0})(userPrincipalName={1})))";, +                ctx.search(userSearchDN, searchFilter, new Object[] { userName, userPrincipal }, searchCtls))) {, +++ b/src/test/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryFactoryTests.java, +    public void testAdUpnLogin() {, +        Settings settings = buildAdSettings(AD_LDAP_URL, AD_DOMAIN, "CN=Users,DC=ad,DC=test,DC=elasticsearch,DC=com", false);, +        ActiveDirectoryConnectionFactory connectionFactory = new ActiveDirectoryConnectionFactory(settings);, +, +        //Login with the UserPrincipalName, +        String userDN;, +        try (AbstractLdapConnection ldap = connectionFactory.open("erik.selvig", SecuredStringTests.build(PASSWORD))) {, +            List<String> groups = ldap.groups();, +            userDN = ldap.authenticatedUserDn();, +            assertThat(groups, containsInAnyOrder(, +                    containsString("Geniuses"),, +                    containsString("Domain Users")));, +        }, +        //Same user but login with sAMAccountName, +        try (AbstractLdapConnection ldap = connectionFactory.open("selvig", SecuredStringTests.build(PASSWORD))) {, +            assertThat(ldap.authenticatedUserDn(), is(userDN));, +, +            List<String> groups = ldap.groups();, +            assertThat(groups, containsInAnyOrder(, +                    containsString("Geniuses"),, +                    containsString("Domain Users")));, +        }, +    }, +, +    @Test @SuppressWarnings("unchecked")]