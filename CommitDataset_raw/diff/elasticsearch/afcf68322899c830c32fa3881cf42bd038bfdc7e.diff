[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        check(enforceLimits, checks, Loggers.getLogger(BootstrapCheck.class, nodeName));, +                if (!enforceLimits && !check.alwaysEnforce()) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        check(enforceLimits, checks, Loggers.getLogger(BootstrapCheck.class, nodeName));, +                if (!enforceLimits && !check.alwaysEnforce()) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapSettings.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        check(enforceLimits, checks, Loggers.getLogger(BootstrapCheck.class, nodeName));, +                if (!enforceLimits && !check.alwaysEnforce()) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +        check(enforceLimits, checks, Loggers.getLogger(BootstrapCheck.class, nodeName));, +                if (!enforceLimits && !check.alwaysEnforce()) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/test/java/org/elasticsearch/bootstrap/BootstrapCheckTests.java, +        BootstrapCheck.check(false, Collections.emptyList(), logger);, +        BootstrapCheck.check(true, Collections.emptyList(), logger);, +                expectThrows(NodeValidationException.class, () -> BootstrapCheck.check(true, checks, "testExceptionAggregation"));, +                        () -> BootstrapCheck.check(true, Collections.singletonList(check), "testHeapSizeCheck"));, +        BootstrapCheck.check(true, Collections.singletonList(check), "testHeapSizeCheck");, +        BootstrapCheck.check(true, Collections.singletonList(check), "testHeapSizeCheck");, +                        () -> BootstrapCheck.check(true, Collections.singletonList(check), "testFileDescriptorLimits"));, +        BootstrapCheck.check(true, Collections.singletonList(check), "testFileDescriptorLimits");, +        BootstrapCheck.check(true, Collections.singletonList(check), "testFileDescriptorLimits");, +                BootstrapCheck.check(true, Collections.singletonList(check), "testFileDescriptorLimitsThrowsOnInvalidLimit");, +                () -> BootstrapCheck.check(true, Collections.singletonList(check), "testMaxNumberOfThreadsCheck"));, +        BootstrapCheck.check(true, Collections.singletonList(check), "testMaxNumberOfThreadsCheck");, +        BootstrapCheck.check(true, Collections.singletonList(check), "testMaxNumberOfThreadsCheck");, +                () -> BootstrapCheck.check(true, Collections.singletonList(check), "testMaxSizeVirtualMemory"));, +        BootstrapCheck.check(true, Collections.singletonList(check), "testMaxSizeVirtualMemory");, +        BootstrapCheck.check(true, Collections.singletonList(check), "testMaxSizeVirtualMemory");, +                () -> BootstrapCheck.check(true, Collections.singletonList(check), "testMaxMapCountCheck"));, +        BootstrapCheck.check(true, Collections.singletonList(check), "testMaxMapCountCheck");, +        BootstrapCheck.check(true, Collections.singletonList(check), "testMaxMapCountCheck");, +                () -> BootstrapCheck.check(true, Collections.singletonList(check), "testClientJvmCheck"));, +        BootstrapCheck.check(true, Collections.singletonList(check), "testClientJvmCheck");, +            () -> BootstrapCheck.check(true, Collections.singletonList(check), "testUseSerialGCCheck"));, +        BootstrapCheck.check(true, Collections.singletonList(check), "testUseSerialGCCheck");, +        BootstrapCheck.check(true, Collections.singletonList(check), methodName);, +        BootstrapCheck.check(true, Collections.singletonList(check), methodName);, +            () -> BootstrapCheck.check(randomBoolean(), Collections.singletonList(check), methodName));, +            () -> BootstrapCheck.check(randomBoolean(), Collections.singletonList(check), "testAlwaysEnforcedChecks"));]