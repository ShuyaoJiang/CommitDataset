[+++ b/core/src/main/java/org/elasticsearch/node/Node.java, +                getCustomNameResolvers(pluginsService.filterPlugins(DiscoveryPlugin.class)));, +     * Get Custom Name Resolvers list based on a Discovery Plugins list, +    private List<NetworkService.CustomNameResolver> getCustomNameResolvers(List<DiscoveryPlugin> discoveryPlugins) {, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +                getCustomNameResolvers(pluginsService.filterPlugins(DiscoveryPlugin.class)));, +     * Get Custom Name Resolvers list based on a Discovery Plugins list, +    private List<NetworkService.CustomNameResolver> getCustomNameResolvers(List<DiscoveryPlugin> discoveryPlugins) {, +++ b/core/src/main/java/org/elasticsearch/plugins/DiscoveryPlugin.java, +     * This can be handy if you want to provide your own Network interface name like _mycard_, +     * and implement by yourself the logic to get an actual IP address/hostname based on this, +     * name., +     *, +     * For example: you could call a third party service (an API) to resolve _mycard_., +     * Then you could define in elasticsearch.yml settings like:, +     *, +     * <pre>{@code, +     * network.host: _mycard_, +     * }</pre>]