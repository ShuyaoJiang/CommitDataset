[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.client.core.TermVectorsRequest;, +import org.elasticsearch.client.core.TermVectorsResponse;, +import org.elasticsearch.search.aggregations.metrics.MedianAbsoluteDeviationAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.ParsedMedianAbsoluteDeviation;, +import org.elasticsearch.search.aggregations.pipeline.ExtendedStatsBucketPipelineAggregationBuilder;, +import org.elasticsearch.search.aggregations.pipeline.InternalBucketMetricValue;, +import org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue;, +import org.elasticsearch.search.aggregations.pipeline.ParsedBucketMetricValue;, +import org.elasticsearch.search.aggregations.pipeline.ParsedExtendedStatsBucket;, +import org.elasticsearch.search.aggregations.pipeline.ParsedPercentilesBucket;, +import org.elasticsearch.search.aggregations.pipeline.ParsedSimpleValue;, +import org.elasticsearch.search.aggregations.pipeline.ParsedStatsBucket;, +import org.elasticsearch.search.aggregations.pipeline.PercentilesBucketPipelineAggregationBuilder;, +import org.elasticsearch.search.aggregations.pipeline.StatsBucketPipelineAggregationBuilder;, + * High level REST client that wraps an instance of the low level {@link RestClient} and allows to build requests and read responses. The, + * {@link RestClient} instance is internally built based on the provided {@link RestClientBuilder} and it gets closed automatically when, + * closing the {@link RestHighLevelClient} instance that wraps it., + * <p>, + *, + * <p>, + *, + * This class can also be sub-classed to expose additional client methods that make use of endpoints added to Elasticsearch through plugins,, + * or to add support for custom response sections, again added to Elasticsearch through plugins., + * <p>, + *, + * The majority of the methods in this class come in two flavors, a blocking and an asynchronous version (e.g., + * {@link #search(SearchRequest, RequestOptions)} and {@link #searchAsync(SearchRequest, RequestOptions, ActionListener)}, where the later, + * takes an implementation of an {@link ActionListener} as an argument that needs to implement methods that handle successful responses and, + * failure scenarios. Most of the blocking calls can throw an {@link IOException} or an unchecked {@link ElasticsearchException} in the, + * following cases:, + *, + * <ul>, + * <li>an {@link IOException} is usually thrown in case of failing to parse the REST response in the high-level REST client, the request, + * times out or similar cases where there is no response coming back from the Elasticsearch server</li>, + * <li>an {@link ElasticsearchException} is usually thrown in case where the server returns a 4xx or 5xx error code. The high-level client, + * then tries to parse the response body error details into a generic ElasticsearchException and suppresses the original, + * {@link ResponseException}</li>, + * </ul>, + *, +     * @param deleteRequest the request, +     * @param clearScrollRequest the request, +     * Asynchronous request which returns empty {@link Optional}s in the case of 404s or parses entity into an Optional, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +import org.elasticsearch.client.core.TermVectorsRequest;, +import org.elasticsearch.client.core.TermVectorsResponse;, +import org.elasticsearch.search.aggregations.metrics.MedianAbsoluteDeviationAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.ParsedMedianAbsoluteDeviation;, +import org.elasticsearch.search.aggregations.pipeline.ExtendedStatsBucketPipelineAggregationBuilder;, +import org.elasticsearch.search.aggregations.pipeline.InternalBucketMetricValue;, +import org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue;, +import org.elasticsearch.search.aggregations.pipeline.ParsedBucketMetricValue;, +import org.elasticsearch.search.aggregations.pipeline.ParsedExtendedStatsBucket;, +import org.elasticsearch.search.aggregations.pipeline.ParsedPercentilesBucket;, +import org.elasticsearch.search.aggregations.pipeline.ParsedSimpleValue;, +import org.elasticsearch.search.aggregations.pipeline.ParsedStatsBucket;, +import org.elasticsearch.search.aggregations.pipeline.PercentilesBucketPipelineAggregationBuilder;, +import org.elasticsearch.search.aggregations.pipeline.StatsBucketPipelineAggregationBuilder;, + * High level REST client that wraps an instance of the low level {@link RestClient} and allows to build requests and read responses. The, + * {@link RestClient} instance is internally built based on the provided {@link RestClientBuilder} and it gets closed automatically when, + * closing the {@link RestHighLevelClient} instance that wraps it., + * <p>, + *, + * <p>, + *, + * This class can also be sub-classed to expose additional client methods that make use of endpoints added to Elasticsearch through plugins,, + * or to add support for custom response sections, again added to Elasticsearch through plugins., + * <p>, + *, + * The majority of the methods in this class come in two flavors, a blocking and an asynchronous version (e.g., + * {@link #search(SearchRequest, RequestOptions)} and {@link #searchAsync(SearchRequest, RequestOptions, ActionListener)}, where the later, + * takes an implementation of an {@link ActionListener} as an argument that needs to implement methods that handle successful responses and, + * failure scenarios. Most of the blocking calls can throw an {@link IOException} or an unchecked {@link ElasticsearchException} in the, + * following cases:, + *, + * <ul>, + * <li>an {@link IOException} is usually thrown in case of failing to parse the REST response in the high-level REST client, the request, + * times out or similar cases where there is no response coming back from the Elasticsearch server</li>, + * <li>an {@link ElasticsearchException} is usually thrown in case where the server returns a 4xx or 5xx error code. The high-level client, + * then tries to parse the response body error details into a generic ElasticsearchException and suppresses the original, + * {@link ResponseException}</li>, + * </ul>, + *, +     * @param deleteRequest the request, +     * @param clearScrollRequest the request, +     * Asynchronous request which returns empty {@link Optional}s in the case of 404s or parses entity into an Optional, +++ b/docs/java-rest/high-level/execution.asciidoc, +Synchronous calls may throw an `IOException` in case of either failing to, +parse the REST response in the high-level REST client, the request times out, +or similar cases where there is no response coming back from the server., +, +In cases where the server returns a `4xx` or `5xx` error code, the high-level, +client tries to parse the response body error details instead and then throws, +a generic `ElasticsearchException` and adds the original `ResponseException` as a, +suppressed exception to it., +, +it failed. Failure scenarios and expected exceptions are the same as in the, +synchronous execution case.]