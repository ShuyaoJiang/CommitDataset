[+++ b/README.asciidoc, +./docs/build_docs.pl --doc elasticsearch-extra/x-pack-elasticsearch/docs/en/index.asciidoc --resource=elasticsearch/docs --chunk 1, +++ b/README.asciidoc, +./docs/build_docs.pl --doc elasticsearch-extra/x-pack-elasticsearch/docs/en/index.asciidoc --resource=elasticsearch/docs --chunk 1, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/README.asciidoc, +./docs/build_docs.pl --doc elasticsearch-extra/x-pack-elasticsearch/docs/en/index.asciidoc --resource=elasticsearch/docs --chunk 1, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/README.asciidoc, +./docs/build_docs.pl --doc elasticsearch-extra/x-pack-elasticsearch/docs/en/index.asciidoc --resource=elasticsearch/docs --chunk 1, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +, +    DEPTH=1, +    if [ -n "$BUILD_METADATA" ]; then, +      IFS=';' read -ra metadata <<< "$BUILD_METADATA", +      for kv in "${metadata[@]}"; do, +        IFS='=' read -ra key_value <<< "$kv", +        if [ "${key_value[0]}" == "git_ref_elasticsearch" ]; then, +          # Force checked out hash if build metadata is set. We use a depth of 100, which, +          # assumes there are no more than 100 commits between head of the branch and, +          # last-good-commit. This is still quite a bit faster than pulling the entire history., +          ES_REF="${key_value[1]}", +          DEPTH=100, +        fi, +      done, +    fi, +    git clone -b $BRANCH "https://github.com/$GH_USER/elasticsearch.git" --depth=$DEPTH, +, +    if [ ! -z $ES_REF ]; then, +      echo " -> using elasticsearch ref from build metadata: $ES_REF", +      git -C elasticsearch checkout $ES_REF, +    else, +      ES_REF="$(git -C elasticsearch rev-parse HEAD)", +    fi, +, +    echo " -> checked out elasticsearch revision: $ES_REF", +# write the ES hash we checked out to build metadata, +mkdir build, +echo "git_ref_elasticsearch=$ES_REF" > build/build_metadata, +, +++ b/README.asciidoc, +./docs/build_docs.pl --doc elasticsearch-extra/x-pack-elasticsearch/docs/en/index.asciidoc --resource=elasticsearch/docs --chunk 1, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +, +    DEPTH=1, +    if [ -n "$BUILD_METADATA" ]; then, +      IFS=';' read -ra metadata <<< "$BUILD_METADATA", +      for kv in "${metadata[@]}"; do, +        IFS='=' read -ra key_value <<< "$kv", +        if [ "${key_value[0]}" == "git_ref_elasticsearch" ]; then, +          # Force checked out hash if build metadata is set. We use a depth of 100, which, +          # assumes there are no more than 100 commits between head of the branch and, +          # last-good-commit. This is still quite a bit faster than pulling the entire history., +          ES_REF="${key_value[1]}", +          DEPTH=100, +        fi, +      done, +    fi, +    git clone -b $BRANCH "https://github.com/$GH_USER/elasticsearch.git" --depth=$DEPTH, +, +    if [ ! -z $ES_REF ]; then, +      echo " -> using elasticsearch ref from build metadata: $ES_REF", +      git -C elasticsearch checkout $ES_REF, +    else, +      ES_REF="$(git -C elasticsearch rev-parse HEAD)", +    fi, +, +    echo " -> checked out elasticsearch revision: $ES_REF", +# write the ES hash we checked out to build metadata, +mkdir build, +echo "git_ref_elasticsearch=$ES_REF" > build/build_metadata, +, +++ b/docs/en/index.asciidoc, +++ b/README.asciidoc, +./docs/build_docs.pl --doc elasticsearch-extra/x-pack-elasticsearch/docs/en/index.asciidoc --resource=elasticsearch/docs --chunk 1, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +, +    DEPTH=1, +    if [ -n "$BUILD_METADATA" ]; then, +      IFS=';' read -ra metadata <<< "$BUILD_METADATA", +      for kv in "${metadata[@]}"; do, +        IFS='=' read -ra key_value <<< "$kv", +        if [ "${key_value[0]}" == "git_ref_elasticsearch" ]; then, +          # Force checked out hash if build metadata is set. We use a depth of 100, which, +          # assumes there are no more than 100 commits between head of the branch and]