[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.gradle.api.JavaVersion, +            // forbidden apis doesn't support Java 11, so stop at 10, +            String targetMajorVersion = (project.compilerJavaVersion.compareTo(JavaVersion.VERSION_1_10) > 0 ?, +                    JavaVersion.VERSION_1_10 :, +                    project.compilerJavaVersion).getMajorVersion(), +            targetCompatibility = Integer.parseInt(targetMajorVersion) >= 9 ?targetMajorVersion : "1.${targetMajorVersion}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.gradle.api.JavaVersion, +            // forbidden apis doesn't support Java 11, so stop at 10, +            String targetMajorVersion = (project.compilerJavaVersion.compareTo(JavaVersion.VERSION_1_10) > 0 ?, +                    JavaVersion.VERSION_1_10 :, +                    project.compilerJavaVersion).getMajorVersion(), +            targetCompatibility = Integer.parseInt(targetMajorVersion) >= 9 ?targetMajorVersion : "1.${targetMajorVersion}", +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/InitializerTests.java, +        assertEquals(Integer.valueOf(2), objects[0]);, +        assertEquals(Integer.valueOf(2), list.get(0));, +        assertEquals(Integer.valueOf(7), map.get(5));, +        assertEquals(Integer.valueOf(14), map.get(-1));, +        assertEquals(Integer.valueOf(5), map.get(6));, +        assertEquals(Integer.valueOf(2), map.get(-1));, +        assertEquals(Integer.valueOf(3), map.get(3));, +        assertEquals(Integer.valueOf(5), map.get(6));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.gradle.api.JavaVersion, +            // forbidden apis doesn't support Java 11, so stop at 10, +            String targetMajorVersion = (project.compilerJavaVersion.compareTo(JavaVersion.VERSION_1_10) > 0 ?, +                    JavaVersion.VERSION_1_10 :, +                    project.compilerJavaVersion).getMajorVersion(), +            targetCompatibility = Integer.parseInt(targetMajorVersion) >= 9 ?targetMajorVersion : "1.${targetMajorVersion}", +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/InitializerTests.java, +        assertEquals(Integer.valueOf(2), objects[0]);, +        assertEquals(Integer.valueOf(2), list.get(0));, +        assertEquals(Integer.valueOf(7), map.get(5));, +        assertEquals(Integer.valueOf(14), map.get(-1));, +        assertEquals(Integer.valueOf(5), map.get(6));, +        assertEquals(Integer.valueOf(2), map.get(-1));, +        assertEquals(Integer.valueOf(3), map.get(3));, +        assertEquals(Integer.valueOf(5), map.get(6));, +++ b/server/src/main/java/org/elasticsearch/common/inject/matcher/Matchers.java, +import org.elasticsearch.common.SuppressForbidden;, +, +        @SuppressForbidden(reason = "ClassLoader.getDefinedPackage not available yet"), +            // TODO minJava >= 9 : use ClassLoader.getDefinedPackage and remove @SuppressForbidden, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.gradle.api.JavaVersion, +            // forbidden apis doesn't support Java 11, so stop at 10, +            String targetMajorVersion = (project.compilerJavaVersion.compareTo(JavaVersion.VERSION_1_10) > 0 ?, +                    JavaVersion.VERSION_1_10 :, +                    project.compilerJavaVersion).getMajorVersion(), +            targetCompatibility = Integer.parseInt(targetMajorVersion) >= 9 ?targetMajorVersion : "1.${targetMajorVersion}", +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/InitializerTests.java, +        assertEquals(Integer.valueOf(2), objects[0]);, +        assertEquals(Integer.valueOf(2), list.get(0));, +        assertEquals(Integer.valueOf(7), map.get(5));, +        assertEquals(Integer.valueOf(14), map.get(-1));, +        assertEquals(Integer.valueOf(5), map.get(6));, +        assertEquals(Integer.valueOf(2), map.get(-1));, +        assertEquals(Integer.valueOf(3), map.get(3));, +        assertEquals(Integer.valueOf(5), map.get(6));, +++ b/server/src/main/java/org/elasticsearch/common/inject/matcher/Matchers.java, +import org.elasticsearch.common.SuppressForbidden;, +, +        @SuppressForbidden(reason = "ClassLoader.getDefinedPackage not available yet"), +            // TODO minJava >= 9 : use ClassLoader.getDefinedPackage and remove @SuppressForbidden, +++ b/server/src/test/java/org/elasticsearch/common/unit/FuzzinessTests.java, +                    value = Float.valueOf(floatRep += intValue);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.gradle.api.JavaVersion, +            // forbidden apis doesn't support Java 11, so stop at 10, +            String targetMajorVersion = (project.compilerJavaVersion.compareTo(JavaVersion.VERSION_1_10) > 0 ?, +                    JavaVersion.VERSION_1_10 :, +                    project.compilerJavaVersion).getMajorVersion(), +            targetCompatibility = Integer.parseInt(targetMajorVersion) >= 9 ?targetMajorVersion : "1.${targetMajorVersion}", +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/InitializerTests.java, +        assertEquals(Integer.valueOf(2), objects[0]);, +        assertEquals(Integer.valueOf(2), list.get(0));, +        assertEquals(Integer.valueOf(7), map.get(5));, +        assertEquals(Integer.valueOf(14), map.get(-1));, +        assertEquals(Integer.valueOf(5), map.get(6));, +        assertEquals(Integer.valueOf(2), map.get(-1));, +        assertEquals(Integer.valueOf(3), map.get(3));, +        assertEquals(Integer.valueOf(5), map.get(6));, +++ b/server/src/main/java/org/elasticsearch/common/inject/matcher/Matchers.java, +import org.elasticsearch.common.SuppressForbidden;, +, +        @SuppressForbidden(reason = "ClassLoader.getDefinedPackage not available yet"), +            // TODO minJava >= 9 : use ClassLoader.getDefinedPackage and remove @SuppressForbidden, +++ b/server/src/test/java/org/elasticsearch/common/unit/FuzzinessTests.java, +                    value = Float.valueOf(floatRep += intValue);, +++ b/server/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java, +        final Integer one = Integer.valueOf(1);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.gradle.api.JavaVersion, +            // forbidden apis doesn't support Java 11, so stop at 10, +            String targetMajorVersion = (project.compilerJavaVersion.compareTo(JavaVersion.VERSION_1_10) > 0 ?, +                    JavaVersion.VERSION_1_10 :, +                    project.compilerJavaVersion).getMajorVersion(), +            targetCompatibility = Integer.parseInt(targetMajorVersion) >= 9 ?targetMajorVersion : "1.${targetMajorVersion}", +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/InitializerTests.java]