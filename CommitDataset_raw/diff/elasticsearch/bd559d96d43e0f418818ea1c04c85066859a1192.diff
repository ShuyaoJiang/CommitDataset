[+++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequest.java, +    private int maxConcurrentSearchRequests = 0;, +, +    /**, +     * Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public int maxConcurrentSearchRequests() {, +        return maxConcurrentSearchRequests;, +    }, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchTemplateRequest maxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        if (maxConcurrentSearchRequests < 1) {, +            throw new IllegalArgumentException("maxConcurrentSearchRequests must be positive");, +        }, +, +        this.maxConcurrentSearchRequests = maxConcurrentSearchRequests;, +        return this;, +    }, +, +        maxConcurrentSearchRequests = in.readVInt();, +        out.writeVInt(maxConcurrentSearchRequests);, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequest.java, +    private int maxConcurrentSearchRequests = 0;, +, +    /**, +     * Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public int maxConcurrentSearchRequests() {, +        return maxConcurrentSearchRequests;, +    }, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchTemplateRequest maxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        if (maxConcurrentSearchRequests < 1) {, +            throw new IllegalArgumentException("maxConcurrentSearchRequests must be positive");, +        }, +, +        this.maxConcurrentSearchRequests = maxConcurrentSearchRequests;, +        return this;, +    }, +, +        maxConcurrentSearchRequests = in.readVInt();, +        out.writeVInt(maxConcurrentSearchRequests);, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequestBuilder.java, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchTemplateRequestBuilder setMaxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        request().maxConcurrentSearchRequests(maxConcurrentSearchRequests);, +        return this;, +    }, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequest.java, +    private int maxConcurrentSearchRequests = 0;, +, +    /**, +     * Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public int maxConcurrentSearchRequests() {, +        return maxConcurrentSearchRequests;, +    }, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchTemplateRequest maxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        if (maxConcurrentSearchRequests < 1) {, +            throw new IllegalArgumentException("maxConcurrentSearchRequests must be positive");, +        }, +, +        this.maxConcurrentSearchRequests = maxConcurrentSearchRequests;, +        return this;, +    }, +, +        maxConcurrentSearchRequests = in.readVInt();, +        out.writeVInt(maxConcurrentSearchRequests);, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequestBuilder.java, +, +    /**, +     * Sets how many search requests specified in this multi search requests are allowed to be ran concurrently., +     */, +    public MultiSearchTemplateRequestBuilder setMaxConcurrentSearchRequests(int maxConcurrentSearchRequests) {, +        request().maxConcurrentSearchRequests(maxConcurrentSearchRequests);, +        return this;, +    }, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestMultiSearchTemplateAction.java, +        if (restRequest.hasParam("max_concurrent_searches")) {, +            multiRequest.maxConcurrentSearchRequests(restRequest.paramAsInt("max_concurrent_searches", 0));, +        }, +, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequest.java, +    private int maxConcurrentSearchRequests = 0;, +, +    /**, +     * Returns the amount of search requests specified in this multi search requests are allowed to be ran concurrently.]