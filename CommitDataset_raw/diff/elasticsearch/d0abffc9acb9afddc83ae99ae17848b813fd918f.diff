[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +import java.util.Collections;, +public final class ClusterInfo {, +    public static final ClusterInfo EMPTY = new ClusterInfo();, +, +    private ClusterInfo() {, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +import java.util.Collections;, +public final class ClusterInfo {, +    public static final ClusterInfo EMPTY = new ClusterInfo();, +, +    private ClusterInfo() {, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfoService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +import java.util.Collections;, +public final class ClusterInfo {, +    public static final ClusterInfo EMPTY = new ClusterInfo();, +, +    private ClusterInfo() {, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfoService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/EmptyClusterInfoService.java, +    public final static EmptyClusterInfoService INSTANCE = new EmptyClusterInfoService();, +        return ClusterInfo.EMPTY;, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +import java.util.Collections;, +public final class ClusterInfo {, +    public static final ClusterInfo EMPTY = new ClusterInfo();, +, +    private ClusterInfo() {, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfoService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/EmptyClusterInfoService.java, +    public final static EmptyClusterInfoService INSTANCE = new EmptyClusterInfoService();, +        return ClusterInfo.EMPTY;, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +    private volatile Map<String, DiskUsage> usages;, +    private volatile Map<String, Long> shardSizes;, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +                    usages = Collections.unmodifiableMap(newUsages);, +                    usages = Collections.unmodifiableMap(newUsages);, +                        usages = Collections.emptyMap();, +                    shardSizes = Collections.unmodifiableMap(newShardSizes);, +                        shardSizes = Collections.emptyMap();, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +import java.util.Collections;, +public final class ClusterInfo {, +    public static final ClusterInfo EMPTY = new ClusterInfo();, +, +    private ClusterInfo() {, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfoService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/EmptyClusterInfoService.java, +    public final static EmptyClusterInfoService INSTANCE = new EmptyClusterInfoService();, +        return ClusterInfo.EMPTY;, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +    private volatile Map<String, DiskUsage> usages;, +    private volatile Map<String, Long> shardSizes;, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +                    usages = Collections.unmodifiableMap(newUsages);, +                    usages = Collections.unmodifiableMap(newUsages);, +                        usages = Collections.emptyMap();, +                    shardSizes = Collections.unmodifiableMap(newShardSizes);, +                        shardSizes = Collections.emptyMap();, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java, +import org.elasticsearch.cluster.EmptyClusterInfoService;, +        this(settings, new NodeSettingsService(settings), EmptyClusterInfoService.INSTANCE, null);, +    public static long sizeOfRelocatingShards(RoutingNode node, ClusterInfo clusterInfo, boolean subtractShardsMovingAway) {, +    static long getShardSize(ShardRouting routing, ClusterInfo clusterInfo) {, +        final long shardSize = getShardSize(shardRouting, allocation.clusterInfo());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +import java.util.Collections;, +public final class ClusterInfo {, +    public static final ClusterInfo EMPTY = new ClusterInfo();, +, +    private ClusterInfo() {, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfoService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/EmptyClusterInfoService.java, +    public final static EmptyClusterInfoService INSTANCE = new EmptyClusterInfoService();, +        return ClusterInfo.EMPTY;, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +    private volatile Map<String, DiskUsage> usages;, +    private volatile Map<String, Long> shardSizes;]