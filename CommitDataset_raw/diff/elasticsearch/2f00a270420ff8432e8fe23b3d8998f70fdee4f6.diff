[+++ b/docs/reference/docs/termvectors.asciidoc, +==== Distributed frequencies coming[2.0], +==== Terms Filtering coming[2.0], +[float], +=== Example 1, +[float], +=== Example 2, +[float], +=== Example 3, +[float], +=== Example 4, +[float], +=== Example 5, +++ b/docs/reference/docs/termvectors.asciidoc, +==== Distributed frequencies coming[2.0], +==== Terms Filtering coming[2.0], +[float], +=== Example 1, +[float], +=== Example 2, +[float], +=== Example 3, +[float], +=== Example 4, +[float], +=== Example 5, +++ b/docs/reference/index.asciidoc, += Reference, +++ b/docs/reference/docs/termvectors.asciidoc, +==== Distributed frequencies coming[2.0], +==== Terms Filtering coming[2.0], +[float], +=== Example 1, +[float], +=== Example 2, +[float], +=== Example 3, +[float], +=== Example 4, +[float], +=== Example 5, +++ b/docs/reference/index.asciidoc, += Reference, +++ b/docs/reference/mapping/types/core-types.asciidoc, +`compress`::, +, +    Set to `true` to compress the stored binary value., +, +`compress_threshold`::, +, +    Compression will only be applied to stored binary fields that are greater, +    than this size. Defaults to `-1`, +, +NOTE: Enabling compression on stored binary fields only makes sense on large, +and highly-compressible values. Otherwise per-field compression is usually not, +worth doing as the space savings do not compensate for the overhead of the, +compression format. Normally, you should not configure any compression and, +just rely on the block compression of stored fields (which is enabled by, +default and can't be disabled)., +, +++ b/docs/reference/docs/termvectors.asciidoc, +==== Distributed frequencies coming[2.0], +==== Terms Filtering coming[2.0], +[float], +=== Example 1, +[float], +=== Example 2, +[float], +=== Example 3, +[float], +=== Example 4, +[float], +=== Example 5, +++ b/docs/reference/index.asciidoc, += Reference, +++ b/docs/reference/mapping/types/core-types.asciidoc, +`compress`::, +, +    Set to `true` to compress the stored binary value., +, +`compress_threshold`::, +, +    Compression will only be applied to stored binary fields that are greater, +    than this size. Defaults to `-1`, +, +NOTE: Enabling compression on stored binary fields only makes sense on large, +and highly-compressible values. Otherwise per-field compression is usually not, +worth doing as the space savings do not compensate for the overhead of the, +compression format. Normally, you should not configure any compression and, +just rely on the block compression of stored fields (which is enabled by, +default and can't be disabled)., +, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +++ b/docs/reference/docs/termvectors.asciidoc, +==== Distributed frequencies coming[2.0], +==== Terms Filtering coming[2.0], +[float], +=== Example 1, +[float], +=== Example 2]