[+++ b/modules/transport-netty4/build.gradle, +test {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +integTestRunner {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +++ b/modules/transport-netty4/build.gradle, +test {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +integTestRunner {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java, +        Netty4Utils.setAvailableProcessors(EsExecutors.PROCESSORS_SETTING.get(settings));, +++ b/modules/transport-netty4/build.gradle, +test {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +integTestRunner {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java, +        Netty4Utils.setAvailableProcessors(EsExecutors.PROCESSORS_SETTING.get(settings));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        Netty4Utils.setAvailableProcessors(EsExecutors.PROCESSORS_SETTING.get(settings));, +++ b/modules/transport-netty4/build.gradle, +test {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +integTestRunner {, +    /*, +     * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each, +     * other if we allow them to set the number of available processors as it's set-once in Netty., +     */, +    systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java, +        Netty4Utils.setAvailableProcessors(EsExecutors.PROCESSORS_SETTING.get(settings));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java, +        Netty4Utils.setAvailableProcessors(EsExecutors.PROCESSORS_SETTING.get(settings));, +++ b/modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Utils.java, +import io.netty.util.NettyRuntime;, +import org.elasticsearch.common.Booleans;, +import java.util.Locale;, +import java.util.concurrent.atomic.AtomicBoolean;, +    private static AtomicBoolean isAvailableProcessorsSet = new AtomicBoolean();, +, +    /**, +     * Set the number of available processors that Netty uses for sizing various resources (e.g., thread pools)., +     *, +     * @param availableProcessors the number of available processors, +     * @throws IllegalStateException if available processors was set previously and the specified value does not match the already-set value, +     */, +    public static void setAvailableProcessors(final int availableProcessors) {, +        // we set this to false in tests to avoid tests that randomly set processors from stepping on each other, +        final boolean set = Booleans.parseBoolean(System.getProperty("es.set.netty.runtime.available.processors", "true"));, +        if (!set) {, +            return;, +        }, +, +        /*, +         * This can be invoked twice, once from Netty4Transport and another time from Netty4HttpServerTransport; however,]