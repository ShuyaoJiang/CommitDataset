[+++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        HasParentFilter parentFilter = HasParentFilter.create(executionType, query, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        HasParentFilter parentFilter = HasParentFilter.create(executionType, query, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            ParentQuery parentQuery = new ParentQuery(searchContext, innerQuery, parentType, childTypes, childFilter);, +            HasParentFilter hasParentFilter = HasParentFilter.create(executionType, innerQuery, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        HasParentFilter parentFilter = HasParentFilter.create(executionType, query, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            ParentQuery parentQuery = new ParentQuery(searchContext, innerQuery, parentType, childTypes, childFilter);, +            HasParentFilter hasParentFilter = HasParentFilter.create(executionType, innerQuery, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        HasParentFilter parentFilter = HasParentFilter.create(executionType, query, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            ParentQuery parentQuery = new ParentQuery(searchContext, innerQuery, parentType, childTypes, childFilter);, +            HasParentFilter hasParentFilter = HasParentFilter.create(executionType, innerQuery, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +    public ChildrenQuery(SearchContext searchContext, String parentType, String childType, Filter parentFilter, Query childQuery, ScoreType scoreType) {, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        HasParentFilter parentFilter = HasParentFilter.create(executionType, query, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            ParentQuery parentQuery = new ParentQuery(searchContext, innerQuery, parentType, childTypes, childFilter);, +            HasParentFilter hasParentFilter = HasParentFilter.create(executionType, innerQuery, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +    public ChildrenQuery(SearchContext searchContext, String parentType, String childType, Filter parentFilter, Query childQuery, ScoreType scoreType) {, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +    protected HasChildFilter(Query childQuery, String parentType, String childType, SearchContext searchContext) {, +    public static HasChildFilter create(Query childQuery, String parentType, String childType, SearchContext searchContext, String executionType) {, +            return new Bitset(childQuery, parentType, childType, searchContext);, +            return new Uid(childQuery, parentType, childType, searchContext);, +        public Bitset(Query childQuery, String parentType, String childType, SearchContext searchContext) {, +            super(childQuery, parentType, childType, searchContext);, +        Uid(Query childQuery, String parentType, String childType, SearchContext searchContext) {, +            super(childQuery, parentType, childType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        HasChildFilter childFilter = HasChildFilter.create(query, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            ChildrenQuery childrenQuery = new ChildrenQuery(searchContext, parentType, childType, parentFilter, innerQuery, scoreType);, +            HasChildFilter hasChildFilter = HasChildFilter.create(innerQuery, parentType, childType, searchContext, executionType);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        HasParentFilter parentFilter = HasParentFilter.create(executionType, query, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            ParentQuery parentQuery = new ParentQuery(searchContext, innerQuery, parentType, childTypes, childFilter);, +            HasParentFilter hasParentFilter = HasParentFilter.create(executionType, innerQuery, parentType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +    public ChildrenQuery(SearchContext searchContext, String parentType, String childType, Filter parentFilter, Query childQuery, ScoreType scoreType) {, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +    protected HasChildFilter(Query childQuery, String parentType, String childType, SearchContext searchContext) {, +    public static HasChildFilter create(Query childQuery, String parentType, String childType, SearchContext searchContext, String executionType) {, +            return new Bitset(childQuery, parentType, childType, searchContext);, +            return new Uid(childQuery, parentType, childType, searchContext);, +        public Bitset(Query childQuery, String parentType, String childType, SearchContext searchContext) {, +            super(childQuery, parentType, childType, searchContext);, +        Uid(Query childQuery, String parentType, String childType, SearchContext searchContext) {, +            super(childQuery, parentType, childType, searchContext);, +++ b/src/main/java/org/elasticsearch/index/search/child/HasParentFilter.java, +    HasParentFilter(Query parentQuery, String parentType, SearchContext context) {, +        sb.append("parent_filter[").append(parentType).append("](").append(parentQuery).append(')');, +    public static HasParentFilter create(String executionType, Query query, String parentType, SearchContext context) {]