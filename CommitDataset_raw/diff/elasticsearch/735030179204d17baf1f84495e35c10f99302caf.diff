[+++ b/src/main/java/org/elasticsearch/shield/User.java, +                throw new IllegalStateException("invalid system user");, +++ b/src/main/java/org/elasticsearch/shield/User.java, +                throw new IllegalStateException("invalid system user");, +++ b/src/main/java/org/elasticsearch/shield/action/ShieldActionFilter.java, +import static org.elasticsearch.shield.support.Exceptions.authorizationError;, +, +            throw authorizationError("invalid request. {}", e.getMessage());, +++ b/src/main/java/org/elasticsearch/shield/User.java, +                throw new IllegalStateException("invalid system user");, +++ b/src/main/java/org/elasticsearch/shield/action/ShieldActionFilter.java, +import static org.elasticsearch.shield.support.Exceptions.authorizationError;, +, +            throw authorizationError("invalid request. {}", e.getMessage());, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/shield/User.java, +                throw new IllegalStateException("invalid system user");, +++ b/src/main/java/org/elasticsearch/shield/action/ShieldActionFilter.java, +import static org.elasticsearch.shield.support.Exceptions.authorizationError;, +, +            throw authorizationError("invalid request. {}", e.getMessage());, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/shield/authc/AuthenticationService.java, +import org.elasticsearch.ElasticsearchSecurityException;, +     * @throws ElasticsearchSecurityException   If no user was associated with the request or if the associated, +     *                                          user credentials were found to be invalid, +    User authenticate(RestRequest request) throws ElasticsearchSecurityException;, +     * @throws ElasticsearchSecurityException   If the associated user credentials were found to be invalid or in the, +     *                                          case where there was no user associated with the request, if the defautl, + *                                              token could not be authenticated., +++ b/src/main/java/org/elasticsearch/shield/User.java, +                throw new IllegalStateException("invalid system user");, +++ b/src/main/java/org/elasticsearch/shield/action/ShieldActionFilter.java, +import static org.elasticsearch.shield.support.Exceptions.authorizationError;, +, +            throw authorizationError("invalid request. {}", e.getMessage());, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/shield/authc/AuthenticationService.java, +import org.elasticsearch.ElasticsearchSecurityException;, +     * @throws ElasticsearchSecurityException   If no user was associated with the request or if the associated, +     *                                          user credentials were found to be invalid, +    User authenticate(RestRequest request) throws ElasticsearchSecurityException;, +     * @throws ElasticsearchSecurityException   If the associated user credentials were found to be invalid or in the, +     *                                          case where there was no user associated with the request, if the defautl, + *                                              token could not be authenticated., +++ b/src/main/java/org/elasticsearch/shield/authc/InternalAuthenticationService.java, +import org.elasticsearch.ElasticsearchSecurityException;, +import static org.elasticsearch.shield.support.Exceptions.authenticationError;, +, +    public User authenticate(RestRequest request) throws ElasticsearchSecurityException {, +                logger.warn("failed to extract token from request: {}", e.getMessage());, +            if (e instanceof ElasticsearchSecurityException) {, +                throw (ElasticsearchSecurityException) e;, +            throw authenticationError("error attempting to authenticate request", e);, +            throw authenticationError("missing authentication token for REST request [{}]", request.uri());, +            if (e instanceof ElasticsearchSecurityException) {, +                throw (ElasticsearchSecurityException) e;, +            throw authenticationError("error attempting to authenticate request", e);, +            throw authenticationError("unable to authenticate user [{}] for REST request [{}]", token.principal(), request.uri());, +            throw authenticationError("could not read authenticated user", ioe);, +     * If none of the configured realms successfully authenticates the request, an {@link ElasticsearchSecurityException}, +     * will be thrown., +     * @throws ElasticsearchSecurityException   If none of the configured realms successfully authenticated the, +    User authenticateWithRealms(String action, TransportMessage<?> message, User fallbackUser) throws ElasticsearchSecurityException {, +            if (e instanceof ElasticsearchSecurityException) {, +            throw authenticationError("error attempting to authenticate request", e);, +            throw authenticationError("missing authentication token for action [{}]", action);, +            if (e instanceof ElasticsearchSecurityException) {, +                throw (ElasticsearchSecurityException) e;, +            throw authenticationError("error attempting to authenticate request", e);, +            throw authenticationError("unable to authenticate user [{}] for action [{}]", token.principal(), action);, +    User authenticate(TransportMessage<?> message, AuthenticationToken token, String action) throws ElasticsearchSecurityException {, +    User authenticate(RestRequest request, AuthenticationToken token) throws ElasticsearchSecurityException {, +    AuthenticationToken token(RestRequest request) throws ElasticsearchSecurityException {, +++ b/src/main/java/org/elasticsearch/shield/User.java, +                throw new IllegalStateException("invalid system user");, +++ b/src/main/java/org/elasticsearch/shield/action/ShieldActionFilter.java, +import static org.elasticsearch.shield.support.Exceptions.authorizationError;, +, +            throw authorizationError("invalid request. {}", e.getMessage());, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/shield/authc/AuthenticationService.java, +import org.elasticsearch.ElasticsearchSecurityException;, +     * @throws ElasticsearchSecurityException   If no user was associated with the request or if the associated, +     *                                          user credentials were found to be invalid, +    User authenticate(RestRequest request) throws ElasticsearchSecurityException;, +     * @throws ElasticsearchSecurityException   If the associated user credentials were found to be invalid or in the, +     *                                          case where there was no user associated with the request, if the defautl, + *                                              token could not be authenticated., +++ b/src/main/java/org/elasticsearch/shield/authc/InternalAuthenticationService.java, +import org.elasticsearch.ElasticsearchSecurityException;, +import static org.elasticsearch.shield.support.Exceptions.authenticationError;, +, +    public User authenticate(RestRequest request) throws ElasticsearchSecurityException {, +                logger.warn("failed to extract token from request: {}", e.getMessage());, +            if (e instanceof ElasticsearchSecurityException) {, +                throw (ElasticsearchSecurityException) e;, +            throw authenticationError("error attempting to authenticate request", e);, +            throw authenticationError("missing authentication token for REST request [{}]", request.uri());, +            if (e instanceof ElasticsearchSecurityException) {]