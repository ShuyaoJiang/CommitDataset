[+++ b/buildSrc/build.gradle, +// TODO: remove this when upgrading to a version that supports ProgressLogger, +// gradle 2.14 made internal apis unavailable to plugins, and gradle considered, +// ProgressLogger to be an internal api. Until this is made available again,, +// we can't upgrade without losing our nice progress logging, +// NOTE that this check duplicates that in BuildPlugin, but we need to check, +// early here before trying to compile the broken classes in buildSrc, +if (GradleVersion.current() != GradleVersion.version('2.13')) {, +  throw new GradleException('Gradle 2.13 is required to build elasticsearch'), +}, +, +++ b/buildSrc/build.gradle, +// TODO: remove this when upgrading to a version that supports ProgressLogger, +// gradle 2.14 made internal apis unavailable to plugins, and gradle considered, +// ProgressLogger to be an internal api. Until this is made available again,, +// we can't upgrade without losing our nice progress logging, +// NOTE that this check duplicates that in BuildPlugin, but we need to check, +// early here before trying to compile the broken classes in buildSrc, +if (GradleVersion.current() != GradleVersion.version('2.13')) {, +  throw new GradleException('Gradle 2.13 is required to build elasticsearch'), +}, +, +++ b/core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java, +            final Future<Void> recoveryFuture = shards.asyncRecoverReplica(replica, new BiFunction<IndexShard, DiscoveryNode, RecoveryTarget>() {, +        public void failShard(ShardRouting replica, ShardRouting primary, String message, Throwable throwable, Runnable onSuccess, Consumer<Throwable> onPrimaryDemoted, Consumer<Throwable> onIgnoredFailure) {]