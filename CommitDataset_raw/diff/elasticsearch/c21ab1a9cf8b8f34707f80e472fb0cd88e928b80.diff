[+++ b/src/main/java/org/elasticsearch/action/ShardOperationFailedException.java, +import org.elasticsearch.rest.RestStatus;, +, +    /**, +     * The status of the failure., +     */, +    RestStatus status();, +++ b/src/main/java/org/elasticsearch/action/ShardOperationFailedException.java, +import org.elasticsearch.rest.RestStatus;, +, +    /**, +     * The status of the failure., +     */, +    RestStatus status();, +++ b/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryResponse.java, +import org.elasticsearch.rest.RestStatus;, +    public RestStatus status() {, +        RestStatus status = RestStatus.OK;, +        for (IndexDeleteByQueryResponse indexResponse : indices.values()) {, +            if (indexResponse.getFailedShards() > 0) {, +                RestStatus indexStatus = indexResponse.getFailures()[0].status();, +                if (indexResponse.getFailures().length > 1) {, +                    for (int i = 1; i < indexResponse.getFailures().length; i++) {, +                        if (indexResponse.getFailures()[i].status().getStatus() >= 500) {, +                            indexStatus = indexResponse.getFailures()[i].status();, +                        }, +                    }, +                }, +                if (status.getStatus() < indexStatus.getStatus()) {, +                    status = indexStatus;, +                }, +            }, +        }, +        return status;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/ShardOperationFailedException.java, +import org.elasticsearch.rest.RestStatus;, +, +    /**, +     * The status of the failure., +     */, +    RestStatus status();, +++ b/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryResponse.java, +import org.elasticsearch.rest.RestStatus;, +    public RestStatus status() {, +        RestStatus status = RestStatus.OK;, +        for (IndexDeleteByQueryResponse indexResponse : indices.values()) {, +            if (indexResponse.getFailedShards() > 0) {, +                RestStatus indexStatus = indexResponse.getFailures()[0].status();, +                if (indexResponse.getFailures().length > 1) {, +                    for (int i = 1; i < indexResponse.getFailures().length; i++) {, +                        if (indexResponse.getFailures()[i].status().getStatus() >= 500) {, +                            indexStatus = indexResponse.getFailures()[i].status();, +                        }, +                    }, +                }, +                if (status.getStatus() < indexStatus.getStatus()) {, +                    status = indexStatus;, +                }, +            }, +        }, +        return status;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryResponse.java, +import org.elasticsearch.action.ShardOperationFailedException;, +import org.elasticsearch.action.support.DefaultShardOperationFailedException;, +import java.util.List;, +    private ShardOperationFailedException[] failures;, +    IndexDeleteByQueryResponse(String index, int successfulShards, int failedShards, List<ShardOperationFailedException> failures) {, +        if (failures == null || failures.isEmpty()) {, +            this.failures = new DefaultShardOperationFailedException[0];, +        } else {, +            this.failures = failures.toArray(new ShardOperationFailedException[failures.size()]);, +        }, +    public ShardOperationFailedException[] getFailures() {, +        return failures;, +    }, +, +        int size = in.readVInt();, +        failures = new ShardOperationFailedException[size];, +        for (int i = 0; i < size; i++) {, +            failures[i] = DefaultShardOperationFailedException.readShardOperationFailed(in);, +        }, +        out.writeVInt(failures.length);, +        for (ShardOperationFailedException failure : failures) {, +            failure.writeTo(out);, +        }, +++ b/src/main/java/org/elasticsearch/action/ShardOperationFailedException.java, +import org.elasticsearch.rest.RestStatus;, +, +    /**, +     * The status of the failure., +     */, +    RestStatus status();, +++ b/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryResponse.java, +import org.elasticsearch.rest.RestStatus;, +    public RestStatus status() {, +        RestStatus status = RestStatus.OK;]