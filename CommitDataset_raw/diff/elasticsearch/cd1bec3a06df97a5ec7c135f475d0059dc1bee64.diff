[+++ b/qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilBootstrapChecksTests.java, +import org.elasticsearch.test.AbstractBootstrapCheckTestCase;, +public class EvilBootstrapChecksTests extends AbstractBootstrapCheckTestCase {, +                () -> BootstrapChecks.check(emptyContext, false, checks, logger));, +        BootstrapChecks.check(emptyContext, false, emptyList(), logger);, +                () -> BootstrapChecks.check(emptyContext, enforceLimits, emptyList()));, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilBootstrapChecksTests.java, +import org.elasticsearch.test.AbstractBootstrapCheckTestCase;, +public class EvilBootstrapChecksTests extends AbstractBootstrapCheckTestCase {, +                () -> BootstrapChecks.check(emptyContext, false, checks, logger));, +        BootstrapChecks.check(emptyContext, false, emptyList(), logger);, +                () -> BootstrapChecks.check(emptyContext, enforceLimits, emptyList()));, +++ b/server/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java, +                enforceLimits(boundTransportAddress, DiscoveryModule.DISCOVERY_TYPE_SETTING.get(context.settings())),, +            if (BootstrapSettings.MEMORY_LOCK_SETTING.get(context.settings()) && !isMemoryLocked()) {, +            if (IndexModule.NODE_STORE_ALLOW_MMAPFS.get(context.settings())) {, +            if (BootstrapSettings.SYSTEM_CALL_FILTER_SETTING.get(context.settings()) && !isSystemCallFilterInstalled()) {, +            if (DiscoveryModule.ZEN2_DISCOVERY_TYPE.equals(DiscoveryModule.DISCOVERY_TYPE_SETTING.get(context.settings())) == false) {, +            if (ClusterBootstrapService.discoveryIsConfigured(context.settings())) {, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilBootstrapChecksTests.java, +import org.elasticsearch.test.AbstractBootstrapCheckTestCase;, +public class EvilBootstrapChecksTests extends AbstractBootstrapCheckTestCase {, +                () -> BootstrapChecks.check(emptyContext, false, checks, logger));, +        BootstrapChecks.check(emptyContext, false, emptyList(), logger);, +                () -> BootstrapChecks.check(emptyContext, enforceLimits, emptyList()));, +++ b/server/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java, +                enforceLimits(boundTransportAddress, DiscoveryModule.DISCOVERY_TYPE_SETTING.get(context.settings())),, +            if (BootstrapSettings.MEMORY_LOCK_SETTING.get(context.settings()) && !isMemoryLocked()) {, +            if (IndexModule.NODE_STORE_ALLOW_MMAPFS.get(context.settings())) {, +            if (BootstrapSettings.SYSTEM_CALL_FILTER_SETTING.get(context.settings()) && !isSystemCallFilterInstalled()) {, +            if (DiscoveryModule.ZEN2_DISCOVERY_TYPE.equals(DiscoveryModule.DISCOVERY_TYPE_SETTING.get(context.settings())) == false) {, +            if (ClusterBootstrapService.discoveryIsConfigured(context.settings())) {, +++ b/server/src/main/java/org/elasticsearch/bootstrap/BootstrapContext.java, +import org.elasticsearch.env.Environment;, +     * The node's environment, +    private final Environment environment;, +    /**, +     * The node's local state metadata loaded on startup, +     */, +    private final MetaData metaData;, +, +    public BootstrapContext(Environment environment, MetaData metaData) {, +        this.environment = environment;, +, +    public Environment environment() {, +        return environment;, +    }, +, +    public Settings settings() {, +        return environment.settings();, +    }, +, +    public MetaData metaData() {, +        return metaData;, +    }, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilBootstrapChecksTests.java, +import org.elasticsearch.test.AbstractBootstrapCheckTestCase;, +public class EvilBootstrapChecksTests extends AbstractBootstrapCheckTestCase {, +                () -> BootstrapChecks.check(emptyContext, false, checks, logger));, +        BootstrapChecks.check(emptyContext, false, emptyList(), logger);, +                () -> BootstrapChecks.check(emptyContext, enforceLimits, emptyList()));, +++ b/server/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java, +                enforceLimits(boundTransportAddress, DiscoveryModule.DISCOVERY_TYPE_SETTING.get(context.settings())),, +            if (BootstrapSettings.MEMORY_LOCK_SETTING.get(context.settings()) && !isMemoryLocked()) {, +            if (IndexModule.NODE_STORE_ALLOW_MMAPFS.get(context.settings())) {, +            if (BootstrapSettings.SYSTEM_CALL_FILTER_SETTING.get(context.settings()) && !isSystemCallFilterInstalled()) {, +            if (DiscoveryModule.ZEN2_DISCOVERY_TYPE.equals(DiscoveryModule.DISCOVERY_TYPE_SETTING.get(context.settings())) == false) {, +            if (ClusterBootstrapService.discoveryIsConfigured(context.settings())) {, +++ b/server/src/main/java/org/elasticsearch/bootstrap/BootstrapContext.java, +import org.elasticsearch.env.Environment;, +     * The node's environment, +    private final Environment environment;, +    /**, +     * The node's local state metadata loaded on startup, +     */, +    private final MetaData metaData;, +, +    public BootstrapContext(Environment environment, MetaData metaData) {, +        this.environment = environment;, +, +    public Environment environment() {, +        return environment;, +    }, +, +    public Settings settings() {, +        return environment.settings();, +    }, +, +    public MetaData metaData() {, +        return metaData;, +    }, +++ b/server/src/main/java/org/elasticsearch/node/Node.java, +        validateNodeBeforeAcceptingRequests(new BootstrapContext(environment, onDiskMetadata), transportService.boundAddress(), pluginsService, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilBootstrapChecksTests.java, +import org.elasticsearch.test.AbstractBootstrapCheckTestCase;, +public class EvilBootstrapChecksTests extends AbstractBootstrapCheckTestCase {, +                () -> BootstrapChecks.check(emptyContext, false, checks, logger));, +        BootstrapChecks.check(emptyContext, false, emptyList(), logger);, +                () -> BootstrapChecks.check(emptyContext, enforceLimits, emptyList()));, +++ b/server/src/main/java/org/elasticsearch/bootstrap/BootstrapChecks.java]