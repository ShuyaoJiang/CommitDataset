[+++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +++ b/core/src/test/java/org/elasticsearch/index/store/CorruptedTranslogIT.java, +import org.elasticsearch.index.MockEngineFactoryPlugin;, +        return pluginList(MockTransportService.TestPlugin.class, MockEngineFactoryPlugin.class);, +                .put(MockEngineSupport.DISABLE_FLUSH_ON_CLOSE.getKey(), true) // never flush - always recover from translog, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +++ b/core/src/test/java/org/elasticsearch/index/store/CorruptedTranslogIT.java, +import org.elasticsearch.index.MockEngineFactoryPlugin;, +        return pluginList(MockTransportService.TestPlugin.class, MockEngineFactoryPlugin.class);, +                .put(MockEngineSupport.DISABLE_FLUSH_ON_CLOSE.getKey(), true) // never flush - always recover from translog, +++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java, +                .put(MockEngineSupport.WRAP_READER_RATIO.getKey(), 1.0d);, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +++ b/core/src/test/java/org/elasticsearch/index/store/CorruptedTranslogIT.java, +import org.elasticsearch.index.MockEngineFactoryPlugin;, +        return pluginList(MockTransportService.TestPlugin.class, MockEngineFactoryPlugin.class);, +                .put(MockEngineSupport.DISABLE_FLUSH_ON_CLOSE.getKey(), true) // never flush - always recover from translog, +++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java, +                .put(MockEngineSupport.WRAP_READER_RATIO.getKey(), 1.0d);, +++ b/core/src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsIT.java, +            .put(MockEngineSupport.WRAP_READER_RATIO.getKey(), 1.0d);, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +++ b/core/src/test/java/org/elasticsearch/index/store/CorruptedTranslogIT.java, +import org.elasticsearch.index.MockEngineFactoryPlugin;, +        return pluginList(MockTransportService.TestPlugin.class, MockEngineFactoryPlugin.class);, +                .put(MockEngineSupport.DISABLE_FLUSH_ON_CLOSE.getKey(), true) // never flush - always recover from translog, +++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java, +                .put(MockEngineSupport.WRAP_READER_RATIO.getKey(), 1.0d);, +++ b/core/src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsIT.java, +            .put(MockEngineSupport.WRAP_READER_RATIO.getKey(), 1.0d);, +++ b/test/framework/src/main/java/org/elasticsearch/test/engine/MockEngineSupport.java, +import org.elasticsearch.common.settings.Setting;, +    /**, +     * Allows tests to wrap an index reader randomly with a given ratio. This is disabled by default ie. <tt>0.0d</tt> since reader wrapping is insanely, +     * slow if {@link org.apache.lucene.index.AssertingDirectoryReader} is used., +     */, +    public static final Setting<Double> WRAP_READER_RATIO = Setting.doubleSetting("index.engine.mock.random.wrap_reader_ratio", 0.0d, 0.0d, false, Setting.Scope.INDEX);, +    /**, +     * Allows tests to prevent an engine from being flushed on close ie. to test translog recovery..., +     */, +    public static final Setting<Boolean> DISABLE_FLUSH_ON_CLOSE = Setting.boolSetting("index.mock.disable_flush_on_close", false, false, Setting.Scope.INDEX);, +, +    private final boolean disableFlushOnClose;, +, +    public boolean isFlushOnCloseDisabled() {, +        return disableFlushOnClose;, +    }, +, +        final double ratio = WRAP_READER_RATIO.get(settings);, +        this.disableFlushOnClose = DISABLE_FLUSH_ON_CLOSE.get(settings);, +    public CloseAction flushOrClose(CloseAction originalAction) throws IOException {, +            if (mockContext.random.nextBoolean()) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +                    if (engine != null && flushEngine) {, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +++ b/core/src/test/java/org/elasticsearch/index/store/CorruptedTranslogIT.java, +import org.elasticsearch.index.MockEngineFactoryPlugin;, +        return pluginList(MockTransportService.TestPlugin.class, MockEngineFactoryPlugin.class);, +                .put(MockEngineSupport.DISABLE_FLUSH_ON_CLOSE.getKey(), true) // never flush - always recover from translog, +++ b/core/src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerIT.java, +                .put(MockEngineSupport.WRAP_READER_RATIO.getKey(), 1.0d);, +++ b/core/src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsIT.java, +            .put(MockEngineSupport.WRAP_READER_RATIO.getKey(), 1.0d);, +++ b/test/framework/src/main/java/org/elasticsearch/test/engine/MockEngineSupport.java, +import org.elasticsearch.common.settings.Setting;, +    /**, +     * Allows tests to wrap an index reader randomly with a given ratio. This is disabled by default ie. <tt>0.0d</tt> since reader wrapping is insanely, +     * slow if {@link org.apache.lucene.index.AssertingDirectoryReader} is used., +     */, +    public static final Setting<Double> WRAP_READER_RATIO = Setting.doubleSetting("index.engine.mock.random.wrap_reader_ratio", 0.0d, 0.0d, false, Setting.Scope.INDEX);, +    /**, +     * Allows tests to prevent an engine from being flushed on close ie. to test translog recovery..., +     */, +    public static final Setting<Boolean> DISABLE_FLUSH_ON_CLOSE = Setting.boolSetting("index.mock.disable_flush_on_close", false, false, Setting.Scope.INDEX);, +, +    private final boolean disableFlushOnClose;, +, +    public boolean isFlushOnCloseDisabled() {, +        return disableFlushOnClose;]