[+++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksInProgress.java, +    private static final ObjectParser<Builder, Void> PERSISTENT_TASKS_IN_PROGRESS_PARSER = new ObjectParser<>(TYPE, Builder::new);, +    private static final ObjectParser<TaskBuilder<PersistentActionRequest>, Void> PERSISTENT_TASK_IN_PROGRESS_PARSER =, +    private static final NamedObjectParser<PersistentActionRequest, Void> REQUEST_PARSER =, +            (XContentParser p, Void c, String name) -> p.namedObject(PersistentActionRequest.class, name, null);, +    private static final NamedObjectParser<Status, Void> STATUS_PARSER =, +            (XContentParser p, Void c, String name) -> p.namedObject(Status.class, name, null);, +        PERSISTENT_TASK_IN_PROGRESS_PARSER.declareString(TaskBuilder::setAction, new ParseField("action"));, +                (TaskBuilder<PersistentActionRequest> taskBuilder, List<PersistentActionRequest> objects) -> {, +                        throw new IllegalArgumentException("only one action request per task is allowed");, +                    taskBuilder.setRequest(objects.get(0));, +                }, REQUEST_PARSER, new ParseField("request"));, +, +        PERSISTENT_TASK_IN_PROGRESS_PARSER.declareNamedObjects(, +                (TaskBuilder<PersistentActionRequest> taskBuilder, List<Status> objects) -> {, +                    if (objects.size() != 1) {, +                        throw new IllegalArgumentException("only one status per task is allowed");, +                    }, +                    taskBuilder.setStatus(objects.get(0));, +                }, STATUS_PARSER, new ParseField("status"));, +, +, +                builder.field("action", action);, +                builder.startObject("request");, +                    builder.field(request.getWriteableName(), request, params);, +                }, +                builder.endObject();, +                    builder.startObject("status");, +                    {, +                        builder.field(status.getWriteableName(), status, params);, +, +++ b/server/src/main/java/org/elasticsearch/persistent/PersistentTasksInProgress.java, +    private static final ObjectParser<Builder, Void> PERSISTENT_TASKS_IN_PROGRESS_PARSER = new ObjectParser<>(TYPE, Builder::new);, +    private static final ObjectParser<TaskBuilder<PersistentActionRequest>, Void> PERSISTENT_TASK_IN_PROGRESS_PARSER =, +    private static final NamedObjectParser<PersistentActionRequest, Void> REQUEST_PARSER =, +            (XContentParser p, Void c, String name) -> p.namedObject(PersistentActionRequest.class, name, null);, +    private static final NamedObjectParser<Status, Void> STATUS_PARSER =, +            (XContentParser p, Void c, String name) -> p.namedObject(Status.class, name, null);, +        PERSISTENT_TASK_IN_PROGRESS_PARSER.declareString(TaskBuilder::setAction, new ParseField("action"));, +                (TaskBuilder<PersistentActionRequest> taskBuilder, List<PersistentActionRequest> objects) -> {, +                        throw new IllegalArgumentException("only one action request per task is allowed");, +                    taskBuilder.setRequest(objects.get(0));, +                }, REQUEST_PARSER, new ParseField("request"));, +, +        PERSISTENT_TASK_IN_PROGRESS_PARSER.declareNamedObjects(, +                (TaskBuilder<PersistentActionRequest> taskBuilder, List<Status> objects) -> {, +                    if (objects.size() != 1) {, +                        throw new IllegalArgumentException("only one status per task is allowed");, +                    }, +                    taskBuilder.setStatus(objects.get(0));, +                }, STATUS_PARSER, new ParseField("status"));, +, +, +                builder.field("action", action);, +                builder.startObject("request");, +                    builder.field(request.getWriteableName(), request, params);, +                }, +                builder.endObject();, +                    builder.startObject("status");, +                    {, +                        builder.field(status.getWriteableName(), status, params);, +, +++ b/server/src/test/java/org/elasticsearch/persistent/PersistentTasksInProgressTests.java, +                new NamedXContentRegistry.Entry(Task.Status.class, new ParseField(Status.NAME), Status::fromXContent)]