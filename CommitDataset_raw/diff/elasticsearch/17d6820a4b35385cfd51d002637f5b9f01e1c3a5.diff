[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        final ClusterState clusterState;, +        if (changed) {, +            clusterState = builder(currentState).metaData(metaData).blocks(blocks).build();, +        } else {, +            clusterState = currentState;, +        }, +, +        /*, +         * Now we try to apply things and if they are invalid we fail. This dry run will validate, parse settings, and trigger deprecation, +         * logging, but will not actually apply them., +         */, +        final Settings settings = clusterState.metaData().settings();, +, +        return clusterState;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        final ClusterState clusterState;, +        if (changed) {, +            clusterState = builder(currentState).metaData(metaData).blocks(blocks).build();, +        } else {, +            clusterState = currentState;, +        }, +, +        /*, +         * Now we try to apply things and if they are invalid we fail. This dry run will validate, parse settings, and trigger deprecation, +         * logging, but will not actually apply them., +         */, +        final Settings settings = clusterState.metaData().settings();, +, +        return clusterState;, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdaterTests.java, +import org.elasticsearch.common.settings.Setting;, +import org.elasticsearch.common.settings.Setting.Property;, +import java.util.Set;, +import java.util.stream.Collectors;, +import java.util.stream.Stream;, +, +    public void testDeprecationLogging() {, +        Setting<String> deprecatedSetting =, +                Setting.simpleString("deprecated.setting", Property.Dynamic, Property.NodeScope, Property.Deprecated);, +        final Settings settings = Settings.builder().put("deprecated.setting", "foo").build();, +        final Set<Setting<?>> settingsSet =, +                Stream.concat(ClusterSettings.BUILT_IN_CLUSTER_SETTINGS.stream(), Stream.of(deprecatedSetting)).collect(Collectors.toSet());, +        final ClusterSettings clusterSettings = new ClusterSettings(settings, settingsSet);, +        clusterSettings.addSettingsUpdateConsumer(deprecatedSetting, s -> {});, +        final SettingsUpdater settingsUpdater = new SettingsUpdater(clusterSettings);, +        final ClusterState clusterState =, +                ClusterState.builder(new ClusterName("foo")).metaData(MetaData.builder().persistentSettings(settings).build()).build();, +, +        final Settings toApplyDebug = Settings.builder().put("logger.org.elasticsearch", "debug").build();, +        final ClusterState afterDebug = settingsUpdater.updateSettings(clusterState, toApplyDebug, Settings.EMPTY);, +        assertSettingDeprecationsAndWarnings(new Setting<?>[] { deprecatedSetting });, +, +        final Settings toApplyUnset = Settings.builder().putNull("logger.org.elasticsearch").build();, +        final ClusterState afterUnset = settingsUpdater.updateSettings(afterDebug, toApplyUnset, Settings.EMPTY);, +        assertSettingDeprecationsAndWarnings(new Setting<?>[] { deprecatedSetting });, +, +        // we also check that if no settings are changed, deprecation logging still occurs, +        settingsUpdater.updateSettings(afterUnset, toApplyUnset, Settings.EMPTY);, +        assertSettingDeprecationsAndWarnings(new Setting<?>[] { deprecatedSetting });, +    }, +]