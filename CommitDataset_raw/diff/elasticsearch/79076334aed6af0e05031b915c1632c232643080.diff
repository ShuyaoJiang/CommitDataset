[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/test/java/org/elasticsearch/indices/settings/UpdateSettingsIT.java, +            client(), +                .admin(), +                .indices(), +                .prepareUpdateSettings("test"), +                .setSettings(Settings.builder().put("index.dummy", "boom")), +                .execute(), +                .actionGet());, +        client(), +            .admin(), +            .indices(), +            .prepareUpdateSettings("test"), +            .setSettings(Settings.builder().put("index.refresh_interval", -1).put("index.translog.flush_threshold_size", "1024b")), +            .execute(), +            .actionGet();, +        client(), +            .admin(), +            .indices(), +            .prepareUpdateSettings("test"), +            .setSettings(Settings.builder().putNull("index.refresh_interval")), +            .execute(), +            .actionGet();, +            client(), +                .admin(), +                .indices(), +                .prepareUpdateSettings("test"), +                    .put("index.fielddata.cache", "none")) // this one can't, +                .execute(), +                .actionGet();, +        client(), +            .admin(), +            .indices(), +            .prepareUpdateSettings("test"), +            .setSettings(Settings.builder().put("index.refresh_interval", -1)) // this one can change, +            .execute(), +            .actionGet();, +        ClusterHealthResponse health =, +            client(), +                .admin(), +                .cluster(), +                .prepareHealth(), +                .setTimeout("30s"), +                .setWaitForEvents(Priority.LANGUID), +                .setWaitForGreenStatus(), +                .execute(), +                .actionGet();, +            client(), +                .admin(), +                .indices(), +                .prepareUpdateSettings("test"), +                .setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 1)), +                .execute(), +                .actionGet();, +        client(), +            .admin(), +            .indices(), +            .prepareUpdateSettings("test"), +                .put("index.fielddata.cache", "none")) // this one can't, +            .execute(), +            .actionGet();, +        // delete is still in cache this should work & set version to 3, +        client().prepareIndex("test", "type", "1").setSource("f", 2).setVersion(2).get();, +        client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put("index.gc_deletes", 0)).get();, +        // delete is should not be in cache, +        assertThrows(client().prepareIndex("test", "type", "1").setSource("f", 3).setVersion(4), VersionConflictEngineException.class);, +            .setSettings(, +                Settings.builder(), +            .setSettings(Settings.builder().put(IndexStore.INDEX_STORE_THROTTLE_TYPE_SETTING.getKey(), "none")), +            if (event.getLevel() == Level.TRACE && event.getLoggerName().endsWith("lucene.iw")) {, +            if (event.getLevel() == Level.INFO, +                && message.contains("updating [index.merge.scheduler.max_thread_count] from [10000] to [1]")) {, +            if (event.getLevel() == Level.INFO, +                && message.contains("updating [index.merge.scheduler.auto_throttle] from [true] to [false]")) {, +                .setSettings(Settings.builder().put(MergeSchedulerConfig.AUTO_THROTTLE_SETTING.getKey(), "false")), +            UpdateSettingsRequestBuilder updateBuilder =, +                client(), +                    .admin(), +                    .indices(), +                    .setSettings(Settings.builder().put(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING.getKey(), "1000"));, +            UpdateSettingsRequestBuilder updateBuilder =, +                client(), +                    .admin(), +                    .indices(), +                    .setSettings(Settings.builder().put(MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING.getKey(), "10"));, +                .setSettings(Settings.builder().put(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING.getKey(), "1")), +]