[+++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +                "max file descriptors [%d] for elasticsearch process likely too low, increase to at least [%d]",, +                "max number of threads [%d] for user [%s] likely too low, increase to at least [%d]",, +                "max size virtual memory [%d] for user [%s] likely too low, increase to [unlimited]",, +                    "max virtual memory areas vm.max_map_count [%d] likely too low, increase to at least [%d]",, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +                "max file descriptors [%d] for elasticsearch process likely too low, increase to at least [%d]",, +                "max number of threads [%d] for user [%s] likely too low, increase to at least [%d]",, +                "max size virtual memory [%d] for user [%s] likely too low, increase to [unlimited]",, +                    "max virtual memory areas vm.max_map_count [%d] likely too low, increase to at least [%d]",, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +                "max file descriptors [%d] for elasticsearch process likely too low, increase to at least [%d]",, +                "max number of threads [%d] for user [%s] likely too low, increase to at least [%d]",, +                "max size virtual memory [%d] for user [%s] likely too low, increase to [unlimited]",, +                    "max virtual memory areas vm.max_map_count [%d] likely too low, increase to at least [%d]",, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();, +        client.admin().cluster().nodesStats(nodesStatsRequest, new LatchedActionListener<>(listener, latch));, +        client.admin().indices().stats(indicesStatsRequest, new LatchedActionListener<>(listener, latch));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +                "max file descriptors [%d] for elasticsearch process likely too low, increase to at least [%d]",, +                "max number of threads [%d] for user [%s] likely too low, increase to at least [%d]",, +                "max size virtual memory [%d] for user [%s] likely too low, increase to [unlimited]",, +                    "max virtual memory areas vm.max_map_count [%d] likely too low, increase to at least [%d]",, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();, +        client.admin().cluster().nodesStats(nodesStatsRequest, new LatchedActionListener<>(listener, latch));, +        client.admin().indices().stats(indicesStatsRequest, new LatchedActionListener<>(listener, latch));, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java, +        final ZenPing zenPing = createZenPing.apply(hostsProvider);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +                "max file descriptors [%d] for elasticsearch process likely too low, increase to at least [%d]",, +                "max number of threads [%d] for user [%s] likely too low, increase to at least [%d]",, +                "max size virtual memory [%d] for user [%s] likely too low, increase to [unlimited]",, +                    "max virtual memory areas vm.max_map_count [%d] likely too low, increase to at least [%d]",, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();, +        client.admin().cluster().nodesStats(nodesStatsRequest, new LatchedActionListener<>(listener, latch));, +        client.admin().indices().stats(indicesStatsRequest, new LatchedActionListener<>(listener, latch));, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java, +        final ZenPing zenPing = createZenPing.apply(hostsProvider);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +    @Inject, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCheck.java, +                "max file descriptors [%d] for elasticsearch process likely too low, increase to at least [%d]",, +                "max number of threads [%d] for user [%s] likely too low, increase to at least [%d]",, +                "max size virtual memory [%d] for user [%s] likely too low, increase to [unlimited]",, +                    "max virtual memory areas vm.max_map_count [%d] likely too low, increase to at least [%d]",, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.elasticsearch.client.node.NodeClient;, +    private final NodeClient client;, +    public InternalClusterInfoService(Settings settings, ClusterService clusterService, ThreadPool threadPool, NodeClient client) {, +        this.client = client;, +        ClusterSettings clusterSettings = clusterService.getClusterSettings();, +        client.admin().cluster().nodesStats(nodesStatsRequest, new LatchedActionListener<>(listener, latch));, +        client.admin().indices().stats(indicesStatsRequest, new LatchedActionListener<>(listener, latch));, +++ b/core/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java, +        final ZenPing zenPing = createZenPing.apply(hostsProvider);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +    @Inject, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +    public static final Set<String> ALLOWED_QUERY_MAPPER_TYPES;, +    /**]