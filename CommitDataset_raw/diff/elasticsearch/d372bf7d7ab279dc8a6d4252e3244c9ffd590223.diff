[+++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryParser.java, +        if (fieldNamesFieldType == null) {, +            // can only happen when no types exist, so no docs exist either, +            return Queries.newMatchNoDocsQuery();, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryParser.java, +        if (fieldNamesFieldType == null) {, +            // can only happen when no types exist, so no docs exist either, +            return Queries.newMatchNoDocsQuery();, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/MissingQueryParser.java, +        if (fieldNamesFieldType == null) {, +            // can only happen when no types exist, so no docs exist either, +            return Queries.newMatchNoDocsQuery();, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryParser.java, +        if (fieldNamesFieldType == null) {, +            // can only happen when no types exist, so no docs exist either, +            return Queries.newMatchNoDocsQuery();, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/MissingQueryParser.java, +        if (fieldNamesFieldType == null) {, +            // can only happen when no types exist, so no docs exist either, +            return Queries.newMatchNoDocsQuery();, +        }, +, +++ b/core/src/test/java/org/elasticsearch/search/query/ExistsMissingTests.java, +    // TODO: move this to a unit test somewhere..., +    public void testEmptyIndex() throws Exception {, +        createIndex("test");, +        ensureYellow("test");, +        SearchResponse resp = client().prepareSearch("test").setQuery(QueryBuilders.existsQuery("foo")).execute().actionGet();, +        assertSearchResponse(resp);, +        resp = client().prepareSearch("test").setQuery(QueryBuilders.missingQuery("foo")).execute().actionGet();, +        assertSearchResponse(resp);, +    }, +]