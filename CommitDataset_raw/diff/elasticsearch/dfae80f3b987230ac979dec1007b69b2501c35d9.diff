[+++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +    @Override, +    public final Query toFilter(QueryShardContext context) throws IOException {, +        Query result = null;, +            final boolean originalIsFilter = context.isFilter;, +            try {, +                context.isFilter = true;, +                result = toQuery(context);, +            } finally {, +                context.isFilter = originalIsFilter;, +            }, +        return result;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +    @Override, +    public final Query toFilter(QueryShardContext context) throws IOException {, +        Query result = null;, +            final boolean originalIsFilter = context.isFilter;, +            try {, +                context.isFilter = true;, +                result = toQuery(context);, +            } finally {, +                context.isFilter = originalIsFilter;, +            }, +        return result;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toFilter(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +    @Override, +    public final Query toFilter(QueryShardContext context) throws IOException {, +        Query result = null;, +            final boolean originalIsFilter = context.isFilter;, +            try {, +                context.isFilter = true;, +                result = toQuery(context);, +            } finally {, +                context.isFilter = originalIsFilter;, +            }, +        return result;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toFilter(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private void addBooleanClauses(QueryShardContext context, BooleanQuery booleanQuery, List<QueryBuilder> clauses, Occur occurs) throws IOException {, +            Query luceneQuery = null;, +            switch (occurs) {, +            case SHOULD:, +                if (context.isFilter() && minimumShouldMatch == null) {, +                    minimumShouldMatch = "1";, +                }, +                luceneQuery = query.toQuery(context);, +                break;, +            case FILTER:, +            case MUST_NOT:, +                luceneQuery = query.toFilter(context);, +                break;, +            case MUST:, +                luceneQuery = query.toQuery(context);, +            }, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +    @Override, +    public final Query toFilter(QueryShardContext context) throws IOException {, +        Query result = null;, +            final boolean originalIsFilter = context.isFilter;, +            try {, +                context.isFilter = true;, +                result = toQuery(context);, +            } finally {, +                context.isFilter = originalIsFilter;, +            }, +        return result;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toFilter(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private void addBooleanClauses(QueryShardContext context, BooleanQuery booleanQuery, List<QueryBuilder> clauses, Occur occurs) throws IOException {, +            Query luceneQuery = null;, +            switch (occurs) {, +            case SHOULD:, +                if (context.isFilter() && minimumShouldMatch == null) {, +                    minimumShouldMatch = "1";, +                }, +                luceneQuery = query.toQuery(context);, +                break;, +            case FILTER:, +            case MUST_NOT:, +                luceneQuery = query.toFilter(context);, +                break;, +            case MUST:, +                luceneQuery = query.toQuery(context);, +            }, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +    @Override, +    public final Query toFilter(QueryShardContext context) throws IOException {]