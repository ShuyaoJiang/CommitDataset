[+++ b/x-pack/plugin/core/build.gradle, +  excludes << 'org/elasticsearch/xpack/core/ssl/DerParser.java', +++ b/x-pack/plugin/core/build.gradle, +  excludes << 'org/elasticsearch/xpack/core/ssl/DerParser.java', +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackPlugin.java, +            final Path configPath) {, +++ b/x-pack/plugin/core/build.gradle, +  excludes << 'org/elasticsearch/xpack/core/ssl/DerParser.java', +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/XPackPlugin.java, +            final Path configPath) {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/CertGenUtils.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.core.ssl;, +, +import org.bouncycastle.asn1.ASN1Encodable;, +import org.bouncycastle.asn1.ASN1ObjectIdentifier;, +import org.bouncycastle.asn1.DERSequence;, +import org.bouncycastle.asn1.DERTaggedObject;, +import org.bouncycastle.asn1.DERUTF8String;, +import org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers;, +import org.bouncycastle.asn1.x500.X500Name;, +import org.bouncycastle.asn1.x509.AuthorityKeyIdentifier;, +import org.bouncycastle.asn1.x509.BasicConstraints;, +import org.bouncycastle.asn1.x509.Extension;, +import org.bouncycastle.asn1.x509.ExtensionsGenerator;, +import org.bouncycastle.asn1.x509.GeneralName;, +import org.bouncycastle.asn1.x509.GeneralNames;, +import org.bouncycastle.asn1.x509.Time;, +import org.bouncycastle.cert.CertIOException;, +import org.bouncycastle.cert.X509CertificateHolder;, +import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;, +import org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils;, +import org.bouncycastle.cert.jcajce.JcaX509v3CertificateBuilder;, +import org.bouncycastle.jce.provider.BouncyCastleProvider;, +import org.bouncycastle.operator.ContentSigner;, +import org.bouncycastle.operator.OperatorCreationException;, +import org.bouncycastle.operator.jcajce.JcaContentSignerBuilder;, +import org.bouncycastle.pkcs.PKCS10CertificationRequest;, +import org.bouncycastle.pkcs.jcajce.JcaPKCS10CertificationRequestBuilder;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.SuppressForbidden;, +import org.elasticsearch.common.network.InetAddressHelper;, +import org.elasticsearch.common.network.NetworkAddress;, +import org.joda.time.DateTime;, +import org.joda.time.DateTimeZone;, +, +import javax.net.ssl.X509ExtendedKeyManager;, +import javax.net.ssl.X509ExtendedTrustManager;, +import javax.security.auth.x500.X500Principal;, +, +import java.io.IOException;, +import java.math.BigInteger;, +import java.net.InetAddress;, +import java.net.SocketException;, +import java.security.KeyPair;, +import java.security.KeyPairGenerator;, +import java.security.KeyStore;, +import java.security.NoSuchAlgorithmException;, +import java.security.PrivateKey;, +import java.security.SecureRandom;, +import java.security.cert.Certificate;, +import java.security.cert.CertificateException;, +import java.security.cert.X509Certificate;, +import java.util.HashSet;, +import java.util.Locale;, +import java.util.Objects;, +import java.util.Set;, +, +, +/**, + * Utility methods that deal with {@link Certificate}, {@link KeyStore}, {@link X509ExtendedTrustManager}, {@link X509ExtendedKeyManager}, + * and other certificate related objects., + */, +public class CertGenUtils {, +, +    private static final String CN_OID = "2.5.4.3";, +, +    private static final int SERIAL_BIT_LENGTH = 20 * 8;, +    private static final BouncyCastleProvider BC_PROV = new BouncyCastleProvider();, +, +    private CertGenUtils() {, +    }, +, +    /**, +     * Generates a CA certificate, +     */, +    public static X509Certificate generateCACertificate(X500Principal x500Principal, KeyPair keyPair, int days), +            throws OperatorCreationException, CertificateException, CertIOException, NoSuchAlgorithmException {, +        return generateSignedCertificate(x500Principal, null, keyPair, null, null, true, days, null);, +    }, +, +    /**, +     * Generates a signed certificate using the provided CA private key and, +     * information from the CA certificate, +     *, +     * @param principal       the principal of the certificate; commonly referred to as the]