[+++ b/core-signatures.txt, +, +java.lang.Character#codePointBefore(char[],int) @ Implicit start offset is error-prone when the char[] is a buffer and the first chars are random chars, +java.lang.Character#codePointAt(char[],int) @ Implicit end offset is error-prone when the char[] is a buffer and the last chars are random chars, +, +@defaultMessage Collections.sort dumps data into an array, sorts the array and reinserts data into the list, one should rather use Lucene's CollectionUtil sort methods which sort in place, +, +java.util.Collections#sort(java.util.List), +java.util.Collections#sort(java.util.List,java.util.Comparator), +++ b/core-signatures.txt, +, +java.lang.Character#codePointBefore(char[],int) @ Implicit start offset is error-prone when the char[] is a buffer and the first chars are random chars, +java.lang.Character#codePointAt(char[],int) @ Implicit end offset is error-prone when the char[] is a buffer and the last chars are random chars, +, +@defaultMessage Collections.sort dumps data into an array, sorts the array and reinserts data into the list, one should rather use Lucene's CollectionUtil sort methods which sort in place, +, +java.util.Collections#sort(java.util.List), +java.util.Collections#sort(java.util.List,java.util.Comparator), +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(templates, new Comparator<IndexTemplateMetaData>() {, +++ b/core-signatures.txt, +, +java.lang.Character#codePointBefore(char[],int) @ Implicit start offset is error-prone when the char[] is a buffer and the first chars are random chars, +java.lang.Character#codePointAt(char[],int) @ Implicit end offset is error-prone when the char[] is a buffer and the last chars are random chars, +, +@defaultMessage Collections.sort dumps data into an array, sorts the array and reinserts data into the list, one should rather use Lucene's CollectionUtil sort methods which sort in place, +, +java.util.Collections#sort(java.util.List), +java.util.Collections#sort(java.util.List,java.util.Comparator), +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(templates, new Comparator<IndexTemplateMetaData>() {, +++ b/src/main/java/org/elasticsearch/common/inject/internal/Errors.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.timSort(result, new Comparator<Message>() {, +++ b/core-signatures.txt, +, +java.lang.Character#codePointBefore(char[],int) @ Implicit start offset is error-prone when the char[] is a buffer and the first chars are random chars, +java.lang.Character#codePointAt(char[],int) @ Implicit end offset is error-prone when the char[] is a buffer and the last chars are random chars, +, +@defaultMessage Collections.sort dumps data into an array, sorts the array and reinserts data into the list, one should rather use Lucene's CollectionUtil sort methods which sort in place, +, +java.util.Collections#sort(java.util.List), +java.util.Collections#sort(java.util.List,java.util.Comparator), +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(templates, new Comparator<IndexTemplateMetaData>() {, +++ b/src/main/java/org/elasticsearch/common/inject/internal/Errors.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.timSort(result, new Comparator<Message>() {, +++ b/src/main/java/org/elasticsearch/common/network/NetworkUtils.java, +import org.apache.lucene.util.CollectionUtil;, +            CollectionUtil.timSort(intfsList, new Comparator<NetworkInterface>() {, +++ b/core-signatures.txt, +, +java.lang.Character#codePointBefore(char[],int) @ Implicit start offset is error-prone when the char[] is a buffer and the first chars are random chars, +java.lang.Character#codePointAt(char[],int) @ Implicit end offset is error-prone when the char[] is a buffer and the last chars are random chars, +, +@defaultMessage Collections.sort dumps data into an array, sorts the array and reinserts data into the list, one should rather use Lucene's CollectionUtil sort methods which sort in place, +, +java.util.Collections#sort(java.util.List), +java.util.Collections#sort(java.util.List,java.util.Comparator), +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(templates, new Comparator<IndexTemplateMetaData>() {, +++ b/src/main/java/org/elasticsearch/common/inject/internal/Errors.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.timSort(result, new Comparator<Message>() {, +++ b/src/main/java/org/elasticsearch/common/network/NetworkUtils.java, +import org.apache.lucene.util.CollectionUtil;, +            CollectionUtil.timSort(intfsList, new Comparator<NetworkInterface>() {, +++ b/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(possibleNodes, nodeComparator);, +++ b/core-signatures.txt, +, +java.lang.Character#codePointBefore(char[],int) @ Implicit start offset is error-prone when the char[] is a buffer and the first chars are random chars, +java.lang.Character#codePointAt(char[],int) @ Implicit end offset is error-prone when the char[] is a buffer and the last chars are random chars, +, +@defaultMessage Collections.sort dumps data into an array, sorts the array and reinserts data into the list, one should rather use Lucene's CollectionUtil sort methods which sort in place, +, +java.util.Collections#sort(java.util.List), +java.util.Collections#sort(java.util.List,java.util.Comparator), +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(templates, new Comparator<IndexTemplateMetaData>() {, +++ b/src/main/java/org/elasticsearch/common/inject/internal/Errors.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.timSort(result, new Comparator<Message>() {, +++ b/src/main/java/org/elasticsearch/common/network/NetworkUtils.java, +import org.apache.lucene.util.CollectionUtil;, +            CollectionUtil.timSort(intfsList, new Comparator<NetworkInterface>() {, +++ b/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(possibleNodes, nodeComparator);, +++ b/src/main/java/org/elasticsearch/index/gateway/CommitPoints.java, +import org.apache.lucene.util.CollectionUtil;, +        CollectionUtil.quickSort(commitPoints, new Comparator<CommitPoint>() {, +++ b/core-signatures.txt]