[+++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;, +import java.security.cert.CertificateException;, +        // we add the `xpack.version` setting to all internal indices, +        settings.add(Setting.simpleString("index.xpack.version", Setting.Property.IndexScope));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;, +import java.security.cert.CertificateException;, +        // we add the `xpack.version` setting to all internal indices, +        settings.add(Setting.simpleString("index.xpack.version", Setting.Property.IndexScope));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +    /*, +     * TODO possible optimization, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;, +import java.security.cert.CertificateException;, +        // we add the `xpack.version` setting to all internal indices, +        settings.add(Setting.simpleString("index.xpack.version", Setting.Property.IndexScope));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +    /*, +     * TODO possible optimization, +++ b/plugin/src/main/resources/monitoring-alerts.json, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;, +import java.security.cert.CertificateException;, +        // we add the `xpack.version` setting to all internal indices, +        settings.add(Setting.simpleString("index.xpack.version", Setting.Property.IndexScope));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +    /*, +     * TODO possible optimization, +++ b/plugin/src/main/resources/monitoring-alerts.json, +++ b/plugin/src/main/resources/monitoring-beats.json, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;, +import java.security.cert.CertificateException;, +        // we add the `xpack.version` setting to all internal indices, +        settings.add(Setting.simpleString("index.xpack.version", Setting.Property.IndexScope));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +    /*, +     * TODO possible optimization, +++ b/plugin/src/main/resources/monitoring-alerts.json, +++ b/plugin/src/main/resources/monitoring-beats.json, +++ b/plugin/src/main/resources/monitoring-es.json, +    "index.codec": "best_compression", +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;, +import java.security.cert.CertificateException;, +        // we add the `xpack.version` setting to all internal indices, +        settings.add(Setting.simpleString("index.xpack.version", Setting.Property.IndexScope));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +    /*, +     * TODO possible optimization, +++ b/plugin/src/main/resources/monitoring-alerts.json, +++ b/plugin/src/main/resources/monitoring-beats.json, +++ b/plugin/src/main/resources/monitoring-es.json, +    "index.codec": "best_compression", +++ b/plugin/src/main/resources/monitoring-kibana.json, +    "index.codec": "best_compression", +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;, +import java.security.cert.CertificateException;, +        // we add the `xpack.version` setting to all internal indices, +        settings.add(Setting.simpleString("index.xpack.version", Setting.Property.IndexScope));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +    /*, +     * TODO possible optimization, +++ b/plugin/src/main/resources/monitoring-alerts.json, +++ b/plugin/src/main/resources/monitoring-beats.json, +++ b/plugin/src/main/resources/monitoring-es.json, +    "index.codec": "best_compression", +++ b/plugin/src/main/resources/monitoring-kibana.json, +    "index.codec": "best_compression", +++ b/plugin/src/main/resources/monitoring-logstash.json, +    "index.codec": "best_compression", +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.UnrecoverableKeyException;]