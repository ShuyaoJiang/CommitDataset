[+++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +                    if (previousAllocationIds.get().isEmpty() == false) {, +                    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleService.java, +                    if (previousAllocationIds.get().isEmpty() == false) {, +                    }, +++ b/plugin/src/test/java/org/elasticsearch/xpack/watcher/WatcherLifeCycleServiceTests.java, +        IndexRoutingTable watchRoutingTable = IndexRoutingTable.builder(watchIndex), +                .addShard(TestShardRouting.newShardRouting(shardId, "node_1", true, randomFrom(STARTED, RELOCATING))), +                .build();, +        ClusterState clusterStateWithLocalShards = ClusterState.builder(new ClusterName("my-cluster")), +                .build();, +        // shard moved over to node 2, +        IndexRoutingTable watchRoutingTableNode2 = IndexRoutingTable.builder(watchIndex), +                .addShard(TestShardRouting.newShardRouting(shardId, "node_2", true, randomFrom(STARTED, RELOCATING))), +                .build();, +        ClusterState clusterStateWithoutLocalShards = ClusterState.builder(new ClusterName("my-cluster")), +                .nodes(nodes), +                .routingTable(RoutingTable.builder().add(watchRoutingTableNode2).build()), +                .metaData(MetaData.builder().put(indexMetaData, false)), +        // set current allocation ids, +        lifeCycleService.clusterChanged(new ClusterChangedEvent("any", clusterStateWithLocalShards, clusterStateWithoutLocalShards));, +        verify(watcherService, times(0)).pauseExecution(eq("no local watcher shards"));, +, +        // no more local hards, lets pause execution, +        lifeCycleService.clusterChanged(new ClusterChangedEvent("any", clusterStateWithoutLocalShards, clusterStateWithLocalShards));, +        verify(watcherService, times(1)).pauseExecution(eq("no local watcher shards"));, +, +        // no further invocations should happen if the cluster state does not change in regard to local shards, +        lifeCycleService.clusterChanged(new ClusterChangedEvent("any", clusterStateWithoutLocalShards, clusterStateWithoutLocalShards));, +        verify(watcherService, times(1)).pauseExecution(eq("no local watcher shards"));]