[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +                return PainlessCast.unboxTargetType(def.class, Boolean.class, explicit, boolean.class);, +                return PainlessCast.unboxTargetType(def.class, Byte.class, explicit, byte.class);, +                return PainlessCast.unboxTargetType(def.class, Short.class, explicit, short.class);, +                return PainlessCast.unboxTargetType(def.class, Character.class, explicit, char.class);, +                return PainlessCast.unboxTargetType(def.class, Integer.class, explicit, int.class);, +                return PainlessCast.unboxTargetType(def.class, Long.class, explicit, long.class);, +                return PainlessCast.unboxTargetType(def.class, Float.class, explicit, float.class);, +                return PainlessCast.unboxTargetType(def.class, Double.class, explicit, double.class);, +                return PainlessCast.unboxTargetType(Object.class, Byte.class, true, byte.class);, +                return PainlessCast.unboxTargetType(Object.class, Short.class, true, short.class);, +                return PainlessCast.unboxTargetType(Object.class, Character.class, true, char.class);, +                return PainlessCast.unboxTargetType(Object.class, Integer.class, true, int.class);, +                return PainlessCast.unboxTargetType(Object.class, Long.class, true, long.class);, +                return PainlessCast.unboxTargetType(Object.class, Float.class, true, float.class);, +                return PainlessCast.unboxTargetType(Object.class, Double.class, true, double.class);, +                return PainlessCast.unboxTargetType(Number.class, Byte.class, true, byte.class);, +                return PainlessCast.unboxTargetType(Number.class, Short.class, true, short.class);, +                return PainlessCast.unboxTargetType(Number.class, Character.class, true, char.class);, +                return PainlessCast.unboxTargetType(Number.class, Integer.class, true, int.class);, +                return PainlessCast.unboxTargetType(Number.class, Long.class, true, long.class);, +                return PainlessCast.unboxTargetType(Number.class, Float.class, true, float.class);, +                return PainlessCast.unboxTargetType(Number.class, Double.class, true, double.class);, +                return PainlessCast.originalTypetoTargetType(String.class, char.class, true);, +                return PainlessCast.boxOriginalType(Boolean.class, def.class, explicit, boolean.class);, +                return PainlessCast.boxOriginalType(Boolean.class, Object.class, explicit, boolean.class);, +                return PainlessCast.boxTargetType(boolean.class, boolean.class, explicit, boolean.class);, +                return PainlessCast.boxOriginalType(Byte.class, def.class, explicit, byte.class);, +                return PainlessCast.boxOriginalType(Byte.class, Object.class, explicit, byte.class);, +                return PainlessCast.boxOriginalType(Byte.class, Number.class, explicit, byte.class);, +                return PainlessCast.originalTypetoTargetType(byte.class, short.class, explicit);, +                return PainlessCast.originalTypetoTargetType(byte.class, char.class, true);, +                return PainlessCast.originalTypetoTargetType(byte.class, int.class, explicit);, +                return PainlessCast.originalTypetoTargetType(byte.class, long.class, explicit);, +                return PainlessCast.originalTypetoTargetType(byte.class, float.class, explicit);, +                return PainlessCast.originalTypetoTargetType(byte.class, double.class, explicit);, +                return PainlessCast.boxTargetType(byte.class, byte.class, explicit, byte.class);, +                return PainlessCast.boxTargetType(byte.class, short.class, explicit, short.class);, +                return PainlessCast.boxTargetType(byte.class, char.class, true, char.class);, +                return PainlessCast.boxTargetType(byte.class, int.class, explicit, int.class);, +                return PainlessCast.boxTargetType(byte.class, long.class, explicit, long.class);, +                return PainlessCast.boxTargetType(byte.class, float.class, explicit, float.class);, +                return PainlessCast.boxTargetType(byte.class, double.class, explicit, double.class);, +                return PainlessCast.boxOriginalType(Short.class, def.class, explicit, short.class);, +                return PainlessCast.boxOriginalType(Short.class, Object.class, explicit, short.class);, +                return PainlessCast.boxOriginalType(Short.class, Number.class, explicit, short.class);, +                return PainlessCast.originalTypetoTargetType(short.class, byte.class, true);, +                return PainlessCast.originalTypetoTargetType(short.class, char.class, true);, +                return PainlessCast.originalTypetoTargetType(short.class, int.class, explicit);, +                return PainlessCast.originalTypetoTargetType(short.class, long.class, explicit);, +                return PainlessCast.originalTypetoTargetType(short.class, float.class, explicit);, +                return PainlessCast.originalTypetoTargetType(short.class, double.class, explicit);, +                return PainlessCast.boxTargetType(short.class, byte.class, true, byte.class);, +                return PainlessCast.boxTargetType(short.class, short.class, explicit, short.class);, +                return PainlessCast.boxTargetType(short.class, char.class, true, char.class);, +                return PainlessCast.boxTargetType(short.class, int.class, explicit, int.class);, +                return PainlessCast.boxTargetType(short.class, long.class, explicit, long.class);, +                return PainlessCast.boxTargetType(short.class, float.class, explicit, float.class);, +                return PainlessCast.boxTargetType(short.class, double.class, explicit, double.class);, +                return PainlessCast.boxOriginalType(Character.class, def.class, explicit, char.class);, +                return PainlessCast.boxOriginalType(Character.class, Object.class, explicit, char.class);, +                return PainlessCast.boxOriginalType(Character.class, Number.class, explicit, char.class);, +                return PainlessCast.originalTypetoTargetType(char.class, String.class, explicit);, +                return PainlessCast.originalTypetoTargetType(char.class, byte.class, true);, +                return PainlessCast.originalTypetoTargetType(char.class, short.class, true);, +                return PainlessCast.originalTypetoTargetType(char.class, int.class, explicit);, +                return PainlessCast.originalTypetoTargetType(char.class, long.class, explicit);, +                return PainlessCast.originalTypetoTargetType(char.class, float.class, explicit);, +                return PainlessCast.originalTypetoTargetType(char.class, double.class, explicit);, +                return PainlessCast.boxTargetType(char.class, byte.class, true, byte.class);, +                return PainlessCast.boxTargetType(char.class, short.class, explicit, short.class);, +                return PainlessCast.boxTargetType(char.class, char.class, true, char.class);, +                return PainlessCast.boxTargetType(char.class, int.class, explicit, int.class);, +                return PainlessCast.boxTargetType(char.class, long.class, explicit, long.class);, +                return PainlessCast.boxTargetType(char.class, float.class, explicit, float.class);, +                return PainlessCast.boxTargetType(char.class, double.class, explicit, double.class);, +                return PainlessCast.boxOriginalType(Integer.class, def.class, explicit, int.class);, +                return PainlessCast.boxOriginalType(Integer.class, Object.class, explicit, int.class);, +                return PainlessCast.boxOriginalType(Integer.class, Number.class, explicit, int.class);, +                return PainlessCast.originalTypetoTargetType(int.class, byte.class, true);, +                return PainlessCast.originalTypetoTargetType(int.class, char.class, true);, +                return PainlessCast.originalTypetoTargetType(int.class, short.class, true);, +                return PainlessCast.originalTypetoTargetType(int.class, long.class, explicit);, +                return PainlessCast.originalTypetoTargetType(int.class, float.class, explicit);, +                return PainlessCast.originalTypetoTargetType(int.class, double.class, explicit);, +                return PainlessCast.boxTargetType(int.class, byte.class, true, byte.class);, +                return PainlessCast.boxTargetType(int.class, short.class, true, short.class);, +                return PainlessCast.boxTargetType(int.class, char.class, true, char.class);, +                return PainlessCast.boxTargetType(int.class, int.class, explicit, int.class);, +                return PainlessCast.boxTargetType(int.class, long.class, explicit, long.class);, +                return PainlessCast.boxTargetType(int.class, float.class, explicit, float.class);, +                return PainlessCast.boxTargetType(int.class, double.class, explicit, double.class);, +                return PainlessCast.boxOriginalType(Long.class, def.class, explicit, long.class);, +                return PainlessCast.boxOriginalType(Long.class, Object.class, explicit, long.class);, +                return PainlessCast.boxOriginalType(Long.class, Number.class, explicit, long.class);, +                return PainlessCast.originalTypetoTargetType(long.class, byte.class, true);, +                return PainlessCast.originalTypetoTargetType(long.class, char.class, true);, +                return PainlessCast.originalTypetoTargetType(long.class, short.class, true);, +                return PainlessCast.originalTypetoTargetType(long.class, int.class, true);, +                return PainlessCast.originalTypetoTargetType(long.class, float.class, explicit);]