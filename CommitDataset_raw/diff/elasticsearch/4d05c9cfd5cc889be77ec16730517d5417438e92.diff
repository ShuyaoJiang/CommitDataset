[+++ b/src/main/java/org/elasticsearch/common/lucene/docset/MatchDocIdSet.java, +    private DocIdSetIterator iterator;, +, +            return iterator = new NoAcceptDocsIterator(maxDoc);, +            return iterator = new FixedBitSetIterator(((DocIdSet) acceptDocs).iterator());, +            return iterator = new BothIterator(maxDoc, acceptDocs);, +    /**, +     * Short circuiting the doc id set, by advancing to beyond the last doc id., +     */, +    public void shortCircuit() {, +        try {, +            iterator.advance(DocIdSetIterator.NO_MORE_DOCS);, +        } catch (IOException e) {, +            throw new RuntimeException(e);, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/common/lucene/docset/MatchDocIdSet.java, +    private DocIdSetIterator iterator;, +, +            return iterator = new NoAcceptDocsIterator(maxDoc);, +            return iterator = new FixedBitSetIterator(((DocIdSet) acceptDocs).iterator());, +            return iterator = new BothIterator(maxDoc, acceptDocs);, +    /**, +     * Short circuiting the doc id set, by advancing to beyond the last doc id., +     */, +    public void shortCircuit() {, +        try {, +            iterator.advance(DocIdSetIterator.NO_MORE_DOCS);, +        } catch (IOException e) {, +            throw new RuntimeException(e);, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/Uid.java, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +    public static void createUidAsBytes(BytesRef type, BytesRef id, BytesRef spare) {, +        spare.copyBytes(type);, +        spare.append(DELIMITER_BYTES);, +        spare.append(id);, +    }, +, +++ b/src/main/java/org/elasticsearch/common/lucene/docset/MatchDocIdSet.java, +    private DocIdSetIterator iterator;, +, +            return iterator = new NoAcceptDocsIterator(maxDoc);, +            return iterator = new FixedBitSetIterator(((DocIdSet) acceptDocs).iterator());, +            return iterator = new BothIterator(maxDoc, acceptDocs);, +    /**, +     * Short circuiting the doc id set, by advancing to beyond the last doc id., +     */, +    public void shortCircuit() {, +        try {, +            iterator.advance(DocIdSetIterator.NO_MORE_DOCS);, +        } catch (IOException e) {, +            throw new RuntimeException(e);, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/Uid.java, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +, +    public static void createUidAsBytes(BytesRef type, BytesRef id, BytesRef spare) {, +        spare.copyBytes(type);, +        spare.append(DELIMITER_BYTES);, +        spare.append(id);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java, +    private Integer shortCircuitCutoff;, +    /**, +     * Configures at what cut off point only to evaluate parent documents that contain the matching parent id terms, +     * instead of evaluating all parent docs., +     */, +    public HasChildFilterBuilder setShortCircuitCutoff(int shortCircuitCutoff) {, +        this.shortCircuitCutoff = shortCircuitCutoff;, +        return this;, +    }, +, +        if (shortCircuitCutoff != null) {, +            builder.field("short_circuit_cutoff", shortCircuitCutoff);, +        }, +++ b/src/main/java/org/elasticsearch/common/lucene/docset/MatchDocIdSet.java, +    private DocIdSetIterator iterator;, +, +            return iterator = new NoAcceptDocsIterator(maxDoc);, +            return iterator = new FixedBitSetIterator(((DocIdSet) acceptDocs).iterator());, +            return iterator = new BothIterator(maxDoc, acceptDocs);, +    /**, +     * Short circuiting the doc id set, by advancing to beyond the last doc id., +     */, +    public void shortCircuit() {, +        try {, +            iterator.advance(DocIdSetIterator.NO_MORE_DOCS);, +        } catch (IOException e) {]