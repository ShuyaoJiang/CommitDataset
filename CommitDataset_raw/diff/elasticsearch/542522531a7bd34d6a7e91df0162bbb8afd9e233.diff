[+++ b/core/build.gradle, +  // TODO: remove these test deps and just depend on test-framework, +  testCompile(group: 'junit', name: 'junit', version: '4.11') {, +    transitive = false, +  testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}", +, +  testCompile("org.apache.lucene:lucene-test-framework:${versions.lucene}") {, +    exclude group: 'com.carrotsearch.randomizedtesting', module: 'junit4-ant', +  }, +  testCompile(group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3') {, +    exclude group: 'org.hamcrest', module: 'hamcrest-core', +  }, +  testCompile 'com.google.jimfs:jimfs:1.0', +  testCompile "org.apache.httpcomponents:httpclient:${versions.httpclient}", +test.dependsOn copyRestSpec, +++ b/core/build.gradle, +  // TODO: remove these test deps and just depend on test-framework, +  testCompile(group: 'junit', name: 'junit', version: '4.11') {, +    transitive = false, +  testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}", +, +  testCompile("org.apache.lucene:lucene-test-framework:${versions.lucene}") {, +    exclude group: 'com.carrotsearch.randomizedtesting', module: 'junit4-ant', +  }, +  testCompile(group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3') {, +    exclude group: 'org.hamcrest', module: 'hamcrest-core', +  }, +  testCompile 'com.google.jimfs:jimfs:1.0', +  testCompile "org.apache.httpcomponents:httpclient:${versions.httpclient}", +test.dependsOn copyRestSpec, +++ /dev/null, +++ b/core/build.gradle, +  // TODO: remove these test deps and just depend on test-framework, +  testCompile(group: 'junit', name: 'junit', version: '4.11') {, +    transitive = false, +  testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}", +, +  testCompile("org.apache.lucene:lucene-test-framework:${versions.lucene}") {, +    exclude group: 'com.carrotsearch.randomizedtesting', module: 'junit4-ant', +  }, +  testCompile(group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3') {, +    exclude group: 'org.hamcrest', module: 'hamcrest-core', +  }, +  testCompile 'com.google.jimfs:jimfs:1.0', +  testCompile "org.apache.httpcomponents:httpclient:${versions.httpclient}", +test.dependsOn copyRestSpec, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/bootstrap/BootstrapForTesting.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.bootstrap;, +, +import com.carrotsearch.randomizedtesting.RandomizedRunner;, +, +import org.apache.lucene.util.LuceneTestCase;, +import org.apache.lucene.util.TestSecurityManager;, +import org.elasticsearch.SecureSM;, +import org.elasticsearch.bootstrap.Bootstrap;, +import org.elasticsearch.bootstrap.ESPolicy;, +import org.elasticsearch.bootstrap.Security;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.SuppressForbidden;, +import org.elasticsearch.common.io.PathUtils;, +import org.elasticsearch.plugins.PluginInfo;, +import org.junit.Assert;, +, +import java.io.FilePermission;, +import java.io.InputStream;, +import java.net.URL;, +import java.nio.file.Path;, +import java.security.Permission;, +import java.security.Permissions;, +import java.security.Policy;, +import java.security.ProtectionDomain;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +import java.util.Properties;]