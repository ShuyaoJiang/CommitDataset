[+++ b/core/src/main/java/org/elasticsearch/node/InternalSettingsPreparer.java, +import java.util.function.UnaryOperator;, +    private static final String PROPERTY_DEFAULTS_PREFIX = "default.";, +    private static final Predicate<String> PROPERTY_DEFAULTS_PREDICATE = key -> key.startsWith(PROPERTY_DEFAULTS_PREFIX);, +    private static final UnaryOperator<String> STRIP_PROPERTY_DEFAULTS_PREFIX = key -> key.substring(PROPERTY_DEFAULTS_PREFIX.length());, +        initializeSettings(output, input, Collections.emptyMap());, +        initializeSettings(output, input, properties);, +        initializeSettings(output, input, properties);, +    private static void initializeSettings(Settings.Builder output, Settings input, Map<String, String> esSettings) {, +        output.putProperties(esSettings,, +            PROPERTY_DEFAULTS_PREDICATE.and(key -> output.get(STRIP_PROPERTY_DEFAULTS_PREFIX.apply(key)) == null),, +            STRIP_PROPERTY_DEFAULTS_PREFIX);, +++ b/core/src/main/java/org/elasticsearch/node/InternalSettingsPreparer.java, +import java.util.function.UnaryOperator;, +    private static final String PROPERTY_DEFAULTS_PREFIX = "default.";, +    private static final Predicate<String> PROPERTY_DEFAULTS_PREDICATE = key -> key.startsWith(PROPERTY_DEFAULTS_PREFIX);, +    private static final UnaryOperator<String> STRIP_PROPERTY_DEFAULTS_PREFIX = key -> key.substring(PROPERTY_DEFAULTS_PREFIX.length());, +        initializeSettings(output, input, Collections.emptyMap());, +        initializeSettings(output, input, properties);, +        initializeSettings(output, input, properties);, +    private static void initializeSettings(Settings.Builder output, Settings input, Map<String, String> esSettings) {, +        output.putProperties(esSettings,, +            PROPERTY_DEFAULTS_PREDICATE.and(key -> output.get(STRIP_PROPERTY_DEFAULTS_PREFIX.apply(key)) == null),, +            STRIP_PROPERTY_DEFAULTS_PREFIX);, +++ b/core/src/test/java/org/elasticsearch/node/internal/InternalSettingsPreparerTests.java, +import java.nio.charset.StandardCharsets;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.Map;, +    Path homeDir;, +        homeDir = createTempDir();, +            .put(Environment.PATH_HOME_SETTING.getKey(), homeDir), +        homeDir = null;, +, +    public void testDefaultProperties() throws Exception {, +        Map<String, String> props = Collections.singletonMap("default.setting", "foo");, +        Environment env = InternalSettingsPreparer.prepareEnvironment(baseEnvSettings, null, props);, +        assertEquals("foo", env.settings().get("setting"));, +    }, +, +    public void testDefaultPropertiesOverride() throws Exception {, +        Path configDir = homeDir.resolve("config");, +        Files.createDirectories(configDir);, +        Files.write(configDir.resolve("elasticsearch.yml"), Collections.singletonList("setting: bar"), StandardCharsets.UTF_8);, +        Map<String, String> props = Collections.singletonMap("default.setting", "foo");, +        Environment env = InternalSettingsPreparer.prepareEnvironment(baseEnvSettings, null, props);, +        assertEquals("bar", env.settings().get("setting"));, +    }]