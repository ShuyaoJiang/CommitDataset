[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java, +import org.elasticsearch.indices.query.IndicesQueriesModule;, +                new IndicesQueriesModule(),, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java, +import org.elasticsearch.indices.query.IndicesQueriesModule;, +                new IndicesQueriesModule(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/AndFilterParser.java, +public class AndFilterParser implements FilterParser {, +    @Inject public AndFilterParser() {, +            throw new QueryParsingException(parseContext.index(), "[or] filter requires 'filters' to be set on it'");, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java, +import org.elasticsearch.indices.query.IndicesQueriesModule;, +                new IndicesQueriesModule(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/AndFilterParser.java, +public class AndFilterParser implements FilterParser {, +    @Inject public AndFilterParser() {, +            throw new QueryParsingException(parseContext.index(), "[or] filter requires 'filters' to be set on it'");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +public class BoolFilterParser implements FilterParser {, +    @Inject public BoolFilterParser() {, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java, +import org.elasticsearch.indices.query.IndicesQueriesModule;, +                new IndicesQueriesModule(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/AndFilterParser.java, +public class AndFilterParser implements FilterParser {, +    @Inject public AndFilterParser() {, +            throw new QueryParsingException(parseContext.index(), "[or] filter requires 'filters' to be set on it'");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +public class BoolFilterParser implements FilterParser {, +    @Inject public BoolFilterParser() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +public class BoolQueryParser implements QueryParser {, +    @Inject public BoolQueryParser(Settings settings) {, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java, +import org.elasticsearch.indices.query.IndicesQueriesModule;, +                new IndicesQueriesModule(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/AndFilterParser.java, +public class AndFilterParser implements FilterParser {, +    @Inject public AndFilterParser() {, +            throw new QueryParsingException(parseContext.index(), "[or] filter requires 'filters' to be set on it'");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +public class BoolFilterParser implements FilterParser {, +    @Inject public BoolFilterParser() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +public class BoolQueryParser implements QueryParser {, +    @Inject public BoolQueryParser(Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +public class BoostingQueryParser implements QueryParser {, +    @Inject public BoostingQueryParser() {, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'positive' query to be set'");, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'negative' query to be set'");, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'negative_boost' to be set'");, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java, +import org.elasticsearch.indices.query.IndicesQueriesModule;, +                new IndicesQueriesModule(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/AndFilterParser.java, +public class AndFilterParser implements FilterParser {, +    @Inject public AndFilterParser() {, +            throw new QueryParsingException(parseContext.index(), "[or] filter requires 'filters' to be set on it'");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +public class BoolFilterParser implements FilterParser {, +    @Inject public BoolFilterParser() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +public class BoolQueryParser implements QueryParser {, +    @Inject public BoolQueryParser(Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +public class BoostingQueryParser implements QueryParser {, +    @Inject public BoostingQueryParser() {, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'positive' query to be set'");, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'negative' query to be set'");, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'negative_boost' to be set'");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryParser.java, +public class ConstantScoreQueryParser implements QueryParser {, +    @Inject public ConstantScoreQueryParser() {, +            throw new QueryParsingException(parseContext.index(), "[constant_score] requires either 'filter' or 'query' element");, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java, +import org.elasticsearch.indices.query.IndicesQueriesModule;, +                new IndicesQueriesModule(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/AndFilterParser.java, +public class AndFilterParser implements FilterParser {, +    @Inject public AndFilterParser() {, +            throw new QueryParsingException(parseContext.index(), "[or] filter requires 'filters' to be set on it'");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolFilterParser.java, +public class BoolFilterParser implements FilterParser {, +    @Inject public BoolFilterParser() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +public class BoolQueryParser implements QueryParser {, +    @Inject public BoolQueryParser(Settings settings) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/BoostingQueryParser.java, +public class BoostingQueryParser implements QueryParser {, +    @Inject public BoostingQueryParser() {, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'positive' query to be set'");, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'negative' query to be set'");, +            throw new QueryParsingException(parseContext.index(), "[boosting] query requires 'negative_boost' to be set'");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryParser.java, +public class ConstantScoreQueryParser implements QueryParser {, +    @Inject public ConstantScoreQueryParser() {, +            throw new QueryParsingException(parseContext.index(), "[constant_score] requires either 'filter' or 'query' element");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/CustomBoostFactorQueryParser.java, +public class CustomBoostFactorQueryParser implements QueryParser {]