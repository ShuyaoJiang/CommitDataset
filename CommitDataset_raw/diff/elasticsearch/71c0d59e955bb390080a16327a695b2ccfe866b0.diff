[+++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvalQueryQuality.java, +/**, + * Returned for each search specification. Summarizes the measured quality, + * metric for this search request and adds the document ids found that were in, + * the search result but not annotated in the original request., + */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvalQueryQuality.java, +/**, + * Returned for each search specification. Summarizes the measured quality, + * metric for this search request and adds the document ids found that were in, + * the search result but not annotated in the original request., + */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvalQueryQuality.java, +/**, + * Returned for each search specification. Summarizes the measured quality, + * metric for this search request and adds the document ids found that were in, + * the search result but not annotated in the original request., + */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvalQueryQuality.java, +/**, + * Returned for each search specification. Summarizes the measured quality, + * metric for this search request and adds the document ids found that were in, + * the search result but not annotated in the original request., + */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResult.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvalQueryQuality.java, +/**, + * Returned for each search specification. Summarizes the measured quality, + * metric for this search request and adds the document ids found that were in, + * the search result but not annotated in the original request., + */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResult.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankedListQualityMetric.java, +        case ReciprocalRank.NAME:, +            rc = ReciprocalRank.fromXContent(parser, context);, +            break;, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvalQueryQuality.java, +/**, + * Returned for each search specification. Summarizes the measured quality, + * metric for this search request and adds the document ids found that were in, + * the search result but not annotated in the original request., + */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResult.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankedListQualityMetric.java, +        case ReciprocalRank.NAME:, +            rc = ReciprocalRank.fromXContent(parser, context);, +            break;, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RatedDocument.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/EvalQueryQuality.java, +/**, + * Returned for each search specification. Summarizes the measured quality, + * metric for this search request and adds the document ids found that were in, + * the search result but not annotated in the original request., + */, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/PrecisionAtN.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResponse.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankEvalResult.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RankedListQualityMetric.java, +        case ReciprocalRank.NAME:, +            rc = ReciprocalRank.fromXContent(parser, context);, +            break;, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/RatedDocument.java, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/ReciprocalRank.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.rankeval;, +, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.ParseFieldMatcherSupplier;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.xcontent.ObjectParser;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.index.rankeval.PrecisionAtN.Rating;]