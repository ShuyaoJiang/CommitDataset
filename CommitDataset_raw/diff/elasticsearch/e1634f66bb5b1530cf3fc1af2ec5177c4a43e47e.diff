[+++ b/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +            double h1 = 1D - Math.cos(x1 - x2);, +            double h2 = 1D - Math.cos((sourceLongitude - targetLongitude) * Math.PI / 180D);, +            double h = (h1 + Math.cos(x1) * Math.cos(x2) * h2) / 2;, +            double averageLatitude = (x1 + x2) / 2;, +            double diameter = GeoUtils.earthDiameter(averageLatitude);, +            return unit.fromMeters(diameter * Math.asin(Math.min(1, Math.sqrt(h))));, +++ b/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +            double h1 = 1D - Math.cos(x1 - x2);, +            double h2 = 1D - Math.cos((sourceLongitude - targetLongitude) * Math.PI / 180D);, +            double h = (h1 + Math.cos(x1) * Math.cos(x2) * h2) / 2;, +            double averageLatitude = (x1 + x2) / 2;, +            double diameter = GeoUtils.earthDiameter(averageLatitude);, +            return unit.fromMeters(diameter * Math.asin(Math.min(1, Math.sqrt(h))));, +++ b/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +import org.apache.lucene.util.SloppyMath;, +     * Return an approximate value of the diameter of the earth (in meters) at the given latitude (in radians)., +     */, +    public static double earthDiameter(double latitude) {, +        // SloppyMath impl returns a result in kilometers, +        return SloppyMath.earthDiameter(latitude) * 1000;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +            double h1 = 1D - Math.cos(x1 - x2);, +            double h2 = 1D - Math.cos((sourceLongitude - targetLongitude) * Math.PI / 180D);, +            double h = (h1 + Math.cos(x1) * Math.cos(x2) * h2) / 2;, +            double averageLatitude = (x1 + x2) / 2;, +            double diameter = GeoUtils.earthDiameter(averageLatitude);, +            return unit.fromMeters(diameter * Math.asin(Math.min(1, Math.sqrt(h))));, +++ b/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +import org.apache.lucene.util.SloppyMath;, +     * Return an approximate value of the diameter of the earth (in meters) at the given latitude (in radians)., +     */, +    public static double earthDiameter(double latitude) {, +        // SloppyMath impl returns a result in kilometers, +        return SloppyMath.earthDiameter(latitude) * 1000;, +    }, +, +    /**, +++ b/src/test/java/org/apache/lucene/util/SloppyMathTests.java]