[+++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java, +        FieldMapper<?> mapper = context.smartNameFieldMapperFromAnyType(input.field);, +++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java, +        FieldMapper<?> mapper = context.smartNameFieldMapperFromAnyType(input.field);, +++ b/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    @Override, +    @Override, +    @Override, +    @Override, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java, +        FieldMapper<?> mapper = context.smartNameFieldMapperFromAnyType(input.field);, +++ b/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    @Override, +    @Override, +    @Override, +    @Override, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return in.smartNameFieldMapperFromAnyType(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java, +        FieldMapper<?> mapper = context.smartNameFieldMapperFromAnyType(input.field);, +++ b/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    @Override, +    @Override, +    @Override, +    @Override, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return in.smartNameFieldMapperFromAnyType(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/internal/SearchContext.java, +    /**, +     * Looks up the given field, but does not restrict to fields in the types set on this context., +     */, +    public abstract FieldMapper smartNameFieldMapperFromAnyType(String name);, +, +++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {, +        return mapperService().smartNameFieldMapper(name);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java, +        FieldMapper<?> mapper = context.smartNameFieldMapperFromAnyType(input.field);, +++ b/src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java, +    @Override, +    @Override, +    @Override, +    @Override, +    public FieldMapper smartNameFieldMapperFromAnyType(String name) {]