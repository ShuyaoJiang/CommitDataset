[+++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java, +        if (fieldsNames != null && fieldsNames.length == 1) {, +            field = fieldsNames[0];, +            fieldsNames = null;, +        }, +, +++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java, +        if (fieldsNames != null && fieldsNames.length == 1) {, +            field = fieldsNames[0];, +            fieldsNames = null;, +        }, +, +++ b/src/main/java/org/elasticsearch/search/facet/terms/doubles/TermsDoubleFacetExecutor.java, +import org.elasticsearch.index.fielddata.ordinals.Ordinals;, +        if (allTerms) {, +            for (AtomicReaderContext readerContext : context.searcher().getTopReaderContext().leaves()) {, +                int maxDoc = readerContext.reader().maxDoc();, +                DoubleValues values = indexFieldData.load(readerContext).getDoubleValues();, +                if (values instanceof DoubleValues.WithOrdinals) {, +                    DoubleValues.WithOrdinals valuesWithOrds = (DoubleValues.WithOrdinals) values;, +                    Ordinals.Docs ordinals = valuesWithOrds.ordinals();, +                    for (int ord = 1; ord < ordinals.getMaxOrd(); ord++) {, +                        facets.putIfAbsent(valuesWithOrds.getValueByOrd(ord), 0);, +                    }, +                } else {, +                    // Shouldn't be true, otherwise it is WithOrdinals... just to be sure..., +                    if (values.isMultiValued()) {, +                        for (int docId = 0; docId < maxDoc; docId++) {, +                            if (!values.hasValue(docId)) {, +                                continue;, +                            }, +, +                            DoubleValues.Iter iter = values.getIter(docId);, +                            while (iter.hasNext()) {, +                                facets.putIfAbsent(iter.next(), 0);, +                            }, +                        }, +                    } else {, +                        for (int docId = 0; docId < maxDoc; docId++) {, +                            if (!values.hasValue(docId)) {, +                                continue;, +                            }, +, +                            double value = values.getValue(docId);, +                            facets.putIfAbsent(value, 0);, +                        }, +                    }, +                }, +            }, +        }, +++ b/src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java, +        if (fieldsNames != null && fieldsNames.length == 1) {, +            field = fieldsNames[0];, +            fieldsNames = null;, +        }, +, +++ b/src/main/java/org/elasticsearch/search/facet/terms/doubles/TermsDoubleFacetExecutor.java, +import org.elasticsearch.index.fielddata.ordinals.Ordinals;, +        if (allTerms) {, +            for (AtomicReaderContext readerContext : context.searcher().getTopReaderContext().leaves()) {, +                int maxDoc = readerContext.reader().maxDoc();, +                DoubleValues values = indexFieldData.load(readerContext).getDoubleValues();, +                if (values instanceof DoubleValues.WithOrdinals) {, +                    DoubleValues.WithOrdinals valuesWithOrds = (DoubleValues.WithOrdinals) values;, +                    Ordinals.Docs ordinals = valuesWithOrds.ordinals();, +                    for (int ord = 1; ord < ordinals.getMaxOrd(); ord++) {, +                        facets.putIfAbsent(valuesWithOrds.getValueByOrd(ord), 0);, +                    }, +                } else {, +                    // Shouldn't be true, otherwise it is WithOrdinals... just to be sure..., +                    if (values.isMultiValued()) {, +                        for (int docId = 0; docId < maxDoc; docId++) {, +                            if (!values.hasValue(docId)) {, +                                continue;, +                            }, +, +                            DoubleValues.Iter iter = values.getIter(docId);, +                            while (iter.hasNext()) {, +                                facets.putIfAbsent(iter.next(), 0);, +                            }, +                        }, +                    } else {, +                        for (int docId = 0; docId < maxDoc; docId++) {, +                            if (!values.hasValue(docId)) {, +                                continue;, +                            }, +, +                            double value = values.getValue(docId);, +                            facets.putIfAbsent(value, 0);, +                        }, +                    }, +                }, +            }, +        }, +++ b/src/main/java/org/elasticsearch/search/facet/terms/longs/TermsLongFacetExecutor.java, +import org.elasticsearch.index.fielddata.ordinals.Ordinals;, +        if (allTerms) {, +            for (AtomicReaderContext readerContext : context.searcher().getTopReaderContext().leaves()) {, +                int maxDoc = readerContext.reader().maxDoc();, +                LongValues values = indexFieldData.load(readerContext).getLongValues();]