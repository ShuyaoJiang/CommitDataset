[+++ /dev/null, +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            clusterService.submitStateUpdateTask("cluster_health (wait_for_events [" + request.waitForEvents() + "])", request.waitForEvents(), new ClusterStateUpdateTask() {, +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            clusterService.submitStateUpdateTask("cluster_health (wait_for_events [" + request.waitForEvents() + "])", request.waitForEvents(), new ClusterStateUpdateTask() {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java, +        clusterService.submitStateUpdateTask("cluster_reroute (api)", Priority.IMMEDIATE, new AckedClusterStateUpdateTask<ClusterRerouteResponse>(request, listener) {, +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:]