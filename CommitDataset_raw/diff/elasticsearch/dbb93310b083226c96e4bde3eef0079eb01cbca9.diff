[+++ b/docs/reference/sql/functions/date-time.asciidoc, +parameter for rounding the second fractional digits (nanoseconds). The default _precision_ is 3,, +meaning a milliseconds precision current date/time will be returned., +++ b/docs/reference/sql/functions/date-time.asciidoc, +parameter for rounding the second fractional digits (nanoseconds). The default _precision_ is 3,, +meaning a milliseconds precision current date/time will be returned., +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/CurrentDateTime.java, +        int precision = precisionExpression != null ? Foldables.intValueOf(precisionExpression) : 3;, +++ b/docs/reference/sql/functions/date-time.asciidoc, +parameter for rounding the second fractional digits (nanoseconds). The default _precision_ is 3,, +meaning a milliseconds precision current date/time will be returned., +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/CurrentDateTime.java, +        int precision = precisionExpression != null ? Foldables.intValueOf(precisionExpression) : 3;, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/CurrentDateTimeTests.java, +import org.elasticsearch.xpack.sql.session.Configuration;, +import java.time.temporal.ChronoField;, +    , +    public void testDefaultPrecision() {, +        Configuration configuration = TestUtils.randomConfiguration();, +        // null precision means default precision, +        CurrentDateTime cdt = new CurrentDateTime(EMPTY, null, configuration);, +        ZonedDateTime now = configuration.now();, +        assertEquals(now.get(ChronoField.MILLI_OF_SECOND), ((ZonedDateTime) cdt.fold()).get(ChronoField.MILLI_OF_SECOND));, +        , +        ZonedDateTime zdt = ZonedDateTime.parse("2019-02-26T12:34:56.123456789Z");, +        assertEquals(123_000_000, CurrentDateTime.nanoPrecision(zdt, null).getNano());, +    }]