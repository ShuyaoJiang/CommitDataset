[+++ b/src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java, +import com.google.common.collect.Iterators;, +import java.io.IOException;, +import java.util.EnumSet;, +import java.util.Iterator;, +import java.util.Set;, +    private boolean exists = false;, +        final boolean docExists = isExists();, +        out.writeBoolean(hasTermVectors());, +        if (hasTermVectors()) {, +    private boolean hasTermVectors() {, +        assert (headerRef == null && termVectors == null) || (headerRef != null && termVectors != null);, +        return headerRef != null;, +    }, +, +        exists = in.readBoolean();, +        if (hasTermVectors() && isExists()) {, +        builder.field(FieldStrings.EXISTS, isExists());, +        if (!isExists()) {, +    public boolean isExists() {, +        return exists;, +    }, +    , +    public void setExists(boolean exists) {, +         this.exists = exists;, +        if (fields != null) {, +        }, +++ b/src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java, +import com.google.common.collect.Iterators;, +import java.io.IOException;, +import java.util.EnumSet;, +import java.util.Iterator;, +import java.util.Set;, +    private boolean exists = false;, +        final boolean docExists = isExists();, +        out.writeBoolean(hasTermVectors());, +        if (hasTermVectors()) {, +    private boolean hasTermVectors() {, +        assert (headerRef == null && termVectors == null) || (headerRef != null && termVectors != null);, +        return headerRef != null;, +    }, +, +        exists = in.readBoolean();, +        if (hasTermVectors() && isExists()) {, +        builder.field(FieldStrings.EXISTS, isExists());, +        if (!isExists()) {, +    public boolean isExists() {, +        return exists;, +    }, +    , +    public void setExists(boolean exists) {, +         this.exists = exists;, +        if (fields != null) {, +        }, +++ b/src/main/java/org/elasticsearch/action/termvector/TransportSingleShardTermVectorAction.java, +                termVectorResponse.setExists(true);, +++ b/src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java, +import com.google.common.collect.Iterators;, +import java.io.IOException;, +import java.util.EnumSet;, +import java.util.Iterator;, +import java.util.Set;, +    private boolean exists = false;, +        final boolean docExists = isExists();, +        out.writeBoolean(hasTermVectors());, +        if (hasTermVectors()) {, +    private boolean hasTermVectors() {, +        assert (headerRef == null && termVectors == null) || (headerRef != null && termVectors != null);, +        return headerRef != null;, +    }, +, +        exists = in.readBoolean();, +        if (hasTermVectors() && isExists()) {, +        builder.field(FieldStrings.EXISTS, isExists());, +        if (!isExists()) {, +    public boolean isExists() {, +        return exists;, +    }, +    , +    public void setExists(boolean exists) {, +         this.exists = exists;, +        if (fields != null) {, +        }, +++ b/src/main/java/org/elasticsearch/action/termvector/TransportSingleShardTermVectorAction.java, +                termVectorResponse.setExists(true);, +++ b/src/test/java/org/elasticsearch/test/integration/termvectors/GetTermVectorTests.java, +        outResponse.setExists(true);, +        outResponse = new TermVectorResponse("a", "b", "c");, +        writeEmptyTermVector(outResponse);, +        // write, +        outBuffer = new ByteArrayOutputStream();, +        out = new OutputStreamStreamOutput(outBuffer);, +        outResponse.writeTo(out);, +, +        // read, +        esInBuffer = new ByteArrayInputStream(outBuffer.toByteArray());, +        esBuffer = new InputStreamStreamInput(esInBuffer);, +        inResponse = new TermVectorResponse("a", "b", "c");, +        inResponse.readFrom(esBuffer);, +        assertTrue(inResponse.isExists());]