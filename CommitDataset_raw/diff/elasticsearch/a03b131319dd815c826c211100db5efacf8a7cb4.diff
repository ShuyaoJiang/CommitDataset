[+++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +            builder.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(builder.getNestedFilter()));, +            mutated.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(mutated.getNestedFilter()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +            builder.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(builder.getNestedFilter()));, +            mutated.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(mutated.getNestedFilter()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderTests.java, +            result.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(result.getNestedFilter()));, +            result.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(original.getNestedFilter()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +            builder.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(builder.getNestedFilter()));, +            mutated.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(mutated.getNestedFilter()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderTests.java, +            result.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(result.getNestedFilter()));, +            result.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(original.getNestedFilter()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/NestedQueryBuilderGenerator.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.sort;, +, +import org.elasticsearch.index.query.IdsQueryBuilder;, +import org.elasticsearch.index.query.MatchAllQueryBuilder;, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.index.query.TermQueryBuilder;, +import org.elasticsearch.test.ESTestCase;, +, +import java.util.Arrays;, +import java.util.List;, +, +public class NestedQueryBuilderGenerator {, +    private NestedQueryBuilderGenerator() {, +        // this is a helper class only, doesn't need a constructor, +    }, +, +    private static List<QueryBuilder<?>> builders = Arrays.asList(, +            new MatchAllQueryBuilder(),, +            new IdsQueryBuilder(),, +            new TermQueryBuilder(ESTestCase.randomAsciiOfLengthBetween(1, 10), ESTestCase.randomDouble()));, +, +    public static QueryBuilder<?> nestedFilter(QueryBuilder<?> original) {, +        @SuppressWarnings("rawtypes"), +        QueryBuilder nested = ESTestCase.randomValueOtherThan(original, () -> ESTestCase.randomFrom(builders));, +        nested.boost((float) ESTestCase.randomDoubleBetween(0, 10, false));, +        return nested;, +    }, +}, +++ b/core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java, +            builder.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(builder.getNestedFilter()));, +            mutated.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(mutated.getNestedFilter()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderTests.java, +            result.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(result.getNestedFilter()));, +            result.setNestedFilter(NestedQueryBuilderGenerator.nestedFilter(original.getNestedFilter()));, +++ b/core/src/test/java/org/elasticsearch/search/sort/NestedQueryBuilderGenerator.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.sort;, +, +import org.elasticsearch.index.query.IdsQueryBuilder;, +import org.elasticsearch.index.query.MatchAllQueryBuilder;, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.index.query.TermQueryBuilder;, +import org.elasticsearch.test.ESTestCase;, +, +import java.util.Arrays;, +import java.util.List;, +]