[+++ b/core/src/main/java/org/elasticsearch/index/query/SpanTermQueryBuilder.java, +        String fieldName = null;, +        XContentParser.Token token;, +        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {, +            if (token == XContentParser.Token.FIELD_NAME) {, +                currentFieldName = parser.currentName();, +            } else if (token == XContentParser.Token.START_OBJECT) {, +                if (fieldName != null) {, +                    throw new ParsingException(parser.getTokenLocation(), "[span_term] query doesn't support multiple fields, found [", +                            + fieldName + "] and [" + currentFieldName + "]");, +                }, +                fieldName = currentFieldName;, +                fieldName = parser.currentName();, +++ b/core/src/main/java/org/elasticsearch/index/query/SpanTermQueryBuilder.java, +        String fieldName = null;, +        XContentParser.Token token;, +        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {, +            if (token == XContentParser.Token.FIELD_NAME) {, +                currentFieldName = parser.currentName();, +            } else if (token == XContentParser.Token.START_OBJECT) {, +                if (fieldName != null) {, +                    throw new ParsingException(parser.getTokenLocation(), "[span_term] query doesn't support multiple fields, found [", +                            + fieldName + "] and [" + currentFieldName + "]");, +                }, +                fieldName = currentFieldName;, +                fieldName = parser.currentName();, +++ b/core/src/test/java/org/elasticsearch/index/query/SpanTermQueryBuilderTests.java, +import org.elasticsearch.common.ParsingException;, +, +    public void testParseFailsWithMultipleFields() throws IOException {, +        String json = "{\n" +, +                "  \"span_term\" : {\n" +, +                "    \"message1\" : {\n" +, +                "      \"term\" : \"this\"\n" +, +                "    },\n" +, +                "    \"message2\" : {\n" +, +                "      \"term\" : \"this\"\n" +, +                "    }\n" +, +                "  }\n" +, +                "}";, +, +        try {, +            parseQuery(json);, +            fail("parseQuery should have failed");, +        } catch(ParsingException e) {, +            assertEquals("[span_term] query doesn't support multiple fields, found [message1] and [message2]", e.getMessage());, +        }, +    }, +]