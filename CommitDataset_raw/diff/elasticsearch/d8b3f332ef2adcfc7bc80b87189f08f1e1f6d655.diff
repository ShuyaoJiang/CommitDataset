[+++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java, +import static java.net.HttpURLConnection.HTTP_NOT_FOUND;, +        final ReadChannel readChannel = SocketAccess.doPrivilegedIOException(() -> client().reader(blobId));, +                try {, +                } catch (StorageException e) {, +                    if (e.getCode() == HTTP_NOT_FOUND) {, +                        throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +                    }, +                    throw e;, +                }, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java, +import static java.net.HttpURLConnection.HTTP_NOT_FOUND;, +        final ReadChannel readChannel = SocketAccess.doPrivilegedIOException(() -> client().reader(blobId));, +                try {, +                } catch (StorageException e) {, +                    if (e.getCode() == HTTP_NOT_FOUND) {, +                        throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +                    }, +                    throw e;, +                }, +++ b/plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/MockStorage.java, +, +            final ReadableByteChannel readableByteChannel;, +            if (bytes != null) {, +                readableByteChannel = Channels.newChannel(new ByteArrayInputStream(bytes));, +            } else {, +                readableByteChannel = new ReadableByteChannel() {, +                    @Override, +                    public int read(ByteBuffer dst) throws IOException {, +                        throw new StorageException(404, "Object not found");, +                    }, +, +                    @Override, +                    public boolean isOpen() {, +                        return false;, +                    }, +, +                    @Override, +                    public void close() throws IOException {, +                    }, +                };, +            }, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStore.java, +import static java.net.HttpURLConnection.HTTP_NOT_FOUND;, +        final ReadChannel readChannel = SocketAccess.doPrivilegedIOException(() -> client().reader(blobId));, +                try {, +                } catch (StorageException e) {, +                    if (e.getCode() == HTTP_NOT_FOUND) {, +                        throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +                    }, +                    throw e;, +                }, +++ b/plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/MockStorage.java, +, +            final ReadableByteChannel readableByteChannel;, +            if (bytes != null) {, +                readableByteChannel = Channels.newChannel(new ByteArrayInputStream(bytes));, +            } else {, +                readableByteChannel = new ReadableByteChannel() {, +                    @Override, +                    public int read(ByteBuffer dst) throws IOException {, +                        throw new StorageException(404, "Object not found");, +                    }, +, +                    @Override, +                    public boolean isOpen() {, +                        return false;, +                    }, +, +                    @Override, +                    public void close() throws IOException {, +                    }, +                };, +            }, +++ b/test/framework/src/main/java/org/elasticsearch/repositories/ESBlobStoreContainerTestCase.java, +            expectThrows(NoSuchFileException.class, () -> {, +                try (InputStream is = container.readBlob("non-existing")) {, +                    is.read();, +                }, +            });]