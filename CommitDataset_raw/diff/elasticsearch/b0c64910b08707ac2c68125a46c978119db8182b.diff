[+++ b/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +class PluginBuildPlugin extends BuildPlugin {, +    void apply(Project project) {, +        // this afterEvaluate must happen before the afterEvaluate added by integTest configure,, +            project.tasks.run.dependsOn(project.bundlePlugin), +        RestIntegTestTask.configure(project), +        RunTask.configure(project), +        Task bundle = configureBundleTask(project), +        project.configurations.archives.artifacts.removeAll { it.archiveTask.is project.jar }, +        project.configurations.getByName('default').extendsFrom = [], +        project.artifacts {, +            archives bundle, +            'default' bundle, +    static void configureDependencies(Project project) {, +    static Task configureBundleTask(Project project) {, +        PluginPropertiesTask buildProperties = project.tasks.create(name: 'pluginProperties', type: PluginPropertiesTask), +        File pluginMetadata = project.file("src/main/plugin-metadata"), +        project.sourceSets.test {, +            output.dir(buildProperties.generatedResourcesDir, builtBy: 'pluginProperties'), +            resources {, +                srcDir pluginMetadata, +        }, +        Task bundle = project.tasks.create(name: 'bundlePlugin', type: Zip, dependsOn: [project.jar, buildProperties]), +        bundle.configure {, +            from buildProperties, +            from pluginMetadata, +            from project.jar, +            from bundle.project.configurations.runtime - bundle.project.configurations.provided, +        return bundle, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +class PluginBuildPlugin extends BuildPlugin {, +    void apply(Project project) {, +        // this afterEvaluate must happen before the afterEvaluate added by integTest configure,, +            project.tasks.run.dependsOn(project.bundlePlugin), +        RestIntegTestTask.configure(project), +        RunTask.configure(project), +        Task bundle = configureBundleTask(project), +        project.configurations.archives.artifacts.removeAll { it.archiveTask.is project.jar }, +        project.configurations.getByName('default').extendsFrom = [], +        project.artifacts {, +            archives bundle, +            'default' bundle, +    static void configureDependencies(Project project) {, +    static Task configureBundleTask(Project project) {, +        PluginPropertiesTask buildProperties = project.tasks.create(name: 'pluginProperties', type: PluginPropertiesTask), +        File pluginMetadata = project.file("src/main/plugin-metadata"), +        project.sourceSets.test {, +            output.dir(buildProperties.generatedResourcesDir, builtBy: 'pluginProperties'), +            resources {, +                srcDir pluginMetadata, +        }, +        Task bundle = project.tasks.create(name: 'bundlePlugin', type: Zip, dependsOn: [project.jar, buildProperties]), +        bundle.configure {, +            from buildProperties, +            from pluginMetadata, +            from project.jar, +            from bundle.project.configurations.runtime - bundle.project.configurations.provided, +        return bundle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String distribution = 'zip', +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +class PluginBuildPlugin extends BuildPlugin {, +    void apply(Project project) {, +        // this afterEvaluate must happen before the afterEvaluate added by integTest configure,, +            project.tasks.run.dependsOn(project.bundlePlugin), +        RestIntegTestTask.configure(project), +        RunTask.configure(project), +        Task bundle = configureBundleTask(project), +        project.configurations.archives.artifacts.removeAll { it.archiveTask.is project.jar }, +        project.configurations.getByName('default').extendsFrom = [], +        project.artifacts {, +            archives bundle, +            'default' bundle, +    static void configureDependencies(Project project) {, +    static Task configureBundleTask(Project project) {, +        PluginPropertiesTask buildProperties = project.tasks.create(name: 'pluginProperties', type: PluginPropertiesTask), +        File pluginMetadata = project.file("src/main/plugin-metadata"), +        project.sourceSets.test {, +            output.dir(buildProperties.generatedResourcesDir, builtBy: 'pluginProperties'), +            resources {, +                srcDir pluginMetadata, +        }, +        Task bundle = project.tasks.create(name: 'bundlePlugin', type: Zip, dependsOn: [project.jar, buildProperties]), +        bundle.configure {, +            from buildProperties, +            from pluginMetadata, +            from project.jar, +            from bundle.project.configurations.runtime - bundle.project.configurations.provided, +        return bundle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    String distribution = 'zip', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        String packaging = distro == 'tar' ? 'tar.gz' : distro, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +class PluginBuildPlugin extends BuildPlugin {]