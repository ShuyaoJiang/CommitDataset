[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private ByteSizeValue staticFileSize = new ByteSizeValue(5, ByteSizeUnit.MB);, +    private ByteSizeValue dynamicFileSize = new ByteSizeValue(1, ByteSizeUnit.MB);, +    public SimpleStoreBenchmark staticFileSize(ByteSizeValue staticFileSize) {, +    public SimpleStoreBenchmark dynamicFileSize(ByteSizeValue dynamicFileSize) {, +        System.out.println("Size of [" + staticFiles.length + "], each with size [" + staticFileSize + "], is " + new ByteSizeValue(bytesTaken, ByteSizeUnit.BYTES));, +                .numberStaticFiles(5).staticFileSize(new ByteSizeValue(5, ByteSizeUnit.MB)), +                .dynamicFileSize(new ByteSizeValue(1, ByteSizeUnit.MB)), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private ByteSizeValue staticFileSize = new ByteSizeValue(5, ByteSizeUnit.MB);, +    private ByteSizeValue dynamicFileSize = new ByteSizeValue(1, ByteSizeUnit.MB);, +    public SimpleStoreBenchmark staticFileSize(ByteSizeValue staticFileSize) {, +    public SimpleStoreBenchmark dynamicFileSize(ByteSizeValue dynamicFileSize) {, +        System.out.println("Size of [" + staticFiles.length + "], each with size [" + staticFileSize + "], is " + new ByteSizeValue(bytesTaken, ByteSizeUnit.BYTES));, +                .numberStaticFiles(5).staticFileSize(new ByteSizeValue(5, ByteSizeUnit.MB)), +                .dynamicFileSize(new ByteSizeValue(1, ByteSizeUnit.MB)), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/util/lucene/versioned/VersionedMapBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +        System.out.println("Size of [" + writerIterations + "] entries is " + new ByteSizeValue(bytesTaken));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private ByteSizeValue staticFileSize = new ByteSizeValue(5, ByteSizeUnit.MB);, +    private ByteSizeValue dynamicFileSize = new ByteSizeValue(1, ByteSizeUnit.MB);, +    public SimpleStoreBenchmark staticFileSize(ByteSizeValue staticFileSize) {, +    public SimpleStoreBenchmark dynamicFileSize(ByteSizeValue dynamicFileSize) {, +        System.out.println("Size of [" + staticFiles.length + "], each with size [" + staticFileSize + "], is " + new ByteSizeValue(bytesTaken, ByteSizeUnit.BYTES));, +                .numberStaticFiles(5).staticFileSize(new ByteSizeValue(5, ByteSizeUnit.MB)), +                .dynamicFileSize(new ByteSizeValue(1, ByteSizeUnit.MB)), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/util/lucene/versioned/VersionedMapBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +        System.out.println("Size of [" + writerIterations + "] entries is " + new ByteSizeValue(bytesTaken));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +    public ByteSizeValue storeSize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getStoreSize() {, +    public ByteSizeValue estimatedFlushableMemorySize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getEstimatedFlushableMemorySize() {, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private ByteSizeValue staticFileSize = new ByteSizeValue(5, ByteSizeUnit.MB);, +    private ByteSizeValue dynamicFileSize = new ByteSizeValue(1, ByteSizeUnit.MB);, +    public SimpleStoreBenchmark staticFileSize(ByteSizeValue staticFileSize) {, +    public SimpleStoreBenchmark dynamicFileSize(ByteSizeValue dynamicFileSize) {, +        System.out.println("Size of [" + staticFiles.length + "], each with size [" + staticFileSize + "], is " + new ByteSizeValue(bytesTaken, ByteSizeUnit.BYTES));, +                .numberStaticFiles(5).staticFileSize(new ByteSizeValue(5, ByteSizeUnit.MB)), +                .dynamicFileSize(new ByteSizeValue(1, ByteSizeUnit.MB)), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/util/lucene/versioned/VersionedMapBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +        System.out.println("Size of [" + writerIterations + "] entries is " + new ByteSizeValue(bytesTaken));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +    public ByteSizeValue storeSize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getStoreSize() {, +    public ByteSizeValue estimatedFlushableMemorySize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getEstimatedFlushableMemorySize() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +    public ByteSizeValue storeSize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getStoreSize() {, +    public ByteSizeValue estimatedFlushableMemorySize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getEstimatedFlushableMemorySize() {, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +    private ByteSizeValue staticFileSize = new ByteSizeValue(5, ByteSizeUnit.MB);, +    private ByteSizeValue dynamicFileSize = new ByteSizeValue(1, ByteSizeUnit.MB);, +    public SimpleStoreBenchmark staticFileSize(ByteSizeValue staticFileSize) {, +    public SimpleStoreBenchmark dynamicFileSize(ByteSizeValue dynamicFileSize) {, +        System.out.println("Size of [" + staticFiles.length + "], each with size [" + staticFileSize + "], is " + new ByteSizeValue(bytesTaken, ByteSizeUnit.BYTES));, +                .numberStaticFiles(5).staticFileSize(new ByteSizeValue(5, ByteSizeUnit.MB)), +                .dynamicFileSize(new ByteSizeValue(1, ByteSizeUnit.MB)), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/util/lucene/versioned/VersionedMapBenchmark.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +        System.out.println("Size of [" + writerIterations + "] entries is " + new ByteSizeValue(bytesTaken));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +    public ByteSizeValue storeSize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getStoreSize() {, +    public ByteSizeValue estimatedFlushableMemorySize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getEstimatedFlushableMemorySize() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +    public ByteSizeValue storeSize() {, +        return new ByteSizeValue(bytes);, +    public ByteSizeValue getStoreSize() {, +    public ByteSizeValue estimatedFlushableMemorySize() {]