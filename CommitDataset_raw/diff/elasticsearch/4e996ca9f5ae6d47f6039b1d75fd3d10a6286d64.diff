[+++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final ReplicaRequest replicaRequest = primaryResult.replicaRequest();, +        if (replicaRequest != null) {, +            assert replicaRequest.primaryTerm() > 0 : "replicaRequest doesn't have a primary term";, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final ReplicaRequest replicaRequest = primaryResult.replicaRequest();, +        if (replicaRequest != null) {, +            assert replicaRequest.primaryTerm() > 0 : "replicaRequest doesn't have a primary term";, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +, +        @Override // used for trace logging when acquiring or releasing operation lock, +        public String toString() {, +            return "AsyncPrimaryAction" +, +                    "[request=" + request + "]", +                    + "[targetAllocationId=" + targetAllocationID + "]", +                    + "[taskId=" + replicationTask.getId() + "]";, +        }, +        @Override // used for trace logging when acquiring or releasing operation lock, +        public String toString() {, +            return "AsyncReplicaAction", +                    + "[request=" + request + "]", +                    + "[targetAllocationId=" + targetAllocationID + "]", +                    + "[taskId=" + task.getId() + "]";, +        }, +, +, +            @Override, +            public String toString() {, +                return onReferenceAcquired.toString();, +            }, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final ReplicaRequest replicaRequest = primaryResult.replicaRequest();, +        if (replicaRequest != null) {, +            assert replicaRequest.primaryTerm() > 0 : "replicaRequest doesn't have a primary term";, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +, +        @Override // used for trace logging when acquiring or releasing operation lock, +        public String toString() {, +            return "AsyncPrimaryAction" +, +                    "[request=" + request + "]", +                    + "[targetAllocationId=" + targetAllocationID + "]", +                    + "[taskId=" + replicationTask.getId() + "]";, +        }, +        @Override // used for trace logging when acquiring or releasing operation lock, +        public String toString() {, +            return "AsyncReplicaAction", +                    + "[request=" + request + "]", +                    + "[targetAllocationId=" + targetAllocationID + "]", +                    + "[taskId=" + task.getId() + "]";, +        }, +, +, +            @Override, +            public String toString() {, +                return onReferenceAcquired.toString();, +            }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationsLock.java, +        if (logger.isTraceEnabled()) {, +            logger.trace("operation lock on [{}] closed", shardId);, +        }, +                releasable = tryAcquire(onAcquired.toString());, +    @Nullable private Releasable tryAcquire(String resource) throws InterruptedException {, +            if (logger.isTraceEnabled()) {, +                logger.trace("acquired operation lock on [{}] for resource [{}]", shardId, resource);, +            }, +                    if (logger.isTraceEnabled()) {, +                        logger.trace("released operation lock on [{}] for resource [{}]", shardId, resource);, +                    }, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +        final ReplicaRequest replicaRequest = primaryResult.replicaRequest();, +        if (replicaRequest != null) {, +            assert replicaRequest.primaryTerm() > 0 : "replicaRequest doesn't have a primary term";, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +, +        @Override // used for trace logging when acquiring or releasing operation lock, +        public String toString() {, +            return "AsyncPrimaryAction" +, +                    "[request=" + request + "]", +                    + "[targetAllocationId=" + targetAllocationID + "]", +                    + "[taskId=" + replicationTask.getId() + "]";, +        }, +        @Override // used for trace logging when acquiring or releasing operation lock, +        public String toString() {, +            return "AsyncReplicaAction", +                    + "[request=" + request + "]", +                    + "[targetAllocationId=" + targetAllocationID + "]", +                    + "[taskId=" + task.getId() + "]";, +        }, +, +, +            @Override, +            public String toString() {, +                return onReferenceAcquired.toString();, +            }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationsLock.java, +        if (logger.isTraceEnabled()) {, +            logger.trace("operation lock on [{}] closed", shardId);, +        }, +                releasable = tryAcquire(onAcquired.toString());, +    @Nullable private Releasable tryAcquire(String resource) throws InterruptedException {]