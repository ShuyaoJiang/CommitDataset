[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +        searchSourceBuilder.explain(request.paramAsBoolean("explain", false));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java, +        searchSourceBuilder.explain(request.paramAsBoolean("explain", false));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/SortParseElement.java, +import java.io.IOException;, +        JsonToken token = jp.getCurrentToken();, +        if (token == JsonToken.START_ARRAY) {, +            while ((token = jp.nextToken()) != JsonToken.END_ARRAY) {, +                if (token == JsonToken.START_OBJECT) {, +                    addCompoundSortField(jp, context, sortFields);, +                } else if (token == JsonToken.VALUE_STRING) {, +                    addSortField(context, sortFields, jp.getText(), false, -1);, +                }, +            }, +        } else {, +            addCompoundSortField(jp, context, sortFields);, +        }, +        if (!sortFields.isEmpty()) {, +            context.sort(new Sort(sortFields.toArray(new SortField[sortFields.size()])));, +        }, +    }, +, +    private void addCompoundSortField(JsonParser jp, SearchContext context, List<SortField> sortFields) throws IOException {, +        JsonToken token;, +                addSortField(context, sortFields, fieldName, reverse, type);, +            }, +        }, +    }, +, +    private void addSortField(SearchContext context, List<SortField> sortFields, String fieldName, boolean reverse, int type) {]