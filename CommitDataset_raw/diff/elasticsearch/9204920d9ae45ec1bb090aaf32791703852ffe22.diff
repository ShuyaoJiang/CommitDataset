[+++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME), +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME), +++ b/elasticsearch/x-pack/build.gradle, +  compile project(path: ':modules:transport-netty', configuration: 'runtime'), +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME), +++ b/elasticsearch/x-pack/build.gradle, +  compile project(path: ':modules:transport-netty', configuration: 'runtime'), +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/license/plugin/LicensesServiceClusterTests.java, +import org.elasticsearch.transport.NettyPlugin;, +import java.util.Arrays;, +        return Arrays.asList(XPackPlugin.class, NettyPlugin.class);, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME), +++ b/elasticsearch/x-pack/build.gradle, +  compile project(path: ':modules:transport-netty', configuration: 'runtime'), +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/license/plugin/LicensesServiceClusterTests.java, +import org.elasticsearch.transport.NettyPlugin;, +import java.util.Arrays;, +        return Arrays.asList(XPackPlugin.class, NettyPlugin.class);, +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/xpack/TribeTransportTestCase.java, +                .put(NetworkModule.HTTP_ENABLED.getKey(), false), +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME), +++ b/elasticsearch/x-pack/build.gradle, +  compile project(path: ':modules:transport-netty', configuration: 'runtime'), +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/license/plugin/LicensesServiceClusterTests.java, +import org.elasticsearch.transport.NettyPlugin;, +import java.util.Arrays;, +        return Arrays.asList(XPackPlugin.class, NettyPlugin.class);, +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/xpack/TribeTransportTestCase.java, +                .put(NetworkModule.HTTP_ENABLED.getKey(), false), +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/agent/collector/AbstractCollectorTestCase.java, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME), +++ b/elasticsearch/x-pack/build.gradle, +  compile project(path: ':modules:transport-netty', configuration: 'runtime'), +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/license/plugin/LicensesServiceClusterTests.java, +import org.elasticsearch.transport.NettyPlugin;, +import java.util.Arrays;, +        return Arrays.asList(XPackPlugin.class, NettyPlugin.class);, +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/xpack/TribeTransportTestCase.java, +                .put(NetworkModule.HTTP_ENABLED.getKey(), false), +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/agent/collector/AbstractCollectorTestCase.java, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/agent/settings/MonitoringSettingsTests.java, +import org.elasticsearch.plugins.Plugin;, +import org.elasticsearch.transport.NettyPlugin;, +import java.util.ArrayList;, +import java.util.Collection;, +    @Override, +    protected Collection<Class<? extends Plugin>> nodePlugins() {, +        ArrayList<Class<? extends Plugin>> plugins = new ArrayList<>(super.nodePlugins());, +        plugins.add(NettyPlugin.class); // for http, +        return plugins;, +    }, +, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME), +++ b/elasticsearch/x-pack/build.gradle, +  compile project(path: ':modules:transport-netty', configuration: 'runtime'), +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/license/plugin/LicensesServiceClusterTests.java, +import org.elasticsearch.transport.NettyPlugin;, +import java.util.Arrays;, +        return Arrays.asList(XPackPlugin.class, NettyPlugin.class);, +++ b/elasticsearch/x-pack/license-plugin/src/test/java/org/elasticsearch/xpack/TribeTransportTestCase.java, +                .put(NetworkModule.HTTP_ENABLED.getKey(), false), +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/agent/collector/AbstractCollectorTestCase.java, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/agent/settings/MonitoringSettingsTests.java, +import org.elasticsearch.plugins.Plugin;, +import org.elasticsearch.transport.NettyPlugin;, +import java.util.ArrayList;, +import java.util.Collection;, +    @Override, +    protected Collection<Class<? extends Plugin>> nodePlugins() {, +        ArrayList<Class<? extends Plugin>> plugins = new ArrayList<>(super.nodePlugins());, +        plugins.add(NettyPlugin.class); // for http, +        return plugins;, +    }, +, +++ b/elasticsearch/x-pack/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/security/MonitoringInternalClientTests.java, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/java/org/elasticsearch/smoketest/SmokeTestMonitoringWithSecurityIT.java, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.test.junit.annotations.Network;, +                .put(NetworkModule.TRANSPORT_TYPE_KEY, Security.NAME)]