[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +                    .put(settings), +                    .put("index.store.bytebuffer.direct", true), +                    .put(settings), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +                    .put(settings), +                    .put("index.store.bytebuffer.direct", true), +                    .put(settings), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/monitor/memory/SimpleMemoryMonitorBenchmark.java, +                .put("cluster.routing.schedule", 200, TimeUnit.MILLISECONDS), +                .put(SETTING_NUMBER_OF_SHARDS, 5), +                .put(SETTING_NUMBER_OF_REPLICAS, 1), +        Server server1 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server1")).server();, +        Server server2 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server2")).server();, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +                    .put(settings), +                    .put("index.store.bytebuffer.direct", true), +                    .put(settings), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/monitor/memory/SimpleMemoryMonitorBenchmark.java, +                .put("cluster.routing.schedule", 200, TimeUnit.MILLISECONDS), +                .put(SETTING_NUMBER_OF_SHARDS, 5), +                .put(SETTING_NUMBER_OF_REPLICAS, 1), +        Server server1 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server1")).server();, +        Server server2 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server2")).server();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Settings updated = settingsBuilder().put(tuple.v1()).put(JmxService.SettingsConstants.CREATE_CONNECTOR, true).build();, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +                    .put(settings), +                    .put("index.store.bytebuffer.direct", true), +                    .put(settings), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/monitor/memory/SimpleMemoryMonitorBenchmark.java, +                .put("cluster.routing.schedule", 200, TimeUnit.MILLISECONDS), +                .put(SETTING_NUMBER_OF_SHARDS, 5), +                .put(SETTING_NUMBER_OF_REPLICAS, 1), +        Server server1 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server1")).server();, +        Server server2 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server2")).server();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Settings updated = settingsBuilder().put(tuple.v1()).put(JmxService.SettingsConstants.CREATE_CONNECTOR, true).build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, + * @author kimchy (shay.banon), +        this.settings = settingsBuilder().put(tuple.v1()), +                .put("network.server", false), +                .put("discovery.client", true), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +                    .put(settings), +                    .put("index.store.bytebuffer.direct", true), +                    .put(settings), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/monitor/memory/SimpleMemoryMonitorBenchmark.java, +                .put("cluster.routing.schedule", 200, TimeUnit.MILLISECONDS), +                .put(SETTING_NUMBER_OF_SHARDS, 5), +                .put(SETTING_NUMBER_OF_REPLICAS, 1), +        Server server1 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server1")).server();, +        Server server2 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server2")).server();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Settings updated = settingsBuilder().put(tuple.v1()).put(JmxService.SettingsConstants.CREATE_CONNECTOR, true).build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, + * @author kimchy (shay.banon), +        this.settings = settingsBuilder().put(tuple.v1()), +                .put("network.server", false), +                .put("discovery.client", true), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +            settings = settingsBuilder().put(settings).put(SETTING_NUMBER_OF_SHARDS, numberOfShards).build();, +            settings = settingsBuilder().put(settings).put(SETTING_NUMBER_OF_REPLICAS, numberOfReplicas).build();, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +                    .put(settings), +                    .put("index.store.bytebuffer.direct", true), +                    .put(settings), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/monitor/memory/SimpleMemoryMonitorBenchmark.java, +                .put("cluster.routing.schedule", 200, TimeUnit.MILLISECONDS), +                .put(SETTING_NUMBER_OF_SHARDS, 5), +                .put(SETTING_NUMBER_OF_REPLICAS, 1), +        Server server1 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server1")).server();, +        Server server2 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server2")).server();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Settings updated = settingsBuilder().put(tuple.v1()).put(JmxService.SettingsConstants.CREATE_CONNECTOR, true).build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java, + * @author kimchy (shay.banon), +        this.settings = settingsBuilder().put(tuple.v1()), +                .put("network.server", false), +                .put("discovery.client", true), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +            settings = settingsBuilder().put(settings).put(SETTING_NUMBER_OF_SHARDS, numberOfShards).build();, +            settings = settingsBuilder().put(settings).put(SETTING_NUMBER_OF_REPLICAS, numberOfReplicas).build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java, +                ImmutableSettings.Builder indexSettingsBuilder = settingsBuilder().put(indexSettings);, +                    indexSettingsBuilder.put(SETTING_NUMBER_OF_SHARDS, settings.getAsInt(SETTING_NUMBER_OF_SHARDS, 5));, +                    indexSettingsBuilder.put(SETTING_NUMBER_OF_REPLICAS, settings.getAsInt(SETTING_NUMBER_OF_REPLICAS, 1));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/store/SimpleStoreBenchmark.java, +                    .put(settings), +                    .put("index.store.bytebuffer.direct", true), +                    .put(settings), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/monitor/memory/SimpleMemoryMonitorBenchmark.java, +                .put("cluster.routing.schedule", 200, TimeUnit.MILLISECONDS), +                .put(SETTING_NUMBER_OF_SHARDS, 5), +                .put(SETTING_NUMBER_OF_REPLICAS, 1), +        Server server1 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server1")).server();, +        Server server2 = serverBuilder().settings(settingsBuilder().put(settings).put("name", "server2")).server();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Settings updated = settingsBuilder().put(tuple.v1()).put(JmxService.SettingsConstants.CREATE_CONNECTOR, true).build();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClient.java]