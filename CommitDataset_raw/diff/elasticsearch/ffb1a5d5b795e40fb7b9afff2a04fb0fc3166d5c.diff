[+++ b/docs/reference/search/multi-search.asciidoc, +The request parameter `max_concurrent_shard_requests` can be used to control the, +maximum number of concurrent shard requests the each sub search request will execute., +This parameter should be used to protect a single request from overloading a cluster, +(e.g., a default request will hit all indices in a cluster which could cause shard request rejections, +if the number of shards per node is high). This default is based on the number of, +data nodes in the cluster but at most `256`.In certain scenarios parallelism isn't achieved through, +concurrent request such that this protection will result in poor performance. For, +instance in an environment where only a very low number of concurrent search requests are expected, +it might help to increase this value to a higher number., +, +++ b/docs/reference/search/multi-search.asciidoc, +The request parameter `max_concurrent_shard_requests` can be used to control the, +maximum number of concurrent shard requests the each sub search request will execute., +This parameter should be used to protect a single request from overloading a cluster, +(e.g., a default request will hit all indices in a cluster which could cause shard request rejections, +if the number of shards per node is high). This default is based on the number of, +data nodes in the cluster but at most `256`.In certain scenarios parallelism isn't achieved through, +concurrent request such that this protection will result in poor performance. For, +instance in an environment where only a very low number of concurrent search requests are expected, +it might help to increase this value to a higher number., +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/api/msearch.json, +        },, +        "max_concurrent_shard_requests" : {, +          "type" : "number",, +          "description" : "The number of concurrent shard requests each sub search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests",, +          "default" : "The default grows with the number of nodes in the cluster but is at most 256.", +++ b/docs/reference/search/multi-search.asciidoc, +The request parameter `max_concurrent_shard_requests` can be used to control the, +maximum number of concurrent shard requests the each sub search request will execute., +This parameter should be used to protect a single request from overloading a cluster, +(e.g., a default request will hit all indices in a cluster which could cause shard request rejections, +if the number of shards per node is high). This default is based on the number of, +data nodes in the cluster but at most `256`.In certain scenarios parallelism isn't achieved through, +concurrent request such that this protection will result in poor performance. For, +instance in an environment where only a very low number of concurrent search requests are expected, +it might help to increase this value to a higher number., +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/api/msearch.json, +        },, +        "max_concurrent_shard_requests" : {, +          "type" : "number",, +          "description" : "The number of concurrent shard requests each sub search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests",, +          "default" : "The default grows with the number of nodes in the cluster but is at most 256.", +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/msearch/10_basic.yml, +, +---, +"Least impact smoke test":, +# only passing these parameters to make sure they are consumed, +  - do:, +      max_concurrent_shard_requests: 1, +      max_concurrent_searches: 1, +      msearch:, +        body:, +          - index: index_*, +          - query:, +              match: {foo: foo}, +          - index: index_2, +          - query:, +              match_all: {}, +          - index: index_1, +          - query:, +              match: {foo: foo}, +          - index: index_3, +          - query:, +              match_all: {}, +          - type: test, +          - query:, +              match_all: {}, +, +  - match:  { responses.0.hits.total:     2  }, +  - match:  { responses.1.hits.total:     1  }, +  - match:  { responses.2.hits.total:     1  }, +  - match:  { responses.3.error.root_cause.0.type: index_not_found_exception }, +  - match:  { responses.3.error.root_cause.0.reason: "/no.such.index/" }, +  - match:  { responses.3.error.root_cause.0.index: index_3 }, +  - match:  { responses.4.hits.total:     4  }, +++ b/docs/reference/search/multi-search.asciidoc, +The request parameter `max_concurrent_shard_requests` can be used to control the, +maximum number of concurrent shard requests the each sub search request will execute., +This parameter should be used to protect a single request from overloading a cluster, +(e.g., a default request will hit all indices in a cluster which could cause shard request rejections, +if the number of shards per node is high). This default is based on the number of, +data nodes in the cluster but at most `256`.In certain scenarios parallelism isn't achieved through, +concurrent request such that this protection will result in poor performance. For, +instance in an environment where only a very low number of concurrent search requests are expected, +it might help to increase this value to a higher number., +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/api/msearch.json, +        },, +        "max_concurrent_shard_requests" : {, +          "type" : "number",, +          "description" : "The number of concurrent shard requests each sub search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests",, +          "default" : "The default grows with the number of nodes in the cluster but is at most 256.", +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/msearch/10_basic.yml, +, +---, +"Least impact smoke test":, +# only passing these parameters to make sure they are consumed]