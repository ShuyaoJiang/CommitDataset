[+++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java, +final class GlobalOrdinalMapping extends SortedSetDocValues {, +    public long getGlobalOrd(long segmentOrd) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java, +final class GlobalOrdinalMapping extends SortedSetDocValues {, +    public long getGlobalOrd(long segmentOrd) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSource.java, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java, +final class GlobalOrdinalMapping extends SortedSetDocValues {, +    public long getGlobalOrd(long segmentOrd) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSource.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java, +import java.util.function.LongUnaryOperator;, +        private LongUnaryOperator mapping;, +            if (mapping != null) {, +                mapSegmentCountsToGlobalCounts(mapping);, +            final SortedSetDocValues segmentOrds = valuesSource.ordinalsValues(ctx);, +            mapping = valuesSource.globalOrdinalsMapping(ctx);, +        protected void doPostCollection() throws IOException {, +            if (mapping != null) {, +                mapSegmentCountsToGlobalCounts(mapping);, +                mapping = null;, +        private void mapSegmentCountsToGlobalCounts(LongUnaryOperator mapping) throws IOException {, +                final long globalOrd = mapping.applyAsLong(ord);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java, +final class GlobalOrdinalMapping extends SortedSetDocValues {, +    public long getGlobalOrd(long segmentOrd) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSource.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java, +import java.util.function.LongUnaryOperator;, +        private LongUnaryOperator mapping;, +            if (mapping != null) {, +                mapSegmentCountsToGlobalCounts(mapping);, +            final SortedSetDocValues segmentOrds = valuesSource.ordinalsValues(ctx);, +            mapping = valuesSource.globalOrdinalsMapping(ctx);, +        protected void doPostCollection() throws IOException {, +            if (mapping != null) {, +                mapSegmentCountsToGlobalCounts(mapping);, +                mapping = null;, +        private void mapSegmentCountsToGlobalCounts(LongUnaryOperator mapping) throws IOException {, +                final long globalOrd = mapping.applyAsLong(ord);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +    static Boolean REMAP_GLOBAL_ORDS, COLLECT_SEGMENT_ORDS;, +, +                , +                        // we use the static COLLECT_SEGMENT_ORDS to allow tests to force specific optimizations, +                        (COLLECT_SEGMENT_ORDS!= null ? COLLECT_SEGMENT_ORDS.booleanValue() : ratio <= 0.5 && maxOrd <= 2048)) {, +                boolean remapGlobalOrds;, +                if (REMAP_GLOBAL_ORDS != null) {, +                    // We use REMAP_GLOBAL_ORDS to allow tests to force specific optimizations, +                    remapGlobalOrds = REMAP_GLOBAL_ORDS.booleanValue();, +                } else {, +                    remapGlobalOrds = true;, +                }, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java, +final class GlobalOrdinalMapping extends SortedSetDocValues {, +    public long getGlobalOrd(long segmentOrd) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/composite/CompositeValuesSource.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java, +import java.util.function.LongUnaryOperator;, +        private LongUnaryOperator mapping;, +            if (mapping != null) {, +                mapSegmentCountsToGlobalCounts(mapping);, +            final SortedSetDocValues segmentOrds = valuesSource.ordinalsValues(ctx);, +            mapping = valuesSource.globalOrdinalsMapping(ctx);, +        protected void doPostCollection() throws IOException {, +            if (mapping != null) {, +                mapSegmentCountsToGlobalCounts(mapping);, +                mapping = null;, +        private void mapSegmentCountsToGlobalCounts(LongUnaryOperator mapping) throws IOException {, +                final long globalOrd = mapping.applyAsLong(ord);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +    static Boolean REMAP_GLOBAL_ORDS, COLLECT_SEGMENT_ORDS;, +, +                , +                        // we use the static COLLECT_SEGMENT_ORDS to allow tests to force specific optimizations, +                        (COLLECT_SEGMENT_ORDS!= null ? COLLECT_SEGMENT_ORDS.booleanValue() : ratio <= 0.5 && maxOrd <= 2048)) {, +                boolean remapGlobalOrds;, +                if (REMAP_GLOBAL_ORDS != null) {, +                    // We use REMAP_GLOBAL_ORDS to allow tests to force specific optimizations, +                    remapGlobalOrds = REMAP_GLOBAL_ORDS.booleanValue();, +                } else {, +                    remapGlobalOrds = true;, +                }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/support/MissingValues.java, +import java.util.function.LongUnaryOperator;, +, +            @Override, +            public LongUnaryOperator globalOrdinalsMapping(LeafReaderContext context) throws IOException {, +                return getGlobalMapping(valuesSource.ordinalsValues(context),, +                        valuesSource.globalOrdinalsValues(context),, +                        valuesSource.globalOrdinalsMapping(context), missing);, +            }, +    static LongUnaryOperator getGlobalMapping(SortedSetDocValues values, SortedSetDocValues globalValues,, +            LongUnaryOperator segmentToGlobalOrd, BytesRef missing) throws IOException {, +        final long missingGlobalOrd = globalValues.lookupTerm(missing);, +        final long missingSegmentOrd = values.lookupTerm(missing);, +, +        if (missingSegmentOrd >= 0) {, +            // the missing value exists in the segment, nothing to do]