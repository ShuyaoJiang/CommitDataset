[+++ b/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +                        float sc = getValue() * functionExplanation.getValue();, +                        float sc = functionExplanation.getValue();, +                        total += sc;, +                        multiply *= sc;, +                        max = Math.max(sc, max);, +                        min = Math.min(sc, min);, +                        Explanation res = new ComplexExplanation(true, sc, "custom score, product of:");, +                    float sc = 0;, +                            sc = total / count;, +                            sc = max;, +                            sc = min;, +                            sc = total;, +                            sc = multiply;, +                    sc *= getValue();, +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +                        float sc = getValue() * functionExplanation.getValue();, +                        float sc = functionExplanation.getValue();, +                        total += sc;, +                        multiply *= sc;, +                        max = Math.max(sc, max);, +                        min = Math.min(sc, min);, +                        Explanation res = new ComplexExplanation(true, sc, "custom score, product of:");, +                    float sc = 0;, +                            sc = total / count;, +                            sc = max;, +                            sc = min;, +                            sc = total;, +                            sc = multiply;, +                    sc *= getValue();, +++ b/src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java, +        Settings settings = settingsBuilder(), +                .put("indices.ttl.interval", purgeInterval), +                .put("index.number_of_shards", 2) // 2 shards to test TTL purge with routing properly, +                .put("cluster.routing.operation.use_type", false) // make sure we control the shard computation, +                .put("cluster.routing.operation.hash.type", "djb"), +                .build();, +        // Index one doc without routing and one doc with routing, +        client.prepareIndex("test", "type1", "with_routing").setSource("field1", "value1").setTTL(providedTTLValue).setRouting("routing").setRefresh(true).execute().actionGet();, +        // make sure the purger has done its job for all indexed docs that are expired, +        getResponse = client.prepareGet("test", "type1", "with_routing").setRouting("routing").setFields("_ttl").setRealtime(true).execute().actionGet();, +        assertThat(getResponse.exists(), equalTo(false));, +        getResponse = client.prepareGet("test", "type1", "with_routing").setRouting("routing").setFields("_ttl").setRealtime(true).execute().actionGet();, +        assertThat(getResponse.exists(), equalTo(false));, +        getResponse = client.prepareGet("test", "type1", "with_routing").setRouting("routing").setFields("_ttl").setRealtime(false).execute().actionGet();, +        assertThat(getResponse.exists(), equalTo(false));, +        getResponse = client.prepareGet("test", "type1", "with_routing").setRouting("routing").setFields("_ttl").setRealtime(false).execute().actionGet();, +        assertThat(getResponse.exists(), equalTo(false));]