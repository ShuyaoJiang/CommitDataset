[+++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getDataPath(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getDataPath(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RecoveryWithUnsupportedIndicesIT.java, +        Settings nodeSettings = prepareBackwardsDataDir(getDataPath(indexName + ".zip"), Node.HTTP_ENABLED, true);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getDataPath(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RecoveryWithUnsupportedIndicesIT.java, +        Settings nodeSettings = prepareBackwardsDataDir(getDataPath(indexName + ".zip"), Node.HTTP_ENABLED, true);, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/RoutingServiceTests.java, +        assertThat(clusterState.getRoutingNodes().hasUnassigned(), equalTo(false));, +                assertThat(routingService.hasReroutedAndClear(), equalTo(true));, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getDataPath(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RecoveryWithUnsupportedIndicesIT.java, +        Settings nodeSettings = prepareBackwardsDataDir(getDataPath(indexName + ".zip"), Node.HTTP_ENABLED, true);, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/RoutingServiceTests.java, +        assertThat(clusterState.getRoutingNodes().hasUnassigned(), equalTo(false));, +                assertThat(routingService.hasReroutedAndClear(), equalTo(true));, +++ b/qa/vagrant/pom.xml, +                                    <artifactId>discovery-ec2</artifactId>, +                                    <version>${elasticsearch.version}</version>, +                                    <type>zip</type>, +                                </artifactItem>, +                                <artifactItem>, +                                    <groupId>org.elasticsearch.plugin</groupId>, +                                    <artifactId>discovery-multicast</artifactId>, +                                    <version>${elasticsearch.version}</version>, +                                    <type>zip</type>, +                                </artifactItem>, +                                <artifactItem>, +                                    <groupId>org.elasticsearch.plugin</groupId>, +                                    <artifactId>mapper-murmur3</artifactId>, +                                    <version>${elasticsearch.version}</version>, +                                    <type>zip</type>, +                                </artifactItem>, +                                <artifactItem>, +                                    <groupId>org.elasticsearch.plugin</groupId>, +                                    <artifactId>repository-s3</artifactId>, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +        Path backwardsIndex = getDataPath(indexFile);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/RecoveryWithUnsupportedIndicesIT.java, +        Settings nodeSettings = prepareBackwardsDataDir(getDataPath(indexName + ".zip"), Node.HTTP_ENABLED, true);, +++ b/core/src/test/java/org/elasticsearch/cluster/routing/RoutingServiceTests.java, +        assertThat(clusterState.getRoutingNodes().hasUnassigned(), equalTo(false));, +                assertThat(routingService.hasReroutedAndClear(), equalTo(true));, +++ b/qa/vagrant/pom.xml, +                                    <artifactId>discovery-ec2</artifactId>, +                                    <version>${elasticsearch.version}</version>, +                                    <type>zip</type>, +                                </artifactItem>, +                                <artifactItem>, +                                    <groupId>org.elasticsearch.plugin</groupId>, +                                    <artifactId>discovery-multicast</artifactId>, +                                    <version>${elasticsearch.version}</version>, +                                    <type>zip</type>, +                                </artifactItem>, +                                <artifactItem>, +                                    <groupId>org.elasticsearch.plugin</groupId>, +                                    <artifactId>mapper-murmur3</artifactId>, +                                    <version>${elasticsearch.version}</version>, +                                    <type>zip</type>, +                                </artifactItem>, +                                <artifactItem>, +                                    <groupId>org.elasticsearch.plugin</groupId>, +                                    <artifactId>repository-s3</artifactId>, +++ b/qa/vagrant/src/test/resources/packaging/scripts/plugin_test_cases.bash, +# Note that all of the tests from here to the end of the file expect to be run, +# in sequence and don't take well to being run one at a time., +@test "[$GROUP] install jvm-example plugin" {, +    install_jvm_example, +}, +, +    install_and_check_plugin analysis icu icu4j-*.jar, +    install_and_check_plugin analysis kuromoji, +    install_and_check_plugin analysis phonetic commons-codec-*.jar, +    install_and_check_plugin analysis smartcn, +    install_and_check_plugin analysis stempel, +    install_and_check_plugin cloud azure azure-core-*.jar, +    install_and_check_plugin cloud gce google-api-client-*.jar, +@test "[$GROUP] install delete by query plugin" {, +    install_and_check_plugin - delete-by-query, +}, +, +@test "[$GROUP] install ec2 discovery plugin" {, +    install_and_check_plugin discovery ec2 aws-java-sdk-core-*.jar, +}, +, +@test "[$GROUP] install multicast discovery plugin" {, +    install_and_check_plugin discovery multicast, +    install_and_check_plugin lang javascript rhino-*.jar, +    install_and_check_plugin lang python jython-standalone-*.jar, +@test "[$GROUP] install murmur3 mapper plugin" {, +    install_and_check_plugin mapper murmur3, +@test "[$GROUP] install size mapper plugin" {, +    install_and_check_plugin mapper size, +}, +, +@test "[$GROUP] install s3 repository plugin" {]