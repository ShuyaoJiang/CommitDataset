[+++ b/src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java, +                    token = parser.nextToken(); //infinite loop without this line, +++ b/src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java, +                    token = parser.nextToken(); //infinite loop without this line, +++ b/src/test/java/org/elasticsearch/search/suggest/context/GeoLocationContextMappingTest.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.common.geo.GeoHashUtils;, +import org.elasticsearch.search.suggest.context.ContextMapping.ContextConfig;, +import java.util.ArrayList;, +import java.util.Arrays;, +, +    @Test, +    public void testUseWithDefaultGeoHash() throws Exception {, +        XContentBuilder builder = jsonBuilder().startObject().field("lat", 52d).field("lon", 4d).endObject();, +        XContentParser parser = XContentHelper.createParser(builder.bytes());, +        parser.nextToken();, +, +        String geohash = GeoHashUtils.encode(randomIntBetween(-90, +90), randomIntBetween(-180, +180));, +        HashMap<String, Object> config = new HashMap<>();, +        config.put("precision", 12);, +        config.put("default", geohash);, +        GeolocationContextMapping mapping = GeolocationContextMapping.load("foo", config);, +        mapping.parseQuery("foo", parser);, +    }    , +    , +    @Test, +    public void testUseWithDefaultLatLon() throws Exception {, +        XContentBuilder builder = jsonBuilder().startObject().field("lat", 52d).field("lon", 4d).endObject();, +        XContentParser parser = XContentHelper.createParser(builder.bytes());, +        parser.nextToken();, +, +        HashMap<String, Object> config = new HashMap<>();, +        config.put("precision", 12);, +        HashMap<String, Double> pointAsMap = new HashMap<>();, +        pointAsMap.put("lat", 51d);, +        pointAsMap.put("lon", 0d);, +        config.put("default", pointAsMap);, +        GeolocationContextMapping mapping = GeolocationContextMapping.load("foo", config);, +        mapping.parseQuery("foo", parser);, +    } , +    , +    @Test, +    public void testUseWithDefaultBadLatLon() throws Exception {, +        XContentBuilder builder = jsonBuilder().startObject().field("lat", 52d).field("lon", 4d).endObject();, +        XContentParser parser = XContentHelper.createParser(builder.bytes());, +        parser.nextToken();, +, +        HashMap<String, Object> config = new HashMap<>();, +        config.put("precision", 12);, +        HashMap<String, Double> pointAsMap = new HashMap<>();, +        pointAsMap.put("latitude", 51d); // invalid field names, +        pointAsMap.put("longitude", 0d); // invalid field names, +        config.put("default", pointAsMap);, +        ElasticsearchParseException expected = null;, +        try {, +            GeolocationContextMapping mapping = GeolocationContextMapping.load("foo", config);, +            mapping.parseQuery("foo", parser);, +, +        } catch (ElasticsearchParseException e) {, +            expected = e;, +        }, +        assertNotNull(expected);, +    }  , +    , +    @Test, +    public void testUseWithMultiplePrecisions() throws Exception {, +        XContentBuilder builder = jsonBuilder().startObject().field("lat", 52d).field("lon", 4d).endObject();, +        XContentParser parser = XContentHelper.createParser(builder.bytes());, +        parser.nextToken();, +, +        HashMap<String, Object> config = new HashMap<>();, +        int numElements = randomIntBetween(1, 12);, +        ArrayList<Integer> precisions = new ArrayList<>();, +        for (int i = 0; i < numElements; i++) {, +            precisions.add(randomIntBetween(1, 12));, +        }, +        config.put("precision", precisions);, +        GeolocationContextMapping mapping = GeolocationContextMapping.load("foo", config);, +        mapping.parseQuery("foo", parser);, +    }, +    , +    @Test, +    public void testHashcode() throws Exception {, +        HashMap<String, Object> config = new HashMap<>();, +        if (randomBoolean()) {, +            config.put("precision", Arrays.asList(1, 2, 3, 4));, +        } else {, +            config.put("precision", randomIntBetween(1, 12));, +        }, +        if (randomBoolean()) {, +            HashMap<String, Double> pointAsMap = new HashMap<>();, +            pointAsMap.put("lat", 51d);, +            pointAsMap.put("lon", 0d);, +            config.put("default", pointAsMap);, +        }, +        GeolocationContextMapping mapping = GeolocationContextMapping.load("foo", config);, +        GeolocationContextMapping mapping2 = GeolocationContextMapping.load("foo", config);, +, +        assertEquals(mapping, mapping2);, +        assertEquals(mapping.hashCode(), mapping2.hashCode());]