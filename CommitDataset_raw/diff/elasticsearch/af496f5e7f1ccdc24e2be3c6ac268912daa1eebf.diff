[+++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            ifNoTests 'fail', +            leaveTemporary true, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            ifNoTests 'fail', +            leaveTemporary true, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    int httpPort = 9400, +    int transportPort = 9500, +    void systemProperty(String property, String value) {, +        systemProperties.put(property, value), +    }, +, +    @Input, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            ifNoTests 'fail', +            leaveTemporary true, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    int httpPort = 9400, +    int transportPort = 9500, +    void systemProperty(String property, String value) {, +        systemProperties.put(property, value), +    }, +, +    @Input, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +    static class NodeInfo {, +        /** common configuration for all nodes, including this one */, +        ClusterConfiguration config, +        /** node number within the cluster, for creating unique names and paths */, +        int nodeNum, +        /** name of the cluster this node is part of */, +        String clusterName, +        /** root directory all node files and operations happen under */, +        File baseDir, +        /** the pid file the node will use */, +        File pidFile, +        /** elasticsearch home dir */, +        File homeDir, +        /** working directory for the node process */, +        File cwd, +        /** file that if it exists, indicates the node failed to start */, +        File failedMarker, +        /** stdout/stderr log of the elasticsearch process for this node */, +        File startLog, +        /** directory to install plugins from */, +        File pluginsTmpDir, +        /** environment variables to start the node with */]