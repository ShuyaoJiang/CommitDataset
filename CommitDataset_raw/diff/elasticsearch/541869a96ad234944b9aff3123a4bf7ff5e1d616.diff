[+++ b/distribution/packages/build.gradle, +    configurationFile '/etc/elasticsearch/role_mapping.yml', +    configurationFile '/etc/elasticsearch/roles.yml', +    configurationFile '/etc/elasticsearch/users', +    configurationFile '/etc/elasticsearch/users_roles', +++ b/distribution/packages/build.gradle, +    configurationFile '/etc/elasticsearch/role_mapping.yml', +    configurationFile '/etc/elasticsearch/roles.yml', +    configurationFile '/etc/elasticsearch/users', +    configurationFile '/etc/elasticsearch/users_roles', +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/DebPreservationTestCase.java, +        if (distribution().isDefault()) {, +            assertPathsExist(, +                installation.config,, +                installation.config("role_mapping.yml"),, +                installation.config("roles.yml"),, +                installation.config("users"),, +                installation.config("users_roles"), +            );, +        }, +, +++ b/distribution/packages/build.gradle, +    configurationFile '/etc/elasticsearch/role_mapping.yml', +    configurationFile '/etc/elasticsearch/roles.yml', +    configurationFile '/etc/elasticsearch/users', +    configurationFile '/etc/elasticsearch/users_roles', +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/DebPreservationTestCase.java, +        if (distribution().isDefault()) {, +            assertPathsExist(, +                installation.config,, +                installation.config("role_mapping.yml"),, +                installation.config("roles.yml"),, +                installation.config("users"),, +                installation.config("users_roles"), +            );, +        }, +, +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/RpmPreservationTestCase.java, +            "elasticsearch.yml",, +            "jvm.options",, +            "log4j2.properties", +        ), +            .map(each -> installation.config(each)), +            .forEach(path -> append(path, "# foo"));, +        if (distribution().isDefault()) {, +            Stream.of(, +                "role_mapping.yml",, +                "roles.yml",, +                "users",, +                "users_roles", +            ), +                .map(each -> installation.config(each)), +                .forEach(path -> append(path, "# foo"));, +        }, +        ).forEach(this::assertConfFilePreserved);, +, +        if (distribution().isDefault()) {, +            Stream.of(, +                "role_mapping.yml",, +                "roles.yml",, +                "users",, +                "users_roles", +            ).forEach(this::assertConfFilePreserved);, +        }, +    }, +, +    private void assertConfFilePreserved(String configFile) {, +++ b/distribution/packages/build.gradle, +    configurationFile '/etc/elasticsearch/role_mapping.yml', +    configurationFile '/etc/elasticsearch/roles.yml', +    configurationFile '/etc/elasticsearch/users', +    configurationFile '/etc/elasticsearch/users_roles', +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/DebPreservationTestCase.java, +        if (distribution().isDefault()) {, +            assertPathsExist(, +                installation.config,, +                installation.config("role_mapping.yml"),, +                installation.config("roles.yml"),, +                installation.config("users"),, +                installation.config("users_roles"), +            );, +        }, +, +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/RpmPreservationTestCase.java, +            "elasticsearch.yml",, +            "jvm.options",, +            "log4j2.properties", +        ), +            .map(each -> installation.config(each)), +            .forEach(path -> append(path, "# foo"));, +        if (distribution().isDefault()) {, +            Stream.of(, +                "role_mapping.yml",, +                "roles.yml",, +                "users",, +                "users_roles", +            ), +                .map(each -> installation.config(each)), +                .forEach(path -> append(path, "# foo"));, +        }]