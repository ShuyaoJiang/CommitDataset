[+++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.indices.recovery.RecoveryTarget;, +     * @see RecoveryTarget#indexTranslogOperations(List, int, long, long, RetentionLeases, ActionListener), +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.indices.recovery.RecoveryTarget;, +     * @see RecoveryTarget#indexTranslogOperations(List, int, long, long, RetentionLeases, ActionListener), +++ b/server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java, +                recoveryTarget.indexTranslogOperations(, +                        request.operations(),, +                        request.totalTranslogOps(),, +                        request.maxSeenAutoIdTimestampOnPrimary(),, +                        request.maxSeqNoOfUpdatesOrDeletesOnPrimary(),, +                        request.retentionLeases(),, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.indices.recovery.RecoveryTarget;, +     * @see RecoveryTarget#indexTranslogOperations(List, int, long, long, RetentionLeases, ActionListener), +++ b/server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java, +                recoveryTarget.indexTranslogOperations(, +                        request.operations(),, +                        request.totalTranslogOps(),, +                        request.maxSeenAutoIdTimestampOnPrimary(),, +                        request.maxSeqNoOfUpdatesOrDeletesOnPrimary(),, +                        request.retentionLeases(),, +++ b/server/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +import org.elasticsearch.index.seqno.RetentionLeases;, +                final RetentionLeases retentionLeases = shard.getRetentionLeases();, +                phase2(, +                        startingSeqNo,, +                        requiredSeqNoRangeStart,, +                        endingSeqNo,, +                        phase2Snapshot,, +                        maxSeenAutoIdTimestamp,, +                        maxSeqNoOfUpdatesOrDeletes,, +                        retentionLeases,, +                        sendSnapshotStep);, +    void phase2(, +            final long startingSeqNo,, +            final long requiredSeqNoRangeStart,, +            final long endingSeqNo,, +            final Translog.Snapshot snapshot,, +            final long maxSeenAutoIdTimestamp,, +            final long maxSeqNoOfUpdatesOrDeletes,, +            final RetentionLeases retentionLeases,, +            final ActionListener<SendSnapshotResult> listener) throws IOException {, +        sendBatch(, +                readNextBatch,, +                true,, +                SequenceNumbers.UNASSIGNED_SEQ_NO,, +                snapshot.totalOperations(),, +                maxSeenAutoIdTimestamp,, +                maxSeqNoOfUpdatesOrDeletes,, +                retentionLeases,, +                batchedListener);, +    private void sendBatch(, +            final CheckedSupplier<List<Translog.Operation>, IOException> nextBatch,, +            final boolean firstBatch,, +            final long targetLocalCheckpoint,, +            final int totalTranslogOps,, +            final long maxSeenAutoIdTimestamp,, +            final long maxSeqNoOfUpdatesOrDeletes,, +            final RetentionLeases retentionLeases,, +            final ActionListener<Long> listener) throws IOException {, +                recoveryTarget.indexTranslogOperations(, +                        operations,, +                        totalTranslogOps,, +                        maxSeenAutoIdTimestamp,, +                        maxSeqNoOfUpdatesOrDeletes,, +                        retentionLeases,, +                                    sendBatch(, +                                            nextBatch,, +                                            false,, +                                            SequenceNumbers.max(targetLocalCheckpoint, newCheckpoint),, +                                            totalTranslogOps,, +                                            maxSeenAutoIdTimestamp,, +                                            maxSeqNoOfUpdatesOrDeletes,, +                                            retentionLeases,, +                                            listener);, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.indices.recovery.RecoveryTarget;, +     * @see RecoveryTarget#indexTranslogOperations(List, int, long, long, RetentionLeases, ActionListener), +++ b/server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java, +                recoveryTarget.indexTranslogOperations(, +                        request.operations(),, +                        request.totalTranslogOps(),, +                        request.maxSeenAutoIdTimestampOnPrimary(),, +                        request.maxSeqNoOfUpdatesOrDeletesOnPrimary(),, +                        request.retentionLeases(),, +++ b/server/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java, +import org.elasticsearch.index.seqno.RetentionLeases;, +                final RetentionLeases retentionLeases = shard.getRetentionLeases();, +                phase2(, +                        startingSeqNo,, +                        requiredSeqNoRangeStart,, +                        endingSeqNo,, +                        phase2Snapshot,, +                        maxSeenAutoIdTimestamp,, +                        maxSeqNoOfUpdatesOrDeletes,, +                        retentionLeases,, +                        sendSnapshotStep);, +    void phase2(]