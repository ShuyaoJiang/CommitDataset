[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +            Map<String, String> options = (Map<String, String>)(Map)in.readMap();, +            Map<String, Object> options = (Map<String, Object>)(Map)this.options;, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +            Map<String, String> options = (Map<String, String>)(Map)in.readMap();, +            Map<String, Object> options = (Map<String, Object>)(Map)this.options;, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        if (version.before(ElasticsearchException.V_5_0_2_UNRELEASED)) {, +            // remove this once 5_0_2 is released randomVersionBetween asserts that this version is in the constant table.., +            version = ElasticsearchException.V_5_0_2_UNRELEASED;, +        Exception ex = serialize((Exception)orig, randomFrom(Version.V_5_0_0, Version.V_5_0_1));, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +            Map<String, String> options = (Map<String, String>)(Map)in.readMap();, +            Map<String, Object> options = (Map<String, Object>)(Map)this.options;, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        if (version.before(ElasticsearchException.V_5_0_2_UNRELEASED)) {, +            // remove this once 5_0_2 is released randomVersionBetween asserts that this version is in the constant table.., +            version = ElasticsearchException.V_5_0_2_UNRELEASED;, +        Exception ex = serialize((Exception)orig, randomFrom(Version.V_5_0_0, Version.V_5_0_1));, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        assertUnknownVersion(ElasticsearchException.V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +            Map<String, String> options = (Map<String, String>)(Map)in.readMap();, +            Map<String, Object> options = (Map<String, Object>)(Map)this.options;, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        if (version.before(ElasticsearchException.V_5_0_2_UNRELEASED)) {, +            // remove this once 5_0_2 is released randomVersionBetween asserts that this version is in the constant table.., +            version = ElasticsearchException.V_5_0_2_UNRELEASED;, +        Exception ex = serialize((Exception)orig, randomFrom(Version.V_5_0_0, Version.V_5_0_1));, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        assertUnknownVersion(ElasticsearchException.V_5_0_2_UNRELEASED);, +++ b/docs/reference/search.asciidoc, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +            Map<String, String> options = (Map<String, String>)(Map)in.readMap();, +            Map<String, Object> options = (Map<String, Object>)(Map)this.options;, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        if (version.before(ElasticsearchException.V_5_0_2_UNRELEASED)) {, +            // remove this once 5_0_2 is released randomVersionBetween asserts that this version is in the constant table.., +            version = ElasticsearchException.V_5_0_2_UNRELEASED;, +        Exception ex = serialize((Exception)orig, randomFrom(Version.V_5_0_0, Version.V_5_0_1));, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        assertUnknownVersion(ElasticsearchException.V_5_0_2_UNRELEASED);, +++ b/docs/reference/search.asciidoc, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +            Map<String, String> options = (Map<String, String>)(Map)in.readMap();, +            Map<String, Object> options = (Map<String, Object>)(Map)this.options;, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +        if (version.before(ElasticsearchException.V_5_0_2_UNRELEASED)) {, +            // remove this once 5_0_2 is released randomVersionBetween asserts that this version is in the constant table.., +            version = ElasticsearchException.V_5_0_2_UNRELEASED;, +        Exception ex = serialize((Exception)orig, randomFrom(Version.V_5_0_0, Version.V_5_0_1));, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        assertUnknownVersion(ElasticsearchException.V_5_0_2_UNRELEASED);, +++ b/docs/reference/search.asciidoc, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public static final Version V_5_0_2_UNRELEASED = Version.fromId(5000299);, +            org.elasticsearch.tasks.TaskCancelledException::new, 146, V_5_1_0_UNRELEASED),, +                                           org.elasticsearch.env.ShardLockObtainFailedException::new, 147, V_5_0_2_UNRELEASED);]