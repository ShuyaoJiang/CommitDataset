[+++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            .withAllDeprecated("This setting is ignored, the parser always splits on operator");, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            .withAllDeprecated("This setting is ignored, the parser always splits on operator");, +++ b/core/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java, + * This class uses {@link MultiMatchQuery} to build the text query around operators and {@link XQueryParser}, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            .withAllDeprecated("This setting is ignored, the parser always splits on operator");, +++ b/core/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java, + * This class uses {@link MultiMatchQuery} to build the text query around operators and {@link XQueryParser}, +++ b/docs/reference/migration/migrate_6_0/search.asciidoc, +  The `query_string` query now splits on operator only., +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            .withAllDeprecated("This setting is ignored, the parser always splits on operator");, +++ b/core/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java, + * This class uses {@link MultiMatchQuery} to build the text query around operators and {@link XQueryParser}, +++ b/docs/reference/migration/migrate_6_0/search.asciidoc, +  The `query_string` query now splits on operator only., +++ b/docs/reference/query-dsl/query-string-query.asciidoc, +The `query_string` query parses the input and splits text around operators., +            "query" : "field:new york AND city", +... will be splitted in `new`, `york` and `city` and each part is analyzed independently.]