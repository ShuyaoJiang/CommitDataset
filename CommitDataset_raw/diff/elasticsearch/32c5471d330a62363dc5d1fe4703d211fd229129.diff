[+++ b/docs/reference/search/percolate.asciidoc, +`track_scores` and `sort` option., +* `track_scores` - Whether the `_score` is included for each match. The is based on the query and represents how the query matched, +++ b/docs/reference/search/percolate.asciidoc, +`track_scores` and `sort` option., +* `track_scores` - Whether the `_score` is included for each match. The is based on the query and represents how the query matched, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +        sourceBuilder().setTrackScores(score);, +++ b/docs/reference/search/percolate.asciidoc, +`track_scores` and `sort` option., +* `track_scores` - Whether the `_score` is included for each match. The is based on the query and represents how the query matched, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +        sourceBuilder().setTrackScores(score);, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +    private Boolean trackScores;, +     * Similar as {@link #setTrackScores(boolean)}, but also sort by the score., +    public PercolateSourceBuilder setTrackScores(boolean trackScores) {, +        this.trackScores = trackScores;, +        if (trackScores != null) {, +            builder.field("track_scores", trackScores);, +++ b/docs/reference/search/percolate.asciidoc, +`track_scores` and `sort` option., +* `track_scores` - Whether the `_score` is included for each match. The is based on the query and represents how the query matched, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +        sourceBuilder().setTrackScores(score);, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +    private Boolean trackScores;, +     * Similar as {@link #setTrackScores(boolean)}, but also sort by the score., +    public PercolateSourceBuilder setTrackScores(boolean trackScores) {, +        this.trackScores = trackScores;, +        if (trackScores != null) {, +            builder.field("track_scores", trackScores);, +++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    private boolean trackScores;, +        this.trackScores = trackScores;, +        return this;, +        return trackScores;, +++ b/docs/reference/search/percolate.asciidoc, +`track_scores` and `sort` option., +* `track_scores` - Whether the `_score` is included for each match. The is based on the query and represents how the query matched, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +        sourceBuilder().setTrackScores(score);, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +    private Boolean trackScores;, +     * Similar as {@link #setTrackScores(boolean)}, but also sort by the score., +    public PercolateSourceBuilder setTrackScores(boolean trackScores) {, +        this.trackScores = trackScores;, +        if (trackScores != null) {, +            builder.field("track_scores", trackScores);, +++ b/src/main/java/org/elasticsearch/percolator/PercolateContext.java, +    private boolean trackScores;, +        this.trackScores = trackScores;, +        return this;, +        return trackScores;, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +            if (context.percolateQuery() == null && (context.trackScores() || context.sort || context.facets() != null || context.aggregations() != null)) {, +                    action = context.trackScores() ? scoringPercolator : queryPercolator;, +                    } else if ("track_scores".equals(currentFieldName) || "trackScores".equals(currentFieldName)) {, +                        context.trackScores(parser.booleanValue());]