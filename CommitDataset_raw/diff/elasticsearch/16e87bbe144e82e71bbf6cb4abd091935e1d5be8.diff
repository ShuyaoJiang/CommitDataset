[+++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, new DeleteRequest(deleteRequest)));, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, new DeleteRequest(deleteRequest)));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +import org.elasticsearch.action.ActionRequest;, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     */, +    public DeleteRequest(DeleteRequest request) {, +        this(request, request);, +    }, +, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     * The new request will inherit though headers and context from the original request that caused it., +     */, +    public DeleteRequest(DeleteRequest request, ActionRequest originalRequest) {, +        super(request);, +        this.type = request.type();, +        this.id = request.id();, +        this.routing = request.routing();, +        this.parent = request.parent();, +        this.refresh = request.refresh();, +        this.version = request.version();, +        this.versionType = request.versionType();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, new DeleteRequest(deleteRequest)));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +import org.elasticsearch.action.ActionRequest;, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     */, +    public DeleteRequest(DeleteRequest request) {, +        this(request, request);, +    }, +, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     * The new request will inherit though headers and context from the original request that caused it., +     */, +    public DeleteRequest(DeleteRequest request, ActionRequest originalRequest) {, +        super(request);, +        this.type = request.type();, +        this.id = request.id();, +        this.routing = request.routing();, +        this.parent = request.parent();, +        this.refresh = request.refresh();, +        this.version = request.version();, +        this.versionType = request.versionType();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/get/GetRequest.java, +     * Copy constructor that creates a new get request that is a copy of the one provided as an argument., +     * The new request will inherit though headers and context from the original request that caused it., +     */, +    public GetRequest(GetRequest getRequest) {, +        this.index = getRequest.index;, +        this.type = getRequest.type;, +        this.id = getRequest.id;, +        this.routing = getRequest.routing;, +        this.parent = getRequest.parent;, +        this.preference = getRequest.preference;, +        this.fields = getRequest.fields;, +        this.fetchSourceContext = getRequest.fetchSourceContext;, +        this.refresh = getRequest.refresh;, +        this.realtime = getRequest.realtime;, +        this.version = getRequest.version;, +        this.versionType = getRequest.versionType;, +        this.ignoreErrorsOnGeneratedFields = getRequest.ignoreErrorsOnGeneratedFields;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                        list.add(new BulkItemRequest(i, new DeleteRequest(deleteRequest)));, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +import org.elasticsearch.action.ActionRequest;, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     */, +    public DeleteRequest(DeleteRequest request) {, +        this(request, request);, +    }, +, +    /**, +     * Copy constructor that creates a new delete request that is a copy of the one provided as an argument., +     * The new request will inherit though headers and context from the original request that caused it., +     */, +    public DeleteRequest(DeleteRequest request, ActionRequest originalRequest) {, +        super(request);, +        this.type = request.type();, +        this.id = request.id();, +        this.routing = request.routing();, +        this.parent = request.parent();, +        this.refresh = request.refresh();, +        this.version = request.version();, +        this.versionType = request.versionType();, +    }]