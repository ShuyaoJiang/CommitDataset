[+++ b/.ci/java-versions.properties, +++ b/.ci/java-versions.properties, +++ b/client/rest-high-level/build.gradle, +File nodeCert = file("./testnode.crt"), +File nodeTrustStore = file("./testnode.jks"), +  // Truststore settings are not used since TLS is not enabled. Included for testing the get certificates API, +  setting 'xpack.ssl.certificate_authorities', 'testnode.crt', +  setting 'xpack.security.transport.ssl.truststore.path', 'testnode.jks', +  setting 'xpack.security.transport.ssl.truststore.password', 'testnode', +  extraConfigFile nodeCert.name, nodeCert, +  extraConfigFile nodeTrustStore.name, nodeTrustStore, +++ b/.ci/java-versions.properties, +++ b/client/rest-high-level/build.gradle, +File nodeCert = file("./testnode.crt"), +File nodeTrustStore = file("./testnode.jks"), +  // Truststore settings are not used since TLS is not enabled. Included for testing the get certificates API, +  setting 'xpack.ssl.certificate_authorities', 'testnode.crt', +  setting 'xpack.security.transport.ssl.truststore.path', 'testnode.jks', +  setting 'xpack.security.transport.ssl.truststore.password', 'testnode', +  extraConfigFile nodeCert.name, nodeCert, +  extraConfigFile nodeTrustStore.name, nodeTrustStore, +++ /dev/null, +++ b/.ci/java-versions.properties, +++ b/client/rest-high-level/build.gradle, +File nodeCert = file("./testnode.crt"), +File nodeTrustStore = file("./testnode.jks"), +  // Truststore settings are not used since TLS is not enabled. Included for testing the get certificates API, +  setting 'xpack.ssl.certificate_authorities', 'testnode.crt', +  setting 'xpack.security.transport.ssl.truststore.path', 'testnode.jks', +  setting 'xpack.security.transport.ssl.truststore.password', 'testnode', +  extraConfigFile nodeCert.name, nodeCert, +  extraConfigFile nodeTrustStore.name, nodeTrustStore, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/.ci/java-versions.properties, +++ b/client/rest-high-level/build.gradle, +File nodeCert = file("./testnode.crt"), +File nodeTrustStore = file("./testnode.jks"), +  // Truststore settings are not used since TLS is not enabled. Included for testing the get certificates API, +  setting 'xpack.ssl.certificate_authorities', 'testnode.crt', +  setting 'xpack.security.transport.ssl.truststore.path', 'testnode.jks', +  setting 'xpack.security.transport.ssl.truststore.password', 'testnode', +  extraConfigFile nodeCert.name, nodeCert, +  extraConfigFile nodeTrustStore.name, nodeTrustStore, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/.ci/java-versions.properties, +++ b/client/rest-high-level/build.gradle, +File nodeCert = file("./testnode.crt"), +File nodeTrustStore = file("./testnode.jks"), +  // Truststore settings are not used since TLS is not enabled. Included for testing the get certificates API, +  setting 'xpack.ssl.certificate_authorities', 'testnode.crt', +  setting 'xpack.security.transport.ssl.truststore.path', 'testnode.jks', +  setting 'xpack.security.transport.ssl.truststore.password', 'testnode', +  extraConfigFile nodeCert.name, nodeCert, +  extraConfigFile nodeTrustStore.name, nodeTrustStore, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.GetSslCertificatesRequest;, +import org.elasticsearch.client.security.GetSslCertificatesResponse;, +     * Synchronously retrieve the X.509 certificates that are used to encrypt communications in an Elasticsearch cluster., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html">, +     * the docs</a> for more., +     *, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the get certificates call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetSslCertificatesResponse getSslCertificates(RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(GetSslCertificatesRequest.INSTANCE, GetSslCertificatesRequest::getRequest,, +            options, GetSslCertificatesResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously retrieve the X.509 certificates that are used to encrypt communications in an Elasticsearch cluster., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-ssl.html">, +     * the docs</a> for more., +     *, +     * @param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getSslCertificatesAsync(RequestOptions options, ActionListener<GetSslCertificatesResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(GetSslCertificatesRequest.INSTANCE, GetSslCertificatesRequest::getRequest,, +            options, GetSslCertificatesResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/.ci/java-versions.properties, +++ b/client/rest-high-level/build.gradle, +File nodeCert = file("./testnode.crt"), +File nodeTrustStore = file("./testnode.jks"), +  // Truststore settings are not used since TLS is not enabled. Included for testing the get certificates API, +  setting 'xpack.ssl.certificate_authorities', 'testnode.crt', +  setting 'xpack.security.transport.ssl.truststore.path', 'testnode.jks', +  setting 'xpack.security.transport.ssl.truststore.password', 'testnode', +  extraConfigFile nodeCert.name, nodeCert, +  extraConfigFile nodeTrustStore.name, nodeTrustStore]