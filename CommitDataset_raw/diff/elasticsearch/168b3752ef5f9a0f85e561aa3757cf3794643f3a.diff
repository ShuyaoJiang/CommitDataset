[+++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +                    Translog.Operation op = translog.read(versionValue.translogLocation());, +                    if (op != null) {, +                        return new GetResult(true, versionValue.version(), op.getSource());, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +                    Translog.Operation op = translog.read(versionValue.translogLocation());, +                    if (op != null) {, +                        return new GetResult(true, versionValue.version(), op.getSource());, +++ b/src/main/java/org/elasticsearch/index/translog/Translog.java, +    Translog.Operation read(Location location);, +, +        @Override, +        public String toString() {, +            return "[id: " + translogId + ", location: " + translogLocation + ", size: " + size + "]";, +        }, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +                    Translog.Operation op = translog.read(versionValue.translogLocation());, +                    if (op != null) {, +                        return new GetResult(true, versionValue.version(), op.getSource());, +++ b/src/main/java/org/elasticsearch/index/translog/Translog.java, +    Translog.Operation read(Location location);, +, +        @Override, +        public String toString() {, +            return "[id: " + translogId + ", location: " + translogLocation + ", size: " + size + "]";, +        }, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java, +     * Read the Operation object from the given location, returns null if the, +     * Operation could not be read., +    public Translog.Operation read(Location location) {, +        rwl.readLock().lock();, +        try {, +            FsTranslogFile translog = translogForLocation(location);, +            if (translog != null) {, +                byte[] data = translog.read(location);, +                    // Return the Operation using the current version of the, +                    // stream based on which translog is being read, +                    return translog.getStream().read(in);, +                }, +            }, +            return null;, +        } catch (IOException e) {, +            throw new ElasticsearchException("failed to read source from traslog location " + location, e);, +        } finally {, +            rwl.readLock().unlock();, +        ReleasableBytesStreamOutput out = null;, +            out = new ReleasableBytesStreamOutput(bigArrays);, +            if (!released && out != null) {, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +                    Translog.Operation op = translog.read(versionValue.translogLocation());, +                    if (op != null) {, +                        return new GetResult(true, versionValue.version(), op.getSource());, +++ b/src/main/java/org/elasticsearch/index/translog/Translog.java, +    Translog.Operation read(Location location);, +, +        @Override, +        public String toString() {, +            return "[id: " + translogId + ", location: " + translogLocation + ", size: " + size + "]";, +        }, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java, +     * Read the Operation object from the given location, returns null if the, +     * Operation could not be read., +    public Translog.Operation read(Location location) {, +        rwl.readLock().lock();, +        try {, +            FsTranslogFile translog = translogForLocation(location);, +            if (translog != null) {, +                byte[] data = translog.read(location);, +                    // Return the Operation using the current version of the, +                    // stream based on which translog is being read, +                    return translog.getStream().read(in);, +                }, +            }, +            return null;, +        } catch (IOException e) {, +            throw new ElasticsearchException("failed to read source from traslog location " + location, e);, +        } finally {, +            rwl.readLock().unlock();, +        ReleasableBytesStreamOutput out = null;, +            out = new ReleasableBytesStreamOutput(bigArrays);, +            if (!released && out != null) {, +++ b/src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java, +        assertThat(translog.read(loc1).getSource().source.toBytesArray(), equalTo(new BytesArray(new byte[]{1})));, +        assertThat(translog.read(loc2).getSource().source.toBytesArray(), equalTo(new BytesArray(new byte[]{2})));, +        assertThat(translog.read(loc1).getSource().source.toBytesArray(), equalTo(new BytesArray(new byte[]{1})));, +        assertThat(translog.read(loc2).getSource().source.toBytesArray(), equalTo(new BytesArray(new byte[]{2})));, +        assertThat(translog.read(loc3).getSource().source.toBytesArray(), equalTo(new BytesArray(new byte[]{3})));, +        assertThat(translog.read(loc3).getSource().source.toBytesArray(), equalTo(new BytesArray(new byte[]{3})));, +            Translog.Operation op = translog.read(locationOperation.location);, +                translog.read(location);]