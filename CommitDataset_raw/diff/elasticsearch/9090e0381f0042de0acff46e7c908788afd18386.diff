[+++ b/src/main/java/org/elasticsearch/action/ActionFuture.java, +     * Similar to {@link #get()}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +++ b/src/main/java/org/elasticsearch/action/ActionFuture.java, +     * Similar to {@link #get()}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +     * Similar to {@link #get(long, java.util.concurrent.TimeUnit)}, just catching the {@link InterruptedException} and throwing, +     * an {@link org.elasticsearch.ElasticsearchIllegalStateException} instead. Also catches, +     * {@link java.util.concurrent.ExecutionException} and throws the actual cause instead., +++ b/src/main/java/org/elasticsearch/action/support/AdapterActionFuture.java]