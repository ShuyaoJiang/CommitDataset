[+++ b/libs/core/src/main/java/org/elasticsearch/core/internal/io/IOUtils.java, +++ b/libs/core/src/main/java/org/elasticsearch/core/internal/io/IOUtils.java, +++ b/server/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.index.BinaryDocValues;, +import org.apache.lucene.index.FieldInfo;, +import org.apache.lucene.index.FieldInfos;, +import org.apache.lucene.index.Fields;, +import org.apache.lucene.index.LeafMetaData;, +import org.apache.lucene.index.PointValues;, +import org.apache.lucene.index.SortedDocValues;, +import org.apache.lucene.index.SortedNumericDocValues;, +import org.apache.lucene.index.SortedSetDocValues;, +import org.apache.lucene.index.StoredFieldVisitor;, +import org.apache.lucene.index.Terms;, +        final IndexCommit cp = getIndexCommit(si, directory);, +     * Returns an index commit for the given {@link SegmentInfos} in the given directory., +     */, +    public static IndexCommit getIndexCommit(SegmentInfos si, Directory directory) throws IOException {, +        return new CommitPoint(si, directory);, +    }, +, +    /**, +     * Returns an empty leaf reader with the given max docs. The reader will be fully deleted., +     */, +    public static LeafReader emptyReader(final int maxDoc) {, +        return new LeafReader() {, +            final Bits liveDocs = new Bits.MatchNoBits(maxDoc);, +, +            public Terms terms(String field) {, +                return null;, +            }, +, +            public NumericDocValues getNumericDocValues(String field) {, +                return null;, +            }, +, +            public BinaryDocValues getBinaryDocValues(String field) {, +                return null;, +            }, +, +            public SortedDocValues getSortedDocValues(String field) {, +                return null;, +            }, +, +            public SortedNumericDocValues getSortedNumericDocValues(String field) {, +                return null;, +            }, +, +            public SortedSetDocValues getSortedSetDocValues(String field) {, +                return null;, +            }, +, +            public NumericDocValues getNormValues(String field) {, +                return null;, +            }, +, +            public FieldInfos getFieldInfos() {, +                return new FieldInfos(new FieldInfo[0]);, +            }, +, +            public Bits getLiveDocs() {, +                return this.liveDocs;, +            }, +, +            public PointValues getPointValues(String fieldName) {, +                return null;, +            }, +, +            public void checkIntegrity() {, +            }, +, +            public Fields getTermVectors(int docID) {, +                return null;, +            }, +, +            public int numDocs() {, +                return 0;, +            }, +, +            public int maxDoc() {, +                return maxDoc;, +            }, +, +            public void document(int docID, StoredFieldVisitor visitor) {, +            }, +, +            protected void doClose() {, +            }, +, +            public LeafMetaData getMetaData() {, +                return new LeafMetaData(Version.LATEST.major, Version.LATEST, (Sort)null);, +            }, +, +            public CacheHelper getCoreCacheHelper() {, +                return null;, +            }, +, +            public CacheHelper getReaderCacheHelper() {, +                return null;, +            }]