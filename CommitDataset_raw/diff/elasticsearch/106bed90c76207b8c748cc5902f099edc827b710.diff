[+++ b/docs/CHANGELOG.asciidoc, +Add ability to filter coordinating-only nodes when interacting with cluster, +APIs. ({pull}30313[#30313]), +, +++ b/docs/CHANGELOG.asciidoc, +Add ability to filter coordinating-only nodes when interacting with cluster, +APIs. ({pull}30313[#30313]), +, +++ b/server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    static final String COORDINATING_ONLY = "coordinating_only";, +, +++ b/docs/CHANGELOG.asciidoc, +Add ability to filter coordinating-only nodes when interacting with cluster, +APIs. ({pull}30313[#30313]), +, +++ b/server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    static final String COORDINATING_ONLY = "coordinating_only";, +, +++ b/server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +     * Get a {@link Map} of the coordinating only nodes (nodes which are neither master, nor data, nor ingest nodes) arranged by their ids, +     *, +     * @return {@link Map} of the coordinating only nodes arranged by their ids, +     */, +    public ImmutableOpenMap<String, DiscoveryNode> getCoordinatingOnlyNodes() {, +        ImmutableOpenMap.Builder<String, DiscoveryNode> nodes = ImmutableOpenMap.builder(this.nodes);, +        nodes.removeAll(masterNodes.keys());, +        nodes.removeAll(dataNodes.keys());, +        nodes.removeAll(ingestNodes.keys());, +        return nodes.build();, +    }, +, +    /**, +     * - a "attr:value" pattern, where attr can be a node role (master, data, ingest etc.) in which case the value can be true or false,, +                        } else if (DiscoveryNode.COORDINATING_ONLY.equals(matchAttrName)) {, +                            if (Booleans.parseBoolean(matchAttrValue, true)) {, +                                resolvedNodesIds.addAll(getCoordinatingOnlyNodes().keys());, +                            } else {, +                                resolvedNodesIds.removeAll(getCoordinatingOnlyNodes().keys());, +                            }, +++ b/docs/CHANGELOG.asciidoc, +Add ability to filter coordinating-only nodes when interacting with cluster, +APIs. ({pull}30313[#30313]), +, +++ b/server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    static final String COORDINATING_ONLY = "coordinating_only";, +, +++ b/server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +     * Get a {@link Map} of the coordinating only nodes (nodes which are neither master, nor data, nor ingest nodes) arranged by their ids, +     *, +     * @return {@link Map} of the coordinating only nodes arranged by their ids, +     */, +    public ImmutableOpenMap<String, DiscoveryNode> getCoordinatingOnlyNodes() {, +        ImmutableOpenMap.Builder<String, DiscoveryNode> nodes = ImmutableOpenMap.builder(this.nodes);, +        nodes.removeAll(masterNodes.keys());, +        nodes.removeAll(dataNodes.keys());, +        nodes.removeAll(ingestNodes.keys());, +        return nodes.build();, +    }, +, +    /**, +     * - a "attr:value" pattern, where attr can be a node role (master, data, ingest etc.) in which case the value can be true or false,, +                        } else if (DiscoveryNode.COORDINATING_ONLY.equals(matchAttrName)) {, +                            if (Booleans.parseBoolean(matchAttrValue, true)) {, +                                resolvedNodesIds.addAll(getCoordinatingOnlyNodes().keys());, +                            } else {, +                                resolvedNodesIds.removeAll(getCoordinatingOnlyNodes().keys());, +                            }, +++ b/server/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodesTests.java, +        final String[] nonCoordinatorOnlyNodes =, +                StreamSupport.stream(discoveryNodes.getNodes().values().spliterator(), false), +                    .map(n -> n.value), +                    .filter(n -> n.isMasterNode() || n.isDataNode() || n.isIngestNode()), +                    .map(DiscoveryNode::getId), +                    .toArray(String[]::new);, +, +        assertThat(discoveryNodes.resolveNodes("coordinating_only:true"), arrayContainingInAnyOrder(coordinatorOnlyNodes));, +        assertThat(discoveryNodes.resolveNodes("_all", "data:false", "ingest:false", "master:false"),, +        assertThat(discoveryNodes.resolveNodes("_all", "coordinating_only:false"), arrayContainingInAnyOrder(nonCoordinatorOnlyNodes));, +        }, COORDINATING_ONLY(DiscoveryNode.COORDINATING_ONLY + ":true") {, +            @Override, +            Set<String> matchingNodeIds(DiscoveryNodes nodes) {, +                Set<String> ids = new HashSet<>();, +                nodes.getCoordinatingOnlyNodes().keysIt().forEachRemaining(ids::add);, +                return ids;, +            }, +++ b/docs/CHANGELOG.asciidoc, +Add ability to filter coordinating-only nodes when interacting with cluster, +APIs. ({pull}30313[#30313]), +, +++ b/server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    static final String COORDINATING_ONLY = "coordinating_only";, +, +++ b/server/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +     * Get a {@link Map} of the coordinating only nodes (nodes which are neither master, nor data, nor ingest nodes) arranged by their ids, +     *, +     * @return {@link Map} of the coordinating only nodes arranged by their ids, +     */, +    public ImmutableOpenMap<String, DiscoveryNode> getCoordinatingOnlyNodes() {, +        ImmutableOpenMap.Builder<String, DiscoveryNode> nodes = ImmutableOpenMap.builder(this.nodes);, +        nodes.removeAll(masterNodes.keys());]