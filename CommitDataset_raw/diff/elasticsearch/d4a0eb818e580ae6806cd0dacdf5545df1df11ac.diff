[+++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java, +                                                    long estimatedBucketCount, long maxOrd, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, estimatedBucketCount, maxOrd, null, bucketCountThresholds, includeExclude, aggregationContext, parent);, +        if (bucketCountThresholds.getMinDocCount() == 0) {, +            size = (int) Math.min(globalOrdinals.getMaxOrd(), bucketCountThresholds.getShardSize());, +            size = (int) Math.min(maxBucketOrd(), bucketCountThresholds.getShardSize());, +            if (bucketCountThresholds.getMinDocCount() > 0 && bucketDocCount == 0) {, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantStringTerms(subsetSize, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantStringTerms(0, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +        public WithHash(String name, AggregatorFactories factories, ValuesSource.Bytes.WithOrdinals.FieldData valuesSource, long estimatedBucketCount, BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude, AggregationContext aggregationContext, Aggregator parent, SignificantTermsAggregatorFactory termsAggFactory) {, +            super(name, factories, valuesSource, estimatedBucketCount, estimatedBucketCount, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggFactory);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java, +                                                    long estimatedBucketCount, long maxOrd, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, estimatedBucketCount, maxOrd, null, bucketCountThresholds, includeExclude, aggregationContext, parent);, +        if (bucketCountThresholds.getMinDocCount() == 0) {, +            size = (int) Math.min(globalOrdinals.getMaxOrd(), bucketCountThresholds.getShardSize());, +            size = (int) Math.min(maxBucketOrd(), bucketCountThresholds.getShardSize());, +            if (bucketCountThresholds.getMinDocCount() > 0 && bucketDocCount == 0) {, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantStringTerms(subsetSize, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantStringTerms(0, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +        public WithHash(String name, AggregatorFactories factories, ValuesSource.Bytes.WithOrdinals.FieldData valuesSource, long estimatedBucketCount, BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude, AggregationContext aggregationContext, Aggregator parent, SignificantTermsAggregatorFactory termsAggFactory) {, +            super(name, factories, valuesSource, estimatedBucketCount, estimatedBucketCount, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggFactory);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java, +              long estimatedBucketCount, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, format, estimatedBucketCount, null, bucketCountThresholds, aggregationContext, parent);, +        final int size = (int) Math.min(bucketOrds.size(), bucketCountThresholds.getShardSize());, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantLongTerms(subsetSize, supersetSize, name, formatter, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantLongTerms(0, supersetSize, name, formatter, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java, +                                                    long estimatedBucketCount, long maxOrd, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, estimatedBucketCount, maxOrd, null, bucketCountThresholds, includeExclude, aggregationContext, parent);, +        if (bucketCountThresholds.getMinDocCount() == 0) {, +            size = (int) Math.min(globalOrdinals.getMaxOrd(), bucketCountThresholds.getShardSize());, +            size = (int) Math.min(maxBucketOrd(), bucketCountThresholds.getShardSize());, +            if (bucketCountThresholds.getMinDocCount() > 0 && bucketDocCount == 0) {, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantStringTerms(subsetSize, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantStringTerms(0, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +        public WithHash(String name, AggregatorFactories factories, ValuesSource.Bytes.WithOrdinals.FieldData valuesSource, long estimatedBucketCount, BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude, AggregationContext aggregationContext, Aggregator parent, SignificantTermsAggregatorFactory termsAggFactory) {, +            super(name, factories, valuesSource, estimatedBucketCount, estimatedBucketCount, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggFactory);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java, +              long estimatedBucketCount, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, format, estimatedBucketCount, null, bucketCountThresholds, aggregationContext, parent);, +        final int size = (int) Math.min(bucketOrds.size(), bucketCountThresholds.getShardSize());, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantLongTerms(subsetSize, supersetSize, name, formatter, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantLongTerms(0, supersetSize, name, formatter, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java, +            long estimatedBucketCount, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, estimatedBucketCount, null, bucketCountThresholds, includeExclude, aggregationContext, parent);, +        final int size = (int) Math.min(bucketOrds.size(), bucketCountThresholds.getShardSize());, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantStringTerms(subsetSize, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantStringTerms(0, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +                long esitmatedBucketCount, BucketCountThresholds bucketCountThresholds, AggregationContext aggregationContext,, +            super(name, factories, valuesSource, esitmatedBucketCount, bucketCountThresholds, null, aggregationContext, parent, termsAggFactory);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java, +                                                    long estimatedBucketCount, long maxOrd, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, estimatedBucketCount, maxOrd, null, bucketCountThresholds, includeExclude, aggregationContext, parent);, +        if (bucketCountThresholds.getMinDocCount() == 0) {, +            size = (int) Math.min(globalOrdinals.getMaxOrd(), bucketCountThresholds.getShardSize());, +            size = (int) Math.min(maxBucketOrd(), bucketCountThresholds.getShardSize());, +            if (bucketCountThresholds.getMinDocCount() > 0 && bucketDocCount == 0) {, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantStringTerms(subsetSize, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantStringTerms(0, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +        public WithHash(String name, AggregatorFactories factories, ValuesSource.Bytes.WithOrdinals.FieldData valuesSource, long estimatedBucketCount, BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude, AggregationContext aggregationContext, Aggregator parent, SignificantTermsAggregatorFactory termsAggFactory) {, +            super(name, factories, valuesSource, estimatedBucketCount, estimatedBucketCount, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggFactory);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java, +              long estimatedBucketCount, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, format, estimatedBucketCount, null, bucketCountThresholds, aggregationContext, parent);, +        final int size = (int) Math.min(bucketOrds.size(), bucketCountThresholds.getShardSize());, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantLongTerms(subsetSize, supersetSize, name, formatter, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantLongTerms(0, supersetSize, name, formatter, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java, +            long estimatedBucketCount, BucketCountThresholds bucketCountThresholds,, +        super(name, factories, valuesSource, estimatedBucketCount, null, bucketCountThresholds, includeExclude, aggregationContext, parent);, +        final int size = (int) Math.min(bucketOrds.size(), bucketCountThresholds.getShardSize());, +            if (spare.subsetDf >= bucketCountThresholds.getShardMinDocCount()) {, +        return new SignificantStringTerms(subsetSize, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Arrays.asList(list));, +        return new SignificantStringTerms(0, supersetSize, name, bucketCountThresholds.getRequiredSize(), bucketCountThresholds.getMinDocCount(), Collections.<InternalSignificantTerms.Bucket>emptyList());, +                long esitmatedBucketCount, BucketCountThresholds bucketCountThresholds, AggregationContext aggregationContext,, +            super(name, factories, valuesSource, esitmatedBucketCount, bucketCountThresholds, null, aggregationContext, parent, termsAggFactory);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java, +import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregator;, +                              TermsAggregator.BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude,, +                return new SignificantStringTermsAggregator(name, factories, valuesSource, estimatedBucketCount, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggregatorFactory);, +                              TermsAggregator.BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude,, +                    return MAP.create(name, factories, valuesSource, estimatedBucketCount, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggregatorFactory);, +                return new SignificantStringTermsAggregator.WithOrdinals(name, factories, (ValuesSource.Bytes.WithOrdinals) valuesSource, estimatedBucketCount, bucketCountThresholds, aggregationContext, parent, termsAggregatorFactory);, +                              TermsAggregator.BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude,, +                return new GlobalOrdinalsSignificantTermsAggregator(name, factories, (ValuesSource.Bytes.WithOrdinals.FieldData) valuesSource, estimatedBucketCount, maxOrd, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggregatorFactory);, +                              TermsAggregator.BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude,, +                return new GlobalOrdinalsSignificantTermsAggregator.WithHash(name, factories, (ValuesSource.Bytes.WithOrdinals.FieldData) valuesSource, estimatedBucketCount, bucketCountThresholds, includeExclude, aggregationContext, parent, termsAggregatorFactory);, +                                   TermsAggregator.BucketCountThresholds bucketCountThresholds, IncludeExclude includeExclude,, +    private final TermsAggregator.BucketCountThresholds bucketCountThresholds;]