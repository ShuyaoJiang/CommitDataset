[+++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwidth if there are many buckets., +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwidth if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggregation:, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwidth if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggregation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controlled, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwidth if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggregation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controlled, +++ b/docs/reference/aggregations/reducer/max-bucket-aggregation.asciidoc, +A sibling reducer aggregation which identifies the bucket(s) with the maximum value of a specified metric in a sibling aggregation, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwidth if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggregation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controlled, +++ b/docs/reference/aggregations/reducer/max-bucket-aggregation.asciidoc, +A sibling reducer aggregation which identifies the bucket(s) with the maximum value of a specified metric in a sibling aggregation, +++ b/docs/reference/index-modules/allocation.asciidoc, +matching wildcards, for example, `value1*`. Additionally, special attribute, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwidth if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggregation:, +++ b/docs/reference/aggregations/bucket/histogram-aggregation.asciidoc, +By default the returned buckets are sorted by their `key` ascending, though the order behaviour can be controlled, +++ b/docs/reference/aggregations/reducer/max-bucket-aggregation.asciidoc, +A sibling reducer aggregation which identifies the bucket(s) with the maximum value of a specified metric in a sibling aggregation, +++ b/docs/reference/index-modules/allocation.asciidoc, +matching wildcards, for example, `value1*`. Additionally, special attribute, +++ b/docs/reference/migration/migrate_1_0.asciidoc, +Similarly for the `nodes_stats` API, if you want the `transport` and `http`, +++ b/docs/community/clients.asciidoc, +  chainable query and filter construction built on top of official client., +++ b/docs/java-api/query-dsl-filters.asciidoc, +<5> distance computation mode: `GeoDistance.SLOPPY_ARC` (default), `GeoDistance.ARC` (slightly more precise but, +++ b/docs/reference/aggregations/bucket/daterange-aggregation.asciidoc, +Note that this aggregation includes the `from` value and excludes the `to` value for each range., +++ b/docs/reference/aggregations/bucket/geohashgrid-aggregation.asciidoc, +                and network bandwidth if there are many buckets., +++ b/docs/reference/aggregations/bucket/global-aggregation.asciidoc, +The response for the above aggregation:]