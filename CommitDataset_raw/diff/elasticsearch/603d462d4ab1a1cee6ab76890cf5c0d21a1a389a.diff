[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +        try {, +            }, +, +            // we need to refresh in order to clear older version values, +            long time = threadPool.estimatedTimeInMillis(); // mark time here, before we refresh, and then delete all older values, +            refresh(new Refresh(true).force(true));, +            if (indexingSearcher.get() != null) {, +                indexingSearcher.get().release();, +                indexingSearcher.set(null);, +            }, +            for (Map.Entry<String, VersionValue> entry : versionMap.entrySet()) {, +                String id = entry.getKey();, +                synchronized (dirtyLock(id)) { // can we do it without this lock on each value? maybe batch to a set and get the lock once per set?, +                    VersionValue versionValue = versionMap.get(id);, +                    if (versionValue == null) {, +                        continue;, +                    }, +                    if (time - versionValue.time() <= 0) {, +                        continue; // its a newer value, from after/during we refreshed, don't clear it, +                    }, +                    if (versionValue.delete()) {, +                        if ((time - versionValue.time()) > gcDeletesInMillis) {, +                            versionMap.remove(id);, +                        }, +                    } else {, +                        versionMap.remove(id);, +                    }, +                }, +            }, +        } finally {, +    private Object dirtyLock(String id) {, +        return dirtyLocks[Math.abs(id.hashCode()) % dirtyLocks.length];, +    }, +, +        return dirtyLock(uid.text());]