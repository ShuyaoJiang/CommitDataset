[+++ b/rest-api-spec/test/README.asciidoc, +The skip section can also be used to list new features that need to be, +supported in order to run a test. This way the up-to-date runners will, +run the test, while the ones that don't support the feature yet can, +temporarily skip it, and avoid having lots of test failures in the meantime., +, +...., +    "Parent":, +     - skip:, +          features:    regex, +, +     - do:, +       ... test definitions ..., +...., +, +The `features` field can either be a string or an array of strings., +The skip section requires to specify either a `version` or a `features` list., +, +++ b/rest-api-spec/test/README.asciidoc, +The skip section can also be used to list new features that need to be, +supported in order to run a test. This way the up-to-date runners will, +run the test, while the ones that don't support the feature yet can, +temporarily skip it, and avoid having lots of test failures in the meantime., +, +...., +    "Parent":, +     - skip:, +          features:    regex, +, +     - do:, +       ... test definitions ..., +...., +, +The `features` field can either be a string or an array of strings., +The skip section requires to specify either a `version` or a `features` list., +, +++ b/src/test/java/org/elasticsearch/test/rest/junit/RestTestSuiteRunner.java, +import org.elasticsearch.test.rest.support.Features;, +                    assert restTestSuite.getSetupSection().getSkipSection().skip(restTestExecutionContext.esVersion());, +                    if (testSection.getSkipSection().skip(restTestExecutionContext.esVersion())) {, +        if (testCandidate.getSetupSection().getSkipSection().skip(restTestExecutionContext.esVersion())) {, +            if (logger.isInfoEnabled()) {, +                if (testCandidate.getSetupSection().getSkipSection().isVersionCheck()) {, +                } else {, +                    logger.info("skipped test suite [{}]\nreason: feature not supported\nrequired features: {} (supported features: {})",, +                            testCandidate.getSuiteDescription(), testCandidate.getSetupSection().getSkipSection().getFeatures(), Features.getSupported());, +                }, +            }, +        if (testCandidate.getTestSection().getSkipSection().skip(restTestExecutionContext.esVersion())) {, +            if (logger.isInfoEnabled()) {, +                if (testCandidate.getTestSection().getSkipSection().isVersionCheck()) {, +                } else {, +                    logger.info("skipped test [{}/{}]\nreason: feature not supported\nrequired features: {} (supported features: {})",, +                            testCandidate.getSuiteDescription(), testCandidate.getTestSection().getName(),, +                            testCandidate.getTestSection().getSkipSection().getFeatures(), Features.getSupported());, +                }, +            }, +++ b/rest-api-spec/test/README.asciidoc, +The skip section can also be used to list new features that need to be, +supported in order to run a test. This way the up-to-date runners will, +run the test, while the ones that don't support the feature yet can, +temporarily skip it, and avoid having lots of test failures in the meantime., +, +...., +    "Parent":, +     - skip:, +          features:    regex, +, +     - do:, +       ... test definitions ..., +...., +, +The `features` field can either be a string or an array of strings., +The skip section requires to specify either a `version` or a `features` list., +, +++ b/src/test/java/org/elasticsearch/test/rest/junit/RestTestSuiteRunner.java, +import org.elasticsearch.test.rest.support.Features;, +                    assert restTestSuite.getSetupSection().getSkipSection().skip(restTestExecutionContext.esVersion());, +                    if (testSection.getSkipSection().skip(restTestExecutionContext.esVersion())) {, +        if (testCandidate.getSetupSection().getSkipSection().skip(restTestExecutionContext.esVersion())) {, +            if (logger.isInfoEnabled()) {, +                if (testCandidate.getSetupSection().getSkipSection().isVersionCheck()) {, +                } else {, +                    logger.info("skipped test suite [{}]\nreason: feature not supported\nrequired features: {} (supported features: {})",, +                            testCandidate.getSuiteDescription(), testCandidate.getSetupSection().getSkipSection().getFeatures(), Features.getSupported());, +                }, +            }, +        if (testCandidate.getTestSection().getSkipSection().skip(restTestExecutionContext.esVersion())) {, +            if (logger.isInfoEnabled()) {, +                if (testCandidate.getTestSection().getSkipSection().isVersionCheck()) {, +                } else {, +                    logger.info("skipped test [{}/{}]\nreason: feature not supported\nrequired features: {} (supported features: {})",, +                            testCandidate.getSuiteDescription(), testCandidate.getTestSection().getName(),, +                            testCandidate.getTestSection().getSkipSection().getFeatures(), Features.getSupported());, +                }, +            }, +++ b/src/test/java/org/elasticsearch/test/rest/parser/RestTestSectionParser.java, +        boolean skip = testSection.getSkipSection().skip(parseContext.getCurrentVersion());, +++ b/rest-api-spec/test/README.asciidoc, +The skip section can also be used to list new features that need to be]