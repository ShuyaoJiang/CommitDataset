[+++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String defaultParallel = 'auto', +        // Count physical cores on any Linux distro ( don't count hyper-threading ), +        if (project.file("/proc/cpuinfo").exists()) {, +            Map<String, Integer> socketToCore = [:], +            String currentID = "", +            project.file("/proc/cpuinfo").readLines().forEach({ line ->, +                if (line.contains(":")) {, +                    List<String> parts = line.split(":", 2).collect({it.trim()}), +                    String name = parts[0], value = parts[1], +                    // the ID of the CPU socket, +                    if (name == "physical id") {, +                        currentID = value, +                    }, +                    // Number  of cores not including hyper-threading, +                    if (name == "cpu cores") {, +                        assert currentID.isEmpty() == false, +                        socketToCore[currentID] = Integer.valueOf(value), +                        currentID = "", +                    }, +                }, +            }), +            defaultParallel = socketToCore.values().sum().toString();, +        }, +            parallelism System.getProperty('tests.jvms', defaultParallel), +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String defaultParallel = 'auto', +        // Count physical cores on any Linux distro ( don't count hyper-threading ), +        if (project.file("/proc/cpuinfo").exists()) {, +            Map<String, Integer> socketToCore = [:], +            String currentID = "", +            project.file("/proc/cpuinfo").readLines().forEach({ line ->, +                if (line.contains(":")) {, +                    List<String> parts = line.split(":", 2).collect({it.trim()}), +                    String name = parts[0], value = parts[1], +                    // the ID of the CPU socket, +                    if (name == "physical id") {, +                        currentID = value, +                    }, +                    // Number  of cores not including hyper-threading, +                    if (name == "cpu cores") {, +                        assert currentID.isEmpty() == false, +                        socketToCore[currentID] = Integer.valueOf(value), +                        currentID = "", +                    }, +                }, +            }), +            defaultParallel = socketToCore.values().sum().toString();, +        }, +            parallelism System.getProperty('tests.jvms', defaultParallel), +++ b/buildSrc/src/main/resources/eclipse.settings/org.eclipse.jdt.core.prefs, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String defaultParallel = 'auto', +        // Count physical cores on any Linux distro ( don't count hyper-threading ), +        if (project.file("/proc/cpuinfo").exists()) {, +            Map<String, Integer> socketToCore = [:], +            String currentID = "", +            project.file("/proc/cpuinfo").readLines().forEach({ line ->, +                if (line.contains(":")) {, +                    List<String> parts = line.split(":", 2).collect({it.trim()}), +                    String name = parts[0], value = parts[1], +                    // the ID of the CPU socket, +                    if (name == "physical id") {, +                        currentID = value, +                    }, +                    // Number  of cores not including hyper-threading, +                    if (name == "cpu cores") {, +                        assert currentID.isEmpty() == false, +                        socketToCore[currentID] = Integer.valueOf(value), +                        currentID = "", +                    }, +                }, +            }), +            defaultParallel = socketToCore.values().sum().toString();, +        }, +            parallelism System.getProperty('tests.jvms', defaultParallel), +++ b/buildSrc/src/main/resources/eclipse.settings/org.eclipse.jdt.core.prefs, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-6d9c714052, +netty             = 4.1.30.Final, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        String defaultParallel = 'auto', +        // Count physical cores on any Linux distro ( don't count hyper-threading ), +        if (project.file("/proc/cpuinfo").exists()) {, +            Map<String, Integer> socketToCore = [:]]