[+++ b/docs/reference/analysis/tokenfilters/hunspell-tokenfilter.asciidoc, +This dictionary directory is expected to hold a single `*.aff` and, +one or more `*.dic` files (all of which will automatically be picked up)., +For example, assuming the default hunspell location is used, the, +following directory layout will define the `en_US` dictionary:, +==== Dictionary loading, +, +By default, the configured (`indices.analysis.hunspell.dictionary.location`), +or default Hunspell directory (`config/hunspell/`) is checked for dictionaries, +when the node starts up, and any dictionaries are automatically loaded., +, +Dictionary loading can be deferred until they are actually used by setting, +`indices.analysis.hunspell.dictionary.lazy` to `true`in the config file., +, +[float], +++ b/docs/reference/analysis/tokenfilters/hunspell-tokenfilter.asciidoc, +This dictionary directory is expected to hold a single `*.aff` and, +one or more `*.dic` files (all of which will automatically be picked up)., +For example, assuming the default hunspell location is used, the, +following directory layout will define the `en_US` dictionary:, +==== Dictionary loading, +, +By default, the configured (`indices.analysis.hunspell.dictionary.location`), +or default Hunspell directory (`config/hunspell/`) is checked for dictionaries, +when the node starts up, and any dictionaries are automatically loaded., +, +Dictionary loading can be deferred until they are actually used by setting, +`indices.analysis.hunspell.dictionary.lazy` to `true`in the config file., +, +[float], +++ b/src/main/java/org/elasticsearch/index/analysis/HunspellTokenFilterFactory.java, +++ b/docs/reference/analysis/tokenfilters/hunspell-tokenfilter.asciidoc, +This dictionary directory is expected to hold a single `*.aff` and, +one or more `*.dic` files (all of which will automatically be picked up)., +For example, assuming the default hunspell location is used, the, +following directory layout will define the `en_US` dictionary:, +==== Dictionary loading, +, +By default, the configured (`indices.analysis.hunspell.dictionary.location`), +or default Hunspell directory (`config/hunspell/`) is checked for dictionaries, +when the node starts up, and any dictionaries are automatically loaded., +, +Dictionary loading can be deferred until they are actually used by setting, +`indices.analysis.hunspell.dictionary.lazy` to `true`in the config file., +, +[float], +++ b/src/main/java/org/elasticsearch/index/analysis/HunspellTokenFilterFactory.java, +++ b/src/main/java/org/elasticsearch/indices/analysis/HunspellService.java, +    public final static String HUNSPELL_LAZY_LOAD = "indices.analysis.hunspell.dictionary.lazy";, +    public final static String HUNSPELL_IGNORE_CASE = "indices.analysis.hunspell.dictionary.ignore_case";, +    public final static String HUNSPELL_LOCATION = "indices.analysis.hunspell.dictionary.location";, +        this.defaultIgnoreCase = settings.getAsBoolean(HUNSPELL_IGNORE_CASE, false);, +        if (!settings.getAsBoolean(HUNSPELL_LAZY_LOAD, false)) {, +    }, +        String location = settings.get(HUNSPELL_LOCATION, null);, +                    if (file.list(DIC_FILE_FILTER).length > 0) { // just making sure it's indeed a dictionary dir, +        if (affixFiles.length == 0) {, +        if (affixFiles.length != 1) {, +            throw new ElasticsearchException(String.format(Locale.ROOT, "Too many affix files exist for hunspell dictionary [%s]", locale));, +        }, +++ b/docs/reference/analysis/tokenfilters/hunspell-tokenfilter.asciidoc, +This dictionary directory is expected to hold a single `*.aff` and, +one or more `*.dic` files (all of which will automatically be picked up)., +For example, assuming the default hunspell location is used, the, +following directory layout will define the `en_US` dictionary:, +==== Dictionary loading, +, +By default, the configured (`indices.analysis.hunspell.dictionary.location`), +or default Hunspell directory (`config/hunspell/`) is checked for dictionaries, +when the node starts up, and any dictionaries are automatically loaded., +, +Dictionary loading can be deferred until they are actually used by setting, +`indices.analysis.hunspell.dictionary.lazy` to `true`in the config file., +, +[float], +++ b/src/main/java/org/elasticsearch/index/analysis/HunspellTokenFilterFactory.java, +++ b/src/main/java/org/elasticsearch/indices/analysis/HunspellService.java, +    public final static String HUNSPELL_LAZY_LOAD = "indices.analysis.hunspell.dictionary.lazy";, +    public final static String HUNSPELL_IGNORE_CASE = "indices.analysis.hunspell.dictionary.ignore_case";, +    public final static String HUNSPELL_LOCATION = "indices.analysis.hunspell.dictionary.location";, +        this.defaultIgnoreCase = settings.getAsBoolean(HUNSPELL_IGNORE_CASE, false);, +        if (!settings.getAsBoolean(HUNSPELL_LAZY_LOAD, false)) {, +    }, +        String location = settings.get(HUNSPELL_LOCATION, null);, +                    if (file.list(DIC_FILE_FILTER).length > 0) { // just making sure it's indeed a dictionary dir, +        if (affixFiles.length == 0) {, +        if (affixFiles.length != 1) {, +            throw new ElasticsearchException(String.format(Locale.ROOT, "Too many affix files exist for hunspell dictionary [%s]", locale));, +        }, +++ b/src/test/java/org/elasticsearch/indices/analyze/HunspellServiceTests.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.test.ElasticsearchIntegrationTest.Scope;, +import org.hamcrest.Matchers;, +import static org.elasticsearch.indices.analysis.HunspellService.*;, +                .put(HUNSPELL_LAZY_LOAD, randomBoolean()), +                .put(HUNSPELL_IGNORE_CASE, true), +                .put(HUNSPELL_LAZY_LOAD, randomBoolean()), +                .put(HUNSPELL_IGNORE_CASE, true), +                .put(HUNSPELL_LOCATION, getResource("/indices/analyze/conf_dir/hunspell"))]