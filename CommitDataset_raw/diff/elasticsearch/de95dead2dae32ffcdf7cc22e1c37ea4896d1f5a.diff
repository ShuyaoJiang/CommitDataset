[+++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionProcessorTests.java, +    public void testLCaseWithAZTRLocale() {, +        Locale initialLocale = Locale.getDefault();, +        try {, +            StringProcessor proc = new StringProcessor(StringOperation.LCASE);, +            , +            Locale.setDefault(Locale.forLanguageTag("az"));, +            assertEquals("\u0069\u0307", proc.process("\u0130"));, +            assertEquals("\u0069", proc.process("\u0049"));, +        } finally {, +            // restore the original Locale, +            Locale.setDefault(initialLocale);, +        }, +    public void testUCaseWithAZTRLocale() {, +        Locale initialLocale = Locale.getDefault();, +        try {, +            StringProcessor proc = new StringProcessor(StringOperation.UCASE);, +            , +            Locale.setDefault(Locale.forLanguageTag("az"));, +            assertEquals("\u0049", proc.process("\u0069"));, +        } finally {, +            // restore the original Locale, +            Locale.setDefault(initialLocale);, +        }, +        assertEquals(1, proc.process('\u20ac')); // euro symbol, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/string/StringFunctionProcessorTests.java, +    public void testLCaseWithAZTRLocale() {, +        Locale initialLocale = Locale.getDefault();, +        try {, +            StringProcessor proc = new StringProcessor(StringOperation.LCASE);, +            , +            Locale.setDefault(Locale.forLanguageTag("az"));, +            assertEquals("\u0069\u0307", proc.process("\u0130"));, +            assertEquals("\u0069", proc.process("\u0049"));, +        } finally {, +            // restore the original Locale, +            Locale.setDefault(initialLocale);, +        }, +    public void testUCaseWithAZTRLocale() {, +        Locale initialLocale = Locale.getDefault();, +        try {, +            StringProcessor proc = new StringProcessor(StringOperation.UCASE);, +            , +            Locale.setDefault(Locale.forLanguageTag("az"));, +            assertEquals("\u0049", proc.process("\u0069"));, +        } finally {, +            // restore the original Locale, +            Locale.setDefault(initialLocale);, +        }, +        assertEquals(1, proc.process('\u20ac')); // euro symbol, +++ b/x-pack/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/jdbc/SqlSpecTestCase.java, +import java.util.Arrays;, +        tests.addAll(readScriptSpec("/case-functions.sql-spec", parser));, +        // we skip the tests in case of these locales because ES-SQL is Locale-insensitive for now, +        // while H2 does take the Locale into consideration, +        String[] h2IncompatibleLocales = new String[] {"tr", "az", "tr-TR", "tr-CY", "az-Latn", "az-Cyrl", "az-Latn-AZ", "az-Cyrl-AZ"};, +        boolean goodLocale = !Arrays.stream(h2IncompatibleLocales), +                .anyMatch((l) -> Locale.getDefault().equals(new Locale.Builder().setLanguageTag(l).build()));]