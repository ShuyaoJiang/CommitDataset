[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import java.util.Arrays;, +    public SearchRequestBuilder setQuery(QueryBuilder<?> queryBuilder) {, +    public SearchRequestBuilder setPostFilter(QueryBuilder<?> postFilter) {, +        sourceBuilder().fields(Arrays.asList(fields));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import java.util.Arrays;, +    public SearchRequestBuilder setQuery(QueryBuilder<?> queryBuilder) {, +    public SearchRequestBuilder setPostFilter(QueryBuilder<?> postFilter) {, +        sourceBuilder().fields(Arrays.asList(fields));, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.rest.BaseRestHandler;, +import org.elasticsearch.rest.BytesRestResponse;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.RestResponse;, +            QueryBuilder<?> queryBuilder = RestActions.parseQuerySource(request);, +            if (queryBuilder != null) {, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder();, +                querySourceBuilder.setQuery(queryBuilder);, +                validateQueryRequest.source(querySourceBuilder.buildAsBytes());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import java.util.Arrays;, +    public SearchRequestBuilder setQuery(QueryBuilder<?> queryBuilder) {, +    public SearchRequestBuilder setPostFilter(QueryBuilder<?> postFilter) {, +        sourceBuilder().fields(Arrays.asList(fields));, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.rest.BaseRestHandler;, +import org.elasticsearch.rest.BytesRestResponse;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.RestResponse;, +            QueryBuilder<?> queryBuilder = RestActions.parseQuerySource(request);, +            if (queryBuilder != null) {, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder();, +                querySourceBuilder.setQuery(queryBuilder);, +                validateQueryRequest.source(querySourceBuilder.buildAsBytes());, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.RestResponse;, +            QueryBuilder<?> queryBuilder = RestActions.parseQuerySource(request);, +            if (queryBuilder != null) {, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder();, +                querySourceBuilder.setQuery(queryBuilder);, +                countRequest.source(querySourceBuilder.buildAsBytes());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import java.util.Arrays;, +    public SearchRequestBuilder setQuery(QueryBuilder<?> queryBuilder) {, +    public SearchRequestBuilder setPostFilter(QueryBuilder<?> postFilter) {, +        sourceBuilder().fields(Arrays.asList(fields));, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.rest.BaseRestHandler;, +import org.elasticsearch.rest.BytesRestResponse;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.RestResponse;, +            QueryBuilder<?> queryBuilder = RestActions.parseQuerySource(request);, +            if (queryBuilder != null) {, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder();, +                querySourceBuilder.setQuery(queryBuilder);, +                validateQueryRequest.source(querySourceBuilder.buildAsBytes());, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.RestResponse;, +            QueryBuilder<?> queryBuilder = RestActions.parseQuerySource(request);, +            if (queryBuilder != null) {, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder();, +                querySourceBuilder.setQuery(queryBuilder);, +                countRequest.source(querySourceBuilder.buildAsBytes());, +++ b/core/src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.rest.BaseRestHandler;, +import org.elasticsearch.rest.BytesRestResponse;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.RestResponse;, +import static org.elasticsearch.search.internal.SearchContext.DEFAULT_TERMINATE_AFTER;, +            QueryBuilder<?> queryBuilder = RestActions.parseQuerySource(request);, +            if (queryBuilder != null) {, +                QuerySourceBuilder querySourceBuilder = new QuerySourceBuilder();, +                querySourceBuilder.setQuery(queryBuilder);, +                countRequest.source(querySourceBuilder.buildAsBytes());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import java.util.Arrays;, +    public SearchRequestBuilder setQuery(QueryBuilder<?> queryBuilder) {, +    public SearchRequestBuilder setPostFilter(QueryBuilder<?> postFilter) {, +        sourceBuilder().fields(Arrays.asList(fields));]