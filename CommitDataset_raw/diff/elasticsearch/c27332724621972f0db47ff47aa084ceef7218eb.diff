[+++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import groovy.xml.NamespaceBuilderSupport, +import org.apache.tools.ant.BuildException, +import org.apache.tools.ant.DefaultLogger, +            haltOnFailure: true, // we want to capture when a build failed, but will decide whether to rethrow later, +        DefaultLogger listener = null, +        ByteArrayOutputStream antLoggingBuffer = null, +        if (logger.isInfoEnabled() == false) {, +            // in info logging, ant already outputs info level, so we see everything, +            // but on errors or when debugging, we want to see info level messages, +            // because junit4 emits jvm output with ant logging, +            if (testLoggingConfig.outputMode == TestLoggingConfiguration.OutputMode.ALWAYS) {, +                // we want all output, so just stream directly, +                listener = new DefaultLogger(, +                        errorPrintStream: System.err,, +                        outputPrintStream: System.out,, +                        messageOutputLevel: org.apache.tools.ant.Project.MSG_INFO), +            } else {, +                // we want to buffer the info, and emit it if the test fails, +                antLoggingBuffer = new ByteArrayOutputStream(), +                PrintStream stream = new PrintStream(antLoggingBuffer, true, "UTF-8"), +                listener = new DefaultLogger(, +                        errorPrintStream: stream,, +                        outputPrintStream: stream,, +                        messageOutputLevel: org.apache.tools.ant.Project.MSG_INFO), +            }, +            project.ant.project.addBuildListener(listener), +        }, +, +        NamespaceBuilderSupport junit4 = NamespaceBuilder.newInstance(ant, 'junit4'), +        try {, +        } catch (BuildException e) {, +            if (antLoggingBuffer != null) {, +                logger.error('JUnit4 test failed, ant output was:'), +                logger.error(antLoggingBuffer.toString('UTF-8')), +            }, +            if (haltOnFailure) {, +                throw e;, +            }, +        }, +, +        if (listener != null) {, +            // remove the listener we added so other ant tasks dont have verbose logging!, +            project.ant.project.removeBuildListener(listener), +        }, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import groovy.xml.NamespaceBuilderSupport, +import org.apache.tools.ant.BuildException, +import org.apache.tools.ant.DefaultLogger, +            haltOnFailure: true, // we want to capture when a build failed, but will decide whether to rethrow later, +        DefaultLogger listener = null, +        ByteArrayOutputStream antLoggingBuffer = null, +        if (logger.isInfoEnabled() == false) {, +            // in info logging, ant already outputs info level, so we see everything, +            // but on errors or when debugging, we want to see info level messages, +            // because junit4 emits jvm output with ant logging, +            if (testLoggingConfig.outputMode == TestLoggingConfiguration.OutputMode.ALWAYS) {, +                // we want all output, so just stream directly, +                listener = new DefaultLogger(, +                        errorPrintStream: System.err,, +                        outputPrintStream: System.out,, +                        messageOutputLevel: org.apache.tools.ant.Project.MSG_INFO), +            } else {, +                // we want to buffer the info, and emit it if the test fails, +                antLoggingBuffer = new ByteArrayOutputStream(), +                PrintStream stream = new PrintStream(antLoggingBuffer, true, "UTF-8"), +                listener = new DefaultLogger(, +                        errorPrintStream: stream,, +                        outputPrintStream: stream,, +                        messageOutputLevel: org.apache.tools.ant.Project.MSG_INFO), +            }, +            project.ant.project.addBuildListener(listener), +        }, +, +        NamespaceBuilderSupport junit4 = NamespaceBuilder.newInstance(ant, 'junit4'), +        try {, +        } catch (BuildException e) {, +            if (antLoggingBuffer != null) {, +                logger.error('JUnit4 test failed, ant output was:'), +                logger.error(antLoggingBuffer.toString('UTF-8')), +            }, +            if (haltOnFailure) {, +                throw e;, +            }, +        }, +, +        if (listener != null) {, +            // remove the listener we added so other ant tasks dont have verbose logging!, +            project.ant.project.removeBuildListener(listener), +        }, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +        outStream = new LoggingOutputStream(logger: logger, level: LogLevel.LIFECYCLE, prefix: "  1> "), +            emitSuiteStart(LogLevel.LIFECYCLE, evt.getDescription());, +        if (isPassthrough()) {, +        LogLevel level = e.isSuccessful() && config.outputMode != OutputMode.ALWAYS ? LogLevel.INFO : LogLevel.LIFECYCLE, +, +    /** Returns true if output should be logged immediately. */, +        return forkedJvmCount == 1 && config.outputMode == OutputMode.ALWAYS, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import groovy.xml.NamespaceBuilderSupport]