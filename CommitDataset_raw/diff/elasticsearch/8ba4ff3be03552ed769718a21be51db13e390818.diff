[+++ b/build.gradle, +, +    // Handle javadoc dependencies across projects. Order matters: the linksOffline for, +    // org.elasticsearch:elasticsearch must be the last one or all the links for the, +    // other packages (e.g org.elasticsearch.client) will point to core rather than, +    // their own artifacts., +    if (project.plugins.hasPlugin(BuildPlugin)) {, +      String artifactsHost = VersionProperties.elasticsearch.endsWith("-SNAPSHOT") ? "https://snapshots.elastic.co" : "https://artifacts.elastic.co", +      Closure sortClosure = { a, b -> b.group <=> a.group }, +      Closure depJavadocClosure = { dep ->, +        if (dep.group != null && dep.group.startsWith('org.elasticsearch')) {, +          String substitution = project.ext.projectSubstitutions.get("${dep.group}:${dep.name}:${dep.version}"), +          if (substitution != null) {, +            project.javadoc.dependsOn substitution + ':javadoc', +            String artifactPath = dep.group.replaceAll('\\.', '/') + '/' + dep.name.replaceAll('\\.', '/') + '/' + dep.version, +            project.javadoc.options.linksOffline artifactsHost + "/javadoc/" + artifactPath, "${project.project(substitution).buildDir}/docs/javadoc/", +          }, +        }, +      }, +      project.configurations.compile.dependencies.findAll().toSorted(sortClosure).each(depJavadocClosure), +      project.configurations.provided.dependencies.findAll().toSorted(sortClosure).each(depJavadocClosure), +    }, +++ b/build.gradle, +, +    // Handle javadoc dependencies across projects. Order matters: the linksOffline for, +    // org.elasticsearch:elasticsearch must be the last one or all the links for the, +    // other packages (e.g org.elasticsearch.client) will point to core rather than, +    // their own artifacts., +    if (project.plugins.hasPlugin(BuildPlugin)) {, +      String artifactsHost = VersionProperties.elasticsearch.endsWith("-SNAPSHOT") ? "https://snapshots.elastic.co" : "https://artifacts.elastic.co", +      Closure sortClosure = { a, b -> b.group <=> a.group }, +      Closure depJavadocClosure = { dep ->, +        if (dep.group != null && dep.group.startsWith('org.elasticsearch')) {, +          String substitution = project.ext.projectSubstitutions.get("${dep.group}:${dep.name}:${dep.version}"), +          if (substitution != null) {, +            project.javadoc.dependsOn substitution + ':javadoc', +            String artifactPath = dep.group.replaceAll('\\.', '/') + '/' + dep.name.replaceAll('\\.', '/') + '/' + dep.version, +            project.javadoc.options.linksOffline artifactsHost + "/javadoc/" + artifactPath, "${project.project(substitution).buildDir}/docs/javadoc/", +          }, +        }, +      }, +      project.configurations.compile.dependencies.findAll().toSorted(sortClosure).each(depJavadocClosure), +      project.configurations.provided.dependencies.findAll().toSorted(sortClosure).each(depJavadocClosure), +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy]