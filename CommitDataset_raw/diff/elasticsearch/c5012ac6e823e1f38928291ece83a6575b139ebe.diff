[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/installing-xes.asciidoc, +. {xpack} will try to automatically create a number of indices within {es}., +By default, {es} is configured to allow automatic index creation, and no, +additional steps are required. However, if you have disabled automatic index, +creation in {es}, you must configure, ++, +[IMPORTANT], +=============================================================================, +If you are using https://www.elastic.co/products/logstash[Logstash], +or https://www.elastic.co/products/beats[Beats] then you will most likely, +require additional index names in your `action.auto_create_index` setting, and, +the exact value will depend on your local configuration. If you are unsure of, +the correct value for your environment, you may consider setting the value to, + `*` which will allow automatic creation of all indices., +=============================================================================, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/installing-xes.asciidoc, +. {xpack} will try to automatically create a number of indices within {es}., +By default, {es} is configured to allow automatic index creation, and no, +additional steps are required. However, if you have disabled automatic index, +creation in {es}, you must configure, ++, +[IMPORTANT], +=============================================================================, +If you are using https://www.elastic.co/products/logstash[Logstash], +or https://www.elastic.co/products/beats[Beats] then you will most likely, +require additional index names in your `action.auto_create_index` setting, and, +the exact value will depend on your local configuration. If you are unsure of, +the correct value for your environment, you may consider setting the value to, + `*` which will allow automatic creation of all indices., +=============================================================================, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/installing-xes.asciidoc, +. {xpack} will try to automatically create a number of indices within {es}., +By default, {es} is configured to allow automatic index creation, and no, +additional steps are required. However, if you have disabled automatic index, +creation in {es}, you must configure, ++, +[IMPORTANT], +=============================================================================, +If you are using https://www.elastic.co/products/logstash[Logstash], +or https://www.elastic.co/products/beats[Beats] then you will most likely, +require additional index names in your `action.auto_create_index` setting, and, +the exact value will depend on your local configuration. If you are unsure of, +the correct value for your environment, you may consider setting the value to, + `*` which will allow automatic creation of all indices., +=============================================================================, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/docs/en/security/authentication/pki-realm.asciidoc, +. Restart Elasticsearch., +, +[[pki-ssl-config]], +==== PKI and SSL Settings, +, +The PKI realm relies on the SSL settings of the node's network interface, +(transport or http). The realm can be configured to be more restrictive than, +the underlying network connection - that is, it is possible to configure the, +node such that some connections are accepted by the network interface but then, +fail to be authenticated by the PKI realm. However the reverse is not possible, +- the PKI realm cannot authenticate a connection that has been refused by the, +network interface., +, +In particular this means:, +, +* The transport or http interface must request client certificates by setting, +  `client_authentication` to `optional` or `required`., +* The interface must _trust_ the certificate that is presented by the client, +  by configuring either the `truststore` or `certificate_authorities` paths,, +  or by setting `verification_mode` to `none`., +* The _protocols_ supported by the interface must be compatible with those, +  used by the client., +, +, +The relevant network interface (transport or http) must be configured to trust, +any certificate that is to be used within the PKI realm. However it possible to, +configure the PKI realm to trust only a _subset_ of the certificates accepted, +by the network interface., +This is useful when the SSL/TLS layer trusts clients with certificates that are, +signed by a different CA than the one that signs your users' certificates., +, +To configure the PKI realm with its own truststore, specify the, +`truststore.path` option as below:, +]