[+++ b/docs/plugins/analysis-icu.asciidoc, +[[analysis-icu-analyzer]], +==== ICU Analyzer, +, +Performs basic normalization, tokenization and character folding, using the, +`icu_normalizer` char filter, `icu_tokenizer` and `icu_normalizer` token filter, +, +The following parameters are accepted:, +, +[horizontal], +, +`method`::, +, +    Normalization method.  Accepts `nfkc`, `nfc` or `nfkc_cf` (default), +, +`mode`::, +, +    Normalization mode.  Accepts `compose` (default) or `decompose`., +, +++ b/docs/plugins/analysis-icu.asciidoc, +[[analysis-icu-analyzer]], +==== ICU Analyzer, +, +Performs basic normalization, tokenization and character folding, using the, +`icu_normalizer` char filter, `icu_tokenizer` and `icu_normalizer` token filter, +, +The following parameters are accepted:, +, +[horizontal], +, +`method`::, +, +    Normalization method.  Accepts `nfkc`, `nfc` or `nfkc_cf` (default), +, +`mode`::, +, +    Normalization mode.  Accepts `compose` (default) or `decompose`., +, +++ b/docs/reference/analysis/analyzers/lang-analyzer.asciidoc, +NOTE: You may find that `icu_analyzer` in the ICU analysis plugin works better, +for CJK text than the `cjk` analyzer.  Experiment with your text and queries., +, +++ b/docs/plugins/analysis-icu.asciidoc, +[[analysis-icu-analyzer]], +==== ICU Analyzer, +, +Performs basic normalization, tokenization and character folding, using the, +`icu_normalizer` char filter, `icu_tokenizer` and `icu_normalizer` token filter, +, +The following parameters are accepted:, +, +[horizontal], +, +`method`::, +, +    Normalization method.  Accepts `nfkc`, `nfc` or `nfkc_cf` (default), +, +`mode`::, +, +    Normalization mode.  Accepts `compose` (default) or `decompose`., +, +++ b/docs/reference/analysis/analyzers/lang-analyzer.asciidoc, +NOTE: You may find that `icu_analyzer` in the ICU analysis plugin works better, +for CJK text than the `cjk` analyzer.  Experiment with your text and queries., +, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuAnalyzerProvider.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.analysis;, +, +import com.ibm.icu.text.Normalizer2;, +import org.apache.lucene.analysis.Analyzer;, +import org.apache.lucene.analysis.Tokenizer;, +import org.apache.lucene.analysis.icu.ICUFoldingFilter;, +import org.apache.lucene.analysis.icu.ICUNormalizer2CharFilter;, +import org.apache.lucene.analysis.icu.segmentation.ICUTokenizer;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.index.IndexSettings;, +, +import java.io.Reader;, +, +public class IcuAnalyzerProvider extends AbstractIndexAnalyzerProvider<Analyzer> {]