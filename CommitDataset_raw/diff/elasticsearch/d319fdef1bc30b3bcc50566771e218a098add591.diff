[+++ b/src/main/java/org/elasticsearch/watcher/WatcherService.java, +            try {, +            } catch (WatchLockService.TimedOutException we) {, +                logger.warn("error stopping WatchLockService", we);, +            }, +++ b/src/main/java/org/elasticsearch/watcher/WatcherService.java, +            try {, +            } catch (WatchLockService.TimedOutException we) {, +                logger.warn("error stopping WatchLockService", we);, +            }, +++ b/src/main/java/org/elasticsearch/watcher/watch/WatchLockService.java, +import org.elasticsearch.common.component.AbstractComponent;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.watcher.WatcherException;, +import java.util.concurrent.TimeUnit;, +public class WatchLockService extends AbstractComponent {, +    private static final TimeValue DEFAULT_MAX_STOP_TIMEOUT = new TimeValue(30, TimeUnit.SECONDS);, +    private static final String DEFAULT_MAX_STOP_TIMEOUT_SETTING = "watcher.stop.timeout";, +, +    private final TimeValue maxStopTimeout;, +, +    @Inject, +    public WatchLockService(Settings settings){, +        super(settings);, +        maxStopTimeout = settings.getAsTime(DEFAULT_MAX_STOP_TIMEOUT_SETTING, DEFAULT_MAX_STOP_TIMEOUT);, +    }, +, +    WatchLockService(TimeValue maxStopTimeout){, +        super(ImmutableSettings.EMPTY);, +        this.maxStopTimeout = maxStopTimeout;, +    }, +    /**, +     * @throws TimedOutException if we have waited longer than maxStopTimeout, +     */, +    public void stop() throws TimedOutException {, +            long startWait = System.currentTimeMillis();, +                TimeValue timeWaiting = new TimeValue(System.currentTimeMillis() - startWait);, +                if (timeWaiting.getSeconds() > maxStopTimeout.getSeconds()) {, +                    throw new TimedOutException("timed out waiting for watches to complete, after waiting for [{}]", timeWaiting);, +                }, +, +    public static class TimedOutException extends WatcherException {, +, +        public TimedOutException(String msg, Throwable cause, Object... args) {, +            super(msg, cause, args);, +        }, +, +        public TimedOutException(String msg, Object... args) {, +            super(msg, args);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/watcher/WatcherService.java, +            try {, +            } catch (WatchLockService.TimedOutException we) {, +                logger.warn("error stopping WatchLockService", we);, +            }, +++ b/src/main/java/org/elasticsearch/watcher/watch/WatchLockService.java, +import org.elasticsearch.common.component.AbstractComponent;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.watcher.WatcherException;, +import java.util.concurrent.TimeUnit;, +public class WatchLockService extends AbstractComponent {, +    private static final TimeValue DEFAULT_MAX_STOP_TIMEOUT = new TimeValue(30, TimeUnit.SECONDS);, +    private static final String DEFAULT_MAX_STOP_TIMEOUT_SETTING = "watcher.stop.timeout";, +, +    private final TimeValue maxStopTimeout;, +, +    @Inject, +    public WatchLockService(Settings settings){, +        super(settings);, +        maxStopTimeout = settings.getAsTime(DEFAULT_MAX_STOP_TIMEOUT_SETTING, DEFAULT_MAX_STOP_TIMEOUT);, +    }, +, +    WatchLockService(TimeValue maxStopTimeout){, +        super(ImmutableSettings.EMPTY);, +        this.maxStopTimeout = maxStopTimeout;, +    }, +    /**, +     * @throws TimedOutException if we have waited longer than maxStopTimeout, +     */, +    public void stop() throws TimedOutException {, +            long startWait = System.currentTimeMillis();, +                TimeValue timeWaiting = new TimeValue(System.currentTimeMillis() - startWait);, +                if (timeWaiting.getSeconds() > maxStopTimeout.getSeconds()) {, +                    throw new TimedOutException("timed out waiting for watches to complete, after waiting for [{}]", timeWaiting);, +                }, +, +    public static class TimedOutException extends WatcherException {, +, +        public TimedOutException(String msg, Throwable cause, Object... args) {, +            super(msg, cause, args);, +        }, +, +        public TimedOutException(String msg, Object... args) {]