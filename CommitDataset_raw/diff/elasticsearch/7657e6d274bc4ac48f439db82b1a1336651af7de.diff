[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PostCalendarEventRequest;, +    static Request postCalendarEvents(PostCalendarEventRequest postCalendarEventRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("calendars"), +            .addPathPart(postCalendarEventRequest.getCalendarId()), +            .addPathPartAsIs("events"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(postCalendarEventRequest,, +            REQUEST_BODY_CONTENT_TYPE,, +            PostCalendarEventRequest.EXCLUDE_CALENDAR_ID_PARAMS));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PostCalendarEventRequest;, +    static Request postCalendarEvents(PostCalendarEventRequest postCalendarEventRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("calendars"), +            .addPathPart(postCalendarEventRequest.getCalendarId()), +            .addPathPartAsIs("events"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(postCalendarEventRequest,, +            REQUEST_BODY_CONTENT_TYPE,, +            PostCalendarEventRequest.EXCLUDE_CALENDAR_ID_PARAMS));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.PostCalendarEventRequest;, +import org.elasticsearch.client.ml.PostCalendarEventResponse;, +     * Creates new events for a a machine learning calendar, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-calendar-event.html">, +     *  Add Events to Calendar API</a>, +     *, +     * @param request The request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return The {@link PostCalendarEventRequest} containing the scheduled events, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public PostCalendarEventResponse postCalendarEvent(PostCalendarEventRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::postCalendarEvents,, +            options,, +            PostCalendarEventResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Creates new events for a a machine learning calendar asynchronously, notifies the listener on completion, +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-calendar-event.html">, +     *  Add Events to Calendar API</a>, +     *, +     * @param request  The request, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void postCalendarEventAsync(PostCalendarEventRequest request, RequestOptions options,, +                                       ActionListener<PostCalendarEventResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::postCalendarEvents,, +            options,, +            PostCalendarEventResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.PostCalendarEventRequest;, +    static Request postCalendarEvents(PostCalendarEventRequest postCalendarEventRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("calendars"), +            .addPathPart(postCalendarEventRequest.getCalendarId()), +            .addPathPartAsIs("events"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(postCalendarEventRequest,, +            REQUEST_BODY_CONTENT_TYPE,, +            PostCalendarEventRequest.EXCLUDE_CALENDAR_ID_PARAMS));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.PostCalendarEventRequest;, +import org.elasticsearch.client.ml.PostCalendarEventResponse;, +     * Creates new events for a a machine learning calendar, +     * <p>]