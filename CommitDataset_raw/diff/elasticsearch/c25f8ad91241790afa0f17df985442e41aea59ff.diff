[+++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/KeyedLock.java, +    private final ConcurrentMap<T, KeyLock> map = ConcurrentCollections.newConcurrentMapWithAggressiveConcurrency();, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/KeyedLock.java, +    private final ConcurrentMap<T, KeyLock> map = ConcurrentCollections.newConcurrentMapWithAggressiveConcurrency();, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +import org.elasticsearch.common.util.concurrent.KeyedLock;, +    private final KeyedLock<BytesRef> keyedLock = new KeyedLock<>();, +        try (Releasable ignored = acquireLock(index.uid())) {, +        try (Releasable ignored = acquireLock(delete.uid())) {, +            try (Releasable ignored = acquireLock(uid)) { // can we do it without this lock on each value? maybe batch to a set and get the lock once per set?, +    private Releasable acquireLock(BytesRef uid) {, +        return keyedLock.acquire(uid);, +    private Releasable acquireLock(Term uid) {, +        return acquireLock(uid.bytes());]