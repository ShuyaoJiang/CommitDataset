[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder startObject(String name, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        startObject();, +        return this;, +    }, +, +    public XContentBuilder field(String name, FieldCaseConversion conversion) throws IOException {, +        if (conversion == FieldCaseConversion.UNDERSCORE) {, +            if (cachedStringBuilder == null) {, +                cachedStringBuilder = new StringBuilder();, +            }, +            name = Strings.toUnderscoreCase(name, cachedStringBuilder);, +        } else if (conversion == FieldCaseConversion.CAMELCASE) {, +            if (cachedStringBuilder == null) {, +                cachedStringBuilder = new StringBuilder();, +            }, +            name = Strings.toCamelCase(name, cachedStringBuilder);, +        }, +        generator.writeFieldName(name);, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public XContentBuilder startObject(String name, FieldCaseConversion conversion) throws IOException {, +        field(name, conversion);, +        startObject();, +        return this;, +    }, +, +    public XContentBuilder field(String name, FieldCaseConversion conversion) throws IOException {, +        if (conversion == FieldCaseConversion.UNDERSCORE) {, +            if (cachedStringBuilder == null) {, +                cachedStringBuilder = new StringBuilder();, +            }, +            name = Strings.toUnderscoreCase(name, cachedStringBuilder);, +        } else if (conversion == FieldCaseConversion.CAMELCASE) {, +            if (cachedStringBuilder == null) {, +                cachedStringBuilder = new StringBuilder();, +            }, +            name = Strings.toCamelCase(name, cachedStringBuilder);, +        }, +        generator.writeFieldName(name);, +        return this;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java, +import org.elasticsearch.common.xcontent.XContentBuilderString;, +                    builder.field(Fields.CLUSTER_NAME, response.clusterName());, +                    builder.field(Fields.STATUS, response.status().name().toLowerCase());, +                    builder.field(Fields.TIMED_OUT, response.timedOut());, +                    builder.field(Fields.NUMBER_OF_NODES, response.numberOfNodes());, +                    builder.field(Fields.ACTIVE_PRIMARY_SHARDS, response.activePrimaryShards());, +                    builder.field(Fields.ACTIVE_SHARDS, response.activeShards());, +                    builder.field(Fields.RELOCATING_SHARDS, response.relocatingShards());, +                    builder.field(Fields.INITIALIZING_SHARDS, response.initializingShards());, +                    builder.field(Fields.UNASSIGNED_SHARDS, response.unassignedShards());, +                        builder.startArray(Fields.VALIDATION_FAILURES);, +                                    builder.startArray(Fields.VALIDATION_FAILURES);, +                        builder.startObject(Fields.INDICES);, +                            builder.startObject(indexHealth.index(), XContentBuilder.FieldCaseConversion.NONE);, +                            builder.field(Fields.STATUS, indexHealth.status().name().toLowerCase());, +                            builder.field(Fields.NUMBER_OF_SHARDS, indexHealth.numberOfShards());, +                            builder.field(Fields.NUMBER_OF_REPLICAS, indexHealth.numberOfReplicas());, +                            builder.field(Fields.ACTIVE_PRIMARY_SHARDS, indexHealth.activePrimaryShards());, +                            builder.field(Fields.ACTIVE_SHARDS, indexHealth.activeShards());, +                            builder.field(Fields.RELOCATING_SHARDS, indexHealth.relocatingShards());, +                            builder.field(Fields.INITIALIZING_SHARDS, indexHealth.initializingShards());, +                            builder.field(Fields.UNASSIGNED_SHARDS, indexHealth.unassignedShards());, +                                builder.startArray(Fields.VALIDATION_FAILURES);, +                                builder.startObject(Fields.SHARDS);, +                                    builder.field(Fields.STATUS, shardHealth.status().name().toLowerCase());, +                                    builder.field(Fields.PRIMARY_ACTIVE, shardHealth.primaryActive());, +                                    builder.field(Fields.ACTIVE_SHARDS, shardHealth.activeShards());, +                                    builder.field(Fields.RELOCATING_SHARDS, shardHealth.relocatingShards());, +                                    builder.field(Fields.INITIALIZING_SHARDS, shardHealth.initializingShards());, +                                    builder.field(Fields.UNASSIGNED_SHARDS, shardHealth.unassignedShards());, +, +    static final class Fields {, +        static final XContentBuilderString CLUSTER_NAME = new XContentBuilderString("cluster_name");, +        static final XContentBuilderString STATUS = new XContentBuilderString("status");, +        static final XContentBuilderString TIMED_OUT = new XContentBuilderString("timed_out");, +        static final XContentBuilderString NUMBER_OF_SHARDS = new XContentBuilderString("number_of_shards");, +        static final XContentBuilderString NUMBER_OF_REPLICAS = new XContentBuilderString("number_of_replicas");, +        static final XContentBuilderString NUMBER_OF_NODES = new XContentBuilderString("number_of_nodes");, +        static final XContentBuilderString ACTIVE_PRIMARY_SHARDS = new XContentBuilderString("active_primary_shards");, +        static final XContentBuilderString ACTIVE_SHARDS = new XContentBuilderString("active_shards");, +        static final XContentBuilderString RELOCATING_SHARDS = new XContentBuilderString("relocating_shards");, +        static final XContentBuilderString INITIALIZING_SHARDS = new XContentBuilderString("initializing_shards");, +        static final XContentBuilderString UNASSIGNED_SHARDS = new XContentBuilderString("unassigned_shards");, +        static final XContentBuilderString VALIDATION_FAILURES = new XContentBuilderString("validation_failures");, +        static final XContentBuilderString INDICES = new XContentBuilderString("indices");, +        static final XContentBuilderString SHARDS = new XContentBuilderString("shards");, +        static final XContentBuilderString PRIMARY_ACTIVE = new XContentBuilderString("primary_active");, +    }]