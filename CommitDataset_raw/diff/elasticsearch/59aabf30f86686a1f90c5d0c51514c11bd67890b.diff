[+++ b/src/test/java/org/elasticsearch/common/compress/CompressedStreamTests.java, +        for (int i = 0; i < 100; i++) {, +            byte bytes[] = new byte[TestUtil.nextInt(r, 1, 100000)];, +        for (int i = 0; i < 100; i++) {, +            int numDocs = TestUtil.nextInt(r, 1, 200);, +    public void testRepetitionsL() throws IOException {, +        Random r = getRandom();, +        for (int i = 0; i < 1000; i++) {, +            int numLongs = TestUtil.nextInt(r, 1, 1000);, +            ByteArrayOutputStream bos = new ByteArrayOutputStream();, +            long theValue = r.nextLong();, +            for (int j = 0; j < numLongs; j++) {, +                if (r.nextInt(10) == 0) {, +                    theValue = r.nextLong();, +                }, +                bos.write((byte) (theValue >>> 56));, +                bos.write((byte) (theValue >>> 48));, +                bos.write((byte) (theValue >>> 40));, +                bos.write((byte) (theValue >>> 32));, +                bos.write((byte) (theValue >>> 24));, +                bos.write((byte) (theValue >>> 16));, +                bos.write((byte) (theValue >>> 8));, +                bos.write((byte) theValue);, +            }, +            doTest("lzf", bos.toByteArray());, +        }, +    }, +    , +    public void testRepetitionsI() throws IOException {, +        Random r = getRandom();, +        for (int i = 0; i < 1000; i++) {, +            int numInts = TestUtil.nextInt(r, 1, 1000);, +            ByteArrayOutputStream bos = new ByteArrayOutputStream();, +            int theValue = r.nextInt();, +            for (int j = 0; j < numInts; j++) {, +                if (r.nextInt(10) == 0) {, +                    theValue = r.nextInt();, +                }, +                bos.write((byte) (theValue >>> 24));, +                bos.write((byte) (theValue >>> 16));, +                bos.write((byte) (theValue >>> 8));, +                bos.write((byte) theValue);, +            }, +            doTest("lzf", bos.toByteArray());, +        }, +    }, +    , +    public void testRepetitionsS() throws IOException {, +        Random r = getRandom();, +        for (int i = 0; i < 1000; i++) {, +            int numShorts = TestUtil.nextInt(r, 1, 1000);, +            ByteArrayOutputStream bos = new ByteArrayOutputStream();, +            short theValue = (short) r.nextInt(65535);, +            for (int j = 0; j < numShorts; j++) {, +                if (r.nextInt(10) == 0) {, +                    theValue = (short) r.nextInt(65535);, +                }, +                bos.write((byte) (theValue >>> 8));, +                bos.write((byte) theValue);, +            }, +            doTest("lzf", bos.toByteArray());, +        }, +    }, +    , +        Random r = getRandom();, +        int bufferSize = r.nextBoolean() ? 65535 : TestUtil.nextInt(getRandom(), 1, 70000);]