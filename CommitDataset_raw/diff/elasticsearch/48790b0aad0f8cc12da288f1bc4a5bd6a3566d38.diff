[+++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (assemble && assemble.enabled) {, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (assemble && assemble.enabled) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.tasks.assemble.enabled = false, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (assemble && assemble.enabled) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.tasks.assemble.enabled = false, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (assemble && assemble.enabled) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.tasks.assemble.enabled = false, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/build.gradle, +assemble.enabled = true, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (assemble && assemble.enabled) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.tasks.assemble.enabled = false, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/build.gradle, +assemble.enabled = true, +++ b/client/client-benchmark-noop-api-plugin/build.gradle, +assemble.enabled = false, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (assemble && assemble.enabled) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.tasks.assemble.enabled = false, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/build.gradle, +assemble.enabled = true, +++ b/client/client-benchmark-noop-api-plugin/build.gradle, +assemble.enabled = false, +++ /dev/null, +++ b/benchmarks/build.gradle, +assemble.enabled = false, +++ b/build.gradle, +        assemble.enabled = false, +        dependenciesInfo.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (assemble && assemble.enabled) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        project.tasks.assemble.enabled = false, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/benchmark/build.gradle, +assemble.enabled = true, +++ b/client/client-benchmark-noop-api-plugin/build.gradle, +assemble.enabled = false, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.index.reindex.DeleteByQueryRequest;, +    static Request deleteByQuery(DeleteByQueryRequest deleteByQueryRequest) throws IOException {, +        String endpoint =, +            endpoint(deleteByQueryRequest.indices(), deleteByQueryRequest.getDocTypes(), "_delete_by_query");, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        Params params = new Params(request), +            .withRouting(deleteByQueryRequest.getRouting()), +            .withRefresh(deleteByQueryRequest.isRefresh()), +            .withTimeout(deleteByQueryRequest.getTimeout()), +            .withWaitForActiveShards(deleteByQueryRequest.getWaitForActiveShards())]