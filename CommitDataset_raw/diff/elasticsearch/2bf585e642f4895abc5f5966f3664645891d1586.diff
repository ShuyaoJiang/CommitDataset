[+++ b/distribution/build.gradle, +    requires('/bin/bash'), +, +++ b/distribution/build.gradle, +    requires('/bin/bash'), +, +++ b/docs/reference/migration/migrate_5_0/packaging.asciidoc, +==== /bin/bash is now required, +Previously, the scripts used to start Elasticsearch and run plugin, +commands only required a Bourne-compatible shell. Starting in, +Elasticsearch 5.0.0, the bash shell is now required and `/bin/bash` is a, +hard-dependency for the RPM and Debian packages., +++ b/distribution/build.gradle, +    requires('/bin/bash'), +, +++ b/docs/reference/migration/migrate_5_0/packaging.asciidoc, +==== /bin/bash is now required, +Previously, the scripts used to start Elasticsearch and run plugin, +commands only required a Bourne-compatible shell. Starting in, +Elasticsearch 5.0.0, the bash shell is now required and `/bin/bash` is a, +hard-dependency for the RPM and Debian packages., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +++ b/distribution/build.gradle, +    requires('/bin/bash'), +, +++ b/docs/reference/migration/migrate_5_0/packaging.asciidoc, +==== /bin/bash is now required, +Previously, the scripts used to start Elasticsearch and run plugin, +commands only required a Bourne-compatible shell. Starting in, +Elasticsearch 5.0.0, the bash shell is now required and `/bin/bash` is a, +hard-dependency for the RPM and Debian packages., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Executable.java, +    public abstract Object execute(Map<String, Object> input);, +++ b/distribution/build.gradle, +    requires('/bin/bash'), +, +++ b/docs/reference/migration/migrate_5_0/packaging.asciidoc, +==== /bin/bash is now required, +Previously, the scripts used to start Elasticsearch and run plugin, +commands only required a Bourne-compatible shell. Starting in, +Elasticsearch 5.0.0, the bash shell is now required and `/bin/bash` is a, +hard-dependency for the RPM and Debian packages., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Executable.java, +    public abstract Object execute(Map<String, Object> input);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Metadata.java, +++ b/distribution/build.gradle, +    requires('/bin/bash'), +, +++ b/docs/reference/migration/migrate_5_0/packaging.asciidoc, +==== /bin/bash is now required, +Previously, the scripts used to start Elasticsearch and run plugin, +commands only required a Bourne-compatible shell. Starting in, +Elasticsearch 5.0.0, the bash shell is now required and `/bin/bash` is a, +hard-dependency for the RPM and Debian packages., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Executable.java, +    public abstract Object execute(Map<String, Object> input);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Metadata.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptImpl.java, +import org.elasticsearch.script.ScoreAccessor;, +        return executable.execute(variables);, +        variables.put("#score", new ScoreAccessor(scorer));, +++ b/distribution/build.gradle, +    requires('/bin/bash'), +, +++ b/docs/reference/migration/migrate_5_0/packaging.asciidoc, +==== /bin/bash is now required, +Previously, the scripts used to start Elasticsearch and run plugin, +commands only required a Bourne-compatible shell. Starting in, +Elasticsearch 5.0.0, the bash shell is now required and `/bin/bash` is a, +hard-dependency for the RPM and Debian packages., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Executable.java, +    public abstract Object execute(Map<String, Object> input);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Metadata.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptImpl.java, +import org.elasticsearch.script.ScoreAccessor;, +        return executable.execute(variables);, +        variables.put("#score", new ScoreAccessor(scorer));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Writer.java, +import org.objectweb.asm.Label;, +import static org.elasticsearch.painless.WriterConstants.MAP_GET;, +import static org.elasticsearch.painless.WriterConstants.MAP_TYPE;, +import static org.elasticsearch.painless.WriterConstants.SCORE_ACCESSOR_FLOAT;, +import static org.elasticsearch.painless.WriterConstants.SCORE_ACCESSOR_TYPE;, +        final Label fals = new Label();, +        final Label end = new Label();, +, +            execute.visitVarInsn(Opcodes.ALOAD, metadata.inputValueSlot);, +            execute.push("#score");, +            execute.invokeInterface(MAP_TYPE, MAP_GET);, +            execute.dup();, +            execute.ifNull(fals);, +            execute.checkCast(SCORE_ACCESSOR_TYPE);, +            execute.invokeVirtual(SCORE_ACCESSOR_TYPE, SCORE_ACCESSOR_FLOAT);, +            execute.goTo(end);, +            execute.mark(fals);, +            execute.pop();]