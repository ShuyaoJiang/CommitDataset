[+++ b/CONTRIBUTING.md, +Make sure you have [Maven](http://maven.apache.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE by running `mvn eclipse:eclipse` and then importing the project into their workspace: `File > Import > Existing project into workspace`., +++ b/CONTRIBUTING.md, +Make sure you have [Maven](http://maven.apache.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE by running `mvn eclipse:eclipse` and then importing the project into their workspace: `File > Import > Existing project into workspace`., +++ b/TESTING.asciidoc, +* sles-12, +++ b/CONTRIBUTING.md, +Make sure you have [Maven](http://maven.apache.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE by running `mvn eclipse:eclipse` and then importing the project into their workspace: `File > Import > Existing project into workspace`., +++ b/TESTING.asciidoc, +* sles-12, +++ b/Vagrantfile, +    suse_common config, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +def suse_common(config), +    java_package: "java-1_8_0-openjdk-devel"), +++ b/CONTRIBUTING.md, +Make sure you have [Maven](http://maven.apache.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE by running `mvn eclipse:eclipse` and then importing the project into their workspace: `File > Import > Existing project into workspace`., +++ b/TESTING.asciidoc, +* sles-12, +++ b/Vagrantfile, +    suse_common config, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +def suse_common(config), +    java_package: "java-1_8_0-openjdk-devel"), +++ b/core/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/CONTRIBUTING.md, +Make sure you have [Maven](http://maven.apache.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE by running `mvn eclipse:eclipse` and then importing the project into their workspace: `File > Import > Existing project into workspace`., +++ b/TESTING.asciidoc, +* sles-12, +++ b/Vagrantfile, +    suse_common config, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +def suse_common(config), +    java_package: "java-1_8_0-openjdk-devel"), +++ b/core/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        exceptions.put(org.elasticsearch.index.snapshots.IndexShardSnapshotFailedException.class, 0);, +        exceptions.put(org.elasticsearch.search.dfs.DfsPhaseExecutionException.class, 1);, +        exceptions.put(org.elasticsearch.common.util.CancellableThreads.ExecutionCancelledException.class, 2);, +        exceptions.put(org.elasticsearch.discovery.MasterNotDiscoveredException.class, 3);, +        exceptions.put(org.elasticsearch.ElasticsearchSecurityException.class, 4);, +        exceptions.put(org.elasticsearch.index.snapshots.IndexShardRestoreException.class, 5);, +        exceptions.put(org.elasticsearch.indices.IndexClosedException.class, 6);, +        exceptions.put(org.elasticsearch.http.BindHttpException.class, 7);, +        exceptions.put(org.elasticsearch.action.search.ReduceSearchPhaseException.class, 8);, +        exceptions.put(org.elasticsearch.node.NodeClosedException.class, 9);, +        exceptions.put(org.elasticsearch.index.engine.SnapshotFailedEngineException.class, 10);, +        exceptions.put(org.elasticsearch.index.shard.ShardNotFoundException.class, 11);, +        exceptions.put(org.elasticsearch.transport.ConnectTransportException.class, 12);, +        exceptions.put(org.elasticsearch.transport.NotSerializableTransportException.class, 13);, +        exceptions.put(org.elasticsearch.transport.ResponseHandlerFailureTransportException.class, 14);, +        exceptions.put(org.elasticsearch.indices.IndexCreationException.class, 15);, +        exceptions.put(org.elasticsearch.index.IndexNotFoundException.class, 16);, +        exceptions.put(org.elasticsearch.cluster.routing.IllegalShardRoutingStateException.class, 17);, +        exceptions.put(org.elasticsearch.action.support.broadcast.BroadcastShardOperationFailedException.class, 18);, +        exceptions.put(org.elasticsearch.ResourceNotFoundException.class, 19);, +        exceptions.put(org.elasticsearch.transport.ActionTransportException.class, 20);, +        exceptions.put(org.elasticsearch.ElasticsearchGenerationException.class, 21);, +        exceptions.put(org.elasticsearch.index.engine.CreateFailedEngineException.class, 22);, +        exceptions.put(org.elasticsearch.index.shard.IndexShardStartedException.class, 23);, +        exceptions.put(org.elasticsearch.search.SearchContextMissingException.class, 24);, +        exceptions.put(org.elasticsearch.script.ScriptException.class, 25);, +        exceptions.put(org.elasticsearch.index.shard.TranslogRecoveryPerformer.BatchOperationException.class, 26);, +        exceptions.put(org.elasticsearch.snapshots.SnapshotCreationException.class, 27);, +        exceptions.put(org.elasticsearch.index.engine.DeleteFailedEngineException.class, 28);, +        exceptions.put(org.elasticsearch.index.engine.DocumentMissingException.class, 29);, +        exceptions.put(org.elasticsearch.snapshots.SnapshotException.class, 30);, +        exceptions.put(org.elasticsearch.indices.InvalidAliasNameException.class, 31);, +        exceptions.put(org.elasticsearch.indices.InvalidIndexNameException.class, 32);, +        exceptions.put(org.elasticsearch.indices.IndexPrimaryShardNotAllocatedException.class, 33);, +        exceptions.put(org.elasticsearch.transport.TransportException.class, 34);, +        exceptions.put(org.elasticsearch.ElasticsearchParseException.class, 35);, +        exceptions.put(org.elasticsearch.search.SearchException.class, 36);, +        exceptions.put(org.elasticsearch.index.mapper.MapperException.class, 37);, +        exceptions.put(org.elasticsearch.indices.InvalidTypeNameException.class, 38);, +        exceptions.put(org.elasticsearch.snapshots.SnapshotRestoreException.class, 39);, +        exceptions.put(org.elasticsearch.common.ParsingException.class, 40);, +        exceptions.put(org.elasticsearch.index.shard.IndexShardClosedException.class, 41);, +        exceptions.put(org.elasticsearch.script.expression.ExpressionScriptCompilationException.class, 42);, +        exceptions.put(org.elasticsearch.indices.recovery.RecoverFilesRecoveryException.class, 43);, +        exceptions.put(org.elasticsearch.index.translog.TruncatedTranslogException.class, 44);, +        exceptions.put(org.elasticsearch.indices.recovery.RecoveryFailedException.class, 45);, +        exceptions.put(org.elasticsearch.index.shard.IndexShardRelocatedException.class, 46);, +        exceptions.put(org.elasticsearch.transport.NodeShouldNotConnectException.class, 47);]