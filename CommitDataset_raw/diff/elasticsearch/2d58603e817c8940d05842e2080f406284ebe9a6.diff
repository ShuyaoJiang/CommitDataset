[+++ b/src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java, +import org.elasticsearch.common.lucene.search.AndFilter;, +import org.elasticsearch.index.search.child.TestSearchContext;, +import org.elasticsearch.search.internal.SearchContext;, +        String childMapping = copyToStringFromClasspath("/org/elasticsearch/index/query/child-mapping.json");, +        injector.getInstance(MapperService.class).merge("child", new CompressedString(childMapping), true);, +, +        try {, +            SearchContext.setCurrent(new TestSearchContext());, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/has-child.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(NoCacheFilter.class));, +, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/and-filter-cache.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(CachedFilter.class));, +, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/has-child-in-and-filter-cached.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(AndFilter.class));, +        } finally {, +            SearchContext.removeCurrent();, +        }, +++ b/src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java, +import org.elasticsearch.common.lucene.search.AndFilter;, +import org.elasticsearch.index.search.child.TestSearchContext;, +import org.elasticsearch.search.internal.SearchContext;, +        String childMapping = copyToStringFromClasspath("/org/elasticsearch/index/query/child-mapping.json");, +        injector.getInstance(MapperService.class).merge("child", new CompressedString(childMapping), true);, +, +        try {, +            SearchContext.setCurrent(new TestSearchContext());, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/has-child.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(NoCacheFilter.class));, +, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/and-filter-cache.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(CachedFilter.class));, +, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/has-child-in-and-filter-cached.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(AndFilter.class));, +        } finally {, +            SearchContext.removeCurrent();, +        }, +++ b/src/test/java/org/elasticsearch/index/query/and-filter-cache.json, +{, +    "filtered":{, +      "filter":{, +            "and":{, +                "filters":[, +                    {, +                        "term":{, +                            "name.first":"shay1", +                        }, +                    },, +                    {, +                        "term":{, +                            "name.first":"shay4", +                        }, +                    }, +                ],, +                "_cache" : true, +            }, +        }, +    }, +}, +++ b/src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java, +import org.elasticsearch.common.lucene.search.AndFilter;, +import org.elasticsearch.index.search.child.TestSearchContext;, +import org.elasticsearch.search.internal.SearchContext;, +        String childMapping = copyToStringFromClasspath("/org/elasticsearch/index/query/child-mapping.json");, +        injector.getInstance(MapperService.class).merge("child", new CompressedString(childMapping), true);, +, +        try {, +            SearchContext.setCurrent(new TestSearchContext());, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/has-child.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(NoCacheFilter.class));, +, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/and-filter-cache.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(CachedFilter.class));, +, +            query = copyToStringFromClasspath("/org/elasticsearch/index/query/has-child-in-and-filter-cached.json");, +            parsedQuery = queryParser.parse(query).query();, +            assertThat(parsedQuery, instanceOf(ConstantScoreQuery.class));, +            assertThat(((ConstantScoreQuery) parsedQuery).getFilter(), instanceOf(AndFilter.class));, +        } finally {, +            SearchContext.removeCurrent();, +        }]