[+++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +import java.util.HashSet;, +import org.elasticsearch.cluster.routing.ShardIterator;, +import org.elasticsearch.cluster.routing.ShardRouting;, +    protected Set<String> nodeIdsWithIndex(String... indices) {, +        ClusterState state = client().admin().cluster().prepareState().execute().actionGet().getState();, +        GroupShardsIterator allAssignedShardsGrouped = state.routingTable().allAssignedShardsGrouped(indices, true);, +        Set<String> nodes = new HashSet<String>();, +        for (ShardIterator shardIterator : allAssignedShardsGrouped) {, +            for (ShardRouting routing : shardIterator.asUnordered()) {, +                if (routing.active()) {, +                    nodes.add(routing.currentNodeId());    , +                }, +                , +            }, +        }, +        return nodes;, +    }, +    , +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +import java.util.HashSet;, +import org.elasticsearch.cluster.routing.ShardIterator;, +import org.elasticsearch.cluster.routing.ShardRouting;, +    protected Set<String> nodeIdsWithIndex(String... indices) {, +        ClusterState state = client().admin().cluster().prepareState().execute().actionGet().getState();, +        GroupShardsIterator allAssignedShardsGrouped = state.routingTable().allAssignedShardsGrouped(indices, true);, +        Set<String> nodes = new HashSet<String>();, +        for (ShardIterator shardIterator : allAssignedShardsGrouped) {, +            for (ShardRouting routing : shardIterator.asUnordered()) {, +                if (routing.active()) {, +                    nodes.add(routing.currentNodeId());    , +                }, +                , +            }, +        }, +        return nodes;, +    }, +    , +++ b/src/test/java/org/elasticsearch/test/integration/search/stats/SearchStatsTests.java, +import java.util.Set;, +, +import org.elasticsearch.action.admin.cluster.node.stats.NodeStats;, +        NodeStats[] nodes = nodeStats.getNodes();, +        Set<String> nodeIdsWithIndex = nodeIdsWithIndex("test1", "test2");, +        int num = 0;, +        for (NodeStats stat : nodes) {, +            if (nodeIdsWithIndex.contains(stat.getNode().getId())) {, +                num++;, +            } else {, +                assertThat(nodeStats.getNodes()[0].getIndices().getSearch().getTotal().getQueryCount(), equalTo(0l));, +                assertThat(nodeStats.getNodes()[0].getIndices().getSearch().getTotal().getQueryTimeInMillis(), equalTo(0l));, +            }, +        }, +        , +        assertThat(num, greaterThan(0));, +     ]