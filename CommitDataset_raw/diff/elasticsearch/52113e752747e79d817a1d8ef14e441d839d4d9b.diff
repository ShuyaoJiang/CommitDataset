[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                    rangeQuery = dateFieldType.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null);, +                    rangeQuery = currentFieldType.rangeQuery(part1, part2, startInclusive, endInclusive);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                    rangeQuery = dateFieldType.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null);, +                    rangeQuery = currentFieldType.rangeQuery(part1, part2, startInclusive, endInclusive);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +    @Override, +    public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                    rangeQuery = dateFieldType.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null);, +                    rangeQuery = currentFieldType.rangeQuery(part1, part2, startInclusive, endInclusive);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +    @Override, +    public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                    rangeQuery = dateFieldType.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null);, +                    rangeQuery = currentFieldType.rangeQuery(part1, part2, startInclusive, endInclusive);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +    @Override, +    public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +import java.util.Iterator;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Objects;, +        @Override, +        @Override, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +            return rangeQuery(lowerTerm, upperTerm, includeLower, includeUpper, null, null);, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable DateTimeZone timeZone, @Nullable DateMathParser forcedDateParser) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                    rangeQuery = dateFieldType.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null);, +                    rangeQuery = currentFieldType.rangeQuery(part1, part2, startInclusive, endInclusive);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +    @Override, +    public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +import java.util.Iterator;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Objects;, +        @Override, +        @Override, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +            return rangeQuery(lowerTerm, upperTerm, includeLower, includeUpper, null, null);, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable DateTimeZone timeZone, @Nullable DateMathParser forcedDateParser) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                    rangeQuery = dateFieldType.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null);, +                    rangeQuery = currentFieldType.rangeQuery(part1, part2, startInclusive, endInclusive);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +    @Override, +    public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +import java.util.Iterator;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Objects;, +        @Override, +        @Override, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +            return rangeQuery(lowerTerm, upperTerm, includeLower, includeUpper, null, null);, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper, @Nullable DateTimeZone timeZone, @Nullable DateMathParser forcedDateParser) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                    rangeQuery = dateFieldType.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null);, +                    rangeQuery = currentFieldType.rangeQuery(part1, part2, startInclusive, endInclusive);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java, +    @Override, +    public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +import java.util.Iterator;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Objects;, +        @Override, +        @Override, +        public Query rangeQuery(Object lowerTerm, Object upperTerm, boolean includeLower, boolean includeUpper) {]