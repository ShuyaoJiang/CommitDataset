[+++ b/x-pack/plugin/ccr/qa/rest/src/test/resources/rest-api-spec/test/ccr/auto_follow.yml, +          max_concurrent_read_batches: 2, +      ccr.get_auto_follow_pattern:, +        leader_cluster_alias: _local_, +  - match: { _local_.leader_index_patterns: ['logs-*'] }, +  - match: { _local_.max_concurrent_read_batches: 2 }, +, +  - do:, +      ccr.get_auto_follow_pattern: {}, +  - match: { _local_.leader_index_patterns: ['logs-*'] }, +  - match: { _local_.max_concurrent_read_batches: 2 }, +, +  - do:, +, +  - do:, +      catch: missing, +      ccr.get_auto_follow_pattern:, +        leader_cluster_alias: _local_, +++ b/x-pack/plugin/ccr/qa/rest/src/test/resources/rest-api-spec/test/ccr/auto_follow.yml, +          max_concurrent_read_batches: 2, +      ccr.get_auto_follow_pattern:, +        leader_cluster_alias: _local_, +  - match: { _local_.leader_index_patterns: ['logs-*'] }, +  - match: { _local_.max_concurrent_read_batches: 2 }, +, +  - do:, +      ccr.get_auto_follow_pattern: {}, +  - match: { _local_.leader_index_patterns: ['logs-*'] }, +  - match: { _local_.max_concurrent_read_batches: 2 }, +, +  - do:, +, +  - do:, +      catch: missing, +      ccr.get_auto_follow_pattern:, +        leader_cluster_alias: _local_, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/Ccr.java, +import org.elasticsearch.xpack.ccr.action.TransportGetAutoFollowPatternAction;, +import org.elasticsearch.xpack.ccr.rest.RestGetAutoFollowPatternAction;, +import org.elasticsearch.xpack.core.ccr.action.GetAutoFollowPatternAction;, +                new ActionHandler<>(PutAutoFollowPatternAction.INSTANCE, TransportPutAutoFollowPatternAction.class),, +                new ActionHandler<>(GetAutoFollowPatternAction.INSTANCE, TransportGetAutoFollowPatternAction.class));, +                new RestPutAutoFollowPatternAction(settings, restController),, +                new RestGetAutoFollowPatternAction(settings, restController));, +++ b/x-pack/plugin/ccr/qa/rest/src/test/resources/rest-api-spec/test/ccr/auto_follow.yml, +          max_concurrent_read_batches: 2, +      ccr.get_auto_follow_pattern:, +        leader_cluster_alias: _local_, +  - match: { _local_.leader_index_patterns: ['logs-*'] }, +  - match: { _local_.max_concurrent_read_batches: 2 }, +, +  - do:, +      ccr.get_auto_follow_pattern: {}, +  - match: { _local_.leader_index_patterns: ['logs-*'] }, +  - match: { _local_.max_concurrent_read_batches: 2 }, +, +  - do:, +, +  - do:, +      catch: missing, +      ccr.get_auto_follow_pattern:, +        leader_cluster_alias: _local_, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/Ccr.java, +import org.elasticsearch.xpack.ccr.action.TransportGetAutoFollowPatternAction;, +import org.elasticsearch.xpack.ccr.rest.RestGetAutoFollowPatternAction;, +import org.elasticsearch.xpack.core.ccr.action.GetAutoFollowPatternAction;, +                new ActionHandler<>(PutAutoFollowPatternAction.INSTANCE, TransportPutAutoFollowPatternAction.class),, +                new ActionHandler<>(GetAutoFollowPatternAction.INSTANCE, TransportGetAutoFollowPatternAction.class));, +                new RestPutAutoFollowPatternAction(settings, restController),, +                new RestGetAutoFollowPatternAction(settings, restController));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportGetAutoFollowPatternAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +, +package org.elasticsearch.xpack.ccr.action;, +, +import org.elasticsearch.ResourceNotFoundException;, +import org.elasticsearch.action.ActionListener;, +import org.elasticsearch.action.support.ActionFilters;, +import org.elasticsearch.action.support.master.TransportMasterNodeReadAction;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.block.ClusterBlockException;, +import org.elasticsearch.cluster.block.ClusterBlockLevel;, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.cluster.service.ClusterService;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.transport.TransportService;, +import org.elasticsearch.xpack.core.ccr.AutoFollowMetadata;, +import org.elasticsearch.xpack.core.ccr.AutoFollowMetadata.AutoFollowPattern;, +import org.elasticsearch.xpack.core.ccr.action.GetAutoFollowPatternAction;, +, +import java.util.Collections;, +import java.util.Map;, +]