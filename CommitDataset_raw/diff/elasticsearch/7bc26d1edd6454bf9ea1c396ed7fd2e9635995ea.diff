[+++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +import java.net.URLDecoder;, +                        // inspect Manifest: give a nice error if jar requires a newer java version, +                        String systemVersion = System.getProperty("java.specification.version");, +                        String targetVersion = manifest.getMainAttributes().getValue("X-Compile-Target-JDK");, +                        if (targetVersion != null) {, +                            float current = Float.POSITIVE_INFINITY;, +                            float target = Float.NEGATIVE_INFINITY;, +                            try {, +                                current = Float.parseFloat(systemVersion);, +                                target = Float.parseFloat(targetVersion);, +                            } catch (NumberFormatException e) {, +                                // some spec changed, time for a more complex parser, +                            }, +                            if (current < target) {, +                                throw new IllegalStateException(path + " requires Java " + targetVersion, +                                        + ", your system: " + systemVersion);, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +import java.net.URLDecoder;, +                        // inspect Manifest: give a nice error if jar requires a newer java version, +                        String systemVersion = System.getProperty("java.specification.version");, +                        String targetVersion = manifest.getMainAttributes().getValue("X-Compile-Target-JDK");, +                        if (targetVersion != null) {, +                            float current = Float.POSITIVE_INFINITY;, +                            float target = Float.NEGATIVE_INFINITY;, +                            try {, +                                current = Float.parseFloat(systemVersion);, +                                target = Float.parseFloat(targetVersion);, +                            } catch (NumberFormatException e) {, +                                // some spec changed, time for a more complex parser, +                            }, +                            if (current < target) {, +                                throw new IllegalStateException(path + " requires Java " + targetVersion, +                                        + ", your system: " + systemVersion);, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +        if (context.sourceToParse().flyweight() == false) {, +    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +import java.net.URLDecoder;, +                        // inspect Manifest: give a nice error if jar requires a newer java version, +                        String systemVersion = System.getProperty("java.specification.version");, +                        String targetVersion = manifest.getMainAttributes().getValue("X-Compile-Target-JDK");, +                        if (targetVersion != null) {, +                            float current = Float.POSITIVE_INFINITY;, +                            float target = Float.NEGATIVE_INFINITY;, +                            try {, +                                current = Float.parseFloat(systemVersion);, +                                target = Float.parseFloat(targetVersion);, +                            } catch (NumberFormatException e) {, +                                // some spec changed, time for a more complex parser, +                            }, +                            if (current < target) {, +                                throw new IllegalStateException(path + " requires Java " + targetVersion, +                                        + ", your system: " + systemVersion);, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +        if (context.sourceToParse().flyweight() == false) {, +    }, +++ b/core/src/test/java/org/elasticsearch/bootstrap/JarHellTests.java, +import java.io.ByteArrayOutputStream;, +import java.io.FileOutputStream;, +        return filepath.toUri().toURL();, +        manifest.getMainAttributes().put(new Attributes.Name("X-Compile-Target-JDK"), "1.8");, +            assertTrue(e.getMessage().contains("requires java 1.8"));, +        manifest.getMainAttributes().put(new Attributes.Name("X-Compile-Target-JDK"), "1.7");, +        manifest.getMainAttributes().put(new Attributes.Name("X-Compile-Target-JDK"), "1.7");, +        manifest.getMainAttributes().put(new Attributes.Name("X-Compile-Target-JDK"), "bogus");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JarHell.java, +import java.net.URLDecoder;, +                        // inspect Manifest: give a nice error if jar requires a newer java version, +                        String systemVersion = System.getProperty("java.specification.version");, +                        String targetVersion = manifest.getMainAttributes().getValue("X-Compile-Target-JDK");, +                        if (targetVersion != null) {, +                            float current = Float.POSITIVE_INFINITY;, +                            float target = Float.NEGATIVE_INFINITY;, +                            try {, +                                current = Float.parseFloat(systemVersion);, +                                target = Float.parseFloat(targetVersion);, +                            } catch (NumberFormatException e) {, +                                // some spec changed, time for a more complex parser, +                            }, +                            if (current < target) {, +                                throw new IllegalStateException(path + " requires Java " + targetVersion, +                                        + ", your system: " + systemVersion);, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +        if (context.sourceToParse().flyweight() == false) {, +    }, +++ b/core/src/test/java/org/elasticsearch/bootstrap/JarHellTests.java, +import java.io.ByteArrayOutputStream;, +import java.io.FileOutputStream;, +        return filepath.toUri().toURL();, +        manifest.getMainAttributes().put(new Attributes.Name("X-Compile-Target-JDK"), "1.8");, +            assertTrue(e.getMessage().contains("requires java 1.8"));]