[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/CreateAndFollowIndexAction.java, +                    String followIndex = request.getFollowRequest().getFollowIndex();, +                    IndexMetaData currentIndex = currentState.metaData().index(followIndex);, +                    IndexMetaData.Builder imdBuilder = IndexMetaData.builder(followIndex);, +                    settingsBuilder.put(IndexMetaData.SETTING_INDEX_PROVIDED_NAME, followIndex);, +                    imdBuilder.setRoutingNumShards(leaderIndexMetaData.getRoutingNumShards());, +                    IndexMetaData followIMD = imdBuilder.build();, +                    mdBuilder.put(followIMD, false);, +                    logger.info("[{}] creating index, cause [ccr_create_and_follow], shards [{}]/[{}]",, +                        followIndex, followIMD.getNumberOfShards(), followIMD.getNumberOfReplicas());, +                    , +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/CreateAndFollowIndexAction.java, +                    String followIndex = request.getFollowRequest().getFollowIndex();, +                    IndexMetaData currentIndex = currentState.metaData().index(followIndex);, +                    IndexMetaData.Builder imdBuilder = IndexMetaData.builder(followIndex);, +                    settingsBuilder.put(IndexMetaData.SETTING_INDEX_PROVIDED_NAME, followIndex);, +                    imdBuilder.setRoutingNumShards(leaderIndexMetaData.getRoutingNumShards());, +                    IndexMetaData followIMD = imdBuilder.build();, +                    mdBuilder.put(followIMD, false);, +                    logger.info("[{}] creating index, cause [ccr_create_and_follow], shards [{}]/[{}]",, +                        followIndex, followIMD.getNumberOfShards(), followIMD.getNumberOfReplicas());, +                    , +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/ShardChangesIT.java, +        logger.info("Indexing [{}] docs as first batch", firstBatchNumDocs);, +        logger.info("Indexing [{}] docs as second batch", secondBatchNumDocs);, +            assertTrue("Doc with id [" + value + "] is missing", getResponse.isExists());]