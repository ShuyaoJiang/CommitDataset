[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/TermsFacetSearchBenchmark.java, +import org.elasticsearch.common.RandomStringGenerator;, +import org.elasticsearch.common.util.concurrent.jsr166y.ThreadLocalRandom;, +                .put("index.refresh_interval", "-1"), +                .put(SETTING_NUMBER_OF_REPLICAS, 0), +        long COUNT = SizeValue.parseSizeValue("5m").singles();, +        int NUMBER_OF_TERMS = 200;, +        int NUMBER_OF_MULTI_VALUE_TERMS = 5;, +        int STRING_TERM_SIZE = 5;, +            sValues[i] = RandomStringGenerator.randomAlphabetic(STRING_TERM_SIZE);, +, +                    XContentBuilder builder = jsonBuilder().startObject();, +                    builder.field("id", Integer.toString(counter));, +                    builder.field("s_value", sValues[counter % sValues.length]);, +                    builder.field("i_value", lValues[counter % lValues.length]);, +, +                    builder.startArray("sm_value");, +                    for (int k = 0; k < NUMBER_OF_MULTI_VALUE_TERMS; k++) {, +                        builder.value(sValues[ThreadLocalRandom.current().nextInt(sValues.length)]);, +                    }, +                    builder.endArray();, +, +                    builder.endObject();, +, +                            .source(builder));, +, +        long totalQueryTime = 0;, +, +        // S_VALUE, +, +        System.out.println("--> Warmup (s_value) ...");, +                System.out.println("--> Loading (s_value) took: " + searchResponse.took());, +        System.out.println("--> Warmup (s_value) DONE");, +        totalQueryTime = 0;, +        client.admin().indices().prepareClearCache().setFieldDataCache(true).execute().actionGet();, +, +        System.out.println("--> Warmup (l_value) ...");, +        // run just the child query, warm up first, +        for (int j = 0; j < QUERY_WARMUP; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(termsFacet("l_value").field("l_value")), +                    .execute().actionGet();, +            if (j == 0) {, +                System.out.println("--> Loading (l_value) took: " + searchResponse.took());, +            }, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +        }, +        System.out.println("--> Warmup (l_value) DONE");, +, +        client.admin().indices().prepareClearCache().setFieldDataCache(true).execute().actionGet();, +, +        System.out.println("--> Warmup (sm_value) ...");, +        // run just the child query, warm up first, +        for (int j = 0; j < QUERY_WARMUP; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(termsFacet("sm_value").field("sm_value")), +                    .execute().actionGet();, +            if (j == 0) {, +                System.out.println("--> Loading (sm_value) took: " + searchResponse.took());, +            }, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +        }, +        System.out.println("--> Warmup (sm_value) DONE");, +, +, +        totalQueryTime = 0;, +        for (int j = 0; j < QUERY_COUNT; j++) {, +            SearchResponse searchResponse = client.prepareSearch(), +                    .setQuery(matchAllQuery()), +                    .addFacet(termsFacet("sm_value").field("sm_value")), +                    .execute().actionGet();, +            if (searchResponse.hits().totalHits() != COUNT) {, +                System.err.println("--> mismatch on hits");, +            }, +            totalQueryTime += searchResponse.tookInMillis();, +        }, +        System.out.println("--> Terms Facet (sm_value) " + (totalQueryTime / QUERY_COUNT) + "ms");, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/search/facet/TermsFacetSearchBenchmark.java, +import org.elasticsearch.common.RandomStringGenerator;, +import org.elasticsearch.common.util.concurrent.jsr166y.ThreadLocalRandom;, +                .put("index.refresh_interval", "-1"), +                .put(SETTING_NUMBER_OF_REPLICAS, 0), +        long COUNT = SizeValue.parseSizeValue("5m").singles();, +        int NUMBER_OF_TERMS = 200;, +        int NUMBER_OF_MULTI_VALUE_TERMS = 5;, +        int STRING_TERM_SIZE = 5;, +            sValues[i] = RandomStringGenerator.randomAlphabetic(STRING_TERM_SIZE);, +, +                    XContentBuilder builder = jsonBuilder().startObject();, +                    builder.field("id", Integer.toString(counter));, +                    builder.field("s_value", sValues[counter % sValues.length]);, +                    builder.field("i_value", lValues[counter % lValues.length]);, +, +                    builder.startArray("sm_value");]