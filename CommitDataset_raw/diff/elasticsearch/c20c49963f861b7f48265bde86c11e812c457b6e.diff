[+++ b/docs/reference/query-dsl/full-text-queries.asciidoc, +include::match-phrase-query.asciidoc[], +, +include::match-phrase-prefix-query.asciidoc[], +, +++ b/docs/reference/query-dsl/full-text-queries.asciidoc, +include::match-phrase-query.asciidoc[], +, +include::match-phrase-prefix-query.asciidoc[], +, +++ b/docs/reference/query-dsl/match-phrase-prefix-query.asciidoc, +[[query-dsl-match-query-phrase-prefix]], +=== Match Phrase Prefix Query, +, +The `match_phrase_prefix` is the same as `match_phrase`, except that it, +allows for prefix matches on the last term in the text. For example:, +, +[source,js], +--------------------------------------------------, +{, +    "match_phrase_prefix" : {, +        "message" : "this is a test", +    }, +}, +--------------------------------------------------, +, +It accepts the same parameters as the phrase type. In addition, it also, +accepts a `max_expansions` parameter that can control to how many, +prefixes the last term will be expanded. It is highly recommended to set, +it to an acceptable value to control the execution time of the query., +For example:, +, +[source,js], +--------------------------------------------------, +{, +    "match_phrase_prefix" : {, +        "message" : {, +            "query" : "this is a test",, +            "max_expansions" : 10, +        }, +    }, +}, +--------------------------------------------------, +++ b/docs/reference/query-dsl/full-text-queries.asciidoc, +include::match-phrase-query.asciidoc[], +, +include::match-phrase-prefix-query.asciidoc[], +, +++ b/docs/reference/query-dsl/match-phrase-prefix-query.asciidoc, +[[query-dsl-match-query-phrase-prefix]], +=== Match Phrase Prefix Query, +, +The `match_phrase_prefix` is the same as `match_phrase`, except that it, +allows for prefix matches on the last term in the text. For example:, +, +[source,js], +--------------------------------------------------, +{, +    "match_phrase_prefix" : {, +        "message" : "this is a test", +    }, +}, +--------------------------------------------------, +, +It accepts the same parameters as the phrase type. In addition, it also, +accepts a `max_expansions` parameter that can control to how many, +prefixes the last term will be expanded. It is highly recommended to set, +it to an acceptable value to control the execution time of the query., +For example:, +, +[source,js], +--------------------------------------------------, +{, +    "match_phrase_prefix" : {, +        "message" : {, +            "query" : "this is a test",, +            "max_expansions" : 10, +        }, +    }, +}, +--------------------------------------------------, +++ b/docs/reference/query-dsl/match-phrase-query.asciidoc, +[[query-dsl-match-query-phrase]], +=== Match Phrase Query, +, +The `match_phrase` query analyzes the text and creates a `phrase` query, +out of the analyzed text. For example:, +, +[source,js], +--------------------------------------------------, +{, +    "match_phrase" : {, +        "message" : "this is a test", +    }, +}, +--------------------------------------------------, +, +A phrase query matches terms up to a configurable `slop`, +(which defaults to 0) in any order. Transposed terms have a slop of 2., +]