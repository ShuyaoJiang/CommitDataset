[+++ b/docs/reference/docs/termvectors.asciidoc, +or by adding the requested fields in the request body (see, +computed on the fly if possible. See <<mapping-types,type mapping>>, +coming[1.4.0,The ability to computed term vectors on the fly is only available from 1.4.0 onwards (see below)], +, +=== Example 1, +, +[float], +=== Example 2 coming[1.4.0], +, +Additionally, term vectors which are not explicitly stored in the index are automatically, +computed on the fly. The following request returns all information and statistics for the, +fields in document `1`, even though the terms haven't been explicitly stored in the index., +Note that for the field `text`, the terms are not re-generated., +, +[source,js], +--------------------------------------------------, +curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true' -d '{, +  "fields" : ["text", "some_field_without_term_vectors"],, +  "offsets" : true,, +  "positions" : true,, +  "term_statistics" : true,, +  "field_statistics" : true, +}', +--------------------------------------------------, +++ b/docs/reference/docs/termvectors.asciidoc, +or by adding the requested fields in the request body (see, +computed on the fly if possible. See <<mapping-types,type mapping>>, +coming[1.4.0,The ability to computed term vectors on the fly is only available from 1.4.0 onwards (see below)], +, +=== Example 1, +, +[float], +=== Example 2 coming[1.4.0], +, +Additionally, term vectors which are not explicitly stored in the index are automatically, +computed on the fly. The following request returns all information and statistics for the, +fields in document `1`, even though the terms haven't been explicitly stored in the index., +Note that for the field `text`, the terms are not re-generated., +, +[source,js], +--------------------------------------------------, +curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true' -d '{, +  "fields" : ["text", "some_field_without_term_vectors"],, +  "offsets" : true,, +  "positions" : true,, +  "term_statistics" : true,, +  "field_statistics" : true, +}', +--------------------------------------------------, +++ b/src/main/java/org/elasticsearch/action/termvector/TermVectorWriter.java, +        assert (docFreq >= -1);, +        assert (ttf >= -1);, +        assert (sttf >= -1);, +        assert (sdf >= -1);, +        assert (dc >= -1);, +++ b/docs/reference/docs/termvectors.asciidoc, +or by adding the requested fields in the request body (see, +computed on the fly if possible. See <<mapping-types,type mapping>>, +coming[1.4.0,The ability to computed term vectors on the fly is only available from 1.4.0 onwards (see below)], +, +=== Example 1, +, +[float], +=== Example 2 coming[1.4.0], +, +Additionally, term vectors which are not explicitly stored in the index are automatically, +computed on the fly. The following request returns all information and statistics for the, +fields in document `1`, even though the terms haven't been explicitly stored in the index., +Note that for the field `text`, the terms are not re-generated., +, +[source,js], +--------------------------------------------------, +curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true' -d '{, +  "fields" : ["text", "some_field_without_term_vectors"],, +  "offsets" : true,, +  "positions" : true,, +  "term_statistics" : true,, +  "field_statistics" : true, +}', +--------------------------------------------------, +++ b/src/main/java/org/elasticsearch/action/termvector/TermVectorWriter.java, +        assert (docFreq >= -1);, +        assert (ttf >= -1);, +        assert (sttf >= -1);, +        assert (sdf >= -1);, +        assert (dc >= -1);, +++ b/src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorService.java, +import org.apache.lucene.analysis.Analyzer;, +import org.apache.lucene.index.*;, +import org.apache.lucene.index.memory.MemoryIndex;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.index.get.GetField;, +import org.elasticsearch.index.get.GetResult;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.core.StringFieldMapper;, +import java.io.IOException;, +import java.util.*;, +, +    public ShardTermVectorService(ShardId shardId, @IndexSettings Settings indexSettings) {]