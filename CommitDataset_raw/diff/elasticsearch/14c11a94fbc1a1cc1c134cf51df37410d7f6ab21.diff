[+++ b/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private String minimumShouldMatch;, +        this.minimumShouldMatch = Integer.toString(minimumNumberShouldMatch);, +        return this;, +    }, +, +    /**, +     * Sets the minimum should match using the special syntax (for example, supporting percentage)., +     */, +    public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private String minimumShouldMatch;, +        this.minimumShouldMatch = Integer.toString(minimumNumberShouldMatch);, +        return this;, +    }, +, +    /**, +     * Sets the minimum should match using the special syntax (for example, supporting percentage)., +     */, +    public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +import org.elasticsearch.common.lucene.search.Queries;, +        String minimumShouldMatch = null;, +                    minimumShouldMatch = parser.textOrNull();, +                } else if ("minimum_number_should_match".equals(currentFieldName) || "minimumNumberShouldMatch".equals(currentFieldName)) {, +                    minimumShouldMatch = parser.textOrNull();, +        Queries.applyMinimumShouldMatch(query, minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private String minimumShouldMatch;, +        this.minimumShouldMatch = Integer.toString(minimumNumberShouldMatch);, +        return this;, +    }, +, +    /**, +     * Sets the minimum should match using the special syntax (for example, supporting percentage)., +     */, +    public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +import org.elasticsearch.common.lucene.search.Queries;, +        String minimumShouldMatch = null;, +                    minimumShouldMatch = parser.textOrNull();, +                } else if ("minimum_number_should_match".equals(currentFieldName) || "minimumNumberShouldMatch".equals(currentFieldName)) {, +                    minimumShouldMatch = parser.textOrNull();, +        Queries.applyMinimumShouldMatch(query, minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +    private String minimumShouldMatch;, +        this.minimumShouldMatch = Integer.toString(minimumMatch);, +        return this;, +    }, +, +    public TermsQueryBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private String minimumShouldMatch;, +        this.minimumShouldMatch = Integer.toString(minimumNumberShouldMatch);, +        return this;, +    }, +, +    /**, +     * Sets the minimum should match using the special syntax (for example, supporting percentage)., +     */, +    public BoolQueryBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +import org.elasticsearch.common.lucene.search.Queries;, +        String minimumShouldMatch = null;, +                    minimumShouldMatch = parser.textOrNull();, +                } else if ("minimum_number_should_match".equals(currentFieldName) || "minimumNumberShouldMatch".equals(currentFieldName)) {, +                    minimumShouldMatch = parser.textOrNull();, +        Queries.applyMinimumShouldMatch(query, minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +    private String minimumShouldMatch;, +        this.minimumShouldMatch = Integer.toString(minimumMatch);, +        return this;, +    }, +, +    public TermsQueryBuilder minimumShouldMatch(String minimumShouldMatch) {, +        this.minimumShouldMatch = minimumShouldMatch;, +        if (minimumShouldMatch != null) {, +            builder.field("minimum_should_match", minimumShouldMatch);, +++ b/src/main/java/org/elasticsearch/index/query/TermsQueryParser.java, +import org.elasticsearch.common.lucene.search.Queries;, +        String minimumShouldMatch = null;, +                    minimumShouldMatch = parser.textOrNull();, +                } else if ("minimum_should_match".equals(currentFieldName) || "minimumShouldMatch".equals(currentFieldName)) {, +                    minimumShouldMatch = parser.textOrNull();, +            Queries.applyMinimumShouldMatch(query, minimumShouldMatch);]