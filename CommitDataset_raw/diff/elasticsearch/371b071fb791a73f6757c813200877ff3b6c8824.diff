[+++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        searchContext.addRewrite(childFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        searchContext.addRewrite(childFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            searchContext.addRewrite(childrenQuery);, +            searchContext.addRewrite(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        searchContext.addRewrite(childFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            searchContext.addRewrite(childrenQuery);, +            searchContext.addRewrite(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        searchContext.addRewrite(parentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        searchContext.addRewrite(childFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            searchContext.addRewrite(childrenQuery);, +            searchContext.addRewrite(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        searchContext.addRewrite(parentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            searchContext.addRewrite(parentQuery);, +            searchContext.addRewrite(hasParentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        searchContext.addRewrite(childFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            searchContext.addRewrite(childrenQuery);, +            searchContext.addRewrite(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        searchContext.addRewrite(parentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            searchContext.addRewrite(parentQuery);, +            searchContext.addRewrite(hasParentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        searchContext.addRewrite(childQuery);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        searchContext.addRewrite(childFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            searchContext.addRewrite(childrenQuery);, +            searchContext.addRewrite(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        searchContext.addRewrite(parentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            searchContext.addRewrite(parentQuery);, +            searchContext.addRewrite(hasParentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        searchContext.addRewrite(childQuery);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +public class ChildrenQuery extends Query implements SearchContext.Rewrite {, +        int index = searchContext.rewrites().indexOf(this);, +        searchContext.rewrites().set(index, rewrite);, +    public void contextRewrite(SearchContext searchContext) throws Exception {, +        searchContext.idCache().refresh(searchContext.searcher().getTopReaderContext().leaves());, +        Collector collector;, +                collector = new AvgChildUidCollector(scoreType, searchContext, parentType, uidToScore, uidToCount);, +                break;, +                collector = new ChildUidCollector(scoreType, searchContext, parentType, uidToScore);, +        searchContext.searcher().search(childQuery, collector);, +    public void contextClear() {, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +        searchContext.addRewrite(childFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +            searchContext.addRewrite(childrenQuery);, +            searchContext.addRewrite(hasChildFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +        searchContext.addRewrite(parentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +            searchContext.addRewrite(parentQuery);, +            searchContext.addRewrite(hasParentFilter);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        searchContext.addRewrite(childQuery);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +public class ChildrenQuery extends Query implements SearchContext.Rewrite {, +        int index = searchContext.rewrites().indexOf(this);, +        searchContext.rewrites().set(index, rewrite);, +    public void contextRewrite(SearchContext searchContext) throws Exception {, +        searchContext.idCache().refresh(searchContext.searcher().getTopReaderContext().leaves());, +        Collector collector;, +                collector = new AvgChildUidCollector(scoreType, searchContext, parentType, uidToScore, uidToCount);, +                break;, +                collector = new ChildUidCollector(scoreType, searchContext, parentType, uidToScore);, +        searchContext.searcher().search(childQuery, collector);, +    public void contextClear() {, +++ b/src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java, +public abstract class HasChildFilter extends Filter implements SearchContext.Rewrite {, +        @Override, +        public void contextRewrite(SearchContext searchContext) throws Exception {, +            searchContext.idCache().refresh(searchContext.searcher().getTopReaderContext().leaves());, +            ChildCollector collector = new ChildCollector(parentType, searchContext);, +            searchContext.searcher().search(childQuery, collector);, +            this.parentDocs = collector.parentDocs();, +        }, +, +        @Override, +        public void contextClear() {, +            parentDocs = null;, +        }, +        @Override, +        public void contextRewrite(SearchContext searchContext) throws Exception {]