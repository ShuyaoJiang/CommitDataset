[+++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/PutAutoFollowPatternRequestTests.java, +, +    public void testValidateName() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        request.setName("name");, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, nullValue());, +    }, +, +    public void testValidateNameComma() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        request.setName("name1,name2");, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, notNullValue());, +        assertThat(validationException.getMessage(), containsString("name must not contain a ','"));, +    }, +, +    public void testValidateNameLeadingUnderscore() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        request.setName("_name");, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, notNullValue());, +        assertThat(validationException.getMessage(), containsString("name must not start with '_'"));, +    }, +, +    public void testValidateNameUnderscores() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        request.setName("n_a_m_e_");, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, nullValue());, +    }, +, +    public void testValidateNameTooLong() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        StringBuilder stringBuilder = new StringBuilder();, +        for (int i = 0; i < 256; i++) {, +            stringBuilder.append('x');, +        }, +        request.setName(stringBuilder.toString());, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, notNullValue());, +        assertThat(validationException.getMessage(), containsString("name is too long (256 > 255)"));, +, +        request.setName("name");, +        validationException = request.validate();, +        assertThat(validationException, nullValue());, +    }, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/PutAutoFollowPatternRequestTests.java, +, +    public void testValidateName() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        request.setName("name");, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, nullValue());, +    }, +, +    public void testValidateNameComma() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        request.setName("name1,name2");, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, notNullValue());, +        assertThat(validationException.getMessage(), containsString("name must not contain a ','"));, +    }, +, +    public void testValidateNameLeadingUnderscore() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));, +, +        request.setName("_name");, +        ActionRequestValidationException validationException = request.validate();, +        assertThat(validationException, notNullValue());, +        assertThat(validationException.getMessage(), containsString("name must not start with '_'"));, +    }, +, +    public void testValidateNameUnderscores() {, +        PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request();, +        request.setRemoteCluster("_alias");, +        request.setLeaderIndexPatterns(Collections.singletonList("logs-*"));]