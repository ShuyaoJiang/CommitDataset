[+++ b/server/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            sb.append(": v[").append(indexMetaData.getVersion()), +                    .append("], mv[").append(indexMetaData.getMappingVersion()), +                    .append("], sv[").append(indexMetaData.getSettingsVersion()), +                    .append("]\n");, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            sb.append(": v[").append(indexMetaData.getVersion()), +                    .append("], mv[").append(indexMetaData.getMappingVersion()), +                    .append("], sv[").append(indexMetaData.getSettingsVersion()), +                    .append("]\n");, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    static final String KEY_SETTINGS_VERSION = "settings_version";, +    private final long settingsVersion;, +, +    private IndexMetaData(Index index, long version, long mappingVersion, long settingsVersion, long[] primaryTerms, State state, int numberOfShards, int numberOfReplicas, Settings settings,, +        assert settingsVersion >= 0 : settingsVersion;, +        this.settingsVersion = settingsVersion;, +    public long getSettingsVersion() {, +        return settingsVersion;, +    }, +, +        private final long settingsVersion;, +            settingsVersion = after.settingsVersion;, +            if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +                settingsVersion = in.readVLong();, +            } else {, +                settingsVersion = 1;, +            }, +            if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +                out.writeVLong(settingsVersion);, +            }, +            builder.settingsVersion(settingsVersion);, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            builder.settingsVersion(in.readVLong());, +        } else {, +            builder.settingsVersion(1);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeVLong(settingsVersion);, +        }, +        private long settingsVersion = 1;, +            this.settingsVersion = indexMetaData.settingsVersion;, +        public long settingsVersion() {, +            return settingsVersion;, +        }, +, +        public Builder settingsVersion(final long settingsVersion) {, +            this.settingsVersion = settingsVersion;, +            return this;, +        }, +, +            return new IndexMetaData(new Index(index, uuid), version, mappingVersion, settingsVersion, primaryTerms, state, numberOfShards, numberOfReplicas, tmpSettings, mappings.build(),, +            builder.field(KEY_SETTINGS_VERSION, indexMetaData.getSettingsVersion());, +            boolean settingsVersion = false;, +                    } else if (KEY_SETTINGS_VERSION.equals(currentFieldName)) {, +                        settingsVersion = true;, +                        builder.settingsVersion(parser.longValue());, +            if (Assertions.ENABLED && Version.indexCreated(builder.settings).onOrAfter(Version.V_7_0_0_alpha1)) {, +                assert settingsVersion : "settings version should be present for indices created on or after 7.0.0";, +            }, +++ b/server/src/main/java/org/elasticsearch/cluster/ClusterState.java, +            sb.append(": v[").append(indexMetaData.getVersion()), +                    .append("], mv[").append(indexMetaData.getMappingVersion()), +                    .append("], sv[").append(indexMetaData.getSettingsVersion()), +                    .append("]\n");, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    static final String KEY_SETTINGS_VERSION = "settings_version";, +    private final long settingsVersion;, +, +    private IndexMetaData(Index index, long version, long mappingVersion, long settingsVersion, long[] primaryTerms, State state, int numberOfShards, int numberOfReplicas, Settings settings,, +        assert settingsVersion >= 0 : settingsVersion;, +        this.settingsVersion = settingsVersion;, +    public long getSettingsVersion() {, +        return settingsVersion;, +    }, +, +        private final long settingsVersion;, +            settingsVersion = after.settingsVersion;, +            if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +                settingsVersion = in.readVLong();, +            } else {, +                settingsVersion = 1;, +            }, +            if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +                out.writeVLong(settingsVersion);, +            }, +            builder.settingsVersion(settingsVersion);, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            builder.settingsVersion(in.readVLong());, +        } else {, +            builder.settingsVersion(1);, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeVLong(settingsVersion);, +        }, +        private long settingsVersion = 1;, +            this.settingsVersion = indexMetaData.settingsVersion;, +        public long settingsVersion() {, +            return settingsVersion;, +        }]