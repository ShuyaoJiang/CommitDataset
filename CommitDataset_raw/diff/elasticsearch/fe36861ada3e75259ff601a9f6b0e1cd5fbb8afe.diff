[+++ b/client/rest-high-level/build.gradle, +  setting 'xpack.security.authc.api_key.enabled', 'true', +++ b/client/rest-high-level/build.gradle, +  setting 'xpack.security.authc.api_key.enabled', 'true', +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.CreateApiKeyRequest;, +import org.elasticsearch.client.security.CreateApiKeyResponse;, +import org.elasticsearch.client.security.GetApiKeyRequest;, +import org.elasticsearch.client.security.GetApiKeyResponse;, +import org.elasticsearch.client.security.InvalidateApiKeyRequest;, +import org.elasticsearch.client.security.InvalidateApiKeyResponse;, +, +    /**, +     * Create an API Key.<br>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html">, +     * the docs</a> for more., +     *, +     * @param request the request to create a API key, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the create API key call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public CreateApiKeyResponse createApiKey(final CreateApiKeyRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::createApiKey, options,, +                CreateApiKeyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously creates an API key.<br>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html">, +     * the docs</a> for more., +     *, +     * @param request the request to create a API key, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void createApiKeyAsync(final CreateApiKeyRequest request, final RequestOptions options,, +            final ActionListener<CreateApiKeyResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::createApiKey, options,, +                CreateApiKeyResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +     * Retrieve API Key(s) information.<br>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html">, +     * the docs</a> for more., +     *, +     * @param request the request to retrieve API key(s), +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the create API key call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetApiKeyResponse getApiKey(final GetApiKeyRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::getApiKey, options,, +                GetApiKeyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously retrieve API Key(s) information.<br>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html">, +     * the docs</a> for more., +     *, +     * @param request the request to retrieve API key(s), +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getApiKeyAsync(final GetApiKeyRequest request, final RequestOptions options,, +            final ActionListener<GetApiKeyResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::getApiKey, options,, +                GetApiKeyResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +     * Invalidate API Key(s).<br>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html">, +     * the docs</a> for more., +     *, +     * @param request the request to invalidate API key(s), +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the invalidate API key call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public InvalidateApiKeyResponse invalidateApiKey(final InvalidateApiKeyRequest request, final RequestOptions options), +            throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::invalidateApiKey, options,, +                InvalidateApiKeyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously invalidates API key(s).<br>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-api-key.html">, +     * the docs</a> for more., +     *, +     * @param request the request to invalidate API key(s), +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void invalidateApiKeyAsync(final InvalidateApiKeyRequest request, final RequestOptions options,, +                                      final ActionListener<InvalidateApiKeyResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::invalidateApiKey, options,]