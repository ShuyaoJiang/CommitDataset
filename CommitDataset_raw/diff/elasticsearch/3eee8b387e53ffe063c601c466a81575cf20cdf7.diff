[+++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +        InetSocketTransportAddress.setResolveAddress(settings.getAsBoolean("network.address.serialization.resolve", false));, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +        InetSocketTransportAddress.setResolveAddress(settings.getAsBoolean("network.address.serialization.resolve", false));, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +import org.elasticsearch.common.SuppressForbidden;, +    // TODO: do we really need this option, why do resolving? - remove this as a follow-up, +    private static boolean resolveAddress = false;, +, +    public static void setResolveAddress(boolean resolveAddress) {, +        InetSocketTransportAddress.resolveAddress = resolveAddress;, +    }, +, +    public static boolean getResolveAddress() {, +        return resolveAddress;, +    }, +, +        if (in.readByte() == 0) {, +            int len = in.readByte();, +            byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +        } else {, +            this.address = new InetSocketAddress(InetAddress.getByName(in.readString()), in.readInt());, +        }, +       return maybeLookupHostname();, +        if (!resolveAddress && address.getAddress() != null) {, +            out.writeByte((byte) 0);, +        } else {, +            out.writeByte((byte) 1);, +            out.writeString(maybeLookupHostname());, +        }, +    @SuppressForbidden(reason = "if explicitly configured we do hostName reverse lookup") // TODO remove this?, +    private String maybeLookupHostname() {, +        if (resolveAddress) {, +            return address.getHostName();, +        } else {, +            return getAddress();, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +        InetSocketTransportAddress.setResolveAddress(settings.getAsBoolean("network.address.serialization.resolve", false));, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +import org.elasticsearch.common.SuppressForbidden;, +    // TODO: do we really need this option, why do resolving? - remove this as a follow-up, +    private static boolean resolveAddress = false;, +, +    public static void setResolveAddress(boolean resolveAddress) {, +        InetSocketTransportAddress.resolveAddress = resolveAddress;, +    }, +, +    public static boolean getResolveAddress() {, +        return resolveAddress;, +    }, +, +        if (in.readByte() == 0) {, +            int len = in.readByte();, +            byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +        } else {, +            this.address = new InetSocketAddress(InetAddress.getByName(in.readString()), in.readInt());, +        }, +       return maybeLookupHostname();, +        if (!resolveAddress && address.getAddress() != null) {, +            out.writeByte((byte) 0);, +        } else {, +            out.writeByte((byte) 1);, +            out.writeString(maybeLookupHostname());, +        }, +    @SuppressForbidden(reason = "if explicitly configured we do hostName reverse lookup") // TODO remove this?, +    private String maybeLookupHostname() {, +        if (resolveAddress) {, +            return address.getHostName();, +        } else {, +            return getAddress();, +        }, +    }, +++ b/core/src/test/java/org/elasticsearch/test/ESIntegTestCase.java, +            boolean getResolvedAddress = InetSocketTransportAddress.getResolveAddress();, +            try {, +                InetSocketTransportAddress.setResolveAddress(false);, +            } finally {, +                InetSocketTransportAddress.setResolveAddress(getResolvedAddress);, +            }, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +        InetSocketTransportAddress.setResolveAddress(settings.getAsBoolean("network.address.serialization.resolve", false));, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +import org.elasticsearch.common.SuppressForbidden;, +    // TODO: do we really need this option, why do resolving? - remove this as a follow-up, +    private static boolean resolveAddress = false;, +, +    public static void setResolveAddress(boolean resolveAddress) {, +        InetSocketTransportAddress.resolveAddress = resolveAddress;, +    }, +, +    public static boolean getResolveAddress() {, +        return resolveAddress;, +    }, +, +        if (in.readByte() == 0) {, +            int len = in.readByte();, +            byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +        } else {]