[+++ b/pom.xml, +        <lucene.maven.version>5.1.0-snapshot-1660560</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1660560</url>, +++ b/pom.xml, +        <lucene.maven.version>5.1.0-snapshot-1660560</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1660560</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +        PostingsEnum postings[] = null;, +                postings = new PostingsEnum[terms.length];, +                                   TermsEnum termsEnum, PostingsEnum[] postings, int n) throws IOException {, +            PostingsEnum de = postings[i];, +                de = postings[i] = termsEnum.postings(null, null, PostingsEnum.OFFSETS);, +            final PostingsEnum dp = off.dp;, +        PostingsEnum dp;, +        OffsetsEnum(PostingsEnum dp, int id) throws IOException {, +    private static final PostingsEnum EMPTY = new PostingsEnum() {, +++ b/pom.xml, +        <lucene.maven.version>5.1.0-snapshot-1660560</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1660560</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +        PostingsEnum postings[] = null;, +                postings = new PostingsEnum[terms.length];, +                                   TermsEnum termsEnum, PostingsEnum[] postings, int n) throws IOException {, +            PostingsEnum de = postings[i];, +                de = postings[i] = termsEnum.postings(null, null, PostingsEnum.OFFSETS);, +            final PostingsEnum dp = off.dp;, +        PostingsEnum dp;, +        OffsetsEnum(PostingsEnum dp, int id) throws IOException {, +    private static final PostingsEnum EMPTY = new PostingsEnum() {, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +            flatten(((ConstantScoreQuery) sourceQuery).getQuery(), reader, flatQueries);, +            // TermFilter is just a deprecated wrapper over QWF, +            TermQuery actualQuery = (TermQuery) ((TermFilter) sourceFilter).getQuery();, +            flatten(new TermQuery(actualQuery.getTerm()), reader, flatQueries);, +++ b/pom.xml, +        <lucene.maven.version>5.1.0-snapshot-1660560</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1660560</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +        PostingsEnum postings[] = null;, +                postings = new PostingsEnum[terms.length];, +                                   TermsEnum termsEnum, PostingsEnum[] postings, int n) throws IOException {, +            PostingsEnum de = postings[i];, +                de = postings[i] = termsEnum.postings(null, null, PostingsEnum.OFFSETS);, +            final PostingsEnum dp = off.dp;, +        PostingsEnum dp;, +        OffsetsEnum(PostingsEnum dp, int id) throws IOException {, +    private static final PostingsEnum EMPTY = new PostingsEnum() {, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +            flatten(((ConstantScoreQuery) sourceQuery).getQuery(), reader, flatQueries);, +            // TermFilter is just a deprecated wrapper over QWF, +            TermQuery actualQuery = (TermQuery) ((TermFilter) sourceFilter).getQuery();, +            flatten(new TermQuery(actualQuery.getTerm()), reader, flatQueries);, +++ b/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, +                public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {, +                    final TermVectorPostingsEnum retVal = (reuse instanceof TermVectorPostingsEnum ? (TermVectorPostingsEnum) reuse, +                            : new TermVectorPostingsEnum());, +    private final class TermVectorPostingsEnum extends PostingsEnum {, +        private PostingsEnum reset(int[] positions, int[] startOffsets, int[] endOffsets, BytesRefBuilder[] payloads, int freq) {, +++ b/pom.xml, +        <lucene.maven.version>5.1.0-snapshot-1660560</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1660560</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +        PostingsEnum postings[] = null;, +                postings = new PostingsEnum[terms.length];, +                                   TermsEnum termsEnum, PostingsEnum[] postings, int n) throws IOException {, +            PostingsEnum de = postings[i];, +                de = postings[i] = termsEnum.postings(null, null, PostingsEnum.OFFSETS);, +            final PostingsEnum dp = off.dp;, +        PostingsEnum dp;, +        OffsetsEnum(PostingsEnum dp, int id) throws IOException {, +    private static final PostingsEnum EMPTY = new PostingsEnum() {, +++ b/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +            flatten(((ConstantScoreQuery) sourceQuery).getQuery(), reader, flatQueries);, +            // TermFilter is just a deprecated wrapper over QWF, +            TermQuery actualQuery = (TermQuery) ((TermFilter) sourceFilter).getQuery();, +            flatten(new TermQuery(actualQuery.getTerm()), reader, flatQueries);, +++ b/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, +                public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) throws IOException {, +                    final TermVectorPostingsEnum retVal = (reuse instanceof TermVectorPostingsEnum ? (TermVectorPostingsEnum) reuse, +                            : new TermVectorPostingsEnum());, +    private final class TermVectorPostingsEnum extends PostingsEnum {, +        private PostingsEnum reset(int[] positions, int[] startOffsets, int[] endOffsets, BytesRefBuilder[] payloads, int freq) {, +++ b/src/main/java/org/elasticsearch/action/termvectors/TermVectorsResponse.java, +, +import org.apache.lucene.index.PostingsEnum;, +        PostingsEnum posEnum = termIter.postings(null, null, PostingsEnum.ALL);, +    private void initValues(Terms curTerms, PostingsEnum posEnum, int termFreq) throws IOException {, +++ b/pom.xml, +        <lucene.maven.version>5.1.0-snapshot-1660560</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1660560</url>, +++ b/src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java, +        PostingsEnum postings[] = null;, +                postings = new PostingsEnum[terms.length];, +                                   TermsEnum termsEnum, PostingsEnum[] postings, int n) throws IOException {, +            PostingsEnum de = postings[i];, +                de = postings[i] = termsEnum.postings(null, null, PostingsEnum.OFFSETS);, +            final PostingsEnum dp = off.dp;, +        PostingsEnum dp;, +        OffsetsEnum(PostingsEnum dp, int id) throws IOException {, +    private static final PostingsEnum EMPTY = new PostingsEnum() {]