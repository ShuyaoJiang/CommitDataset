[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import org.elasticsearch.Version;, +    int numberOfInFlightFetch = 0;, +        this(clusterName, concreteIndices, clusterState, -1, -1);, +    public ClusterHealthResponse(String clusterName, String[] concreteIndices, ClusterState clusterState, int numberOfPendingTasks,, +                                 int numberOfInFlightFetch) {, +        this.numberOfInFlightFetch = numberOfInFlightFetch;, +    public int getNumberOfInFlightFetch() {, +        return this.numberOfInFlightFetch;, +    }, +, +, +        if (in.getVersion().onOrAfter(Version.V_1_6_0)) {, +            numberOfInFlightFetch = in.readInt();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_6_0)) {, +            out.writeInt(numberOfInFlightFetch);, +        }, +        static final XContentBuilderString NUMBER_OF_IN_FLIGHT_FETCH = new XContentBuilderString("number_of_in_flight_fetch");, +        builder.field(Fields.NUMBER_OF_IN_FLIGHT_FETCH, getNumberOfInFlightFetch());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import org.elasticsearch.Version;, +    int numberOfInFlightFetch = 0;, +        this(clusterName, concreteIndices, clusterState, -1, -1);, +    public ClusterHealthResponse(String clusterName, String[] concreteIndices, ClusterState clusterState, int numberOfPendingTasks,, +                                 int numberOfInFlightFetch) {, +        this.numberOfInFlightFetch = numberOfInFlightFetch;, +    public int getNumberOfInFlightFetch() {, +        return this.numberOfInFlightFetch;, +    }, +, +, +        if (in.getVersion().onOrAfter(Version.V_1_6_0)) {, +            numberOfInFlightFetch = in.readInt();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_6_0)) {, +            out.writeInt(numberOfInFlightFetch);, +        }, +        static final XContentBuilderString NUMBER_OF_IN_FLIGHT_FETCH = new XContentBuilderString("number_of_in_flight_fetch");, +        builder.field(Fields.NUMBER_OF_IN_FLIGHT_FETCH, getNumberOfInFlightFetch());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +import org.elasticsearch.gateway.GatewayAllocator;, +    private final GatewayAllocator gatewayAllocator;, +                                        ClusterName clusterName, ActionFilters actionFilters, GatewayAllocator gatewayAllocator) {, +        this.gatewayAllocator = gatewayAllocator;, +        ClusterHealthResponse response = clusterHealth(request, clusterState, clusterService.numberOfPendingTasks(), gatewayAllocator.getNumberOfInFlightFetch());, +        ClusterHealthResponse response = clusterHealth(request, clusterState, clusterService.numberOfPendingTasks(), gatewayAllocator.getNumberOfInFlightFetch());, +    private ClusterHealthResponse clusterHealth(ClusterHealthRequest request, ClusterState clusterState, int numberOfPendingTasks, int numberOfInFlightFetch) {, +            ClusterHealthResponse response = new ClusterHealthResponse(clusterName.value(), Strings.EMPTY_ARRAY, clusterState, numberOfPendingTasks, numberOfInFlightFetch);, +        return new ClusterHealthResponse(clusterName.value(), concreteIndices, clusterState, numberOfPendingTasks, numberOfInFlightFetch);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import org.elasticsearch.Version;, +    int numberOfInFlightFetch = 0;, +        this(clusterName, concreteIndices, clusterState, -1, -1);, +    public ClusterHealthResponse(String clusterName, String[] concreteIndices, ClusterState clusterState, int numberOfPendingTasks,, +                                 int numberOfInFlightFetch) {, +        this.numberOfInFlightFetch = numberOfInFlightFetch;, +    public int getNumberOfInFlightFetch() {, +        return this.numberOfInFlightFetch;, +    }, +, +, +        if (in.getVersion().onOrAfter(Version.V_1_6_0)) {, +            numberOfInFlightFetch = in.readInt();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_6_0)) {, +            out.writeInt(numberOfInFlightFetch);, +        }, +        static final XContentBuilderString NUMBER_OF_IN_FLIGHT_FETCH = new XContentBuilderString("number_of_in_flight_fetch");, +        builder.field(Fields.NUMBER_OF_IN_FLIGHT_FETCH, getNumberOfInFlightFetch());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +import org.elasticsearch.gateway.GatewayAllocator;, +    private final GatewayAllocator gatewayAllocator;, +                                        ClusterName clusterName, ActionFilters actionFilters, GatewayAllocator gatewayAllocator) {, +        this.gatewayAllocator = gatewayAllocator;, +        ClusterHealthResponse response = clusterHealth(request, clusterState, clusterService.numberOfPendingTasks(), gatewayAllocator.getNumberOfInFlightFetch());, +        ClusterHealthResponse response = clusterHealth(request, clusterState, clusterService.numberOfPendingTasks(), gatewayAllocator.getNumberOfInFlightFetch());, +    private ClusterHealthResponse clusterHealth(ClusterHealthRequest request, ClusterState clusterState, int numberOfPendingTasks, int numberOfInFlightFetch) {, +            ClusterHealthResponse response = new ClusterHealthResponse(clusterName.value(), Strings.EMPTY_ARRAY, clusterState, numberOfPendingTasks, numberOfInFlightFetch);, +        return new ClusterHealthResponse(clusterName.value(), concreteIndices, clusterState, numberOfPendingTasks, numberOfInFlightFetch);, +++ b/src/main/java/org/elasticsearch/action/support/nodes/NodesOperationResponse.java, +import org.elasticsearch.action.FailedNodeException;, +import org.elasticsearch.common.Nullable;, +    /**, +     * The failed nodes, if set to be captured., +     */, +    @Nullable, +    public FailedNodeException[] failures() {, +        return null;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +import org.elasticsearch.Version;, +    int numberOfInFlightFetch = 0;, +        this(clusterName, concreteIndices, clusterState, -1, -1);, +    public ClusterHealthResponse(String clusterName, String[] concreteIndices, ClusterState clusterState, int numberOfPendingTasks,, +                                 int numberOfInFlightFetch) {]