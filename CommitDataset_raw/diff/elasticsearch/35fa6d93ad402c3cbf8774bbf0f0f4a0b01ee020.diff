[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +        final Settings closeSettings = updatedSettingsBuilder.build();, +, +        final Set<String> removedSettings = Sets.newHashSet();, +        final Settings openSettings = updatedSettingsBuilder.build();, +                    int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1);, +                        logger.info("updating number_of_replicas to [{}] for indices {}", updatedNumberOfReplicas, actualIndices);, +                    // allow to change any settings to a close index, and only allow dynamic settings to be changed, +                    // on an open index, +                    Set<String> openIndices = Sets.newHashSet();, +                    Set<String> closeIndices = Sets.newHashSet();, +                    for (String index : actualIndices) {, +                        if (currentState.metaData().index(index).state() == IndexMetaData.State.OPEN) {, +                            openIndices.add(index);, +                        } else {, +                            closeIndices.add(index);, +                        }, +                    }, +, +                    if (!openIndices.isEmpty()) {, +                        String[] indices = openIndices.toArray(new String[openIndices.size()]);, +                        if (!removedSettings.isEmpty()) {, +                            logger.warn("{} ignoring non dynamic index level settings for open indices: {}", indices, removedSettings);, +                        }, +                        metaDataBuilder.updateSettings(openSettings, indices);, +                    }, +, +                    if (!closeIndices.isEmpty()) {, +                        String[] indices = closeIndices.toArray(new String[closeIndices.size()]);, +                        metaDataBuilder.updateSettings(closeSettings, indices);, +                    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +        final Settings closeSettings = updatedSettingsBuilder.build();, +, +        final Set<String> removedSettings = Sets.newHashSet();, +        final Settings openSettings = updatedSettingsBuilder.build();, +                    int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1);, +                        logger.info("updating number_of_replicas to [{}] for indices {}", updatedNumberOfReplicas, actualIndices);, +                    // allow to change any settings to a close index, and only allow dynamic settings to be changed, +                    // on an open index, +                    Set<String> openIndices = Sets.newHashSet();, +                    Set<String> closeIndices = Sets.newHashSet();, +                    for (String index : actualIndices) {, +                        if (currentState.metaData().index(index).state() == IndexMetaData.State.OPEN) {, +                            openIndices.add(index);, +                        } else {, +                            closeIndices.add(index);, +                        }, +                    }, +, +                    if (!openIndices.isEmpty()) {, +                        String[] indices = openIndices.toArray(new String[openIndices.size()]);, +                        if (!removedSettings.isEmpty()) {, +                            logger.warn("{} ignoring non dynamic index level settings for open indices: {}", indices, removedSettings);, +                        }, +                        metaDataBuilder.updateSettings(openSettings, indices);, +                    }, +, +                    if (!closeIndices.isEmpty()) {, +                        String[] indices = closeIndices.toArray(new String[closeIndices.size()]);, +                        metaDataBuilder.updateSettings(closeSettings, indices);, +                    }, +, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateSettingsTests.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.integration.indices.settings;, +, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.test.integration.AbstractNodesTests;, +import org.testng.annotations.AfterClass;, +import org.testng.annotations.BeforeClass;, +import org.testng.annotations.Test;, +, +import static org.hamcrest.MatcherAssert.*;, +import static org.hamcrest.Matchers.*;, +, +public class UpdateSettingsTests extends AbstractNodesTests {, +, +    @BeforeClass public void startNodes() {, +        startNode("node1");]