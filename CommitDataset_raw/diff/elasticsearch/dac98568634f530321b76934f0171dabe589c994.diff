[+++ b/TESTING.asciidoc, +++ b/TESTING.asciidoc, +++ b/Vagrantfile, +++ b/TESTING.asciidoc, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +        clusterConfig.distribution = 'zip', +++ b/TESTING.asciidoc, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +        clusterConfig.distribution = 'zip', +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/TESTING.asciidoc, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +        clusterConfig.distribution = 'zip', +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +, +, +++ b/TESTING.asciidoc, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +        clusterConfig.distribution = 'zip', +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsResponse.java, +    public ClusterStatsResponse(long timestamp,, +                                ClusterName clusterName,, +                                List<ClusterStatsNodeResponse> nodes,, +                                List<FailedNodeException> failures) {, +, +++ b/TESTING.asciidoc, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +        clusterConfig.distribution = 'zip', +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsResponse.java, +    public ClusterStatsResponse(long timestamp,, +                                ClusterName clusterName,, +                                List<ClusterStatsNodeResponse> nodes,, +                                List<FailedNodeException> failures) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +        return new ClusterStatsResponse(, +            System.currentTimeMillis(),, +            clusterService.getClusterName(),, +            responses,, +            failures);, +++ b/TESTING.asciidoc, +++ b/Vagrantfile, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RunTask.groovy, +        clusterConfig.distribution = 'zip', +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsResponse.java, +    public ClusterStatsResponse(long timestamp,, +                                ClusterName clusterName,, +                                List<ClusterStatsNodeResponse> nodes,, +                                List<FailedNodeException> failures) {, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +        return new ClusterStatsResponse(, +            System.currentTimeMillis(),, +            clusterService.getClusterName(),, +            responses,, +            failures);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        final UpdateHelper.Result translate;, +                            translate = updateHelper.prepare(updateRequest, primary, threadPool::estimatedTimeInMillis);, +                        } catch (Exception failure) {, +                            // we may fail translating a update to index or delete operation, +                            updateOperation = new Engine.Failure(updateRequest.type(), updateRequest.id(), updateRequest.version(),, +                                    updateRequest.versionType(), Engine.Operation.Origin.PRIMARY, System.nanoTime(), failure);, +                            break; // out of retry loop, +                        }, +                                // enrich update response and, +                                // set translated update (index/delete) request for replica execution in bulk items, +                                        // replace the update request to the translated index request to execute on the replica., +                                        // replace the update request to the translated delete request to execute on the replica., +, +            // update the bulk item request because update request execution can mutate the bulk item request, +            BulkItemRequest item = request.items()[requestIndex];, +, +            assert item.getPrimaryResponse() != null;, +            assert preVersionTypes[requestIndex] != null;, +            if (item.getPrimaryResponse().isFailed(), +                    || item.getPrimaryResponse().getResponse().getResult() == DocWriteResponse.Result.NOOP) {, +                item.setIgnoreOnReplica();, +            } else {, +                // set the ShardInfo to 0 so we can safely send it to the replicas. We won't use it in the real response though., +                item.getPrimaryResponse().getResponse().setShardInfo(new ShardInfo());, +            }]