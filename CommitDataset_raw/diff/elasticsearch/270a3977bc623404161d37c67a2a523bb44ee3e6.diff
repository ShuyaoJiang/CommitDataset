[+++ /dev/null, +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +The REST tests are run automatically when executing the maven test command. To run only the, +gradle integTest -Dtests.filter="@Rest", +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +The REST tests are run automatically when executing the maven test command. To run only the, +gradle integTest -Dtests.filter="@Rest", +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +The REST tests are run automatically when executing the maven test command. To run only the, +gradle integTest -Dtests.filter="@Rest", +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +The REST tests are run automatically when executing the maven test command. To run only the, +gradle integTest -Dtests.filter="@Rest", +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        PrecommitTasks.configure(project), +++ /dev/null, +++ b/TESTING.asciidoc, +By default, the tests run sequentially on a single forked JVM., +, +To run with more forked JVMs than the default use:, +Don't count hypercores for CPU-intense tests and leave some slack, +for JVM-internal threads (like the garbage collector). Make sure there is, +enough RAM to handle child JVMs., +The REST tests are run automatically when executing the maven test command. To run only the, +gradle integTest -Dtests.filter="@Rest", +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        PrecommitTasks.configure(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/DependencyLicensesTask.groovy, +import org.gradle.api.DefaultTask, +import org.gradle.api.GradleException, +import org.gradle.api.InvalidUserDataException, +import org.gradle.api.Project, +import org.gradle.api.Task, +import org.gradle.api.tasks.StopActionException, +import org.gradle.api.tasks.VerificationTask, +class DependencyLicensesTask extends DefaultTask {, +    static final String SHA_EXTENSION = '.sha1', +    static Task configure(Project project, Closure closure) {, +        DependencyLicensesTask task = project.tasks.create(type: DependencyLicensesTask, name: 'dependencyLicenses'), +        UpdateShasTask update = project.tasks.create(type: UpdateShasTask, name: 'updateShas'), +        update.parentTask = task, +        task.configure(closure), +        project.check.dependsOn(task), +        return task]