[+++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import com.google.common.collect.Lists;, +                Collection<FieldMapper<?>> remainingFieldMappers = Lists.newLinkedList(allFieldMappers);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import com.google.common.collect.Lists;, +                Collection<FieldMapper<?>> remainingFieldMappers = Lists.newLinkedList(allFieldMappers);, +++ b/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                            FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                            if (fieldMapper != null) {, +                                fields.add(fieldMapper.names().indexName());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import com.google.common.collect.Lists;, +                Collection<FieldMapper<?>> remainingFieldMappers = Lists.newLinkedList(allFieldMappers);, +++ b/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                            FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                            if (fieldMapper != null) {, +                                fields.add(fieldMapper.names().indexName());, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                } else if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) {, +                            values.set(i, fieldMapper.valueForSearch(values.get(i)));, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import com.google.common.collect.Lists;, +                Collection<FieldMapper<?>> remainingFieldMappers = Lists.newLinkedList(allFieldMappers);, +++ b/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                            FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                            if (fieldMapper != null) {, +                                fields.add(fieldMapper.names().indexName());, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                } else if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) {, +                            values.set(i, fieldMapper.valueForSearch(values.get(i)));, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +import java.util.Iterator;, +public final class DocumentFieldMappers implements Iterable<FieldMapper<?>> {, +    FieldMappers smartName(String name) {, +    public Iterator<FieldMapper<?>> iterator() {, +        return fieldMappers.iterator();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import com.google.common.collect.Lists;, +                Collection<FieldMapper<?>> remainingFieldMappers = Lists.newLinkedList(allFieldMappers);, +++ b/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                            FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                            if (fieldMapper != null) {, +                                fields.add(fieldMapper.names().indexName());, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                } else if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) {, +                            values.set(i, fieldMapper.valueForSearch(values.get(i)));, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +import java.util.Iterator;, +public final class DocumentFieldMappers implements Iterable<FieldMapper<?>> {, +    FieldMappers smartName(String name) {, +    public Iterator<FieldMapper<?>> iterator() {, +        return fieldMappers.iterator();, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +                        MergeContext mergeContext = newMergeContext(new MergeFlags().simulate(true));, +                            mergeContext = newMergeContext(new MergeFlags().simulate(false));, +    private MergeContext newMergeContext(MergeFlags mergeFlags) {, +        final MergeContext mergeContext = newMergeContext(mergeFlags);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import com.google.common.collect.Lists;, +                Collection<FieldMapper<?>> remainingFieldMappers = Lists.newLinkedList(allFieldMappers);, +++ b/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +                            FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                            if (fieldMapper != null) {, +                                fields.add(fieldMapper.names().indexName());, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field);, +                } else if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) {, +                            values.set(i, fieldMapper.valueForSearch(values.get(i)));, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +import java.util.Iterator;, +public final class DocumentFieldMappers implements Iterable<FieldMapper<?>> {, +    FieldMappers smartName(String name) {, +    public Iterator<FieldMapper<?>> iterator() {, +        return fieldMappers.iterator();, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +                        MergeContext mergeContext = newMergeContext(new MergeFlags().simulate(true));, +                            mergeContext = newMergeContext(new MergeFlags().simulate(false));, +    private MergeContext newMergeContext(MergeFlags mergeFlags) {, +        final MergeContext mergeContext = newMergeContext(mergeFlags);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMappersLookup.java, +import java.util.Collections;, +import java.util.Iterator;, +class FieldMappersLookup implements Iterable<FieldMapper<?>> {, +        final CopyOnWriteHashMap<String, FieldMappers> indexName, fullName;, +        MappersLookup(CopyOnWriteHashMap<String, FieldMappers> indexName, CopyOnWriteHashMap<String, FieldMappers> fullName) {, +            return new MappersLookup(indexName, fullName);, +        this(new MappersLookup(new CopyOnWriteHashMap<String, FieldMappers>(),, +    private FieldMappersLookup(MappersLookup lookup) {, +        return new FieldMappersLookup(lookup.addNewMappers(newMappers));, +        for (FieldMapper<?> fieldMapper : this) {, +        for (FieldMapper<?> fieldMapper : this) {, +    FieldMappers smartName(String name) {, +    public Iterator<FieldMapper<?>> iterator() {, +        final Iterator<FieldMappers> fieldsItr = lookup.fullName.values().iterator();, +        if (fieldsItr.hasNext() == false) {, +            return Collections.emptyIterator();, +        }]