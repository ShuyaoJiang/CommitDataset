[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +    private final BigArrays bigArrays;, +    public final void collectBucket(LeafBucketCollector subCollector, int doc, long bucketOrd) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +    private final BigArrays bigArrays;, +    public final void collectBucket(LeafBucketCollector subCollector, int doc, long bucketOrd) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGrid.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +    private final BigArrays bigArrays;, +    public final void collectBucket(LeafBucketCollector subCollector, int doc, long bucketOrd) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGrid.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +                    final long val = values.valueAt(i);, +            super(0, 0, (InternalAggregations) null);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +    private final BigArrays bigArrays;, +    public final void collectBucket(LeafBucketCollector subCollector, int doc, long bucketOrd) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGrid.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +                    final long val = values.valueAt(i);, +            super(0, 0, (InternalAggregations) null);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParser.java, +            private int precision;, +            protected CellValues(MultiGeoPointValues geoValues, int precision) {, +                this.precision = precision;, +                    values[i] = XGeoHashUtils.longEncode(target.getLon(), target.getLat(), precision);, +                return new CellValues(valuesSource.geoPointValues(ctx), precision);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +    private final BigArrays bigArrays;, +    public final void collectBucket(LeafBucketCollector subCollector, int doc, long bucketOrd) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGrid.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +                    final long val = values.valueAt(i);, +            super(0, 0, (InternalAggregations) null);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParser.java, +            private int precision;, +            protected CellValues(MultiGeoPointValues geoValues, int precision) {, +                this.precision = precision;, +                    values[i] = XGeoHashUtils.longEncode(target.getLon(), target.getLat(), precision);, +                return new CellValues(valuesSource.geoPointValues(ctx), precision);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java, +        public Bucket(long geohashAsLong, long docCount, InternalAggregations aggregations) {, +            return new Bucket(geohashAsLong, docCount, aggs);, +        return new Bucket(prototype.geohashAsLong, prototype.docCount, aggregations);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java, +    private final BigArrays bigArrays;, +    public final void collectBucket(LeafBucketCollector subCollector, int doc, long bucketOrd) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGrid.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +                    final long val = values.valueAt(i);, +            super(0, 0, (InternalAggregations) null);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParser.java, +            private int precision;, +            protected CellValues(MultiGeoPointValues geoValues, int precision) {, +                this.precision = precision;, +                    values[i] = XGeoHashUtils.longEncode(target.getLon(), target.getLat(), precision);, +                return new CellValues(valuesSource.geoPointValues(ctx), precision);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java, +        public Bucket(long geohashAsLong, long docCount, InternalAggregations aggregations) {, +            return new Bucket(geohashAsLong, docCount, aggs);, +        return new Bucket(prototype.geohashAsLong, prototype.docCount, aggregations);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoHashGridIT.java]