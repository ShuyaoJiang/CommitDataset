[+++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBoolean() ? new IndexWarmersMetaData.SearchSource(in) : null), +                boolean hasSource = warmerEntry.source() != null;, +                out.writeBoolean(hasSource);, +                if (hasSource) {, +                    warmerEntry.source().writeTo(out);, +                }, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBoolean() ? new IndexWarmersMetaData.SearchSource(in) : null), +                boolean hasSource = warmerEntry.source() != null;, +                out.writeBoolean(hasSource);, +                if (hasSource) {, +                    warmerEntry.source().writeTo(out);, +                }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                IndexWarmersMetaData.SearchSource source = new IndexWarmersMetaData.SearchSource(in);, +                warmerEntry.source().writeTo(out);, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBoolean() ? new IndexWarmersMetaData.SearchSource(in) : null), +                boolean hasSource = warmerEntry.source() != null;, +                out.writeBoolean(hasSource);, +                if (hasSource) {, +                    warmerEntry.source().writeTo(out);, +                }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                IndexWarmersMetaData.SearchSource source = new IndexWarmersMetaData.SearchSource(in);, +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        IndexWarmersMetaData.SearchSource source = null;, +                        if (request.searchRequest().source() != null) {, +                            source = new IndexWarmersMetaData.SearchSource(request.searchRequest().source());, +++ b/core/pom.xml, +                                <include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>, +                                <include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>, +                                <include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>, +                                <include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +                        in.readBoolean() ? new IndexWarmersMetaData.SearchSource(in) : null), +                boolean hasSource = warmerEntry.source() != null;, +                out.writeBoolean(hasSource);, +                if (hasSource) {]