[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                    if (result != null) {, +                    }, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                    if (result != null) {, +                    }, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // A restore could possibly overwrite existing segment files due to any number of reasons,, +                // for example if the primary was snapshotted and then the replica was promoted to primary, +                // with different segment files. In this case, the goal of the restore is to forget about, +                // what is currently in the index and just restore the state to whatever is in the snapshot., +                // Hence, we are deleting files here if they already exist before writing to them. A better, +                // long term solution would be to use recovery for restoring, so we have more robust restoring, +                // of files (copying to temporary files first and then moving them over)., +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                    if (result != null) {, +                    }, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // A restore could possibly overwrite existing segment files due to any number of reasons,, +                // for example if the primary was snapshotted and then the replica was promoted to primary, +                // with different segment files. In this case, the goal of the restore is to forget about, +                // what is currently in the index and just restore the state to whatever is in the snapshot., +                // Hence, we are deleting files here if they already exist before writing to them. A better, +                // long term solution would be to use recovery for restoring, so we have more robust restoring, +                // of files (copying to temporary files first and then moving them over)., +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                Function<Settings, String> defaultLangAndTypeFn = settings -> {, +                    final Setting<Boolean> globalTypeSetting = scriptTypeSettingMap.get(scriptType);, +                    final Setting<Boolean> langAndTypeSetting = Setting.boolSetting(ScriptModes.getGlobalKey(language, scriptType),, +                            defaultIfNothingSet, Property.NodeScope);, +, +                    if (langAndTypeSetting.exists(settings)) {, +                        // fine-grained e.g. script.engine.groovy.inline, +                        return langAndTypeSetting.get(settings).toString();, +                    } else if (globalTypeSetting.exists(settings)) {, +                        // global type - script.inline, +                        return globalTypeSetting.get(settings).toString();, +                    } else {, +                        return Boolean.toString(defaultIfNothingSet);, +                    }, +                };, +, +                        defaultLangAndTypeFn, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                    if (result != null) {, +                    }, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // A restore could possibly overwrite existing segment files due to any number of reasons,, +                // for example if the primary was snapshotted and then the replica was promoted to primary, +                // with different segment files. In this case, the goal of the restore is to forget about, +                // what is currently in the index and just restore the state to whatever is in the snapshot., +                // Hence, we are deleting files here if they already exist before writing to them. A better, +                // long term solution would be to use recovery for restoring, so we have more robust restoring, +                // of files (copying to temporary files first and then moving them over)., +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                Function<Settings, String> defaultLangAndTypeFn = settings -> {, +                    final Setting<Boolean> globalTypeSetting = scriptTypeSettingMap.get(scriptType);, +                    final Setting<Boolean> langAndTypeSetting = Setting.boolSetting(ScriptModes.getGlobalKey(language, scriptType),, +                            defaultIfNothingSet, Property.NodeScope);, +, +                    if (langAndTypeSetting.exists(settings)) {, +                        // fine-grained e.g. script.engine.groovy.inline, +                        return langAndTypeSetting.get(settings).toString();, +                    } else if (globalTypeSetting.exists(settings)) {, +                        // global type - script.inline, +                        return globalTypeSetting.get(settings).toString();, +                    } else {, +                        return Boolean.toString(defaultIfNothingSet);, +                    }, +                };, +, +                        defaultLangAndTypeFn, Property.NodeScope);, +++ b/core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +                    if (result != null) {, +                    }, +                if (result == null) {, +                    // add all the previous ones..., +                    result = new HashSet<>(expressions.subList(0, i));, +                }, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                // A restore could possibly overwrite existing segment files due to any number of reasons,, +                // for example if the primary was snapshotted and then the replica was promoted to primary, +                // with different segment files. In this case, the goal of the restore is to forget about]