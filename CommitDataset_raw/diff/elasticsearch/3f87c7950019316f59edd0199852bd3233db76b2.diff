[+++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName, parser);, +    private FieldParser getParser(String fieldName, XContentParser xContentParser) {, +            throw new XContentParseException(xContentParser.getTokenLocation(),, +                    "[" + name + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName, parser);, +    private FieldParser getParser(String fieldName, XContentParser xContentParser) {, +            throw new XContentParseException(xContentParser.getTokenLocation(),, +                    "[" + name + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +            assertEquals(ex.getMessage(), "[1:2] [the_parser] unknown field [not_supported_field], parser not found");, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName, parser);, +    private FieldParser getParser(String fieldName, XContentParser xContentParser) {, +            throw new XContentParseException(xContentParser.getTokenLocation(),, +                    "[" + name + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +            assertEquals(ex.getMessage(), "[1:2] [the_parser] unknown field [not_supported_field], parser not found");, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName, parser);, +    private FieldParser getParser(String fieldName, XContentParser xContentParser) {, +            throw new XContentParseException(xContentParser.getTokenLocation(),, +                    "[" + name + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +            assertEquals(ex.getMessage(), "[1:2] [the_parser] unknown field [not_supported_field], parser not found");, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java, +import org.elasticsearch.common.xcontent.XContentParseException;, +import static org.hamcrest.CoreMatchers.containsString;, +            XContentParseException exception = expectThrows(XContentParseException.class,, +            assertThat(exception.getMessage(), containsString("[dcg_at] unknown field"));, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName, parser);, +    private FieldParser getParser(String fieldName, XContentParser xContentParser) {, +            throw new XContentParseException(xContentParser.getTokenLocation(),, +                    "[" + name + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +            assertEquals(ex.getMessage(), "[1:2] [the_parser] unknown field [not_supported_field], parser not found");, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java, +import org.elasticsearch.common.xcontent.XContentParseException;, +import static org.hamcrest.CoreMatchers.containsString;, +            XContentParseException exception = expectThrows(XContentParseException.class,, +            assertThat(exception.getMessage(), containsString("[dcg_at] unknown field"));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +import org.elasticsearch.common.xcontent.XContentParseException;, +import static org.hamcrest.CoreMatchers.containsString;, +            XContentParseException exception = expectThrows(XContentParseException.class,, +            assertThat(exception.getMessage(), containsString("[reciprocal_rank] unknown field"));, +++ b/libs/x-content/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java, +                fieldParser = getParser(currentFieldName, parser);, +    private FieldParser getParser(String fieldName, XContentParser xContentParser) {, +            throw new XContentParseException(xContentParser.getTokenLocation(),, +                    "[" + name + "] unknown field [" + fieldName + "], parser not found");, +++ b/libs/x-content/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"test\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +        {, +            XContentParser parser = createParser(JsonXContent.jsonXContent, "{\"not_supported_field\" : \"foo\"}");, +            XContentParseException ex = expectThrows(XContentParseException.class, () -> objectParser.parse(parser, s, null));, +            assertEquals(ex.getMessage(), "[1:2] [the_parser] unknown field [not_supported_field], parser not found");, +++ b/modules/mapper-extras/src/test/java/org/elasticsearch/index/query/FeatureQueryBuilderTests.java, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java, +import org.elasticsearch.common.xcontent.XContentParseException;, +import static org.hamcrest.CoreMatchers.containsString;, +            XContentParseException exception = expectThrows(XContentParseException.class,, +            assertThat(exception.getMessage(), containsString("[dcg_at] unknown field"));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/MeanReciprocalRankTests.java, +import org.elasticsearch.common.xcontent.XContentParseException;, +import static org.hamcrest.CoreMatchers.containsString;, +            XContentParseException exception = expectThrows(XContentParseException.class,, +            assertThat(exception.getMessage(), containsString("[reciprocal_rank] unknown field"));, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java]