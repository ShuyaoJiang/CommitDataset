[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facet.java, +import org.elasticsearch.search.facets.range.RangeFacet;, +        GEO_DISTANCE(4, GeoDistanceFacet.class),, +        /**, +         * Geo Distance facet type, matching {@link RangeFacet}., +         */, +        RANGE(5, RangeFacet.class);, +            } else if (id == 5) {, +                return RANGE;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facet.java, +import org.elasticsearch.search.facets.range.RangeFacet;, +        GEO_DISTANCE(4, GeoDistanceFacet.class),, +        /**, +         * Geo Distance facet type, matching {@link RangeFacet}., +         */, +        RANGE(5, RangeFacet.class);, +            } else if (id == 5) {, +                return RANGE;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetBuilders.java, +import org.elasticsearch.search.facets.range.RangeFacetBuilder;, +import org.elasticsearch.search.facets.range.RangeScriptFacetBuilder;, +    public static RangeFacetBuilder rangeFacet(String facetName) {, +        return new RangeFacetBuilder(facetName);, +    }, +, +    public static RangeScriptFacetBuilder rangeScriptFacet(String facetName) {, +        return new RangeScriptFacetBuilder(facetName);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facet.java, +import org.elasticsearch.search.facets.range.RangeFacet;, +        GEO_DISTANCE(4, GeoDistanceFacet.class),, +        /**, +         * Geo Distance facet type, matching {@link RangeFacet}., +         */, +        RANGE(5, RangeFacet.class);, +            } else if (id == 5) {, +                return RANGE;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetBuilders.java, +import org.elasticsearch.search.facets.range.RangeFacetBuilder;, +import org.elasticsearch.search.facets.range.RangeScriptFacetBuilder;, +    public static RangeFacetBuilder rangeFacet(String facetName) {, +        return new RangeFacetBuilder(facetName);, +    }, +, +    public static RangeScriptFacetBuilder rangeScriptFacet(String facetName) {, +        return new RangeScriptFacetBuilder(facetName);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.search.facets.range.RangeFacetCollectorParser;, +        addFacetParser(builder, new RangeFacetCollectorParser());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facet.java, +import org.elasticsearch.search.facets.range.RangeFacet;, +        GEO_DISTANCE(4, GeoDistanceFacet.class),, +        /**, +         * Geo Distance facet type, matching {@link RangeFacet}., +         */, +        RANGE(5, RangeFacet.class);, +            } else if (id == 5) {, +                return RANGE;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetBuilders.java, +import org.elasticsearch.search.facets.range.RangeFacetBuilder;, +import org.elasticsearch.search.facets.range.RangeScriptFacetBuilder;, +    public static RangeFacetBuilder rangeFacet(String facetName) {, +        return new RangeFacetBuilder(facetName);, +    }, +, +    public static RangeScriptFacetBuilder rangeScriptFacet(String facetName) {, +        return new RangeScriptFacetBuilder(facetName);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.search.facets.range.RangeFacetCollectorParser;, +        addFacetParser(builder, new RangeFacetCollectorParser());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/geodistance/GeoDistanceFacetBuilder.java, +            throw new SearchSourceBuilderException("at least one range must be defined for geo_distance facet [" + name + "]");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facet.java, +import org.elasticsearch.search.facets.range.RangeFacet;, +        GEO_DISTANCE(4, GeoDistanceFacet.class),, +        /**, +         * Geo Distance facet type, matching {@link RangeFacet}., +         */, +        RANGE(5, RangeFacet.class);, +            } else if (id == 5) {, +                return RANGE;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetBuilders.java, +import org.elasticsearch.search.facets.range.RangeFacetBuilder;, +import org.elasticsearch.search.facets.range.RangeScriptFacetBuilder;, +    public static RangeFacetBuilder rangeFacet(String facetName) {, +        return new RangeFacetBuilder(facetName);, +    }, +, +    public static RangeScriptFacetBuilder rangeScriptFacet(String facetName) {, +        return new RangeScriptFacetBuilder(facetName);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.search.facets.range.RangeFacetCollectorParser;, +        addFacetParser(builder, new RangeFacetCollectorParser());]