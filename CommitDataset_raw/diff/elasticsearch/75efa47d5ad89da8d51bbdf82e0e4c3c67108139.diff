[+++ b/src/main/java/org/elasticsearch/plugins/PluginsService.java, +    public static final String ES_PLUGIN_PROPERTIES_FILE_KEY = "properties_file";, +    public static final String LOAD_PLUGIN_FROM_CLASSPATH = "load_classpath_plugins";, +    private final String esPluginPropertiesFile;, +    private final boolean loadClasspathPlugins;, +        this.esPluginPropertiesFile = componentSettings.get(ES_PLUGIN_PROPERTIES_FILE_KEY, ES_PLUGIN_PROPERTIES);, +        this.loadClasspathPlugins = componentSettings.getAsBoolean(LOAD_PLUGIN_FROM_CLASSPATH, true);, +        if (loadClasspathPlugins) {, +        }, +            Enumeration<URL> pluginUrls = settings.getClassLoader().getResources(esPluginPropertiesFile);, +                    File pluginPropFile = new File(sitePluginDir, esPluginPropertiesFile);, +                            logger.debug("can not load {} file.", e, esPluginPropertiesFile);, +            if (!checkLucene || checkLuceneCompatibility(pluginClass, settings, logger, esPluginPropertiesFile)) {, +    public static boolean checkLuceneCompatibility(Class<? extends Plugin> pluginClass, Settings settings, ESLogger logger, String propertiesFile) {, +            Enumeration<URL> pluginUrls = settings.getClassLoader().getResources(propertiesFile);, +                logger.debug("lucene property is not set in plugin {} file. Skipping test.", propertiesFile);, +++ b/src/main/java/org/elasticsearch/plugins/PluginsService.java, +    public static final String ES_PLUGIN_PROPERTIES_FILE_KEY = "properties_file";, +    public static final String LOAD_PLUGIN_FROM_CLASSPATH = "load_classpath_plugins";, +    private final String esPluginPropertiesFile;, +    private final boolean loadClasspathPlugins;, +        this.esPluginPropertiesFile = componentSettings.get(ES_PLUGIN_PROPERTIES_FILE_KEY, ES_PLUGIN_PROPERTIES);, +        this.loadClasspathPlugins = componentSettings.getAsBoolean(LOAD_PLUGIN_FROM_CLASSPATH, true);, +        if (loadClasspathPlugins) {, +        }, +            Enumeration<URL> pluginUrls = settings.getClassLoader().getResources(esPluginPropertiesFile);, +                    File pluginPropFile = new File(sitePluginDir, esPluginPropertiesFile);, +                            logger.debug("can not load {} file.", e, esPluginPropertiesFile);, +            if (!checkLucene || checkLuceneCompatibility(pluginClass, settings, logger, esPluginPropertiesFile)) {, +    public static boolean checkLuceneCompatibility(Class<? extends Plugin> pluginClass, Settings settings, ESLogger logger, String propertiesFile) {, +            Enumeration<URL> pluginUrls = settings.getClassLoader().getResources(propertiesFile);, +                logger.debug("lucene property is not set in plugin {} file. Skipping test.", propertiesFile);, +++ b/src/test/java/org/elasticsearch/plugin/PluginLuceneCheckerTests.java, +import org.elasticsearch.plugins.PluginsService;, +                settingsBuilder().put("plugins.check_lucene", false), +                        .put("plugins." + PluginsService.ES_PLUGIN_PROPERTIES_FILE_KEY, "es-plugin-test.properties"), +                        .put("plugins." + PluginsService.LOAD_PLUGIN_FROM_CLASSPATH, true).build(),, +                settingsBuilder().put("plugins.check_lucene", true), +                        .put("plugins." + PluginsService.ES_PLUGIN_PROPERTIES_FILE_KEY, "es-plugin-test.properties"), +                        .put("plugins." + PluginsService.LOAD_PLUGIN_FROM_CLASSPATH, true).build(),, +++ b/src/main/java/org/elasticsearch/plugins/PluginsService.java, +    public static final String ES_PLUGIN_PROPERTIES_FILE_KEY = "properties_file";, +    public static final String LOAD_PLUGIN_FROM_CLASSPATH = "load_classpath_plugins";, +    private final String esPluginPropertiesFile;, +    private final boolean loadClasspathPlugins;, +        this.esPluginPropertiesFile = componentSettings.get(ES_PLUGIN_PROPERTIES_FILE_KEY, ES_PLUGIN_PROPERTIES);, +        this.loadClasspathPlugins = componentSettings.getAsBoolean(LOAD_PLUGIN_FROM_CLASSPATH, true);, +        if (loadClasspathPlugins) {, +        }, +            Enumeration<URL> pluginUrls = settings.getClassLoader().getResources(esPluginPropertiesFile);, +                    File pluginPropFile = new File(sitePluginDir, esPluginPropertiesFile);, +                            logger.debug("can not load {} file.", e, esPluginPropertiesFile);, +            if (!checkLucene || checkLuceneCompatibility(pluginClass, settings, logger, esPluginPropertiesFile)) {, +    public static boolean checkLuceneCompatibility(Class<? extends Plugin> pluginClass, Settings settings, ESLogger logger, String propertiesFile) {, +            Enumeration<URL> pluginUrls = settings.getClassLoader().getResources(propertiesFile);, +                logger.debug("lucene property is not set in plugin {} file. Skipping test.", propertiesFile);, +++ b/src/test/java/org/elasticsearch/plugin/PluginLuceneCheckerTests.java, +import org.elasticsearch.plugins.PluginsService;, +                settingsBuilder().put("plugins.check_lucene", false), +                        .put("plugins." + PluginsService.ES_PLUGIN_PROPERTIES_FILE_KEY, "es-plugin-test.properties"), +                        .put("plugins." + PluginsService.LOAD_PLUGIN_FROM_CLASSPATH, true).build(),, +                settingsBuilder().put("plugins.check_lucene", true), +                        .put("plugins." + PluginsService.ES_PLUGIN_PROPERTIES_FILE_KEY, "es-plugin-test.properties"), +                        .put("plugins." + PluginsService.LOAD_PLUGIN_FROM_CLASSPATH, true).build(),, +++ b/src/test/java/org/elasticsearch/plugin/lucene/current/es-plugin-test.properties, +################################################################, +# Licensed to Elasticsearch under one or more contributor, +# license agreements. See the NOTICE file distributed with, +# this work for additional information regarding copyright, +# ownership. Elasticsearch licenses this file to you under, +# the Apache License, Version 2.0 (the "License"); you may, +# not use this file except in compliance  with the License., +# You may obtain a copy of the License at, +#, +#    http://www.apache.org/licenses/LICENSE-2.0, +#, +# Unless required by applicable law or agreed to in writing,, +# software distributed under the License is distributed on an, +# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, +# KIND, either express or implied.  See the License for the, +# specific language governing permissions and limitations, +# under the License., +################################################################, +plugin=org.elasticsearch.plugin.lucene.current.CurrentLucenePlugin, +version=2.0.0, +lucene=${lucene.version}, +++ b/src/main/java/org/elasticsearch/plugins/PluginsService.java, +    public static final String ES_PLUGIN_PROPERTIES_FILE_KEY = "properties_file";, +    public static final String LOAD_PLUGIN_FROM_CLASSPATH = "load_classpath_plugins";, +    private final String esPluginPropertiesFile;, +    private final boolean loadClasspathPlugins;, +        this.esPluginPropertiesFile = componentSettings.get(ES_PLUGIN_PROPERTIES_FILE_KEY, ES_PLUGIN_PROPERTIES);, +        this.loadClasspathPlugins = componentSettings.getAsBoolean(LOAD_PLUGIN_FROM_CLASSPATH, true);, +        if (loadClasspathPlugins) {, +        }, +            Enumeration<URL> pluginUrls = settings.getClassLoader().getResources(esPluginPropertiesFile);, +                    File pluginPropFile = new File(sitePluginDir, esPluginPropertiesFile);, +                            logger.debug("can not load {} file.", e, esPluginPropertiesFile);, +            if (!checkLucene || checkLuceneCompatibility(pluginClass, settings, logger, esPluginPropertiesFile)) {, +    public static boolean checkLuceneCompatibility(Class<? extends Plugin> pluginClass, Settings settings, ESLogger logger, String propertiesFile) {]