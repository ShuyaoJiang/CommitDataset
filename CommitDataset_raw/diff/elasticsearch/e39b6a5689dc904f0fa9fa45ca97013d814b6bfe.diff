[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +++ b/core/src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java, +    // Before 2.0 alias filters were parsed at alias creation time, in order, +    // for filters to work correctly ES required that fields mentioned in those, +    // filters exist in the mapping., +    // From 2.0 and higher alias filters are parsed at request time and therefor, +    // fields mentioned in filters don't need to exist in the mapping., +                .addAlias("test", "a", QueryBuilders.matchAllQuery()), +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +++ b/core/src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java, +    // Before 2.0 alias filters were parsed at alias creation time, in order, +    // for filters to work correctly ES required that fields mentioned in those, +    // filters exist in the mapping., +    // From 2.0 and higher alias filters are parsed at request time and therefor, +    // fields mentioned in filters don't need to exist in the mapping., +                .addAlias("test", "a", QueryBuilders.matchAllQuery()), +++ b/core/src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateTests.java, +        // Before 2.0 alias filters were parsed at alias creation time, in order, +        // for filters to work correctly ES required that fields mentioned in those, +        // filters exist in the mapping., +        // From 2.0 and higher alias filters are parsed at request time and therefor, +        // fields mentioned in filters don't need to exist in the mapping., +        // So the aliases defined in the index template for this index will not fail, +        // even though the fields in the alias fields don't exist yet and indexing into, +        // an index that doesn't exist yet will succeed, +, +        assertThat(response.hasFailures(), is(false));, +        assertThat(response.getItems()[0].isFailed(), equalTo(false));, +        assertThat(response.getItems()[0].getId(), equalTo("test"));, +        assertThat(response.getItems()[0].getVersion(), equalTo(1l));]