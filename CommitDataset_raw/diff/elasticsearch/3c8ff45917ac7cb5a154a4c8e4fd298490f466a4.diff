[+++ b/core/src/main/java/org/elasticsearch/Version.java, +, +    public boolean isRelease() {, +        return build == 99;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/Version.java, +, +    public boolean isRelease() {, +        return build == 99;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.plugins.MetaDataUpgrader;, +                displayVersion(Version.CURRENT, Build.CURRENT.isSnapshot()),, +            warnIfPreRelease(Version.CURRENT, Build.CURRENT.isSnapshot(), logger);, +    // visible for testing, +    static void warnIfPreRelease(final Version version, final boolean isSnapshot, final Logger logger) {, +        if (!version.isRelease() || isSnapshot) {, +            logger.warn(, +                "version [{}] is a pre-release version of Elasticsearch and is not suitable for production",, +                displayVersion(version, isSnapshot));, +        }, +    }, +, +    private static String displayVersion(final Version version, final boolean isSnapshot) {, +        return version + (isSnapshot ? "-SNAPSHOT" : "");, +    }, +, +++ b/core/src/main/java/org/elasticsearch/Version.java, +, +    public boolean isRelease() {, +        return build == 99;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.plugins.MetaDataUpgrader;, +                displayVersion(Version.CURRENT, Build.CURRENT.isSnapshot()),, +            warnIfPreRelease(Version.CURRENT, Build.CURRENT.isSnapshot(), logger);, +    // visible for testing, +    static void warnIfPreRelease(final Version version, final boolean isSnapshot, final Logger logger) {, +        if (!version.isRelease() || isSnapshot) {, +            logger.warn(, +                "version [{}] is a pre-release version of Elasticsearch and is not suitable for production",, +                displayVersion(version, isSnapshot));, +        }, +    }, +, +    private static String displayVersion(final Version version, final boolean isSnapshot) {, +        return version + (isSnapshot ? "-SNAPSHOT" : "");, +    }, +, +++ b/test/framework/src/main/java/org/elasticsearch/node/NodeTests.java, +import org.apache.logging.log4j.Logger;, +import org.elasticsearch.Version;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.reset;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.verifyNoMoreInteractions;, +, +    public void testWarnIfPreRelease() {, +        final Logger logger = mock(Logger.class);, +, +        final int id = randomIntBetween(1, 9) * 1000000;, +        final Version releaseVersion = Version.fromId(id + 99);, +        final Version preReleaseVersion = Version.fromId(id + randomIntBetween(0, 98));, +, +        Node.warnIfPreRelease(releaseVersion, false, logger);, +        verifyNoMoreInteractions(logger);, +, +        reset(logger);, +        Node.warnIfPreRelease(releaseVersion, true, logger);, +        verify(logger).warn(, +            "version [{}] is a pre-release version of Elasticsearch and is not suitable for production", releaseVersion + "-SNAPSHOT");, +, +        reset(logger);, +        final boolean isSnapshot = randomBoolean();, +        Node.warnIfPreRelease(preReleaseVersion, isSnapshot, logger);, +        verify(logger).warn(, +            "version [{}] is a pre-release version of Elasticsearch and is not suitable for production",, +            preReleaseVersion + (isSnapshot ? "-SNAPSHOT" : ""));, +, +    }, +]