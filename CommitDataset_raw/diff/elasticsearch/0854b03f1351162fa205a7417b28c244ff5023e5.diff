[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.object.DynamicTemplate.XContentFieldType;, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.OBJECT);, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, arrayFieldName, XContentFieldType.OBJECT);, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "string", XContentFieldType.STRING);, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "text", XContentFieldType.STRING);, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "keyword", XContentFieldType.STRING);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "long", XContentFieldType.LONG);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "double", XContentFieldType.DOUBLE);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "integer", XContentFieldType.LONG);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "float", XContentFieldType.DOUBLE);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "boolean", XContentFieldType.BOOLEAN);, +                            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE);, +                    Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.LONG);, +                    Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DOUBLE);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.STRING);, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.LONG);, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DOUBLE);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.BOOLEAN);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.BINARY);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.STRING);, +                            Mapper.Builder builder = context.root().findTemplateBuilder(context, paths[i], XContentFieldType.OBJECT);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.object.DynamicTemplate.XContentFieldType;, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.OBJECT);, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, arrayFieldName, XContentFieldType.OBJECT);, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "string", XContentFieldType.STRING);, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "text", XContentFieldType.STRING);, +            builder = context.root().findTemplateBuilder(context, currentFieldName, "keyword", XContentFieldType.STRING);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "long", XContentFieldType.LONG);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "double", XContentFieldType.DOUBLE);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "integer", XContentFieldType.LONG);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "float", XContentFieldType.DOUBLE);, +                builder = context.root().findTemplateBuilder(context, currentFieldName, "boolean", XContentFieldType.BOOLEAN);, +                            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DATE);, +                    Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.LONG);, +                    Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DOUBLE);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.STRING);, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.LONG);, +                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.DOUBLE);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.BOOLEAN);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.BINARY);, +            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, XContentFieldType.STRING);, +                            Mapper.Builder builder = context.root().findTemplateBuilder(context, paths[i], XContentFieldType.OBJECT);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/object/DynamicTemplate.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.index.mapper.core.BinaryFieldMapper;, +import org.elasticsearch.index.mapper.core.BooleanFieldMapper;, +import org.elasticsearch.index.mapper.core.DateFieldMapper;, +import org.elasticsearch.index.mapper.core.NumberFieldMapper;, +import org.elasticsearch.index.mapper.core.TextFieldMapper;, +import java.util.Arrays;, +    private static final DeprecationLogger DEPRECATION_LOGGER = new DeprecationLogger(Loggers.getLogger(DynamicTemplate.class));, +, +    /** The type of a field as detected while parsing a json document. */, +    public enum XContentFieldType {, +        OBJECT {, +            @Override, +            public String defaultMappingType() {, +                return ObjectMapper.CONTENT_TYPE;, +            }, +            @Override, +            public String toString() {, +                return "object";, +            }, +        },, +        STRING {, +            @Override, +            public String defaultMappingType() {, +                return TextFieldMapper.CONTENT_TYPE;, +            }, +            @Override, +            public String toString() {, +                return "string";, +            }, +        },, +        LONG {, +            @Override, +            public String defaultMappingType() {, +                return NumberFieldMapper.NumberType.LONG.typeName();, +            }, +            @Override, +            public String toString() {, +                return "long";, +            }, +        },, +        DOUBLE {, +            @Override, +            public String defaultMappingType() {, +                return NumberFieldMapper.NumberType.FLOAT.typeName();, +            }, +            @Override, +            public String toString() {, +                return "double";, +            }, +        },, +        BOOLEAN {]