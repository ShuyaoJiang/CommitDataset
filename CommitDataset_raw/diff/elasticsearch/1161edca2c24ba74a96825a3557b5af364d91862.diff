[+++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/resources/rest-api-spec/test/smoke_test_plugins_ssl/20_settings_filter.yaml, +# Integration tests for smoke testing plugins, +#, +"Secret settings are correctly filtered":, +  - do:, +      cluster.state: {}, +, +  - set: {master_node: master}, +, +  - do:, +      nodes.info:, +        metric: [ settings ], +, +  - is_true:  nodes, +  - is_true:  nodes.$master.settings.xpack.monitoring.agent.exporters._http.type, +, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.auth.username, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.auth.password, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.ssl.truststore.path, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.ssl.truststore.password, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/resources/rest-api-spec/test/smoke_test_plugins_ssl/20_settings_filter.yaml, +# Integration tests for smoke testing plugins, +#, +"Secret settings are correctly filtered":, +  - do:, +      cluster.state: {}, +, +  - set: {master_node: master}, +, +  - do:, +      nodes.info:, +        metric: [ settings ], +, +  - is_true:  nodes, +  - is_true:  nodes.$master.settings.xpack.monitoring.agent.exporters._http.type, +, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.auth.username, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.auth.password, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.ssl.truststore.path, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.ssl.truststore.password, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/MarvelSettings.java, +        module.registerSettingsFilter("xpack.monitoring.agent.exporters.*.auth.*");, +        module.registerSettingsFilter("xpack.monitoring.agent.exporters.*.ssl.*");, +++ b/elasticsearch/qa/smoke-test-plugins-ssl/src/test/resources/rest-api-spec/test/smoke_test_plugins_ssl/20_settings_filter.yaml, +# Integration tests for smoke testing plugins, +#, +"Secret settings are correctly filtered":, +  - do:, +      cluster.state: {}, +, +  - set: {master_node: master}, +, +  - do:, +      nodes.info:, +        metric: [ settings ], +, +  - is_true:  nodes, +  - is_true:  nodes.$master.settings.xpack.monitoring.agent.exporters._http.type, +, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.auth.username, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.auth.password, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.ssl.truststore.path, +  - is_false: nodes.$master.settings.xpack.monitoring.agent.exporters._http.ssl.truststore.password, +++ b/elasticsearch/x-pack/marvel/src/main/java/org/elasticsearch/marvel/MarvelSettings.java, +        module.registerSettingsFilter("xpack.monitoring.agent.exporters.*.auth.*");, +        module.registerSettingsFilter("xpack.monitoring.agent.exporters.*.ssl.*");, +++ b/elasticsearch/x-pack/marvel/src/test/java/org/elasticsearch/marvel/shield/MarvelSettingsFilterTests.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.marvel.shield;, +, +import org.apache.http.impl.client.CloseableHttpClient;, +import org.apache.http.impl.client.HttpClients;, +import org.elasticsearch.common.network.NetworkModule;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.json.JsonXContent;, +import org.elasticsearch.http.HttpServerTransport;, +import org.elasticsearch.marvel.MarvelSettings;, +import org.elasticsearch.marvel.test.MarvelIntegTestCase;, +import org.elasticsearch.shield.authc.support.SecuredString;, +import org.elasticsearch.test.rest.client.http.HttpRequestBuilder;, +import org.elasticsearch.test.rest.client.http.HttpResponse;, +import org.hamcrest.Matchers;, +import org.junit.After;, +, +import java.io.IOException;, +import java.util.Map;, +, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.extractValue;, +import static org.elasticsearch.shield.authc.support.UsernamePasswordToken.BASIC_AUTH_HEADER;, +import static org.elasticsearch.shield.authc.support.UsernamePasswordToken.basicAuthHeaderValue;, +import static org.hamcrest.CoreMatchers.nullValue;, +, +public class MarvelSettingsFilterTests extends MarvelIntegTestCase {, +, +    private CloseableHttpClient httpClient = HttpClients.createDefault();, +]