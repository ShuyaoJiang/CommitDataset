[+++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `gradle :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`, +gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `gradle :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`, +gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +        assertEquals(16, namedXContents.size());, +        assertEquals(4, categories.size());, +        assertEquals(Integer.valueOf(2), categories.get(Aggregation.class));, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]WaitActiveShardCountIT.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]broadcast[/\\]node[/\\]TransportBroadcastByNodeActionTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]replication[/\\]BroadcastReplicationTests.java" checks="LineLength" />, +  <suppress files="server[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]action[/\\]support[/\\]single[/\\]instance[/\\]TransportInstanceSingleOperationActionTests.java" checks="LineLength" />, +++ b/client/benchmark/README.md, +1. Build `client-benchmark-noop-api-plugin` with `gradle :client:client-benchmark-noop-api-plugin:assemble`, +2. Install it on the target host with `bin/elasticsearch-plugin install file:///full/path/to/client-benchmark-noop-api-plugin.zip`, +gradlew -p client/benchmark run --args ' rest search localhost geonames {"query":{"match_phrase":{"name":"Sankt Georgen"}}} 500,1000,1100,1200', +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +        assertEquals(16, namedXContents.size());, +        assertEquals(4, categories.size());, +        assertEquals(Integer.valueOf(2), categories.get(Aggregation.class));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/RollupDocumentationIT.java, +import org.elasticsearch.common.xcontent.support.XContentMapValues;, +import org.junit.After;, +import java.io.BufferedReader;, +import java.io.InputStreamReader;, +import java.nio.charset.StandardCharsets;, +    @After, +    public void wipeRollup() throws Exception {, +        // TODO move this to ESRestTestCase, +        deleteRollupJobs();, +        waitForPendingRollupTasks();, +    }, +, +    private void deleteRollupJobs() throws Exception {, +        Response response = adminClient().performRequest(new Request("GET", "/_xpack/rollup/job/_all"));, +        Map<String, Object> jobs = entityAsMap(response);, +        @SuppressWarnings("unchecked"), +        List<Map<String, Object>> jobConfigs =, +                (List<Map<String, Object>>) XContentMapValues.extractValue("jobs", jobs);, +, +        if (jobConfigs == null) {, +            return;, +        }, +, +        for (Map<String, Object> jobConfig : jobConfigs) {, +            @SuppressWarnings("unchecked"), +            String jobId = (String) ((Map<String, Object>) jobConfig.get("config")).get("id");, +            Request request = new Request("DELETE", "/_xpack/rollup/job/" + jobId);, +            request.addParameter("ignore", "404"); // Ignore 404s because they imply someone was racing us to delete this, +            adminClient().performRequest(request);, +        }, +    }, +, +    private void waitForPendingRollupTasks() throws Exception {, +        assertBusy(() -> {, +            try {, +                Request request = new Request("GET", "/_cat/tasks");, +                request.addParameter("detailed", "true");, +                Response response = adminClient().performRequest(request);, +, +                try (BufferedReader responseReader = new BufferedReader(, +                        new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {, +                    int activeTasks = 0;, +                    String line;, +                    StringBuilder tasksListString = new StringBuilder();]