[+++ b/libs/nio/src/test/java/org/elasticsearch/nio/BytesChannelContextTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - (bytes.length * 2), channelBuffer.getCapacity());, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/BytesChannelContextTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - (bytes.length * 2), channelBuffer.getCapacity());, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.PAGE_SIZE_IN_BYTES;, +        new InboundChannelBuffer.Page(ByteBuffer.allocate(PageCacheRecycler.BYTE_PAGE_SIZE), () -> {, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/BytesChannelContextTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - (bytes.length * 2), channelBuffer.getCapacity());, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.PAGE_SIZE_IN_BYTES;, +        new InboundChannelBuffer.Page(ByteBuffer.allocate(PageCacheRecycler.BYTE_PAGE_SIZE), () -> {, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4UtilsTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/BytesChannelContextTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - (bytes.length * 2), channelBuffer.getCapacity());, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.PAGE_SIZE_IN_BYTES;, +        new InboundChannelBuffer.Page(ByteBuffer.allocate(PageCacheRecycler.BYTE_PAGE_SIZE), () -> {, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4UtilsTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/BytesChannelContextTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - (bytes.length * 2), channelBuffer.getCapacity());, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.PAGE_SIZE_IN_BYTES;, +        new InboundChannelBuffer.Page(ByteBuffer.allocate(PageCacheRecycler.BYTE_PAGE_SIZE), () -> {, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4UtilsTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        if (bytes.size() > PageCacheRecycler.PAGE_SIZE_IN_BYTES) {, +            bytes = bigArrays.resize(bytes, PageCacheRecycler.PAGE_SIZE_IN_BYTES);, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/BytesChannelContextTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - (bytes.length * 2), channelBuffer.getCapacity());, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.PAGE_SIZE_IN_BYTES;, +        new InboundChannelBuffer.Page(ByteBuffer.allocate(PageCacheRecycler.BYTE_PAGE_SIZE), () -> {, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4UtilsTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        if (bytes.size() > PageCacheRecycler.PAGE_SIZE_IN_BYTES) {, +            bytes = bigArrays.resize(bytes, PageCacheRecycler.PAGE_SIZE_IN_BYTES);, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/ReleasableBytesStreamOutput.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        this(PageCacheRecycler.PAGE_SIZE_IN_BYTES, bigarrays);, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/BytesChannelContextTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - bytes.length, channelBuffer.getCapacity());, +        assertEquals(PageCacheRecycler.BYTE_PAGE_SIZE - (bytes.length * 2), channelBuffer.getCapacity());, +++ b/libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.PAGE_SIZE_IN_BYTES;, +        new InboundChannelBuffer.Page(ByteBuffer.allocate(PageCacheRecycler.BYTE_PAGE_SIZE), () -> {, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4UtilsTests.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/server/src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +    private static final int PAGE_SIZE = PageCacheRecycler.BYTE_PAGE_SIZE;, +++ b/server/src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +        if (bytes.size() > PageCacheRecycler.PAGE_SIZE_IN_BYTES) {]