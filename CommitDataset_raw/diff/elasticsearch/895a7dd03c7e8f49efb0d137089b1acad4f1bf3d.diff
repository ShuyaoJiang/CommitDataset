[+++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        int c = 0;, +            return (T) oin.readObject();, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        int c = 0;, +            return (T) oin.readObject();, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +    public void writeIntArray(int[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeInt(value[i]);, +    public void writeLongArray(long[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeLong(value[i]);, +    public void writeFloatArray(float[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeFloat(value[i]);, +    public void writeDoubleArray(double[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeDouble(value[i]);, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        int c = 0;, +            return (T) oin.readObject();, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +    public void writeIntArray(int[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeInt(value[i]);, +    public void writeLongArray(long[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeLong(value[i]);, +    public void writeFloatArray(float[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeFloat(value[i]);, +    public void writeDoubleArray(double[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeDouble(value[i]);, +++ b/core/src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java, +                                     IndexFieldDataService indexFieldDataService, ShardPercolateService shardPercolateService) {, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        int c = 0;, +            return (T) oin.readObject();, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +    public void writeIntArray(int[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeInt(value[i]);, +    public void writeLongArray(long[] value) throws IOException {, +        writeVInt(value.length);, +        for (int i=0; i<value.length; i++) {, +            writeLong(value[i]);, +    public void writeFloatArray(float[] value) throws IOException {]