[+++ b/x-pack/plugin/sql/qa/single-node/src/test/java/org/elasticsearch/xpack/sql/qa/single_node/RestSqlIT.java, +import org.apache.http.entity.ContentType;, +import org.apache.http.entity.StringEntity;, +import java.io.IOException;, +, +import static org.hamcrest.Matchers.containsString;, +, +, +, +    public void testErrorMessageForTranslatingQueryWithWhereEvaluatingToFalse() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SELECT * FROM test WHERE foo = 1 AND foo = 2\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),, +            containsString("Cannot generate a query DSL for an SQL query that either its WHERE clause evaluates " +, +                "to FALSE or doesn't operate on a table (missing a FROM clause), sql statement: " +, +                "[SELECT * FROM test WHERE foo = 1 AND foo = 2]"));, +    }, +, +    public void testErrorMessageForTranslatingQueryWithLocalExecution() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SELECT SIN(PI())\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),, +            containsString("Cannot generate a query DSL for an SQL query that either its WHERE clause evaluates " +, +                "to FALSE or doesn't operate on a table (missing a FROM clause), sql statement: [SELECT SIN(PI())]"));, +    }, +, +    public void testErrorMessageForTranslatingSQLCommandStatement() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SHOW FUNCTIONS\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),, +            containsString("Cannot generate a query DSL for a special SQL command " +, +                "(e.g.: DESCRIBE, SHOW), sql statement: [SHOW FUNCTIONS]"));, +    }, +++ b/x-pack/plugin/sql/qa/single-node/src/test/java/org/elasticsearch/xpack/sql/qa/single_node/RestSqlIT.java, +import org.apache.http.entity.ContentType;, +import org.apache.http.entity.StringEntity;, +import java.io.IOException;, +, +import static org.hamcrest.Matchers.containsString;, +, +, +, +    public void testErrorMessageForTranslatingQueryWithWhereEvaluatingToFalse() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SELECT * FROM test WHERE foo = 1 AND foo = 2\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),, +            containsString("Cannot generate a query DSL for an SQL query that either its WHERE clause evaluates " +, +                "to FALSE or doesn't operate on a table (missing a FROM clause), sql statement: " +, +                "[SELECT * FROM test WHERE foo = 1 AND foo = 2]"));, +    }, +, +    public void testErrorMessageForTranslatingQueryWithLocalExecution() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SELECT SIN(PI())\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),, +            containsString("Cannot generate a query DSL for an SQL query that either its WHERE clause evaluates " +, +                "to FALSE or doesn't operate on a table (missing a FROM clause), sql statement: [SELECT SIN(PI())]"));, +    }, +, +    public void testErrorMessageForTranslatingSQLCommandStatement() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SHOW FUNCTIONS\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),, +            containsString("Cannot generate a query DSL for a special SQL command " +, +                "(e.g.: DESCRIBE, SHOW), sql statement: [SHOW FUNCTIONS]"));, +    }, +++ b/x-pack/plugin/sql/qa/src/main/java/org/elasticsearch/xpack/sql/qa/rest/RestSqlTestCase.java, +    protected void expectBadRequest(CheckedSupplier<Map<String, Object>, Exception> code, Matcher<String> errorMessageMatcher) {, +    protected Map<String, Object> runSql(HttpEntity sql, String suffix) throws IOException {, +    protected void index(String... docs) throws IOException {, +++ b/x-pack/plugin/sql/qa/single-node/src/test/java/org/elasticsearch/xpack/sql/qa/single_node/RestSqlIT.java, +import org.apache.http.entity.ContentType;, +import org.apache.http.entity.StringEntity;, +import java.io.IOException;, +, +import static org.hamcrest.Matchers.containsString;, +, +, +, +    public void testErrorMessageForTranslatingQueryWithWhereEvaluatingToFalse() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SELECT * FROM test WHERE foo = 1 AND foo = 2\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),, +            containsString("Cannot generate a query DSL for an SQL query that either its WHERE clause evaluates " +, +                "to FALSE or doesn't operate on a table (missing a FROM clause), sql statement: " +, +                "[SELECT * FROM test WHERE foo = 1 AND foo = 2]"));, +    }, +, +    public void testErrorMessageForTranslatingQueryWithLocalExecution() throws IOException {, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql(, +            new StringEntity("{\"query\":\"SELECT SIN(PI())\"}",, +                ContentType.APPLICATION_JSON), "/translate/"),]