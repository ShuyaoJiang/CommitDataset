[+++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Returns <tt>true</tt> iff the given exception or, +     * one of it's causes is an instance of {@link CorruptIndexException} otherwise <tt>false</tt>., +     */, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Returns <tt>true</tt> iff the given exception or, +     * one of it's causes is an instance of {@link CorruptIndexException} otherwise <tt>false</tt>., +     */, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +            try {, +                // we first mark the store as corrupted before we notify any listeners, +                // this must happen first otherwise we might try to reallocate so quickly, +                // on the same node that we don't see the corrupted marker file when, +                // the shard is initializing, +                if (Lucene.isCorruptionException(failure)) {, +                    try {, +                        store.markStoreCorrupted(ExceptionsHelper.unwrap(failure, CorruptIndexException.class));, +                    } catch (IOException e) {, +                        logger.warn("Couldn't marks store corrupted", e);, +                    }, +                }, +            } finally {]