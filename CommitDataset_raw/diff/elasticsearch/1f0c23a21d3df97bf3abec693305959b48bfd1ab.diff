[+++ b/.editorconfig, +# EditorConfig: http://editorconfig.org/, +, +root = true, +, +[*.java], +charset = utf-8, +indent_style = space, +indent_size = 4, +trim_trailing_whitespace = true, +insert_final_newline = true, +++ b/.editorconfig, +# EditorConfig: http://editorconfig.org/, +, +root = true, +, +[*.java], +charset = utf-8, +indent_style = space, +indent_size = 4, +trim_trailing_whitespace = true, +insert_final_newline = true, +++ b/TESTING.asciidoc, +By default the tests run on up to 4 JVMs based on the number of cores. If you, +want to explicitly specify the number of JVMs you can do so on the command, +line:, +Or in `~/.gradle/gradle.properties`:, +, +----------------------------, +systemProp.tests.jvms=8, +----------------------------, +, +Its difficult to pick the "right" number here. Hypercores don't count for CPU, +intensive tests and you should leave some slack for JVM-interal threads like, +the garbage collector. And you have to have enough RAM to handle each JVM., +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +build. To add your plugin, create a directory called x-plugins as a sibling, +of elasticsearch. Checkout your plugin underneath x-plugins and the build, +will automatically pick it up. You can verify the plugin is included as part, +of the build by checking the projects of the build., +++ b/.editorconfig, +# EditorConfig: http://editorconfig.org/, +, +root = true, +, +[*.java], +charset = utf-8, +indent_style = space, +indent_size = 4, +trim_trailing_whitespace = true, +insert_final_newline = true, +++ b/TESTING.asciidoc, +By default the tests run on up to 4 JVMs based on the number of cores. If you, +want to explicitly specify the number of JVMs you can do so on the command, +line:, +Or in `~/.gradle/gradle.properties`:, +, +----------------------------, +systemProp.tests.jvms=8, +----------------------------, +, +Its difficult to pick the "right" number here. Hypercores don't count for CPU, +intensive tests and you should leave some slack for JVM-interal threads like, +the garbage collector. And you have to have enough RAM to handle each JVM., +The REST tests are run automatically when executing the "gradle check" command. To run only the, +gradle :distribution:tar:integTest   \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT, +---------------------------------------------------------------------------, +, +A specific test case can be run with, +, +---------------------------------------------------------------------------, +gradle :distribution:tar:integTest \, +  -Dtests.class=org.elasticsearch.test.rest.RestIT \, +  -Dtests.method="test {p0=cat.shards/10_basic/Help}", +build. To add your plugin, create a directory called x-plugins as a sibling, +of elasticsearch. Checkout your plugin underneath x-plugins and the build, +will automatically pick it up. You can verify the plugin is included as part, +of the build by checking the projects of the build., +++ b/build.gradle, +      javadoc.options.encoding='UTF8', +  /* Sets up the dependencies that we build as part of this project but, +    register as thought they were external to resolve internally. We register, +    them as external dependencies so the build plugin that we use can be used, +    to build elasticsearch plugins outside of the elasticsearch source tree. */, +    "org.elasticsearch.distribution.integ-test-zip:elasticsearch:${version}": ':distribution:integ-test-zip',, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar',, +    "org.elasticsearch.distribution.rpm:elasticsearch:${version}": ':distribution:rpm',, +    "org.elasticsearch.distribution.deb:elasticsearch:${version}": ':distribution:deb',, +// add buildSrc itself as a groovy project]