[+++ b/bin/plugin, +++ b/bin/plugin, +++ b/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                        logger.debug("recovery completed from [{}], took [{}]", shardGateway, timeValueMillis(recoveryStatus.time()));, +                    } else if (logger.isTraceEnabled()) {, +                        logger.trace(sb.toString());, +++ b/bin/plugin, +++ b/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                        logger.debug("recovery completed from [{}], took [{}]", shardGateway, timeValueMillis(recoveryStatus.time()));, +                    } else if (logger.isTraceEnabled()) {, +                        logger.trace(sb.toString());, +++ b/src/main/java/org/elasticsearch/index/gateway/none/NoneIndexShardGateway.java, +        recoveryStatus.index().startTime(System.currentTimeMillis());, +++ b/bin/plugin, +++ b/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                        logger.debug("recovery completed from [{}], took [{}]", shardGateway, timeValueMillis(recoveryStatus.time()));, +                    } else if (logger.isTraceEnabled()) {, +                        logger.trace(sb.toString());, +++ b/src/main/java/org/elasticsearch/index/gateway/none/NoneIndexShardGateway.java, +        recoveryStatus.index().startTime(System.currentTimeMillis());, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.Map;, +import java.util.Set;, +                logger.debug("recovery completed from [{}], took [{}]", request.shardId(), request.sourceNode(), stopWatch.totalTime());, +            } else if (logger.isTraceEnabled()) {, +                logger.trace(sb.toString());]