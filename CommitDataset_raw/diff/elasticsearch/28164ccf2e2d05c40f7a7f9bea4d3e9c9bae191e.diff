[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessLexer\.java" checks="." />, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessParser(|BaseVisitor|Visitor)\.java" checks="." />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessLexer\.java" checks="." />, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessParser(|BaseVisitor|Visitor)\.java" checks="." />, +++ b/modules/lang-painless/ant.xml, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessLexer\.java" checks="." />, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessParser(|BaseVisitor|Visitor)\.java" checks="." />, +++ b/modules/lang-painless/ant.xml, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +XOR:     '^';, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessLexer\.java" checks="." />, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessParser(|BaseVisitor|Visitor)\.java" checks="." />, +++ b/modules/lang-painless/ant.xml, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +XOR:     '^';, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    | <assoc=right> chain ( INCR | DECR )                               # postinc, +    | <assoc=right> ( INCR | DECR ) chain                               # preinc, +    |               chain                                               # read, +    |               expression XOR expression                           # binary, +    | <assoc=right> chain ( ASSIGN | AADD | ASUB | AMUL | ADIV, +chain, +    : linkprec, +    | linkcast, +    | linkvar, +    | linknew, +    | linkstring, +linkprec:   LP ( linkprec | linkcast | linkvar | linknew | linkstring ) RP ( linkdot | linkbrace )?;, +linkcast:   LP decltype RP ( linkprec | linkcast | linkvar | linknew | linkstring );, +linkbrace:  LBRACE expression RBRACE ( linkdot | linkbrace )?;, +linkdot:    DOT ( linkcall | linkfield );, +linkcall:   EXTID arguments ( linkdot | linkbrace )?;, +linkvar:    identifier ( linkdot | linkbrace )?;, +linkfield:  ( EXTID | EXTINTEGER ) ( linkdot | linkbrace )?;, +linknew:    NEW identifier ( ( arguments linkdot? ) | ( ( LBRACE expression RBRACE )+ linkdot? ) );, +linkstring: STRING (linkdot | linkbrace )?;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessLexer\.java" checks="." />, +  <suppress files="org[/\\]elasticsearch[/\\]painless[/\\]antlr[/\\]PainlessParser(|BaseVisitor|Visitor)\.java" checks="." />, +++ b/modules/lang-painless/ant.xml, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +        <arg value="org.elasticsearch.painless.antlr"/>, +      <property name="output.path" location="src/main/java/org/elasticsearch/painless/antlr"/>, +++ b/modules/lang-painless/src/main/antlr/PainlessLexer.g4, +XOR:     '^';, +++ b/modules/lang-painless/src/main/antlr/PainlessParser.g4, +    | <assoc=right> chain ( INCR | DECR )                               # postinc, +    | <assoc=right> ( INCR | DECR ) chain                               # preinc, +    |               chain                                               # read, +    |               expression XOR expression                           # binary, +    | <assoc=right> chain ( ASSIGN | AADD | ASUB | AMUL | ADIV, +chain, +    : linkprec, +    | linkcast, +    | linkvar, +    | linknew, +    | linkstring, +linkprec:   LP ( linkprec | linkcast | linkvar | linknew | linkstring ) RP ( linkdot | linkbrace )?;, +linkcast:   LP decltype RP ( linkprec | linkcast | linkvar | linknew | linkstring );, +linkbrace:  LBRACE expression RBRACE ( linkdot | linkbrace )?;, +linkdot:    DOT ( linkcall | linkfield );, +linkcall:   EXTID arguments ( linkdot | linkbrace )?;, +linkvar:    identifier ( linkdot | linkbrace )?;, +linkfield:  ( EXTID | EXTINTEGER ) ( linkdot | linkbrace )?;, +linknew:    NEW identifier ( ( arguments linkdot? ) | ( ( LBRACE expression RBRACE )+ linkdot? ) );, +linkstring: STRING (linkdot | linkbrace )?;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +import org.elasticsearch.painless.Variables.Reserved;, +import org.elasticsearch.painless.node.SSource;, +/**, + * Runs the analysis phase of compilation using the Painless AST., + */, +final class Analyzer {, +    static Variables analyze(final CompilerSettings settings, final Definition definition,, +                                    final Reserved shortcut, final SSource root) {]