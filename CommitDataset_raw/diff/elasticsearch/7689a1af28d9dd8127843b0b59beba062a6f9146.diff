[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +        // TODO: currently working as a Map<String,Def>, we can do better?, +        // ctx map set by executable scripts as a read-only map., +        metadata.ctxValueSlot = utility.addVariable(null, "ctx", definition.smapType).slot;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +        // TODO: currently working as a Map<String,Def>, we can do better?, +        // ctx map set by executable scripts as a read-only map., +        metadata.ctxValueSlot = utility.addVariable(null, "ctx", definition.smapType).slot;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerExternal.java, +            if ("_score".equals(id) || "doc".equals(id) || "ctx".equals(id)) {, +                // read-only: don't allow stores to ourself, +                if (varenmd.last && parentemd.storeExpr != null) {, +                    // track if the _score value is ever used, we will invoke Scorer.score() only once if so., +                } else if ("ctx".equals(id)) {, +                    // track if ctx value is ever used, we will invoke Map.get() only once if so., +                    metadata.ctxValueUsed = true;, +                }, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +        // TODO: currently working as a Map<String,Def>, we can do better?, +        // ctx map set by executable scripts as a read-only map., +        metadata.ctxValueSlot = utility.addVariable(null, "ctx", definition.smapType).slot;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerExternal.java, +            if ("_score".equals(id) || "doc".equals(id) || "ctx".equals(id)) {, +                // read-only: don't allow stores to ourself, +                if (varenmd.last && parentemd.storeExpr != null) {, +                    // track if the _score value is ever used, we will invoke Scorer.score() only once if so., +                } else if ("ctx".equals(id)) {, +                    // track if ctx value is ever used, we will invoke Map.get() only once if so., +                    metadata.ctxValueUsed = true;, +                }, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Metadata.java, +     * Used to determine if the _score variable is actually used.  This is used to know if we should call, +     * Scorer.score() once and cache into a local variable, and expose NeedsScore interface (to allow query caching), +     * Used to determine what slot the ctx variable is stored in.  This is used in the {@link Writer} whenever, +     * the ctx variable is accessed., +     */, +    int ctxValueSlot = -1;, +    , +    /**, +     * Used to determine if the ctx variable is actually used.  This is used to determine if we should call, +     * Map.get once and store into a local variable on startup., +     */, +    boolean ctxValueUsed = false;, +, +    /**, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +        // TODO: currently working as a Map<String,Def>, we can do better?, +        // ctx map set by executable scripts as a read-only map., +        metadata.ctxValueSlot = utility.addVariable(null, "ctx", definition.smapType).slot;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerExternal.java, +            if ("_score".equals(id) || "doc".equals(id) || "ctx".equals(id)) {, +                // read-only: don't allow stores to ourself, +                if (varenmd.last && parentemd.storeExpr != null) {, +                    // track if the _score value is ever used, we will invoke Scorer.score() only once if so., +                } else if ("ctx".equals(id)) {, +                    // track if ctx value is ever used, we will invoke Map.get() only once if so., +                    metadata.ctxValueUsed = true;, +                }, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Metadata.java, +     * Used to determine if the _score variable is actually used.  This is used to know if we should call, +     * Scorer.score() once and cache into a local variable, and expose NeedsScore interface (to allow query caching), +     * Used to determine what slot the ctx variable is stored in.  This is used in the {@link Writer} whenever, +     * the ctx variable is accessed., +     */, +    int ctxValueSlot = -1;, +    , +    /**, +     * Used to determine if the ctx variable is actually used.  This is used to determine if we should call, +     * Map.get once and store into a local variable on startup., +     */, +    boolean ctxValueUsed = false;, +, +    /**, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Writer.java, +        , +        if (metadata.ctxValueUsed) {, +            // if the _ctx value is used, we do this once:, +            //   Map<String,Object> ctx = input.get("ctx");, +            execute.visitVarInsn(Opcodes.ALOAD, metadata.inputValueSlot);, +            execute.push("ctx");, +            execute.invokeInterface(WriterConstants.MAP_TYPE, WriterConstants.MAP_GET);, +            execute.visitVarInsn(Opcodes.ASTORE, metadata.ctxValueSlot);, +        }, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Analyzer.java, +        // TODO: currently working as a Map<String,Def>, we can do better?, +        // ctx map set by executable scripts as a read-only map., +        metadata.ctxValueSlot = utility.addVariable(null, "ctx", definition.smapType).slot;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerExternal.java, +            if ("_score".equals(id) || "doc".equals(id) || "ctx".equals(id)) {, +                // read-only: don't allow stores to ourself, +                if (varenmd.last && parentemd.storeExpr != null) {, +                    // track if the _score value is ever used, we will invoke Scorer.score() only once if so., +                } else if ("ctx".equals(id)) {, +                    // track if ctx value is ever used, we will invoke Map.get() only once if so., +                    metadata.ctxValueUsed = true;, +                }, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Metadata.java, +     * Used to determine if the _score variable is actually used.  This is used to know if we should call, +     * Scorer.score() once and cache into a local variable, and expose NeedsScore interface (to allow query caching), +     * Used to determine what slot the ctx variable is stored in.  This is used in the {@link Writer} whenever]