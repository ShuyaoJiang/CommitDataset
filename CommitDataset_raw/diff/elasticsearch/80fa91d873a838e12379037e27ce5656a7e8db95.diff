[+++ b/src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java, +        this(t, null);, +    }, +, +    public ShardSearchFailure(Throwable t, @Nullable SearchShardTarget shardTarget) {, +        } else if (shardTarget != null) {, +            this.shardTarget = shardTarget;, +++ b/src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java, +        this(t, null);, +    }, +, +    public ShardSearchFailure(Throwable t, @Nullable SearchShardTarget shardTarget) {, +        } else if (shardTarget != null) {, +            this.shardTarget = shardTarget;, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, dfsResult.shardTarget(), t);, +++ b/src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java, +        this(t, null);, +    }, +, +    public ShardSearchFailure(Throwable t, @Nullable SearchShardTarget shardTarget) {, +        } else if (shardTarget != null) {, +            this.shardTarget = shardTarget;, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, dfsResult.shardTarget(), t);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, dfsResult.shardTarget(), t);, +                    AsyncAction.this.addShardFailure(shardIndex, shardTarget, t);, +++ b/src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java, +        this(t, null);, +    }, +, +    public ShardSearchFailure(Throwable t, @Nullable SearchShardTarget shardTarget) {, +        } else if (shardTarget != null) {, +            this.shardTarget = shardTarget;, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, dfsResult.shardTarget(), t);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, dfsResult.shardTarget(), t);, +                    AsyncAction.this.addShardFailure(shardIndex, shardTarget, t);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, shardTarget, t);, +++ b/src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java, +        this(t, null);, +    }, +, +    public ShardSearchFailure(Throwable t, @Nullable SearchShardTarget shardTarget) {, +        } else if (shardTarget != null) {, +            this.shardTarget = shardTarget;, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, dfsResult.shardTarget(), t);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, dfsResult.shardTarget(), t);, +                    AsyncAction.this.addShardFailure(shardIndex, shardTarget, t);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java, +                    AsyncAction.this.addShardFailure(shardIndex, shardTarget, t);, +++ b/src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java, +                    onFirstPhaseResult(shardIndex, null, null, shardIt, new NoShardAvailableActionException(shardIt.shardId()));, +                onFirstPhaseResult(shardIndex, null, null, shardIt, new NoShardAvailableActionException(shardIt.shardId()));, +                final DiscoveryNode node = nodes.get(shard.currentNodeId());, +                    onFirstPhaseResult(shardIndex, shard, null, shardIt, new NoShardAvailableActionException(shardIt.shardId()));, +                            onFirstPhaseResult(shardIndex, shard, node.id(), shardIt, t);, +        void onFirstPhaseResult(final int shardIndex, @Nullable ShardRouting shard, @Nullable String nodeId, final ShardIterator shardIt, Throwable t) {, +            SearchShardTarget shardTarget = new SearchShardTarget(nodeId, shardIt.shardId().getIndex(), shardIt.shardId().getId());, +            addShardFailure(shardIndex, shardTarget, t);, +        protected final void addShardFailure(final int shardIndex, @Nullable SearchShardTarget shardTarget, Throwable t) {, +                shardFailures.set(shardIndex, new ShardSearchFailure(t, shardTarget));, +                    shardFailures.set(shardIndex, new ShardSearchFailure(t, shardTarget));]