[+++ b/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.update.UpdateRequest;, +        } else if (type == 2) {, +            request = new UpdateRequest();, +        } else if (request instanceof UpdateRequest) {, +            out.writeByte((byte) 2);, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.update.UpdateRequest;, +        } else if (type == 2) {, +            request = new UpdateRequest();, +        } else if (request instanceof UpdateRequest) {, +            out.writeByte((byte) 2);, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +import org.elasticsearch.action.update.UpdateResponse;, +        } else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getIndex();, +        else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getType();, +        }, +        } else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getId();, +        } else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getVersion();, +        } else if (type == 3) { // make 3 instead of 2, because 2 is already in use for 'no responses', +            response = new UpdateResponse();, +            response.readFrom(in);, +            } else if (response instanceof UpdateResponse) {, +                out.writeByte((byte) 3); // make 3 instead of 2, because 2 is already in use for 'no responses', +++ b/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.update.UpdateRequest;, +        } else if (type == 2) {, +            request = new UpdateRequest();, +        } else if (request instanceof UpdateRequest) {, +            out.writeByte((byte) 2);, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +import org.elasticsearch.action.update.UpdateResponse;, +        } else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getIndex();, +        else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getType();, +        }, +        } else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getId();, +        } else if (response instanceof UpdateResponse) {, +            return ((UpdateResponse) response).getVersion();, +        } else if (type == 3) { // make 3 instead of 2, because 2 is already in use for 'no responses', +            response = new UpdateResponse();, +            response.readFrom(in);, +            } else if (response instanceof UpdateResponse) {, +                out.writeByte((byte) 3); // make 3 instead of 2, because 2 is already in use for 'no responses', +++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.action.update.UpdateRequest;, +        } else if (request instanceof UpdateRequest) {, +            add((UpdateRequest) request, payload);, +     * Adds an {@link UpdateRequest} to the list of actions to execute., +     */, +    public BulkRequest add(UpdateRequest request) {, +        request.beforeLocalFork();, +        return internalAdd(request, null);, +    }, +, +    public BulkRequest add(UpdateRequest request, @Nullable Object payload) {, +        request.beforeLocalFork();, +        return internalAdd(request, payload);, +    }, +, +    BulkRequest internalAdd(UpdateRequest request, @Nullable Object payload) {, +        requests.add(request);, +        addPayload(payload);, +        if (request.doc() != null) {, +            sizeInBytes += request.doc().source().length();, +        }, +        if (request.upsertRequest() != null) {, +            sizeInBytes += request.upsertRequest().source().length();, +        }, +        if (request.script() != null) {, +            sizeInBytes += request.script().length() * 2;, +        }, +        return this;, +    }, +    /**, +                int retryOnConflict = 0;, +                        } else if ("_retry_on_conflict".equals(currentFieldName) || "_retryOnConflict".equals(currentFieldName)) {, +                            retryOnConflict = parser.intValue();, +                    } else if ("update".equals(action)) {, +                        internalAdd(new UpdateRequest(index, type, id).routing(routing).parent(parent).retryOnConflict(retryOnConflict), +                                .source(data.slice(from, nextMarker - from)), +                                .percolate(percolate), payload);, +            } else if (type == 2) {, +                UpdateRequest request = new UpdateRequest();, +                request.readFrom(in);, +                requests.add(request);, +            } else if (request instanceof UpdateRequest) {, +                out.writeByte((byte) 2);, +++ b/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +import org.elasticsearch.action.update.UpdateRequest;, +        } else if (type == 2) {, +            request = new UpdateRequest();, +        } else if (request instanceof UpdateRequest) {, +            out.writeByte((byte) 2);]