[+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java, +        processors.put(RenameProcessor.TYPE, new RenameProcessor.Factory(parameters.scriptService));, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java, +        processors.put(RenameProcessor.TYPE, new RenameProcessor.Factory(parameters.scriptService));, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RenameProcessor.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.TemplateScript;, +    private final TemplateScript.Factory field;, +    private final TemplateScript.Factory targetField;, +    RenameProcessor(String tag, TemplateScript.Factory field, TemplateScript.Factory targetField, boolean ignoreMissing) {, +    TemplateScript.Factory getField() {, +    TemplateScript.Factory getTargetField() {, +        String path = document.renderTemplate(field);, +        if (document.hasField(path, true) == false) {, +                throw new IllegalArgumentException("field [" + path + "] doesn't exist");, +        String target = document.renderTemplate(targetField);, +        if (document.hasField(target, true)) {, +            throw new IllegalArgumentException("field [" + target + "] already exists");, +        Object value = document.getFieldValue(path, Object.class);, +        document.removeField(path);, +            document.setFieldValue(target, value);, +            document.setFieldValue(path, value);, +, +        private final ScriptService scriptService;, +, +        public Factory(ScriptService scriptService) {, +            this.scriptService = scriptService;, +        }, +, +            TemplateScript.Factory fieldTemplate = ConfigurationUtils.compileTemplate(TYPE, processorTag,, +                "field", field, scriptService);, +            TemplateScript.Factory targetFieldTemplate = ConfigurationUtils.compileTemplate(TYPE, processorTag,, +                "target_field", targetField, scriptService);, +            return new RenameProcessor(processorTag, fieldTemplate, targetFieldTemplate , ignoreMissing);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java, +        processors.put(RenameProcessor.TYPE, new RenameProcessor.Factory(parameters.scriptService));, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RenameProcessor.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.TemplateScript;, +    private final TemplateScript.Factory field;, +    private final TemplateScript.Factory targetField;, +    RenameProcessor(String tag, TemplateScript.Factory field, TemplateScript.Factory targetField, boolean ignoreMissing) {, +    TemplateScript.Factory getField() {, +    TemplateScript.Factory getTargetField() {, +        String path = document.renderTemplate(field);, +        if (document.hasField(path, true) == false) {, +                throw new IllegalArgumentException("field [" + path + "] doesn't exist");, +        String target = document.renderTemplate(targetField);, +        if (document.hasField(target, true)) {, +            throw new IllegalArgumentException("field [" + target + "] already exists");, +        Object value = document.getFieldValue(path, Object.class);, +        document.removeField(path);, +            document.setFieldValue(target, value);, +            document.setFieldValue(path, value);, +, +        private final ScriptService scriptService;, +, +        public Factory(ScriptService scriptService) {, +            this.scriptService = scriptService;, +        }, +, +            TemplateScript.Factory fieldTemplate = ConfigurationUtils.compileTemplate(TYPE, processorTag,, +                "field", field, scriptService);, +            TemplateScript.Factory targetFieldTemplate = ConfigurationUtils.compileTemplate(TYPE, processorTag,, +                "target_field", targetField, scriptService);, +            return new RenameProcessor(processorTag, fieldTemplate, targetFieldTemplate , ignoreMissing);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DotExpanderProcessorTests.java, +import org.elasticsearch.ingest.TestTemplateService;, +        Processor processor = new RenameProcessor("_tag", new TestTemplateService.MockTemplateScript.Factory("foo"),, +            new TestTemplateService.MockTemplateScript.Factory("foo.bar"), false);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java, +        processors.put(RenameProcessor.TYPE, new RenameProcessor.Factory(parameters.scriptService));, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RenameProcessor.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.TemplateScript;, +    private final TemplateScript.Factory field;, +    private final TemplateScript.Factory targetField;, +    RenameProcessor(String tag, TemplateScript.Factory field, TemplateScript.Factory targetField, boolean ignoreMissing) {, +    TemplateScript.Factory getField() {, +    TemplateScript.Factory getTargetField() {, +        String path = document.renderTemplate(field);, +        if (document.hasField(path, true) == false) {, +                throw new IllegalArgumentException("field [" + path + "] doesn't exist");, +        String target = document.renderTemplate(targetField);, +        if (document.hasField(target, true)) {, +            throw new IllegalArgumentException("field [" + target + "] already exists");, +        Object value = document.getFieldValue(path, Object.class);, +        document.removeField(path);, +            document.setFieldValue(target, value);, +            document.setFieldValue(path, value);, +, +        private final ScriptService scriptService;, +, +        public Factory(ScriptService scriptService) {, +            this.scriptService = scriptService;, +        }, +, +            TemplateScript.Factory fieldTemplate = ConfigurationUtils.compileTemplate(TYPE, processorTag,, +                "field", field, scriptService);, +            TemplateScript.Factory targetFieldTemplate = ConfigurationUtils.compileTemplate(TYPE, processorTag,]