[+++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.shard.IndexingStats;, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.shard.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.shard.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        return add(data, defaultIndex, defaultType, null);, +    public synchronized BulkProcessor add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable Object payload) throws Exception {, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.shard.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        return add(data, defaultIndex, defaultType, null);, +    public synchronized BulkProcessor add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable Object payload) throws Exception {, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +        return add(data, defaultIndex, defaultType, null, null, null, true);, +        return add(data, defaultIndex, defaultType, null, null, null, allowExplicitIndex);, +    public BulkRequest add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable String defaultRouting, @Nullable String[] defaultFields, @Nullable Object payload, boolean allowExplicitIndex) throws Exception {, +                                    .source(data.slice(from, nextMarker - from)), payload);, +                                    .create("create".equals(opType)), +                                .create(true), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +@defaultMessage Use org.elasticsearch.common.Randomness#get for reproducible sources of randomness, +java.util.Random#<init>(), +java.util.concurrent.ThreadLocalRandom, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +, +, +    public ActionModule(boolean proxy) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.shard.IndexingStats;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.common.Randomness;, +        Map<String, Set<String>> routingMap = indexNameExpressionResolver.resolveSearchRouting(clusterState, Integer.toString(Randomness.get().nextInt(1000)), request.indices());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java, +        return add(data, defaultIndex, defaultType, null);, +    public synchronized BulkProcessor add(BytesReference data, @Nullable String defaultIndex, @Nullable String defaultType, @Nullable Object payload) throws Exception {, +        bulkRequest.add(data, defaultIndex, defaultType, null, null, payload, true);]