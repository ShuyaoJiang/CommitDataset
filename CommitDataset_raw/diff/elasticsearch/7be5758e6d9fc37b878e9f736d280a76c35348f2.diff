[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class SearchScrollRequest extends ActionRequest implements ToXContentObject {, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject();, +        builder.field("scroll_id", scrollId);, +        if (scroll != null) {, +            builder.field("scroll", scroll.keepAlive().getStringRep());, +        }, +        builder.endObject();, +        return builder;, +    }, +, +    /**, +     * Parse a search scroll request from a request body provided through the REST layer., +     * Values that are already be set and are also found while parsing will be overridden., +     */, +    public void fromXContent(XContentParser parser) throws IOException {, +        if (parser.nextToken() != XContentParser.Token.START_OBJECT) {, +            throw new IllegalArgumentException("Malformed content, must start with an object");, +        } else {, +            XContentParser.Token token;, +            String currentFieldName = null;, +            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {, +                if (token == XContentParser.Token.FIELD_NAME) {, +                    currentFieldName = parser.currentName();, +                } else if ("scroll_id".equals(currentFieldName) && token == XContentParser.Token.VALUE_STRING) {, +                    scrollId(parser.text());, +                } else if ("scroll".equals(currentFieldName) && token == XContentParser.Token.VALUE_STRING) {, +                    scroll(new Scroll(TimeValue.parseTimeValue(parser.text(), null, "scroll")));, +                } else {, +                    throw new IllegalArgumentException("Unknown parameter [" + currentFieldName, +                            + "] in request body or parameter is of the wrong type[" + token + "] ");, +                }, +            }, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class SearchScrollRequest extends ActionRequest implements ToXContentObject {, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject();, +        builder.field("scroll_id", scrollId);, +        if (scroll != null) {, +            builder.field("scroll", scroll.keepAlive().getStringRep());, +        }, +        builder.endObject();, +        return builder;, +    }, +, +    /**, +     * Parse a search scroll request from a request body provided through the REST layer., +     * Values that are already be set and are also found while parsing will be overridden., +     */, +    public void fromXContent(XContentParser parser) throws IOException {, +        if (parser.nextToken() != XContentParser.Token.START_OBJECT) {, +            throw new IllegalArgumentException("Malformed content, must start with an object");, +        } else {, +            XContentParser.Token token;, +            String currentFieldName = null;, +            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {, +                if (token == XContentParser.Token.FIELD_NAME) {, +                    currentFieldName = parser.currentName();, +                } else if ("scroll_id".equals(currentFieldName) && token == XContentParser.Token.VALUE_STRING) {, +                    scrollId(parser.text());, +                } else if ("scroll".equals(currentFieldName) && token == XContentParser.Token.VALUE_STRING) {, +                    scroll(new Scroll(TimeValue.parseTimeValue(parser.text(), null, "scroll")));, +                } else {, +                    throw new IllegalArgumentException("Unknown parameter [" + currentFieldName, +                            + "] in request body or parameter is of the wrong type[" + token + "] ");, +                }, +            }, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java, +                // NOTE: if rest request with xcontent body has request parameters, values parsed from request body have the precedence, +                    searchScrollRequest.fromXContent(xContentParser);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class SearchScrollRequest extends ActionRequest implements ToXContentObject {, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject();, +        builder.field("scroll_id", scrollId);, +        if (scroll != null) {, +            builder.field("scroll", scroll.keepAlive().getStringRep());, +        }, +        builder.endObject();, +        return builder;, +    }, +, +    /**]