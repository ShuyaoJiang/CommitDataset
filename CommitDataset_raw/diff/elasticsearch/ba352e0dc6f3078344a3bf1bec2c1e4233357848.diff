[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +        MetaData metaData = clusterState.metaData();, +, +                String aliasOrIndex = indexRequest.index();, +                indexRequest.index(clusterState.metaData().concreteIndex(indexRequest.index()));, +, +                MappingMetaData mappingMd = null;, +                if (metaData.hasIndex(indexRequest.index())) {, +                    mappingMd = metaData.index(indexRequest.index()).mapping(indexRequest.type());, +                }, +                indexRequest.process(metaData, aliasOrIndex, mappingMd);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +        MetaData metaData = clusterState.metaData();, +, +                String aliasOrIndex = indexRequest.index();, +                indexRequest.index(clusterState.metaData().concreteIndex(indexRequest.index()));, +, +                MappingMetaData mappingMd = null;, +                if (metaData.hasIndex(indexRequest.index())) {, +                    mappingMd = metaData.index(indexRequest.index()).mapping(indexRequest.type());, +                }, +                indexRequest.process(metaData, aliasOrIndex, mappingMd);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                            .routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp());, +                            .routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +        MetaData metaData = clusterState.metaData();, +, +                String aliasOrIndex = indexRequest.index();, +                indexRequest.index(clusterState.metaData().concreteIndex(indexRequest.index()));, +, +                MappingMetaData mappingMd = null;, +                if (metaData.hasIndex(indexRequest.index())) {, +                    mappingMd = metaData.index(indexRequest.index()).mapping(indexRequest.type());, +                }, +                indexRequest.process(metaData, aliasOrIndex, mappingMd);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                            .routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp());, +                            .routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetField.java, +    public Object value() {, +        if (values != null && !values.isEmpty()) {, +            return values.get(0);, +        }, +        return null;, +    }, +, +    public Object getValue() {, +        return value();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +import org.elasticsearch.cluster.metadata.MetaData;, +        MetaData metaData = clusterState.metaData();, +, +                String aliasOrIndex = indexRequest.index();, +                indexRequest.index(clusterState.metaData().concreteIndex(indexRequest.index()));, +, +                MappingMetaData mappingMd = null;, +                if (metaData.hasIndex(indexRequest.index())) {, +                    mappingMd = metaData.index(indexRequest.index()).mapping(indexRequest.type());, +                }, +                indexRequest.process(metaData, aliasOrIndex, mappingMd);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                            .routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp());, +                            .routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetField.java, +    public Object value() {, +        if (values != null && !values.isEmpty()) {, +            return values.get(0);, +        }, +        return null;, +    }, +, +    public Object getValue() {, +        return value();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.index.mapper.internal.TimestampFieldMapper;, +    /**, +     * Sets the timestamp either as millis since the epoch, or, in the configured date format., +     */, +    public void process(MetaData metaData, String aliasOrIndex, @Nullable MappingMetaData mappingMd) throws ElasticSearchException {, +        // resolve the routing if needed, +        routing(metaData.resolveIndexRouting(routing, aliasOrIndex));, +        // resolve timestamp if provided externally, +        if (timestamp != null) {, +            timestamp = MappingMetaData.Timestamp.parseStringTimestamp(timestamp,, +                    mappingMd != null ? mappingMd.timestamp().dateTimeFormatter() : TimestampFieldMapper.Defaults.DATE_TIME_FORMATTER);, +        }, +        // extract values if needed, +        if (mappingMd != null) {, +                    parser = XContentFactory.xContent(source, sourceOffset, sourceLength).createParser(source, sourceOffset, sourceLength);, +                        timestamp = MappingMetaData.Timestamp.parseStringTimestamp(timestamp, mappingMd.timestamp().dateTimeFormatter());, +        }]