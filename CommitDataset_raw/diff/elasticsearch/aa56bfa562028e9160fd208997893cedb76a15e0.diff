[+++ b/core/src/main/java/org/elasticsearch/bootstrap/JNACLibrary.java, +    static native int setrlimit(int resource, Rlimit rlimit);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNACLibrary.java, +    static native int setrlimit(int resource, Rlimit rlimit);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Seccomp.java, + * This is only supported on the Linux, Solaris, FreeBSD, OpenBSD, and Mac OS X operating systems., + * On BSD systems, process creation is restricted with {@code setrlimit(RLIMIT_NPROC)}., + * <p>, +    // BSD implementation via setrlimit(2), +, +    // TODO: add OpenBSD to Lucene Constants, +    // TODO: JNA doesn't have netbsd support, but this mechanism should work there too., +    static final boolean OPENBSD = Constants.OS_NAME.startsWith("OpenBSD");, +, +    // not a standard limit, means something different on linux, etc!, +    static final int RLIMIT_NPROC = 7;, +, +    static void bsdImpl() {, +        boolean supported = Constants.FREE_BSD || OPENBSD || Constants.MAC_OS_X;, +        if (supported == false) {, +            throw new IllegalStateException("bug: should not be trying to initialize RLIMIT_NPROC for an unsupported OS");, +        }, +, +        JNACLibrary.Rlimit limit = new JNACLibrary.Rlimit();, +        limit.rlim_cur.setValue(0);, +        limit.rlim_max.setValue(0);, +        if (JNACLibrary.setrlimit(RLIMIT_NPROC, limit) != 0) {, +            throw new UnsupportedOperationException("RLIMIT_NPROC unavailable: " + JNACLibrary.strerror(Native.getLastError()));, +        }, +, +        logger.debug("BSD RLIMIT_NPROC initialization successful");, +    }, +, +            // try to enable both mechanisms if possible, +            bsdImpl();, +        } else if (Constants.FREE_BSD || OPENBSD) {, +            bsdImpl();, +            return 1;]