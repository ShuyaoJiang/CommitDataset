[+++ b/docs/reference/query-dsl/queries/function-score-query.asciidoc, +  "modifier": "sqrt",, +  "missing": 1, +|`missing` |Value used if the document doesn't have that field. The modifier, +and factor are still applied to it as though it were read from the document., +++ b/docs/reference/query-dsl/queries/function-score-query.asciidoc, +  "modifier": "sqrt",, +  "missing": 1, +|`missing` |Value used if the document doesn't have that field. The modifier, +and factor are still applied to it as though it were read from the document., +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +    /**, +     * Value used if the document is missing the field., +     */, +    private final Double missing;, +    public FieldValueFactorFunction(String field, float boostFactor, Modifier modifierType, Double missing,, +            IndexNumericFieldData indexFieldData) {, +        this.missing = missing;, +                double value;, +                    value = values.valueAt(0);, +                } else if (missing != null) {, +                    value = missing;, +                double val = value * boostFactor;, +                double result = modifier.apply(val);, +                if (Double.isNaN(result) || Double.isInfinite(result)) {, +                    throw new ElasticsearchException("Result of field modification [" + modifier.toString() + "(" + val, +                            + ")] must be a number");, +                }, +                return result;, +                String defaultStr = missing != null ? "?:" + missing : "";, +                        String.format(Locale.ROOT,, +                                "field value function: %s(doc['%s'].value%s * factor=%s)", modifierStr, field, defaultStr, boostFactor));, +++ b/docs/reference/query-dsl/queries/function-score-query.asciidoc, +  "modifier": "sqrt",, +  "missing": 1, +|`missing` |Value used if the document doesn't have that field. The modifier, +and factor are still applied to it as though it were read from the document., +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +    /**, +     * Value used if the document is missing the field., +     */, +    private final Double missing;, +    public FieldValueFactorFunction(String field, float boostFactor, Modifier modifierType, Double missing,, +            IndexNumericFieldData indexFieldData) {, +        this.missing = missing;, +                double value;, +                    value = values.valueAt(0);, +                } else if (missing != null) {, +                    value = missing;, +                double val = value * boostFactor;, +                double result = modifier.apply(val);, +                if (Double.isNaN(result) || Double.isInfinite(result)) {, +                    throw new ElasticsearchException("Result of field modification [" + modifier.toString() + "(" + val, +                            + ")] must be a number");, +                }, +                return result;, +                String defaultStr = missing != null ? "?:" + missing : "";, +                        String.format(Locale.ROOT,, +                                "field value function: %s(doc['%s'].value%s * factor=%s)", modifierStr, field, defaultStr, boostFactor));, +++ b/src/main/java/org/elasticsearch/index/query/functionscore/fieldvaluefactor/FieldValueFactorFunctionBuilder.java, +    private Double missing = null;, +    /**, +     * Value used instead of the field value for documents that don't have that field defined., +     */, +    public FieldValueFactorFunctionBuilder missing(double missing) {, +        this.missing = missing;, +        return this;, +    }, +, +        if (missing != null) {, +            builder.field("missing", missing);, +        }, +, +++ b/docs/reference/query-dsl/queries/function-score-query.asciidoc, +  "modifier": "sqrt",, +  "missing": 1, +|`missing` |Value used if the document doesn't have that field. The modifier, +and factor are still applied to it as though it were read from the document., +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +    /**, +     * Value used if the document is missing the field., +     */, +    private final Double missing;, +    public FieldValueFactorFunction(String field, float boostFactor, Modifier modifierType, Double missing,, +            IndexNumericFieldData indexFieldData) {, +        this.missing = missing;, +                double value;, +                    value = values.valueAt(0);, +                } else if (missing != null) {, +                    value = missing;, +                double val = value * boostFactor;, +                double result = modifier.apply(val);, +                if (Double.isNaN(result) || Double.isInfinite(result)) {, +                    throw new ElasticsearchException("Result of field modification [" + modifier.toString() + "(" + val, +                            + ")] must be a number");, +                }, +                return result;, +                String defaultStr = missing != null ? "?:" + missing : "";, +                        String.format(Locale.ROOT,, +                                "field value function: %s(doc['%s'].value%s * factor=%s)", modifierStr, field, defaultStr, boostFactor));]