[+++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +        ShardSuggestMetric suggestMetric = indexShard.getSuggestMetric();, +        suggestMetric.preSuggest();, +            suggestMetric.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +        ShardSuggestMetric suggestMetric = indexShard.getSuggestMetric();, +        suggestMetric.preSuggest();, +            suggestMetric.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +    private final ShardSuggestMetric shardSuggestMetric = new ShardSuggestMetric();, +                      ShardTermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, IndexService indexService,, +    public ShardSuggestMetric getSuggestMetric() {, +        return shardSuggestMetric;, +        return shardSuggestMetric.stats();, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +        ShardSuggestMetric suggestMetric = indexShard.getSuggestMetric();, +        suggestMetric.preSuggest();, +            suggestMetric.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +    private final ShardSuggestMetric shardSuggestMetric = new ShardSuggestMetric();, +                      ShardTermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, IndexService indexService,, +    public ShardSuggestMetric getSuggestMetric() {, +        return shardSuggestMetric;, +        return shardSuggestMetric.stats();, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +        ShardSuggestMetric suggestMetric = indexShard.getSuggestMetric();, +        suggestMetric.preSuggest();, +            suggestMetric.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +    private final ShardSuggestMetric shardSuggestMetric = new ShardSuggestMetric();, +                      ShardTermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, IndexService indexService,, +    public ShardSuggestMetric getSuggestMetric() {, +        return shardSuggestMetric;, +        return shardSuggestMetric.stats();, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/ShadowIndexShard.java, +                            IndexService indexService, ShardQueryCache shardQueryCache,, +                termVectorsService, indexFieldDataService, indexService,, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +        ShardSuggestMetric suggestMetric = indexShard.getSuggestMetric();, +        suggestMetric.preSuggest();, +            suggestMetric.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +    private final ShardSuggestMetric shardSuggestMetric = new ShardSuggestMetric();, +                      ShardTermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, IndexService indexService,, +    public ShardSuggestMetric getSuggestMetric() {, +        return shardSuggestMetric;, +        return shardSuggestMetric.stats();, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardModule.java, +++ b/core/src/main/java/org/elasticsearch/index/shard/ShadowIndexShard.java, +                            IndexService indexService, ShardQueryCache shardQueryCache,, +                termVectorsService, indexFieldDataService, indexService,, +++ b/core/src/main/java/org/elasticsearch/index/suggest/stats/ShardSuggestMetric.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.suggest.stats;, +, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.metrics.CounterMetric;, +import org.elasticsearch.common.metrics.MeanMetric;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.index.settings.IndexSettings;, +import org.elasticsearch.index.shard.AbstractIndexShardComponent;, +import org.elasticsearch.index.shard.ShardId;, +, +import java.util.concurrent.TimeUnit;, +, +/**, + *, + */, +public final class ShardSuggestMetric {, +    private final MeanMetric suggestMetric = new MeanMetric();, +    private final CounterMetric currentMetric = new CounterMetric();]