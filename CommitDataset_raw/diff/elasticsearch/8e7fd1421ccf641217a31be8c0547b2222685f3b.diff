[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +            PARSER.declareBoolean(Request::setDescending, DESCENDING_SORT);, +        private boolean descending = false;, +        public boolean isDescending() {, +            return descending;, +        public void setDescending(boolean descending) {, +            this.descending = descending;, +            descending = in.readBoolean();, +            out.writeBoolean(descending);, +            builder.field(DESCENDING_SORT.getPreferredName(), descending);, +            return Objects.hash(jobId, includeInterim, pageParams, start, end, sort, descending, anomalyScoreFilter);, +            return Objects.equals(jobId, other.jobId) && Objects.equals(start, other.start), +                    && Objects.equals(end, other.end), +                    && Objects.equals(includeInterim, other.includeInterim), +                    && Objects.equals(pageParams, other.pageParams), +                    && Objects.equals(anomalyScoreFilter, other.anomalyScoreFilter), +                    && Objects.equals(descending, other.descending), +                    .anomalyScoreThreshold(request.anomalyScoreFilter).sortField(request.sort).sortDescending(request.descending).build();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +            PARSER.declareBoolean(Request::setDescending, DESCENDING_SORT);, +        private boolean descending = false;, +        public boolean isDescending() {, +            return descending;, +        public void setDescending(boolean descending) {, +            this.descending = descending;, +            descending = in.readBoolean();, +            out.writeBoolean(descending);, +            builder.field(DESCENDING_SORT.getPreferredName(), descending);, +            return Objects.hash(jobId, includeInterim, pageParams, start, end, sort, descending, anomalyScoreFilter);, +            return Objects.equals(jobId, other.jobId) && Objects.equals(start, other.start), +                    && Objects.equals(end, other.end), +                    && Objects.equals(includeInterim, other.includeInterim), +                    && Objects.equals(pageParams, other.pageParams), +                    && Objects.equals(anomalyScoreFilter, other.anomalyScoreFilter), +                    && Objects.equals(descending, other.descending), +                    .anomalyScoreThreshold(request.anomalyScoreFilter).sortField(request.sort).sortDescending(request.descending).build();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetRecordsAction.java, +            PARSER.declareBoolean(Request::setDescending, DESCENDING);, +        private boolean descending = false;, +        public boolean isDescending() {, +            return descending;, +        public void setDescending(boolean descending) {, +            this.descending = descending;, +            descending = in.readBoolean();, +            out.writeBoolean(descending);, +            builder.field(DESCENDING.getPreferredName(), descending);, +            return Objects.hash(jobId, start, end, sort, descending, recordScoreFilter, includeInterim, pageParams);, +                    Objects.equals(descending, other.descending) &&, +                    .sortDescending(request.descending), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +            PARSER.declareBoolean(Request::setDescending, DESCENDING_SORT);, +        private boolean descending = false;, +        public boolean isDescending() {, +            return descending;, +        public void setDescending(boolean descending) {, +            this.descending = descending;, +            descending = in.readBoolean();, +            out.writeBoolean(descending);, +            builder.field(DESCENDING_SORT.getPreferredName(), descending);, +            return Objects.hash(jobId, includeInterim, pageParams, start, end, sort, descending, anomalyScoreFilter);, +            return Objects.equals(jobId, other.jobId) && Objects.equals(start, other.start), +                    && Objects.equals(end, other.end), +                    && Objects.equals(includeInterim, other.includeInterim), +                    && Objects.equals(pageParams, other.pageParams), +                    && Objects.equals(anomalyScoreFilter, other.anomalyScoreFilter), +                    && Objects.equals(descending, other.descending), +                    .anomalyScoreThreshold(request.anomalyScoreFilter).sortField(request.sort).sortDescending(request.descending).build();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetRecordsAction.java, +            PARSER.declareBoolean(Request::setDescending, DESCENDING);, +        private boolean descending = false;, +        public boolean isDescending() {, +            return descending;, +        public void setDescending(boolean descending) {, +            this.descending = descending;, +            descending = in.readBoolean();, +            out.writeBoolean(descending);, +            builder.field(DESCENDING.getPreferredName(), descending);, +            return Objects.hash(jobId, start, end, sort, descending, recordScoreFilter, includeInterim, pageParams);, +                    Objects.equals(descending, other.descending) &&, +                    .sortDescending(request.descending), +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/rest/results/RestGetInfluencersAction.java, +            request.setDescending(restRequest.paramAsBoolean(GetInfluencersAction.Request.DESCENDING_SORT.getPreferredName(), true));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetInfluencersAction.java, +            PARSER.declareBoolean(Request::setDescending, DESCENDING_SORT);, +        private boolean descending = false;, +        public boolean isDescending() {, +            return descending;, +        public void setDescending(boolean descending) {, +            this.descending = descending;, +            descending = in.readBoolean();, +            out.writeBoolean(descending);, +            builder.field(DESCENDING_SORT.getPreferredName(), descending);, +            return Objects.hash(jobId, includeInterim, pageParams, start, end, sort, descending, anomalyScoreFilter);, +            return Objects.equals(jobId, other.jobId) && Objects.equals(start, other.start), +                    && Objects.equals(end, other.end), +                    && Objects.equals(includeInterim, other.includeInterim), +                    && Objects.equals(pageParams, other.pageParams), +                    && Objects.equals(anomalyScoreFilter, other.anomalyScoreFilter), +                    && Objects.equals(descending, other.descending), +                    .anomalyScoreThreshold(request.anomalyScoreFilter).sortField(request.sort).sortDescending(request.descending).build();]