[+++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            List<DiscoveryNode> builder = new ArrayList<>(listedNodes);, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            List<DiscoveryNode> builder = new ArrayList<>(listedNodes);, +++ b/core/src/main/java/org/elasticsearch/cluster/DiffableUtils.java, +            Map<K, T> builder = new HashMap<>(map);, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            List<DiscoveryNode> builder = new ArrayList<>(listedNodes);, +++ b/core/src/main/java/org/elasticsearch/cluster/DiffableUtils.java, +            Map<K, T> builder = new HashMap<>(map);, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobPath.java, +        List<String> paths = new ArrayList<>(this.paths);, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            List<DiscoveryNode> builder = new ArrayList<>(listedNodes);, +++ b/core/src/main/java/org/elasticsearch/cluster/DiffableUtils.java, +            Map<K, T> builder = new HashMap<>(map);, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobPath.java, +        List<String> paths = new ArrayList<>(this.paths);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            Map<String, MappedFieldType> newUnmappedFieldTypes = new HashMap<>(unmappedFieldTypes);, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            List<DiscoveryNode> builder = new ArrayList<>(listedNodes);, +++ b/core/src/main/java/org/elasticsearch/cluster/DiffableUtils.java, +            Map<K, T> builder = new HashMap<>(map);, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobPath.java, +        List<String> paths = new ArrayList<>(this.paths);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            Map<String, MappedFieldType> newUnmappedFieldTypes = new HashMap<>(unmappedFieldTypes);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            List<DiscoveryNode> builder = new ArrayList<>(listedNodes);, +++ b/core/src/main/java/org/elasticsearch/cluster/DiffableUtils.java, +            Map<K, T> builder = new HashMap<>(map);, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobPath.java, +        List<String> paths = new ArrayList<>(this.paths);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            Map<String, MappedFieldType> newUnmappedFieldTypes = new HashMap<>(unmappedFieldTypes);, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java, +        final Set<String> responseParams = new HashSet<>(AbstractCatAction.RESPONSE_PARAMS);, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java, +        Set<String> fields = new HashSet<>(Arrays.asList(request.getFields()));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +            final List<Setting<?>> additionalSettings = new ArrayList<>(pluginsService.getPluginSettings());, +            final List<String> additionalSettingsFilter = new ArrayList<>(pluginsService.getPluginSettingsFilter());, +            List<LifecycleComponent> pluginLifecycleComponents = new ArrayList<>(pluginsService.getGuiceServiceClasses().stream(), +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +            List<DiscoveryNode> builder = new ArrayList<>(listedNodes);, +++ b/core/src/main/java/org/elasticsearch/cluster/DiffableUtils.java, +            Map<K, T> builder = new HashMap<>(map);, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobPath.java, +        List<String> paths = new ArrayList<>(this.paths);]