[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportFollowIndexAction.java, +            Map<String, String> ccrIndexMetadata = followIndexMetadata.getCustomData(Ccr.CCR_CUSTOM_METADATA_KEY);, +            String[] recordedLeaderShardHistoryUUIDs = extractIndexShardHistoryUUIDs(ccrIndexMetadata);, +        Map<String, String> ccrIndexMetadata = followIndex.getCustomData(Ccr.CCR_CUSTOM_METADATA_KEY);, +        if (ccrIndexMetadata == null) {, +            throw new IllegalArgumentException("follow index ["+ followIndex.getIndex().getName() + "] does not have ccr metadata");, +        }, +        String recordedLeaderIndexUUID = ccrIndexMetadata.get(Ccr.CCR_CUSTOM_METADATA_LEADER_INDEX_UUID_KEY);, +        String[] recordedHistoryUUIDs = extractIndexShardHistoryUUIDs(ccrIndexMetadata);, +    private static String[] extractIndexShardHistoryUUIDs(Map<String, String> ccrIndexMetaData) {, +        String historyUUIDs = ccrIndexMetaData.get(Ccr.CCR_CUSTOM_METADATA_LEADER_INDEX_SHARD_HISTORY_UUIDS);, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportFollowIndexAction.java, +            Map<String, String> ccrIndexMetadata = followIndexMetadata.getCustomData(Ccr.CCR_CUSTOM_METADATA_KEY);, +            String[] recordedLeaderShardHistoryUUIDs = extractIndexShardHistoryUUIDs(ccrIndexMetadata);, +        Map<String, String> ccrIndexMetadata = followIndex.getCustomData(Ccr.CCR_CUSTOM_METADATA_KEY);, +        if (ccrIndexMetadata == null) {, +            throw new IllegalArgumentException("follow index ["+ followIndex.getIndex().getName() + "] does not have ccr metadata");, +        }, +        String recordedLeaderIndexUUID = ccrIndexMetadata.get(Ccr.CCR_CUSTOM_METADATA_LEADER_INDEX_UUID_KEY);, +        String[] recordedHistoryUUIDs = extractIndexShardHistoryUUIDs(ccrIndexMetadata);, +    private static String[] extractIndexShardHistoryUUIDs(Map<String, String> ccrIndexMetaData) {, +        String historyUUIDs = ccrIndexMetaData.get(Ccr.CCR_CUSTOM_METADATA_LEADER_INDEX_SHARD_HISTORY_UUIDS);, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/TransportFollowIndexActionTests.java, +            IndexMetaData leaderIMD = createIMD("index1", 5, Settings.EMPTY, null);, +            IndexMetaData followIMD = createIMD("index2", 5, Settings.EMPTY, null);, +            Exception e = expectThrows(IllegalArgumentException.class,, +                () -> validate(request, leaderIMD, followIMD, UUIDs, null));, +            assertThat(e.getMessage(), equalTo("follow index [index2] does not have ccr metadata"));, +        }, +        {, +            IndexMetaData leaderIMD = createIMD("index1", 5, Settings.EMPTY, null);, +            IndexMetaData leaderIMD = createIMD("index1", 5, Settings.EMPTY, null);, +            IndexMetaData leaderIMD = createIMD("index1", 5, Settings.EMPTY, null);, +                .put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "true").build(), null);, +                .put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "true").build(), null);, +                Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "true").build(), null);, +                Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "true").build(), null);, +                .put("index.analysis.analyzer.my_analyzer.tokenizer", "whitespace").build(), null);, +                Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "true").build(), null);, +                .put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), "true").build(), null);, +                .put("index.analysis.analyzer.my_analyzer.tokenizer", "standard").build(), null);, +                .put("index.analysis.analyzer.my_analyzer.tokenizer", "standard").build(), null);, +        IndexMetaData.Builder builder = IndexMetaData.builder(index), +            .putMapping("_doc", mapping);, +, +        if (custom != null) {, +            builder.putCustom(Ccr.CCR_CUSTOM_METADATA_KEY, custom);, +        }, +, +        return builder.build();]