[+++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        return docBuilder.build(mapperService, this);, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        return docBuilder.build(mapperService, this);, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        return docBuilder.build(mapperService, this);, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +    public static interface RecoveryListener {, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        return docBuilder.build(mapperService, this);, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +    public static interface RecoveryListener {, +++ b/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +import org.apache.lucene.util.LuceneTestCase.SuppressFileSystems;, +import org.elasticsearch.test.junit.annotations.TestLogging;, +// TODO: this guy isn't ready for mock filesystems yet, +@SuppressFileSystems("*"), +        // we have to re-open the translog because o.w. it will complain about commit information going backwards, which is OK as we did a fake markComitted, +        translog.close();, +    @TestLogging("index.translog:TRACE"), +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        return docBuilder.build(mapperService, this);, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +    public static interface RecoveryListener {, +++ b/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +import org.apache.lucene.util.LuceneTestCase.SuppressFileSystems;, +import org.elasticsearch.test.junit.annotations.TestLogging;, +// TODO: this guy isn't ready for mock filesystems yet, +@SuppressFileSystems("*"), +        // we have to re-open the translog because o.w. it will complain about commit information going backwards, which is OK as we did a fake markComitted, +        translog.close();, +    @TestLogging("index.translog:TRACE"), +++ b/src/test/java/org/elasticsearch/index/mapper/camelcase/CamelCaseFieldNameTests.java, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        return docBuilder.build(mapperService, this);, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +    public static interface RecoveryListener {, +++ b/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +import org.apache.lucene.util.LuceneTestCase.SuppressFileSystems;, +import org.elasticsearch.test.junit.annotations.TestLogging;, +// TODO: this guy isn't ready for mock filesystems yet, +@SuppressFileSystems("*"), +        // we have to re-open the translog because o.w. it will complain about commit information going backwards, which is OK as we did a fake markComitted, +        translog.close();, +    @TestLogging("index.translog:TRACE"), +++ b/src/test/java/org/elasticsearch/index/mapper/camelcase/CamelCaseFieldNameTests.java, +++ b/src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldTests.java, +++ b/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    private void refreshSource() throws ElasticsearchGenerationException {, +            mappingSource = new CompressedString(bStream.bytes());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        return docBuilder.build(mapperService, this);, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java, +    public static interface RecoveryListener {, +++ b/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +import org.apache.lucene.util.LuceneTestCase.SuppressFileSystems;, +import org.elasticsearch.test.junit.annotations.TestLogging;, +// TODO: this guy isn't ready for mock filesystems yet, +@SuppressFileSystems("*"), +        // we have to re-open the translog because o.w. it will complain about commit information going backwards, which is OK as we did a fake markComitted, +        translog.close();, +    @TestLogging("index.translog:TRACE"), +++ b/src/test/java/org/elasticsearch/index/mapper/camelcase/CamelCaseFieldNameTests.java, +++ b/src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldTests.java]