[+++ b/dev-tools/build_release.py, +    run('dev-tools/build_repositories.sh %s' % src_branch), +++ b/dev-tools/build_release.py, +    run('dev-tools/build_repositories.sh %s' % src_branch), +++ b/dev-tools/build_repositories.sh, +##  S3_BUCKET_SYNC_TO       Bucket to write packages to, should be set packages.elasticsearch.org for a regular release, +##  S3_BUCKET_SYNC_FROM     Bucket to read packages from, defaults to packages.elasticsearch.org, +  S3_BUCKET_SYNC_FROM="packages.elasticsearch.org", +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/centos/ $centosdir, +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/debian/ $debbasedir, +++ b/dev-tools/build_release.py, +    run('dev-tools/build_repositories.sh %s' % src_branch), +++ b/dev-tools/build_repositories.sh, +##  S3_BUCKET_SYNC_TO       Bucket to write packages to, should be set packages.elasticsearch.org for a regular release, +##  S3_BUCKET_SYNC_FROM     Bucket to read packages from, defaults to packages.elasticsearch.org, +  S3_BUCKET_SYNC_FROM="packages.elasticsearch.org", +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/centos/ $centosdir, +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/debian/ $debbasedir, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        setupSecurity(settings, environment);, +++ b/dev-tools/build_release.py, +    run('dev-tools/build_repositories.sh %s' % src_branch), +++ b/dev-tools/build_repositories.sh, +##  S3_BUCKET_SYNC_TO       Bucket to write packages to, should be set packages.elasticsearch.org for a regular release, +##  S3_BUCKET_SYNC_FROM     Bucket to read packages from, defaults to packages.elasticsearch.org, +  S3_BUCKET_SYNC_FROM="packages.elasticsearch.org", +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/centos/ $centosdir, +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/debian/ $debbasedir, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        setupSecurity(settings, environment);, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +import java.util.HashSet;, +import java.util.Set;, +            Set<Path> paths = new HashSet<>();, +            paths.add(environment.homeFile());, +            paths.add(environment.configFile());, +            paths.add(environment.logsFile());, +            paths.add(environment.pluginsFile());, +                paths.add(path);, +                paths.add(path);, +            output.write(createPermissions(paths));, +    // package private for testing, +    static byte[] createPermissions(Set<Path> paths) throws IOException {, +        ByteArrayOutputStream stream = new ByteArrayOutputStream();, +        , +        // all policy files are UTF-8:, +        //  https://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html, +        try (Writer writer = new OutputStreamWriter(stream, StandardCharsets.UTF_8)) {, +            writer.write(System.lineSeparator());, +            writer.write("grant {");, +            writer.write(System.lineSeparator());, +            for (Path path : paths) {, +                // data paths actually may not exist yet., +                addPath(writer, encode(path), "read,readlink,write,delete");, +                addRecursivePath(writer, encode(path), "read,readlink,write,delete");, +            }, +            writer.write("};");, +        }, +        , +        return stream.toByteArray();, +    }, +    , +    static void addPath(Writer writer, String path, String permissions) throws IOException {, +        writer.write("permission java.io.FilePermission \"" + path + "\", \"" + permissions + "\";");, +        writer.write(System.lineSeparator());, +    }, +    , +    static void addRecursivePath(Writer writer, String path, String permissions) throws IOException {, +        writer.write("permission java.io.FilePermission \"" + path + "${/}-\", \"" + permissions + "\";");, +        return encode(path.toString());, +    }, +    , +    static String encode(String path) {, +        return path.replace("\\", "\\\\");, +++ b/dev-tools/build_release.py, +    run('dev-tools/build_repositories.sh %s' % src_branch), +++ b/dev-tools/build_repositories.sh, +##  S3_BUCKET_SYNC_TO       Bucket to write packages to, should be set packages.elasticsearch.org for a regular release, +##  S3_BUCKET_SYNC_FROM     Bucket to read packages from, defaults to packages.elasticsearch.org, +  S3_BUCKET_SYNC_FROM="packages.elasticsearch.org", +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/centos/ $centosdir, +$s3cmd sync s3://$S3_BUCKET_SYNC_FROM/elasticsearch/$version/debian/ $debbasedir, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        setupSecurity(settings, environment);, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +import java.util.HashSet;, +import java.util.Set;, +            Set<Path> paths = new HashSet<>();, +            paths.add(environment.homeFile());, +            paths.add(environment.configFile());, +            paths.add(environment.logsFile());, +            paths.add(environment.pluginsFile());, +                paths.add(path);, +                paths.add(path);, +            output.write(createPermissions(paths));, +    // package private for testing, +    static byte[] createPermissions(Set<Path> paths) throws IOException {, +        ByteArrayOutputStream stream = new ByteArrayOutputStream();, +        , +        // all policy files are UTF-8:]