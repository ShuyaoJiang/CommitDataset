[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/plugins/PluginManager.java, +        File pluginFile = new File(url + "/" + name + "/elasticsearch-" + name + "-" + Version.number() + ".zip");, +        if (!pluginFile.exists()) {, +            pluginFile = new File(url + "/elasticsearch-" + name + "-" + Version.number() + ".zip");, +            if (!pluginFile.exists()) {, +                System.out.println("Downloading plugin from " + pluginUrl.toExternalForm());, +                pluginFile = new File(environment.pluginsFile(), name + ".zip");, +            } else {, +                System.out.println("Using plugin from local fs: " + pluginFile.getAbsolutePath());, +            }, +        } else {, +            System.out.println("Using plugin from local fs: " + pluginFile.getAbsolutePath());, +        }, +        String url = "http://elasticsearch.googlecode.com/svn/plugins";, +        for (int i = 0; i < args.length; i++) {, +            if ("url".equals(args[i]) || "-url".equals(args[i])) {, +                url = args[i + 1];, +                break;, +            }, +        }, +, +        PluginManager pluginManager = new PluginManager(initialSettings.v2(), url);, +            System.out.println("    -url     [plugins location]    : Downloads and installs listed plugins");, +            System.out.println("    -install [plugin name]: Downloads and installs listed plugins");, +            System.out.println("    -remove  [plugin name]: Removes listed plugins");, +        for (int c = 0; c < args.length; c++) {, +            String command = args[c];, +                String pluginName = args[++c];, +                String pluginName = args[++c];, +                // not install or remove, continue, +                c++;, +            }]