[+++ b/TESTING.asciidoc, +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch , +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z , +++ b/TESTING.asciidoc, +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch , +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z , +++ b/src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java, +++ b/TESTING.asciidoc, +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch , +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z , +++ b/src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java, +                .put("node.mode", "network") // we need network mode for this, +++ b/TESTING.asciidoc, +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch , +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z , +++ b/src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java, +                .put("node.mode", "network") // we need network mode for this, +++ b/src/test/java/org/elasticsearch/test/ExternalNode.java, +                case "config.ignore_system_properties":, +++ b/TESTING.asciidoc, +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch , +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z , +++ b/src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java, +                .put("node.mode", "network") // we need network mode for this, +++ b/src/test/java/org/elasticsearch/test/ExternalNode.java, +                case "config.ignore_system_properties":, +++ b/src/test/java/org/elasticsearch/test/ExternalTestCluster.java, +        this.client = new TransportClient(ImmutableSettings.settingsBuilder(), +                .put("client.transport.ignore_cluster_name", true), +                .put("node.mode", "network")) // we require network here!, +++ b/TESTING.asciidoc, +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch , +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z , +++ b/src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java, +                .put("node.mode", "network") // we need network mode for this, +++ b/src/test/java/org/elasticsearch/test/ExternalNode.java, +                case "config.ignore_system_properties":, +++ b/src/test/java/org/elasticsearch/test/ExternalTestCluster.java, +        this.client = new TransportClient(ImmutableSettings.settingsBuilder(), +                .put("client.transport.ignore_cluster_name", true), +                .put("node.mode", "network")) // we require network here!, +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.common.Strings;, +    private static final String NODE_MODE = nodeMode();, +, +        builder.put("config.ignore_system_properties", true);, +        builder.put("node.mode", NODE_MODE);, +        if (Strings.hasLength(System.getProperty("es.logger.level"))) {, +            builder.put("logger.level", System.getProperty("es.logger.level"));, +        }, +        if (Strings.hasLength(System.getProperty("es.logger.prefix"))) {, +            builder.put("logger.prefix", System.getProperty("es.logger.level"));, +        }, +, +    private static String nodeMode() {, +        Builder builder = ImmutableSettings.builder();, +        if (Strings.isEmpty(System.getProperty("es.node.mode"))&& Strings.isEmpty(System.getProperty("es.node.local"))) {, +            return "local"; // default if nothing is specified, +        }, +        if (Strings.hasLength(System.getProperty("es.node.mode"))) {, +            builder.put("node.mode", System.getProperty("es.node.mode"));, +        }, +        if (Strings.hasLength(System.getProperty("es.node.local"))) {, +            builder.put("node.local", System.getProperty("es.node.local"));, +        }, +        if (DiscoveryNode.localNode(builder.build())) {, +            return "local";, +        } else {, +            return "network";, +        }, +    }, +, +            Settings nodeSettings = node.settings();, +            Builder builder = settingsBuilder().put("client.transport.nodes_sampler_interval", "1s"), +                    .put(ClusterName.SETTING, clusterName).put("client.transport.sniff", sniff);, +            builder.put("node.mode", nodeSettings.get("node.mode", NODE_MODE));, +            builder.put("node.local", nodeSettings.get("node.local", ""));, +            builder.put("logger.prefix", nodeSettings.get("logger.prefix", ""));, +            builder.put("logger.level", nodeSettings.get("logger.level", "INFO"));, +            builder.put("config.ignore_system_properties", true);, +, +            TransportClient client = new TransportClient(builder.build());, +++ b/TESTING.asciidoc, +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch , +mvn test -Dtests.bwc=true -Dtests.bwc.version=x.y.z , +++ b/src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java, +                .put("node.mode", "network") // we need network mode for this, +++ b/src/test/java/org/elasticsearch/test/ExternalNode.java, +                case "config.ignore_system_properties":, +++ b/src/test/java/org/elasticsearch/test/ExternalTestCluster.java, +        this.client = new TransportClient(ImmutableSettings.settingsBuilder(), +                .put("client.transport.ignore_cluster_name", true), +                .put("node.mode", "network")) // we require network here!, +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.common.Strings;]