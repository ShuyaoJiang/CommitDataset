[+++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            // Automatically set leniency to "true" if unset so mismatched fields don't cause exceptions, +            qpSettings.lenient(lenient == null ? true : lenient);, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            // Automatically set leniency to "true" if unset so mismatched fields don't cause exceptions, +            qpSettings.lenient(lenient == null ? true : lenient);, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +    /** Whether or not the lenient flag has been set or not */, +    private boolean lenientSet = false;, +        if (in.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            this.lenientSet = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            out.writeBoolean(lenientSet);, +        }, +        this.lenientSet = true;, +            newSettings.lenient(lenientSet ? settings.lenient() : true);, +        if (lenientSet) {, +        }, +        Boolean lenient = null;, +        if (lenient != null) {, +            qb.lenient(lenient);, +        }, +        qb.analyzeWildcard(analyzeWildcard).boost(boost).quoteFieldSuffix(quoteFieldSuffix);, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            // Automatically set leniency to "true" if unset so mismatched fields don't cause exceptions, +            qpSettings.lenient(lenient == null ? true : lenient);, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +    /** Whether or not the lenient flag has been set or not */, +    private boolean lenientSet = false;, +        if (in.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            this.lenientSet = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            out.writeBoolean(lenientSet);, +        }, +        this.lenientSet = true;, +            newSettings.lenient(lenientSet ? settings.lenient() : true);, +        if (lenientSet) {, +        }, +        Boolean lenient = null;, +        if (lenient != null) {, +            qb.lenient(lenient);, +        }, +        qb.analyzeWildcard(analyzeWildcard).boost(boost).quoteFieldSuffix(quoteFieldSuffix);, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +    interface MergableCustomMetaData<T extends MetaData.Custom> {, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            // Automatically set leniency to "true" if unset so mismatched fields don't cause exceptions, +            qpSettings.lenient(lenient == null ? true : lenient);, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +    /** Whether or not the lenient flag has been set or not */, +    private boolean lenientSet = false;, +        if (in.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            this.lenientSet = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            out.writeBoolean(lenientSet);, +        }, +        this.lenientSet = true;, +            newSettings.lenient(lenientSet ? settings.lenient() : true);, +        if (lenientSet) {, +        }, +        Boolean lenient = null;, +        if (lenient != null) {, +            qb.lenient(lenient);, +        }, +        qb.analyzeWildcard(analyzeWildcard).boost(boost).quoteFieldSuffix(quoteFieldSuffix);, +++ b/core/src/main/java/org/elasticsearch/tribe/TribeService.java, +    interface MergableCustomMetaData<T extends MetaData.Custom> {, +++ b/core/src/test/java/org/elasticsearch/search/query/QueryStringIT.java, +    public void testAllFieldsWithSpecifiedLeniency() throws IOException {, +        Exception e = expectThrows(Exception.class, () ->, +                client().prepareSearch("test").setQuery(, +                        queryStringQuery("f_date:[now-2D TO now]").lenient(false)).get());, +        assertThat(ExceptionsHelper.detailedMessage(e),, +                containsString("unit [D] not supported for date math [-2D]"));, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java, +            // Automatically set leniency to "true" if unset so mismatched fields don't cause exceptions, +            qpSettings.lenient(lenient == null ? true : lenient);, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +    /** Whether or not the lenient flag has been set or not */, +    private boolean lenientSet = false;, +        if (in.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            this.lenientSet = in.readBoolean();, +        }, +        if (out.getVersion().onOrAfter(V_5_1_0_UNRELEASED)) {, +            out.writeBoolean(lenientSet);, +        }, +        this.lenientSet = true;, +            newSettings.lenient(lenientSet ? settings.lenient() : true);, +        if (lenientSet) {, +        }, +        Boolean lenient = null;, +        if (lenient != null) {, +            qb.lenient(lenient);, +        }, +        qb.analyzeWildcard(analyzeWildcard).boost(boost).quoteFieldSuffix(quoteFieldSuffix);]