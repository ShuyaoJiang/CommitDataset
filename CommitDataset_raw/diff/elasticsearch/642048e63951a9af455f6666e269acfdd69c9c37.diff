[+++ b/sql-clients/cli/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +, +// Needed so we can launch graphviz if it is installed, +project.compactProfile = 'full', +++ b/sql-clients/cli/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +, +// Needed so we can launch graphviz if it is installed, +project.compactProfile = 'full', +++ b/sql-clients/cli/src/test/java/org/elasticsearch/xpack/sql/cli/integration/server/CliHttpServer.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.Response;, +public class CliHttpServer extends ProtoHttpServer<Response> {, +++ b/sql-clients/cli/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +, +// Needed so we can launch graphviz if it is installed, +project.compactProfile = 'full', +++ b/sql-clients/cli/src/test/java/org/elasticsearch/xpack/sql/cli/integration/server/CliHttpServer.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.Response;, +public class CliHttpServer extends ProtoHttpServer<Response> {, +++ b/sql-clients/jdbc/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +++ b/sql-clients/cli/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +, +// Needed so we can launch graphviz if it is installed, +project.compactProfile = 'full', +++ b/sql-clients/cli/src/test/java/org/elasticsearch/xpack/sql/cli/integration/server/CliHttpServer.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.Response;, +public class CliHttpServer extends ProtoHttpServer<Response> {, +++ b/sql-clients/jdbc/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +++ b/sql-clients/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/integration/net/protocol/ProtoTest.java, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +++ b/sql-clients/cli/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +, +// Needed so we can launch graphviz if it is installed, +project.compactProfile = 'full', +++ b/sql-clients/cli/src/test/java/org/elasticsearch/xpack/sql/cli/integration/server/CliHttpServer.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.Response;, +public class CliHttpServer extends ProtoHttpServer<Response> {, +++ b/sql-clients/jdbc/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +++ b/sql-clients/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/integration/net/protocol/ProtoTest.java, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +++ b/sql-clients/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/integration/server/JdbcHttpServer.java, +import org.elasticsearch.xpack.sql.jdbc.net.protocol.Response;, +public class JdbcHttpServer extends ProtoHttpServer<Response> {, +++ b/sql-clients/cli/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +, +// Needed so we can launch graphviz if it is installed, +project.compactProfile = 'full', +++ b/sql-clients/cli/src/test/java/org/elasticsearch/xpack/sql/cli/integration/server/CliHttpServer.java, +import org.elasticsearch.xpack.sql.cli.net.protocol.Response;, +public class CliHttpServer extends ProtoHttpServer<Response> {, +++ b/sql-clients/jdbc/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +++ b/sql-clients/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/integration/net/protocol/ProtoTest.java, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +        j.consume(c -> {, +++ b/sql-clients/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/integration/server/JdbcHttpServer.java, +import org.elasticsearch.xpack.sql.jdbc.net.protocol.Response;, +public class JdbcHttpServer extends ProtoHttpServer<Response> {, +++ b/sql-clients/jdbc/src/test/java/org/elasticsearch/xpack/sql/jdbc/integration/util/H2.java, +import org.elasticsearch.xpack.sql.jdbc.integration.util.JdbcTemplate.JdbcSupplier;, +import org.junit.rules.ExternalResource;, +, +import java.sql.DriverManager;, +    static {, +        try {, +            Class.forName("org.h2.Driver");, +        } catch (ClassNotFoundException e) {, +            throw new RuntimeException(e);, +        }, +    }, +        return DriverManager.getConnection(url, DEFAULT_PROPS);, +++ b/sql-clients/cli/build.gradle, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +, +// Needed so we can launch graphviz if it is installed]