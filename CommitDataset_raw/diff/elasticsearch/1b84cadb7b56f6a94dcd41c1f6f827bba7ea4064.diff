[+++ b/TESTING.asciidoc, +vagrant up --provision trusty && vagrant halt trusty, +vagrant up --provision centos-7 && vagrant halt centos-7, +  vagrant up --provision $box, +vagrant up trusty && vagrant ssh trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant up trusty && vagrant ssh trusty, +++ b/TESTING.asciidoc, +vagrant up --provision trusty && vagrant halt trusty, +vagrant up --provision centos-7 && vagrant halt centos-7, +  vagrant up --provision $box, +vagrant up trusty && vagrant ssh trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant up trusty && vagrant ssh trusty, +++ b/core/src/test/java/org/elasticsearch/test/ESIntegTestCase.java, +        return new ExternalTestCluster(createTempDir(), externalClusterClientSettings(), transportClientPlugins(), transportAddresses);, +++ b/TESTING.asciidoc, +vagrant up --provision trusty && vagrant halt trusty, +vagrant up --provision centos-7 && vagrant halt centos-7, +  vagrant up --provision $box, +vagrant up trusty && vagrant ssh trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant up trusty && vagrant ssh trusty, +++ b/core/src/test/java/org/elasticsearch/test/ESIntegTestCase.java, +        return new ExternalTestCluster(createTempDir(), externalClusterClientSettings(), transportClientPlugins(), transportAddresses);, +++ b/core/src/test/java/org/elasticsearch/test/ExternalTestCluster.java, +import org.elasticsearch.plugins.Plugin;, +import java.util.Collection;, +    public ExternalTestCluster(Path tempDir, Settings additionalSettings, Collection<Class<? extends Plugin>> pluginClasses, TransportAddress... transportAddresses) {, +        TransportClient.Builder transportClientBuilder = TransportClient.builder().settings(clientSettings);, +        for (Class<? extends Plugin> pluginClass : pluginClasses) {, +            transportClientBuilder.addPlugin(pluginClass);, +        }, +        this.client = transportClientBuilder.build().addTransportAddresses(transportAddresses);, +++ b/TESTING.asciidoc, +vagrant up --provision trusty && vagrant halt trusty, +vagrant up --provision centos-7 && vagrant halt centos-7, +  vagrant up --provision $box, +vagrant up trusty && vagrant ssh trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant destroy -f trusty && vagrant up trusty, +vagrant up centos-7 && vagrant ssh centos-7, +vagrant up trusty && vagrant ssh trusty, +++ b/core/src/test/java/org/elasticsearch/test/ESIntegTestCase.java, +        return new ExternalTestCluster(createTempDir(), externalClusterClientSettings(), transportClientPlugins(), transportAddresses);, +++ b/core/src/test/java/org/elasticsearch/test/ExternalTestCluster.java, +import org.elasticsearch.plugins.Plugin;, +import java.util.Collection;, +    public ExternalTestCluster(Path tempDir, Settings additionalSettings, Collection<Class<? extends Plugin>> pluginClasses, TransportAddress... transportAddresses) {, +        TransportClient.Builder transportClientBuilder = TransportClient.builder().settings(clientSettings);, +        for (Class<? extends Plugin> pluginClass : pluginClasses) {, +            transportClientBuilder.addPlugin(pluginClass);, +        }, +        this.client = transportClientBuilder.build().addTransportAddresses(transportAddresses);, +++ b/qa/vagrant/src/dev/ant/vagrant-integration-tests.xml]