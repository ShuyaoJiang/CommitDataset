[+++ b/core/src/test/java/org/elasticsearch/index/query/QueryDSLDocumentationTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.query;, +, +import org.apache.lucene.search.join.ScoreMode;, +import org.elasticsearch.common.geo.GeoDistance;, +import org.elasticsearch.common.geo.GeoPoint;, +import org.elasticsearch.common.geo.ShapeRelation;, +import org.elasticsearch.common.geo.builders.ShapeBuilder;, +import org.elasticsearch.common.unit.DistanceUnit;, +import org.elasticsearch.index.query.MoreLikeThisQueryBuilder.Item;, +import org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder;, +import org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder.FilterFunctionBuilder;, +import org.elasticsearch.script.Script;, +import org.elasticsearch.script.ScriptService.ScriptType;, +import org.junit.Test;, +, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +, +import static org.elasticsearch.index.query.QueryBuilders.*;, +import static org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders.*;, +, +/**, + * If one of the following tests doesn't compile make sure to not only fix the compilation error here, + * but also the documentation under ./docs/java-api/query-dsl/bool-query.asciidoc, + * , + * There are no assertions here on purpose - all of these tests ((ideally) should) equal to what is, + * documented in the java api query dsl part of our reference guide. , + * */, +public class QueryDSLDocumentationTests {, +    @Test, +    public void testBool() {, +        boolQuery(), +                .must(termQuery("content", "test1")), +                .must(termQuery("content", "test4")), +                .mustNot(termQuery("content", "test2")), +                .should(termQuery("content", "test3")), +                .filter(termQuery("content", "test5"));, +    }, +, +    @Test, +    public void testBoosting() {, +        boostingQuery(termQuery("name","kimchy"), termQuery("name","dadoonet")), +                .negativeBoost(0.2f); , +    }, +    , +    @Test, +    public void testCommonTerms() {, +        commonTermsQuery("name", "kimchy");, +    }, +    , +    @Test, +    public void testConstantScore() {, +        constantScoreQuery(termQuery("name","kimchy")), +            .boost(2.0f);  , +    }, +    , +    @Test, +    public void testDisMax() {, +        disMaxQuery(), +                .add(termQuery("name", "kimchy")), +                .add(termQuery("name", "elasticsearch")), +                .boost(1.2f), +                .tieBreaker(0.7f);, +    }, +    , +    @Test, +    public void testExists() {, +        existsQuery("name");, +    }, +, +    @Test, +    public void testFunctionScore() {, +        FilterFunctionBuilder[] functions = {, +                new FunctionScoreQueryBuilder.FilterFunctionBuilder(, +                        matchQuery("name", "kimchy"),, +                        randomFunction("ABCDEF")),, +                new FunctionScoreQueryBuilder.FilterFunctionBuilder(]