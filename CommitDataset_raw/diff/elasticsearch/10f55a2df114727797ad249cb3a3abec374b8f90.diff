[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        initializeNatives(environment.tmpFile(),, +                          settings.getAsBoolean("bootstrap.mlockall", false),, +                          settings.getAsBoolean("bootstrap.seccomp", true),, +                          settings.getAsBoolean("bootstrap.ctrlhandler", true));, +    /**, +     * option for elasticsearch.yml etc to turn off our security manager completely,, +     * for example if you want to have your own configuration or just disable., +     */, +    // TODO: remove this: http://www.openbsd.org/papers/hackfest2015-pledge/mgp00005.jpg, +    static final String SECURITY_SETTING = "security.manager.enabled";, +    /**, +     * option for elasticsearch.yml to fully respect the system policy, including bad defaults, +     * from java., +     */, +    // TODO: remove this hack when insecure defaults are removed from java, +    static final String SECURITY_FILTER_BAD_DEFAULTS_SETTING = "security.manager.filter_bad_defaults";, +        if (settings.getAsBoolean(SECURITY_SETTING, true)) {, +            Security.configure(environment, settings.getAsBoolean(SECURITY_FILTER_BAD_DEFAULTS_SETTING, true));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        initializeNatives(environment.tmpFile(),, +                          settings.getAsBoolean("bootstrap.mlockall", false),, +                          settings.getAsBoolean("bootstrap.seccomp", true),, +                          settings.getAsBoolean("bootstrap.ctrlhandler", true));, +    /**, +     * option for elasticsearch.yml etc to turn off our security manager completely,, +     * for example if you want to have your own configuration or just disable., +     */, +    // TODO: remove this: http://www.openbsd.org/papers/hackfest2015-pledge/mgp00005.jpg, +    static final String SECURITY_SETTING = "security.manager.enabled";, +    /**, +     * option for elasticsearch.yml to fully respect the system policy, including bad defaults, +     * from java., +     */, +    // TODO: remove this hack when insecure defaults are removed from java, +    static final String SECURITY_FILTER_BAD_DEFAULTS_SETTING = "security.manager.filter_bad_defaults";, +        if (settings.getAsBoolean(SECURITY_SETTING, true)) {, +            Security.configure(environment, settings.getAsBoolean(SECURITY_FILTER_BAD_DEFAULTS_SETTING, true));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        initializeNatives(environment.tmpFile(),, +                          settings.getAsBoolean("bootstrap.mlockall", false),, +                          settings.getAsBoolean("bootstrap.seccomp", true),, +                          settings.getAsBoolean("bootstrap.ctrlhandler", true));, +    /**, +     * option for elasticsearch.yml etc to turn off our security manager completely,, +     * for example if you want to have your own configuration or just disable., +     */, +    // TODO: remove this: http://www.openbsd.org/papers/hackfest2015-pledge/mgp00005.jpg, +    static final String SECURITY_SETTING = "security.manager.enabled";, +    /**, +     * option for elasticsearch.yml to fully respect the system policy, including bad defaults, +     * from java., +     */, +    // TODO: remove this hack when insecure defaults are removed from java, +    static final String SECURITY_FILTER_BAD_DEFAULTS_SETTING = "security.manager.filter_bad_defaults";, +        if (settings.getAsBoolean(SECURITY_SETTING, true)) {, +            Security.configure(environment, settings.getAsBoolean(SECURITY_FILTER_BAD_DEFAULTS_SETTING, true));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JavaVersion.java, +import org.elasticsearch.common.Strings;, +, +        return Collections.unmodifiableList(version);, +        this.version = version;, +        if (value == null) {, +            throw new NullPointerException("value");, +        }, +        if ("".equals(value)) {, +        return Strings.collectionToDelimitedString(version, ".");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +        final QueryShardContext queryShardContext = indexService.newQueryShardContext();, +        queryShardContext.setTypes(request.types());, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(context.getQueryShardContext().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        initializeNatives(environment.tmpFile(),, +                          settings.getAsBoolean("bootstrap.mlockall", false),]