[+++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +    public Query rewrite(IndexReader reader) throws IOException {, +        if (rewrittenChildQuery == null) {, +            rewrittenChildQuery = originalChildQuery.rewrite(reader);, +        }, +        return this;, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +    public Query rewrite(IndexReader reader) throws IOException {, +        if (rewrittenChildQuery == null) {, +            rewrittenChildQuery = originalChildQuery.rewrite(reader);, +        }, +        return this;, +++ b/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java, +    public Query rewrite(IndexReader reader) throws IOException {, +        if (rewrittenParentQuery == null) {, +            rewrittenParentQuery = originalParentQuery.rewrite(reader);, +        }, +        return this;, +++ b/src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java, +        TopChildrenQuery childQuery = new TopChildrenQuery(query, childType, parentType, scoreType, factor, incrementalFactor);, +++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java, +    public Query rewrite(IndexReader reader) throws IOException {, +        if (rewrittenChildQuery == null) {, +            rewrittenChildQuery = originalChildQuery.rewrite(reader);, +        }, +        return this;, +++ b/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java, +    public Query rewrite(IndexReader reader) throws IOException {, +        if (rewrittenParentQuery == null) {, +            rewrittenParentQuery = originalParentQuery.rewrite(reader);, +        }, +        return this;, +++ b/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java, +    // This field will hold the rewritten form of originalChildQuery, so that we can reuse it, +    public TopChildrenQuery(Query childQuery, String childType, String parentType, ScoreType scoreType, int factor, int incrementalFactor) {, +    // Rewrite invocation logic:, +            rewrittenChildQuery = originalChildQuery.rewrite(reader);, +        // We can always return the current instance, and we can do this b/c the child query is executed separately, +        // before the main query (other scope) in a different IS#search() invocation than the main query., +        // In fact we only need override the rewrite method because for the dfs phase, to get also global document, +        // frequency for the child query.]