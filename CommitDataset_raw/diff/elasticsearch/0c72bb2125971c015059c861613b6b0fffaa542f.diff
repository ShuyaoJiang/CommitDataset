[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Digest.java, +, +    public static final NullDigest NULL_DIGEST = new NullDigest("null");, +, +    private static final class NullDigest extends MessageDigest {, +, +        private NullDigest(String algorithm) {, +            super(algorithm);, +        }, +, +        @Override protected void engineUpdate(byte input) {, +        }, +, +        @Override protected void engineUpdate(byte[] input, int offset, int len) {, +        }, +, +        @Override protected byte[] engineDigest() {, +            return null;, +        }, +, +        @Override protected void engineReset() {, +        }, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Digest.java, +, +    public static final NullDigest NULL_DIGEST = new NullDigest("null");, +, +    private static final class NullDigest extends MessageDigest {, +, +        private NullDigest(String algorithm) {, +            super(algorithm);, +        }, +, +        @Override protected void engineUpdate(byte input) {, +        }, +, +        @Override protected void engineUpdate(byte[] input, int offset, int len) {, +        }, +, +        @Override protected byte[] engineDigest() {, +            return null;, +        }, +, +        @Override protected void engineReset() {, +        }, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                    if (indexShard.state() == IndexShardState.CLOSED) {, +                        // got closed on us, just ignore this recovery, +                        listener.onIgnoreRecovery("shard closed");, +                        return;, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Digest.java, +, +    public static final NullDigest NULL_DIGEST = new NullDigest("null");, +, +    private static final class NullDigest extends MessageDigest {, +, +        private NullDigest(String algorithm) {, +            super(algorithm);, +        }, +, +        @Override protected void engineUpdate(byte input) {, +        }, +, +        @Override protected void engineUpdate(byte[] input, int offset, int len) {, +        }, +, +        @Override protected byte[] engineDigest() {, +            return null;, +        }, +, +        @Override protected void engineReset() {, +        }, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java, +                    if (indexShard.state() == IndexShardState.CLOSED) {, +                        // got closed on us, just ignore this recovery, +                        listener.onIgnoreRecovery("shard closed");, +                        return;, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/blobstore/BlobStoreIndexShardGateway.java, +            throw new IndexShardGatewayRecoveryException(shardId, "Failed to recover index", failures.get(0));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Digest.java, +, +    public static final NullDigest NULL_DIGEST = new NullDigest("null");, +, +    private static final class NullDigest extends MessageDigest {, +, +        private NullDigest(String algorithm) {, +            super(algorithm);, +        }, +, +        @Override protected void engineUpdate(byte input) {, +        }, +, +        @Override protected void engineUpdate(byte[] input, int offset, int len) {, +        }, +, +        @Override protected byte[] engineDigest() {]