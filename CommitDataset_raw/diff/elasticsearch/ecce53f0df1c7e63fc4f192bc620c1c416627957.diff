[+++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +import java.util.List;, +    int majorDeviceNumber;, +    int minorDeviceNumber;, +            try {, +                final List<String> lines = Files.readAllLines(PathUtils.get("/proc/self/mountinfo"));, +                for (final String line : lines) {, +                    final String[] fields = line.trim().split("\\s+");, +                    final String mountPoint = fields[4];, +                    if (mountPoint.equals(getMountPointLinux(in))) {, +                        final String[] deviceNumbers = fields[2].split(":");, +                        majorDeviceNumber = Integer.parseInt(deviceNumbers[0]);, +                        minorDeviceNumber = Integer.parseInt(deviceNumbers[1]);, +                    }, +                }, +            } catch (Exception e) {, +                majorDeviceNumber = -1;, +                minorDeviceNumber = -1;, +            }, +        switch(attribute) {, +            // for the device, +            case "lucene:spins": return spins;, +            // for the partition, +            case "lucene:major_device_number": return majorDeviceNumber;, +            case "lucene:minor_device_number": return minorDeviceNumber;, +            default: return in.getAttribute(attribute);, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +import java.util.List;, +    int majorDeviceNumber;, +    int minorDeviceNumber;, +            try {, +                final List<String> lines = Files.readAllLines(PathUtils.get("/proc/self/mountinfo"));, +                for (final String line : lines) {, +                    final String[] fields = line.trim().split("\\s+");, +                    final String mountPoint = fields[4];, +                    if (mountPoint.equals(getMountPointLinux(in))) {, +                        final String[] deviceNumbers = fields[2].split(":");, +                        majorDeviceNumber = Integer.parseInt(deviceNumbers[0]);, +                        minorDeviceNumber = Integer.parseInt(deviceNumbers[1]);, +                    }, +                }, +            } catch (Exception e) {, +                majorDeviceNumber = -1;, +                minorDeviceNumber = -1;, +            }, +        switch(attribute) {, +            // for the device, +            case "lucene:spins": return spins;, +            // for the partition, +            case "lucene:major_device_number": return majorDeviceNumber;, +            case "lucene:minor_device_number": return minorDeviceNumber;, +            default: return in.getAttribute(attribute);, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +        public final int majorDeviceNumber;, +        public final int minorDeviceNumber;, +, +                this.majorDeviceNumber = (int) fileStore.getAttribute("lucene:major_device_number");, +                this.minorDeviceNumber = (int) fileStore.getAttribute("lucene:minor_device_number");, +                this.majorDeviceNumber = -1;, +                this.minorDeviceNumber = -1;, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +import java.util.List;, +    int majorDeviceNumber;, +    int minorDeviceNumber;, +            try {, +                final List<String> lines = Files.readAllLines(PathUtils.get("/proc/self/mountinfo"));, +                for (final String line : lines) {, +                    final String[] fields = line.trim().split("\\s+");, +                    final String mountPoint = fields[4];, +                    if (mountPoint.equals(getMountPointLinux(in))) {, +                        final String[] deviceNumbers = fields[2].split(":");, +                        majorDeviceNumber = Integer.parseInt(deviceNumbers[0]);, +                        minorDeviceNumber = Integer.parseInt(deviceNumbers[1]);, +                    }, +                }, +            } catch (Exception e) {, +                majorDeviceNumber = -1;, +                minorDeviceNumber = -1;, +            }, +        switch(attribute) {, +            // for the device, +            case "lucene:spins": return spins;, +            // for the partition, +            case "lucene:major_device_number": return majorDeviceNumber;, +            case "lucene:minor_device_number": return minorDeviceNumber;, +            default: return in.getAttribute(attribute);, +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +        public final int majorDeviceNumber;, +        public final int minorDeviceNumber;, +, +                this.majorDeviceNumber = (int) fileStore.getAttribute("lucene:major_device_number");, +                this.minorDeviceNumber = (int) fileStore.getAttribute("lucene:minor_device_number");, +                this.majorDeviceNumber = -1;, +                this.minorDeviceNumber = -1;, +++ b/core/src/main/java/org/elasticsearch/monitor/MonitorService.java, +, +++ b/core/src/main/java/org/elasticsearch/env/ESFileStore.java, +import java.util.List;, +    int majorDeviceNumber;, +    int minorDeviceNumber;]