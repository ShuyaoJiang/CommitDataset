[+++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +import java.io.IOException;, +    private void parseSource(SearchContext context, SearchSourceBuilder source) throws SearchContextException {, +            HighlightBuilder highlightBuilder = source.highlighter();, +                context.highlight(highlightBuilder.build(context.indexShard().getQueryShardContext()));, +            } catch (IOException e) {, +                throw new SearchContextException(context, "failed to create SearchContextHighlighter", e);, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +import java.io.IOException;, +    private void parseSource(SearchContext context, SearchSourceBuilder source) throws SearchContextException {, +            HighlightBuilder highlightBuilder = source.highlighter();, +                context.highlight(highlightBuilder.build(context.indexShard().getQueryShardContext()));, +            } catch (IOException e) {, +                throw new SearchContextException(context, "failed to create SearchContextHighlighter", e);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsBuilder.java, +    public HighlightBuilder highlighter() {, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +import java.io.IOException;, +    private void parseSource(SearchContext context, SearchSourceBuilder source) throws SearchContextException {, +            HighlightBuilder highlightBuilder = source.highlighter();, +                context.highlight(highlightBuilder.build(context.indexShard().getQueryShardContext()));, +            } catch (IOException e) {, +                throw new SearchContextException(context, "failed to create SearchContextHighlighter", e);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsBuilder.java, +    public HighlightBuilder highlighter() {, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private HighlightBuilder highlightBuilder;, +        this.highlightBuilder = highlightBuilder;, +     * Gets the hightlighter builder for this request., +    public HighlightBuilder highlighter() {, +                    builder.highlightBuilder = HighlightBuilder.fromXContent(context);, +            this.highlightBuilder.toXContent(builder, params);, +            builder.highlightBuilder = HighlightBuilder.PROTOTYPE.readFrom(in);, +            highlightBuilder.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +import java.io.IOException;, +    private void parseSource(SearchContext context, SearchSourceBuilder source) throws SearchContextException {, +            HighlightBuilder highlightBuilder = source.highlighter();, +                context.highlight(highlightBuilder.build(context.indexShard().getQueryShardContext()));, +            } catch (IOException e) {, +                throw new SearchContextException(context, "failed to create SearchContextHighlighter", e);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsBuilder.java, +    public HighlightBuilder highlighter() {, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private HighlightBuilder highlightBuilder;, +        this.highlightBuilder = highlightBuilder;, +     * Gets the hightlighter builder for this request., +    public HighlightBuilder highlighter() {, +                    builder.highlightBuilder = HighlightBuilder.fromXContent(context);, +            this.highlightBuilder.toXContent(builder, params);, +            builder.highlightBuilder = HighlightBuilder.PROTOTYPE.readFrom(in);, +            highlightBuilder.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsBuilder.java, +        public HighlightBuilder highlighter() {, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +import java.io.IOException;, +    private void parseSource(SearchContext context, SearchSourceBuilder source) throws SearchContextException {, +            HighlightBuilder highlightBuilder = source.highlighter();, +                context.highlight(highlightBuilder.build(context.indexShard().getQueryShardContext()));, +            } catch (IOException e) {, +                throw new SearchContextException(context, "failed to create SearchContextHighlighter", e);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsBuilder.java, +    public HighlightBuilder highlighter() {, +++ b/core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java, +    private HighlightBuilder highlightBuilder;, +        this.highlightBuilder = highlightBuilder;, +     * Gets the hightlighter builder for this request., +    public HighlightBuilder highlighter() {, +                    builder.highlightBuilder = HighlightBuilder.fromXContent(context);, +            this.highlightBuilder.toXContent(builder, params);, +            builder.highlightBuilder = HighlightBuilder.PROTOTYPE.readFrom(in);, +            highlightBuilder.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsBuilder.java, +        public HighlightBuilder highlighter() {, +++ b/core/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +        if (highlighterBuilder.preTags != null) {, +        }, +        if (highlighterBuilder.postTags != null) {, +        }, +        if (highlighterBuilder.order != null) {, +        }, +        if (highlighterBuilder.boundaryChars != null) {, +        }, +        if (highlighterBuilder.highlighterType != null) {, +        }, +        if (highlighterBuilder.fragmenter != null) {, +        }, +        if (highlighterBuilder.options != null) {, +        }, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +import org.elasticsearch.search.highlight.HighlightBuilder;, +import java.io.IOException;, +    private void parseSource(SearchContext context, SearchSourceBuilder source) throws SearchContextException {, +            HighlightBuilder highlightBuilder = source.highlighter();, +                context.highlight(highlightBuilder.build(context.indexShard().getQueryShardContext()));]