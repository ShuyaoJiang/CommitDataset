[+++ b/src/main/java/org/elasticsearch/index/analysis/KeepWordFilterFactory.java, +import org.apache.lucene.util.Version;, + * <p/>, + * <p/>, + * <p/>, + * <p/>, + * <p/>, +                                 Environment env, @Assisted String name, @Assisted Settings settings) {, +        final String[] arrayKeepWords = settings.getAsArray(KEEP_WORDS_KEY, null);, +        if ((arrayKeepWords == null && keepWordsPath == null) || (arrayKeepWords != null && keepWordsPath != null)) {, +            // we don't allow both or none, +++ b/src/main/java/org/elasticsearch/index/analysis/KeepWordFilterFactory.java, +import org.apache.lucene.util.Version;, + * <p/>, + * <p/>, + * <p/>, + * <p/>, + * <p/>, +                                 Environment env, @Assisted String name, @Assisted Settings settings) {, +        final String[] arrayKeepWords = settings.getAsArray(KEEP_WORDS_KEY, null);, +        if ((arrayKeepWords == null && keepWordsPath == null) || (arrayKeepWords != null && keepWordsPath != null)) {, +            // we don't allow both or none, +++ b/src/test/java/org/elasticsearch/index/analysis/KeepFilterFactoryTests.java, +import org.elasticsearch.env.FailedToResolveConfigException;, +    public void testKeepWordsPathSettings() {, +        Settings settings = ImmutableSettings.settingsBuilder(), +                .put("index.analysis.filter.non_broken_keep_filter.type", "keep"), +                .put("index.analysis.filter.non_broken_keep_filter.keep_words_path", "does/not/exists.txt"), +                .build();, +        try {, +            // test our none existing setup is picked up, +            AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);, +            fail("expected an exception due to non existent keep_words_path");, +        } catch (Throwable e) {, +            assertThat(e.getCause(), instanceOf(FailedToResolveConfigException.class));, +        }, +, +        settings = ImmutableSettings.settingsBuilder().put(settings), +                .put("index.analysis.filter.non_broken_keep_filter.keep_words", new String[]{"test"}), +                .build();, +        try {, +            // test our none existing setup is picked up, +            AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);, +            fail("expected an exception indicating that you can't use [keep_words_path] with [keep_words] ");, +        } catch (Throwable e) {, +            assertThat(e.getCause(), instanceOf(ElasticSearchIllegalArgumentException.class));, +        }, +, +    }, +, +    @Test]