[+++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1711508.jar}" {, +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1711508.jar}" {, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/test-framework.policy, +grant codeBase "${codebase.lucene-test-framework-5.4.0-snapshot-1711508.jar}" {, +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1711508.jar}" {, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/test-framework.policy, +grant codeBase "${codebase.lucene-test-framework-5.4.0-snapshot-1711508.jar}" {, +++ /dev/null, +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1711508.jar}" {, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/test-framework.policy, +grant codeBase "${codebase.lucene-test-framework-5.4.0-snapshot-1711508.jar}" {, +++ /dev/null, +++ b/distribution/licenses/lucene-analyzers-common-5.4.0-snapshot-1711508.jar.sha1, +1ce5d6dab63f88bd997c2e465ec47efc2891ba5d, +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1711508.jar}" {, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/test-framework.policy, +grant codeBase "${codebase.lucene-test-framework-5.4.0-snapshot-1711508.jar}" {, +++ /dev/null, +++ b/distribution/licenses/lucene-analyzers-common-5.4.0-snapshot-1711508.jar.sha1, +1ce5d6dab63f88bd997c2e465ec47efc2891ba5d, +++ /dev/null, +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline, +          if (System.getProperty("eclipse.launcher") == null && gradle.startParameter.taskNames.contains('eclipse') == false) {, +          }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1711508.jar}" {, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/test-framework.policy, +grant codeBase "${codebase.lucene-test-framework-5.4.0-snapshot-1711508.jar}" {, +++ /dev/null, +++ b/distribution/licenses/lucene-analyzers-common-5.4.0-snapshot-1711508.jar.sha1, +1ce5d6dab63f88bd997c2e465ec47efc2891ba5d, +++ /dev/null, +++ b/distribution/licenses/lucene-backward-codecs-5.4.0-snapshot-1711508.jar.sha1, +8640d74259f60aa4dada4912c9c3ebe772c9818e, +++ b/CONTRIBUTING.md, +Make sure you have [Gradle](http://gradle.org) installed, as Elasticsearch uses it as its build system. Integration with IntelliJ and Eclipse should work out of the box. Eclipse users can automatically configure their IDE: `File > Import -> Gradle -> Gradle project`. Additionally you will want to ensure that Eclipse is using 2048m of heap by modifying `eclipse.ini` accordingly to avoid GC overhead errors., +++ b/build.gradle, +          // so that eclipse doesn't have circular references, +          // the downside is, if you hack on test-framework, you have to gradle install, +          // the first prop detects eclipse itself, the second detects eclipse from commandline]