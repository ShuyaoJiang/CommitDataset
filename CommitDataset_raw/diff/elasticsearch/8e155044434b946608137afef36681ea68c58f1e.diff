[+++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/version.properties, +lucene            = 7.5.0-snapshot-b9e064b935, +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/version.properties, +lucene            = 7.5.0-snapshot-b9e064b935, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RankEvalIT.java, +import static org.elasticsearch.index.rankeval.EvaluationMetric.filterUnknownDocuments;, +        assertEquals(2, filterUnknownDocuments(amsterdamQueryQuality.getHitsAndRatings()).size());, +        assertEquals(6, filterUnknownDocuments(berlinQueryQuality.getHitsAndRatings()).size());, +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/version.properties, +lucene            = 7.5.0-snapshot-b9e064b935, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RankEvalIT.java, +import static org.elasticsearch.index.rankeval.EvaluationMetric.filterUnknownDocuments;, +        assertEquals(2, filterUnknownDocuments(amsterdamQueryQuality.getHitsAndRatings()).size());, +        assertEquals(6, filterUnknownDocuments(berlinQueryQuality.getHitsAndRatings()).size());, +++ b/distribution/archives/build.gradle, +        with libFiles, +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/version.properties, +lucene            = 7.5.0-snapshot-b9e064b935, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RankEvalIT.java, +import static org.elasticsearch.index.rankeval.EvaluationMetric.filterUnknownDocuments;, +        assertEquals(2, filterUnknownDocuments(amsterdamQueryQuality.getHitsAndRatings()).size());, +        assertEquals(6, filterUnknownDocuments(berlinQueryQuality.getHitsAndRatings()).size());, +++ b/distribution/archives/build.gradle, +        with libFiles, +++ b/distribution/build.gradle, +    libFiles = copySpec {, +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/version.properties, +lucene            = 7.5.0-snapshot-b9e064b935, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RankEvalIT.java, +import static org.elasticsearch.index.rankeval.EvaluationMetric.filterUnknownDocuments;, +        assertEquals(2, filterUnknownDocuments(amsterdamQueryQuality.getHitsAndRatings()).size());, +        assertEquals(6, filterUnknownDocuments(berlinQueryQuality.getHitsAndRatings()).size());, +++ b/distribution/archives/build.gradle, +        with libFiles, +++ b/distribution/build.gradle, +    libFiles = copySpec {, +++ b/distribution/packages/build.gradle, +          with libFiles, +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/version.properties, +lucene            = 7.5.0-snapshot-b9e064b935, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RankEvalIT.java, +import static org.elasticsearch.index.rankeval.EvaluationMetric.filterUnknownDocuments;, +        assertEquals(2, filterUnknownDocuments(amsterdamQueryQuality.getHitsAndRatings()).size());, +        assertEquals(6, filterUnknownDocuments(berlinQueryQuality.getHitsAndRatings()).size());, +++ b/distribution/archives/build.gradle, +        with libFiles, +++ b/distribution/build.gradle, +    libFiles = copySpec {, +++ b/distribution/packages/build.gradle, +          with libFiles, +++ b/docs/Versions.asciidoc, +:lucene_version:        7.5.0, +:lucene_version_path:   7_5_0, +++ b/buildSrc/build.gradle, +if (GradleVersion.current() < GradleVersion.version('3.3')) {, +  throw new GradleException('Gradle 3.3+ is required to build elasticsearch'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/version.properties, +lucene            = 7.5.0-snapshot-b9e064b935, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RankEvalIT.java, +import static org.elasticsearch.index.rankeval.EvaluationMetric.filterUnknownDocuments;, +        assertEquals(2, filterUnknownDocuments(amsterdamQueryQuality.getHitsAndRatings()).size());, +        assertEquals(6, filterUnknownDocuments(berlinQueryQuality.getHitsAndRatings()).size());, +++ b/distribution/archives/build.gradle, +        with libFiles, +++ b/distribution/build.gradle, +    libFiles = copySpec {, +++ b/distribution/packages/build.gradle, +          with libFiles]