[+++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.BytesRef;, +, +import java.util.Arrays;, +            BytesRef br = field.binaryValue();, +            byte[] bytes = Arrays.copyOfRange(br.bytes, br.offset, br.length);, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.BytesRef;, +, +import java.util.Arrays;, +            BytesRef br = field.binaryValue();, +            byte[] bytes = Arrays.copyOfRange(br.bytes, br.offset, br.length);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java, +import org.elasticsearch.ElasticsearchException;, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.BytesRef;, +, +import java.util.Arrays;, +            BytesRef br = field.binaryValue();, +            byte[] bytes = Arrays.copyOfRange(br.bytes, br.offset, br.length);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java, +import org.elasticsearch.ElasticsearchException;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/LatLonPointDVAtomicFieldData.java, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.BytesRef;, +, +import java.util.Arrays;, +            BytesRef br = field.binaryValue();, +            byte[] bytes = Arrays.copyOfRange(br.bytes, br.offset, br.length);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java, +import org.elasticsearch.ElasticsearchException;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/LatLonPointDVAtomicFieldData.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BaseGeoPointFieldMapper.java, +            if (context.indexCreatedVersion().before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +            } else if (indexVersionCreated.onOrAfter(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +                if (indexVersionCreated.before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.BytesRef;, +, +import java.util.Arrays;, +            BytesRef br = field.binaryValue();, +            byte[] bytes = Arrays.copyOfRange(br.bytes, br.offset, br.length);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java, +import org.elasticsearch.ElasticsearchException;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/LatLonPointDVAtomicFieldData.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BaseGeoPointFieldMapper.java, +            if (context.indexCreatedVersion().before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +            } else if (indexVersionCreated.onOrAfter(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +                if (indexVersionCreated.before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/LatLonPointFieldMapper.java, +import org.apache.lucene.document.StoredField;, +import org.elasticsearch.Version;, + * Field Mapper for geo_point types., + *, + * Uses lucene 6 LatLonPoint encoding, +    public static final Version LAT_LON_FIELD_VERSION = Version.V_5_0_0_alpha6;, +        if (fieldType().indexOptions() != IndexOptions.NONE) {, +        if (fieldType().stored()) {, +            context.doc().add(new StoredField(fieldType().name(), point.toString()));, +        }, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.BytesRef;, +, +import java.util.Arrays;, +            BytesRef br = field.binaryValue();, +            byte[] bytes = Arrays.copyOfRange(br.bytes, br.offset, br.length);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java, +import org.elasticsearch.ElasticsearchException;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/LatLonPointDVAtomicFieldData.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BaseGeoPointFieldMapper.java, +            if (context.indexCreatedVersion().before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +            } else if (indexVersionCreated.onOrAfter(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +                if (indexVersionCreated.before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/LatLonPointFieldMapper.java, +import org.apache.lucene.document.StoredField;, +import org.elasticsearch.Version;, + * Field Mapper for geo_point types., + *, + * Uses lucene 6 LatLonPoint encoding, +    public static final Version LAT_LON_FIELD_VERSION = Version.V_5_0_0_alpha6;, +        if (fieldType().indexOptions() != IndexOptions.NONE) {, +        if (fieldType().stored()) {, +            context.doc().add(new StoredField(fieldType().name(), point.toString()));, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java, +import org.elasticsearch.index.mapper.LatLonPointFieldMapper;, +        if (indexVersionCreated.onOrAfter(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.BytesRef;, +, +import java.util.Arrays;, +            BytesRef br = field.binaryValue();, +            byte[] bytes = Arrays.copyOfRange(br.bytes, br.offset, br.length);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractLatLonPointDVIndexFieldData.java, +import org.elasticsearch.ElasticsearchException;, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/plain/LatLonPointDVAtomicFieldData.java, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BaseGeoPointFieldMapper.java, +            if (context.indexCreatedVersion().before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +            } else if (indexVersionCreated.onOrAfter(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {, +                if (indexVersionCreated.before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {]