[+++ b/pom.xml, +        <lucene.maven.version>5.0.0-snapshot-1649544</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1649544</url>, +++ b/pom.xml, +        <lucene.maven.version>5.0.0-snapshot-1649544</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1649544</url>, +++ b/src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java, +    protected void doMerge(IndexWriter writer, MergePolicy.OneMerge merge) throws IOException {, +            super.doMerge(writer, merge);, +++ b/pom.xml, +        <lucene.maven.version>5.0.0-snapshot-1649544</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1649544</url>, +++ b/src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java, +    protected void doMerge(IndexWriter writer, MergePolicy.OneMerge merge) throws IOException {, +            super.doMerge(writer, merge);, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +            return "rate_limited(" + StoreUtils.toString(in) + ", type=" + type.name() + ", rate=" + limiter.getMBPerSec() + ")";, +        public void setMBPerSec(double mbPerSec) {, +            delegate.setMBPerSec(mbPerSec);, +        public double getMBPerSec() {, +            return delegate.getMBPerSec();, +        public long pause(long bytes) throws IOException {, +++ b/pom.xml, +        <lucene.maven.version>5.0.0-snapshot-1649544</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1649544</url>, +++ b/src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java, +    protected void doMerge(IndexWriter writer, MergePolicy.OneMerge merge) throws IOException {, +            super.doMerge(writer, merge);, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +            return "rate_limited(" + StoreUtils.toString(in) + ", type=" + type.name() + ", rate=" + limiter.getMBPerSec() + ")";, +        public void setMBPerSec(double mbPerSec) {, +            delegate.setMBPerSec(mbPerSec);, +        public double getMBPerSec() {, +            return delegate.getMBPerSec();, +        public long pause(long bytes) throws IOException {, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +            actualRateLimiter.setMBPerSec(rate.mbFrac());, +            rateLimiter.setMBPerSec(rate.mbFrac());, +++ b/pom.xml, +        <lucene.maven.version>5.0.0-snapshot-1649544</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1649544</url>, +++ b/src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java, +    protected void doMerge(IndexWriter writer, MergePolicy.OneMerge merge) throws IOException {, +            super.doMerge(writer, merge);, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +            return "rate_limited(" + StoreUtils.toString(in) + ", type=" + type.name() + ", rate=" + limiter.getMBPerSec() + ")";, +        public void setMBPerSec(double mbPerSec) {, +            delegate.setMBPerSec(mbPerSec);, +        public double getMBPerSec() {, +            return delegate.getMBPerSec();, +        public long pause(long bytes) throws IOException {, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +            actualRateLimiter.setMBPerSec(rate.mbFrac());, +            rateLimiter.setMBPerSec(rate.mbFrac());, +++ b/src/main/java/org/elasticsearch/common/util/AbstractArray.java, +import java.util.Collection;, +import java.util.Collections;, +, +    public Collection<Accountable> getChildResources() {, +++ b/pom.xml, +        <lucene.maven.version>5.0.0-snapshot-1649544</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1649544</url>, +++ b/src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java, +    protected void doMerge(IndexWriter writer, MergePolicy.OneMerge merge) throws IOException {, +            super.doMerge(writer, merge);, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +            return "rate_limited(" + StoreUtils.toString(in) + ", type=" + type.name() + ", rate=" + limiter.getMBPerSec() + ")";, +        public void setMBPerSec(double mbPerSec) {, +            delegate.setMBPerSec(mbPerSec);, +        public double getMBPerSec() {, +            return delegate.getMBPerSec();, +        public long pause(long bytes) throws IOException {, +++ b/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +            actualRateLimiter.setMBPerSec(rate.mbFrac());, +            rateLimiter.setMBPerSec(rate.mbFrac());, +++ b/src/main/java/org/elasticsearch/common/util/AbstractArray.java, +import java.util.Collection;, +import java.util.Collections;, +, +    public Collection<Accountable> getChildResources() {, +++ b/src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java, +        public Collection<Accountable> getChildResources() {, +        public Collection<Accountable> getChildResources() {, +        private final FieldsConsumer delegateFieldsConsumer;, +        private final Map<FieldInfo, BloomFilter> bloomFilters = new HashMap<>();, +        private final SegmentWriteState state;, +        private boolean closed = false;, +            if (closed) {, +                return;, +            }, +            closed = true;, +++ b/pom.xml, +        <lucene.maven.version>5.0.0-snapshot-1649544</lucene.maven.version>, +            <url>https://download.elasticsearch.org/lucenesnapshots/1649544</url>, +++ b/src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java, +    protected void doMerge(IndexWriter writer, MergePolicy.OneMerge merge) throws IOException {, +            super.doMerge(writer, merge);, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +            return "rate_limited(" + StoreUtils.toString(in) + ", type=" + type.name() + ", rate=" + limiter.getMBPerSec() + ")";, +        public void setMBPerSec(double mbPerSec) {]