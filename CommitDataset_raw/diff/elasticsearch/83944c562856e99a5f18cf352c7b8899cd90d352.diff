[+++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.object.RootObjectMapper;, +                parseCopyFields(context, fieldMapper, fieldMapper.copyTo().copyToFields());, +        Mapper objectMapper = mapper.getMapper(currentFieldName);, +            ObjectMapper.Dynamic dynamic = mapper.dynamic();, +            if (dynamic == null) {, +                dynamic = dynamicOrDefault(context.root().dynamic());, +            }, +                    // if this is a non root object, then explicitly set the dynamic behavior if set, +                    if (!(mapper instanceof RootObjectMapper) && mapper.dynamic() != ObjectMapper.Defaults.DYNAMIC) {, +                        ((ObjectMapper.Builder) builder).dynamic(mapper.dynamic());, +                    }, +        Mapper mapper = parentMapper.getMapper(lastFieldName);, +            ObjectMapper.Dynamic dynamic = parentMapper.dynamic();, +            if (dynamic == null) {, +                dynamic = dynamicOrDefault(context.root().dynamic());, +            }, +        Mapper mapper = parentMapper.getMapper(currentFieldName);, +        Mapper mapper = parentMapper.getMapper(lastFieldName);, +        ObjectMapper.Dynamic dynamic = parentMapper.dynamic();, +        if (dynamic == null) {, +            dynamic = dynamicOrDefault(context.root().dynamic());, +        }, +        Mapper.Builder builder = null;, +        }, +        if (builder == null) {, +    private static void parseCopyFields(ParseContext context, FieldMapper fieldMapper, List<String> copyToFields) throws IOException {, +                        ObjectMapper.Dynamic dynamic = parent.dynamic();, +                        if (dynamic == null) {, +                            dynamic = dynamicOrDefault(context.root().dynamic());, +                        }, +                                    // if this is a non root object, then explicitly set the dynamic behavior if set, +                                    if (!(parent instanceof RootObjectMapper) && parent.dynamic() != ObjectMapper.Defaults.DYNAMIC) {, +                                        ((ObjectMapper.Builder) builder).dynamic(parent.dynamic());, +                                    }, +                            default:, +                                throw new AssertionError("Unexpected dynamic type " + dynamic);, +    private static ObjectMapper.Dynamic dynamicOrDefault(ObjectMapper.Dynamic dynamic) {, +        return dynamic == null ? ObjectMapper.Dynamic.TRUE : dynamic;, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.object.RootObjectMapper;, +                parseCopyFields(context, fieldMapper, fieldMapper.copyTo().copyToFields());, +        Mapper objectMapper = mapper.getMapper(currentFieldName);, +            ObjectMapper.Dynamic dynamic = mapper.dynamic();, +            if (dynamic == null) {, +                dynamic = dynamicOrDefault(context.root().dynamic());, +            }, +                    // if this is a non root object, then explicitly set the dynamic behavior if set, +                    if (!(mapper instanceof RootObjectMapper) && mapper.dynamic() != ObjectMapper.Defaults.DYNAMIC) {, +                        ((ObjectMapper.Builder) builder).dynamic(mapper.dynamic());, +                    }, +        Mapper mapper = parentMapper.getMapper(lastFieldName);, +            ObjectMapper.Dynamic dynamic = parentMapper.dynamic();, +            if (dynamic == null) {, +                dynamic = dynamicOrDefault(context.root().dynamic());, +            }, +        Mapper mapper = parentMapper.getMapper(currentFieldName);, +        Mapper mapper = parentMapper.getMapper(lastFieldName);, +        ObjectMapper.Dynamic dynamic = parentMapper.dynamic();, +        if (dynamic == null) {, +            dynamic = dynamicOrDefault(context.root().dynamic());, +        }, +        Mapper.Builder builder = null;, +        }, +        if (builder == null) {, +    private static void parseCopyFields(ParseContext context, FieldMapper fieldMapper, List<String> copyToFields) throws IOException {, +                        ObjectMapper.Dynamic dynamic = parent.dynamic();, +                        if (dynamic == null) {, +                            dynamic = dynamicOrDefault(context.root().dynamic());, +                        }, +                                    // if this is a non root object, then explicitly set the dynamic behavior if set, +                                    if (!(parent instanceof RootObjectMapper) && parent.dynamic() != ObjectMapper.Defaults.DYNAMIC) {, +                                        ((ObjectMapper.Builder) builder).dynamic(parent.dynamic());, +                                    }, +                            default:, +                                throw new AssertionError("Unexpected dynamic type " + dynamic);, +    private static ObjectMapper.Dynamic dynamicOrDefault(ObjectMapper.Dynamic dynamic) {, +        return dynamic == null ? ObjectMapper.Dynamic.TRUE : dynamic;, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +        if (!lifecycle.moveToStarted()) {, +            return this;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java, +import org.elasticsearch.index.mapper.object.RootObjectMapper;, +                parseCopyFields(context, fieldMapper, fieldMapper.copyTo().copyToFields());, +        Mapper objectMapper = mapper.getMapper(currentFieldName);, +            ObjectMapper.Dynamic dynamic = mapper.dynamic();, +            if (dynamic == null) {, +                dynamic = dynamicOrDefault(context.root().dynamic());, +            }, +                    // if this is a non root object, then explicitly set the dynamic behavior if set, +                    if (!(mapper instanceof RootObjectMapper) && mapper.dynamic() != ObjectMapper.Defaults.DYNAMIC) {, +                        ((ObjectMapper.Builder) builder).dynamic(mapper.dynamic());, +                    }, +        Mapper mapper = parentMapper.getMapper(lastFieldName);, +            ObjectMapper.Dynamic dynamic = parentMapper.dynamic();, +            if (dynamic == null) {, +                dynamic = dynamicOrDefault(context.root().dynamic());, +            }]