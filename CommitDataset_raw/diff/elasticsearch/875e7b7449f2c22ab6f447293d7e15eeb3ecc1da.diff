[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/fs/FsGateway.java, +        logger.debug("Latest metadata found at index [" + currentIndex + "]");, +            return readMetaData(file);, +, +    private int findLatestIndex(File gatewayHome) {, +        File[] files = gatewayHome.listFiles(new FilenameFilter() {, +            @Override public boolean accept(File dir, String name) {, +                return name.startsWith("metadata-");, +            }, +        });, +, +        int index = -1;, +        for (File file : files) {, +            if (logger.isTraceEnabled()) {, +                logger.trace("[findLatestMetadata]: Processing file [" + file + "]");, +            }, +            String name = file.getName();, +            int fileIndex = Integer.parseInt(name.substring(name.indexOf('-') + 1));, +            if (fileIndex >= index) {, +                // try and read the meta data, +                try {, +                    readMetaData(file);, +                    index = fileIndex;, +                } catch (IOException e) {, +                    logger.warn("[findLatestMetadata]: Failed to read metadata from [" + file + "], ignoring...", e);, +                }, +            }, +        }, +, +        return index;, +    }, +, +    private MetaData readMetaData(File file) throws IOException {, +        FileInputStream fileStream = new FileInputStream(file);, +        JsonParser jp = null;, +        try {, +            jp = Jackson.defaultJsonFactory().createJsonParser(fileStream);, +            return MetaData.Builder.fromJson(jp, settings);, +        } finally {, +            if (jp != null) {, +                try {, +                    jp.close();, +                } catch (Exception e) {, +                    // ignore, +                }, +            }, +            try {, +                fileStream.close();, +            } catch (Exception e) {, +                // ignore, +            }, +        }, +    }]