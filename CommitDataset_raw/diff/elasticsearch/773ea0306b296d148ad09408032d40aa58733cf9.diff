[+++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            FieldMapper<?> fieldMapper = indexService.mapperService().smartNameFieldMapper(request.field());, +                if (fieldMapper.isNumeric()) {, +                    throw new ElasticSearchIllegalArgumentException("Can't process field [" + request.field() + "], Analysis requests are not supported on numeric fields");, +                }, +                , +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            FieldMapper<?> fieldMapper = indexService.mapperService().smartNameFieldMapper(request.field());, +                if (fieldMapper.isNumeric()) {, +                    throw new ElasticSearchIllegalArgumentException("Can't process field [" + request.field() + "], Analysis requests are not supported on numeric fields");, +                }, +                , +++ b/src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java, +    private final char[] buffer;, +        this(reader, numericTokenStream, new char[32], extra);, +        this.buffer = buffer;, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            FieldMapper<?> fieldMapper = indexService.mapperService().smartNameFieldMapper(request.field());, +                if (fieldMapper.isNumeric()) {, +                    throw new ElasticSearchIllegalArgumentException("Can't process field [" + request.field() + "], Analysis requests are not supported on numeric fields");, +                }, +                , +++ b/src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java, +    private final char[] buffer;, +        this(reader, numericTokenStream, new char[32], extra);, +        this.buffer = buffer;, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    , +    boolean isNumeric();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            FieldMapper<?> fieldMapper = indexService.mapperService().smartNameFieldMapper(request.field());, +                if (fieldMapper.isNumeric()) {, +                    throw new ElasticSearchIllegalArgumentException("Can't process field [" + request.field() + "], Analysis requests are not supported on numeric fields");, +                }, +                , +++ b/src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java, +    private final char[] buffer;, +        this(reader, numericTokenStream, new char[32], extra);, +        this.buffer = buffer;, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    , +    boolean isNumeric();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    @Override, +    public boolean isNumeric() {, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            FieldMapper<?> fieldMapper = indexService.mapperService().smartNameFieldMapper(request.field());, +                if (fieldMapper.isNumeric()) {, +                    throw new ElasticSearchIllegalArgumentException("Can't process field [" + request.field() + "], Analysis requests are not supported on numeric fields");, +                }, +                , +++ b/src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java, +    private final char[] buffer;, +        this(reader, numericTokenStream, new char[32], extra);, +        this.buffer = buffer;, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    , +    boolean isNumeric();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    @Override, +    public boolean isNumeric() {, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java, +    , +    @Override, +    public boolean isNumeric() {, +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            FieldMapper<?> fieldMapper = indexService.mapperService().smartNameFieldMapper(request.field());, +                if (fieldMapper.isNumeric()) {, +                    throw new ElasticSearchIllegalArgumentException("Can't process field [" + request.field() + "], Analysis requests are not supported on numeric fields");, +                }, +                , +++ b/src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java, +    private final char[] buffer;, +        this(reader, numericTokenStream, new char[32], extra);, +        this.buffer = buffer;, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +    , +    boolean isNumeric();, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    @Override, +    public boolean isNumeric() {, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java, +    , +    @Override, +    public boolean isNumeric() {, +        return true;, +    }, +++ b/src/test/java/org/elasticsearch/test/integration/indices/analyze/AnalyzeActionTests.java, +import java.io.IOException;]