[+++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +import org.elasticsearch.action.search.SearchType;, +import org.elasticsearch.indices.IndicesRequestCache;, +import org.elasticsearch.search.sort.SortOrder;, +import org.joda.time.DateTime;, +import org.joda.time.chrono.ISOChronology;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSearchResponse;, +, +    public void testHighlightQueryRewriteDatesWithNow() throws Exception {, +        assertAcked(client().admin().indices().prepareCreate("index-1").addMapping("type", "d", "type=date",, +            "field", "type=text,store=true,term_vector=with_positions_offsets"), +            .setSettings("index.number_of_replicas", 0, "index.number_of_shards", 2), +            .get());, +        DateTime now = new DateTime(ISOChronology.getInstanceUTC());, +        indexRandom(true, client().prepareIndex("index-1", "type", "1").setSource("d", now, "field", "hello world"),, +            client().prepareIndex("index-1", "type", "2").setSource("d", now.minusDays(1), "field", "hello"),, +            client().prepareIndex("index-1", "type", "3").setSource("d", now.minusDays(2), "field", "world"));, +        ensureSearchable("index-1");, +        for (int i = 0; i < 5; i++) {, +            final SearchResponse r1 = client().prepareSearch("index-1"), +                .addSort("d", SortOrder.DESC), +                .setTrackScores(true), +                .highlighter(highlight(), +                    .field("field"), +                    .preTags("<x>"), +                    .postTags("</x>"), +                ).setQuery(QueryBuilders.boolQuery().must(, +                    QueryBuilders.rangeQuery("d").gte("now-7d/d").lte("now").includeLower(true).includeUpper(true).boost(1.0f)), +                    .should(QueryBuilders.termQuery("field", "hello"))), +                .get();, +, +            assertSearchResponse(r1);, +            assertThat(r1.getHits().getTotalHits(), equalTo(3L));, +            assertHighlight(r1, 0, "field", 0, 1,, +                equalTo("<x>hello</x> world"));, +        }, +    }]