[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +import static org.elasticsearch.common.collect.Maps.*;, +            throw new ElasticSearchIllegalArgumentException("Alias [" + aliasOrIndex + "] has more than one index associated with it [" + indexAliases.keySet() + "], can't execute a single index op");, +                    throw new ElasticSearchIllegalArgumentException("Alias [" + aliasOrIndex + "] has index routing associated with it [" + aliasMd.indexRouting() + "], and was provided with routing value [" + routing + "], rejecting operation");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +import static org.elasticsearch.common.collect.Maps.*;, +            throw new ElasticSearchIllegalArgumentException("Alias [" + aliasOrIndex + "] has more than one index associated with it [" + indexAliases.keySet() + "], can't execute a single index op");, +                    throw new ElasticSearchIllegalArgumentException("Alias [" + aliasOrIndex + "] has index routing associated with it [" + aliasMd.indexRouting() + "], and was provided with routing value [" + routing + "], rejecting operation");, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/routing/AliasResolveRoutingTests.java, +import static org.elasticsearch.cluster.metadata.AliasAction.*;, +import static org.elasticsearch.common.collect.Maps.*;, +import static org.elasticsearch.common.collect.Sets.*;, +import static org.hamcrest.MatcherAssert.*;, +        try {, +            clusterService.state().metaData().resolveIndexRouting("1", "alias10");, +        } catch (ElasticSearchIllegalArgumentException e) {, +            // all is well, we can't have two mappings, one provided, and one in the alias, +        }]