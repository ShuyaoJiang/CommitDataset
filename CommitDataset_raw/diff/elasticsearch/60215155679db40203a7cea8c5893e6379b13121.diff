[+++ b/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +                        float factor = functionExplanation.getValue();, +                        if (factor > maxBoost) {, +                            factor = maxBoost;, +                        }, +                        float sc = getBoost() * factor;, +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java, +                        float factor = functionExplanation.getValue();, +                        if (factor > maxBoost) {, +                            factor = maxBoost;, +                        }, +                        float sc = getBoost() * factor;, +++ b/src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java, +, +        searchResponse = client.prepareSearch("test"), +                .setQuery(customFiltersScoreQuery(termsQuery("field", "value1", "value2", "value3", "value4")).scoreMode("first"), +                        .add(termFilter("field", "value4"), 2), +                        .add(termFilter("field", "value3"), 3), +                        .add(termFilter("field", "value2"), 4)), +                .setExplain(true), +                .execute().actionGet();, +, +        assertThat(Arrays.toString(searchResponse.shardFailures()), searchResponse.failedShards(), equalTo(0));, +        assertThat(searchResponse.hits().totalHits(), equalTo(4l));, +        assertThat(searchResponse.hits().getAt(0).id(), equalTo("2"));, +        assertThat(searchResponse.hits().getAt(0).score(), equalTo(searchResponse.hits().getAt(0).explanation().getValue()));, +        logger.info("--> Hit[0] {} Explanation {}", searchResponse.hits().getAt(0).id(), searchResponse.hits().getAt(0).explanation());, +        assertThat(searchResponse.hits().getAt(1).id(), equalTo("3"));, +        assertThat(searchResponse.hits().getAt(1).score(), equalTo(searchResponse.hits().getAt(1).explanation().getValue()));, +        assertThat(searchResponse.hits().getAt(2).id(), equalTo("4"));, +        assertThat(searchResponse.hits().getAt(2).score(), equalTo(searchResponse.hits().getAt(2).explanation().getValue()));, +        assertThat(searchResponse.hits().getAt(3).id(), equalTo("1"));, +        assertThat(searchResponse.hits().getAt(3).score(), equalTo(searchResponse.hits().getAt(3).explanation().getValue()));, +, +, +        searchResponse = client.prepareSearch("test"), +                .setQuery(customFiltersScoreQuery(termsQuery("field", "value1", "value2", "value3", "value4")).scoreMode("multiply"), +                        .add(termFilter("field", "value4"), 2), +                        .add(termFilter("field", "value1"), 3), +                        .add(termFilter("color", "red"), 5)), +                .setExplain(true), +                .execute().actionGet();, +, +        assertThat(Arrays.toString(searchResponse.shardFailures()), searchResponse.failedShards(), equalTo(0));, +        assertThat(searchResponse.hits().totalHits(), equalTo(4l));, +        assertThat(searchResponse.hits().getAt(0).id(), equalTo("1"));, +        assertThat(searchResponse.hits().getAt(0).score(), equalTo(searchResponse.hits().getAt(0).explanation().getValue()));, +        logger.info("--> Hit[0] {} Explanation {}", searchResponse.hits().getAt(0).id(), searchResponse.hits().getAt(0).explanation());, +        assertThat(searchResponse.hits().getAt(1).id(), equalTo("3"));, +        assertThat(searchResponse.hits().getAt(1).score(), equalTo(searchResponse.hits().getAt(1).explanation().getValue()));, +        assertThat(searchResponse.hits().getAt(2).id(), equalTo("4"));, +        assertThat(searchResponse.hits().getAt(2).score(), equalTo(searchResponse.hits().getAt(2).explanation().getValue()));, +        assertThat(searchResponse.hits().getAt(3).id(), equalTo("2"));, +        assertThat(searchResponse.hits().getAt(3).score(), equalTo(searchResponse.hits().getAt(3).explanation().getValue()));, +, +]