[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocationCommands.java, +                commands.add(registry.lookup(commandName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(parser));, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocationCommands.java, +                commands.add(registry.lookup(commandName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(parser));, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/ParseFieldRegistry.java, +    public T lookup(String name, ParseFieldMatcher parseFieldMatcher, XContentLocation xContentLocation) {, +            throw new ParsingException(xContentLocation, "no [" + registryName + "] registered for [" + name + "]");, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocationCommands.java, +                commands.add(registry.lookup(commandName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(parser));, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/ParseFieldRegistry.java, +    public T lookup(String name, ParseFieldMatcher parseFieldMatcher, XContentLocation xContentLocation) {, +            throw new ParsingException(xContentLocation, "no [" + registryName + "] registered for [" + name + "]");, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +import java.io.IOException;, +import java.util.Objects;, +, +        QueryBuilder<?> result = indicesQueriesRegistry.lookup(queryName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(this);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocationCommands.java, +                commands.add(registry.lookup(commandName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(parser));, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/ParseFieldRegistry.java, +    public T lookup(String name, ParseFieldMatcher parseFieldMatcher, XContentLocation xContentLocation) {, +            throw new ParsingException(xContentLocation, "no [" + registryName + "] registered for [" + name + "]");, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +import java.io.IOException;, +import java.util.Objects;, +, +        QueryBuilder<?> result = indicesQueriesRegistry.lookup(queryName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(this);, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java, +                            .lookup(currentFieldName, parseContext.getParseFieldMatcher(), parser.getTokenLocation()), +                            scoreFunction = scoreFunctionsRegistry.lookup(currentFieldName, parseContext.getParseFieldMatcher(),, +                                    parser.getTokenLocation()).fromXContent(parseContext);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocationCommands.java, +                commands.add(registry.lookup(commandName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(parser));, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/ParseFieldRegistry.java, +    public T lookup(String name, ParseFieldMatcher parseFieldMatcher, XContentLocation xContentLocation) {, +            throw new ParsingException(xContentLocation, "no [" + registryName + "] registered for [" + name + "]");, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +import java.io.IOException;, +import java.util.Objects;, +, +        QueryBuilder<?> result = indicesQueriesRegistry.lookup(queryName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(this);, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java, +                            .lookup(currentFieldName, parseContext.getParseFieldMatcher(), parser.getTokenLocation()), +                            scoreFunction = scoreFunctionsRegistry.lookup(currentFieldName, parseContext.getParseFieldMatcher(),, +                                    parser.getTokenLocation()).fromXContent(parseContext);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregatorBuilder.java, +            MovAvgModel.AbstractModelParser modelParser = movingAverageMdelParserRegistry.lookup(model, context.getParseFieldMatcher(),, +                    parser.getTokenLocation());, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/command/AllocationCommands.java, +                commands.add(registry.lookup(commandName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(parser));, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/ParseFieldRegistry.java, +    public T lookup(String name, ParseFieldMatcher parseFieldMatcher, XContentLocation xContentLocation) {, +            throw new ParsingException(xContentLocation, "no [" + registryName + "] registered for [" + name + "]");, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +import java.io.IOException;, +import java.util.Objects;, +, +        QueryBuilder<?> result = indicesQueriesRegistry.lookup(queryName, parseFieldMatcher, parser.getTokenLocation()).fromXContent(this);, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java, +                            .lookup(currentFieldName, parseContext.getParseFieldMatcher(), parser.getTokenLocation()), +                            scoreFunction = scoreFunctionsRegistry.lookup(currentFieldName, parseContext.getParseFieldMatcher(),, +                                    parser.getTokenLocation()).fromXContent(parseContext);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregatorBuilder.java, +            MovAvgModel.AbstractModelParser modelParser = movingAverageMdelParserRegistry.lookup(model, context.getParseFieldMatcher(),, +                    parser.getTokenLocation());, +++ b/core/src/test/java/org/elasticsearch/search/SearchModuleTests.java, +            indicesQueriesRegistry.lookup(queryName, ParseFieldMatcher.EMPTY, dummyParser.getTokenLocation());, +            QueryParser<?> queryParser = indicesQueriesRegistry.lookup(queryName, ParseFieldMatcher.STRICT, dummyParser.getTokenLocation());, +                indicesQueriesRegistry.lookup(queryName, ParseFieldMatcher.STRICT, dummyParser.getTokenLocation());]