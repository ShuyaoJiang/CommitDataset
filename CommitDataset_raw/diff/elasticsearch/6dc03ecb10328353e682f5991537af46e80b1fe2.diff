[+++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import java.util.EnumSet;, +, +    private static EnumSet<RecoverySource.Type> INITIAL_RECOVERY_TYPES = EnumSet.of(Type.EMPTY_STORE, Type.LOCAL_SHARDS, Type.SNAPSHOT);, +, +    /**, +     * returns true for recovery types that indicate that a primary is being allocated for the very first time., +     * This recoveries can be controlled by {@link IndexMetaData#INDEX_ROUTING_INITIAL_RECOVERY_GROUP_SETTING}, +     */, +    public static boolean isInitialRecovery(RecoverySource.Type type) {, +           return INITIAL_RECOVERY_TYPES.contains(type);, +    }, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import java.util.EnumSet;, +, +    private static EnumSet<RecoverySource.Type> INITIAL_RECOVERY_TYPES = EnumSet.of(Type.EMPTY_STORE, Type.LOCAL_SHARDS, Type.SNAPSHOT);, +, +    /**, +     * returns true for recovery types that indicate that a primary is being allocated for the very first time., +     * This recoveries can be controlled by {@link IndexMetaData#INDEX_ROUTING_INITIAL_RECOVERY_GROUP_SETTING}, +     */, +    public static boolean isInitialRecovery(RecoverySource.Type type) {, +           return INITIAL_RECOVERY_TYPES.contains(type);, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/FilterAllocationDecider.java, +            if (initialRecoveryFilters != null  &&, +                RecoverySource.isInitialRecovery(shardRouting.recoverySource().getType()) &&, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import java.util.EnumSet;, +, +    private static EnumSet<RecoverySource.Type> INITIAL_RECOVERY_TYPES = EnumSet.of(Type.EMPTY_STORE, Type.LOCAL_SHARDS, Type.SNAPSHOT);, +, +    /**, +     * returns true for recovery types that indicate that a primary is being allocated for the very first time., +     * This recoveries can be controlled by {@link IndexMetaData#INDEX_ROUTING_INITIAL_RECOVERY_GROUP_SETTING}, +     */, +    public static boolean isInitialRecovery(RecoverySource.Type type) {, +           return INITIAL_RECOVERY_TYPES.contains(type);, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/FilterAllocationDecider.java, +            if (initialRecoveryFilters != null  &&, +                RecoverySource.isInitialRecovery(shardRouting.recoverySource().getType()) &&, +++ b/core/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +    protected final int readSize(ByteBuffer reusableBuffer, long position) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import java.util.EnumSet;, +, +    private static EnumSet<RecoverySource.Type> INITIAL_RECOVERY_TYPES = EnumSet.of(Type.EMPTY_STORE, Type.LOCAL_SHARDS, Type.SNAPSHOT);, +, +    /**, +     * returns true for recovery types that indicate that a primary is being allocated for the very first time., +     * This recoveries can be controlled by {@link IndexMetaData#INDEX_ROUTING_INITIAL_RECOVERY_GROUP_SETTING}, +     */, +    public static boolean isInitialRecovery(RecoverySource.Type type) {, +           return INITIAL_RECOVERY_TYPES.contains(type);, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/FilterAllocationDecider.java, +            if (initialRecoveryFilters != null  &&, +                RecoverySource.isInitialRecovery(shardRouting.recoverySource().getType()) &&, +++ b/core/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +    protected final int readSize(ByteBuffer reusableBuffer, long position) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import java.util.EnumSet;, +, +    private static EnumSet<RecoverySource.Type> INITIAL_RECOVERY_TYPES = EnumSet.of(Type.EMPTY_STORE, Type.LOCAL_SHARDS, Type.SNAPSHOT);, +, +    /**, +     * returns true for recovery types that indicate that a primary is being allocated for the very first time., +     * This recoveries can be controlled by {@link IndexMetaData#INDEX_ROUTING_INITIAL_RECOVERY_GROUP_SETTING}, +     */, +    public static boolean isInitialRecovery(RecoverySource.Type type) {, +           return INITIAL_RECOVERY_TYPES.contains(type);, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/FilterAllocationDecider.java, +            if (initialRecoveryFilters != null  &&, +                RecoverySource.isInitialRecovery(shardRouting.recoverySource().getType()) &&, +++ b/core/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +    protected final int readSize(ByteBuffer reusableBuffer, long position) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/index/translog/Translog.java, +++ b/core/src/main/java/org/elasticsearch/index/translog/TranslogSnapshot.java, +final class TranslogSnapshot extends BaseTranslogReader implements Translog.Snapshot {, +    public int totalOperations() {, +    protected Translog.Operation readOperation() throws IOException {, +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RecoverySource.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import java.util.EnumSet;, +]