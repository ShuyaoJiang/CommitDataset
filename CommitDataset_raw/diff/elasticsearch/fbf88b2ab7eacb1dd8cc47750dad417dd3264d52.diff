[+++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        final Transport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +            new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry,, +            new NoneCircuitBreakerService()) {, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        final Transport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +            new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry,, +            new NoneCircuitBreakerService()) {, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TaskManagerTestCase.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +                new MockNioTransport(settings, Version.CURRENT, threadPool, new NetworkService(Collections.emptyList()),, +                    PageCacheRecycler.NON_RECYCLING_INSTANCE, new NamedWriteableRegistry(ClusterModule.getNamedWriteables()),, +                    new NoneCircuitBreakerService()),, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        final Transport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +            new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry,, +            new NoneCircuitBreakerService()) {, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TaskManagerTestCase.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +                new MockNioTransport(settings, Version.CURRENT, threadPool, new NetworkService(Collections.emptyList()),, +                    PageCacheRecycler.NON_RECYCLING_INSTANCE, new NamedWriteableRegistry(ClusterModule.getNamedWriteables()),, +                    new NoneCircuitBreakerService()),, +++ b/server/src/test/java/org/elasticsearch/action/resync/TransportResyncReplicationActionTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +            try (MockNioTransport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +                new NetworkService(emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, new NamedWriteableRegistry(emptyList()),, +                new NoneCircuitBreakerService())) {, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        final Transport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +            new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry,, +            new NoneCircuitBreakerService()) {, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TaskManagerTestCase.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +                new MockNioTransport(settings, Version.CURRENT, threadPool, new NetworkService(Collections.emptyList()),, +                    PageCacheRecycler.NON_RECYCLING_INSTANCE, new NamedWriteableRegistry(ClusterModule.getNamedWriteables()),, +                    new NoneCircuitBreakerService()),, +++ b/server/src/test/java/org/elasticsearch/action/resync/TransportResyncReplicationActionTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +            try (MockNioTransport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +                new NetworkService(emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, new NamedWriteableRegistry(emptyList()),, +                new NoneCircuitBreakerService())) {, +++ b/server/src/test/java/org/elasticsearch/action/support/replication/BroadcastReplicationTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        MockNioTransport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT,, +            threadPool, new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE,, +            new NamedWriteableRegistry(Collections.emptyList()), circuitBreakerService);, +++ b/plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        final Transport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +            new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry,, +            new NoneCircuitBreakerService()) {, +++ b/server/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TaskManagerTestCase.java, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +                new MockNioTransport(settings, Version.CURRENT, threadPool, new NetworkService(Collections.emptyList()),, +                    PageCacheRecycler.NON_RECYCLING_INSTANCE, new NamedWriteableRegistry(ClusterModule.getNamedWriteables()),, +                    new NoneCircuitBreakerService()),, +++ b/server/src/test/java/org/elasticsearch/action/resync/TransportResyncReplicationActionTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +            try (MockNioTransport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +                new NetworkService(emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, new NamedWriteableRegistry(emptyList()),, +                new NoneCircuitBreakerService())) {, +++ b/server/src/test/java/org/elasticsearch/action/support/replication/BroadcastReplicationTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        MockNioTransport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT,, +            threadPool, new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE,, +            new NamedWriteableRegistry(Collections.emptyList()), circuitBreakerService);, +++ b/server/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.util.PageCacheRecycler;, +import org.elasticsearch.transport.nio.MockNioTransport;, +        final Transport transport = new MockNioTransport(Settings.EMPTY, Version.CURRENT, threadPool,, +            new NetworkService(Collections.emptyList()), PageCacheRecycler.NON_RECYCLING_INSTANCE, namedWriteableRegistry,]