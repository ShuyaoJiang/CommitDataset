[+++ b/docs/reference/cluster/stats.asciidoc, +   "status": "green",, +++ b/docs/reference/cluster/stats.asciidoc, +   "status": "green",, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodeResponse.java, +import org.elasticsearch.action.admin.cluster.health.ClusterHealthStatus;, +import org.elasticsearch.common.Nullable;, +    private ClusterHealthStatus clusterStatus;, +    public ClusterStatsNodeResponse(DiscoveryNode node, @Nullable ClusterHealthStatus clusterStatus, NodeInfo nodeInfo, NodeStats nodeStats, ShardStats[] shardsStats) {, +        this.clusterStatus = clusterStatus;, +    /**, +     * Cluster Health Status, only populated on master nodes., +     */, +    @Nullable, +    public ClusterHealthStatus clusterStatus() {, +        return clusterStatus;, +    }, +, +        clusterStatus = null;, +        if (in.readBoolean()) {, +            clusterStatus = ClusterHealthStatus.fromValue(in.readByte());, +        }, +        if (clusterStatus == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeByte(clusterStatus.value());, +        }, +++ b/docs/reference/cluster/stats.asciidoc, +   "status": "green",, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodeResponse.java, +import org.elasticsearch.action.admin.cluster.health.ClusterHealthStatus;, +import org.elasticsearch.common.Nullable;, +    private ClusterHealthStatus clusterStatus;, +    public ClusterStatsNodeResponse(DiscoveryNode node, @Nullable ClusterHealthStatus clusterStatus, NodeInfo nodeInfo, NodeStats nodeStats, ShardStats[] shardsStats) {, +        this.clusterStatus = clusterStatus;, +    /**, +     * Cluster Health Status, only populated on master nodes., +     */, +    @Nullable, +    public ClusterHealthStatus clusterStatus() {, +        return clusterStatus;, +    }, +, +        clusterStatus = null;, +        if (in.readBoolean()) {, +            clusterStatus = ClusterHealthStatus.fromValue(in.readByte());, +        }, +        if (clusterStatus == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeByte(clusterStatus.value());, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsResponse.java, +import org.elasticsearch.action.admin.cluster.health.ClusterHealthStatus;, +import java.util.Locale;, +    ClusterHealthStatus status;, +        for (ClusterStatsNodeResponse response : nodes) {, +            // only the master node populates the status, +            if (response.clusterStatus() != null) {, +                status = response.clusterStatus();, +                break;, +            }, +        }, +    public ClusterHealthStatus getStatus() {, +        return this.status;, +    }, +, +        status = null;, +        if (in.readBoolean()) {, +            // it may be that the master switched on us while doing the operation. In this case the status may be null., +            status = ClusterHealthStatus.fromValue(in.readByte());, +        }, +        if (status == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeByte(status.value());, +        }, +        static final XContentBuilderString STATUS = new XContentBuilderString("status");, +        if (status != null) {, +            builder.field(Fields.STATUS, status.name().toLowerCase(Locale.ROOT));, +        }, +++ b/docs/reference/cluster/stats.asciidoc, +   "status": "green",, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodeResponse.java, +import org.elasticsearch.action.admin.cluster.health.ClusterHealthStatus;, +import org.elasticsearch.common.Nullable;, +    private ClusterHealthStatus clusterStatus;, +    public ClusterStatsNodeResponse(DiscoveryNode node, @Nullable ClusterHealthStatus clusterStatus, NodeInfo nodeInfo, NodeStats nodeStats, ShardStats[] shardsStats) {, +        this.clusterStatus = clusterStatus;, +    /**, +     * Cluster Health Status, only populated on master nodes., +     */, +    @Nullable, +    public ClusterHealthStatus clusterStatus() {, +        return clusterStatus;, +    }, +]