[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("  - skip:"), +                current.println("      features: always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("  - skip:"), +                current.println("      features: always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit/), +            patterns.put('norelease', /norelease/), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("  - skip:"), +                current.println("      features: always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit/), +            patterns.put('norelease', /norelease/), +++ b/client/rest/src/main/java/org/elasticsearch/client/ResponseListener.java, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("  - skip:"), +                current.println("      features: always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit/), +            patterns.put('norelease', /norelease/), +++ b/client/rest/src/main/java/org/elasticsearch/client/ResponseListener.java, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_beta1_ID = 2000001;, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final int V_2_0_0_beta2_ID = 2000002;, +    public static final Version V_2_0_0_beta2 = new Version(V_2_0_0_beta2_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final int V_2_0_0_rc1_ID = 2000051;, +    public static final Version V_2_0_0_rc1 = new Version(V_2_0_0_rc1_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +            case V_2_0_0_rc1_ID:, +                return V_2_0_0_rc1;, +            case V_2_0_0_beta2_ID:, +                return V_2_0_0_beta2;, +            case V_2_0_0_beta1_ID:, +                return V_2_0_0_beta1;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("  - skip:"), +                current.println("      features: always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit/), +            patterns.put('norelease', /norelease/), +++ b/client/rest/src/main/java/org/elasticsearch/client/ResponseListener.java, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_beta1_ID = 2000001;, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final int V_2_0_0_beta2_ID = 2000002;, +    public static final Version V_2_0_0_beta2 = new Version(V_2_0_0_beta2_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final int V_2_0_0_rc1_ID = 2000051;, +    public static final Version V_2_0_0_rc1 = new Version(V_2_0_0_rc1_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +            case V_2_0_0_rc1_ID:, +                return V_2_0_0_rc1;, +            case V_2_0_0_beta2_ID:, +                return V_2_0_0_beta2;, +            case V_2_0_0_beta1_ID:, +                return V_2_0_0_beta1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListener.java, +import java.io.IOException;, +, +    /** A consumer interface which allows throwing checked exceptions. */, +    @FunctionalInterface, +    interface CheckedConsumer<T> {, +        void accept(T t) throws Exception;, +    }, +, +    static <Response> ActionListener<Response> wrap(CheckedConsumer<Response> onResponse, Consumer<Exception> onFailure) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("  - skip:"), +                current.println("      features: always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit/), +            patterns.put('norelease', /norelease/), +++ b/client/rest/src/main/java/org/elasticsearch/client/ResponseListener.java, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_2_0_0_beta1_ID = 2000001;, +    public static final Version V_2_0_0_beta1 = new Version(V_2_0_0_beta1_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final int V_2_0_0_beta2_ID = 2000002;, +    public static final Version V_2_0_0_beta2 = new Version(V_2_0_0_beta2_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final int V_2_0_0_rc1_ID = 2000051;, +    public static final Version V_2_0_0_rc1 = new Version(V_2_0_0_rc1_ID, org.apache.lucene.util.Version.LUCENE_5_2_1);, +            case V_2_0_0_rc1_ID:, +                return V_2_0_0_rc1;, +            case V_2_0_0_beta2_ID:, +                return V_2_0_0_beta2;, +            case V_2_0_0_beta1_ID:, +                return V_2_0_0_beta1;, +++ b/core/src/main/java/org/elasticsearch/action/ActionListener.java, +import java.io.IOException;, +, +    /** A consumer interface which allows throwing checked exceptions. */, +    @FunctionalInterface, +    interface CheckedConsumer<T> {, +        void accept(T t) throws Exception;, +    }, +, +    static <Response> ActionListener<Response> wrap(CheckedConsumer<Response> onResponse, Consumer<Exception> onFailure) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/get/TransportGetTaskAction.java, +            getFinishedTaskFromIndex(thisTask, request, listener);, +            listener.onFailure(new ResourceNotFoundException("task [{}] isn't running or stored its results", response.getId()));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy]