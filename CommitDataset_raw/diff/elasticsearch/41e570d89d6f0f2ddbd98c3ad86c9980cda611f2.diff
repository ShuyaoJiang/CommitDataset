[+++ b/plugins/client/groovy/src/main/groovy/org/elasticsearch/groovy/client/GClusterAdminClient.groovy, +import org.elasticsearch.client.action.admin.cluster.health.ClusterHealthRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.info.NodesInfoRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.restart.NodesRestartRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.shutdown.NodesShutdownRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.stats.NodesStatsRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.state.ClusterStateRequestBuilder, +    ClusterHealthRequestBuilder prepareHealth(String... indices) {, +        clusterAdminClient.prepareHealth(indices), +    }, +, +    ClusterStateRequestBuilder prepareState() {, +        clusterAdminClient.prepareState(), +    }, +, +    NodesInfoRequestBuilder prepareNodesInfo(String... nodesIds) {, +        clusterAdminClient.prepareNodesInfo(nodesIds), +    }, +, +    NodesStatsRequestBuilder prepareNodesStats(String... nodesIds) {, +        clusterAdminClient.prepareNodesStats(nodesIds), +    }, +, +    NodesShutdownRequestBuilder prepareNodesShutdown(String... nodesIds) {, +        clusterAdminClient.prepareNodesShutdown(nodesIds), +    }, +, +    NodesRestartRequestBuilder prepareNodesRestart(String... nodesIds) {, +        clusterAdminClient.prepareNodesRestart(nodesIds), +    }, +, +++ b/plugins/client/groovy/src/main/groovy/org/elasticsearch/groovy/client/GClusterAdminClient.groovy, +import org.elasticsearch.client.action.admin.cluster.health.ClusterHealthRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.info.NodesInfoRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.restart.NodesRestartRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.shutdown.NodesShutdownRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.node.stats.NodesStatsRequestBuilder, +import org.elasticsearch.client.action.admin.cluster.state.ClusterStateRequestBuilder, +    ClusterHealthRequestBuilder prepareHealth(String... indices) {, +        clusterAdminClient.prepareHealth(indices), +    }, +, +    ClusterStateRequestBuilder prepareState() {, +        clusterAdminClient.prepareState(), +    }, +, +    NodesInfoRequestBuilder prepareNodesInfo(String... nodesIds) {, +        clusterAdminClient.prepareNodesInfo(nodesIds), +    }, +, +    NodesStatsRequestBuilder prepareNodesStats(String... nodesIds) {, +        clusterAdminClient.prepareNodesStats(nodesIds), +    }, +, +    NodesShutdownRequestBuilder prepareNodesShutdown(String... nodesIds) {, +        clusterAdminClient.prepareNodesShutdown(nodesIds), +    }, +, +    NodesRestartRequestBuilder prepareNodesRestart(String... nodesIds) {, +        clusterAdminClient.prepareNodesRestart(nodesIds), +    }, +, +++ b/plugins/client/groovy/src/main/groovy/org/elasticsearch/groovy/client/GIndicesAdminClient.groovy, +import org.elasticsearch.client.action.admin.indices.alias.IndicesAliasesRequestBuilder, +import org.elasticsearch.client.action.admin.indices.cache.clear.ClearIndicesCacheRequestBuilder, +import org.elasticsearch.client.action.admin.indices.create.CreateIndexRequestBuilder, +import org.elasticsearch.client.action.admin.indices.delete.DeleteIndexRequestBuilder, +import org.elasticsearch.client.action.admin.indices.flush.FlushRequestBuilder, +import org.elasticsearch.client.action.admin.indices.gateway.snapshot.GatewaySnapshotRequestBuilder, +import org.elasticsearch.client.action.admin.indices.mapping.put.PutMappingRequestBuilder, +import org.elasticsearch.client.action.admin.indices.optimize.OptimizeRequestBuilder, +import org.elasticsearch.client.action.admin.indices.refresh.RefreshRequestBuilder, +import org.elasticsearch.client.action.admin.indices.status.IndicesStatusRequestBuilder, +        CreateIndexRequestBuilder.metaClass.setSettings = {Closure c ->, +            delegate.setSettings(new GXContentBuilder().buildAsString(c)), +        }, +        CreateIndexRequestBuilder.metaClass.settings = {Closure c ->, +            delegate.setSettings(new GXContentBuilder().buildAsString(c)), +        }, +        CreateIndexRequestBuilder.metaClass.addMapping = {String type, Closure c ->, +            delegate.addMapping(type, new GXContentBuilder().buildAsString(c)), +        }, +        PutMappingRequestBuilder.metaClass.setSource = {Closure c ->, +            delegate.setSource(new GXContentBuilder().buildAsString(c)), +        }, +        PutMappingRequestBuilder.metaClass.source = {Closure c ->, +            delegate.setSource(new GXContentBuilder().buildAsString(c)), +        }, +    IndicesStatusRequestBuilder prepareStatus(String... indices) {, +        indicesAdminClient.prepareStatus(indices), +    }, +, +    CreateIndexRequestBuilder prepareCreate(String index) {, +        indicesAdminClient.prepareCreate(index), +    }, +, +    DeleteIndexRequestBuilder prepareDelete(String index) {, +        indicesAdminClient.prepareDelete(index), +    }, +]