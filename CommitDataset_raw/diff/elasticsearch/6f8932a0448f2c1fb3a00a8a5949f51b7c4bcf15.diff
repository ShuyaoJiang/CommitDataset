[+++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +                return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + value);, +            return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + values);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +                return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + value);, +            return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + values);, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java, +            return Queries.newMatchNoDocsQuery("Missing types in " + NAME);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +                return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + value);, +            return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + values);, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java, +            return Queries.newMatchNoDocsQuery("Missing types in " + NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +             query = Queries.newMatchNoDocsQuery("Missing ids in " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +                return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + value);, +            return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + values);, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java, +            return Queries.newMatchNoDocsQuery("Missing types in " + NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +             query = Queries.newMatchNoDocsQuery("Missing ids in " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchNoneQueryBuilder.java, +        return Queries.newMatchNoDocsQuery("User requested " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +                return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + value);, +            return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + values);, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java, +            return Queries.newMatchNoDocsQuery("Missing types in " + NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +             query = Queries.newMatchNoDocsQuery("Missing ids in " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchNoneQueryBuilder.java, +        return Queries.newMatchNoDocsQuery("User requested " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +            return Queries.newMatchNoDocsQuery("No query left after rewrite.");, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +                return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + value);, +            return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + values);, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java, +            return Queries.newMatchNoDocsQuery("Missing types in " + NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +             query = Queries.newMatchNoDocsQuery("Missing ids in " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchNoneQueryBuilder.java, +        return Queries.newMatchNoDocsQuery("User requested " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +            return Queries.newMatchNoDocsQuery("No query left after rewrite.");, +++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +            return Queries.newMatchNoDocsQuery("No terms supplied for " + MultiPhrasePrefixQuery.class.getName());, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java, +    public static Query newMatchNoDocsQuery(String reason) {, +        return new MatchNoDocsQuery(reason);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java, +                return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + value);, +            return Queries.newMatchNoDocsQuery("Index didn't match. Index queried: " + context.index().getName() + " vs. " + values);, +++ b/core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java, +            return Queries.newMatchNoDocsQuery("Missing types in " + NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +             query = Queries.newMatchNoDocsQuery("Missing ids in " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchNoneQueryBuilder.java, +        return Queries.newMatchNoDocsQuery("User requested " + this.getName());, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java]