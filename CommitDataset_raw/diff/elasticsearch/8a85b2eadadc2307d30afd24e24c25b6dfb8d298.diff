[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                        'X-Compile-Elasticsearch-Version': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                        'X-Compile-Elasticsearch-Version': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +import org.elasticsearch.gradle.Version, +            '\\{version\\}': Version.fromString(VersionProperties.elasticsearch).toString(),, +            '\\{qualified_version\\}': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                        'X-Compile-Elasticsearch-Version': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +import org.elasticsearch.gradle.Version, +            '\\{version\\}': Version.fromString(VersionProperties.elasticsearch).toString(),, +            '\\{qualified_version\\}': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +import org.elasticsearch.gradle.Version, +            'version': extension.version,, +            'elasticsearchVersion': Version.fromString(VersionProperties.elasticsearch).toString(),, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                        'X-Compile-Elasticsearch-Version': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +import org.elasticsearch.gradle.Version, +            '\\{version\\}': Version.fromString(VersionProperties.elasticsearch).toString(),, +            '\\{qualified_version\\}': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +import org.elasticsearch.gradle.Version, +            'version': extension.version,, +            'elasticsearchVersion': Version.fromString(VersionProperties.elasticsearch).toString(),, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            String version = project.extensions.esvagrant.upgradeFromVersion, +            if (project.bwcVersions.unreleased.contains(project.extensions.esvagrant.upgradeFromVersion)) {, +                version += "-SNAPSHOT", +            }, +            contents version, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                        'X-Compile-Elasticsearch-Version': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +import org.elasticsearch.gradle.Version, +            '\\{version\\}': Version.fromString(VersionProperties.elasticsearch).toString(),, +            '\\{qualified_version\\}': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +import org.elasticsearch.gradle.Version, +            'version': extension.version,, +            'elasticsearchVersion': Version.fromString(VersionProperties.elasticsearch).toString(),, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            String version = project.extensions.esvagrant.upgradeFromVersion, +            if (project.bwcVersions.unreleased.contains(project.extensions.esvagrant.upgradeFromVersion)) {, +                version += "-SNAPSHOT", +            }, +            contents version, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(mainResponse.getBuild().getQualifiedVersion(), ml.nativeCodeInfo().get("version").toString());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                        'X-Compile-Elasticsearch-Version': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +import org.elasticsearch.gradle.Version, +            '\\{version\\}': Version.fromString(VersionProperties.elasticsearch).toString(),, +            '\\{qualified_version\\}': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +import org.elasticsearch.gradle.Version, +            'version': extension.version,, +            'elasticsearchVersion': Version.fromString(VersionProperties.elasticsearch).toString(),, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            String version = project.extensions.esvagrant.upgradeFromVersion, +            if (project.bwcVersions.unreleased.contains(project.extensions.esvagrant.upgradeFromVersion)) {, +                version += "-SNAPSHOT", +            }, +            contents version, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(mainResponse.getBuild().getQualifiedVersion(), ml.nativeCodeInfo().get("version").toString());, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +                String.format(Locale.ROOT, "%s/%s-%s-%s.zip", baseUrl, pluginId, platform, Build.CURRENT.getQualifiedVersion());, +        return String.format(Locale.ROOT, "%s/%s-%s.zip", baseUrl, pluginId, Build.CURRENT.getQualifiedVersion());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +                        'X-Compile-Elasticsearch-Version': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +import org.elasticsearch.gradle.Version, +            '\\{version\\}': Version.fromString(VersionProperties.elasticsearch).toString(),, +            '\\{qualified_version\\}': VersionProperties.elasticsearch,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +import org.elasticsearch.gradle.Version, +            'version': extension.version,, +            'elasticsearchVersion': Version.fromString(VersionProperties.elasticsearch).toString(),, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            String version = project.extensions.esvagrant.upgradeFromVersion, +            if (project.bwcVersions.unreleased.contains(project.extensions.esvagrant.upgradeFromVersion)) {, +                version += "-SNAPSHOT", +            }, +            contents version, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/PingAndInfoIT.java, +        assertEquals(mainResponse.getBuild().getQualifiedVersion(), ml.nativeCodeInfo().get("version").toString());, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +                String.format(Locale.ROOT, "%s/%s-%s-%s.zip", baseUrl, pluginId, platform, Build.CURRENT.getQualifiedVersion());, +        return String.format(Locale.ROOT, "%s/%s-%s.zip", baseUrl, pluginId, Build.CURRENT.getQualifiedVersion());, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +        String url = "https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-icu/analysis-icu-" +, +            Build.CURRENT.getQualifiedVersion() + ".zip";, +                Build.CURRENT.getQualifiedVersion());, +                Build.CURRENT.getQualifiedVersion());, +            + Build.CURRENT.getQualifiedVersion() + ".zip";]