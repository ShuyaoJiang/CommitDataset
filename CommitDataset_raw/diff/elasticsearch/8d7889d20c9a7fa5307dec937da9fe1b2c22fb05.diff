[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            case "ip":, +                return DataType.IP;, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            case "ip":, +                return DataType.IP;, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java, +import org.elasticsearch.common.network.InetAddresses;, +            case IP:, +                return conversionToIp(from);, +    private static Conversion conversionToIp(DataType from) {, +        if (from.isString()) {, +            return Conversion.STRING_TO_IP;, +        }, +        return null;, +    }, +, +        BOOL_TO_LONG(fromBool(value -> value ? 1L : 0L)),, +, +        STRING_TO_IP(o -> {, +            if (!InetAddresses.isInetAddress(o.toString())) {, +                throw new SqlIllegalArgumentException( "[" + o + "] is not a valid IPv4 or IPv6 address");, +            }, +            return o;, +        });, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            case "ip":, +                return DataType.IP;, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java, +import org.elasticsearch.common.network.InetAddresses;, +            case IP:, +                return conversionToIp(from);, +    private static Conversion conversionToIp(DataType from) {, +        if (from.isString()) {, +            return Conversion.STRING_TO_IP;, +        }, +        return null;, +    }, +, +        BOOL_TO_LONG(fromBool(value -> value ? 1L : 0L)),, +, +        STRING_TO_IP(o -> {, +            if (!InetAddresses.isInetAddress(o.toString())) {, +                throw new SqlIllegalArgumentException( "[" + o + "] is not a valid IPv4 or IPv6 address");, +            }, +            return o;, +        });, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/DataTypeConversionTests.java, +import org.elasticsearch.xpack.sql.expression.Literal;, +import static org.elasticsearch.xpack.sql.tree.Location.EMPTY;, +, +, +    public void testStringToIp() {, +        Conversion conversion = DataTypeConversion.conversionFor(DataType.KEYWORD, DataType.IP);, +        assertNull(conversion.convert(null));, +        assertEquals("192.168.1.1", conversion.convert("192.168.1.1"));, +        Exception e = expectThrows(SqlIllegalArgumentException.class, () -> conversion.convert("10.1.1.300"));, +        assertEquals("[10.1.1.300] is not a valid IPv4 or IPv6 address", e.getMessage());, +    }, +, +    public void testIpToString() {, +        Conversion ipToString = DataTypeConversion.conversionFor(DataType.IP, DataType.KEYWORD);, +        assertEquals("10.0.0.1", ipToString.convert(new Literal(EMPTY, "10.0.0.1", DataType.IP)));, +        Conversion stringToIp = DataTypeConversion.conversionFor(DataType.KEYWORD, DataType.IP);, +        assertEquals("10.0.0.1", ipToString.convert(stringToIp.convert(Literal.of(EMPTY, "10.0.0.1"))));, +    }, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/ExpressionBuilder.java, +            case "ip":, +                return DataType.IP;, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java, +import org.elasticsearch.common.network.InetAddresses;, +            case IP:, +                return conversionToIp(from);, +    private static Conversion conversionToIp(DataType from) {, +        if (from.isString()) {, +            return Conversion.STRING_TO_IP;, +        }, +        return null;, +    }, +, +        BOOL_TO_LONG(fromBool(value -> value ? 1L : 0L)),, +, +        STRING_TO_IP(o -> {, +            if (!InetAddresses.isInetAddress(o.toString())) {, +                throw new SqlIllegalArgumentException( "[" + o + "] is not a valid IPv4 or IPv6 address");, +            }, +            return o;, +        });, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/DataTypeConversionTests.java, +import org.elasticsearch.xpack.sql.expression.Literal;, +import static org.elasticsearch.xpack.sql.tree.Location.EMPTY;, +, +, +    public void testStringToIp() {, +        Conversion conversion = DataTypeConversion.conversionFor(DataType.KEYWORD, DataType.IP);, +        assertNull(conversion.convert(null));, +        assertEquals("192.168.1.1", conversion.convert("192.168.1.1"));, +        Exception e = expectThrows(SqlIllegalArgumentException.class, () -> conversion.convert("10.1.1.300"));, +        assertEquals("[10.1.1.300] is not a valid IPv4 or IPv6 address", e.getMessage());, +    }]