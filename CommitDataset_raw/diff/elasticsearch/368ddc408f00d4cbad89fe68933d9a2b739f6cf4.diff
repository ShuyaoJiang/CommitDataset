[+++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java, +        String type = mapperService.documentMapper().type();, +++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java, +        String type = mapperService.documentMapper().type();, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +        DocumentMapper mapper = indexService.mapperService().documentMapper();, +            typeIntersection = mapper == null, +                    ? Collections.emptySet(), +                    : Collections.singleton(mapper.type());, +            typeIntersection = mapper != null && Regex.simpleMatch(request.types(), mapper.type()), +                    ? Collections.singleton(mapper.type()), +                    : Collections.emptySet();, +++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java, +        String type = mapperService.documentMapper().type();, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +        DocumentMapper mapper = indexService.mapperService().documentMapper();, +            typeIntersection = mapper == null, +                    ? Collections.emptySet(), +                    : Collections.singleton(mapper.type());, +            typeIntersection = mapper != null && Regex.simpleMatch(request.types(), mapper.type()), +                    ? Collections.singleton(mapper.type()), +                    : Collections.emptySet();, +++ b/server/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +        final DocumentMapper mapper = mapperService.documentMapper();, +        if (mapper != null) {, +            type = mapper.type();, +++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java, +        String type = mapperService.documentMapper().type();, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +        DocumentMapper mapper = indexService.mapperService().documentMapper();, +            typeIntersection = mapper == null, +                    ? Collections.emptySet(), +                    : Collections.singleton(mapper.type());, +            typeIntersection = mapper != null && Regex.simpleMatch(request.types(), mapper.type()), +                    ? Collections.singleton(mapper.type()), +                    : Collections.emptySet();, +++ b/server/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +        final DocumentMapper mapper = mapperService.documentMapper();, +        if (mapper != null) {, +            type = mapper.type();, +++ b/server/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +            DocumentMapper mapper = mapperService.documentMapper();, +            type = mapper == null ? null : mapper.type();, +        if (type != null) {, +            Term uidTerm = mapperService.createUidTerm(type, id);, +                get = indexShard.get(new Engine.Get(realtime, readFromTranslog, type, id, uidTerm), +                if (get.exists() == false) {, +++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java, +        String type = mapperService.documentMapper().type();, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +        DocumentMapper mapper = indexService.mapperService().documentMapper();, +            typeIntersection = mapper == null, +                    ? Collections.emptySet(), +                    : Collections.singleton(mapper.type());, +            typeIntersection = mapper != null && Regex.simpleMatch(request.types(), mapper.type()), +                    ? Collections.singleton(mapper.type()), +                    : Collections.emptySet();, +++ b/server/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +        final DocumentMapper mapper = mapperService.documentMapper();, +        if (mapper != null) {, +            type = mapper.type();, +++ b/server/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +            DocumentMapper mapper = mapperService.documentMapper();, +            type = mapper == null ? null : mapper.type();, +        if (type != null) {, +            Term uidTerm = mapperService.createUidTerm(type, id);, +                get = indexShard.get(new Engine.Get(realtime, readFromTranslog, type, id, uidTerm), +                if (get.exists() == false) {, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +++ b/modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java, +        String type = mapperService.documentMapper().type();, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +        DocumentMapper mapper = indexService.mapperService().documentMapper();, +            typeIntersection = mapper == null, +                    ? Collections.emptySet(), +                    : Collections.singleton(mapper.type());, +            typeIntersection = mapper != null && Regex.simpleMatch(request.types(), mapper.type()), +                    ? Collections.singleton(mapper.type()), +                    : Collections.emptySet();, +++ b/server/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +        final DocumentMapper mapper = mapperService.documentMapper();, +        if (mapper != null) {, +            type = mapper.type();, +++ b/server/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +            DocumentMapper mapper = mapperService.documentMapper();, +            type = mapper == null ? null : mapper.type();, +        if (type != null) {, +            Term uidTerm = mapperService.createUidTerm(type, id);, +                get = indexShard.get(new Engine.Get(realtime, readFromTranslog, type, id, uidTerm), +                if (get.exists() == false) {, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +                Function<MapperService, String> typeFunction = mapperService -> mapperService.documentMapper().type();, +            DocumentMapper mapper = context.getMapperService().documentMapper();, +            if (mapper == null) {, +            BytesRef indexType = indexedValueForSearch(mapper.type());]