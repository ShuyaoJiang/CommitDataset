[+++ b/README.md, +* `protocol`: The protocol to use (`http` or `https`). Defaults to value of `cloud.aws.protocol` or `cloud.aws.s3.protocol`., +If you are using any S3 api compatible service, you can set a global endpoint by setting `cloud.aws.s3.endpoint`, +to your URL provider. Note that this setting will be used for all S3 repositories., +, +Different `endpoint`, `region` and `protocol` settings can be set on a per-repository basis (see [S3 Repository](#s3-repository) section for detail)., +++ b/README.md, +* `protocol`: The protocol to use (`http` or `https`). Defaults to value of `cloud.aws.protocol` or `cloud.aws.s3.protocol`., +If you are using any S3 api compatible service, you can set a global endpoint by setting `cloud.aws.s3.endpoint`, +to your URL provider. Note that this setting will be used for all S3 repositories., +, +Different `endpoint`, `region` and `protocol` settings can be set on a per-repository basis (see [S3 Repository](#s3-repository) section for detail)., +++ b/src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java, +        return getClient(endpoint, null, account, key, null);, +            protocol = componentSettings.get("protocol", "https").toLowerCase();, +            protocol = componentSettings.get("s3.protocol", protocol).toLowerCase();, +++ b/README.md, +* `protocol`: The protocol to use (`http` or `https`). Defaults to value of `cloud.aws.protocol` or `cloud.aws.s3.protocol`., +If you are using any S3 api compatible service, you can set a global endpoint by setting `cloud.aws.s3.endpoint`, +to your URL provider. Note that this setting will be used for all S3 repositories., +, +Different `endpoint`, `region` and `protocol` settings can be set on a per-repository basis (see [S3 Repository](#s3-repository) section for detail)., +++ b/src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java, +        return getClient(endpoint, null, account, key, null);, +            protocol = componentSettings.get("protocol", "https").toLowerCase();, +            protocol = componentSettings.get("s3.protocol", protocol).toLowerCase();, +++ b/src/main/java/org/elasticsearch/repositories/s3/S3Repository.java, +        String protocol = repositorySettings.settings().get("protocol", componentSettings.get("protocol"));, +++ b/README.md, +* `protocol`: The protocol to use (`http` or `https`). Defaults to value of `cloud.aws.protocol` or `cloud.aws.s3.protocol`., +If you are using any S3 api compatible service, you can set a global endpoint by setting `cloud.aws.s3.endpoint`, +to your URL provider. Note that this setting will be used for all S3 repositories., +, +Different `endpoint`, `region` and `protocol` settings can be set on a per-repository basis (see [S3 Repository](#s3-repository) section for detail)., +++ b/src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java, +        return getClient(endpoint, null, account, key, null);, +            protocol = componentSettings.get("protocol", "https").toLowerCase();, +            protocol = componentSettings.get("s3.protocol", protocol).toLowerCase();, +++ b/src/main/java/org/elasticsearch/repositories/s3/S3Repository.java, +        String protocol = repositorySettings.settings().get("protocol", componentSettings.get("protocol"));, +++ b/src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java, +                        .put("bucket", bucketSettings.get("bucket")), +                        .put("base_path", basePath), +                settings.getByPrefix("repositories.s3.remote-bucket."),, +                settings.getByPrefix("repositories.s3.external-bucket.")]