[+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            if (asyncFlushRunning.compareAndSet(false, true)) { // we can't use a lock here since we "release" in a different thread, +                if (shouldFlush() == false) {, +                    // we have to check again since otherwise there is a race when a thread passes, +                    // the first shouldFlush() check next to another thread which flushes fast enough, +                    // to finish before the current thread could flip the asyncFlushRunning flag., +                    // in that situation we have an extra unexpected flush., +                    asyncFlushRunning.compareAndSet(true, false);, +                } else {, +, +        }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +            if (asyncFlushRunning.compareAndSet(false, true)) { // we can't use a lock here since we "release" in a different thread, +                if (shouldFlush() == false) {, +                    // we have to check again since otherwise there is a race when a thread passes, +                    // the first shouldFlush() check next to another thread which flushes fast enough, +                    // to finish before the current thread could flip the asyncFlushRunning flag., +                    // in that situation we have an extra unexpected flush., +                    asyncFlushRunning.compareAndSet(true, false);, +                } else {, +, +        }, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +        assertEquals(total + 1, shard.flushStats().getTotal());]