[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask, +import org.gradle.api.file.FileCollection, +import org.gradle.api.tasks.JavaExec, +import org.gradle.api.tasks.StopExecutionException, +            project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        ], +, +        // Configure it but don't add it as a dependency yet, +        configureForbiddenApisCli(project), +, +    private static Task configureForbiddenApisCli(Project project) {, +        project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar 'de.thetaphi:forbiddenapis:2.5', +        }, +        Task forbiddenApisCli = project.tasks.create('forbiddenApisCli'), +, +        project.sourceSets.forEach { sourceSet ->, +            forbiddenApisCli.dependsOn(, +                project.tasks.create(sourceSet.getTaskName('forbiddenApisCli', null), JavaExec) {, +                    ExportElasticsearchBuildResourcesTask buildResources = project.tasks.getByName('buildResources'), +                    dependsOn(buildResources), +                    classpath = project.files(, +                            project.configurations.forbiddenApisCliJar,, +                            sourceSet.compileClasspath,, +                            sourceSet.runtimeClasspath, +                    ), +                    main = 'de.thetaphi.forbiddenapis.cli.CliMain', +                    executable = "${project.runtimeJavaHome}/bin/java", +                    args "-b", 'jdk-unsafe-1.8', +                    args "-b", 'jdk-deprecated-1.8', +                    args "-b", 'jdk-non-portable', +                    args "-b", 'jdk-system-out', +                    args "-f", buildResources.copy("forbidden/jdk-signatures.txt"), +                    args "-f", buildResources.copy("forbidden/es-all-signatures.txt"), +                    args "--suppressannotation", '**.SuppressForbidden', +                    if (sourceSet.name == 'test') {, +                        args "-f", buildResources.copy("forbidden/es-test-signatures.txt"), +                        args "-f", buildResources.copy("forbidden/http-signatures.txt"), +                    } else {, +                        args "-f", buildResources.copy("forbidden/es-server-signatures.txt"), +                    }, +                    dependsOn sourceSet.classesTaskName, +                    doFirst {, +                        // Forbidden APIs expects only existing dirs, and requires at least one, +                        FileCollection existingOutputs = sourceSet.output.classesDirs, +                                .filter { it.exists() }, +                        if (existingOutputs.isEmpty()) {, +                            throw new StopExecutionException("${sourceSet.name} has no outputs"), +                        }, +                        existingOutputs.forEach { args "-d", it }, +                    }, +                }, +            ), +        }, +        return forbiddenApisCli, +    }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +import org.elasticsearch.gradle.ExportElasticsearchBuildResourcesTask, +import org.gradle.api.file.FileCollection, +import org.gradle.api.tasks.JavaExec, +import org.gradle.api.tasks.StopExecutionException, +            project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        ], +, +        // Configure it but don't add it as a dependency yet, +        configureForbiddenApisCli(project), +, +    private static Task configureForbiddenApisCli(Project project) {, +        project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar 'de.thetaphi:forbiddenapis:2.5', +        }, +        Task forbiddenApisCli = project.tasks.create('forbiddenApisCli'), +, +        project.sourceSets.forEach { sourceSet ->, +            forbiddenApisCli.dependsOn(, +                project.tasks.create(sourceSet.getTaskName('forbiddenApisCli', null), JavaExec) {, +                    ExportElasticsearchBuildResourcesTask buildResources = project.tasks.getByName('buildResources'), +                    dependsOn(buildResources), +                    classpath = project.files(, +                            project.configurations.forbiddenApisCliJar,, +                            sourceSet.compileClasspath,, +                            sourceSet.runtimeClasspath, +                    ), +                    main = 'de.thetaphi.forbiddenapis.cli.CliMain', +                    executable = "${project.runtimeJavaHome}/bin/java", +                    args "-b", 'jdk-unsafe-1.8', +                    args "-b", 'jdk-deprecated-1.8', +                    args "-b", 'jdk-non-portable', +                    args "-b", 'jdk-system-out', +                    args "-f", buildResources.copy("forbidden/jdk-signatures.txt"), +                    args "-f", buildResources.copy("forbidden/es-all-signatures.txt"), +                    args "--suppressannotation", '**.SuppressForbidden', +                    if (sourceSet.name == 'test') {, +                        args "-f", buildResources.copy("forbidden/es-test-signatures.txt"), +                        args "-f", buildResources.copy("forbidden/http-signatures.txt"), +                    } else {]