[+++ b/build.gradle, +      languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava, +  tasks.cleanIdea {, +    delete '.idea', +  }, +  tasks.cleanEclipse {, +    delete '.settings', +  }, +  tasks.eclipse.dependsOn(cleanEclipse, copyEclipseSettings), +++ b/build.gradle, +      languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava, +  tasks.cleanIdea {, +    delete '.idea', +  }, +  tasks.cleanEclipse {, +    delete '.settings', +  }, +  tasks.eclipse.dependsOn(cleanEclipse, copyEclipseSettings), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.internal.jvm.Jvm, +    static final JavaVersion minimumJava = JavaVersion.VERSION_1_8, +, +        globalBuildInfo(project), +        configureRepositories(project), +            String javaHome = System.getenv('JAVA_HOME'), +, +            println "  JAVA_HOME      : ${javaHome == null ? 'not set' : javaHome}", +            if (JavaVersion.current() < minimumJava) {, +                throw new GradleException("Java ${minimumJava} or above is required to build Elasticsearch"), +            // find java home so eg tests can use it to set java to run with, +            if (javaHome == null) {, +                if (System.getProperty("idea.active") != null) {, +                    // intellij doesn't set JAVA_HOME, so we use the jdk gradle was run with, +                    javaHome = Jvm.current().javaHome, +                } else {, +                    throw new GradleException('JAVA_HOME must be set to build Elasticsearch'), +                }, +            }, +            project.rootProject.ext.javaHome = javaHome, +        project.targetCompatibility = minimumJava, +        project.sourceCompatibility = minimumJava, +        // set java home for each project, so they dont have to find it in the root project, +        project.ext.javaHome = project.rootProject.ext.javaHome, +            jvm "${project.javaHome}/bin/java", +++ b/build.gradle, +      languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava, +  tasks.cleanIdea {, +    delete '.idea', +  }, +  tasks.cleanEclipse {, +    delete '.settings', +  }, +  tasks.eclipse.dependsOn(cleanEclipse, copyEclipseSettings), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.internal.jvm.Jvm, +    static final JavaVersion minimumJava = JavaVersion.VERSION_1_8, +, +        globalBuildInfo(project), +        configureRepositories(project), +            String javaHome = System.getenv('JAVA_HOME'), +, +            println "  JAVA_HOME      : ${javaHome == null ? 'not set' : javaHome}", +            if (JavaVersion.current() < minimumJava) {, +                throw new GradleException("Java ${minimumJava} or above is required to build Elasticsearch"), +            // find java home so eg tests can use it to set java to run with, +            if (javaHome == null) {, +                if (System.getProperty("idea.active") != null) {, +                    // intellij doesn't set JAVA_HOME, so we use the jdk gradle was run with, +                    javaHome = Jvm.current().javaHome, +                } else {, +                    throw new GradleException('JAVA_HOME must be set to build Elasticsearch'), +                }, +            }, +            project.rootProject.ext.javaHome = javaHome, +        project.targetCompatibility = minimumJava, +        project.sourceCompatibility = minimumJava, +        // set java home for each project, so they dont have to find it in the root project, +        project.ext.javaHome = project.rootProject.ext.javaHome, +            jvm "${project.javaHome}/bin/java", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +            'JAVA_HOME' : project.javaHome,, +                jps = getJpsExecutableByName(project, "jps.exe"), +                jps = getJpsExecutableByName(project, "jps"), +    private static File getJpsExecutableByName(Project project, String jpsExecutableName) {, +        return Paths.get(project.javaHome.toString(), "bin/" + jpsExecutableName).toFile(), +++ b/build.gradle, +      languageLevel = org.elasticsearch.gradle.BuildPlugin.minimumJava, +  tasks.cleanIdea {, +    delete '.idea', +  }, +  tasks.cleanEclipse {, +    delete '.settings', +  }, +  tasks.eclipse.dependsOn(cleanEclipse, copyEclipseSettings), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.internal.jvm.Jvm, +    static final JavaVersion minimumJava = JavaVersion.VERSION_1_8, +, +        globalBuildInfo(project), +        configureRepositories(project)]