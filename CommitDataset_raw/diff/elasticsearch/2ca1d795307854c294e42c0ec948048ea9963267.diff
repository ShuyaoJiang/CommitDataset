[+++ b/src/test/java/org/elasticsearch/indices/state/SimpleIndexStateTests.java, +import org.elasticsearch.action.admin.indices.close.CloseIndexResponse;, +import org.elasticsearch.action.admin.indices.open.OpenIndexResponse;, +import org.elasticsearch.test.AbstractIntegrationTest;, +public class SimpleIndexStateTests extends AbstractIntegrationTest {, +        createIndex("test");, +        ensureGreen();, +        ClusterStateResponse stateResponse = client().admin().cluster().prepareState().get();, +        client().prepareIndex("test", "type1", "1").setSource("field1", "value1").get();, +        CloseIndexResponse closeIndexResponse = client().admin().indices().prepareClose("test").get();, +        assertThat(closeIndexResponse.isAcknowledged(), equalTo(true));, +        stateResponse = client().admin().cluster().prepareState().get();, +        IndicesStatusResponse indicesStatusResponse = client().admin().indices().prepareStatus().get();, +        assertThat(indicesStatusResponse.getIndices().size(), equalTo(0));, +            client().prepareIndex("test", "type1", "1").setSource("field1", "value1").get();, +        OpenIndexResponse openIndexResponse = client().admin().indices().prepareOpen("test").get();, +        assertThat(openIndexResponse.isAcknowledged(), equalTo(true));, +        ensureGreen();, +        stateResponse = client().admin().cluster().prepareState().get();, +        client().prepareIndex("test", "type1", "1").setSource("field1", "value1").get();, +        client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder(), +                .put("index.number_of_replicas", 1).build()).get();, +        ClusterHealthResponse health = client().admin().cluster().prepareHealth("test").setWaitForNodes(">=2").get();, +            client().admin().indices().prepareClose("test").get();, +            fail("Exception should have been thrown");, +        client().admin().indices().prepareUpdateSettings("test").setSettings(ImmutableSettings.settingsBuilder(), +                .put("index.routing.allocation.include.tag", "").build()).get();, +        ensureGreen();, +        ClusterStateResponse stateResponse = client().admin().cluster().prepareState().get();, +        client().prepareIndex("test", "type1", "1").setSource("field1", "value1").get();, +            client().admin().indices().prepareDelete("test").get();, +            client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("number_of_shards", "bad")).get();, +        CreateIndexResponse response = client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("number_of_shards", 1)).get();]