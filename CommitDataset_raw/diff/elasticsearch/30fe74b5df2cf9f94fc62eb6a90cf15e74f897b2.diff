[+++ b/build.gradle, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar', +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +, +++ b/build.gradle, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar', +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +import org.gradle.api.tasks.Copy, +import org.gradle.api.tasks.Delete, +import org.gradle.api.tasks.Exec, +            File configFile = new File(node.homeDir, 'config/elasticsearch.yml'), +++ b/build.gradle, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar', +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +import org.gradle.api.tasks.Copy, +import org.gradle.api.tasks.Delete, +import org.gradle.api.tasks.Exec, +            File configFile = new File(node.homeDir, 'config/elasticsearch.yml'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +                break;, +++ b/build.gradle, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar', +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +import org.gradle.api.tasks.Copy, +import org.gradle.api.tasks.Delete, +import org.gradle.api.tasks.Exec, +            File configFile = new File(node.homeDir, 'config/elasticsearch.yml'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +                break;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestBasePlugin.groovy, +        project.idea {, +            module {, +                testSourceDirs += project.sourceSets.test.java.srcDirs, +                scopes['TEST'] = [plus: [project.configurations.testRuntime]], +            }, +        }, +++ b/build.gradle, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar', +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +import org.gradle.api.tasks.Copy, +import org.gradle.api.tasks.Delete, +import org.gradle.api.tasks.Exec, +            File configFile = new File(node.homeDir, 'config/elasticsearch.yml'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +                break;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestBasePlugin.groovy, +        project.idea {, +            module {, +                testSourceDirs += project.sourceSets.test.java.srcDirs, +                scopes['TEST'] = [plus: [project.configurations.testRuntime]], +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JNAKernel32Library.java, +++ b/build.gradle, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar', +// add buildSrc itself as a groovy project, +task buildSrcIdea(type: GradleBuild) {, +  buildFile = 'buildSrc/build.gradle', +  tasks = ['cleanIdea', 'ideaModule'], +}, +tasks.idea.dependsOn(buildSrcIdea), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +import org.gradle.api.tasks.Copy, +import org.gradle.api.tasks.Delete, +import org.gradle.api.tasks.Exec, +            File configFile = new File(node.homeDir, 'config/elasticsearch.yml')]