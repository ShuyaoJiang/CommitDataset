[+++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +        assertEquals(17, namedXContents.size());, +        assertEquals("Had: " + categories, 4, categories.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +        assertEquals(17, namedXContents.size());, +        assertEquals("Had: " + categories, 4, categories.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/RollupDocumentationIT.java, +import static org.apache.lucene.util.LuceneTestCase.AwaitsFix;, +@AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/35295"), +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +        assertEquals(17, namedXContents.size());, +        assertEquals("Had: " + categories, 4, categories.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/RollupDocumentationIT.java, +import static org.apache.lucene.util.LuceneTestCase.AwaitsFix;, +@AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/35295"), +++ b/docs/reference/aggregations/bucket.asciidoc, +include::bucket/parent-aggregation.asciidoc[], +, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +        assertEquals(17, namedXContents.size());, +        assertEquals("Had: " + categories, 4, categories.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/RollupDocumentationIT.java, +import static org.apache.lucene.util.LuceneTestCase.AwaitsFix;, +@AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/35295"), +++ b/docs/reference/aggregations/bucket.asciidoc, +include::bucket/parent-aggregation.asciidoc[], +, +++ b/docs/reference/aggregations/bucket/parent-aggregation.asciidoc, +[[search-aggregations-bucket-parent-aggregation]], +=== Parent Aggregation, +, +A special single bucket aggregation that selects parent documents that have the specified type, as defined in a <<parent-join,`join` field>>., +, +This aggregation has a single option:, +, +* `type` - The child type that should be selected., +, +For example, let's say we have an index of questions and answers. The answer type has the following `join` field in the mapping:, +, +[source,js], +--------------------------------------------------, +PUT parent_example, +{, +  "mappings": {, +    "_doc": {, +      "properties": {, +        "join": {, +          "type": "join",, +          "relations": {, +            "question": "answer", +          }, +        }, +      }, +    }, +  }, +}, +--------------------------------------------------, +// CONSOLE, +, +The `question` document contain a tag field and the `answer` documents contain an owner field. With the `parent`, +aggregation the owner buckets can be mapped to the tag buckets in a single request even though the two fields exist in, +two different kinds of documents., +, +An example of a question document:, +, +[source,js], +--------------------------------------------------, +PUT parent_example/_doc/1, +{, +  "join": {, +    "name": "question", +  },, +  "body": "<p>I have Windows 2003 server and i bought a new Windows 2008 server...",]