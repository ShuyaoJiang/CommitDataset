[+++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    if (indexResult.hasFailure()) {, +                        response = null;, +                    } else {, +                        // update the version on request so it will happen on the replicas, +                        final long version = indexResult.getVersion();, +                        indexRequest.version(version);, +                        indexRequest.versionType(indexRequest.versionType().versionTypeForReplicationAndRecovery());, +                        assert indexRequest.versionType().validateVersionForWrites(indexRequest.version());, +                        response = new IndexResponse(primary.shardId(), indexRequest.type(), indexRequest.id(),, +                    }, +                    operationResult = indexResult;, +                    if (deleteResult.hasFailure()) {, +                        response = null;, +                    } else {, +                        // update the request with the version so it will go to the replicas, +                        deleteRequest.versionType(deleteRequest.versionType().versionTypeForReplicationAndRecovery());, +                        deleteRequest.version(deleteResult.getVersion());, +                        assert deleteRequest.versionType().validateVersionForWrites(deleteRequest.version());, +                        response = new DeleteResponse(request.shardId(), deleteRequest.type(), deleteRequest.id(),, +                    }, +                    operationResult = deleteResult;, +                    if (updateOperationResult.hasFailure() == false) {, +                        // update the version on request so it will happen on the replicas, +                        final long version = updateOperationResult.getVersion();, +                        indexRequest.version(version);, +                        indexRequest.versionType(indexRequest.versionType().versionTypeForReplicationAndRecovery());, +                        assert indexRequest.versionType().validateVersionForWrites(indexRequest.version());, +                    }, +                    DeleteRequest deleteRequest = translate.action();, +                    updateOperationResult = executeDeleteRequestOnPrimary(deleteRequest, primary);, +                    if (updateOperationResult.hasFailure() == false) {, +                        // update the request with the version so it will go to the replicas, +                        deleteRequest.versionType(deleteRequest.versionType().versionTypeForReplicationAndRecovery());, +                        deleteRequest.version(updateOperationResult.getVersion());, +                        assert deleteRequest.versionType().validateVersionForWrites(deleteRequest.version());, +                    }, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    if (indexResult.hasFailure()) {, +                        response = null;, +                    } else {, +                        // update the version on request so it will happen on the replicas, +                        final long version = indexResult.getVersion();, +                        indexRequest.version(version);, +                        indexRequest.versionType(indexRequest.versionType().versionTypeForReplicationAndRecovery());, +                        assert indexRequest.versionType().validateVersionForWrites(indexRequest.version());, +                        response = new IndexResponse(primary.shardId(), indexRequest.type(), indexRequest.id(),, +                    }, +                    operationResult = indexResult;, +                    if (deleteResult.hasFailure()) {, +                        response = null;, +                    } else {, +                        // update the request with the version so it will go to the replicas, +                        deleteRequest.versionType(deleteRequest.versionType().versionTypeForReplicationAndRecovery());, +                        deleteRequest.version(deleteResult.getVersion());, +                        assert deleteRequest.versionType().validateVersionForWrites(deleteRequest.version());, +                        response = new DeleteResponse(request.shardId(), deleteRequest.type(), deleteRequest.id(),, +                    }, +                    operationResult = deleteResult;, +                    if (updateOperationResult.hasFailure() == false) {, +                        // update the version on request so it will happen on the replicas, +                        final long version = updateOperationResult.getVersion();, +                        indexRequest.version(version);, +                        indexRequest.versionType(indexRequest.versionType().versionTypeForReplicationAndRecovery());, +                        assert indexRequest.versionType().validateVersionForWrites(indexRequest.version());, +                    }, +                    DeleteRequest deleteRequest = translate.action();, +                    updateOperationResult = executeDeleteRequestOnPrimary(deleteRequest, primary);, +                    if (updateOperationResult.hasFailure() == false) {, +                        // update the request with the version so it will go to the replicas, +                        deleteRequest.versionType(deleteRequest.versionType().versionTypeForReplicationAndRecovery());, +                        deleteRequest.version(updateOperationResult.getVersion());, +                        assert deleteRequest.versionType().validateVersionForWrites(deleteRequest.version());, +                    }, +++ b/core/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +        final DeleteResponse response;, +        if (result.hasFailure() == false) {, +            // update the request with the version so it will go to the replicas, +            request.versionType(request.versionType().versionTypeForReplicationAndRecovery());, +            request.version(result.getVersion());, +            assert request.versionType().validateVersionForWrites(request.version());, +            response = new DeleteResponse(primary.shardId(), request.type(), request.id(), result.getVersion(), result.isFound());, +        } else {, +            response = null;, +        }, +        final Engine.Delete delete = primary.prepareDeleteOnPrimary(request.type(), request.id(), request.version(), request.versionType());, +        return primary.delete(delete);, +        final Engine.Delete delete = replica.prepareDeleteOnReplica(request.type(), request.id(), request.version(), request.versionType());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    if (indexResult.hasFailure()) {, +                        response = null;, +                    } else {, +                        // update the version on request so it will happen on the replicas, +                        final long version = indexResult.getVersion();, +                        indexRequest.version(version);, +                        indexRequest.versionType(indexRequest.versionType().versionTypeForReplicationAndRecovery());, +                        assert indexRequest.versionType().validateVersionForWrites(indexRequest.version());, +                        response = new IndexResponse(primary.shardId(), indexRequest.type(), indexRequest.id(),, +                    }, +                    operationResult = indexResult;]