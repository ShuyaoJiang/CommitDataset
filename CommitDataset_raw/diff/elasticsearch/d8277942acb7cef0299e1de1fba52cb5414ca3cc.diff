[+++ b/plugin/src/test/java/org/elasticsearch/xpack/extensions/ListXPackExtensionCommandTests.java, +import org.elasticsearch.cli.Terminal;, +import org.elasticsearch.cli.UserException;, +import java.util.Map;, +    private static class MockListXPackExtensionCommand extends ListXPackExtensionCommand {, +, +        private final Environment env;, +, +        private MockListXPackExtensionCommand(final Environment env) {, +            this.env = env;, +        }, +, +        @Override, +        protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +            return env;, +        }, +, +        @Override, +        protected boolean addShutdownHook() {, +            return false;, +        }, +, +    }, +, +    static MockTerminal listExtensions(Path home, Environment env) throws Exception {, +        int status = new MockListXPackExtensionCommand(env).main(new String[] { "-Epath.home=" + home }, terminal);, +    static MockTerminal listExtensions(Path home, Environment env, String[] args) throws Exception {, +        int status = new MockListXPackExtensionCommand(env).main(argsAndHome, terminal);, +        IOException e = expectThrows(IOException.class, () -> listExtensions(home, env));, +        MockTerminal terminal = listExtensions(home, env);, +        MockTerminal terminal = listExtensions(home, env, params);, +        MockTerminal terminal = listExtensions(home, env);, +        MockTerminal terminal = listExtensions(home, env);, +        MockTerminal terminal = listExtensions(home, env, params);, +        MockTerminal terminal = listExtensions(home, env, params);, +        MockTerminal terminal = listExtensions(home, env, new String[0]);, +        NoSuchFileException e = expectThrows(NoSuchFileException.class, () -> listExtensions(home, env));, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> listExtensions(home, env));]