[+++ b/pom.xml, +            <groupId>com.fasterxml.jackson.dataformat</groupId>, +            <artifactId>jackson-dataformat-cbor</artifactId>, +            <version>2.3.2</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-cbor</include>, +++ b/pom.xml, +            <groupId>com.fasterxml.jackson.dataformat</groupId>, +            <artifactId>jackson-dataformat-cbor</artifactId>, +            <version>2.3.2</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-cbor</include>, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java, +import com.fasterxml.jackson.dataformat.cbor.CBORConstants;, +import org.elasticsearch.common.xcontent.cbor.CborXContent;, +     * Returns a content builder using CBOR format ({@link org.elasticsearch.common.xcontent.XContentType#CBOR}., +     */, +    public static XContentBuilder cborBuilder() throws IOException {, +        return contentBuilder(XContentType.CBOR);, +    }, +, +    /**, +     * Constructs a new cbor builder that will output the result into the provided output stream., +     */, +    public static XContentBuilder cborBuilder(OutputStream os) throws IOException {, +        return new XContentBuilder(CborXContent.cborXContent, os);, +    }, +, +    /**, +        } else if (type == XContentType.CBOR) {, +            return cborBuilder(outputStream);, +        } else if (type == XContentType.CBOR) {, +            return CborXContent.contentBuilder();, +        // CBOR is not supported, +, +        if (first == (CBORConstants.BYTE_OBJECT_INDEFINITE & 0xff)){, +            return XContentType.CBOR;, +        }, +        if (first == CBORConstants.BYTE_OBJECT_INDEFINITE){, +            return XContentType.CBOR;, +        }, +++ b/pom.xml, +            <groupId>com.fasterxml.jackson.dataformat</groupId>, +            <artifactId>jackson-dataformat-cbor</artifactId>, +            <version>2.3.2</version>, +            <scope>compile</scope>, +        </dependency>, +, +        <dependency>, +                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-cbor</include>, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java, +import com.fasterxml.jackson.dataformat.cbor.CBORConstants;, +import org.elasticsearch.common.xcontent.cbor.CborXContent;, +     * Returns a content builder using CBOR format ({@link org.elasticsearch.common.xcontent.XContentType#CBOR}., +     */, +    public static XContentBuilder cborBuilder() throws IOException {, +        return contentBuilder(XContentType.CBOR);, +    }, +, +    /**, +     * Constructs a new cbor builder that will output the result into the provided output stream., +     */, +    public static XContentBuilder cborBuilder(OutputStream os) throws IOException {, +        return new XContentBuilder(CborXContent.cborXContent, os);, +    }, +, +    /**, +        } else if (type == XContentType.CBOR) {, +            return cborBuilder(outputStream);, +        } else if (type == XContentType.CBOR) {, +            return CborXContent.contentBuilder();, +        // CBOR is not supported, +, +        if (first == (CBORConstants.BYTE_OBJECT_INDEFINITE & 0xff)){, +            return XContentType.CBOR;, +        }, +        if (first == CBORConstants.BYTE_OBJECT_INDEFINITE){, +            return XContentType.CBOR;, +        }, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentType.java, +import org.elasticsearch.common.xcontent.cbor.CborXContent;, +    },, +    /**, +     * A CBOR based content type., +     */, +    CBOR(3) {, +        @Override, +        public String restContentType() {, +            return "application/cbor";, +        }, +, +        @Override, +        public String shortName() {, +            return "cbor";]