[+++ b/client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java, +    public static final int DEFAULT_SOCKET_TIMEOUT_MILLIS = 10000;, +        RequestConfig.Builder requestConfigBuilder = RequestConfig.custom().setConnectTimeout(DEFAULT_CONNECT_TIMEOUT_MILLIS), +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java, +    public static final int DEFAULT_SOCKET_TIMEOUT_MILLIS = 10000;, +        RequestConfig.Builder requestConfigBuilder = RequestConfig.custom().setConnectTimeout(DEFAULT_CONNECT_TIMEOUT_MILLIS), +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java, +    public static final int DEFAULT_SOCKET_TIMEOUT_MILLIS = 10000;, +        RequestConfig.Builder requestConfigBuilder = RequestConfig.custom().setConnectTimeout(DEFAULT_CONNECT_TIMEOUT_MILLIS), +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +    @Override, +    public <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener, ActionFilterChain<?, Response> chain) {, +        chain.proceed(action, response, listener);, +    }, +, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java, +    public static final int DEFAULT_SOCKET_TIMEOUT_MILLIS = 10000;, +        RequestConfig.Builder requestConfigBuilder = RequestConfig.custom().setConnectTimeout(DEFAULT_CONNECT_TIMEOUT_MILLIS), +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +    @Override, +    public <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener, ActionFilterChain<?, Response> chain) {, +        chain.proceed(action, response, listener);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +    public <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener, ActionFilterChain<?, Response> chain) {, +        chain.proceed(action, response, listener);, +    }, +, +    @Override, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java, +    public static final int DEFAULT_SOCKET_TIMEOUT_MILLIS = 10000;, +        RequestConfig.Builder requestConfigBuilder = RequestConfig.custom().setConnectTimeout(DEFAULT_CONNECT_TIMEOUT_MILLIS), +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +    /**, +     * @deprecated Use {@link GetResponse#getSource()} instead, +     */, +    @Deprecated, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +    @Override, +    public <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener, ActionFilterChain<?, Response> chain) {, +        chain.proceed(action, response, listener);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestProxyActionFilter.java, +    public <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener, ActionFilterChain<?, Response> chain) {, +        chain.proceed(action, response, listener);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +, +    /**, +     * Enables filtering the execution of an action on the response side, either by sending a response through the, +     * {@link ActionListener} or by continuing the execution through the given {@link ActionFilterChain chain}, +     */, +    <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +            ActionFilterChain<?, Response> chain);, +, +, +        @Override, +        public final <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +                ActionFilterChain<?, Response> chain) {, +            if (apply(action, response, listener)) {, +                chain.proceed(action, response, listener);, +            }, +        }, +, +        /**]