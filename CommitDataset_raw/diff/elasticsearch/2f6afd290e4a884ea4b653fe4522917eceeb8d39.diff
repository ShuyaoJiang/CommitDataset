[+++ b/server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java, +import org.elasticsearch.common.Nullable;, +        @Nullable private final String failure;, +                     long startTime, long repositoryStateId, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards,, +                     String failure) {, +            this.failure = failure;, +        }, +, +        public Entry(Snapshot snapshot, boolean includeGlobalState, boolean partial, State state, List<IndexId> indices,, +            long startTime, long repositoryStateId, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards) {, +            this(snapshot, includeGlobalState, partial, state, indices, startTime, repositoryStateId, shards, null);, +                entry.repositoryStateId, shards, entry.failure);, +        }, +, +        public Entry(Entry entry, State state, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards, String failure) {, +            this(entry.snapshot, entry.includeGlobalState, entry.partial, state, entry.indices, entry.startTime,, +                 entry.repositoryStateId, shards, failure);, +            this(entry, entry.state, shards, entry.failure);, +        public String failure() {, +            return failure;, +        }, +, +            final String failure;, +            if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +                failure = in.readOptionalString();, +            } else {, +                failure = null;, +            }, +                                   builder.build(),, +                                   failure);, +            if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +                out.writeOptionalString(entry.failure);, +            }, +++ b/server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java, +import org.elasticsearch.common.Nullable;, +        @Nullable private final String failure;, +                     long startTime, long repositoryStateId, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards,, +                     String failure) {, +            this.failure = failure;, +        }, +, +        public Entry(Snapshot snapshot, boolean includeGlobalState, boolean partial, State state, List<IndexId> indices,, +            long startTime, long repositoryStateId, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards) {, +            this(snapshot, includeGlobalState, partial, state, indices, startTime, repositoryStateId, shards, null);, +                entry.repositoryStateId, shards, entry.failure);, +        }, +, +        public Entry(Entry entry, State state, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards, String failure) {, +            this(entry.snapshot, entry.includeGlobalState, entry.partial, state, entry.indices, entry.startTime,, +                 entry.repositoryStateId, shards, failure);, +            this(entry, entry.state, shards, entry.failure);, +        public String failure() {, +            return failure;, +        }, +, +            final String failure;, +            if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +                failure = in.readOptionalString();, +            } else {, +                failure = null;, +            }, +                                   builder.build(),, +                                   failure);, +            if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +                out.writeOptionalString(entry.failure);, +            }, +++ b/server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java, +++ b/server/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java, +import org.elasticsearch.common.Nullable;, +        @Nullable private final String failure;, +                     long startTime, long repositoryStateId, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards,, +                     String failure) {, +            this.failure = failure;, +        }, +, +        public Entry(Snapshot snapshot, boolean includeGlobalState, boolean partial, State state, List<IndexId> indices,, +            long startTime, long repositoryStateId, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards) {, +            this(snapshot, includeGlobalState, partial, state, indices, startTime, repositoryStateId, shards, null);, +                entry.repositoryStateId, shards, entry.failure);, +        }, +, +        public Entry(Entry entry, State state, ImmutableOpenMap<ShardId, ShardSnapshotStatus> shards, String failure) {, +            this(entry.snapshot, entry.includeGlobalState, entry.partial, state, entry.indices, entry.startTime,, +                 entry.repositoryStateId, shards, failure);, +            this(entry, entry.state, shards, entry.failure);, +        public String failure() {, +            return failure;, +        }, +, +            final String failure;, +            if (in.getVersion().onOrAfter(Version.V_7_0_0)) {, +                failure = in.readOptionalString();, +            } else {, +                failure = null;, +            }, +                                   builder.build(),, +                                   failure);, +            if (out.getVersion().onOrAfter(Version.V_7_0_0)) {, +                out.writeOptionalString(entry.failure);, +            }]