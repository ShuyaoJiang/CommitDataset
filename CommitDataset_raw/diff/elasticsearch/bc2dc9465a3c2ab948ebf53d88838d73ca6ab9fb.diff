[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ActionTransportException.java, +        super(buildMessage(name, address, action, null), cause);, +        this.address = address;, +        this.action = action;, +    }, +, +    public ActionTransportException(String name, TransportAddress address, String action, String msg, Throwable cause) {, +        super(buildMessage(name, address, action, msg), cause);, +    private static String buildMessage(String name, TransportAddress address, String action, String msg) {, +        if (msg != null) {, +            sb.append(" ").append(msg);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ActionTransportException.java, +        super(buildMessage(name, address, action, null), cause);, +        this.address = address;, +        this.action = action;, +    }, +, +    public ActionTransportException(String name, TransportAddress address, String action, String msg, Throwable cause) {, +        super(buildMessage(name, address, action, msg), cause);, +    private static String buildMessage(String name, TransportAddress address, String action, String msg) {, +        if (msg != null) {, +            sb.append(" ").append(msg);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ReceiveTimeoutTransportException.java, +    public ReceiveTimeoutTransportException(DiscoveryNode node, String action, String msg) {, +        super(node.name(), node.address(), action, msg, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ActionTransportException.java, +        super(buildMessage(name, address, action, null), cause);, +        this.address = address;, +        this.action = action;, +    }, +, +    public ActionTransportException(String name, TransportAddress address, String action, String msg, Throwable cause) {, +        super(buildMessage(name, address, action, msg), cause);, +    private static String buildMessage(String name, TransportAddress address, String action, String msg) {, +        if (msg != null) {, +            sb.append(" ").append(msg);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/ReceiveTimeoutTransportException.java, +    public ReceiveTimeoutTransportException(DiscoveryNode node, String action, String msg) {, +        super(node.name(), node.address(), action, msg, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/TransportService.java, +                holder.handler().handleException(new ReceiveTimeoutTransportException(holder.node(), holder.action(), "request_id [" + requestId + "]"));]