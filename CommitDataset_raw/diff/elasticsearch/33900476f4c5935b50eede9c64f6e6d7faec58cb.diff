[+++ b/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +            int largest = -1;, +                largest = threadPoolExecutor.getLargestPoolSize();, +            stats.add(new ThreadPoolStats.Stats(name, threads, queue, active, rejected, largest));, +++ b/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +            int largest = -1;, +                largest = threadPoolExecutor.getLargestPoolSize();, +            stats.add(new ThreadPoolStats.Stats(name, threads, queue, active, rejected, largest));, +++ b/src/main/java/org/elasticsearch/threadpool/ThreadPoolStats.java, +        private int largest;, +        public Stats(String name, int threads, int queue, int active, long rejected, int largest) {, +            this.largest = largest;, +        public int largest() {, +            return largest;, +        }, +, +        public int getLargest() {, +            return largest;, +        }, +, +            name = in.readString();, +            largest = in.readInt();, +            out.writeString(name);, +            out.writeInt(largest);, +            if (largest != -1) {, +                builder.field(Fields.LARGEST, rejected);, +            }, +        static final XContentBuilderString LARGEST = new XContentBuilderString("largest");]