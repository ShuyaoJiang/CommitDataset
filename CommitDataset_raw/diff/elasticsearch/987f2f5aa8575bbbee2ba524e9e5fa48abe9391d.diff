[+++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +            List<String> payloadFields = suggestionContext.getPayloadFields();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +            List<String> payloadFields = suggestionContext.getPayloadFields();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java, +import org.elasticsearch.ElasticsearchParseException;, +        new ObjectParser<>(SUGGESTION_NAME, null);, +        TLP_PARSER.declareStringArray(CompletionSuggestionBuilder::payload, PAYLOAD_FIELD);, +        }, CONTEXTS_FIELD, ObjectParser.ValueType.OBJECT); // context is deprecated, +     * internal copy constructor that copies over all class fields except for the fieldname which is, +     * set to the one provided in the first argument, +     */, +    private CompletionSuggestionBuilder(String fieldname, CompletionSuggestionBuilder in) {, +        super(fieldname, in);, +        fuzzyOptions = in.fuzzyOptions;, +        regexOptions = in.regexOptions;, +        contextBytes = in.contextBytes;, +        payloadFields = in.payloadFields;, +    }, +, +    /**, +    private String field;, +    private CompletionSuggestionBuilder field(String fieldName) {, +        this.field = fieldName;, +        return this;, +    }, +, +        CompletionSuggestionBuilder builder = new CompletionSuggestionBuilder("_na_");, +        String field = builder.field;, +        // now we should have field name, check and copy fields over to the suggestion builder we return, +        if (field == null) {, +            throw new ElasticsearchParseException(, +                "required field [" + SuggestUtils.Fields.FIELD.getPreferredName() + "] is missing");, +        }, +        return new CompletionSuggestionBuilder(field, builder);, +        if (mappedFieldType != null && mappedFieldType instanceof CompletionFieldMapper.CompletionFieldType) {, +            suggestionContext.setFieldType(type);, +        out.writeBoolean(payloadFields.isEmpty() == false);, +        if (payloadFields.isEmpty() == false) {, +        out.writeBoolean(contextBytes != null);, +        if (contextBytes != null) {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +            List<String> payloadFields = suggestionContext.getPayloadFields();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java, +import org.elasticsearch.ElasticsearchParseException;, +        new ObjectParser<>(SUGGESTION_NAME, null);, +        TLP_PARSER.declareStringArray(CompletionSuggestionBuilder::payload, PAYLOAD_FIELD);, +        }, CONTEXTS_FIELD, ObjectParser.ValueType.OBJECT); // context is deprecated, +     * internal copy constructor that copies over all class fields except for the fieldname which is, +     * set to the one provided in the first argument, +     */, +    private CompletionSuggestionBuilder(String fieldname, CompletionSuggestionBuilder in) {, +        super(fieldname, in);, +        fuzzyOptions = in.fuzzyOptions;, +        regexOptions = in.regexOptions;, +        contextBytes = in.contextBytes;, +        payloadFields = in.payloadFields;, +    }, +, +    /**, +    private String field;, +    private CompletionSuggestionBuilder field(String fieldName) {, +        this.field = fieldName;, +        return this;, +    }, +, +        CompletionSuggestionBuilder builder = new CompletionSuggestionBuilder("_na_");, +        String field = builder.field;, +        // now we should have field name, check and copy fields over to the suggestion builder we return, +        if (field == null) {, +            throw new ElasticsearchParseException(, +                "required field [" + SuggestUtils.Fields.FIELD.getPreferredName() + "] is missing");, +        }, +        return new CompletionSuggestionBuilder(field, builder);, +        if (mappedFieldType != null && mappedFieldType instanceof CompletionFieldMapper.CompletionFieldType) {, +            suggestionContext.setFieldType(type);, +        out.writeBoolean(payloadFields.isEmpty() == false);, +        if (payloadFields.isEmpty() == false) {, +        out.writeBoolean(contextBytes != null);, +        if (contextBytes != null) {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionContext.java, +    private List<String> payloadFields = Collections.emptyList();, +    void setPayloadFields(List<String> fields) {, +    List<String> getPayloadFields() {, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +            List<String> payloadFields = suggestionContext.getPayloadFields();, +++ b/core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java, +import org.elasticsearch.ElasticsearchParseException;, +        new ObjectParser<>(SUGGESTION_NAME, null);, +        TLP_PARSER.declareStringArray(CompletionSuggestionBuilder::payload, PAYLOAD_FIELD);, +        }, CONTEXTS_FIELD, ObjectParser.ValueType.OBJECT); // context is deprecated, +     * internal copy constructor that copies over all class fields except for the fieldname which is, +     * set to the one provided in the first argument, +     */, +    private CompletionSuggestionBuilder(String fieldname, CompletionSuggestionBuilder in) {, +        super(fieldname, in);, +        fuzzyOptions = in.fuzzyOptions;, +        regexOptions = in.regexOptions;, +        contextBytes = in.contextBytes;, +        payloadFields = in.payloadFields;]