[+++ b/server/src/main/java/org/elasticsearch/cluster/coordination/ClusterFormationFailureHelper.java, +        private final long currentTerm;, +                              List<DiscoveryNode> foundPeers, long currentTerm) {, +            this.currentTerm = currentTerm;, +                "discovery will continue using %s from hosts providers and %s from last-known cluster state; " +, +                    "node term %d, last-accepted version %d in term %d",, +                resolvedAddresses, clusterStateNodes, currentTerm, clusterState.version(), clusterState.term());, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/ClusterFormationFailureHelper.java, +        private final long currentTerm;, +                              List<DiscoveryNode> foundPeers, long currentTerm) {, +            this.currentTerm = currentTerm;, +                "discovery will continue using %s from hosts providers and %s from last-known cluster state; " +, +                    "node term %d, last-accepted version %d in term %d",, +                resolvedAddresses, clusterStateNodes, currentTerm, clusterState.version(), clusterState.term());, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +            StreamSupport.stream(peerFinder.getFoundPeers().spliterator(), false).collect(Collectors.toList()), getCurrentTerm());, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/ClusterFormationFailureHelper.java, +        private final long currentTerm;, +                              List<DiscoveryNode> foundPeers, long currentTerm) {, +            this.currentTerm = currentTerm;, +                "discovery will continue using %s from hosts providers and %s from last-known cluster state; " +, +                    "node term %d, last-accepted version %d in term %d",, +                resolvedAddresses, clusterStateNodes, currentTerm, clusterState.version(), clusterState.term());, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/Coordinator.java, +            StreamSupport.stream(peerFinder.getFoundPeers().spliterator(), false).collect(Collectors.toList()), getCurrentTerm());, +++ b/server/src/test/java/org/elasticsearch/cluster/coordination/ClusterFormationFailureHelperTests.java, +                return new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), emptyList(), 0L);, +            .version(12L).nodes(DiscoveryNodes.builder().add(localNode).localNodeId(localNode.getId())).build();, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), emptyList(), 15L).getDescription(),, +                "] from last-known cluster state; node term 15, last-accepted version 12 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, singletonList(otherAddress), emptyList(), 16L).getDescription(),, +                "] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 16, last-accepted version 12 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), singletonList(otherNode), 17L).getDescription(),, +                + localNode + "] from last-known cluster state; node term 17, last-accepted version 12 in term 0"));, +            .version(7L), +            .metaData(MetaData.builder().coordinationMetaData(CoordinationMetaData.builder().term(4L).build())), +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), emptyList(), 1L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 1, last-accepted version 7 in term 4"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, singletonList(otherAddress), emptyList(), 2L).getDescription(),, +                "] from last-known cluster state; node term 2, last-accepted version 7 in term 4"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), singletonList(otherNode), 3L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 3, last-accepted version 7 in term 4"));, +                clusterState, emptyList(), emptyList(), 4L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 4, last-accepted version 7 in term 4"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), emptyList(), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, singletonList(otherAddress), emptyList(), 0L).getDescription(),, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), singletonList(otherNode), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, clusterState, emptyList(), singletonList(yetAnotherNode), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, state(localNode, "n1", "n2"), emptyList(), emptyList(), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, state(localNode, "n1", "n2", "n3"), emptyList(), emptyList(), 0L), +                .getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, state(localNode, "n1", "n2", "n3", "n4"), emptyList(), emptyList(), 0L), +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, state(localNode, "n1", "n2", "n3", "n4", "n5"), emptyList(), emptyList(), 0L), +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, state(localNode, new String[]{"n1"}, new String[]{"n1"}), emptyList(),, +                emptyList(), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, state(localNode, new String[]{"n1"}, new String[]{"n2"}), emptyList(),, +                emptyList(), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +        assertThat(new ClusterFormationState(Settings.EMPTY, state(localNode, new String[]{"n1"}, new String[]{"n2", "n3"}), emptyList(),, +                emptyList(), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));, +                emptyList(), emptyList(), 0L).getDescription(),, +                "discovery will continue using [] from hosts providers and [" + localNode +, +                "] from last-known cluster state; node term 0, last-accepted version 0 in term 0"));]