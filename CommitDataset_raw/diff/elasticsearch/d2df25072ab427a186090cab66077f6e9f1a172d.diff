[+++ b/docs/en/rest-api/ml/get-job.asciidoc, +            "rules": [],, +++ b/docs/en/rest-api/ml/get-job.asciidoc, +            "rules": [],, +++ b/docs/en/rest-api/ml/jobresource.asciidoc, + `rules`::, +++ b/docs/en/rest-api/ml/get-job.asciidoc, +            "rules": [],, +++ b/docs/en/rest-api/ml/jobresource.asciidoc, + `rules`::, +++ b/docs/en/rest-api/ml/put-job.asciidoc, +        "rules": [],, +++ b/docs/en/rest-api/ml/get-job.asciidoc, +            "rules": [],, +++ b/docs/en/rest-api/ml/jobresource.asciidoc, + `rules`::, +++ b/docs/en/rest-api/ml/put-job.asciidoc, +        "rules": [],, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +        "rules": [],, +++ b/docs/en/rest-api/ml/get-job.asciidoc, +            "rules": [],, +++ b/docs/en/rest-api/ml/jobresource.asciidoc, + `rules`::, +++ b/docs/en/rest-api/ml/put-job.asciidoc, +        "rules": [],, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +        "rules": [],, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/authc/AuthenticationServiceTests.java, +        } catch (IllegalStateException ex) {, +++ b/docs/en/rest-api/ml/get-job.asciidoc, +            "rules": [],, +++ b/docs/en/rest-api/ml/jobresource.asciidoc, + `rules`::, +++ b/docs/en/rest-api/ml/put-job.asciidoc, +        "rules": [],, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +        "rules": [],, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/authc/AuthenticationServiceTests.java, +        } catch (IllegalStateException ex) {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/authc/pki/PkiAuthenticationTests.java, +import org.elasticsearch.common.network.NetworkAddress;, +import org.elasticsearch.test.ESIntegTestCase.ClusterScope;, +import org.elasticsearch.test.SecurityIntegTestCase;, +import org.elasticsearch.transport.Transport;, +import org.elasticsearch.xpack.TestXPackTransportClient;, +import java.net.InetSocketAddress;, +        final InetSocketAddress inetSocketAddress = transportAddress.address();, +        return String.format(Locale.ROOT, "https://%s/", NetworkAddress.format(inetSocketAddress));, +++ b/docs/en/rest-api/ml/get-job.asciidoc, +            "rules": [],, +++ b/docs/en/rest-api/ml/jobresource.asciidoc, + `rules`::, +++ b/docs/en/rest-api/ml/put-job.asciidoc, +        "rules": [],, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +        "rules": [],, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/authc/AuthenticationServiceTests.java, +        } catch (IllegalStateException ex) {, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/authc/pki/PkiAuthenticationTests.java, +import org.elasticsearch.common.network.NetworkAddress;, +import org.elasticsearch.test.ESIntegTestCase.ClusterScope;, +import org.elasticsearch.test.SecurityIntegTestCase;, +import org.elasticsearch.transport.Transport;, +import org.elasticsearch.xpack.TestXPackTransportClient;, +import java.net.InetSocketAddress;, +        final InetSocketAddress inetSocketAddress = transportAddress.address();, +        return String.format(Locale.ROOT, "https://%s/", NetworkAddress.format(inetSocketAddress));, +++ b/plugin/src/test/java/org/elasticsearch/xpack/security/transport/ssl/SslIntegrationTests.java, +import org.elasticsearch.common.network.NetworkAddress;, +import org.elasticsearch.xpack.common.socket.SocketAccess;, +import org.elasticsearch.xpack.ssl.SSLService;, +import java.net.InetSocketAddress;, +        final InetSocketAddress inetSocketAddress = transportAddress.address();, +        return String.format(Locale.ROOT, "https://%s/", NetworkAddress.format(inetSocketAddress));]