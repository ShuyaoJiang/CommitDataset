[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.watcher.DeleteWatchRequest;, +    static Request xPackWatcherDeleteWatch(DeleteWatchRequest deleteWatchRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("watcher"), +            .addPathPartAsIs("watch"), +            .addPathPart(deleteWatchRequest.getId()), +            .build();, +, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.watcher.DeleteWatchRequest;, +    static Request xPackWatcherDeleteWatch(DeleteWatchRequest deleteWatchRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("watcher"), +            .addPathPartAsIs("watch"), +            .addPathPart(deleteWatchRequest.getId()), +            .build();, +, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/WatcherClient.java, +import org.elasticsearch.protocol.xpack.watcher.DeleteWatchRequest;, +import org.elasticsearch.protocol.xpack.watcher.DeleteWatchResponse;, +import static java.util.Collections.singleton;, +, +    /**, +     * Deletes a watch from the cluster, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::xPackWatcherDeleteWatch, options,, +            DeleteWatchResponse::fromXContent, singleton(404));, +    }, +, +    /**, +     * Asynchronously deletes a watch from the cluster, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::xPackWatcherDeleteWatch, options,, +            DeleteWatchResponse::fromXContent, listener, singleton(404));, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.watcher.DeleteWatchRequest;, +    static Request xPackWatcherDeleteWatch(DeleteWatchRequest deleteWatchRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("watcher"), +            .addPathPartAsIs("watch"), +            .addPathPart(deleteWatchRequest.getId()), +            .build();, +, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/WatcherClient.java, +import org.elasticsearch.protocol.xpack.watcher.DeleteWatchRequest;, +import org.elasticsearch.protocol.xpack.watcher.DeleteWatchResponse;, +import static java.util.Collections.singleton;, +, +    /**, +     * Deletes a watch from the cluster, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::xPackWatcherDeleteWatch, options,, +            DeleteWatchResponse::fromXContent, singleton(404));, +    }, +, +    /**, +     * Asynchronously deletes a watch from the cluster, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */]