[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacet.java, +                int i = o1.compareTo(o2);, +                if (i == 0) {, +                    i = COUNT.comparator().compare(o1, o2);, +                }, +                return i;, +                if (o2.total() < o1.total()) {, +                    return -1;, +                } else if (o2.total() == o1.total()) {, +                    return COUNT.comparator().compare(o1, o2);, +                } else {, +                    return 1;, +                }, +                return -TOTAL.comparator().compare(o1, o2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacet.java, +                int i = o1.compareTo(o2);, +                if (i == 0) {, +                    i = COUNT.comparator().compare(o1, o2);, +                }, +                return i;, +                if (o2.total() < o1.total()) {, +                    return -1;, +                } else if (o2.total() == o1.total()) {, +                    return COUNT.comparator().compare(o1, o2);, +                } else {, +                    return 1;, +                }, +                return -TOTAL.comparator().compare(o1, o2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/doubles/InternalTermsStatsDoubleFacet.java, +            return (term < other.term ? -1 : (term == other.term ? 0 : 1));, +    List<DoubleEntry> mutableList() {, +        if (!(entries instanceof List)) {, +            entries = new ArrayList<DoubleEntry>(entries);, +        }, +        return (List<DoubleEntry>) entries;, +    }, +, +                if (!tsFacet.entries.isEmpty()) {, +                    List<DoubleEntry> entries = tsFacet.mutableList();, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacet.java, +                int i = o1.compareTo(o2);, +                if (i == 0) {, +                    i = COUNT.comparator().compare(o1, o2);, +                }, +                return i;, +                if (o2.total() < o1.total()) {, +                    return -1;, +                } else if (o2.total() == o1.total()) {, +                    return COUNT.comparator().compare(o1, o2);, +                } else {, +                    return 1;, +                }, +                return -TOTAL.comparator().compare(o1, o2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/doubles/InternalTermsStatsDoubleFacet.java, +            return (term < other.term ? -1 : (term == other.term ? 0 : 1));, +    List<DoubleEntry> mutableList() {, +        if (!(entries instanceof List)) {, +            entries = new ArrayList<DoubleEntry>(entries);, +        }, +        return (List<DoubleEntry>) entries;, +    }, +, +                if (!tsFacet.entries.isEmpty()) {, +                    List<DoubleEntry> entries = tsFacet.mutableList();, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/longs/InternalTermsStatsLongFacet.java, +            return (term < other.term ? -1 : (term == other.term ? 0 : 1));, +    List<LongEntry> mutableList() {, +        if (!(entries instanceof List)) {, +            entries = new ArrayList<LongEntry>(entries);, +        }, +        return (List<LongEntry>) entries;, +    }, +, +                if (!tsFacet.entries.isEmpty()) {, +                    List<LongEntry> entries = tsFacet.mutableList();, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacet.java, +                int i = o1.compareTo(o2);, +                if (i == 0) {, +                    i = COUNT.comparator().compare(o1, o2);, +                }, +                return i;, +                if (o2.total() < o1.total()) {, +                    return -1;, +                } else if (o2.total() == o1.total()) {, +                    return COUNT.comparator().compare(o1, o2);, +                } else {, +                    return 1;, +                }, +                return -TOTAL.comparator().compare(o1, o2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/termsstats/doubles/InternalTermsStatsDoubleFacet.java, +            return (term < other.term ? -1 : (term == other.term ? 0 : 1));, +    List<DoubleEntry> mutableList() {, +        if (!(entries instanceof List)) {, +            entries = new ArrayList<DoubleEntry>(entries);, +        }, +        return (List<DoubleEntry>) entries;, +    }]