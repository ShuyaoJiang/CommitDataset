[+++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +    private volatile boolean checksumOnMerge = true;, +        this.checksumOnMerge = indexSettings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, this.checksumOnMerge);, +            config.setCheckIntegrityAtMerge(checksumOnMerge);, +    public static final String INDEX_CHECKSUM_ON_MERGE = "index.checksum_on_merge";, +            final boolean checksumOnMerge = settings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge);, +            if (checksumOnMerge != InternalEngine.this.checksumOnMerge) {, +                logger.info("updating {} from [{}] to [{}]", InternalEngine.INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge, checksumOnMerge);, +                InternalEngine.this.checksumOnMerge = checksumOnMerge;, +                indexWriter.getConfig().setCheckIntegrityAtMerge(checksumOnMerge);, +            }, +, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +    private volatile boolean checksumOnMerge = true;, +        this.checksumOnMerge = indexSettings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, this.checksumOnMerge);, +            config.setCheckIntegrityAtMerge(checksumOnMerge);, +    public static final String INDEX_CHECKSUM_ON_MERGE = "index.checksum_on_merge";, +            final boolean checksumOnMerge = settings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge);, +            if (checksumOnMerge != InternalEngine.this.checksumOnMerge) {, +                logger.info("updating {} from [{}] to [{}]", InternalEngine.INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge, checksumOnMerge);, +                InternalEngine.this.checksumOnMerge = checksumOnMerge;, +                indexWriter.getConfig().setCheckIntegrityAtMerge(checksumOnMerge);, +            }, +, +++ b/src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java, +        indexDynamicSettings.addDynamicSetting(InternalEngine.INDEX_CHECKSUM_ON_MERGE, Validator.BOOLEAN);, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +    private volatile boolean checksumOnMerge = true;, +        this.checksumOnMerge = indexSettings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, this.checksumOnMerge);, +            config.setCheckIntegrityAtMerge(checksumOnMerge);, +    public static final String INDEX_CHECKSUM_ON_MERGE = "index.checksum_on_merge";, +            final boolean checksumOnMerge = settings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge);, +            if (checksumOnMerge != InternalEngine.this.checksumOnMerge) {, +                logger.info("updating {} from [{}] to [{}]", InternalEngine.INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge, checksumOnMerge);, +                InternalEngine.this.checksumOnMerge = checksumOnMerge;, +                indexWriter.getConfig().setCheckIntegrityAtMerge(checksumOnMerge);, +            }, +, +++ b/src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java, +        indexDynamicSettings.addDynamicSetting(InternalEngine.INDEX_CHECKSUM_ON_MERGE, Validator.BOOLEAN);, +++ b/src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java, +        , +        // INDEX_CHECKSUM_ON_MERGE, +        assertThat(engine(service).currentIndexWriterConfig().getCheckIntegrityAtMerge(), is(true));, +        client().admin().indices().prepareUpdateSettings("foo").setSettings(ImmutableSettings.builder().put(InternalEngine.INDEX_CHECKSUM_ON_MERGE, false).build()).get();, +        assertThat(engine(service).currentIndexWriterConfig().getCheckIntegrityAtMerge(), is(false));, +        client().admin().indices().prepareUpdateSettings("foo").setSettings(ImmutableSettings.builder().put(InternalEngine.INDEX_CHECKSUM_ON_MERGE, true).build()).get();, +        assertThat(engine(service).currentIndexWriterConfig().getCheckIntegrityAtMerge(), is(true));, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +    private volatile boolean checksumOnMerge = true;, +        this.checksumOnMerge = indexSettings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, this.checksumOnMerge);, +            config.setCheckIntegrityAtMerge(checksumOnMerge);, +    public static final String INDEX_CHECKSUM_ON_MERGE = "index.checksum_on_merge";, +            final boolean checksumOnMerge = settings.getAsBoolean(INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge);, +            if (checksumOnMerge != InternalEngine.this.checksumOnMerge) {, +                logger.info("updating {} from [{}] to [{}]", InternalEngine.INDEX_CHECKSUM_ON_MERGE, InternalEngine.this.checksumOnMerge, checksumOnMerge);, +                InternalEngine.this.checksumOnMerge = checksumOnMerge;, +                indexWriter.getConfig().setCheckIntegrityAtMerge(checksumOnMerge);, +            }, +, +++ b/src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java, +        indexDynamicSettings.addDynamicSetting(InternalEngine.INDEX_CHECKSUM_ON_MERGE, Validator.BOOLEAN);, +++ b/src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java, +        , +        // INDEX_CHECKSUM_ON_MERGE, +        assertThat(engine(service).currentIndexWriterConfig().getCheckIntegrityAtMerge(), is(true));, +        client().admin().indices().prepareUpdateSettings("foo").setSettings(ImmutableSettings.builder().put(InternalEngine.INDEX_CHECKSUM_ON_MERGE, false).build()).get();, +        assertThat(engine(service).currentIndexWriterConfig().getCheckIntegrityAtMerge(), is(false));, +        client().admin().indices().prepareUpdateSettings("foo").setSettings(ImmutableSettings.builder().put(InternalEngine.INDEX_CHECKSUM_ON_MERGE, true).build()).get();, +        assertThat(engine(service).currentIndexWriterConfig().getCheckIntegrityAtMerge(), is(true));, +++ b/src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java, +                .put(InternalEngine.INDEX_CHECKSUM_ON_MERGE, getRandom().nextBoolean())]