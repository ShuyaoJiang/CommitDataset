[+++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/SecurityTemplateService.java, +                // norelease we need to add some checking in the event the template needs to be updated and also the mappings need to be, +                // updated on index too!, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/SecurityTemplateService.java, +                // norelease we need to add some checking in the event the template needs to be updated and also the mappings need to be, +                // updated on index too!, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/action/role/PutRoleRequest.java, +import org.elasticsearch.xpack.security.support.MetadataUtils;, +import java.util.Map;, +    private Map<String, Object> metadata;, +        if (metadata != null && MetadataUtils.containsReservedMetadata(metadata)) {, +            validationException =, +                    addValidationError("metadata keys may not start with [" + MetadataUtils.RESERVED_PREFIX + "]", validationException);, +        }, +    public void metadata(Map<String, Object> metadata) {, +        this.metadata = metadata;, +    }, +, +    public Map<String, Object> metadata() {, +        return metadata;, +    }, +, +        metadata = in.readMap();, +        out.writeMap(metadata);, +                runAs,, +                metadata);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/SecurityTemplateService.java, +                // norelease we need to add some checking in the event the template needs to be updated and also the mappings need to be, +                // updated on index too!, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/action/role/PutRoleRequest.java, +import org.elasticsearch.xpack.security.support.MetadataUtils;, +import java.util.Map;, +    private Map<String, Object> metadata;, +        if (metadata != null && MetadataUtils.containsReservedMetadata(metadata)) {, +            validationException =, +                    addValidationError("metadata keys may not start with [" + MetadataUtils.RESERVED_PREFIX + "]", validationException);, +        }, +    public void metadata(Map<String, Object> metadata) {, +        this.metadata = metadata;, +    }, +, +    public Map<String, Object> metadata() {, +        return metadata;, +    }, +, +        metadata = in.readMap();, +        out.writeMap(metadata);, +                runAs,, +                metadata);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/action/role/PutRoleRequestBuilder.java, +import java.util.Map;, +, +        request.metadata(descriptor.getMetadata());, +, +    public PutRoleRequestBuilder metadata(Map<String, Object> metadata) {, +        request.metadata(metadata);, +        return this;, +    }, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/SecurityTemplateService.java, +                // norelease we need to add some checking in the event the template needs to be updated and also the mappings need to be, +                // updated on index too!, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/action/role/PutRoleRequest.java, +import org.elasticsearch.xpack.security.support.MetadataUtils;, +import java.util.Map;, +    private Map<String, Object> metadata;, +        if (metadata != null && MetadataUtils.containsReservedMetadata(metadata)) {, +            validationException =, +                    addValidationError("metadata keys may not start with [" + MetadataUtils.RESERVED_PREFIX + "]", validationException);, +        }, +    public void metadata(Map<String, Object> metadata) {, +        this.metadata = metadata;, +    }, +, +    public Map<String, Object> metadata() {, +        return metadata;, +    }, +, +        metadata = in.readMap();, +        out.writeMap(metadata);, +                runAs,, +                metadata);, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/action/role/PutRoleRequestBuilder.java, +import java.util.Map;, +, +        request.metadata(descriptor.getMetadata());, +, +    public PutRoleRequestBuilder metadata(Map<String, Object> metadata) {, +        request.metadata(metadata);, +        return this;, +    }, +++ b/elasticsearch/x-pack/security/src/main/java/org/elasticsearch/xpack/security/authz/RoleDescriptor.java, +import org.elasticsearch.xpack.security.support.MetadataUtils;, +import java.util.Collections;, +import java.util.Map;, +    private final Map<String, Object> metadata;, +        this(name, clusterPrivileges, indicesPrivileges, runAs, null);, +    }, +, +    public RoleDescriptor(String name,, +                          @Nullable String[] clusterPrivileges,]