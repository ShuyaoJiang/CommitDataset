[+++ b/plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedDiscoveryPlugin.java, +import java.nio.file.Path;, +    private final Path configPath;, +    public FileBasedDiscoveryPlugin(Settings settings, Path configPath) {, +        this.configPath = configPath;, +            () -> new FileBasedUnicastHostsProvider(, +                    new Environment(settings, configPath), transportService, fileBasedDiscoveryExecutorService));, +++ b/plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedDiscoveryPlugin.java, +import java.nio.file.Path;, +    private final Path configPath;, +    public FileBasedDiscoveryPlugin(Settings settings, Path configPath) {, +        this.configPath = configPath;, +            () -> new FileBasedUnicastHostsProvider(, +                    new Environment(settings, configPath), transportService, fileBasedDiscoveryExecutorService));, +++ b/plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedUnicastHostsProvider.java, +    FileBasedUnicastHostsProvider(Environment environment, TransportService transportService, ExecutorService executorService) {, +        super(environment.settings());, +        this.unicastHostsFilePath = environment.configFile().resolve("discovery-file").resolve(UNICAST_HOSTS_FILE);, +++ b/plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedDiscoveryPlugin.java, +import java.nio.file.Path;, +    private final Path configPath;, +    public FileBasedDiscoveryPlugin(Settings settings, Path configPath) {, +        this.configPath = configPath;, +            () -> new FileBasedUnicastHostsProvider(, +                    new Environment(settings, configPath), transportService, fileBasedDiscoveryExecutorService));, +++ b/plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedUnicastHostsProvider.java, +    FileBasedUnicastHostsProvider(Environment environment, TransportService transportService, ExecutorService executorService) {, +        super(environment.settings());, +        this.unicastHostsFilePath = environment.configFile().resolve("discovery-file").resolve(UNICAST_HOSTS_FILE);, +++ b/plugins/discovery-file/src/test/java/org/elasticsearch/discovery/file/FileBasedDiscoveryPluginTests.java, +import java.nio.file.Path;, +        FileBasedDiscoveryPlugin plugin = new FileBasedDiscoveryPlugin(Settings.EMPTY, createTempDir());, +        FileBasedDiscoveryPlugin plugin = new FileBasedDiscoveryPlugin(settings, createTempDir());, +, +++ b/plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedDiscoveryPlugin.java, +import java.nio.file.Path;, +    private final Path configPath;, +    public FileBasedDiscoveryPlugin(Settings settings, Path configPath) {, +        this.configPath = configPath;, +            () -> new FileBasedUnicastHostsProvider(, +                    new Environment(settings, configPath), transportService, fileBasedDiscoveryExecutorService));, +++ b/plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedUnicastHostsProvider.java, +    FileBasedUnicastHostsProvider(Environment environment, TransportService transportService, ExecutorService executorService) {, +        super(environment.settings());, +        this.unicastHostsFilePath = environment.configFile().resolve("discovery-file").resolve(UNICAST_HOSTS_FILE);, +++ b/plugins/discovery-file/src/test/java/org/elasticsearch/discovery/file/FileBasedDiscoveryPluginTests.java, +import java.nio.file.Path;, +        FileBasedDiscoveryPlugin plugin = new FileBasedDiscoveryPlugin(Settings.EMPTY, createTempDir());, +        FileBasedDiscoveryPlugin plugin = new FileBasedDiscoveryPlugin(settings, createTempDir());, +, +++ b/plugins/discovery-file/src/test/java/org/elasticsearch/discovery/file/FileBasedUnicastHostsProviderTests.java, +        final Environment environment = new Environment(settings);, +        final FileBasedUnicastHostsProvider provider = new FileBasedUnicastHostsProvider(environment, transportService, executorService);, +        final Path configPath;, +        if (randomBoolean()) {, +            configPath = homeDir.resolve("config");, +        } else {, +            configPath = createTempDir();, +        }, +        final Path discoveryFilePath = configPath.resolve("discovery-file");, +        Files.createDirectories(discoveryFilePath);, +        final Path unicastHostsPath = discoveryFilePath.resolve(UNICAST_HOSTS_FILE);, +        return new FileBasedUnicastHostsProvider(, +                new Environment(settings, configPath), transportService, executorService).buildDynamicNodes();]