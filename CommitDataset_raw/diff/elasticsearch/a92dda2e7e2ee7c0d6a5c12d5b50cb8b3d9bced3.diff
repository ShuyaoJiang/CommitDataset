[+++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +import com.carrotsearch.hppc.ObjectLongHashMap;, +import org.apache.lucene.index.FieldInfo;, +import org.apache.lucene.index.Terms;, +import org.apache.lucene.search.suggest.document.CompletionTerms;, +import org.elasticsearch.common.FieldMemoryStats;, +import org.elasticsearch.common.regex.Regex;, +import org.elasticsearch.search.suggest.completion.CompletionStats;, +     * Returns the {@link CompletionStats} for this engine, +     */, +    public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {, +        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {, +            long sizeInBytes = 0;, +            ObjectLongHashMap<String> completionFields = null;, +            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {, +                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length);, +            }, +            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {, +                LeafReader atomicReader = atomicReaderContext.reader();, +                for (FieldInfo info : atomicReader.getFieldInfos()) {, +                    Terms terms = atomicReader.terms(info.name);, +                    if (terms instanceof CompletionTerms) {, +                        // TODO: currently we load up the suggester for reporting its size, +                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed();, +                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {, +                            completionFields.addTo(info.name, fstSize);, +                        }, +                        sizeInBytes += fstSize;, +                    }, +                }, +            }, +            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields));, +        }, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +import com.carrotsearch.hppc.ObjectLongHashMap;, +import org.apache.lucene.index.FieldInfo;, +import org.apache.lucene.index.Terms;, +import org.apache.lucene.search.suggest.document.CompletionTerms;, +import org.elasticsearch.common.FieldMemoryStats;, +import org.elasticsearch.common.regex.Regex;, +import org.elasticsearch.search.suggest.completion.CompletionStats;, +     * Returns the {@link CompletionStats} for this engine, +     */, +    public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {, +        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {, +            long sizeInBytes = 0;, +            ObjectLongHashMap<String> completionFields = null;, +            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {, +                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length);, +            }, +            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {, +                LeafReader atomicReader = atomicReaderContext.reader();, +                for (FieldInfo info : atomicReader.getFieldInfos()) {, +                    Terms terms = atomicReader.terms(info.name);, +                    if (terms instanceof CompletionTerms) {, +                        // TODO: currently we load up the suggester for reporting its size, +                        long fstSize = ((CompletionTerms) terms).suggester().ramBytesUsed();, +                        if (Regex.simpleMatch(fieldNamePatterns, info.name)) {, +                            completionFields.addTo(info.name, fstSize);, +                        }, +                        sizeInBytes += fstSize;, +                    }, +                }, +            }, +            return new CompletionStats(sizeInBytes, completionFields == null ? null : new FieldMemoryStats(completionFields));, +        }, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +import java.io.UncheckedIOException;, +        readAllowed();, +        try {, +            CompletionStats stats = getEngine().completionStats(fields);, +            return stats;, +        } catch (IOException e) {, +            throw new UncheckedIOException(e);, +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +import com.carrotsearch.hppc.ObjectLongHashMap;, +import org.apache.lucene.index.FieldInfo;, +import org.apache.lucene.index.Terms;, +import org.apache.lucene.search.suggest.document.CompletionTerms;, +import org.elasticsearch.common.FieldMemoryStats;, +import org.elasticsearch.common.regex.Regex;, +import org.elasticsearch.search.suggest.completion.CompletionStats;, +     * Returns the {@link CompletionStats} for this engine, +     */, +    public CompletionStats completionStats(String... fieldNamePatterns) throws IOException {, +        try (Engine.Searcher currentSearcher = acquireSearcher("completion_stats", SearcherScope.INTERNAL)) {, +            long sizeInBytes = 0;, +            ObjectLongHashMap<String> completionFields = null;, +            if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {, +                completionFields = new ObjectLongHashMap<>(fieldNamePatterns.length);, +            }, +            for (LeafReaderContext atomicReaderContext : currentSearcher.reader().leaves()) {, +                LeafReader atomicReader = atomicReaderContext.reader();, +                for (FieldInfo info : atomicReader.getFieldInfos()) {]