[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java, +                .setPreserveExisting(request.isPreserveExisting()), +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java, +                .setPreserveExisting(request.isPreserveExisting()), +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/UpdateSettingsClusterStateUpdateRequest.java, +    private boolean preserveExisting = false;, +    /**, +     * Returns <code>true</code> iff the settings update should only add but not update settings. If the setting already exists, +     * it should not be overwritten by this update. The default is <code>false</code>, +     */, +    public boolean isPreserveExisting() {, +        return preserveExisting;, +    }, +, +    /**, +     * Iff set to <code>true</code> this settings update will only add settings not already set on an index. Existing settings remain, +     * unchanged., +     */, +    public UpdateSettingsClusterStateUpdateRequest setPreserveExisting(boolean preserveExisting) {, +        this.preserveExisting = preserveExisting;, +        return this;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java, +                .setPreserveExisting(request.isPreserveExisting()), +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/UpdateSettingsClusterStateUpdateRequest.java, +    private boolean preserveExisting = false;, +    /**, +     * Returns <code>true</code> iff the settings update should only add but not update settings. If the setting already exists, +     * it should not be overwritten by this update. The default is <code>false</code>, +     */, +    public boolean isPreserveExisting() {, +        return preserveExisting;, +    }, +, +    /**, +     * Iff set to <code>true</code> this settings update will only add settings not already set on an index. Existing settings remain, +     * unchanged., +     */, +    public UpdateSettingsClusterStateUpdateRequest setPreserveExisting(boolean preserveExisting) {, +        this.preserveExisting = preserveExisting;, +        return this;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/UpdateSettingsRequest.java, +    private boolean preserveExisting = false;, +     * Returns <code>true</code> iff the settings update should only add but not update settings. If the setting already exists, +     * it should not be overwritten by this update. The default is <code>false</code>, +     */, +    public boolean isPreserveExisting() {, +        return preserveExisting;, +    }, +, +    /**, +     * Iff set to <code>true</code> this settings update will only add settings not already set on an index. Existing settings remain, +     * unchanged., +     */, +    public UpdateSettingsRequest setPreserveExisting(boolean preserveExisting) {, +        this.preserveExisting = preserveExisting;, +        return this;, +    }, +, +    /**, +        preserveExisting = in.readBoolean();, +        out.writeBoolean(preserveExisting);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java, +                .setPreserveExisting(request.isPreserveExisting()), +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/UpdateSettingsClusterStateUpdateRequest.java, +    private boolean preserveExisting = false;, +    /**, +     * Returns <code>true</code> iff the settings update should only add but not update settings. If the setting already exists, +     * it should not be overwritten by this update. The default is <code>false</code>, +     */, +    public boolean isPreserveExisting() {, +        return preserveExisting;, +    }, +, +    /**, +     * Iff set to <code>true</code> this settings update will only add settings not already set on an index. Existing settings remain, +     * unchanged., +     */, +    public UpdateSettingsClusterStateUpdateRequest setPreserveExisting(boolean preserveExisting) {, +        this.preserveExisting = preserveExisting;, +        return this;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/UpdateSettingsRequest.java, +    private boolean preserveExisting = false;, +     * Returns <code>true</code> iff the settings update should only add but not update settings. If the setting already exists, +     * it should not be overwritten by this update. The default is <code>false</code>, +     */, +    public boolean isPreserveExisting() {, +        return preserveExisting;, +    }, +, +    /**, +     * Iff set to <code>true</code> this settings update will only add settings not already set on an index. Existing settings remain, +     * unchanged., +     */, +    public UpdateSettingsRequest setPreserveExisting(boolean preserveExisting) {, +        this.preserveExisting = preserveExisting;, +        return this;, +    }, +, +    /**, +        preserveExisting = in.readBoolean();]