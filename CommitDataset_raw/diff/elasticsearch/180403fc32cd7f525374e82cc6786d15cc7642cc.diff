[+++ b/src/main/java/org/elasticsearch/script/mustache/JsonEscapingMustacheFactory.java, +import com.fasterxml.jackson.core.io.JsonStringEncoder;, +            JsonStringEncoder utils = new JsonStringEncoder();, +            writer.write(utils.quoteAsString(value));;, +++ b/src/main/java/org/elasticsearch/script/mustache/JsonEscapingMustacheFactory.java, +import com.fasterxml.jackson.core.io.JsonStringEncoder;, +            JsonStringEncoder utils = new JsonStringEncoder();, +            writer.write(utils.quoteAsString(value));;, +++ b/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTest.java, +    private JsonEscapingMustacheFactory escaper;, +        escaper = new JsonEscapingMustacheFactory();, +            escaper.encode("hello \n world", writer);, +            assertThat(writer.toString(), equalTo("hello \\n world"));, +            escaper.encode("\n", writer);, +            assertThat(writer.toString(), equalTo("\\n"));, +        Character[] specialChars = new Character[]{, +                '\"', , +                '\\', , +                '\u0000', , +                '\u0001',, +                '\u0002',, +                '\u0003',, +                '\u0004',, +                '\u0005',, +                '\u0006',, +                '\u0007',, +                '\u0008',, +                '\u0009',, +                '\u000B',, +                '\u000C',, +                '\u000E',, +                '\u000F',, +                '\u001F'};, +        String[] escapedChars = new String[]{, +                "\\\"", , +                "\\\\", , +                "\\u0000", , +                "\\u0001",, +                "\\u0002",, +                "\\u0003",, +                "\\u0004",, +                "\\u0005",, +                "\\u0006",, +                "\\u0007",, +                "\\u0008",, +                "\\u0009",, +                "\\u000B",, +                "\\u000C",, +                "\\u000E",, +                "\\u000F",, +                "\\u001F"};, +            StringWriter expect = new StringWriter();, +                expect.write(s);, +, +                int charIndex = randomInt(7);, +                writer.append(specialChars[charIndex]);, +                expect.append(escapedChars[charIndex]);, +            escaper.encode(writer.toString(), target);, +            assertThat(expect.toString(), equalTo(target.toString()));, +            if (isEscapeChar(string.charAt(i))) {, +    /**, +     * From https://www.ietf.org/rfc/rfc4627.txt:, +     * , +     * All Unicode characters may be placed within the, +     * quotation marks except for the characters that must be escaped:, +     * quotation mark, reverse solidus, and the control characters (U+0000, +     * through U+001F). , +     * */, +    private static boolean isEscapeChar(char c) {, +        switch (c) {, +        case '"':, +        case '\\':, +            return true;, +        }, +        , +        if (c < '\u002F'), +            return true;, +        return false;, +    }]