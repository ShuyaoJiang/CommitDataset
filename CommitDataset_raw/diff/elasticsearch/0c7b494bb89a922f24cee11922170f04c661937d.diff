[+++ b/docs/reference/modules/plugins.asciidoc, +[float], +==== Timeout settings, +, +By default, the `plugin` script will wait indefinitely when downloading before failing., +The timeout parameter can be used to explicitly specify how long it waits. Here is some examples of setting it to, +different values:, +, +[source,shell], +-----------------------------------, +# Wait for 30 seconds before failing, +bin/plugin --install mobz/elasticsearch-head --timeout 30s, +, +# Wait for 1 minute before failing, +bin/plugin --install mobz/elasticsearch-head --timeout 1m, +, +# Wait forever (default), +bin/plugin --install mobz/elasticsearch-head --timeout 0, +-----------------------------------, +++ b/docs/reference/modules/plugins.asciidoc, +[float], +==== Timeout settings, +, +By default, the `plugin` script will wait indefinitely when downloading before failing., +The timeout parameter can be used to explicitly specify how long it waits. Here is some examples of setting it to, +different values:, +, +[source,shell], +-----------------------------------, +# Wait for 30 seconds before failing, +bin/plugin --install mobz/elasticsearch-head --timeout 30s, +, +# Wait for 1 minute before failing, +bin/plugin --install mobz/elasticsearch-head --timeout 1m, +, +# Wait forever (default), +bin/plugin --install mobz/elasticsearch-head --timeout 0, +-----------------------------------, +++ b/src/main/java/org/elasticsearch/common/http/client/HttpDownloadHelper.java, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticSearchTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +    public boolean download(URL source, File dest, @Nullable DownloadProgress progress, TimeValue timeout) throws Exception {, +, +        try {, +            getThread.join(timeout.millis());, +                throw new ElasticSearchTimeoutException("The GET operation took longer than " + timeout + ", stopping it.");, +            }, +        }, +        catch (InterruptedException ie) {, +            return false;, +        } finally {, +                IOUtils.close(os, is);, +        void closeStreams() throws IOException {, +            if (success) {, +                IOUtils.close(is, os);, +            } else {, +                IOUtils.closeWhileHandlingException(is, os);, +                if (dest != null && dest.exists()) {, +}, +++ b/docs/reference/modules/plugins.asciidoc, +[float], +==== Timeout settings, +, +By default, the `plugin` script will wait indefinitely when downloading before failing., +The timeout parameter can be used to explicitly specify how long it waits. Here is some examples of setting it to, +different values:, +, +[source,shell], +-----------------------------------, +# Wait for 30 seconds before failing, +bin/plugin --install mobz/elasticsearch-head --timeout 30s, +, +# Wait for 1 minute before failing, +bin/plugin --install mobz/elasticsearch-head --timeout 1m, +, +# Wait forever (default), +bin/plugin --install mobz/elasticsearch-head --timeout 0, +-----------------------------------, +++ b/src/main/java/org/elasticsearch/common/http/client/HttpDownloadHelper.java, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ElasticSearchTimeoutException;, +import org.elasticsearch.common.unit.TimeValue;, +    public boolean download(URL source, File dest, @Nullable DownloadProgress progress, TimeValue timeout) throws Exception {, +, +        try {, +            getThread.join(timeout.millis());, +                throw new ElasticSearchTimeoutException("The GET operation took longer than " + timeout + ", stopping it.");, +            }, +        }, +        catch (InterruptedException ie) {, +            return false;, +        } finally {, +                IOUtils.close(os, is);, +        void closeStreams() throws IOException {, +            if (success) {, +                IOUtils.close(is, os);, +            } else {, +                IOUtils.closeWhileHandlingException(is, os);, +                if (dest != null && dest.exists()) {]