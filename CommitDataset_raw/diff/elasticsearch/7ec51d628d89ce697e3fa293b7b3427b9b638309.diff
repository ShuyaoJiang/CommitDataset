[+++ b/docs/plugins/repository-s3.asciidoc, +    Multipart API and may result in upload errors. Defaults to the minimum, +    between `100mb` and `5%` of the heap size., +++ b/docs/plugins/repository-s3.asciidoc, +    Multipart API and may result in upload errors. Defaults to the minimum, +    between `100mb` and `5%` of the heap size., +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3Repository.java, +import org.elasticsearch.monitor.jvm.JvmInfo;, +, +        /**, +         * Default is to use 100MB (S3 defaults) for heaps above 2GB and 5% of, +         * the available memory for smaller heaps., +         */, +        ByteSizeValue DEFAULT_BUFFER_SIZE = new ByteSizeValue(, +                Math.max(, +                        ByteSizeUnit.MB.toBytes(5), // minimum value, +                        Math.min(, +                                ByteSizeUnit.MB.toBytes(100),, +                                JvmInfo.jvmInfo().getMem().getHeapMax().getBytes() / 20)),, +                ByteSizeUnit.BYTES);, +, +         * use of the Multipart API and may result in upload errors. Defaults to the minimum between 100MB and 5% of the heap size., +            Setting.byteSizeSetting("repositories.s3.buffer_size", DEFAULT_BUFFER_SIZE,, +, +            Setting.byteSizeSetting("buffer_size", Repositories.DEFAULT_BUFFER_SIZE,, +++ b/docs/plugins/repository-s3.asciidoc, +    Multipart API and may result in upload errors. Defaults to the minimum, +    between `100mb` and `5%` of the heap size., +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3Repository.java, +import org.elasticsearch.monitor.jvm.JvmInfo;, +, +        /**, +         * Default is to use 100MB (S3 defaults) for heaps above 2GB and 5% of, +         * the available memory for smaller heaps., +         */, +        ByteSizeValue DEFAULT_BUFFER_SIZE = new ByteSizeValue(, +                Math.max(, +                        ByteSizeUnit.MB.toBytes(5), // minimum value, +                        Math.min(, +                                ByteSizeUnit.MB.toBytes(100),, +                                JvmInfo.jvmInfo().getMem().getHeapMax().getBytes() / 20)),, +                ByteSizeUnit.BYTES);, +, +         * use of the Multipart API and may result in upload errors. Defaults to the minimum between 100MB and 5% of the heap size., +            Setting.byteSizeSetting("repositories.s3.buffer_size", DEFAULT_BUFFER_SIZE,, +, +            Setting.byteSizeSetting("buffer_size", Repositories.DEFAULT_BUFFER_SIZE,, +++ b/plugins/repository-s3/src/test/java/org/elasticsearch/repositories/s3/S3RepositoryTests.java, +import org.hamcrest.Matchers;, +    public void testDefaultBufferSize() {, +        ByteSizeValue defaultBufferSize = S3Repository.Repository.BUFFER_SIZE_SETTING.get(Settings.EMPTY);, +        assertThat(defaultBufferSize, Matchers.lessThanOrEqualTo(new ByteSizeValue(100, ByteSizeUnit.MB)));, +        assertThat(defaultBufferSize, Matchers.greaterThanOrEqualTo(new ByteSizeValue(5, ByteSizeUnit.MB)));, +, +        ByteSizeValue defaultNodeBufferSize = S3Repository.Repositories.BUFFER_SIZE_SETTING.get(Settings.EMPTY);, +        assertEquals(defaultBufferSize, defaultNodeBufferSize);, +    }]