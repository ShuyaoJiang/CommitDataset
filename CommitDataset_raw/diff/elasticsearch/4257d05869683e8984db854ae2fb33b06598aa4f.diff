[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TimedRequest.java, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TimedRequest.java, +, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TimedRequest.java, +, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/IndexLifecycleIT.java, +import org.apache.http.util.EntityUtils;, +        // TODO: NORELEASE convert this to using the high level client once, +        // there are APIs for it, +        Request statusReq = new Request("GET", "/_ilm/status");, +        Response statusResponse = client().performRequest(statusReq);, +        String statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertEquals("{\"operation_mode\":\"RUNNING\"}", statusResponseString);, +        // TODO: NORELEASE convert this to using the high level client once there are APIs for it, +        statusReq = new Request("GET", "/_ilm/status");, +        statusResponse = client().performRequest(statusReq);, +        statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertThat(statusResponseString,, +                Matchers.anyOf(equalTo("{\"operation_mode\":\"STOPPING\"}"), equalTo("{\"operation_mode\":\"STOPPED\"}")));, +        // TODO: NORELEASE convert this to using the high level client once there are APIs for it, +        statusReq = new Request("GET", "/_ilm/status");, +        statusResponse = client().performRequest(statusReq);, +        statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertEquals("{\"operation_mode\":\"RUNNING\"}", statusResponseString);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TimedRequest.java, +, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/IndexLifecycleIT.java, +import org.apache.http.util.EntityUtils;, +        // TODO: NORELEASE convert this to using the high level client once, +        // there are APIs for it, +        Request statusReq = new Request("GET", "/_ilm/status");, +        Response statusResponse = client().performRequest(statusReq);, +        String statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertEquals("{\"operation_mode\":\"RUNNING\"}", statusResponseString);, +        // TODO: NORELEASE convert this to using the high level client once there are APIs for it, +        statusReq = new Request("GET", "/_ilm/status");, +        statusResponse = client().performRequest(statusReq);, +        statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertThat(statusResponseString,, +                Matchers.anyOf(equalTo("{\"operation_mode\":\"STOPPING\"}"), equalTo("{\"operation_mode\":\"STOPPED\"}")));, +        // TODO: NORELEASE convert this to using the high level client once there are APIs for it, +        statusReq = new Request("GET", "/_ilm/status");, +        statusResponse = client().performRequest(statusReq);, +        statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertEquals("{\"operation_mode\":\"RUNNING\"}", statusResponseString);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TimedRequest.java, +, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/IndexLifecycleIT.java, +import org.apache.http.util.EntityUtils;, +        // TODO: NORELEASE convert this to using the high level client once, +        // there are APIs for it, +        Request statusReq = new Request("GET", "/_ilm/status");, +        Response statusResponse = client().performRequest(statusReq);, +        String statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertEquals("{\"operation_mode\":\"RUNNING\"}", statusResponseString);, +        // TODO: NORELEASE convert this to using the high level client once there are APIs for it, +        statusReq = new Request("GET", "/_ilm/status");, +        statusResponse = client().performRequest(statusReq);, +        statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertThat(statusResponseString,, +                Matchers.anyOf(equalTo("{\"operation_mode\":\"STOPPING\"}"), equalTo("{\"operation_mode\":\"STOPPED\"}")));, +        // TODO: NORELEASE convert this to using the high level client once there are APIs for it, +        statusReq = new Request("GET", "/_ilm/status");, +        statusResponse = client().performRequest(statusReq);, +        statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertEquals("{\"operation_mode\":\"RUNNING\"}", statusResponseString);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TimedRequest.java, +, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/IndexLifecycleIT.java, +import org.apache.http.util.EntityUtils;, +        // TODO: NORELEASE convert this to using the high level client once, +        // there are APIs for it, +        Request statusReq = new Request("GET", "/_ilm/status");, +        Response statusResponse = client().performRequest(statusReq);, +        String statusResponseString = EntityUtils.toString(statusResponse.getEntity());, +        assertEquals("{\"operation_mode\":\"RUNNING\"}", statusResponseString);]