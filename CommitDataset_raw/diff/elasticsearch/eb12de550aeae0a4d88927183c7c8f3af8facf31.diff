[+++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatters.java, +import java.time.temporal.TemporalQueries;, +    private static final DateTimeFormatter STRICT_DATE_OPTIONAL_TIME_PRINTER = new DateTimeFormatterBuilder(), +        .append(STRICT_YEAR_MONTH_DAY_FORMATTER), +        .appendLiteral('T'), +        .append(STRICT_HOUR_MINUTE_SECOND_FORMATTER), +        .appendFraction(NANO_OF_SECOND, 3, 9, true), +        .optionalStart(), +        .appendZoneOrOffsetId(), +        .optionalEnd(), +        .toFormatter(Locale.ROOT);, +, +        STRICT_DATE_OPTIONAL_TIME_PRINTER, STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_1);, +        new DateTimeFormatterBuilder().appendPattern("yyyyDDD").append(BASIC_T_TIME_PRINTER), +            .appendZoneOrOffsetId().toFormatter(Locale.ROOT),, +            .append(STRICT_BASIC_WEEK_DATE_PRINTER), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendZoneOrOffsetId(), +            .append(STRICT_BASIC_WEEK_DATE_PRINTER), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendZoneOrOffsetId(), +            .toFormatter(Locale.ROOT),, +        new DateTimeFormatterBuilder(), +            .append(STRICT_BASIC_WEEK_DATE_PRINTER), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .append(TIME_ZONE_FORMATTER_NO_COLON), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendFraction(MILLI_OF_SECOND, 3, 3, true), +            .appendZoneOrOffsetId(), +            .toFormatter(Locale.ROOT),, +        new DateTimeFormatterBuilder(), +            .append(STRICT_BASIC_WEEK_DATE_FORMATTER), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendFraction(MILLI_OF_SECOND, 3, 3, true), +            .append(TIME_ZONE_FORMATTER_NO_COLON), +            .appendZoneOrOffsetId().toFormatter(Locale.ROOT),, +        new DateTimeFormatterBuilder().append(STRICT_ORDINAL_DATE_TIME_NO_MILLIS_BASE), +            .appendZoneOrOffsetId().toFormatter(Locale.ROOT),, +        new DateTimeFormatterBuilder().append(STRICT_ORDINAL_DATE_TIME_FORMATTER_BASE), +        ZoneId zoneOffset = accessor.query(TemporalQueries.zone());, +        if (zoneOffset != null) {, +            result = result.withZoneSameLocal(zoneOffset);, +        }, +, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatters.java, +import java.time.temporal.TemporalQueries;, +    private static final DateTimeFormatter STRICT_DATE_OPTIONAL_TIME_PRINTER = new DateTimeFormatterBuilder(), +        .append(STRICT_YEAR_MONTH_DAY_FORMATTER), +        .appendLiteral('T'), +        .append(STRICT_HOUR_MINUTE_SECOND_FORMATTER), +        .appendFraction(NANO_OF_SECOND, 3, 9, true), +        .optionalStart(), +        .appendZoneOrOffsetId(), +        .optionalEnd(), +        .toFormatter(Locale.ROOT);, +, +        STRICT_DATE_OPTIONAL_TIME_PRINTER, STRICT_DATE_OPTIONAL_TIME_FORMATTER_WITH_NANOS_1);, +        new DateTimeFormatterBuilder().appendPattern("yyyyDDD").append(BASIC_T_TIME_PRINTER), +            .appendZoneOrOffsetId().toFormatter(Locale.ROOT),, +            .append(STRICT_BASIC_WEEK_DATE_PRINTER), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendZoneOrOffsetId(), +            .append(STRICT_BASIC_WEEK_DATE_PRINTER), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendZoneOrOffsetId(), +            .toFormatter(Locale.ROOT),, +        new DateTimeFormatterBuilder(), +            .append(STRICT_BASIC_WEEK_DATE_PRINTER), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .append(TIME_ZONE_FORMATTER_NO_COLON), +            .appendLiteral("T"), +            .appendValue(HOUR_OF_DAY, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(MINUTE_OF_HOUR, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendValue(SECOND_OF_MINUTE, 2, 2, SignStyle.NOT_NEGATIVE), +            .appendFraction(MILLI_OF_SECOND, 3, 3, true), +            .appendZoneOrOffsetId()]