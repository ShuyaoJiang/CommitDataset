[+++ b/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        addZipConfiguration(project), +        File home = new File(baseDir, "elasticsearch-${ElasticsearchProperties.version}"), +        List setupDependsOn = [project.configurations.elasticsearchZip], +        setupDependsOn.addAll(task.dependsOn), +        Task setup = project.tasks.create(name: task.name + '#setup', type: Copy, dependsOn: setupDependsOn) {, +            from { project.zipTree(project.configurations.elasticsearchZip.singleFile) }, +            into baseDir, +        setup = project.tasks.create(name: "${task.name}#clean", type: Delete, dependsOn: setup) {, +            delete new File(home, 'plugins'), new File(home, 'data'), new File(home, 'logs'), +        }, +            File configFile = new File(home, 'config' + File.separator + 'elasticsearch.yml'), +            configFile.setText("cluster.name: ${clusterName}", 'UTF-8'), +        File pidFile = pidFile(baseDir), +        List esArgs = [, +            "-Des.http.port=${config.httpPort}",, +            "-Des.transport.tcp.port=${config.transportPort}",, +            "-Des.pidfile=${pidFile}",, +            "-Des.path.repo=${home}/repo",, +            "-Des.path.shared_data=${home}/../",, +        ], +        esArgs.addAll(config.systemProperties.collect {key, value -> "-D${key}=${value}"}), +        Task start;, +        Task stop = project.tasks.create(name: task.name + '#stop', type: Exec) {, +    static void addZipConfiguration(Project project) {, +            elasticsearchZip, +            elasticsearchZip "org.elasticsearch.distribution.zip:elasticsearch:${elasticsearchVersion}@zip", +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        addZipConfiguration(project), +        File home = new File(baseDir, "elasticsearch-${ElasticsearchProperties.version}"), +        List setupDependsOn = [project.configurations.elasticsearchZip], +        setupDependsOn.addAll(task.dependsOn), +        Task setup = project.tasks.create(name: task.name + '#setup', type: Copy, dependsOn: setupDependsOn) {, +            from { project.zipTree(project.configurations.elasticsearchZip.singleFile) }, +            into baseDir, +        setup = project.tasks.create(name: "${task.name}#clean", type: Delete, dependsOn: setup) {, +            delete new File(home, 'plugins'), new File(home, 'data'), new File(home, 'logs'), +        }, +            File configFile = new File(home, 'config' + File.separator + 'elasticsearch.yml'), +            configFile.setText("cluster.name: ${clusterName}", 'UTF-8'), +        File pidFile = pidFile(baseDir), +        List esArgs = [, +            "-Des.http.port=${config.httpPort}",, +            "-Des.transport.tcp.port=${config.transportPort}",, +            "-Des.pidfile=${pidFile}",, +            "-Des.path.repo=${home}/repo",, +            "-Des.path.shared_data=${home}/../",, +        ], +        esArgs.addAll(config.systemProperties.collect {key, value -> "-D${key}=${value}"}), +        Task start;, +        Task stop = project.tasks.create(name: task.name + '#stop', type: Exec) {, +    static void addZipConfiguration(Project project) {, +            elasticsearchZip, +            elasticsearchZip "org.elasticsearch.distribution.zip:elasticsearch:${elasticsearchVersion}@zip", +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +@defaultMessage Please do not terminate the application, +java.lang.System#exit(int), +java.lang.Runtime#exit(int), +java.lang.Runtime#halt(int), +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        addZipConfiguration(project), +        File home = new File(baseDir, "elasticsearch-${ElasticsearchProperties.version}"), +        List setupDependsOn = [project.configurations.elasticsearchZip], +        setupDependsOn.addAll(task.dependsOn), +        Task setup = project.tasks.create(name: task.name + '#setup', type: Copy, dependsOn: setupDependsOn) {, +            from { project.zipTree(project.configurations.elasticsearchZip.singleFile) }, +            into baseDir, +        setup = project.tasks.create(name: "${task.name}#clean", type: Delete, dependsOn: setup) {, +            delete new File(home, 'plugins'), new File(home, 'data'), new File(home, 'logs'), +        }, +            File configFile = new File(home, 'config' + File.separator + 'elasticsearch.yml'), +            configFile.setText("cluster.name: ${clusterName}", 'UTF-8'), +        File pidFile = pidFile(baseDir), +        List esArgs = [, +            "-Des.http.port=${config.httpPort}",, +            "-Des.transport.tcp.port=${config.transportPort}",, +            "-Des.pidfile=${pidFile}",, +            "-Des.path.repo=${home}/repo",, +            "-Des.path.shared_data=${home}/../",, +        ], +        esArgs.addAll(config.systemProperties.collect {key, value -> "-D${key}=${value}"}), +        Task start;, +        Task stop = project.tasks.create(name: task.name + '#stop', type: Exec) {, +    static void addZipConfiguration(Project project) {, +            elasticsearchZip, +            elasticsearchZip "org.elasticsearch.distribution.zip:elasticsearch:${elasticsearchVersion}@zip", +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +, +@defaultMessage Please do not terminate the application, +java.lang.System#exit(int)]