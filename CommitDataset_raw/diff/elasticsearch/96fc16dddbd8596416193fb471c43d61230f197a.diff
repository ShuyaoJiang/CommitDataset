[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java, +    /**, +     * Allows to override how shard routing is iterated over. Default implementation uses, +     * {@link ShardsIterator#nextActiveOrNull()}., +     *, +     * <p>Note, if overriding this method, make sure to also override {@link #hasNextShard(org.elasticsearch.cluster.routing.ShardsIterator)}., +     */, +    protected ShardRouting nextShardOrNull(ShardsIterator shardIt) {, +        return shardIt.nextActiveOrNull();, +    }, +, +    /**, +     * Allows to override how shard routing is iterated over. Default implementation uses, +     * {@link ShardsIterator#hasNextActive()}., +     *, +     * <p>Note, if overriding this method, make sure to also override {@link #nextShardOrNull(org.elasticsearch.cluster.routing.ShardsIterator)}., +     */, +    protected boolean hasNextShard(ShardsIterator shardIt) {, +        return shardIt.hasNextActive();, +    }, +, +                final ShardRouting shard = nextShardOrNull(shardIt);, +                                final ShardRouting shard = nextShardOrNull(shardIt.reset());, +                        final ShardRouting shard = nextShardOrNull(shardIt.reset());, +            final ShardRouting shard = nextShardOrNull(shardIt);, +            if (!hasNextShard(shardIt)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java, +    /**, +     * Allows to override how shard routing is iterated over. Default implementation uses, +     * {@link ShardsIterator#nextActiveOrNull()}., +     *, +     * <p>Note, if overriding this method, make sure to also override {@link #hasNextShard(org.elasticsearch.cluster.routing.ShardsIterator)}., +     */, +    protected ShardRouting nextShardOrNull(ShardsIterator shardIt) {, +        return shardIt.nextActiveOrNull();, +    }, +, +    /**, +     * Allows to override how shard routing is iterated over. Default implementation uses, +     * {@link ShardsIterator#hasNextActive()}., +     *, +     * <p>Note, if overriding this method, make sure to also override {@link #nextShardOrNull(org.elasticsearch.cluster.routing.ShardsIterator)}., +     */, +    protected boolean hasNextShard(ShardsIterator shardIt) {, +        return shardIt.hasNextActive();, +    }, +, +                final ShardRouting shard = nextShardOrNull(shardIt);, +                                final ShardRouting shard = nextShardOrNull(shardIt.reset());, +                        final ShardRouting shard = nextShardOrNull(shardIt.reset());, +            final ShardRouting shard = nextShardOrNull(shardIt);, +            if (!hasNextShard(shardIt)) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +        @Override public void remove() {, +            throw new UnsupportedOperationException();, +        }, +, +        @Override public int size() {, +            return IndexShardRoutingTable.this.size();, +        }, +, +        @Override public int sizeActive() {, +            int shardsActive = 0;, +            for (ShardRouting shardRouting : IndexShardRoutingTable.this.shards()) {, +                if (shardRouting.active()) {, +                    shardsActive++;, +                }, +            }, +            return shardsActive;, +        }, +, +        @Override public int sizeAssigned() {, +            int shardsAssigned = 0;, +                if (shardRouting.assignedToNode()) {, +                    shardsAssigned++;, +            return shardsAssigned;, +        }, +, +        @Override public boolean hasNextAssigned() {, +            int counter = this.counter;, +            int index = this.index;, +            while (counter++ < size()) {, +                ShardRouting shardRouting = shardModulo(index++);, +                if (shardRouting.assignedToNode()) {, +                    return true;, +                }, +            }, +            return false;, +        }, +, +        @Override public ShardRouting nextAssigned() throws NoSuchElementException {, +            ShardRouting shardRouting = nextAssignedOrNull();, +            if (shardRouting == null) {, +                throw new NoSuchElementException("No assigned shard found");, +            }, +            return shardRouting;, +        }, +, +        @Override public ShardRouting nextAssignedOrNull() {, +            int counter = this.counter;]