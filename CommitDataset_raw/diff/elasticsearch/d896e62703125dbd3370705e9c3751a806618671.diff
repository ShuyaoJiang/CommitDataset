[+++ b/core/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java, +import org.apache.lucene.search.MatchNoDocsQuery;, +import org.elasticsearch.index.mapper.FieldNamesFieldMapper;, +        if (from == null && to == null) {, +            /**, +             * Open bounds on both side, we can rewrite to an exists query, +             * if the {@link FieldNamesFieldMapper} is enabled., +             */, +            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =, +                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);, +            if (fieldNamesFieldType == null) {, +                return new MatchNoDocsQuery("No mappings yet");, +            }, +            // Exists query would fail if the fieldNames field is disabled., +            if (fieldNamesFieldType.isEnabled()) {, +                return ExistsQueryBuilder.newFilter(context, fieldName);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java, +import org.apache.lucene.search.MatchNoDocsQuery;, +import org.elasticsearch.index.mapper.FieldNamesFieldMapper;, +        if (from == null && to == null) {, +            /**, +             * Open bounds on both side, we can rewrite to an exists query, +             * if the {@link FieldNamesFieldMapper} is enabled., +             */, +            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =, +                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);, +            if (fieldNamesFieldType == null) {, +                return new MatchNoDocsQuery("No mappings yet");, +            }, +            // Exists query would fail if the fieldNames field is disabled., +            if (fieldNamesFieldType.isEnabled()) {, +                return ExistsQueryBuilder.newFilter(context, fieldName);, +            }, +        }, +++ b/core/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTests.java, +import org.apache.lucene.index.Term;, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.MatchNoDocsQuery;, +import org.apache.lucene.search.TermQuery;, +import org.elasticsearch.index.mapper.FieldNamesFieldMapper;, +        if (queryBuilder.from() == null && queryBuilder.to() == null) {, +            final Query expectedQuery;, +            if (getCurrentTypes().length > 0) {, +                expectedQuery = new ConstantScoreQuery(new TermQuery(new Term(FieldNamesFieldMapper.NAME, queryBuilder.fieldName())));, +            } else {, +                expectedQuery = new MatchNoDocsQuery("no mappings yet");, +            }, +            assertThat(query, equalTo(expectedQuery));, +, +        } else if (getCurrentTypes().length == 0 ||, +, +        // Range query with open bounds rewrite to an exists query, +        final Query luceneQuery = rewrittenRange.toQuery(queryShardContext);, +        final Query expectedQuery;, +        if (getCurrentTypes().length > 0) {, +            expectedQuery = new ConstantScoreQuery(new TermQuery(new Term(FieldNamesFieldMapper.NAME, query.fieldName())));, +        } else {, +            expectedQuery = new MatchNoDocsQuery("no mappings yet");, +        }, +        assertThat(luceneQuery, equalTo(expectedQuery));]