[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]cluster[/\\]metadata[/\\]MetaDataDeleteIndexService.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]cluster[/\\]metadata[/\\]MetaDataIndexAliasesService.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]cluster[/\\]metadata[/\\]MetaDataDeleteIndexService.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]cluster[/\\]metadata[/\\]MetaDataIndexAliasesService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesClusterStateUpdateRequest.java, +    AliasAction[] actions;, +, +    public IndicesAliasesClusterStateUpdateRequest() {, +, +    public AliasAction[] actions() {, +, +    /**, +     * Sets the alias actions to be executed, +     */, +    public IndicesAliasesClusterStateUpdateRequest actions(AliasAction[] actions) {, +        this.actions = actions;, +        return this;, +    }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]cluster[/\\]metadata[/\\]MetaDataDeleteIndexService.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]cluster[/\\]metadata[/\\]MetaDataIndexAliasesService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesClusterStateUpdateRequest.java, +    AliasAction[] actions;, +, +    public IndicesAliasesClusterStateUpdateRequest() {, +, +    public AliasAction[] actions() {, +, +    /**, +     * Sets the alias actions to be executed, +     */, +    public IndicesAliasesClusterStateUpdateRequest actions(AliasAction[] actions) {, +        this.actions = actions;, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +import org.elasticsearch.cluster.metadata.AliasAction.Type;, +import org.elasticsearch.common.util.CollectionUtils;, +import java.util.Locale;, +import static org.elasticsearch.cluster.metadata.AliasAction.readAliasAction;, +, +    /*, +     * Aliases can be added by passing multiple indices to the Request and, +     * deleted by passing multiple indices and aliases. They are expanded into, +     * distinct AliasAction instances when the request is processed. This class, +     * holds the AliasAction and in addition the arrays or alias names and, +     * indices that is later used to create the final AliasAction instances., +    public static class AliasActions implements AliasesRequest {, +        private String[] indices = Strings.EMPTY_ARRAY;, +        private AliasAction aliasAction;, +        public AliasActions(AliasAction.Type type, String[] indices, String[] aliases) {, +            aliasAction = new AliasAction(type);, +            indices(indices);, +            aliases(aliases);, +        public AliasActions(AliasAction.Type type, String index, String alias) {, +            aliasAction = new AliasAction(type);, +            indices(index);, +            aliases(alias);, +        AliasActions(AliasAction.Type type, String[] index, String alias) {, +            aliasAction = new AliasAction(type);, +            indices(index);, +            aliases(alias);, +        public AliasActions(AliasAction action) {, +            this.aliasAction = action;, +            indices(action.index());, +            aliases(action.alias());, +        public AliasActions(Type type, String index, String[] aliases) {, +            aliasAction = new AliasAction(type);, +            indices(index);, +            aliases(aliases);, +        }, +, +        public AliasActions() {, +        }, +, +        public AliasActions filter(Map<String, Object> filter) {, +            aliasAction.filter(filter);, +            return this;, +        }, +, +        public AliasActions filter(QueryBuilder filter) {, +            aliasAction.filter(filter);, +            return this;, +        }, +, +        public Type actionType() {, +            return aliasAction.actionType();, +        }, +, +        public void routing(String routing) {, +            aliasAction.routing(routing);, +        }, +, +        public void searchRouting(String searchRouting) {, +            aliasAction.searchRouting(searchRouting);, +        }, +, +        public void indexRouting(String indexRouting) {]