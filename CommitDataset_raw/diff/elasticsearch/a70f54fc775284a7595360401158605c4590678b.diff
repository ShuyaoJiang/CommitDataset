[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/migration/DeprecationInfoResponse.java, +    private static final ParseField ML_SETTINGS = new ParseField("ml_settings");, +    private final List<DeprecationIssue> mlSettingsIssues;, +                                   Map<String, List<DeprecationIssue>> indexSettingsIssues, List<DeprecationIssue> mlSettingsIssues) {, +        this.mlSettingsIssues = Objects.requireNonNull(mlSettingsIssues, "ml settings issues cannot be null");, +    public List<DeprecationIssue> getMlSettingsIssues() {, +        return mlSettingsIssues;, +    }, +, +        List<DeprecationIssue> mlSettings = new ArrayList<>();, +            } else if (ML_SETTINGS.getPreferredName().equals(fieldName)) {, +                mlSettings.addAll(parseDeprecationIssues(parser));, +        return new DeprecationInfoResponse(clusterSettings, nodeSettings, indexSettings, mlSettings);, +            Objects.equals(mlSettingsIssues, that.mlSettingsIssues) &&, +        return Objects.hash(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +        return clusterSettingsIssues.toString() + ":" + nodeSettingsIssues.toString() + ":" + indexSettingsIssues.toString() +, +            ":" + mlSettingsIssues.toString();, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/migration/DeprecationInfoResponse.java, +    private static final ParseField ML_SETTINGS = new ParseField("ml_settings");, +    private final List<DeprecationIssue> mlSettingsIssues;, +                                   Map<String, List<DeprecationIssue>> indexSettingsIssues, List<DeprecationIssue> mlSettingsIssues) {, +        this.mlSettingsIssues = Objects.requireNonNull(mlSettingsIssues, "ml settings issues cannot be null");, +    public List<DeprecationIssue> getMlSettingsIssues() {, +        return mlSettingsIssues;, +    }, +, +        List<DeprecationIssue> mlSettings = new ArrayList<>();, +            } else if (ML_SETTINGS.getPreferredName().equals(fieldName)) {, +                mlSettings.addAll(parseDeprecationIssues(parser));, +        return new DeprecationInfoResponse(clusterSettings, nodeSettings, indexSettings, mlSettings);, +            Objects.equals(mlSettingsIssues, that.mlSettingsIssues) &&, +        return Objects.hash(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +        return clusterSettingsIssues.toString() + ":" + nodeSettingsIssues.toString() + ":" + indexSettingsIssues.toString() +, +            ":" + mlSettingsIssues.toString();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MigrationIT.java, +        assertThat(response.getMlSettingsIssues().size(), equalTo(0));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/migration/DeprecationInfoResponse.java, +    private static final ParseField ML_SETTINGS = new ParseField("ml_settings");, +    private final List<DeprecationIssue> mlSettingsIssues;, +                                   Map<String, List<DeprecationIssue>> indexSettingsIssues, List<DeprecationIssue> mlSettingsIssues) {, +        this.mlSettingsIssues = Objects.requireNonNull(mlSettingsIssues, "ml settings issues cannot be null");, +    public List<DeprecationIssue> getMlSettingsIssues() {, +        return mlSettingsIssues;, +    }, +, +        List<DeprecationIssue> mlSettings = new ArrayList<>();, +            } else if (ML_SETTINGS.getPreferredName().equals(fieldName)) {, +                mlSettings.addAll(parseDeprecationIssues(parser));, +        return new DeprecationInfoResponse(clusterSettings, nodeSettings, indexSettings, mlSettings);, +            Objects.equals(mlSettingsIssues, that.mlSettingsIssues) &&, +        return Objects.hash(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +        return clusterSettingsIssues.toString() + ":" + nodeSettingsIssues.toString() + ":" + indexSettingsIssues.toString() +, +            ":" + mlSettingsIssues.toString();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MigrationIT.java, +        assertThat(response.getMlSettingsIssues().size(), equalTo(0));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MigrationClientDocumentationIT.java, +        List<DeprecationInfoResponse.DeprecationIssue> mlIssues =, +            deprecationInfoResponse.getMlSettingsIssues(); // <4>, +                    List<DeprecationInfoResponse.DeprecationIssue> mlIssues =, +                        deprecationInfoResponse.getMlSettingsIssues();, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/migration/DeprecationInfoResponse.java, +    private static final ParseField ML_SETTINGS = new ParseField("ml_settings");, +    private final List<DeprecationIssue> mlSettingsIssues;, +                                   Map<String, List<DeprecationIssue>> indexSettingsIssues, List<DeprecationIssue> mlSettingsIssues) {, +        this.mlSettingsIssues = Objects.requireNonNull(mlSettingsIssues, "ml settings issues cannot be null");, +    public List<DeprecationIssue> getMlSettingsIssues() {, +        return mlSettingsIssues;, +    }, +, +        List<DeprecationIssue> mlSettings = new ArrayList<>();, +            } else if (ML_SETTINGS.getPreferredName().equals(fieldName)) {, +                mlSettings.addAll(parseDeprecationIssues(parser));, +        return new DeprecationInfoResponse(clusterSettings, nodeSettings, indexSettings, mlSettings);, +            Objects.equals(mlSettingsIssues, that.mlSettingsIssues) &&, +        return Objects.hash(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +        return clusterSettingsIssues.toString() + ":" + nodeSettingsIssues.toString() + ":" + indexSettingsIssues.toString() +, +            ":" + mlSettingsIssues.toString();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MigrationIT.java, +        assertThat(response.getMlSettingsIssues().size(), equalTo(0));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MigrationClientDocumentationIT.java, +        List<DeprecationInfoResponse.DeprecationIssue> mlIssues =, +            deprecationInfoResponse.getMlSettingsIssues(); // <4>, +                    List<DeprecationInfoResponse.DeprecationIssue> mlIssues =, +                        deprecationInfoResponse.getMlSettingsIssues();, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/migration/DeprecationInfoResponseTests.java, +, +            builder.startArray("ml_settings");, +            for (DeprecationInfoResponse.DeprecationIssue issue : response.getMlSettingsIssues()) {, +                toXContent(issue, builder);, +            }, +            builder.endArray();, +        return new DeprecationInfoResponse(createRandomIssues(true), createRandomIssues(true), createIndexSettingsIssues(),, +            createRandomIssues(true));, +            new ArrayList<>(req.getNodeSettingsIssues()), new HashMap<>(req.getIndexSettingsIssues()),, +            new ArrayList<>(req.getMlSettingsIssues()));, +        NullPointerException exception = expectThrows(NullPointerException.class,, +            () -> new DeprecationInfoResponse(null, null, null, null));, +        exception = expectThrows(NullPointerException.class,, +            () -> new DeprecationInfoResponse(Collections.emptyList(), null, null, null));, +            () -> new DeprecationInfoResponse(Collections.emptyList(), Collections.emptyList(), null, null));]