[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacet.java, +        long totalCount;, +        double min = Double.MAX_VALUE;, +        double max = Double.MIN_VALUE;, +        public Entry(double from, double to, long count, long totalCount, double total, double min, double max) {, +            this.totalCount = totalCount;, +            this.min = min;, +            this.max = max;, +        public long totalCount() {, +            return this.totalCount;, +        }, +, +        public long getTotalCount() {, +            return this.totalCount;, +        }, +, +            return total / totalCount;, +, +        public double min() {, +            return this.min;, +        }, +, +        public double getMin() {, +            return this.min;, +        }, +, +        public double max() {, +            return this.max;, +        }, +, +        public double getMax() {, +            return this.max;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacet.java, +        long totalCount;, +        double min = Double.MAX_VALUE;, +        double max = Double.MIN_VALUE;, +        public Entry(double from, double to, long count, long totalCount, double total, double min, double max) {, +            this.totalCount = totalCount;, +            this.min = min;, +            this.max = max;, +        public long totalCount() {, +            return this.totalCount;, +        }, +, +        public long getTotalCount() {, +            return this.totalCount;, +        }, +, +            return total / totalCount;, +, +        public double min() {, +            return this.min;, +        }, +, +        public double getMin() {, +            return this.min;, +        }, +, +        public double max() {, +            return this.max;, +        }, +, +        public double getMax() {, +            return this.max;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacetCollector.java, +                    entry.totalCount++;, +                    if (distance < entry.min) {, +                        entry.min = distance;, +                    }, +                    if (distance > entry.max) {, +                        entry.max = distance;, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacet.java, +        long totalCount;, +        double min = Double.MAX_VALUE;, +        double max = Double.MIN_VALUE;, +        public Entry(double from, double to, long count, long totalCount, double total, double min, double max) {, +            this.totalCount = totalCount;, +            this.min = min;, +            this.max = max;, +        public long totalCount() {, +            return this.totalCount;, +        }, +, +        public long getTotalCount() {, +            return this.totalCount;, +        }, +, +            return total / totalCount;, +, +        public double min() {, +            return this.min;, +        }, +, +        public double getMin() {, +            return this.min;, +        }, +]