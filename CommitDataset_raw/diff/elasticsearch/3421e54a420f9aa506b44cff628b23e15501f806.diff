[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import java.util.Objects;, +    GetResult getResult;, +    public static GetResponse fromXContent(XContentParser parser) throws IOException {, +        GetResult getResult = GetResult.fromXContent(parser);, +        return new GetResponse(getResult);, +    }, +, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        GetResponse getResponse = (GetResponse) o;, +        return Objects.equals(getResult, getResponse.getResult);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(getResult);, +    }, +, +    @Override, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import java.util.Objects;, +    GetResult getResult;, +    public static GetResponse fromXContent(XContentParser parser) throws IOException {, +        GetResult getResult = GetResult.fromXContent(parser);, +        return new GetResponse(getResult);, +    }, +, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        GetResponse getResponse = (GetResponse) o;, +        return Objects.equals(getResult, getResponse.getResult);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(getResult);, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetResponse.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;, +        XContentParser.Token token = parser.nextToken();, +        ensureExpectedToken(XContentParser.Token.FIELD_NAME, token, parser::getTokenLocation);, +++ b/core/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.xcontent.XContentParser;, +import java.util.Objects;, +    GetResult getResult;, +    public static GetResponse fromXContent(XContentParser parser) throws IOException {, +        GetResult getResult = GetResult.fromXContent(parser);, +        return new GetResponse(getResult);, +    }, +, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        GetResponse getResponse = (GetResponse) o;, +        return Objects.equals(getResult, getResponse.getResult);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(getResult);, +    }, +, +    @Override]