[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(range.getBuckets());, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(dateRange.getBuckets());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(range.getBuckets());, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(dateRange.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(range.getBuckets());, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(dateRange.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersIT.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(range.getBuckets());, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(dateRange.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(geoDistance.getBuckets());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(range.getBuckets());, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(dateRange.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(geoDistance.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramIT.java, +import org.elasticsearch.search.aggregations.AggregationTestScriptsPlugin;, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> histoBuckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> histoBuckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(range.getBuckets());, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(dateRange.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(geoDistance.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramIT.java, +import org.elasticsearch.search.aggregations.AggregationTestScriptsPlugin;, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> histoBuckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> histoBuckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/docs/reference/aggregations/pipeline.asciidoc, +the pipeline aggregation to use the document count as it's input.  For example, a moving average can be calculated on the document, +count of each bucket, instead of a specific metric:, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(range.getBuckets());, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(dateRange.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersIT.java, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceIT.java, +        List<Range.Bucket> buckets = new ArrayList<Range.Bucket>(geoDistance.getBuckets());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramIT.java, +import org.elasticsearch.search.aggregations.AggregationTestScriptsPlugin;, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> histoBuckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> histoBuckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());, +        List<Histogram.Bucket> buckets = new ArrayList<Histogram.Bucket>(histo.getBuckets());]