[+++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, + * This is what is needed for basic functionality to work., +  // needed by Rhino engine exception handling, +  permission java.util.PropertyPermission "rhino.stack.style", "read";, +, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, + * This is what is needed for basic functionality to work., +  // needed by Rhino engine exception handling, +  permission java.util.PropertyPermission "rhino.stack.style", "read";, +, +++ b/plugins/lang-javascript/build.gradle, +  compile 'org.mozilla:rhino:1.7.7', +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, + * This is what is needed for basic functionality to work., +  // needed by Rhino engine exception handling, +  permission java.util.PropertyPermission "rhino.stack.style", "read";, +, +++ b/plugins/lang-javascript/build.gradle, +  compile 'org.mozilla:rhino:1.7.7', +++ b/plugins/lang-javascript/licenses/rhino-1.7.7.jar.sha1, +3a9ea863b86126b0ed8f2fe2230412747cd3c254, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, + * This is what is needed for basic functionality to work., +  // needed by Rhino engine exception handling, +  permission java.util.PropertyPermission "rhino.stack.style", "read";, +, +++ b/plugins/lang-javascript/build.gradle, +  compile 'org.mozilla:rhino:1.7.7', +++ b/plugins/lang-javascript/licenses/rhino-1.7.7.jar.sha1, +3a9ea863b86126b0ed8f2fe2230412747cd3c254, +++ /dev/null, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, + * This is what is needed for basic functionality to work., +  // needed by Rhino engine exception handling, +  permission java.util.PropertyPermission "rhino.stack.style", "read";, +, +++ b/plugins/lang-javascript/build.gradle, +  compile 'org.mozilla:rhino:1.7.7', +++ b/plugins/lang-javascript/licenses/rhino-1.7.7.jar.sha1, +3a9ea863b86126b0ed8f2fe2230412747cd3c254, +++ /dev/null, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/plugin/javascript/JavaScriptPlugin.java, +    static {, +        // install rhino policy on plugin init, +        JavaScriptScriptEngineService.init();, +    }, +, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, + * This is what is needed for basic functionality to work., +  // needed by Rhino engine exception handling, +  permission java.util.PropertyPermission "rhino.stack.style", "read";, +, +++ b/plugins/lang-javascript/build.gradle, +  compile 'org.mozilla:rhino:1.7.7', +++ b/plugins/lang-javascript/licenses/rhino-1.7.7.jar.sha1, +3a9ea863b86126b0ed8f2fe2230412747cd3c254, +++ /dev/null, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/plugin/javascript/JavaScriptPlugin.java, +    static {, +        // install rhino policy on plugin init, +        JavaScriptScriptEngineService.init();, +    }, +, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java, +    // one time initialization of rhino security manager integration, +    private static final CodeSource DOMAIN;, +    static {, +        try {, +            DOMAIN = new CodeSource(new URL("file:" + BootstrapInfo.UNTRUSTED_CODEBASE), (Certificate[]) null);, +        } catch (MalformedURLException e) {, +            throw new RuntimeException(e);, +        }, +        SecurityController.initGlobal(new PolicySecurityController() {, +            @Override, +            public GeneratedClassLoader createClassLoader(ClassLoader parent, Object securityDomain) {, +                // don't let scripts compile other scripts, +                SecurityManager sm = System.getSecurityManager();, +                if (sm != null) {, +                    sm.checkPermission(new SpecialPermission());, +                }, +                // check the domain, this is all we allow, +                if (securityDomain != DOMAIN) {, +                    throw new SecurityException("illegal securityDomain: " + securityDomain);, +                }, +                return super.createClassLoader(parent, securityDomain);, +            }, +        });, +    }, +, +    /** ensures this engine is initialized */, +    public static void init() {}, +, +            return ctx.compileString(script, generateScriptName(), 1, DOMAIN);, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/untrusted.policy, + * This is what is needed for basic functionality to work., +  // needed by Rhino engine exception handling, +  permission java.util.PropertyPermission "rhino.stack.style", "read";, +, +++ b/plugins/lang-javascript/build.gradle, +  compile 'org.mozilla:rhino:1.7.7']