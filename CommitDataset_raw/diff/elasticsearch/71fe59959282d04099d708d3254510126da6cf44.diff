[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +, +        try (XContentBuilder docMapping = MlMetaIndex.docMapping()) {, +            templateRequest.mapping(MlMetaIndex.TYPE, docMapping);, +        try (XContentBuilder docMapping = ElasticsearchMappings.docMapping()) {, +            templateRequest.mapping(ElasticsearchMappings.DOC_TYPE, docMapping);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +, +        try (XContentBuilder docMapping = MlMetaIndex.docMapping()) {, +            templateRequest.mapping(MlMetaIndex.TYPE, docMapping);, +        try (XContentBuilder docMapping = ElasticsearchMappings.docMapping()) {, +            templateRequest.mapping(ElasticsearchMappings.DOC_TYPE, docMapping);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetaIndex.java, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.xpack.ml.job.persistence.ElasticsearchMappings;, +, +import java.io.IOException;, +, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +, +, +    public static XContentBuilder docMapping() throws IOException {, +        XContentBuilder builder = jsonBuilder();, +        builder.startObject();, +        builder.startObject(TYPE);, +        ElasticsearchMappings.addDefaultMapping(builder);, +        builder.endObject();, +        builder.endObject();, +        return builder;, +    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +, +        try (XContentBuilder docMapping = MlMetaIndex.docMapping()) {, +            templateRequest.mapping(MlMetaIndex.TYPE, docMapping);, +        try (XContentBuilder docMapping = ElasticsearchMappings.docMapping()) {, +            templateRequest.mapping(ElasticsearchMappings.DOC_TYPE, docMapping);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetaIndex.java, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.xpack.ml.job.persistence.ElasticsearchMappings;, +, +import java.io.IOException;, +, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +, +, +    public static XContentBuilder docMapping() throws IOException {, +        XContentBuilder builder = jsonBuilder();, +        builder.startObject();, +        builder.startObject(TYPE);, +        ElasticsearchMappings.addDefaultMapping(builder);, +        builder.endObject();, +        builder.endObject();, +        return builder;, +    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/DeleteFilterAction.java, +import org.elasticsearch.xpack.ml.job.config.MlFilter;, +            DeleteRequest deleteRequest = new DeleteRequest(MlMetaIndex.INDEX_NAME, MlMetaIndex.TYPE, MlFilter.documentId(filterId));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +, +        try (XContentBuilder docMapping = MlMetaIndex.docMapping()) {, +            templateRequest.mapping(MlMetaIndex.TYPE, docMapping);, +        try (XContentBuilder docMapping = ElasticsearchMappings.docMapping()) {, +            templateRequest.mapping(ElasticsearchMappings.DOC_TYPE, docMapping);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetaIndex.java, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.xpack.ml.job.persistence.ElasticsearchMappings;, +, +import java.io.IOException;, +, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +, +, +    public static XContentBuilder docMapping() throws IOException {, +        XContentBuilder builder = jsonBuilder();, +        builder.startObject();, +        builder.startObject(TYPE);, +        ElasticsearchMappings.addDefaultMapping(builder);, +        builder.endObject();, +        builder.endObject();, +        return builder;, +    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/DeleteFilterAction.java, +import org.elasticsearch.xpack.ml.job.config.MlFilter;, +            DeleteRequest deleteRequest = new DeleteRequest(MlMetaIndex.INDEX_NAME, MlMetaIndex.TYPE, MlFilter.documentId(filterId));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/GetFiltersAction.java, +            GetRequest getRequest = new GetRequest(MlMetaIndex.INDEX_NAME, MlMetaIndex.TYPE, MlFilter.documentId(filterId));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearningTemplateRegistry.java, +, +        try (XContentBuilder docMapping = MlMetaIndex.docMapping()) {, +            templateRequest.mapping(MlMetaIndex.TYPE, docMapping);, +        try (XContentBuilder docMapping = ElasticsearchMappings.docMapping()) {, +            templateRequest.mapping(ElasticsearchMappings.DOC_TYPE, docMapping);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetaIndex.java, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.xpack.ml.job.persistence.ElasticsearchMappings;, +, +import java.io.IOException;, +, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +]