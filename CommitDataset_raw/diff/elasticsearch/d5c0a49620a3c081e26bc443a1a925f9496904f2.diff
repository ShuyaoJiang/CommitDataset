[+++ b/docs/reference/indices/update-settings.asciidoc, +`index.routing.rebalance.enable`::, +    Enables shard rebalancing for a specific index. It can be set to:, +    * `all` (default) - Allows shard rebalancing for all shards., +    * `primaries` - Allows shard rebalancing only for primary shards., +    * `replicas` - Allows shard rebalancing only for replica shards., +    * `none` - No shard rebalancing is allowed., +, +++ b/docs/reference/indices/update-settings.asciidoc, +`index.routing.rebalance.enable`::, +    Enables shard rebalancing for a specific index. It can be set to:, +    * `all` (default) - Allows shard rebalancing for all shards., +    * `primaries` - Allows shard rebalancing only for primary shards., +    * `replicas` - Allows shard rebalancing only for replica shards., +    * `none` - No shard rebalancing is allowed., +, +++ b/docs/reference/modules/cluster.asciidoc, +`cluster.routing.rebalance.enable`::, +, +Controls shard rebalance for all indices, by allowing specific, +kinds of shard to be rebalanced., +, +Can be set to:, +    * `all` (default) - Allows shard balancing for all kinds of shards., +    * `primaries` - Allows shard balancing only for primary shards., +    * `replicas` - Allows shard balancing only for replica shards., +    * `none` - No shard balancing of any kind are allowed for all indices., +, +++ b/docs/reference/indices/update-settings.asciidoc, +`index.routing.rebalance.enable`::, +    Enables shard rebalancing for a specific index. It can be set to:, +    * `all` (default) - Allows shard rebalancing for all shards., +    * `primaries` - Allows shard rebalancing only for primary shards., +    * `replicas` - Allows shard rebalancing only for replica shards., +    * `none` - No shard rebalancing is allowed., +, +++ b/docs/reference/modules/cluster.asciidoc, +`cluster.routing.rebalance.enable`::, +, +Controls shard rebalance for all indices, by allowing specific, +kinds of shard to be rebalanced., +, +Can be set to:, +    * `all` (default) - Allows shard balancing for all kinds of shards., +    * `primaries` - Allows shard balancing only for primary shards., +    * `replicas` - Allows shard balancing only for replica shards., +    * `none` - No shard balancing of any kind are allowed for all indices., +, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationDecider.java, + * This allocation decider allows shard allocations / rebalancing via the cluster wide settings {@link #CLUSTER_ROUTING_ALLOCATION_ENABLE} /, + * {@link #CLUSTER_ROUTING_REBALANCE_ENABLE} and the per index setting {@link #INDEX_ROUTING_ALLOCATION_ENABLE} / {@link #INDEX_ROUTING_REBALANCE_ENABLE}., + * The per index settings overrides the cluster wide setting., + * <p>, + * Allocation settings can have the following values (non-casesensitive):, + *     <li> <code>NONE</code> - no shard allocation is allowed., + *     <li> <code>NEW_PRIMARIES</code> - only primary shards of new indices are allowed to be allocated, + *     <li> <code>PRIMARIES</code> - only primary shards are allowed to be allocated, + *     <li> <code>ALL</code> - all shards are allowed to be allocated, + * </p>, + *, + * <p>, + * Rebalancing settings can have the following values (non-casesensitive):, + * <ul>, + *     <li> <code>NONE</code> - no shard rebalancing is allowed., + *     <li> <code>REPLICAS</code> - only replica shards are allowed to be balanced, + *     <li> <code>PRIMARIES</code> - only primary shards are allowed to be balanced, + *     <li> <code>ALL</code> - all shards are allowed to be balanced, + * </ul>, + * </p>, + *, + * @see Rebalance, + * @see Allocation, +    public static final String CLUSTER_ROUTING_REBALANCE_ENABLE = "cluster.routing.rebalance.enable";, +    public static final String INDEX_ROUTING_REBALANCE_ENABLE = "index.routing.rebalance.enable";, +, +    private volatile Rebalance enableRebalance;, +    private volatile Allocation enableAllocation;, +, +        this.enableAllocation = Allocation.parse(settings.get(CLUSTER_ROUTING_ALLOCATION_ENABLE, Allocation.ALL.name()));, +        this.enableRebalance = Rebalance.parse(settings.get(CLUSTER_ROUTING_REBALANCE_ENABLE, Rebalance.ALL.name()));, +            enable = this.enableAllocation;, +                    return allocation.decision(Decision.NO, NAME, "non-new primary allocations are forbidden");, +                    return allocation.decision(Decision.NO, NAME, "replica allocations are forbidden");, +    public Decision canRebalance(ShardRouting shardRouting, RoutingAllocation allocation) {, +        if (allocation.ignoreDisable()) {, +            return allocation.decision(Decision.YES, NAME, "rebalance disabling is ignored");, +        }, +, +        Settings indexSettings = allocation.routingNodes().metaData().index(shardRouting.index()).settings();, +        String enableIndexValue = indexSettings.get(INDEX_ROUTING_REBALANCE_ENABLE);, +        final Rebalance enable;, +        if (enableIndexValue != null) {, +            enable = Rebalance.parse(enableIndexValue);, +        } else {, +            enable = this.enableRebalance;, +        }, +        switch (enable) {, +            case ALL:, +                return allocation.decision(Decision.YES, NAME, "all rebalancing is allowed");, +            case NONE:]