[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +     * An override of the data directory. Input is the node number and output, +     * is the override data directory., +    Closure<String> dataDir = null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +     * An override of the data directory. Input is the node number and output, +     * is the override data directory., +    Closure<String> dataDir = null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +            dataDir = "${config.dataDir(nodeNum)}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +     * An override of the data directory. Input is the node number and output, +     * is the override data directory., +    Closure<String> dataDir = null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +            dataDir = "${config.dataDir(nodeNum)}", +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_5_5_0_UNRELEASED = new Version(V_5_5_0_ID_UNRELEASED, org.apache.lucene.util.Version.LUCENE_6_5_1);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +     * An override of the data directory. Input is the node number and output, +     * is the override data directory., +    Closure<String> dataDir = null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +            dataDir = "${config.dataDir(nodeNum)}", +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_5_5_0_UNRELEASED = new Version(V_5_5_0_ID_UNRELEASED, org.apache.lucene.util.Version.LUCENE_6_5_1);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +     * An override of the data directory. Input is the node number and output, +     * is the override data directory., +    Closure<String> dataDir = null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +            dataDir = "${config.dataDir(nodeNum)}", +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_5_5_0_UNRELEASED = new Version(V_5_5_0_ID_UNRELEASED, org.apache.lucene.util.Version.LUCENE_6_5_1);, +++ b/core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java, +++ b/qa/full-cluster-restart/build.gradle, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +import org.elasticsearch.gradle.test.RestIntegTestTask, +import org.elasticsearch.gradle.Version, +, +apply plugin: 'elasticsearch.standalone-test', +, +// This is a top level task which we will add dependencies to below., +// It is a single task that can be used to backcompat tests against all versions., +task bwcTest {, +  description = 'Runs backwards compatibility tests.', +  group = 'verification', +}, +, +for (Version version : indexCompatVersions) {, +  String baseName = "v${version}", +, +  Task oldClusterTest = tasks.create(name: "${baseName}#oldClusterTest", type: RestIntegTestTask) {, +    mustRunAfter(precommit), +  }, +  tasks.getByName("${baseName}#oldClusterTestRunner").configure {, +    systemProperty 'tests.is_old_cluster', 'true', +    systemProperty 'tests.old_cluster_version', version.toString().minus("-SNAPSHOT"), +    systemProperty 'tests.path.repo', new File(buildDir, "cluster/shared/repo"), +  }, +, +  Object extension = extensions.findByName("${baseName}#oldClusterTestCluster"), +  configure(extensions.findByName("${baseName}#oldClusterTestCluster")) {, +    distribution = 'zip', +    bwcVersion = version, +    numBwcNodes = 2, +    numNodes = 2, +    clusterName = 'full-cluster-restart', +    if (version.onOrAfter('5.3.0')) {, +      setting 'http.content_type.required', 'true', +    }, +  }, +, +, +  Task upgradedClusterTest = tasks.create(name: "${baseName}#upgradedClusterTest", type: RestIntegTestTask) {, +    dependsOn(oldClusterTest, "${baseName}#oldClusterTestCluster#node0.stop"), +  }, +, +  configure(extensions.findByName("${baseName}#upgradedClusterTestCluster")) {, +    dependsOn oldClusterTest,, +        "${baseName}#oldClusterTestCluster#node0.stop",]