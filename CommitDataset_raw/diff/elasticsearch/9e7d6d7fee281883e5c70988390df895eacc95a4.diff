[+++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/DeleteExpiredDataIT.java, +import org.elasticsearch.index.query.QueryBuilders;, +import java.util.HashMap;, +import java.util.Map;, +import static org.hamcrest.Matchers.greaterThan;, +        long oneDayAgo = now - TimeValue.timeValueHours(48).getMillis() - 1;, +            String snapshotUpdate = "{ \"timestamp\": " + oneDayAgo + "}";, +, +        long totalModelSizeStatsBeforeDelete = client().prepareSearch("*").setTypes("result"), +                .setQuery(QueryBuilders.termQuery("result_type", "model_size_stats")), +                .get().getHits().totalHits;, +        long totalNotificationsCountBeforeDelete = client().prepareSearch(".ml-notifications").get().getHits().totalHits;, +        assertThat(totalModelSizeStatsBeforeDelete, greaterThan(0L));, +        assertThat(totalNotificationsCountBeforeDelete, greaterThan(0L));, +, +        assertThat(buckets.get(0).getTimestamp().getTime(), greaterThanOrEqualTo(oneDayAgo));, +        assertThat(buckets.get(0).getTimestamp().getTime(), greaterThanOrEqualTo(oneDayAgo));, +, +        long totalModelSizeStatsAfterDelete = client().prepareSearch("*").setTypes("result"), +                .setQuery(QueryBuilders.termQuery("result_type", "model_size_stats")), +                .get().getHits().totalHits;, +        long totalNotificationsCountAfterDelete = client().prepareSearch(".ml-notifications").get().getHits().totalHits;, +        assertThat(totalModelSizeStatsAfterDelete, equalTo(totalModelSizeStatsBeforeDelete));, +        assertThat(totalNotificationsCountAfterDelete, greaterThanOrEqualTo(totalNotificationsCountBeforeDelete));]