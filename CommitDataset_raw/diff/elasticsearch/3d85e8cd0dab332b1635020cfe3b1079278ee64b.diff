[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException.class,, +                org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +                                   MultiBucketConsumerService.TooManyBucketsException::new, 149,, +            Version.V_7_0_0);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException.class,, +                org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +                                   MultiBucketConsumerService.TooManyBucketsException::new, 149,, +            Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException.class,, +                org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +                                   MultiBucketConsumerService.TooManyBucketsException::new, 149,, +            Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException.class,, +                org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +                                   MultiBucketConsumerService.TooManyBucketsException::new, 149,, +            Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException.class,, +                org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +                                   MultiBucketConsumerService.TooManyBucketsException::new, 149,, +            Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CCRIT.java, +        updateSettingsRequest.transientSettings(Collections.singletonMap("cluster.remote.local_cluster.seeds", transportAddress));, +                .get("local_cluster");, +        PutFollowRequest putFollowRequest = new PutFollowRequest("local_cluster", "leader", "follower");, +            new PutAutoFollowPatternRequest("pattern1", "local_cluster", Collections.singletonList("logs-*"));, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +++ /dev/null, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException.class,, +                org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +                                   MultiBucketConsumerService.TooManyBucketsException::new, 149,, +            Version.V_7_0_0);]