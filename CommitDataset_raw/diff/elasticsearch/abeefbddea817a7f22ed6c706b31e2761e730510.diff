[+++ b/docs/reference/search/aggregations/bucket/terms-aggregation.asciidoc, +added[1.2.0] Added the `global_ordinals`, `global_ordinals_hash` and `global_ordinals_low_cardinality` execution modes, +deprecated[1.3.0] Removed the `ordinals` execution mode, +, +There are different mechanisms by which terms aggregations can be executed:, +, + - by using field values directly in order to aggregate data per-bucket (`map`), + - by using ordinals of the field and preemptively allocating one bucket per ordinal value (`global_ordinals`), + - by using ordinals of the field and dynamically allocating one bucket per ordinal value (`global_ordinals_hash`), + - by using per-segment ordinals to compute counts and remap these counts to global counts using global ordinals (`global_ordinals_low_cardinality`), +, +Elasticsearch tries to have sensible defaults so this is something that generally doesn't need to be configured., +, +`map` should only be considered when very few documents match a query. Otherwise the ordinals-based execution modes, +are significantly faster. By default, `map` is only used when running an aggregation on scripts, since they don't have, +ordinals., +, +`global_ordinals_low_cardinality` only works for leaf terms aggregations but is usually the fastest execution mode. Memory, +usage is linear with the number of unique values in the field, so it is only enabled by default on low-cardinality fields., +, +`global_ordinals` is the second fastest option, but the fact that it preemptively allocates buckets can be memory-intensive,, +especially if you have one or more sub aggregations. It is used by default on top-level terms aggregations., +, +`global_ordinals_hash` on the contrary to `global_ordinals` and `global_ordinals_low_cardinality` allocates buckets dynamically, +so memory usage is linear to the number of values of the documents that are part of the aggregation scope. It is used by default, +in inner aggregations., +<1> the possible values are `map`, `global_ordinals`, `global_ordinals_hash` and `global_ordinals_low_cardinality`, +Please note that Elasticsearch will ignore this execution hint if it is not applicable and that there is no backward compatibility guarantee on these hints.]