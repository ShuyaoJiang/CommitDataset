[+++ b/FAILING_SEEDS_THAT_REPRODUCE.txt, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.state.OpenCloseIndexTests -Dtests.method="testOpenCloseWithDocs" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.timezone=Atlantic/South_Georgia -Dtests.processors=8, +, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.template.IndexTemplateFileLoadingTests -Dtests.method="testThatLoadingTemplateFromFileWorks" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.locale=hu_HU -Dtests.timezone=Africa/Harare -Dtests.processors=8, +++ b/FAILING_SEEDS_THAT_REPRODUCE.txt, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.state.OpenCloseIndexTests -Dtests.method="testOpenCloseWithDocs" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.timezone=Atlantic/South_Georgia -Dtests.processors=8, +, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.template.IndexTemplateFileLoadingTests -Dtests.method="testThatLoadingTemplateFromFileWorks" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.locale=hu_HU -Dtests.timezone=Africa/Harare -Dtests.processors=8, +++ b/dev-tools/forbidden/all-signatures.txt, +, +java.nio.file.Paths @ Use PathUtils.get instead., +java.nio.file.FileSystems#getDefault() @ use PathUtils.getDefault instead., +++ b/FAILING_SEEDS_THAT_REPRODUCE.txt, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.state.OpenCloseIndexTests -Dtests.method="testOpenCloseWithDocs" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.timezone=Atlantic/South_Georgia -Dtests.processors=8, +, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.template.IndexTemplateFileLoadingTests -Dtests.method="testThatLoadingTemplateFromFileWorks" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.locale=hu_HU -Dtests.timezone=Africa/Harare -Dtests.processors=8, +++ b/dev-tools/forbidden/all-signatures.txt, +, +java.nio.file.Paths @ Use PathUtils.get instead., +java.nio.file.FileSystems#getDefault() @ use PathUtils.getDefault instead., +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.io.FileSystemUtils;, +import org.elasticsearch.common.io.PathUtils;, +                PidFile.create(PathUtils.get(pidFile), true);, +++ b/FAILING_SEEDS_THAT_REPRODUCE.txt, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.state.OpenCloseIndexTests -Dtests.method="testOpenCloseWithDocs" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.timezone=Atlantic/South_Georgia -Dtests.processors=8, +, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.template.IndexTemplateFileLoadingTests -Dtests.method="testThatLoadingTemplateFromFileWorks" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.locale=hu_HU -Dtests.timezone=Africa/Harare -Dtests.processors=8, +++ b/dev-tools/forbidden/all-signatures.txt, +, +java.nio.file.Paths @ Use PathUtils.get instead., +java.nio.file.FileSystems#getDefault() @ use PathUtils.getDefault instead., +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.io.FileSystemUtils;, +import org.elasticsearch.common.io.PathUtils;, +                PidFile.create(PathUtils.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = path.resolveSibling(path.getFileName().toString().concat(suffix));, +++ b/FAILING_SEEDS_THAT_REPRODUCE.txt, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.state.OpenCloseIndexTests -Dtests.method="testOpenCloseWithDocs" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.timezone=Atlantic/South_Georgia -Dtests.processors=8, +, +mvn test -Pdev -Dtests.seed=3BE26A0D85E40D93 -Dtests.class=org.elasticsearch.indices.template.IndexTemplateFileLoadingTests -Dtests.method="testThatLoadingTemplateFromFileWorks" -Des.logger.level=INFO -Dtests.heap.size=512m -Dtests.locale=hu_HU -Dtests.timezone=Africa/Harare -Dtests.processors=8, +++ b/dev-tools/forbidden/all-signatures.txt, +, +java.nio.file.Paths @ Use PathUtils.get instead., +java.nio.file.FileSystems#getDefault() @ use PathUtils.getDefault instead., +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.common.io.FileSystemUtils;, +import org.elasticsearch.common.io.PathUtils;, +                PidFile.create(PathUtils.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = path.resolveSibling(path.getFileName().toString().concat(suffix));, +++ b/src/main/java/org/elasticsearch/common/io/PathUtils.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.io;, +, +import org.elasticsearch.common.SuppressForbidden;, +, +import java.net.URI;, +import java.nio.file.FileSystem;, +import java.nio.file.FileSystems;, +import java.nio.file.Path;, +import java.nio.file.Paths;, +, +/** , + * Utilities for creating a Path from names,, + * or accessing the default FileSystem., + * <p>, + * This class allows the default filesystem to, + * be changed during tests., + */, +@SuppressForbidden(reason = "accesses the default filesystem by design"), +public final class PathUtils {, +    /** no instantiation */, +    private PathUtils() {}, +    , +    /** the actual JDK default */, +    static final FileSystem ACTUAL_DEFAULT = FileSystems.getDefault();, +    , +    /** can be changed by tests */, +    static FileSystem DEFAULT = ACTUAL_DEFAULT;, +    ]