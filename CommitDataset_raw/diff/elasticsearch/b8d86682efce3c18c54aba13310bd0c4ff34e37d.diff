[+++ b/qa/rolling-upgrade/build.gradle, +import java.util.regex.Matcher, +// Apply the java plugin to this project so the sources can be edited in an IDE, +apply plugin: 'elasticsearch.build', +test.enabled = false, +, +dependencies {, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'runtime'), +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +}, +, +Project mainProject = project, +, +/**, + * Subdirectories of this project are test rolling upgrades with various, + * configuration options based on their name., + */, +subprojects {, +  Matcher m = project.name =~ /with(out)?-ssl-with(out)?-system-key/, +  if (false == m.matches()) {, +    throw new InvalidUserDataException("Invalid project name [${project.name}]"), +  }, +  boolean withSystemKey = m.group(2) == null, +, +  apply plugin: 'elasticsearch.standalone-test', +, +  // Use resources from the rolling-upgrade project in subdirectories, +  sourceSets {, +    test {, +      java {, +        srcDirs = ["${mainProject.projectDir}/src/test/java"], +      }, +      resources {, +        srcDirs = ["${mainProject.projectDir}/src/test/resources"], +      }, +    }, +  }, +, +  String output = "generated-resources/${project.name}", +    String baseName = "v${version}", +      dependsOn copyTestNodeKeystore, +        extraConfigFile 'x-pack/system_key',, +            "${mainProject.projectDir}/src/test/resources/system_key", +      dependsOn copyTestNodeKeystore, +      setting 'logger.org.elasticsearch.xpack.security', 'TRACE', +        extraConfigFile 'x-pack/system_key',, +            "${mainProject.projectDir}/src/test/resources/system_key", +      dependsOn copyTestNodeKeystore, +      setting 'logger.org.elasticsearch.xpack.security', 'TRACE', +        extraConfigFile 'x-pack/system_key',, +            "${mainProject.projectDir}/src/test/resources/system_key", +    dependsOn = ["v${wireCompatVersions[-1]}#bwcTest"], +++ b/qa/rolling-upgrade/build.gradle, +import java.util.regex.Matcher, +// Apply the java plugin to this project so the sources can be edited in an IDE, +apply plugin: 'elasticsearch.build', +test.enabled = false, +, +dependencies {, +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'runtime'), +  testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'testArtifacts'), +}, +, +Project mainProject = project, +, +/**, + * Subdirectories of this project are test rolling upgrades with various, + * configuration options based on their name., + */, +subprojects {, +  Matcher m = project.name =~ /with(out)?-ssl-with(out)?-system-key/, +  if (false == m.matches()) {, +    throw new InvalidUserDataException("Invalid project name [${project.name}]"), +  }, +  boolean withSystemKey = m.group(2) == null, +, +  apply plugin: 'elasticsearch.standalone-test', +, +  // Use resources from the rolling-upgrade project in subdirectories, +  sourceSets {, +    test {, +      java {, +        srcDirs = ["${mainProject.projectDir}/src/test/java"], +      }, +      resources {, +        srcDirs = ["${mainProject.projectDir}/src/test/resources"], +      }, +    }, +  }, +, +  String output = "generated-resources/${project.name}", +    String baseName = "v${version}", +      dependsOn copyTestNodeKeystore, +        extraConfigFile 'x-pack/system_key',, +            "${mainProject.projectDir}/src/test/resources/system_key", +      dependsOn copyTestNodeKeystore, +      setting 'logger.org.elasticsearch.xpack.security', 'TRACE', +        extraConfigFile 'x-pack/system_key',, +            "${mainProject.projectDir}/src/test/resources/system_key", +      dependsOn copyTestNodeKeystore]