[+++ b/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java, +import org.elasticsearch.index.mapper.MapperService;, +        assert !documentMapper.type().equals(MapperService.DEFAULT_MAPPING) : "_default_ mapping should not be updated";, +++ b/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java, +import org.elasticsearch.index.mapper.MapperService;, +        assert !documentMapper.type().equals(MapperService.DEFAULT_MAPPING) : "_default_ mapping should not be updated";, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java, +import org.elasticsearch.index.mapper.MapperService;, +                List<DocumentMapper> documentMappersToUpdate = Lists.newArrayList();, +                for (DocumentMapper documentMapper : indexService.mapperService()) {, +                    // default mapping should not be sent back, it can only be updated by put mapping API, and its, +                    // a full in place replace, we don't want to override a potential update coming it, +                    if (documentMapper.type().equals(MapperService.DEFAULT_MAPPING)) {, +                        continue;, +                    }, +                    documentMappersToUpdate.add(documentMapper);, +                }, +                if (documentMappersToUpdate.isEmpty()) {, +++ b/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java, +import org.elasticsearch.index.mapper.MapperService;, +        assert !documentMapper.type().equals(MapperService.DEFAULT_MAPPING) : "_default_ mapping should not be updated";, +++ b/src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java, +import org.elasticsearch.index.mapper.MapperService;, +                List<DocumentMapper> documentMappersToUpdate = Lists.newArrayList();, +                for (DocumentMapper documentMapper : indexService.mapperService()) {, +                    // default mapping should not be sent back, it can only be updated by put mapping API, and its, +                    // a full in place replace, we don't want to override a potential update coming it, +                    if (documentMapper.type().equals(MapperService.DEFAULT_MAPPING)) {, +                        continue;, +                    }, +                    documentMappersToUpdate.add(documentMapper);, +                }, +                if (documentMappersToUpdate.isEmpty()) {, +++ b/src/test/java/org/elasticsearch/indices/mapping/UpdateMappingTests.java]