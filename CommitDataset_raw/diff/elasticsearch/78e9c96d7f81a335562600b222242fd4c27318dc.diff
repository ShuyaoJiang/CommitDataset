[+++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +import org.elasticsearch.index.IndexSortConfig;, +        IndexSettings.MAX_INNER_RESULT_WINDOW_SETTING,, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +import org.elasticsearch.index.IndexSortConfig;, +        IndexSettings.MAX_INNER_RESULT_WINDOW_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting describing the maximum value of from + size on an individual inner hit definition or, +     * top hits aggregation. The default maximum of 100 is defensive for the reason that the number of inner hit responses, +     * and number of top hits buckets returned is unbounded. Profile your cluster when increasing this setting., +     */, +    public static final Setting<Integer> MAX_INNER_RESULT_WINDOW_SETTING =, +        Setting.intSetting("index.max_inner_result_window", 100, 1, Property.Dynamic, Property.IndexScope);, +    /**, +    private volatile int maxInnerResultWindow;, +        maxInnerResultWindow = scopedSettings.get(MAX_INNER_RESULT_WINDOW_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_INNER_RESULT_WINDOW_SETTING, this::setMaxInnerResultWindow);, +     * Returns the max result window for an individual inner hit definition or top hits aggregation., +     */, +    public int getMaxInnerResultWindow() {, +        return maxInnerResultWindow;, +    }, +, +    private void setMaxInnerResultWindow(int maxInnerResultWindow) {, +        this.maxInnerResultWindow = maxInnerResultWindow;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +import org.elasticsearch.index.IndexSortConfig;, +        IndexSettings.MAX_INNER_RESULT_WINDOW_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting describing the maximum value of from + size on an individual inner hit definition or, +     * top hits aggregation. The default maximum of 100 is defensive for the reason that the number of inner hit responses, +     * and number of top hits buckets returned is unbounded. Profile your cluster when increasing this setting., +     */, +    public static final Setting<Integer> MAX_INNER_RESULT_WINDOW_SETTING =, +        Setting.intSetting("index.max_inner_result_window", 100, 1, Property.Dynamic, Property.IndexScope);, +    /**, +    private volatile int maxInnerResultWindow;, +        maxInnerResultWindow = scopedSettings.get(MAX_INNER_RESULT_WINDOW_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_INNER_RESULT_WINDOW_SETTING, this::setMaxInnerResultWindow);, +     * Returns the max result window for an individual inner hit definition or top hits aggregation., +     */, +    public int getMaxInnerResultWindow() {, +        return maxInnerResultWindow;, +    }, +, +    private void setMaxInnerResultWindow(int maxInnerResultWindow) {, +        this.maxInnerResultWindow = maxInnerResultWindow;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitContextBuilder.java, +import org.elasticsearch.index.IndexSettings;, +    public final void build(SearchContext parentSearchContext, InnerHitsContext innerHitsContext) throws IOException {, +        long innerResultWindow = innerHitBuilder.getFrom() + innerHitBuilder.getSize();, +        int maxInnerResultWindow = parentSearchContext.mapperService().getIndexSettings().getMaxInnerResultWindow();, +        if (innerResultWindow > maxInnerResultWindow) {, +            throw new IllegalArgumentException(, +                "Inner result window is too large, the inner hit definition's [" + innerHitBuilder.getName() +, +                    "]'s from + size must be less than or equal to: [" + maxInnerResultWindow + "] but was [" + innerResultWindow +, +                    "]. This limit can be set by changing the [" + IndexSettings.MAX_INNER_RESULT_WINDOW_SETTING.getKey() +, +                    "] index level setting.", +            );, +        }, +        doBuild(parentSearchContext, innerHitsContext);, +    }, +, +    protected abstract void doBuild(SearchContext parentSearchContext, InnerHitsContext innerHitsContext) throws IOException;, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +import org.elasticsearch.index.IndexSortConfig;, +        IndexSettings.MAX_INNER_RESULT_WINDOW_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting describing the maximum value of from + size on an individual inner hit definition or, +     * top hits aggregation. The default maximum of 100 is defensive for the reason that the number of inner hit responses, +     * and number of top hits buckets returned is unbounded. Profile your cluster when increasing this setting., +     */, +    public static final Setting<Integer> MAX_INNER_RESULT_WINDOW_SETTING =, +        Setting.intSetting("index.max_inner_result_window", 100, 1, Property.Dynamic, Property.IndexScope);, +    /**, +    private volatile int maxInnerResultWindow;, +        maxInnerResultWindow = scopedSettings.get(MAX_INNER_RESULT_WINDOW_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_INNER_RESULT_WINDOW_SETTING, this::setMaxInnerResultWindow);, +     * Returns the max result window for an individual inner hit definition or top hits aggregation., +     */, +    public int getMaxInnerResultWindow() {, +        return maxInnerResultWindow;, +    }, +, +    private void setMaxInnerResultWindow(int maxInnerResultWindow) {, +        this.maxInnerResultWindow = maxInnerResultWindow;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitContextBuilder.java, +import org.elasticsearch.index.IndexSettings;, +    public final void build(SearchContext parentSearchContext, InnerHitsContext innerHitsContext) throws IOException {, +        long innerResultWindow = innerHitBuilder.getFrom() + innerHitBuilder.getSize();, +        int maxInnerResultWindow = parentSearchContext.mapperService().getIndexSettings().getMaxInnerResultWindow();]