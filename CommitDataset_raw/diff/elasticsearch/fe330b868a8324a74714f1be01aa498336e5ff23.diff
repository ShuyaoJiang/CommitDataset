[+++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +        if (sc == null) {, +            throw new QueryParsingException(this, "inner_hits unsupported");, +        }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +        if (sc == null) {, +            throw new QueryParsingException(this, "inner_hits unsupported");, +        }, +, +++ b/core/src/test/java/org/elasticsearch/percolator/PercolatorTests.java, +import org.elasticsearch.index.query.support.QueryInnerHitBuilder;, +import static org.elasticsearch.index.query.QueryBuilders.*;, +    }, +    @Test, +    public void testFailNicelyWithInnerHits() throws Exception {, +        XContentBuilder mapping = XContentFactory.jsonBuilder().startObject(), +                .startObject("mapping"), +                    .startObject("properties"), +                        .startObject("nested"), +                            .field("type", "nested"), +                            .startObject("properties"), +                                .startObject("name"), +                                    .field("type", "string"), +                                .endObject(), +                            .endObject(), +                        .endObject(), +                    .endObject(), +                .endObject();, +, +        assertAcked(prepareCreate("index").addMapping("mapping", mapping));, +        try {, +            client().prepareIndex("index", PercolatorService.TYPE_NAME, "1"), +                    .setSource(jsonBuilder().startObject().field("query", nestedQuery("nested", matchQuery("nested.name", "value")).innerHit(new QueryInnerHitBuilder())).endObject()), +                    .execute().actionGet();, +            fail("Expected a parse error, because inner_hits isn't supported in the percolate api");, +        } catch (Exception e) {, +            assertThat(e.getCause(), instanceOf(QueryParsingException.class));, +            assertThat(e.getCause().getMessage(), containsString("inner_hits unsupported"));, +        }, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +        if (sc == null) {, +            throw new QueryParsingException(this, "inner_hits unsupported");, +        }, +, +++ b/core/src/test/java/org/elasticsearch/percolator/PercolatorTests.java, +import org.elasticsearch.index.query.support.QueryInnerHitBuilder;, +import static org.elasticsearch.index.query.QueryBuilders.*;, +    }, +    @Test, +    public void testFailNicelyWithInnerHits() throws Exception {, +        XContentBuilder mapping = XContentFactory.jsonBuilder().startObject(), +                .startObject("mapping"), +                    .startObject("properties"), +                        .startObject("nested"), +                            .field("type", "nested"), +                            .startObject("properties"), +                                .startObject("name"), +                                    .field("type", "string"), +                                .endObject(), +                            .endObject(), +                        .endObject(), +                    .endObject(), +                .endObject();, +, +        assertAcked(prepareCreate("index").addMapping("mapping", mapping));, +        try {, +            client().prepareIndex("index", PercolatorService.TYPE_NAME, "1"), +                    .setSource(jsonBuilder().startObject().field("query", nestedQuery("nested", matchQuery("nested.name", "value")).innerHit(new QueryInnerHitBuilder())).endObject()), +                    .execute().actionGet();, +            fail("Expected a parse error, because inner_hits isn't supported in the percolate api");, +        } catch (Exception e) {, +            assertThat(e.getCause(), instanceOf(QueryParsingException.class));, +            assertThat(e.getCause().getMessage(), containsString("inner_hits unsupported"));, +        }, +++ b/docs/reference/search/percolate.asciidoc, +The `inner_hits` feature on the `nested` query isn't supported in the percolate api., +]