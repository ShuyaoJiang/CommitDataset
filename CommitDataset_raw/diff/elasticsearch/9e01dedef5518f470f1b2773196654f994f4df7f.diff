[+++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +     * {@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full, +    public static WrapperQueryBuilder wrapperQuery(BytesReference source) {, +        return new WrapperQueryBuilder(source);, +    }, +, +    /**, +     * A Query builder which allows building a query thanks to a JSON string or binary data., +     */, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +     * {@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full, +    public static WrapperQueryBuilder wrapperQuery(BytesReference source) {, +        return new WrapperQueryBuilder(source);, +    }, +, +    /**, +     * A Query builder which allows building a query thanks to a JSON string or binary data., +     */, +++ b/src/main/java/org/elasticsearch/index/query/WrapperQueryBuilder.java, +import org.elasticsearch.common.bytes.BytesReference;, + * A Query builder which allows building a query given JSON string or binary data provided as input. This is useful when you want, +     * Creates a query builder given a query provided as a string, +    /**, +     * Creates a query builder given a query provided as a bytes array, +     */, +    /**, +     * Creates a query builder given a query provided as a {@link BytesReference}, +     */, +    public WrapperQueryBuilder(BytesReference source) {, +        this.source = source.array();, +        this.offset = source.arrayOffset();, +        this.length = source.length();, +    }, +, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +     * {@link org.apache.lucene.queryparser.simple.SimpleQueryParser} for the full, +    public static WrapperQueryBuilder wrapperQuery(BytesReference source) {, +        return new WrapperQueryBuilder(source);, +    }, +, +    /**, +     * A Query builder which allows building a query thanks to a JSON string or binary data., +     */, +++ b/src/main/java/org/elasticsearch/index/query/WrapperQueryBuilder.java, +import org.elasticsearch.common.bytes.BytesReference;, + * A Query builder which allows building a query given JSON string or binary data provided as input. This is useful when you want, +     * Creates a query builder given a query provided as a string, +    /**, +     * Creates a query builder given a query provided as a bytes array, +     */, +    /**, +     * Creates a query builder given a query provided as a {@link BytesReference}, +     */, +    public WrapperQueryBuilder(BytesReference source) {, +        this.source = source.array();, +        this.offset = source.arrayOffset();, +        this.length = source.length();, +    }, +, +++ b/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java, +import org.elasticsearch.action.search.MultiSearchRequestBuilder;, +import org.elasticsearch.action.search.MultiSearchResponse;, +import org.elasticsearch.action.search.SearchRequestBuilder;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.search.suggest.SuggestContextParser;, +import org.elasticsearch.search.suggest.SuggestUtils;, +import org.elasticsearch.search.suggest.Suggester;, +                        .setQuery(QueryBuilders.constantScoreQuery(QueryBuilders.wrapperQuery(querySource)))]