[+++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.plugins.PluginInfo;, +            plugins.add(PluginInfo.readFromStream(in));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.plugins.PluginInfo;, +            plugins.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.index.engine.EngineClosedException;, +            try {, +            } catch (EngineClosedException e) {, +                // ignore, the engine is already closed and we do not want the, +                // operation to be retried, because it has been modified, +            }, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.plugins.PluginInfo;, +            plugins.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.index.engine.EngineClosedException;, +            try {, +            } catch (EngineClosedException e) {, +                // ignore, the engine is already closed and we do not want the, +                // operation to be retried, because it has been modified, +            }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.plugins.PluginInfo;, +            plugins.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.index.engine.EngineClosedException;, +            try {, +            } catch (EngineClosedException e) {, +                // ignore, the engine is already closed and we do not want the, +                // operation to be retried, because it has been modified, +            }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.plugins.PluginInfo;, +            plugins.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.index.engine.EngineClosedException;, +            try {, +            } catch (EngineClosedException e) {, +                // ignore, the engine is already closed and we do not want the, +                // operation to be retried, because it has been modified, +            }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.plugins.PluginInfo;, +            plugins.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.index.engine.EngineClosedException;, +            try {, +            } catch (EngineClosedException e) {, +                // ignore, the engine is already closed and we do not want the, +                // operation to be retried, because it has been modified, +            }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java, +++ b/core/src/main/java/org/elasticsearch/gateway/PrimaryShardAllocator.java, +    NodesAndVersions buildNodesAndVersions(ShardRouting shard, boolean recoveryOnAnyNode, Set<String> ignoreNodes,, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginsInfo.java, +import org.elasticsearch.plugins.PluginInfo;, +            infos.add(PluginInfo.readFromStream(in));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsNodes.java, +import org.elasticsearch.plugins.PluginInfo;, +            plugins.add(PluginInfo.readFromStream(in));]