[+++ b/src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java, +import com.google.common.collect.Sets;, +import org.elasticsearch.common.geo.ShapesAvailability;, +import org.elasticsearch.common.inject.multibindings.Multibinder;, +import org.elasticsearch.index.query.*;, +, +import java.util.Set;, +    private Set<Class<QueryParser>> queryParsersClasses = Sets.newHashSet();, +    private Set<QueryParser> queryParsers = Sets.newHashSet();, +    private Set<Class<FilterParser>> filterParsersClasses = Sets.newHashSet();, +    private Set<FilterParser> filterParsers = Sets.newHashSet();, +, +    public synchronized IndicesQueriesModule addQuery(Class<QueryParser> queryParser) {, +        queryParsersClasses.add(queryParser);, +        return this;, +    }, +, +    public synchronized IndicesQueriesModule addQuery(QueryParser queryParser) {, +        queryParsers.add(queryParser);, +        return this;, +    }, +, +    public synchronized IndicesQueriesModule addFilter(Class<FilterParser> filterParser) {, +        filterParsersClasses.add(filterParser);, +        return this;, +    }, +, +    public synchronized IndicesQueriesModule addFilter(FilterParser filterParser) {, +        filterParsers.add(filterParser);, +        return this;, +    }, +, +, +        Multibinder<QueryParser> qpBinders = Multibinder.newSetBinder(binder(), QueryParser.class);, +        for (Class<QueryParser> queryParser : queryParsersClasses) {, +            qpBinders.addBinding().to(queryParser).asEagerSingleton();, +        }, +        for (QueryParser queryParser : queryParsers) {, +            qpBinders.addBinding().toInstance(queryParser);, +        }, +        qpBinders.addBinding().to(MatchQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(MultiMatchQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(NestedQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(HasChildQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(HasParentQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(TopChildrenQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(DisMaxQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(IdsQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(MatchAllQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(QueryStringQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(BoostingQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(BoolQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(TermQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(TermsQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(FuzzyQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(FieldQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(RangeQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(PrefixQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(WildcardQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(FilteredQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(ConstantScoreQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(CustomBoostFactorQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(CustomScoreQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(CustomFiltersScoreQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(SpanTermQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(SpanNotQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(SpanFirstQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(SpanNearQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(SpanOrQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(MoreLikeThisQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(MoreLikeThisFieldQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(FuzzyLikeThisQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(FuzzyLikeThisFieldQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(WrapperQueryParser.class).asEagerSingleton();, +        qpBinders.addBinding().to(IndicesQueryParser.class).asEagerSingleton();, +        if (ShapesAvailability.JTS_AVAILABLE) {, +            qpBinders.addBinding().to(GeoShapeQueryParser.class).asEagerSingleton();, +        }, +, +        Multibinder<FilterParser> fpBinders = Multibinder.newSetBinder(binder(), FilterParser.class);, +        for (Class<FilterParser> filterParser : filterParsersClasses) {, +            fpBinders.addBinding().to(filterParser).asEagerSingleton();, +        }, +        for (FilterParser filterParser : filterParsers) {, +            fpBinders.addBinding().toInstance(filterParser);, +        }, +        fpBinders.addBinding().to(HasChildFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(HasParentFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(NestedFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(TypeFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(IdsFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(LimitFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(TermFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(TermsFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(RangeFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(NumericRangeFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(PrefixFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(ScriptFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(GeoDistanceFilterParser.class).asEagerSingleton();, +        fpBinders.addBinding().to(GeoDistanceRangeFilterParser.class).asEagerSingleton();]