[+++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                    mappingMd = metaData.index(indexRequest.index()).mappingOrDefault(indexRequest.type());, +                MappingMetaData mappingMd = clusterState.metaData().index(deleteRequest.index()).mappingOrDefault(deleteRequest.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                    mappingMd = metaData.index(indexRequest.index()).mappingOrDefault(indexRequest.type());, +                MappingMetaData mappingMd = clusterState.metaData().index(deleteRequest.index()).mappingOrDefault(deleteRequest.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(indexRequest.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                    mappingMd = metaData.index(indexRequest.index()).mappingOrDefault(indexRequest.type());, +                MappingMetaData mappingMd = clusterState.metaData().index(deleteRequest.index()).mappingOrDefault(deleteRequest.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(indexRequest.type());, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +            MappingMetaData mappingMd = state.metaData().index(request.index()).mappingOrDefault(request.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                    mappingMd = metaData.index(indexRequest.index()).mappingOrDefault(indexRequest.type());, +                MappingMetaData mappingMd = clusterState.metaData().index(deleteRequest.index()).mappingOrDefault(deleteRequest.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(indexRequest.type());, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +            MappingMetaData mappingMd = state.metaData().index(request.index()).mappingOrDefault(request.type());, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +            mappingMd = metaData.index(request.index()).mappingOrDefault(request.type());, +        MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(request.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                    mappingMd = metaData.index(indexRequest.index()).mappingOrDefault(indexRequest.type());, +                MappingMetaData mappingMd = clusterState.metaData().index(deleteRequest.index()).mappingOrDefault(deleteRequest.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(indexRequest.type());, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +            MappingMetaData mappingMd = state.metaData().index(request.index()).mappingOrDefault(request.type());, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +            mappingMd = metaData.index(request.index()).mappingOrDefault(request.type());, +        MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(request.type());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.index.mapper.MapperService;, +    @Nullable, +    /**, +     * Sometimes, the default mapping exists and an actual mapping is not created yet (introduced),, +     * in this case, we want to return the default mapping in case it has some default mapping definitions., +     * <p/>, +     * Note, once the mapping type is introduced, the default mapping is applied on the actual typed MappingMetaData,, +     * setting its routing, timestamp, and so on if needed., +     */, +    @Nullable, +    public MappingMetaData mappingOrDefault(String mappingType) {, +        MappingMetaData mapping = mappings.get(mappingType);, +        if (mapping != null) {, +            return mapping;, +        }, +        return mappings.get(MapperService.DEFAULT_MAPPING);, +    }, +, +            // update default mapping on the MappingMetaData, +            if (mappings.containsKey(MapperService.DEFAULT_MAPPING)) {, +                MappingMetaData defaultMapping = mappings.get(MapperService.DEFAULT_MAPPING);, +                for (MappingMetaData mappingMetaData : mappings.map().values()) {, +                    mappingMetaData.updateDefaultMapping(defaultMapping);, +                }, +            }, +, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java, +                    mappingMd = metaData.index(indexRequest.index()).mappingOrDefault(indexRequest.type());, +                MappingMetaData mappingMd = clusterState.metaData().index(deleteRequest.index()).mappingOrDefault(deleteRequest.type());, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(indexRequest.type());, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +            MappingMetaData mappingMd = state.metaData().index(request.index()).mappingOrDefault(request.type());, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +            mappingMd = metaData.index(request.index()).mappingOrDefault(request.type());, +        MappingMetaData mappingMd = clusterState.metaData().index(request.index()).mappingOrDefault(request.type());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.index.mapper.MapperService;, +    @Nullable, +    /**, +     * Sometimes, the default mapping exists and an actual mapping is not created yet (introduced),, +     * in this case, we want to return the default mapping in case it has some default mapping definitions., +     * <p/>, +     * Note, once the mapping type is introduced, the default mapping is applied on the actual typed MappingMetaData,, +     * setting its routing, timestamp, and so on if needed., +     */, +    @Nullable, +    public MappingMetaData mappingOrDefault(String mappingType) {, +        MappingMetaData mapping = mappings.get(mappingType);, +        if (mapping != null) {, +            return mapping;, +        }, +        return mappings.get(MapperService.DEFAULT_MAPPING);, +    }, +, +            // update default mapping on the MappingMetaData, +            if (mappings.containsKey(MapperService.DEFAULT_MAPPING)) {, +                MappingMetaData defaultMapping = mappings.get(MapperService.DEFAULT_MAPPING);, +                for (MappingMetaData mappingMetaData : mappings.map().values()) {, +                    mappingMetaData.updateDefaultMapping(defaultMapping);, +                }, +            }, +, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java]