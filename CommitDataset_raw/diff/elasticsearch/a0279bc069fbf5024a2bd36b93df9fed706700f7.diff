[+++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4ScheduledPingTests.java, +import org.elasticsearch.common.io.stream.StreamInput;, +                    public TransportResponse.Empty read(StreamInput in) {, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4ScheduledPingTests.java, +import org.elasticsearch.common.io.stream.StreamInput;, +                    public TransportResponse.Empty read(StreamInput in) {, +++ b/server/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.common.io.stream.Writeable;, +     * @deprecated Implement {@link #getResponseReader()} instead and make this method throw an, +     *             {@link UnsupportedOperationException}, +    @Deprecated, +     * Get a reader that can create a new instance of the class from a {@link org.elasticsearch.common.io.stream.StreamInput}, +     */, +    public Writeable.Reader<Response> getResponseReader() {, +        return in -> {, +            Response response = newResponse();, +            response.readFrom(in);, +            return response;, +        };, +    }, +, +    /**, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4ScheduledPingTests.java, +import org.elasticsearch.common.io.stream.StreamInput;, +                    public TransportResponse.Empty read(StreamInput in) {, +++ b/server/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.common.io.stream.Writeable;, +     * @deprecated Implement {@link #getResponseReader()} instead and make this method throw an, +     *             {@link UnsupportedOperationException}, +    @Deprecated, +     * Get a reader that can create a new instance of the class from a {@link org.elasticsearch.common.io.stream.StreamInput}, +     */, +    public Writeable.Reader<Response> getResponseReader() {, +        return in -> {, +            Response response = newResponse();, +            response.readFrom(in);, +            return response;, +        };, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.Writeable;, +import java.io.IOException;, +    private final Writeable.Reader<Response> reader;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Writeable.Reader<Response> reader) {, +        this.reader = Objects.requireNonNull(reader);, +    public String executor() {, +        return ThreadPool.Names.SAME;, +    public Response read(StreamInput in) throws IOException {, +        return reader.read(in);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4ScheduledPingTests.java, +import org.elasticsearch.common.io.stream.StreamInput;, +                    public TransportResponse.Empty read(StreamInput in) {, +++ b/server/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.common.io.stream.Writeable;, +     * @deprecated Implement {@link #getResponseReader()} instead and make this method throw an, +     *             {@link UnsupportedOperationException}, +    @Deprecated, +     * Get a reader that can create a new instance of the class from a {@link org.elasticsearch.common.io.stream.StreamInput}, +     */, +    public Writeable.Reader<Response> getResponseReader() {, +        return in -> {, +            Response response = newResponse();, +            response.readFrom(in);, +            return response;, +        };, +    }, +, +    /**, +++ b/server/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.Writeable;, +import java.io.IOException;, +    private final Writeable.Reader<Response> reader;, +    public ActionListenerResponseHandler(ActionListener<? super Response> listener, Writeable.Reader<Response> reader) {, +        this.reader = Objects.requireNonNull(reader);, +    public String executor() {, +        return ThreadPool.Names.SAME;, +    public Response read(StreamInput in) throws IOException {, +        return reader.read(in);, +++ b/server/src/main/java/org/elasticsearch/action/ActionResponse.java, +    public ActionResponse() {, +    }, +, +    public ActionResponse(StreamInput in) throws IOException {, +        super(in);, +    }, +, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4ScheduledPingTests.java, +import org.elasticsearch.common.io.stream.StreamInput;, +                    public TransportResponse.Empty read(StreamInput in) {, +++ b/server/src/main/java/org/elasticsearch/action/Action.java, +import org.elasticsearch.common.io.stream.Writeable;, +     * @deprecated Implement {@link #getResponseReader()} instead and make this method throw an, +     *             {@link UnsupportedOperationException}, +    @Deprecated, +     * Get a reader that can create a new instance of the class from a {@link org.elasticsearch.common.io.stream.StreamInput}, +     */]