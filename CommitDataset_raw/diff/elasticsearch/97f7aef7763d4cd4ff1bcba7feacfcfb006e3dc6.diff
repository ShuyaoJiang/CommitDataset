[+++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +    public ImmutableOpenMap<String, DiscoveryNode> getMasterAndDataNodes() {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +    public ImmutableOpenMap<String, DiscoveryNode> getMasterAndDataNodes() {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +        } else if (recoverAfterNodes != -1 && (nodes.getMasterAndDataNodes().size()) < recoverAfterNodes) {, +                nodes.getMasterAndDataNodes().size(), recoverAfterNodes);, +                if (expectedNodes != -1 && (nodes.getMasterAndDataNodes().size() < expectedNodes)) { // does not meet the expected..., +                    reason = "expecting [" + expectedNodes + "] nodes, but only have [" + nodes.getMasterAndDataNodes().size() + "]";, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +    public ImmutableOpenMap<String, DiscoveryNode> getMasterAndDataNodes() {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +        } else if (recoverAfterNodes != -1 && (nodes.getMasterAndDataNodes().size()) < recoverAfterNodes) {, +                nodes.getMasterAndDataNodes().size(), recoverAfterNodes);, +                if (expectedNodes != -1 && (nodes.getMasterAndDataNodes().size() < expectedNodes)) { // does not meet the expected..., +                    reason = "expecting [" + expectedNodes + "] nodes, but only have [" + nodes.getMasterAndDataNodes().size() + "]";, +++ b/core/src/main/java/org/elasticsearch/repositories/VerifyNodeRepositoryAction.java, +        final ObjectContainer<DiscoveryNode> masterAndDataNodes = discoNodes.getMasterAndDataNodes().values();]