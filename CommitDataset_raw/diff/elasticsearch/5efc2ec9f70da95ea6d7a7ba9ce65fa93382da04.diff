[+++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/AggregationPath.java, +            String name = pathElements.get(i).name;, +            aggregator = ProfilingAggregator.unwrap(aggregator.subAggregator(name));, +                throw new AggregationExecutionException("Invalid aggregator order path [" + this + "]. The " +, +                    "provided aggregation [" + name + "] either does not exist, or is a pipeline aggregation " +, +                    "and cannot be used to sort the buckets.");, +, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/AggregationPath.java, +            String name = pathElements.get(i).name;, +            aggregator = ProfilingAggregator.unwrap(aggregator.subAggregator(name));, +                throw new AggregationExecutionException("Invalid aggregator order path [" + this + "]. The " +, +                    "provided aggregation [" + name + "] either does not exist, or is a pipeline aggregation " +, +                    "and cannot be used to sort the buckets.");, +, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java, +import org.elasticsearch.script.Script;, +import org.elasticsearch.search.aggregations.AggregationExecutionException;, +import org.elasticsearch.search.aggregations.pipeline.bucketscript.BucketScriptPipelineAggregationBuilder;, +import static org.elasticsearch.search.aggregations.AggregationBuilders.terms;, +import static org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilders.bucketScript;, +    public void testOrderByPipelineAggregation() throws Exception {, +        try (Directory directory = newDirectory()) {, +            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {, +                try (IndexReader indexReader = maybeWrapReaderEs(indexWriter.getReader())) {, +                    IndexSearcher indexSearcher = newIndexSearcher(indexReader);, +, +                    BucketScriptPipelineAggregationBuilder bucketScriptAgg = bucketScript(, +                        "script", new Script("2.718"));, +                    TermsAggregationBuilder termsAgg = terms("terms"), +                        .field("field"), +                        .valueType(ValueType.STRING), +                        .order(BucketOrder.aggregation("script", true)), +                        .subAggregation(bucketScriptAgg);, +, +                    MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType();, +                    fieldType.setName("field");, +                    fieldType.setHasDocValues(true);, +, +                    AggregationExecutionException e = expectThrows(AggregationExecutionException.class,, +                        () -> createAggregator(termsAgg, indexSearcher, fieldType));, +                    assertEquals("Invalid aggregator order path [script]. The provided aggregation [script] " +, +                        "either does not exist, or is a pipeline aggregation and cannot be used to sort the buckets.",, +                        e.getMessage());, +                }, +            }, +        }, +    }, +]