[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/CompilerSettings.java, +     * Hack to set the initial "depth" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not, +     * overwrite., +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/CompilerSettings.java, +     * Hack to set the initial "depth" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not, +     * overwrite., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +        IndexOutOfBoundsException e = expectScriptThrows(IndexOutOfBoundsException.class, () ->, +            exec(script, singletonMap("val", val), true));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/CompilerSettings.java, +     * Hack to set the initial "depth" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not, +     * overwrite., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +        IndexOutOfBoundsException e = expectScriptThrows(IndexOutOfBoundsException.class, () ->, +            exec(script, singletonMap("val", val), true));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicExpressionTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () -> exec(script));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/CompilerSettings.java, +     * Hack to set the initial "depth" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not, +     * overwrite., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +        IndexOutOfBoundsException e = expectScriptThrows(IndexOutOfBoundsException.class, () ->, +            exec(script, singletonMap("val", val), true));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicExpressionTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () -> exec(script));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ImplementInterfacesTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/CompilerSettings.java, +     * Hack to set the initial "depth" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not, +     * overwrite., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +        IndexOutOfBoundsException e = expectScriptThrows(IndexOutOfBoundsException.class, () ->, +            exec(script, singletonMap("val", val), true));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicExpressionTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () -> exec(script));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ImplementInterfacesTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/LambdaTests.java, +        IllegalArgumentException expected = expectScriptThrows(IllegalArgumentException.class, false, () -> {, +        IllegalArgumentException expected = expectScriptThrows(IllegalArgumentException.class, false, () -> {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/CompilerSettings.java, +     * Hack to set the initial "depth" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not, +     * overwrite., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +        IndexOutOfBoundsException e = expectScriptThrows(IndexOutOfBoundsException.class, () ->, +            exec(script, singletonMap("val", val), true));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicExpressionTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () -> exec(script));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ImplementInterfacesTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/LambdaTests.java, +        IllegalArgumentException expected = expectScriptThrows(IllegalArgumentException.class, false, () -> {, +        IllegalArgumentException expected = expectScriptThrows(IllegalArgumentException.class, false, () -> {, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/RegexTests.java, +        assertScriptStack(e,, +                "/\\ujjjj/",, +                "   ^---- HERE");, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/CompilerSettings.java, +     * Hack to set the initial "depth" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not, +     * overwrite., +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ArrayLikeObjectTestCase.java, +        IndexOutOfBoundsException e = expectScriptThrows(IndexOutOfBoundsException.class, () ->, +            exec(script, singletonMap("val", val), true));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/BasicExpressionTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () -> exec(script));, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/ImplementInterfacesTests.java, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->, +        Exception e = expectScriptThrows(IllegalArgumentException.class, false, () ->]