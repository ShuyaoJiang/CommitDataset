[+++ b/plugins/lang-javascript/build.gradle, +++ b/plugins/lang-javascript/build.gradle, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java, +import java.io.IOException;, +import java.net.MalformedURLException;, +import java.net.URL;, +import java.security.AccessControlContext;, +import java.security.AccessController;, +import java.security.CodeSource;, +import java.security.PrivilegedAction;, +import java.security.cert.Certificate;, +import java.util.List;, +import java.util.Map;, +import java.util.concurrent.atomic.AtomicLong;, +, +        @Override, +        @SuppressWarnings("unchecked"), +        public Scriptable wrapAsJavaObject(Context cx, Scriptable scope, Object javaObject, Class<?> staticType) {, +                return NativeMap.wrap(scope, (Map<Object, Object>) javaObject);, +                return NativeList.wrap(scope, (List<Object>) javaObject, staticType);, +++ b/plugins/lang-javascript/build.gradle, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java, +import java.io.IOException;, +import java.net.MalformedURLException;, +import java.net.URL;, +import java.security.AccessControlContext;, +import java.security.AccessController;, +import java.security.CodeSource;, +import java.security.PrivilegedAction;, +import java.security.cert.Certificate;, +import java.util.List;, +import java.util.Map;, +import java.util.concurrent.atomic.AtomicLong;, +, +        @Override, +        @SuppressWarnings("unchecked"), +        public Scriptable wrapAsJavaObject(Context cx, Scriptable scope, Object javaObject, Class<?> staticType) {, +                return NativeMap.wrap(scope, (Map<Object, Object>) javaObject);, +                return NativeList.wrap(scope, (List<Object>) javaObject, staticType);, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/script/javascript/support/NativeMap.java, +import org.mozilla.javascript.Scriptable;, +import org.mozilla.javascript.Wrapper;, +, +    @Override, +    @Override, +    @Override, +    @Override, +        Iterator<Object> itrValues = map.values().iterator();, +    @Override, +    @Override, +    @Override, +    @Override, +    @Override, +    @Override, +        Iterator<Object> itrKeys = map.keySet().iterator();, +    @Override, +    @Override, +    @Override, +    @Override, +    @Override, +    @Override, +    public Object getDefaultValue(Class<?> hint) {, +    @Override, +++ b/plugins/lang-javascript/build.gradle, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java, +import java.io.IOException;, +import java.net.MalformedURLException;, +import java.net.URL;, +import java.security.AccessControlContext;, +import java.security.AccessController;, +import java.security.CodeSource;, +import java.security.PrivilegedAction;, +import java.security.cert.Certificate;, +import java.util.List;, +import java.util.Map;, +import java.util.concurrent.atomic.AtomicLong;, +, +        @Override, +        @SuppressWarnings("unchecked"), +        public Scriptable wrapAsJavaObject(Context cx, Scriptable scope, Object javaObject, Class<?> staticType) {, +                return NativeMap.wrap(scope, (Map<Object, Object>) javaObject);, +                return NativeList.wrap(scope, (List<Object>) javaObject, staticType);, +++ b/plugins/lang-javascript/src/main/java/org/elasticsearch/script/javascript/support/NativeMap.java, +import org.mozilla.javascript.Scriptable;, +import org.mozilla.javascript.Wrapper;, +, +    @Override, +    @Override, +    @Override, +    @Override, +        Iterator<Object> itrValues = map.values().iterator();, +    @Override, +    @Override, +    @Override, +    @Override, +    @Override, +    @Override, +        Iterator<Object> itrKeys = map.keySet().iterator();, +    @Override, +    @Override]