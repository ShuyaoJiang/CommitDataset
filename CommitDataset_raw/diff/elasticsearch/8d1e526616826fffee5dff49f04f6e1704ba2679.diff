[+++ b/src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java, +            for (MockDirectoryHelper.ElasticsearchMockDirectoryWrapper w : MockDirectoryHelper.wrappers) {, +                    w.closeWithRuntimeException();, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java, +            for (MockDirectoryHelper.ElasticsearchMockDirectoryWrapper w : MockDirectoryHelper.wrappers) {, +                    w.closeWithRuntimeException();, +++ b/src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java, +import java.io.IOException;, +    public static final String RANDOM_FAIL_ON_CLOSE= "index.store.mock.random.fail_on_close";, +, +    public static final Set<ElasticsearchMockDirectoryWrapper> wrappers = ConcurrentCollections.newConcurrentSet();, +    private final ESLogger logger;, +    private final boolean failOnClose;, +        failOnClose = indexSettings.getAsBoolean(RANDOM_FAIL_ON_CLOSE, false);, +, +        this.logger = logger;, +        final ElasticsearchMockDirectoryWrapper w = new ElasticsearchMockDirectoryWrapper(random, dir, logger, failOnClose);, +    public static final class ElasticsearchMockDirectoryWrapper extends MockDirectoryWrapper {, +, +        private final ESLogger logger;, +        private final boolean failOnClose;, +, +        public ElasticsearchMockDirectoryWrapper(Random random, Directory delegate, ESLogger logger, boolean failOnClose) {, +            super(random, delegate);, +            this.logger = logger;, +            this.failOnClose = failOnClose;, +        }, +, +        @Override, +        public  void close() throws IOException {, +            try {, +                super.close();, +            } catch (RuntimeException ex) {, +                if (failOnClose) {, +                    throw ex;, +                }, +                // we catch the exception on close to properly close shards even if there are open files, +                // the test framework will call closeWithRuntimeException after the test exits to fail, +                // on unclosed files., +                logger.debug("MockDirectoryWrapper#close() threw exception", ex);, +            }, +        }, +, +        public void closeWithRuntimeException() throws IOException {, +            super.close(); // force fail if open files etc. called in tear down of ElasticsearchIntegrationTest, +        }, +    }, +]