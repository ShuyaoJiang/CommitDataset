[+++ b/.dir-locals.el, +   (fill-column . 100), +   (fci-rule-column . 100), +++ b/.dir-locals.el, +   (fill-column . 100), +   (fci-rule-column . 100), +++ b/TESTING.asciidoc, +We're missing the follow because our tests are very linux/bash centric:, +gradle vagrantSetUp, +vagrant up ubuntu-1404 --provider virtualbox && vagrant ssh ubuntu-1404, +, +++ b/.dir-locals.el, +   (fill-column . 100), +   (fci-rule-column . 100), +++ b/TESTING.asciidoc, +We're missing the follow because our tests are very linux/bash centric:, +gradle vagrantSetUp, +vagrant up ubuntu-1404 --provider virtualbox && vagrant ssh ubuntu-1404, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.waitfor(maxwait: '20', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond') {, +++ b/.dir-locals.el, +   (fill-column . 100), +   (fci-rule-column . 100), +++ b/TESTING.asciidoc, +We're missing the follow because our tests are very linux/bash centric:, +gradle vagrantSetUp, +vagrant up ubuntu-1404 --provider virtualbox && vagrant ssh ubuntu-1404, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.waitfor(maxwait: '20', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Task cleanup = project.tasks.create(name: "${prefix}#prepareCluster.cleanShared", type: Delete, dependsOn: runner.dependsOn.collect()) {, +            startTasks.add(configureNode(project, prefix, runner, dependsOn, node, distro, nodes.get(0))), +    static Task configureNode(Project project, String prefix, Task runner, Object dependsOn, NodeInfo node, Configuration configuration, NodeInfo seedNode) {, +        setup = configureExtractTask(taskName(prefix, node, 'extract'), project, setup, node, configuration), +            ant.waitfor(maxwait: '30', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond', timeoutproperty: "failed${name}") {, +++ b/.dir-locals.el, +   (fill-column . 100), +   (fci-rule-column . 100), +++ b/TESTING.asciidoc, +We're missing the follow because our tests are very linux/bash centric:, +gradle vagrantSetUp, +vagrant up ubuntu-1404 --provider virtualbox && vagrant ssh ubuntu-1404, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.waitfor(maxwait: '20', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Task cleanup = project.tasks.create(name: "${prefix}#prepareCluster.cleanShared", type: Delete, dependsOn: runner.dependsOn.collect()) {, +            startTasks.add(configureNode(project, prefix, runner, dependsOn, node, distro, nodes.get(0))), +    static Task configureNode(Project project, String prefix, Task runner, Object dependsOn, NodeInfo node, Configuration configuration, NodeInfo seedNode) {, +        setup = configureExtractTask(taskName(prefix, node, 'extract'), project, setup, node, configuration), +            ant.waitfor(maxwait: '30', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond', timeoutproperty: "failed${name}") {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            packaging.doFirst {, +            packaging.doLast {, +++ b/.dir-locals.el, +   (fill-column . 100), +   (fci-rule-column . 100), +++ b/TESTING.asciidoc, +We're missing the follow because our tests are very linux/bash centric:, +gradle vagrantSetUp, +vagrant up ubuntu-1404 --provider virtualbox && vagrant ssh ubuntu-1404, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.waitfor(maxwait: '20', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Task cleanup = project.tasks.create(name: "${prefix}#prepareCluster.cleanShared", type: Delete, dependsOn: runner.dependsOn.collect()) {, +            startTasks.add(configureNode(project, prefix, runner, dependsOn, node, distro, nodes.get(0))), +    static Task configureNode(Project project, String prefix, Task runner, Object dependsOn, NodeInfo node, Configuration configuration, NodeInfo seedNode) {, +        setup = configureExtractTask(taskName(prefix, node, 'extract'), project, setup, node, configuration), +            ant.waitfor(maxwait: '30', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond', timeoutproperty: "failed${name}") {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            packaging.doFirst {, +            packaging.doLast {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]ParsedAggregation.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]ParsedAggregationTests.java" checks="LineLength" />, +++ b/.dir-locals.el, +   (fill-column . 100), +   (fci-rule-column . 100), +++ b/TESTING.asciidoc, +We're missing the follow because our tests are very linux/bash centric:, +gradle vagrantSetUp, +vagrant up ubuntu-1404 --provider virtualbox && vagrant ssh ubuntu-1404, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +        ant.waitfor(maxwait: '20', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        Task cleanup = project.tasks.create(name: "${prefix}#prepareCluster.cleanShared", type: Delete, dependsOn: runner.dependsOn.collect()) {, +            startTasks.add(configureNode(project, prefix, runner, dependsOn, node, distro, nodes.get(0))), +    static Task configureNode(Project project, String prefix, Task runner, Object dependsOn, NodeInfo node, Configuration configuration, NodeInfo seedNode) {, +        setup = configureExtractTask(taskName(prefix, node, 'extract'), project, setup, node, configuration), +            ant.waitfor(maxwait: '30', maxwaitunit: 'second', checkevery: '500', checkeveryunit: 'millisecond', timeoutproperty: "failed${name}") {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +            packaging.doFirst {, +            packaging.doLast {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]ParsedAggregation.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]aggregations[/\\]ParsedAggregationTests.java" checks="LineLength" />]