[+++ b/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +    public boolean hasGlobalBlock(int blockId) {, +        for (ClusterBlock clusterBlock : global) {, +            if (clusterBlock.id() == blockId) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +    public boolean hasGlobalBlock(int blockId) {, +        for (ClusterBlock clusterBlock : global) {, +            if (clusterBlock.id() == blockId) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    private final ClusterBlocks.Builder initialBlocks;, +, +        initialBlocks = ClusterBlocks.builder().addGlobalBlock(discoveryService.getNoMasterBlock());, +                    if (previousClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock()) && !newClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock())) {, +++ b/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +    public boolean hasGlobalBlock(int blockId) {, +        for (ClusterBlock clusterBlock : global) {, +            if (clusterBlock.id() == blockId) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    private final ClusterBlocks.Builder initialBlocks;, +, +        initialBlocks = ClusterBlocks.builder().addGlobalBlock(discoveryService.getNoMasterBlock());, +                    if (previousClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock()) && !newClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock())) {, +++ b/src/main/java/org/elasticsearch/discovery/Discovery.java, +++ b/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +    public boolean hasGlobalBlock(int blockId) {, +        for (ClusterBlock clusterBlock : global) {, +            if (clusterBlock.id() == blockId) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    private final ClusterBlocks.Builder initialBlocks;, +, +        initialBlocks = ClusterBlocks.builder().addGlobalBlock(discoveryService.getNoMasterBlock());, +                    if (previousClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock()) && !newClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock())) {, +++ b/src/main/java/org/elasticsearch/discovery/Discovery.java, +++ b/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +import org.elasticsearch.cluster.block.ClusterBlock;, +    private final DiscoverySettings discoverySettings;, +    public DiscoveryService(Settings settings, DiscoverySettings discoverySettings, Discovery discovery) {, +        this.discoverySettings = discoverySettings;, +    public ClusterBlock getNoMasterBlock() {, +        return discoverySettings.getNoMasterBlock();, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java, +    public boolean hasGlobalBlock(int blockId) {, +        for (ClusterBlock clusterBlock : global) {, +            if (clusterBlock.id() == blockId) {, +                return true;, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    private final ClusterBlocks.Builder initialBlocks;, +, +        initialBlocks = ClusterBlocks.builder().addGlobalBlock(discoveryService.getNoMasterBlock());, +                    if (previousClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock()) && !newClusterState.blocks().hasGlobalBlock(discoveryService.getNoMasterBlock())) {, +++ b/src/main/java/org/elasticsearch/discovery/Discovery.java, +++ b/src/main/java/org/elasticsearch/discovery/DiscoveryService.java, +import org.elasticsearch.cluster.block.ClusterBlock;, +    private final DiscoverySettings discoverySettings;, +    public DiscoveryService(Settings settings, DiscoverySettings discoverySettings, Discovery discovery) {, +        this.discoverySettings = discoverySettings;, +    public ClusterBlock getNoMasterBlock() {, +        return discoverySettings.getNoMasterBlock();, +    }, +, +++ b/src/main/java/org/elasticsearch/discovery/DiscoverySettings.java, +import org.elasticsearch.cluster.block.ClusterBlock;, +import org.elasticsearch.cluster.block.ClusterBlockLevel;, +import org.elasticsearch.rest.RestStatus;, +    public final static int NO_MASTER_BLOCK_ID = 2;, +, +    private final ClusterBlock noMasterBlock;, +, +        this.noMasterBlock = new ClusterBlock(NO_MASTER_BLOCK_ID, "no master", true, true, RestStatus.SERVICE_UNAVAILABLE, ClusterBlockLevel.ALL);]