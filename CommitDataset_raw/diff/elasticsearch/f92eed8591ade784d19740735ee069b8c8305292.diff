[+++ b/src/main/java/org/elasticsearch/common/Unicode.java, +    private static ThreadLocal<BytesRef> cachedUtf8Result = new ThreadLocal<BytesRef>() {, +        protected BytesRef initialValue() {, +            return new BytesRef();, +    private static ThreadLocal<UTF16Result> cachedUtf16Result = new ThreadLocal<UTF16Result>() {, +        protected UTF16Result initialValue() {, +            return new UTF16Result();, +        BytesRef result = cachedUtf8Result.get();, +        UTF16Result result = cachedUtf16Result.get();, +++ b/src/main/java/org/elasticsearch/common/Unicode.java, +    private static ThreadLocal<BytesRef> cachedUtf8Result = new ThreadLocal<BytesRef>() {, +        protected BytesRef initialValue() {, +            return new BytesRef();, +    private static ThreadLocal<UTF16Result> cachedUtf16Result = new ThreadLocal<UTF16Result>() {, +        protected UTF16Result initialValue() {, +            return new UTF16Result();, +        BytesRef result = cachedUtf8Result.get();, +        UTF16Result result = cachedUtf16Result.get();, +++ b/src/main/java/org/elasticsearch/common/util/concurrent/ThreadLocals.java, +import java.lang.ref.SoftReference;, +                        if (value != null) {, +                            Object actualValue = value;, +                            if (value instanceof SoftReference) {, +                                actualValue = ((SoftReference) value).get();, +                            }, +                            if (actualValue != null) {, +                                String actualValueClassName = actualValue.getClass().getName();, +                                if (actualValueClassName.startsWith("org.elasticsearch") || actualValueClassName.startsWith("org.lucene")) {, +                            }, +                        }, +++ b/src/main/java/org/elasticsearch/common/Unicode.java, +    private static ThreadLocal<BytesRef> cachedUtf8Result = new ThreadLocal<BytesRef>() {, +        protected BytesRef initialValue() {, +            return new BytesRef();, +    private static ThreadLocal<UTF16Result> cachedUtf16Result = new ThreadLocal<UTF16Result>() {, +        protected UTF16Result initialValue() {, +            return new UTF16Result();, +        BytesRef result = cachedUtf8Result.get();, +        UTF16Result result = cachedUtf16Result.get();, +++ b/src/main/java/org/elasticsearch/common/util/concurrent/ThreadLocals.java, +import java.lang.ref.SoftReference;, +                        if (value != null) {, +                            Object actualValue = value;, +                            if (value instanceof SoftReference) {, +                                actualValue = ((SoftReference) value).get();, +                            }, +                            if (actualValue != null) {, +                                String actualValueClassName = actualValue.getClass().getName();, +                                if (actualValueClassName.startsWith("org.elasticsearch") || actualValueClassName.startsWith("org.lucene")) {, +                            }, +                        }, +++ b/src/main/java/org/elasticsearch/node/internal/InternalNode.java, +        CacheRecycler.clear();, +        CachedStreams.clear();, +        ThreadLocals.clearReferencesThreadLocals();, +, +++ b/src/main/java/org/elasticsearch/common/Unicode.java, +    private static ThreadLocal<BytesRef> cachedUtf8Result = new ThreadLocal<BytesRef>() {, +        protected BytesRef initialValue() {, +            return new BytesRef();, +    private static ThreadLocal<UTF16Result> cachedUtf16Result = new ThreadLocal<UTF16Result>() {, +        protected UTF16Result initialValue() {, +            return new UTF16Result();, +        BytesRef result = cachedUtf8Result.get();, +        UTF16Result result = cachedUtf16Result.get();, +++ b/src/main/java/org/elasticsearch/common/util/concurrent/ThreadLocals.java, +import java.lang.ref.SoftReference;, +                        if (value != null) {, +                            Object actualValue = value;, +                            if (value instanceof SoftReference) {, +                                actualValue = ((SoftReference) value).get();, +                            }, +                            if (actualValue != null) {, +                                String actualValueClassName = actualValue.getClass().getName();, +                                if (actualValueClassName.startsWith("org.elasticsearch") || actualValueClassName.startsWith("org.lucene")) {, +                            }, +                        }, +++ b/src/main/java/org/elasticsearch/node/internal/InternalNode.java, +        CacheRecycler.clear();, +        CachedStreams.clear();, +        ThreadLocals.clearReferencesThreadLocals();, +, +++ b/src/main/java/org/elasticsearch/rest/StringRestResponse.java, +    private static ThreadLocal<BytesRef> cache = new ThreadLocal<BytesRef>() {, +        protected BytesRef initialValue() {, +            return new BytesRef();, +        BytesRef result = cache.get();, +++ b/src/main/java/org/elasticsearch/common/Unicode.java, +    private static ThreadLocal<BytesRef> cachedUtf8Result = new ThreadLocal<BytesRef>() {, +        protected BytesRef initialValue() {, +            return new BytesRef();, +    private static ThreadLocal<UTF16Result> cachedUtf16Result = new ThreadLocal<UTF16Result>() {, +        protected UTF16Result initialValue() {, +            return new UTF16Result();, +        BytesRef result = cachedUtf8Result.get();, +        UTF16Result result = cachedUtf16Result.get();, +++ b/src/main/java/org/elasticsearch/common/util/concurrent/ThreadLocals.java, +import java.lang.ref.SoftReference;, +                        if (value != null) {, +                            Object actualValue = value;]