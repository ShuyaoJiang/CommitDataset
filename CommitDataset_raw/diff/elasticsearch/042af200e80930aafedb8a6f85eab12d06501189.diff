[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +import org.elasticsearch.gateway.local.LocalGatewayModule;, +        return ImmutableList.of(Modules.createModule(settings.getAsClass("gateway.type", LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule"), settings));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +import org.elasticsearch.gateway.local.LocalGatewayModule;, +        return ImmutableList.of(Modules.createModule(settings.getAsClass("gateway.type", LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule"), settings));, +++ b/modules/jarjar/build.gradle, +        // seems like empty dirs still exists, unjar and clean them, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +import org.elasticsearch.gateway.local.LocalGatewayModule;, +        return ImmutableList.of(Modules.createModule(settings.getAsClass("gateway.type", LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule"), settings));, +++ b/modules/jarjar/build.gradle, +        // seems like empty dirs still exists, unjar and clean them, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java, +, +        if (finalSettings.get("gateway.type") == null) {, +            // default to non gateway, +            finalSettings = settingsBuilder().put(finalSettings).put("gateway.type", "none").build();, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +import org.elasticsearch.gateway.local.LocalGatewayModule;, +        return ImmutableList.of(Modules.createModule(settings.getAsClass("gateway.type", LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule"), settings));, +++ b/modules/jarjar/build.gradle, +        // seems like empty dirs still exists, unjar and clean them, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java, +, +        if (finalSettings.get("gateway.type") == null) {, +            // default to non gateway, +            finalSettings = settingsBuilder().put(finalSettings).put("gateway.type", "none").build();, +        }, +, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/BuilderActionsTests.groovy, +            gateway {, +                type = "none", +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +import org.elasticsearch.gateway.local.LocalGatewayModule;, +        return ImmutableList.of(Modules.createModule(settings.getAsClass("gateway.type", LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule"), settings));, +++ b/modules/jarjar/build.gradle, +        // seems like empty dirs still exists, unjar and clean them, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java, +, +        if (finalSettings.get("gateway.type") == null) {, +            // default to non gateway, +            finalSettings = settingsBuilder().put(finalSettings).put("gateway.type", "none").build();, +        }, +, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/BuilderActionsTests.groovy, +            gateway {, +                type = "none", +            }, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/DifferentApiExecutionTests.groovy, +            gateway {, +                type = "none", +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +import org.elasticsearch.gateway.local.LocalGatewayModule;, +        return ImmutableList.of(Modules.createModule(settings.getAsClass("gateway.type", LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule"), settings));, +++ b/modules/jarjar/build.gradle, +        // seems like empty dirs still exists, unjar and clean them, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java, +, +        if (finalSettings.get("gateway.type") == null) {, +            // default to non gateway, +            finalSettings = settingsBuilder().put(finalSettings).put("gateway.type", "none").build();, +        }, +, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/BuilderActionsTests.groovy, +            gateway {, +                type = "none", +            }, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/DifferentApiExecutionTests.groovy, +            gateway {, +                type = "none", +            }, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/SimpleActionsTests.groovy, +            gateway {, +                type = "none", +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +import org.elasticsearch.gateway.local.LocalGatewayModule;, +        return ImmutableList.of(Modules.createModule(settings.getAsClass("gateway.type", LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule"), settings));, +++ b/modules/jarjar/build.gradle, +        // seems like empty dirs still exists, unjar and clean them, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java, +, +        if (finalSettings.get("gateway.type") == null) {, +            // default to non gateway, +            finalSettings = settingsBuilder().put(finalSettings).put("gateway.type", "none").build();, +        }, +, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/BuilderActionsTests.groovy, +            gateway {, +                type = "none", +            }, +++ b/plugins/client/groovy/src/test/groovy/org/elasticsearch/groovy/test/client/DifferentApiExecutionTests.groovy, +            gateway {, +                type = "none", +            }]