[+++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java, +import org.elasticsearch.action.ShardOperationFailedException;, +import org.elasticsearch.action.deletebyquery.IndexDeleteByQueryResponse;, +import org.elasticsearch.action.support.broadcast.BroadcastOperationResponse;, +                if (logger.isTraceEnabled()) {, +                    traceLogResponse("Flush", flushResponse);, +                }, +                        if (logger.isTraceEnabled()) {, +                            for (IndexDeleteByQueryResponse indexResponse : deleteByQueryResponse) {, +                                logger.trace("Delete by query[{}] completed with total[{}], successful[{}] and failed[{}]", indexResponse.getIndex(), indexResponse.getTotalShards(), indexResponse.getSuccessfulShards(), indexResponse.getFailedShards());, +                                if (indexResponse.getFailedShards() > 0) {, +                                    for (ShardOperationFailedException failure : indexResponse.getFailures()) {, +                                        logger.trace("[{}/{}] Delete by query shard failure reason: {}", failure.index(), failure.shardId(), failure.reason());, +                                    }, +                                }, +                            }, +                        }, +                                if (logger.isTraceEnabled()) {, +                                    traceLogResponse("Refresh", refreshResponse);, +                                }, +                                if (logger.isDebugEnabled()) {, +                                    logger.debug("Refresh failed completely", e);, +                                }, +, +    private void traceLogResponse(String action, BroadcastOperationResponse response) {, +        logger.trace("{} completed with total[{}], successful[{}] and failed[{}]", action, response.getTotalShards(), response.getSuccessfulShards(), response.getFailedShards());, +        if (response.getFailedShards() > 0) {, +            for (ShardOperationFailedException failure : response.getShardFailures()) {, +                logger.trace("[{}/{}] {} shard failure reason: {}", failure.index(), failure.shardId(), action, failure.reason());, +            }, +        }, +    }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java, +import org.elasticsearch.action.ShardOperationFailedException;, +import org.elasticsearch.action.deletebyquery.IndexDeleteByQueryResponse;, +import org.elasticsearch.action.support.broadcast.BroadcastOperationResponse;, +                if (logger.isTraceEnabled()) {, +                    traceLogResponse("Flush", flushResponse);, +                }, +                        if (logger.isTraceEnabled()) {, +                            for (IndexDeleteByQueryResponse indexResponse : deleteByQueryResponse) {, +                                logger.trace("Delete by query[{}] completed with total[{}], successful[{}] and failed[{}]", indexResponse.getIndex(), indexResponse.getTotalShards(), indexResponse.getSuccessfulShards(), indexResponse.getFailedShards());, +                                if (indexResponse.getFailedShards() > 0) {, +                                    for (ShardOperationFailedException failure : indexResponse.getFailures()) {, +                                        logger.trace("[{}/{}] Delete by query shard failure reason: {}", failure.index(), failure.shardId(), failure.reason());, +                                    }, +                                }, +                            }, +                        }, +                                if (logger.isTraceEnabled()) {, +                                    traceLogResponse("Refresh", refreshResponse);, +                                }, +                                if (logger.isDebugEnabled()) {, +                                    logger.debug("Refresh failed completely", e);, +                                }, +, +    private void traceLogResponse(String action, BroadcastOperationResponse response) {, +        logger.trace("{} completed with total[{}], successful[{}] and failed[{}]", action, response.getTotalShards(), response.getSuccessfulShards(), response.getFailedShards());, +        if (response.getFailedShards() > 0) {, +            for (ShardOperationFailedException failure : response.getShardFailures()) {, +                logger.trace("[{}/{}] {} shard failure reason: {}", failure.index(), failure.shardId(), action, failure.reason());, +            }, +        }, +    }, +++ b/src/test/java/org/elasticsearch/percolator/PercolatorTests.java, +import org.elasticsearch.test.junit.annotations.TestLogging;, +    @TestLogging("action.admin.indices.mapping.delete:TRACE")]