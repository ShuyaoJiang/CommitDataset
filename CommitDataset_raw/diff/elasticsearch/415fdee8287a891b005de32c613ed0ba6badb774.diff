[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.index.engine.OperationFailedEngineException;, +        // 28 was DeleteFailedEngineException, +        OPERATION_FAILED_ENGINE_EXCEPTION(OperationFailedEngineException.class,, +                OperationFailedEngineException::new, 80),, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.index.engine.OperationFailedEngineException;, +        // 28 was DeleteFailedEngineException, +        OPERATION_FAILED_ENGINE_EXCEPTION(OperationFailedEngineException.class,, +                OperationFailedEngineException::new, 80),, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.index.engine.OperationFailedEngineException;, +        // 28 was DeleteFailedEngineException, +        OPERATION_FAILED_ENGINE_EXCEPTION(OperationFailedEngineException.class,, +                OperationFailedEngineException::new, 80),, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +import java.util.Locale;, +    public abstract void index(Index operation) throws OperationFailedEngineException;, +    public abstract void delete(Delete delete) throws OperationFailedEngineException;, +, +        /** type of operation (index, delete), subclasses use static types */, +        public enum TYPE {, +            INDEX, DELETE;, +, +            private final String lowercase;, +, +            TYPE() {, +                this.lowercase = this.toString().toLowerCase(Locale.ROOT);, +            }, +, +            public String getLowercase() {, +                return lowercase;, +            }, +        }, +, +        private Exception failure;, +        public Exception getFailure() {, +            return failure;, +        }, +, +        public void setFailure(Exception failure) {, +            this.failure = failure;, +        }, +, +        public boolean hasFailure() {, +            return failure != null;, +        }, +, +, +        abstract TYPE operationType();, +        @Override, +        TYPE operationType() {, +            return TYPE.INDEX;, +        }, +, +        @Override, +        TYPE operationType() {, +            return TYPE.DELETE;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.index.engine.OperationFailedEngineException;, +        // 28 was DeleteFailedEngineException, +        OPERATION_FAILED_ENGINE_EXCEPTION(OperationFailedEngineException.class,, +                OperationFailedEngineException::new, 80),, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +import java.util.Locale;, +    public abstract void index(Index operation) throws OperationFailedEngineException;, +    public abstract void delete(Delete delete) throws OperationFailedEngineException;, +, +        /** type of operation (index, delete), subclasses use static types */, +        public enum TYPE {, +            INDEX, DELETE;, +, +            private final String lowercase;, +, +            TYPE() {, +                this.lowercase = this.toString().toLowerCase(Locale.ROOT);, +            }, +, +            public String getLowercase() {, +                return lowercase;, +            }, +        }, +, +        private Exception failure;, +        public Exception getFailure() {, +            return failure;, +        }, +, +        public void setFailure(Exception failure) {, +            this.failure = failure;, +        }, +, +        public boolean hasFailure() {, +            return failure != null;, +        }]