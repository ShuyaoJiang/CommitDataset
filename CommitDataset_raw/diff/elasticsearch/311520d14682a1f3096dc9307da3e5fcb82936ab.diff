[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +        final long time;, +        public PeerRecoveryStatus(Stage stage, long startTime, long time, long retryTime, long indexSize, long reusedIndexSize,, +            this.time = time;, +        public TimeValue time() {, +            return TimeValue.timeValueMillis(time);, +        public TimeValue getTime() {, +            return time();, +            out.writeVLong(peerRecoveryStatus.time);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +        final long time;, +        public PeerRecoveryStatus(Stage stage, long startTime, long time, long retryTime, long indexSize, long reusedIndexSize,, +            this.time = time;, +        public TimeValue time() {, +            return TimeValue.timeValueMillis(time);, +        public TimeValue getTime() {, +            return time();, +            out.writeVLong(peerRecoveryStatus.time);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            shardStatus.peerRecoveryStatus = new ShardStatus.PeerRecoveryStatus(stage, peerRecoveryStatus.startTime(), peerRecoveryStatus.time(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +        final long time;, +        public PeerRecoveryStatus(Stage stage, long startTime, long time, long retryTime, long indexSize, long reusedIndexSize,, +            this.time = time;, +        public TimeValue time() {, +            return TimeValue.timeValueMillis(time);, +        public TimeValue getTime() {, +            return time();, +            out.writeVLong(peerRecoveryStatus.time);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            shardStatus.peerRecoveryStatus = new ShardStatus.PeerRecoveryStatus(stage, peerRecoveryStatus.startTime(), peerRecoveryStatus.time(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/PeerRecoveryStatus.java, +    long time;, +    public long time() {, +        return this.time;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +        final long time;, +        public PeerRecoveryStatus(Stage stage, long startTime, long time, long retryTime, long indexSize, long reusedIndexSize,, +            this.time = time;, +        public TimeValue time() {, +            return TimeValue.timeValueMillis(time);, +        public TimeValue getTime() {, +            return time();, +            out.writeVLong(peerRecoveryStatus.time);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            shardStatus.peerRecoveryStatus = new ShardStatus.PeerRecoveryStatus(stage, peerRecoveryStatus.startTime(), peerRecoveryStatus.time(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/PeerRecoveryStatus.java, +    long time;, +    public long time() {, +        return this.time;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/RecoveryTarget.java, +        PeerRecoveryStatus peerRecoveryStatus = onGoingRecoveries.get(shardId);, +        if (peerRecoveryStatus == null) {, +            return null;, +        }, +        // update how long it takes if we are still recovering..., +        if (peerRecoveryStatus.startTime > 0 && peerRecoveryStatus.stage != PeerRecoveryStatus.Stage.DONE) {, +            peerRecoveryStatus.time = System.currentTimeMillis() - peerRecoveryStatus.startTime;, +        }, +        return peerRecoveryStatus;, +            peerRecoveryStatus.time = System.currentTimeMillis() - peerRecoveryStatus.startTime;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +        final long time;, +        public PeerRecoveryStatus(Stage stage, long startTime, long time, long retryTime, long indexSize, long reusedIndexSize,, +            this.time = time;, +        public TimeValue time() {, +            return TimeValue.timeValueMillis(time);, +        public TimeValue getTime() {, +            return time();, +            out.writeVLong(peerRecoveryStatus.time);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +            shardStatus.peerRecoveryStatus = new ShardStatus.PeerRecoveryStatus(stage, peerRecoveryStatus.startTime(), peerRecoveryStatus.time(),, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/PeerRecoveryStatus.java, +    long time;, +    public long time() {, +        return this.time;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/recovery/RecoveryTarget.java, +        PeerRecoveryStatus peerRecoveryStatus = onGoingRecoveries.get(shardId);, +        if (peerRecoveryStatus == null) {, +            return null;, +        }, +        // update how long it takes if we are still recovering..., +        if (peerRecoveryStatus.startTime > 0 && peerRecoveryStatus.stage != PeerRecoveryStatus.Stage.DONE) {, +            peerRecoveryStatus.time = System.currentTimeMillis() - peerRecoveryStatus.startTime;, +        }, +        return peerRecoveryStatus;, +            peerRecoveryStatus.time = System.currentTimeMillis() - peerRecoveryStatus.startTime;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/admin/indices/status/RestIndicesStatusAction.java, +                                    builder.field("time", peerRecoveryStatus.time());, +                                    builder.field("took_in_millis", peerRecoveryStatus.time().millis());]