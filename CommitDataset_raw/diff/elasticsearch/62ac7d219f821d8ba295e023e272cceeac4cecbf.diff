[+++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());, +                    transportService.sendRequest(nodes.getMasterNode(), actionName, request, new ActionListenerResponseHandler<Response>(listener) {, +                                        actionName, nodes.getMasterNode(), exp.getDetailedMessage());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());, +                    transportService.sendRequest(nodes.getMasterNode(), actionName, request, new ActionListenerResponseHandler<Response>(listener) {, +                                        actionName, nodes.getMasterNode(), exp.getDetailedMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +        transportService.sendRequest(clusterState.nodes().getMasterNode(),, +            transportService.sendRequest(clusterState.nodes().getMasterNode(),, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());, +                    transportService.sendRequest(nodes.getMasterNode(), actionName, request, new ActionListenerResponseHandler<Response>(listener) {, +                                        actionName, nodes.getMasterNode(), exp.getDetailedMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +        transportService.sendRequest(clusterState.nodes().getMasterNode(),, +            transportService.sendRequest(clusterState.nodes().getMasterNode(),, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeMappingRefreshAction.java, +        if (nodes.getMasterNode() == null) {, +        transportService.sendRequest(nodes.getMasterNode(), ACTION_NAME, request, EmptyTransportResponseHandler.INSTANCE_SAME);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());, +                    transportService.sendRequest(nodes.getMasterNode(), actionName, request, new ActionListenerResponseHandler<Response>(listener) {, +                                        actionName, nodes.getMasterNode(), exp.getDetailedMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +        transportService.sendRequest(clusterState.nodes().getMasterNode(),, +            transportService.sendRequest(clusterState.nodes().getMasterNode(),, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeMappingRefreshAction.java, +        if (nodes.getMasterNode() == null) {, +        transportService.sendRequest(nodes.getMasterNode(), ACTION_NAME, request, EmptyTransportResponseHandler.INSTANCE_SAME);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +        DiscoveryNode masterNode = observer.observedState().nodes().getMasterNode();, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());, +                    transportService.sendRequest(nodes.getMasterNode(), actionName, request, new ActionListenerResponseHandler<Response>(listener) {, +                                        actionName, nodes.getMasterNode(), exp.getDetailedMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +        transportService.sendRequest(clusterState.nodes().getMasterNode(),, +            transportService.sendRequest(clusterState.nodes().getMasterNode(),, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeMappingRefreshAction.java, +        if (nodes.getMasterNode() == null) {, +        transportService.sendRequest(nodes.getMasterNode(), ACTION_NAME, request, EmptyTransportResponseHandler.INSTANCE_SAME);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +        DiscoveryNode masterNode = observer.observedState().nodes().getMasterNode();, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return nodes.get(masterNodeId);, +                previousMasterNode = other.getMasterNode();, +                newMasterNode = getMasterNode();, +            if (node == getMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());, +                    transportService.sendRequest(nodes.getMasterNode(), actionName, request, new ActionListenerResponseHandler<Response>(listener) {, +                                        actionName, nodes.getMasterNode(), exp.getDetailedMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +        transportService.sendRequest(clusterState.nodes().getMasterNode(),, +            transportService.sendRequest(clusterState.nodes().getMasterNode(),, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeMappingRefreshAction.java, +        if (nodes.getMasterNode() == null) {, +        transportService.sendRequest(nodes.getMasterNode(), ACTION_NAME, request, EmptyTransportResponseHandler.INSTANCE_SAME);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +        DiscoveryNode masterNode = observer.observedState().nodes().getMasterNode();, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return nodes.get(masterNodeId);, +                previousMasterNode = other.getMasterNode();, +                newMasterNode = getMasterNode();, +            if (node == getMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/ClusterService.java, +                if (!node.equals(nodes.getMasterNode())) {, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());, +                    transportService.sendRequest(nodes.getMasterNode(), actionName, request, new ActionListenerResponseHandler<Response>(listener) {, +                                        actionName, nodes.getMasterNode(), exp.getDetailedMessage());, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java, +        transportService.sendRequest(clusterState.nodes().getMasterNode(),, +            transportService.sendRequest(clusterState.nodes().getMasterNode(),, +++ b/core/src/main/java/org/elasticsearch/cluster/action/index/NodeMappingRefreshAction.java, +        if (nodes.getMasterNode() == null) {, +        transportService.sendRequest(nodes.getMasterNode(), ACTION_NAME, request, EmptyTransportResponseHandler.INSTANCE_SAME);, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +        DiscoveryNode masterNode = observer.observedState().nodes().getMasterNode();, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return nodes.get(masterNodeId);, +                previousMasterNode = other.getMasterNode();, +                newMasterNode = getMasterNode();, +            if (node == getMasterNode()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/ClusterService.java, +                if (!node.equals(nodes.getMasterNode())) {, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                    assert nodeSpecificClusterState.nodes().getMasterNode() != null : "received a cluster state without a master";, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +                if (nodes.getMasterNode() == null) {, +                    taskManager.registerChildTask(task, nodes.getMasterNode().getId());]