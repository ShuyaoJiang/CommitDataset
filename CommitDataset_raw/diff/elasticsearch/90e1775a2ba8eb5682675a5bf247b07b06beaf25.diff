[+++ b/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +            while (token == XContentParser.Token.VALUE_NUMBER) {, +                token = parser.nextToken();, +            }, +++ b/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +            while (token == XContentParser.Token.VALUE_NUMBER) {, +                token = parser.nextToken();, +            }, +++ b/src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java, +    public void testParse_multiDimensionShapes() throws IOException {, +        // multi dimension point, +        String pointGeoJson = XContentFactory.jsonBuilder().startObject().field("type", "Point"), +                .startArray("coordinates").value(100.0).value(0.0).value(15.0).value(18.0).endArray(), +                .endObject().string();, +, +        Point expectedPt = GEOMETRY_FACTORY.createPoint(new Coordinate(100.0, 0.0));, +        assertGeometryEquals(new JtsPoint(expectedPt, SPATIAL_CONTEXT), pointGeoJson);, +, +        // multi dimension linestring, +        String lineGeoJson = XContentFactory.jsonBuilder().startObject().field("type", "LineString"), +                .startArray("coordinates"), +                .startArray().value(100.0).value(0.0).value(15.0).endArray(), +                .startArray().value(101.0).value(1.0).value(18.0).value(19.0).endArray(), +                .endArray(), +                .endObject().string();, +, +        List<Coordinate> lineCoordinates = new ArrayList<>();, +        lineCoordinates.add(new Coordinate(100, 0));, +        lineCoordinates.add(new Coordinate(101, 1));, +, +        LineString expectedLS = GEOMETRY_FACTORY.createLineString(, +                lineCoordinates.toArray(new Coordinate[lineCoordinates.size()]));, +        assertGeometryEquals(jtsGeom(expectedLS), lineGeoJson);, +    }, +, +        // add 3d point to test ISSUE #10501, +        shellCoordinates.add(new Coordinate(100, 0, 15.0));, +        shellCoordinates.add(new Coordinate(100, 1, 10.0));]