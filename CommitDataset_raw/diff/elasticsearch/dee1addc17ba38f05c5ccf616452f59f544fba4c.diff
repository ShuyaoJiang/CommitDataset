[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.search.stats.SearchStats;, +    @Nullable SearchStats search;, +, +        if (search == null) {, +            if (stats.search() != null) {, +                search = new SearchStats();, +                search.add(stats.search());, +            }, +        } else {, +            search.add(stats.search());, +        }, +    @Nullable public SearchStats search() {, +        return search;, +    }, +, +    @Nullable public SearchStats getSearch() {, +        return search;, +    }, +, +            search = SearchStats.readSearchStats(in);, +        }, +        if (in.readBoolean()) {, +        if (search == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            search.writeTo(out);, +        }, +        if (search != null) {, +            search.toXContent(builder, params);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java, +import org.elasticsearch.index.search.stats.SearchStats;, +    @Nullable SearchStats search;, +, +        if (search == null) {, +            if (stats.search() != null) {, +                search = new SearchStats();, +                search.add(stats.search());, +            }, +        } else {, +            search.add(stats.search());, +        }, +    @Nullable public SearchStats search() {, +        return search;, +    }, +, +    @Nullable public SearchStats getSearch() {, +        return search;, +    }, +, +            search = SearchStats.readSearchStats(in);, +        }, +        if (in.readBoolean()) {, +        if (search == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            search.writeTo(out);, +        }, +        if (search != null) {, +            search.toXContent(builder, params);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequest.java, +    private boolean search = true;, +    private String[] groups = null;, +        search = false;, +        types = null;, +        groups = null;, +    /**, +     * Sets specific search group stats to retrieve the stats for. Mainly affects search, +     * when enabled., +     */, +    public IndicesStatsRequest groups(String... groups) {, +        this.groups = groups;, +        return this;, +    }, +, +    public String[] groups() {, +        return this.groups;, +    }, +, +    public IndicesStatsRequest search(boolean search) {, +        this.search = search;, +        return this;, +    }, +, +    public boolean search() {, +        return this.search;, +    }, +, +        out.writeBoolean(search);, +        if (groups == null) {, +            out.writeVInt(0);, +        } else {, +            out.writeVInt(groups.length);, +            for (String group : groups) {, +                out.writeUTF(group);, +            }]