[+++ b/core/src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java, +    //norelease we might want to get rid of this as it was temporarily introduced for our default doToQuery impl, +    //seems to be used only in tests, +    public QueryParser<? extends QueryBuilder<? extends QueryBuilder>> queryParser(String name) {, +        return parseContext.parseInnerQueryBuilder();, +++ b/core/src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java, +    //norelease we might want to get rid of this as it was temporarily introduced for our default doToQuery impl, +    //seems to be used only in tests, +    public QueryParser<? extends QueryBuilder<? extends QueryBuilder>> queryParser(String name) {, +        return parseContext.parseInnerQueryBuilder();, +++ b/core/src/main/java/org/elasticsearch/indices/query/IndicesQueriesRegistry.java, +    private ImmutableMap<String, QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> queryParsers;, +    public IndicesQueriesRegistry(Settings settings, Set<QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> injectedQueryParsers, NamedWriteableRegistry namedWriteableRegistry) {, +        Map<String, QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> queryParsers = Maps.newHashMap();, +        for (QueryParser<? extends QueryBuilder<? extends QueryBuilder>> queryParser : injectedQueryParsers) {, +    public ImmutableMap<String, QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> queryParsers() {, +++ b/core/src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java, +    //norelease we might want to get rid of this as it was temporarily introduced for our default doToQuery impl, +    //seems to be used only in tests, +    public QueryParser<? extends QueryBuilder<? extends QueryBuilder>> queryParser(String name) {, +        return parseContext.parseInnerQueryBuilder();, +++ b/core/src/main/java/org/elasticsearch/indices/query/IndicesQueriesRegistry.java, +    private ImmutableMap<String, QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> queryParsers;, +    public IndicesQueriesRegistry(Settings settings, Set<QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> injectedQueryParsers, NamedWriteableRegistry namedWriteableRegistry) {, +        Map<String, QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> queryParsers = Maps.newHashMap();, +        for (QueryParser<? extends QueryBuilder<? extends QueryBuilder>> queryParser : injectedQueryParsers) {, +    public ImmutableMap<String, QueryParser<? extends QueryBuilder<? extends QueryBuilder>>> queryParsers() {, +++ b/core/src/test/java/org/elasticsearch/index/query/BaseQueryTestCase.java, +                QueryParser<QB> queryParser = (QueryParser<QB>)queryParserService.queryParser(firstQuery.getWriteableName());, +                QB secondQuery = queryParser.getBuilderPrototype().readFrom(in);, +     * to disable boost and queryName related tests for those queries. Those queries are easy to identify: their parsers, +     * don't parse `boost` and `_name` as they don't apply to the specific query e.g. filter query or wrapper query, +        return createShardContext().parseContext();, +            return new Tuple<String, Object>(randomAsciiOfLengthBetween(1, 10), randomAsciiOfLengthBetween(1, 50));, +        return new Tuple<>(fieldName, value);]