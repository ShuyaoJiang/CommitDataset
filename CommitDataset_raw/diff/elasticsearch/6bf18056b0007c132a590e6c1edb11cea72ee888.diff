[+++ b/src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java, +        logger.debug("clearing all bitsets because [{}]", reason);, +++ b/src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java, +        logger.debug("clearing all bitsets because [{}]", reason);, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java, +++ b/src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java, +        logger.debug("clearing all bitsets because [{}]", reason);, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java, +++ b/src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java, +            // Note that cache invalidation in Guava does not immediately remove, +            // values from the cache. In the case of a cache with a rare write or, +            // read rate, it's possible for values to persist longer than desired., +            //, +            // Note this is intended by the Guava developers, see:, +            // https://code.google.com/p/guava-libraries/wiki/CachesExplained#Eviction, +            // (the "When Does Cleanup Happen" section), +++ b/src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java, +        logger.debug("clearing all bitsets because [{}]", reason);, +++ b/src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java, +++ b/src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java, +            // Note that cache invalidation in Guava does not immediately remove, +            // values from the cache. In the case of a cache with a rare write or, +            // read rate, it's possible for values to persist longer than desired., +            //, +            // Note this is intended by the Guava developers, see:, +            // https://code.google.com/p/guava-libraries/wiki/CachesExplained#Eviction, +            // (the "When Does Cleanup Happen" section), +++ b/src/test/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.index.IndexService;, +import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;, +import static org.apache.lucene.util.LuceneTestCase.*;, +                final IndicesFieldDataCache fdCache = getInstanceFromNode(IndicesFieldDataCache.class, nodeAndClient.node);, +                // Clean up the cache, ensuring that entries' listeners have been called, +                fdCache.getCache().cleanUp();, +]