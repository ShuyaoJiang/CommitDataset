[+++ b/core/src/main/java/org/elasticsearch/SpecialPermission.java, +, +    public static final SpecialPermission INSTANCE = new SpecialPermission();, +, +, +    /**, +     * Check that the current stack has {@link SpecialPermission} access according to the {@link SecurityManager}., +     */, +    public static void check() {, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(INSTANCE);, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/SpecialPermission.java, +, +    public static final SpecialPermission INSTANCE = new SpecialPermission();, +, +, +    /**, +     * Check that the current stack has {@link SpecialPermission} access according to the {@link SecurityManager}., +     */, +    public static void check() {, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(INSTANCE);, +        }, +    }, +++ b/core/src/test/java/org/elasticsearch/SpecialPermissionTests.java, +        assertEquals(SpecialPermission.INSTANCE, new SpecialPermission());, +        assertFalse(SpecialPermission.INSTANCE.equals(new AllPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(new SpecialPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(SpecialPermission.INSTANCE));, +        assertFalse(SpecialPermission.INSTANCE.implies(new AllPermission()));, +++ b/core/src/main/java/org/elasticsearch/SpecialPermission.java, +, +    public static final SpecialPermission INSTANCE = new SpecialPermission();, +, +, +    /**, +     * Check that the current stack has {@link SpecialPermission} access according to the {@link SecurityManager}., +     */, +    public static void check() {, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(INSTANCE);, +        }, +    }, +++ b/core/src/test/java/org/elasticsearch/SpecialPermissionTests.java, +        assertEquals(SpecialPermission.INSTANCE, new SpecialPermission());, +        assertFalse(SpecialPermission.INSTANCE.equals(new AllPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(new SpecialPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(SpecialPermission.INSTANCE));, +        assertFalse(SpecialPermission.INSTANCE.implies(new AllPermission()));, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngineService.java, +        SpecialPermission.check();, +++ b/core/src/main/java/org/elasticsearch/SpecialPermission.java, +, +    public static final SpecialPermission INSTANCE = new SpecialPermission();, +, +, +    /**, +     * Check that the current stack has {@link SpecialPermission} access according to the {@link SecurityManager}., +     */, +    public static void check() {, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(INSTANCE);, +        }, +    }, +++ b/core/src/test/java/org/elasticsearch/SpecialPermissionTests.java, +        assertEquals(SpecialPermission.INSTANCE, new SpecialPermission());, +        assertFalse(SpecialPermission.INSTANCE.equals(new AllPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(new SpecialPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(SpecialPermission.INSTANCE));, +        assertFalse(SpecialPermission.INSTANCE.implies(new AllPermission()));, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngineService.java, +        SpecialPermission.check();, +++ b/modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngineService.java, +                SpecialPermission.check();, +++ b/core/src/main/java/org/elasticsearch/SpecialPermission.java, +, +    public static final SpecialPermission INSTANCE = new SpecialPermission();, +, +, +    /**, +     * Check that the current stack has {@link SpecialPermission} access according to the {@link SecurityManager}., +     */, +    public static void check() {, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(INSTANCE);, +        }, +    }, +++ b/core/src/test/java/org/elasticsearch/SpecialPermissionTests.java, +        assertEquals(SpecialPermission.INSTANCE, new SpecialPermission());, +        assertFalse(SpecialPermission.INSTANCE.equals(new AllPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(new SpecialPermission()));, +        assertTrue(SpecialPermission.INSTANCE.implies(SpecialPermission.INSTANCE));, +        assertFalse(SpecialPermission.INSTANCE.implies(new AllPermission()));]