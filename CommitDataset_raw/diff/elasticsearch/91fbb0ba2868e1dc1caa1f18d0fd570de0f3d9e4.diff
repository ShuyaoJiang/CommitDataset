[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +, +, +         * Build a new {@link AliasAction} to remove an index., +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +, +, +         * Build a new {@link AliasAction} to remove an index., +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java, +import com.carrotsearch.hppc.cursors.ObjectCursor;, +import org.elasticsearch.cluster.metadata.AliasMetaData;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +            Collections.addAll(indices, aliasAction.indices());, +                    for (String alias : concreteAliases(action, state.metaData(), index)) {, +                    for (String alias : concreteAliases(action, state.metaData(), index)) {, +, +    private static String[] concreteAliases(AliasActions action, MetaData metaData, String concreteIndex) {, +        if (action.expandAliasesWildcards()) {, +            //for DELETE we expand the aliases, +            String[] indexAsArray = {concreteIndex};, +            ImmutableOpenMap<String, List<AliasMetaData>> aliasMetaData = metaData.findAliases(action.aliases(), indexAsArray);, +            List<String> finalAliases = new ArrayList<>();, +            for (ObjectCursor<List<AliasMetaData>> curAliases : aliasMetaData.values()) {, +                for (AliasMetaData aliasMeta: curAliases.value) {, +                    finalAliases.add(aliasMeta.alias());, +                }, +            }, +            return finalAliases.toArray(new String[finalAliases.size()]);, +        } else {, +            //for ADD and REMOVE_INDEX we just return the current aliases, +            return action.aliases();, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +, +, +         * Build a new {@link AliasAction} to remove an index., +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java, +import com.carrotsearch.hppc.cursors.ObjectCursor;, +import org.elasticsearch.cluster.metadata.AliasMetaData;, +import org.elasticsearch.cluster.metadata.MetaData;, +import org.elasticsearch.common.collect.ImmutableOpenMap;, +            Collections.addAll(indices, aliasAction.indices());, +                    for (String alias : concreteAliases(action, state.metaData(), index)) {, +                    for (String alias : concreteAliases(action, state.metaData(), index)) {, +, +    private static String[] concreteAliases(AliasActions action, MetaData metaData, String concreteIndex) {, +        if (action.expandAliasesWildcards()) {, +            //for DELETE we expand the aliases, +            String[] indexAsArray = {concreteIndex};, +            ImmutableOpenMap<String, List<AliasMetaData>> aliasMetaData = metaData.findAliases(action.aliases(), indexAsArray);, +            List<String> finalAliases = new ArrayList<>();, +            for (ObjectCursor<List<AliasMetaData>> curAliases : aliasMetaData.values()) {, +                for (AliasMetaData aliasMeta: curAliases.value) {, +                    finalAliases.add(aliasMeta.alias());, +                }, +            }, +            return finalAliases.toArray(new String[finalAliases.size()]);, +        } else {, +            //for ADD and REMOVE_INDEX we just return the current aliases, +            return action.aliases();, +        }, +    }, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.update_aliases/30_remove_index_and_replace_with_alias.yaml, +"Remove an index and replace it with an alias":]