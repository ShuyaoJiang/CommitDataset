[+++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +    protected IndexResponse index(String index, String type, String id, Map<String, Object> source) {, +                if (rarely()) {, +                    client().admin().indices().prepareRefresh(index).execute().get();, +                } else if (rarely()) {, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +    protected IndexResponse index(String index, String type, String id, Map<String, Object> source) {, +                if (rarely()) {, +                    client().admin().indices().prepareRefresh(index).execute().get();, +                } else if (rarely()) {, +++ b/src/test/java/org/elasticsearch/test/integration/count/query/SimpleQueryTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.*;, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("lookup").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .startObject("other").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("lookup2").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +    protected IndexResponse index(String index, String type, String id, Map<String, Object> source) {, +                if (rarely()) {, +                    client().admin().indices().prepareRefresh(index).execute().get();, +                } else if (rarely()) {, +++ b/src/test/java/org/elasticsearch/test/integration/count/query/SimpleQueryTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.*;, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("lookup").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .startObject("other").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("lookup2").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +++ b/src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("normal").field("type", "long").endObject(), +                    .startObject("exclude").field("type", "long").endObject(), +                    .startObject("include").field("type", "long").endObject(), +                    .endObject().endObject().endObject()));, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +    protected IndexResponse index(String index, String type, String id, Map<String, Object> source) {, +                if (rarely()) {, +                    client().admin().indices().prepareRefresh(index).execute().get();, +                } else if (rarely()) {, +++ b/src/test/java/org/elasticsearch/test/integration/count/query/SimpleQueryTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.*;, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("lookup").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .startObject("other").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("lookup2").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("terms").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));, +++ b/src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +        assertAcked(prepareCreate("test").addMapping("type", , +                jsonBuilder().startObject().startObject("type").startObject("properties"), +                    .startObject("normal").field("type", "long").endObject(), +                    .startObject("exclude").field("type", "long").endObject(), +                    .startObject("include").field("type", "long").endObject(), +                    .endObject().endObject().endObject()));, +++ b/src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java, +        assertAcked(prepareCreate("test").addMapping("type1", , +                jsonBuilder().startObject().startObject("type1").startObject("properties"), +                    .startObject("text").field("type", "string").endObject(), +                    .endObject().endObject().endObject()));]