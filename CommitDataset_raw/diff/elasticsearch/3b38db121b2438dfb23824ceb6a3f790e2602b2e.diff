[+++ b/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +            <version>3.3.2</version>, +        </dependency>, +, +        <dependency>, +                            <include>org.apache.commons:commons-lang3</include>, +                            <pattern>org.apache.commons.lang</pattern>, +                            <shadedPattern>org.elasticsearch.common.lang</shadedPattern>, +                        </relocation>, +                        <relocation>, +++ b/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +            <version>3.3.2</version>, +        </dependency>, +, +        <dependency>, +                            <include>org.apache.commons:commons-lang3</include>, +                            <pattern>org.apache.commons.lang</pattern>, +                            <shadedPattern>org.elasticsearch.common.lang</shadedPattern>, +                        </relocation>, +                        <relocation>, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import org.elasticsearch.index.mapper.DocumentFieldMappers;, +import java.util.Iterator;, +import java.util.LinkedList;, +        final DocumentFieldMappers allFieldMappers = documentMapper.mappers();, +                for (FieldMapper<?> fieldMapper : allFieldMappers) {, +                Collection<FieldMapper<?>> remainingFieldMappers = new LinkedList<>(allFieldMappers);, +                for (Iterator<FieldMapper<?>> it = remainingFieldMappers.iterator(); it.hasNext(); ) {, +                    final FieldMapper<?> fieldMapper = it.next();, +                        it.remove();, +                for (Iterator<FieldMapper<?>> it = remainingFieldMappers.iterator(); it.hasNext(); ) {, +                    final FieldMapper<?> fieldMapper = it.next();, +                        it.remove();, +                for (Iterator<FieldMapper<?>> it = remainingFieldMappers.iterator(); it.hasNext(); ) {, +                    final FieldMapper<?> fieldMapper = it.next();, +                        it.remove();, +                FieldMapper<?> fieldMapper = allFieldMappers.smartNameFieldMapper(field);, +    private void addFieldMapper(String field, FieldMapper<?> fieldMapper, MapBuilder<String, FieldMappingMetaData> fieldMappings, boolean includeDefaults) {, +++ b/pom.xml, +            <groupId>org.apache.commons</groupId>, +            <artifactId>commons-lang3</artifactId>, +            <version>3.3.2</version>, +        </dependency>, +, +        <dependency>, +                            <include>org.apache.commons:commons-lang3</include>, +                            <pattern>org.apache.commons.lang</pattern>, +                            <shadedPattern>org.elasticsearch.common.lang</shadedPattern>, +                        </relocation>, +                        <relocation>, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +import org.elasticsearch.index.mapper.DocumentFieldMappers;, +import java.util.Iterator;, +import java.util.LinkedList;, +        final DocumentFieldMappers allFieldMappers = documentMapper.mappers();, +                for (FieldMapper<?> fieldMapper : allFieldMappers) {, +                Collection<FieldMapper<?>> remainingFieldMappers = new LinkedList<>(allFieldMappers);, +                for (Iterator<FieldMapper<?>> it = remainingFieldMappers.iterator(); it.hasNext(); ) {, +                    final FieldMapper<?> fieldMapper = it.next();, +                        it.remove();, +                for (Iterator<FieldMapper<?>> it = remainingFieldMappers.iterator(); it.hasNext(); ) {, +                    final FieldMapper<?> fieldMapper = it.next();, +                        it.remove();, +                for (Iterator<FieldMapper<?>> it = remainingFieldMappers.iterator(); it.hasNext(); ) {, +                    final FieldMapper<?> fieldMapper = it.next();, +                        it.remove();, +                FieldMapper<?> fieldMapper = allFieldMappers.smartNameFieldMapper(field);, +    private void addFieldMapper(String field, FieldMapper<?> fieldMapper, MapBuilder<String, FieldMappingMetaData> fieldMappings, boolean includeDefaults) {, +++ b/src/main/java/org/elasticsearch/common/collect/CopyOnWriteHashMap.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.collect;, +, +import com.google.common.collect.Maps;, +import com.google.common.collect.UnmodifiableIterator;, +import org.apache.commons.lang3.ArrayUtils;, +import org.apache.lucene.util.mutable.MutableValueInt;, +import org.elasticsearch.common.Preconditions;, +]