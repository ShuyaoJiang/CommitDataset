[+++ b/distribution/tools/plugin-cli/build.gradle, +, +if (project.inFipsJvm) {, +  // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +  // rather than provide a long list of exclusions, disable the check on FIPS., +  thirdPartyAudit.enabled = false, +}, +++ b/distribution/tools/plugin-cli/build.gradle, +, +if (project.inFipsJvm) {, +  // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +  // rather than provide a long list of exclusions, disable the check on FIPS., +  thirdPartyAudit.enabled = false, +}, +++ b/modules/transport-netty4/build.gradle, +, +if (project.inFipsJvm == false) {, +    // BouncyCastleFIPS provides this class, so the exclusion is invalid when running CI in, +    // a FIPS JVM with BouncyCastleFIPS Provider, +    thirdPartyAudit.excludes += [, +            'org.bouncycastle.asn1.x500.X500Name', +    ], +}, +++ b/distribution/tools/plugin-cli/build.gradle, +, +if (project.inFipsJvm) {, +  // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +  // rather than provide a long list of exclusions, disable the check on FIPS., +  thirdPartyAudit.enabled = false, +}, +++ b/modules/transport-netty4/build.gradle, +, +if (project.inFipsJvm == false) {, +    // BouncyCastleFIPS provides this class, so the exclusion is invalid when running CI in, +    // a FIPS JVM with BouncyCastleFIPS Provider, +    thirdPartyAudit.excludes += [, +            'org.bouncycastle.asn1.x500.X500Name', +    ], +}, +++ b/plugins/ingest-attachment/build.gradle, +, +if (project.inFipsJvm) {, +    // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +    // rather than provide a long list of exclusions, disable the check on FIPS., +    thirdPartyAudit.enabled = false, +}, +++ b/distribution/tools/plugin-cli/build.gradle, +, +if (project.inFipsJvm) {, +  // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +  // rather than provide a long list of exclusions, disable the check on FIPS., +  thirdPartyAudit.enabled = false, +}, +++ b/modules/transport-netty4/build.gradle, +, +if (project.inFipsJvm == false) {, +    // BouncyCastleFIPS provides this class, so the exclusion is invalid when running CI in, +    // a FIPS JVM with BouncyCastleFIPS Provider, +    thirdPartyAudit.excludes += [, +            'org.bouncycastle.asn1.x500.X500Name', +    ], +}, +++ b/plugins/ingest-attachment/build.gradle, +, +if (project.inFipsJvm) {, +    // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +    // rather than provide a long list of exclusions, disable the check on FIPS., +    thirdPartyAudit.enabled = false, +}, +++ b/plugins/transport-nio/build.gradle, +if (project.inFipsJvm == false) {, +    // BouncyCastleFIPS provides this class, so the exclusion is invalid when running CI in, +    // a FIPS JVM with BouncyCastleFIPS Provider, +    thirdPartyAudit.excludes += [, +            'org.bouncycastle.asn1.x500.X500Name', +    ], +}, +++ b/distribution/tools/plugin-cli/build.gradle, +, +if (project.inFipsJvm) {, +  // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +  // rather than provide a long list of exclusions, disable the check on FIPS., +  thirdPartyAudit.enabled = false, +}, +++ b/modules/transport-netty4/build.gradle, +, +if (project.inFipsJvm == false) {, +    // BouncyCastleFIPS provides this class, so the exclusion is invalid when running CI in, +    // a FIPS JVM with BouncyCastleFIPS Provider, +    thirdPartyAudit.excludes += [, +            'org.bouncycastle.asn1.x500.X500Name', +    ], +}, +++ b/plugins/ingest-attachment/build.gradle, +, +if (project.inFipsJvm) {, +    // FIPS JVM includes manny classes from bouncycastle which count as jar hell for the third party audit,, +    // rather than provide a long list of exclusions, disable the check on FIPS., +    thirdPartyAudit.enabled = false, +}]