[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +                    (noLicense || LicenseUtils.licenseNeedsExtended(currentLicense) ||, +                        LicenseUtils.signatureNeedsUpdate(currentLicense, currentClusterState.nodes()))) {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +                    (noLicense || LicenseUtils.licenseNeedsExtended(currentLicense) ||, +                        LicenseUtils.signatureNeedsUpdate(currentLicense, currentClusterState.nodes()))) {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseUtils.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +import java.util.stream.StreamSupport;, +, +    public static boolean signatureNeedsUpdate(License license, DiscoveryNodes currentNodes) {, +        assert License.VERSION_CRYPTO_ALGORITHMS == License.VERSION_CURRENT : "update this method when adding a new version";, +, +                // only upgrade signature when all nodes are ready to deserialize the new signature, +                (license.version() < License.VERSION_CRYPTO_ALGORITHMS &&, +                    compatibleLicenseVersion(currentNodes) == License.VERSION_CRYPTO_ALGORITHMS, +                );, +    }, +, +    public static int compatibleLicenseVersion(DiscoveryNodes currentNodes) {, +        assert License.VERSION_CRYPTO_ALGORITHMS == License.VERSION_CURRENT : "update this method when adding a new version";, +, +        if (StreamSupport.stream(currentNodes.spliterator(), false), +            .allMatch(node -> node.getVersion().onOrAfter(Version.V_6_4_0))) {, +            // License.VERSION_CRYPTO_ALGORITHMS was introduced in 6.4.0, +            return License.VERSION_CRYPTO_ALGORITHMS;, +        } else {, +            return License.VERSION_START_DATE;, +        }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +                    (noLicense || LicenseUtils.licenseNeedsExtended(currentLicense) ||, +                        LicenseUtils.signatureNeedsUpdate(currentLicense, currentClusterState.nodes()))) {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseUtils.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +import java.util.stream.StreamSupport;, +, +    public static boolean signatureNeedsUpdate(License license, DiscoveryNodes currentNodes) {, +        assert License.VERSION_CRYPTO_ALGORITHMS == License.VERSION_CURRENT : "update this method when adding a new version";, +, +                // only upgrade signature when all nodes are ready to deserialize the new signature, +                (license.version() < License.VERSION_CRYPTO_ALGORITHMS &&, +                    compatibleLicenseVersion(currentNodes) == License.VERSION_CRYPTO_ALGORITHMS, +                );, +    }, +, +    public static int compatibleLicenseVersion(DiscoveryNodes currentNodes) {, +        assert License.VERSION_CRYPTO_ALGORITHMS == License.VERSION_CURRENT : "update this method when adding a new version";, +, +        if (StreamSupport.stream(currentNodes.spliterator(), false), +            .allMatch(node -> node.getVersion().onOrAfter(Version.V_6_4_0))) {, +            // License.VERSION_CRYPTO_ALGORITHMS was introduced in 6.4.0, +            return License.VERSION_CRYPTO_ALGORITHMS;, +        } else {, +            return License.VERSION_START_DATE;, +        }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/SelfGeneratedLicense.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public static License create(License.Builder specBuilder, DiscoveryNodes currentNodes) {, +        return create(specBuilder, LicenseUtils.compatibleLicenseVersion(currentNodes));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +                    (noLicense || LicenseUtils.licenseNeedsExtended(currentLicense) ||, +                        LicenseUtils.signatureNeedsUpdate(currentLicense, currentClusterState.nodes()))) {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseUtils.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +import java.util.stream.StreamSupport;, +, +    public static boolean signatureNeedsUpdate(License license, DiscoveryNodes currentNodes) {, +        assert License.VERSION_CRYPTO_ALGORITHMS == License.VERSION_CURRENT : "update this method when adding a new version";, +, +                // only upgrade signature when all nodes are ready to deserialize the new signature, +                (license.version() < License.VERSION_CRYPTO_ALGORITHMS &&, +                    compatibleLicenseVersion(currentNodes) == License.VERSION_CRYPTO_ALGORITHMS, +                );, +    }, +, +    public static int compatibleLicenseVersion(DiscoveryNodes currentNodes) {, +        assert License.VERSION_CRYPTO_ALGORITHMS == License.VERSION_CURRENT : "update this method when adding a new version";, +, +        if (StreamSupport.stream(currentNodes.spliterator(), false), +            .allMatch(node -> node.getVersion().onOrAfter(Version.V_6_4_0))) {, +            // License.VERSION_CRYPTO_ALGORITHMS was introduced in 6.4.0, +            return License.VERSION_CRYPTO_ALGORITHMS;, +        } else {, +            return License.VERSION_START_DATE;, +        }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/SelfGeneratedLicense.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public static License create(License.Builder specBuilder, DiscoveryNodes currentNodes) {, +        return create(specBuilder, LicenseUtils.compatibleLicenseVersion(currentNodes));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/StartBasicClusterTask.java, +            License selfGeneratedLicense = SelfGeneratedLicense.create(specBuilder, currentState.nodes());, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +                    (noLicense || LicenseUtils.licenseNeedsExtended(currentLicense) ||, +                        LicenseUtils.signatureNeedsUpdate(currentLicense, currentClusterState.nodes()))) {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseUtils.java, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.node.DiscoveryNodes;]