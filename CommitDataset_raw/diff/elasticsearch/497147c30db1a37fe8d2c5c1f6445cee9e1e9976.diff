[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionStatus.java, +            return Objects.equals(successful, execution.successful) &&, +                   Objects.equals(timestamp, execution.timestamp) &&, +                   Objects.equals(reason, execution.reason);, +            return Objects.hash(timestamp, successful, reason);, +            return Objects.equals(timestamp, throttle.timestamp) && Objects.equals(reason, throttle.reason);, +            return Objects.hash(timestamp, reason);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionStatus.java, +            return Objects.equals(successful, execution.successful) &&, +                   Objects.equals(timestamp, execution.timestamp) &&, +                   Objects.equals(reason, execution.reason);, +            return Objects.hash(timestamp, successful, reason);, +            return Objects.equals(timestamp, throttle.timestamp) && Objects.equals(reason, throttle.reason);, +            return Objects.hash(timestamp, reason);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionResult.java, +    private WatchExecutionResult(DateTime executionTime, long executionDurationMs, Input.Result inputResult,, +                                 Condition.Result conditionResult, @Nullable Transform.Result transformResult,, +                                 Map<String, ActionWrapper.Result> actionsResults) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionStatus.java, +            return Objects.equals(successful, execution.successful) &&, +                   Objects.equals(timestamp, execution.timestamp) &&, +                   Objects.equals(reason, execution.reason);, +            return Objects.hash(timestamp, successful, reason);, +            return Objects.equals(timestamp, throttle.timestamp) && Objects.equals(reason, throttle.reason);, +            return Objects.hash(timestamp, reason);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionResult.java, +    private WatchExecutionResult(DateTime executionTime, long executionDurationMs, Input.Result inputResult,, +                                 Condition.Result conditionResult, @Nullable Transform.Result transformResult,, +                                 Map<String, ActionWrapper.Result> actionsResults) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/history/WatchRecord.java, +    protected final Watch watch;, +    private WatchRecord(Wid id, TriggerEvent triggerEvent, ExecutionState state, Map<String, Object> vars, ExecutableInput input,, +                       Condition condition, Map<String, Object> metadata, Watch watch, WatchExecutionResult executionResult) {, +        this.watch = watch;, +    private WatchRecord(Wid id, TriggerEvent triggerEvent, ExecutionState state) {, +        this(id, triggerEvent, state, Collections.emptyMap(), null, null, null, null, null);, +    private WatchRecord(WatchRecord record, ExecutionState state) {, +        this(record.id, record.triggerEvent, state, record.vars, record.input, record.condition, record.metadata, record.watch,, +                record.executionResult);, +    private WatchRecord(WatchExecutionContext context, ExecutionState state) {, +                context.watch().metadata(), context.watch(), null);, +    private WatchRecord(WatchExecutionContext context, WatchExecutionResult executionResult) {, +                context.watch().condition(), context.watch().metadata(), context.watch(), executionResult);, +        if (watch != null && watch.status() != null) {, +            builder.field("_status", watch.status(), params);, +        }, +, +        ParseField STATUS = new ParseField("_status");, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionStatus.java, +            return Objects.equals(successful, execution.successful) &&, +                   Objects.equals(timestamp, execution.timestamp) &&, +                   Objects.equals(reason, execution.reason);, +            return Objects.hash(timestamp, successful, reason);, +            return Objects.equals(timestamp, throttle.timestamp) && Objects.equals(reason, throttle.reason);, +            return Objects.hash(timestamp, reason);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionResult.java, +    private WatchExecutionResult(DateTime executionTime, long executionDurationMs, Input.Result inputResult,, +                                 Condition.Result conditionResult, @Nullable Transform.Result transformResult,, +                                 Map<String, ActionWrapper.Result> actionsResults) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/history/WatchRecord.java, +    protected final Watch watch;, +    private WatchRecord(Wid id, TriggerEvent triggerEvent, ExecutionState state, Map<String, Object> vars, ExecutableInput input,, +                       Condition condition, Map<String, Object> metadata, Watch watch, WatchExecutionResult executionResult) {, +        this.watch = watch;, +    private WatchRecord(Wid id, TriggerEvent triggerEvent, ExecutionState state) {, +        this(id, triggerEvent, state, Collections.emptyMap(), null, null, null, null, null);, +    private WatchRecord(WatchRecord record, ExecutionState state) {, +        this(record.id, record.triggerEvent, state, record.vars, record.input, record.condition, record.metadata, record.watch,, +                record.executionResult);, +    private WatchRecord(WatchExecutionContext context, ExecutionState state) {, +                context.watch().metadata(), context.watch(), null);, +    private WatchRecord(WatchExecutionContext context, WatchExecutionResult executionResult) {, +                context.watch().condition(), context.watch().metadata(), context.watch(), executionResult);, +        if (watch != null && watch.status() != null) {, +            builder.field("_status", watch.status(), params);, +        }, +, +        ParseField STATUS = new ParseField("_status");, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/support/WatcherIndexTemplateRegistry.java, +    public static final String INDEX_TEMPLATE_VERSION = "3";, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionStatus.java, +            return Objects.equals(successful, execution.successful) &&, +                   Objects.equals(timestamp, execution.timestamp) &&, +                   Objects.equals(reason, execution.reason);, +            return Objects.hash(timestamp, successful, reason);, +            return Objects.equals(timestamp, throttle.timestamp) && Objects.equals(reason, throttle.reason);, +            return Objects.hash(timestamp, reason);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/execution/WatchExecutionResult.java, +    private WatchExecutionResult(DateTime executionTime, long executionDurationMs, Input.Result inputResult,, +                                 Condition.Result conditionResult, @Nullable Transform.Result transformResult,, +                                 Map<String, ActionWrapper.Result> actionsResults) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/watcher/history/WatchRecord.java, +    protected final Watch watch;, +    private WatchRecord(Wid id, TriggerEvent triggerEvent, ExecutionState state, Map<String, Object> vars, ExecutableInput input,, +                       Condition condition, Map<String, Object> metadata, Watch watch, WatchExecutionResult executionResult) {, +        this.watch = watch;, +    private WatchRecord(Wid id, TriggerEvent triggerEvent, ExecutionState state) {, +        this(id, triggerEvent, state, Collections.emptyMap(), null, null, null, null, null);, +    private WatchRecord(WatchRecord record, ExecutionState state) {, +        this(record.id, record.triggerEvent, state, record.vars, record.input, record.condition, record.metadata, record.watch,]