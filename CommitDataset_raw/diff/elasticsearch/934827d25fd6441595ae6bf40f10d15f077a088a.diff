[+++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            LogConfigurator.configure(settings);, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            LogConfigurator.configure(settings);, +++ b/core/src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java, +    public static void configure(Settings settings) {, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            LogConfigurator.configure(settings);, +++ b/core/src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java, +    public static void configure(Settings settings) {, +++ /dev/null, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            LogConfigurator.configure(settings);, +++ b/core/src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java, +    public static void configure(Settings settings) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            indexServicesProvider.getIndexingMemoryController().forceCheck();, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            LogConfigurator.configure(settings);, +++ b/core/src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java, +    public static void configure(Settings settings) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            indexServicesProvider.getIndexingMemoryController().forceCheck();, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +    private final IndexingMemoryController indexingMemoryController;, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper, IndexingMemoryController indexingMemoryController) {, +        this.indexingMemoryController = indexingMemoryController;, +    public IndexSearcherWrapper getIndexSearcherWrapper() {, +        return indexSearcherWrapper;, +    }, +, +    public IndexingMemoryController getIndexingMemoryController() {, +        return indexingMemoryController;, +    }, +++ b/Vagrantfile, +    ubuntu_common config, +def ubuntu_common(config), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', +def deb_common(config, add_openjdk_repository_command, openjdk_list), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            LogConfigurator.configure(settings);, +++ b/core/src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java, +    public static void configure(Settings settings) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            indexServicesProvider.getIndexingMemoryController().forceCheck();, +++ b/core/src/main/java/org/elasticsearch/index/IndexServicesProvider.java, +, +import org.elasticsearch.indices.memory.IndexingMemoryController;, +    private final IndexingMemoryController indexingMemoryController;, +    public IndexServicesProvider(IndicesLifecycle indicesLifecycle, ThreadPool threadPool, MapperService mapperService, IndexQueryParserService queryParserService, IndexCache indexCache, IndexAliasesService indexAliasesService, IndicesQueryCache indicesQueryCache, CodecService codecService, TermVectorsService termVectorsService, IndexFieldDataService indexFieldDataService, @Nullable IndicesWarmer warmer, SimilarityService similarityService, EngineFactory factory, BigArrays bigArrays, @Nullable IndexSearcherWrapper indexSearcherWrapper, IndexingMemoryController indexingMemoryController) {, +        this.indexingMemoryController = indexingMemoryController;, +    public IndexSearcherWrapper getIndexSearcherWrapper() {, +        return indexSearcherWrapper;, +    }, +, +    public IndexingMemoryController getIndexingMemoryController() {, +        return indexingMemoryController;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    /** How much heap Lucene's IndexWriter is using */, +    abstract public long indexWriterRAMBytesUsed();, +, +, +        /**, +         * Returns operation start time in nanoseconds.]