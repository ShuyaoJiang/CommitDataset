[+++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                Function<Settings, String> defaultLangAndTypeFn = settings -> {, +                    final Setting<Boolean> globalTypeSetting = scriptTypeSettingMap.get(scriptType);, +                    final Setting<Boolean> langAndTypeSetting = Setting.boolSetting(ScriptModes.getGlobalKey(language, scriptType),, +                            defaultIfNothingSet, Property.NodeScope);, +, +                    if (langAndTypeSetting.exists(settings)) {, +                        // fine-grained e.g. script.engine.groovy.inline, +                        return langAndTypeSetting.get(settings).toString();, +                    } else if (globalTypeSetting.exists(settings)) {, +                        // global type - script.inline, +                        return globalTypeSetting.get(settings).toString();, +                    } else {, +                        return Boolean.toString(defaultIfNothingSet);, +                    }, +                };, +, +                        defaultLangAndTypeFn, Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/script/ScriptSettings.java, +                Function<Settings, String> defaultLangAndTypeFn = settings -> {, +                    final Setting<Boolean> globalTypeSetting = scriptTypeSettingMap.get(scriptType);, +                    final Setting<Boolean> langAndTypeSetting = Setting.boolSetting(ScriptModes.getGlobalKey(language, scriptType),, +                            defaultIfNothingSet, Property.NodeScope);, +, +                    if (langAndTypeSetting.exists(settings)) {, +                        // fine-grained e.g. script.engine.groovy.inline, +                        return langAndTypeSetting.get(settings).toString();, +                    } else if (globalTypeSetting.exists(settings)) {, +                        // global type - script.inline, +                        return globalTypeSetting.get(settings).toString();, +                    } else {, +                        return Boolean.toString(defaultIfNothingSet);, +                    }, +                };, +, +                        defaultLangAndTypeFn, Property.NodeScope);, +++ b/core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java, +import org.elasticsearch.common.settings.Setting;, +import java.util.Iterator;, +    public void testSettingsAreProperlyPropogated() {, +        ScriptEngineRegistry scriptEngineRegistry =, +            new ScriptEngineRegistry(Collections.singletonList(new CustomScriptEngineService()));, +        ScriptContextRegistry scriptContextRegistry = new ScriptContextRegistry(Collections.emptyList());, +        ScriptSettings scriptSettings = new ScriptSettings(scriptEngineRegistry, scriptContextRegistry);, +        boolean enabled = randomBoolean();, +        Settings s = Settings.builder().put("script.inline", enabled).build();, +        for (Iterator<Setting<Boolean>> iter = scriptSettings.getScriptLanguageSettings().iterator(); iter.hasNext();) {, +            Setting<Boolean> setting = iter.next();, +            if (setting.getKey().endsWith(".inline")) {, +                assertThat("inline settings should have propagated", setting.get(s), equalTo(enabled));, +                assertThat(setting.getDefaultRaw(s), equalTo(Boolean.toString(enabled)));, +            }, +        }, +    }, +]