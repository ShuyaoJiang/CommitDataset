[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +    SearchTransportService(Settings settings, TransportService transportService) {, +        transportService.sendRequest(node, CLEAR_SCROLL_CONTEXTS_ACTION_NAME, TransportRequest.Empty.INSTANCE,, +    public static void registerRequestHandler(TransportService transportService, SearchService searchService) {, +        transportService.registerRequestHandler(FREE_CONTEXT_SCROLL_ACTION_NAME, ScrollFreeContextRequest::new, ThreadPool.Names.SAME,, +            ((request, channel) -> {, +            }));, +        transportService.registerRequestHandler(FREE_CONTEXT_ACTION_NAME, SearchFreeContextRequest::new, ThreadPool.Names.SAME,, +            (request, channel) -> {, +                boolean freed = searchService.freeContext(request.id());, +                channel.sendResponse(new SearchFreeContextResponse(freed));, +            });, +        transportService.registerRequestHandler(CLEAR_SCROLL_CONTEXTS_ACTION_NAME, () -> TransportRequest.Empty.INSTANCE, ThreadPool.Names.SAME,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(DFS_ACTION_NAME, ShardSearchTransportRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_ACTION_NAME, ShardSearchTransportRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_ID_ACTION_NAME, QuerySearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_SCROLL_ACTION_NAME, InternalScrollSearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_FETCH_ACTION_NAME, ShardSearchTransportRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_QUERY_FETCH_ACTION_NAME, QuerySearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_FETCH_SCROLL_ACTION_NAME, InternalScrollSearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(FETCH_ID_SCROLL_ACTION_NAME, ShardFetchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +                FetchSearchResult result = searchService.executeFetchPhase(request);, +                channel.sendResponse(result);, +            });, +        transportService.registerRequestHandler(FETCH_ID_ACTION_NAME, ShardFetchSearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +                FetchSearchResult result = searchService.executeFetchPhase(request);, +                channel.sendResponse(result);, +            });, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +    SearchTransportService(Settings settings, TransportService transportService) {, +        transportService.sendRequest(node, CLEAR_SCROLL_CONTEXTS_ACTION_NAME, TransportRequest.Empty.INSTANCE,, +    public static void registerRequestHandler(TransportService transportService, SearchService searchService) {, +        transportService.registerRequestHandler(FREE_CONTEXT_SCROLL_ACTION_NAME, ScrollFreeContextRequest::new, ThreadPool.Names.SAME,, +            ((request, channel) -> {, +            }));, +        transportService.registerRequestHandler(FREE_CONTEXT_ACTION_NAME, SearchFreeContextRequest::new, ThreadPool.Names.SAME,, +            (request, channel) -> {, +                boolean freed = searchService.freeContext(request.id());, +                channel.sendResponse(new SearchFreeContextResponse(freed));, +            });, +        transportService.registerRequestHandler(CLEAR_SCROLL_CONTEXTS_ACTION_NAME, () -> TransportRequest.Empty.INSTANCE, ThreadPool.Names.SAME,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(DFS_ACTION_NAME, ShardSearchTransportRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_ACTION_NAME, ShardSearchTransportRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_ID_ACTION_NAME, QuerySearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_SCROLL_ACTION_NAME, InternalScrollSearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_FETCH_ACTION_NAME, ShardSearchTransportRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_QUERY_FETCH_ACTION_NAME, QuerySearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(QUERY_FETCH_SCROLL_ACTION_NAME, InternalScrollSearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +            });, +        transportService.registerRequestHandler(FETCH_ID_SCROLL_ACTION_NAME, ShardFetchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +                FetchSearchResult result = searchService.executeFetchPhase(request);, +                channel.sendResponse(result);, +            });, +        transportService.registerRequestHandler(FETCH_ID_ACTION_NAME, ShardFetchSearchRequest::new, ThreadPool.Names.SEARCH,, +            (request, channel) -> {, +                FetchSearchResult result = searchService.executeFetchPhase(request);, +                channel.sendResponse(result);, +            });, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportClearScrollAction.java, +                                      ClusterService clusterService, ActionFilters actionFilters,, +                                      IndexNameExpressionResolver indexNameExpressionResolver) {, +        this.searchTransportService = new SearchTransportService(settings, transportService);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +    SearchTransportService(Settings settings, TransportService transportService) {, +        transportService.sendRequest(node, CLEAR_SCROLL_CONTEXTS_ACTION_NAME, TransportRequest.Empty.INSTANCE,, +    public static void registerRequestHandler(TransportService transportService, SearchService searchService) {]