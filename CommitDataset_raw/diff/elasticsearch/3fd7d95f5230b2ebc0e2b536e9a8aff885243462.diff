[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +                if (IndicesOptions.isIndicesOptions(name) == false) {, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +                if (IndicesOptions.isIndicesOptions(name) == false) {, +        }, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +    /**, +     * Returns true if the name represents a valid name for one of the indices option, +     * false otherwise, +     */, +    public static boolean isIndicesOptions(String name) {, +        return "expand_wildcards".equals(name) || "expandWildcards".equals(name) ||, +                "ignore_unavailable".equals(name) || "ignoreUnavailable".equals(name) ||, +                "allow_no_indices".equals(name) || "allowNoIndices".equals(name);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +                if (IndicesOptions.isIndicesOptions(name) == false) {, +        }, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +    /**, +     * Returns true if the name represents a valid name for one of the indices option, +     * false otherwise, +     */, +    public static boolean isIndicesOptions(String name) {, +        return "expand_wildcards".equals(name) || "expandWildcards".equals(name) ||, +                "ignore_unavailable".equals(name) || "ignoreUnavailable".equals(name) ||, +                "allow_no_indices".equals(name) || "allowNoIndices".equals(name);, +    }, +, +++ b/core/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.snapshots;, +, +import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.restore.RestoreSnapshotRequest;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.test.ESTestCase;, +import org.junit.Test;, +, +import java.io.IOException;, +, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +, +public class SnapshotRequestsTests extends ESTestCase {, +    @Test, +    public void testRestoreSnapshotRequestParsing() throws IOException {, +, +        RestoreSnapshotRequest request = new RestoreSnapshotRequest("test-repo", "test-snap");, +, +        XContentBuilder builder = jsonBuilder().startObject();, +, +        if(randomBoolean()) {, +            builder.field("indices", "foo,bar,baz");, +        } else {, +            builder.startArray("indices");, +            builder.value("foo");, +            builder.value("bar");, +            builder.value("baz");, +            builder.endArray();, +        }, +, +        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());, +        if (indicesOptions.expandWildcardsClosed()) {, +            if (indicesOptions.expandWildcardsOpen()) {, +                builder.field("expand_wildcards", "all");, +            } else {, +                builder.field("expand_wildcards", "closed");, +            }, +        } else {, +            if (indicesOptions.expandWildcardsOpen()) {, +                builder.field("expand_wildcards", "open");, +            } else {, +                builder.field("expand_wildcards", "none");, +            }, +        }, +        builder.field("allow_no_indices", indicesOptions.allowNoIndices());, +        builder.field("rename_pattern", "rename-from");, +        builder.field("rename_replacement", "rename-to");, +        boolean partial = randomBoolean();]