[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Bytes.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Bytes.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/CacheRecycler.java, +        bytes.remove();, +    // Bytes, +    private static ThreadLocal<SoftReference<byte[]>> bytes = new ThreadLocal<SoftReference<byte[]>>();, +, +    public static byte[] popBytes() {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb = ref == null ? null : ref.get();, +        if (bb == null) {, +            bb = new byte[1024];, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +        return bb;, +    }, +, +    public static void pushBytes(byte[] bb) {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb1 = ref == null ? null : ref.get();, +        if (bb1 != null && bb1.length < bb.length) {, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Bytes.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/CacheRecycler.java, +        bytes.remove();, +    // Bytes, +    private static ThreadLocal<SoftReference<byte[]>> bytes = new ThreadLocal<SoftReference<byte[]>>();, +, +    public static byte[] popBytes() {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb = ref == null ? null : ref.get();, +        if (bb == null) {, +            bb = new byte[1024];, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +        return bb;, +    }, +, +    public static void pushBytes(byte[] bb) {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb1 = ref == null ? null : ref.get();, +        if (bb1 != null && bb1.length < bb.length) {, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/FastCharArrayWriter.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Bytes.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/CacheRecycler.java, +        bytes.remove();, +    // Bytes, +    private static ThreadLocal<SoftReference<byte[]>> bytes = new ThreadLocal<SoftReference<byte[]>>();, +, +    public static byte[] popBytes() {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb = ref == null ? null : ref.get();, +        if (bb == null) {, +            bb = new byte[1024];, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +        return bb;, +    }, +, +    public static void pushBytes(byte[] bb) {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb1 = ref == null ? null : ref.get();, +        if (bb1 != null && bb1.length < bb.length) {, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/FastCharArrayWriter.java, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/Bytes.java, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/CacheRecycler.java, +        bytes.remove();, +    // Bytes, +    private static ThreadLocal<SoftReference<byte[]>> bytes = new ThreadLocal<SoftReference<byte[]>>();, +, +    public static byte[] popBytes() {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb = ref == null ? null : ref.get();, +        if (bb == null) {, +            bb = new byte[1024];, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +        return bb;, +    }, +, +    public static void pushBytes(byte[] bb) {, +        SoftReference<byte[]> ref = bytes.get();, +        byte[] bb1 = ref == null ? null : ref.get();, +        if (bb1 != null && bb1.length < bb.length) {, +            bytes.set(new SoftReference<byte[]>(bb));, +        }, +    }, +]