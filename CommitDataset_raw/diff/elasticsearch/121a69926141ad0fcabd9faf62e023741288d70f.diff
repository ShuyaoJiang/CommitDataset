[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java, +import org.elasticsearch.snapshots.SnapshotShardsService;, +import java.util.Map;, +    private final SnapshotShardsService snapshotShardsService;, +    public TransportNodesSnapshotsStatus(Settings settings, ClusterName clusterName, ThreadPool threadPool, ClusterService clusterService, TransportService transportService, SnapshotShardsService snapshotShardsService, ActionFilters actionFilters) {, +        this.snapshotShardsService = snapshotShardsService;, +                Map<ShardId, IndexShardSnapshotStatus> shardsStatus = snapshotShardsService.currentSnapshotShards(snapshotId);, +                for (Map.Entry<ShardId, IndexShardSnapshotStatus> shardEntry : shardsStatus.entrySet()) {, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java, +import org.elasticsearch.snapshots.SnapshotShardsService;, +import java.util.Map;, +    private final SnapshotShardsService snapshotShardsService;, +    public TransportNodesSnapshotsStatus(Settings settings, ClusterName clusterName, ThreadPool threadPool, ClusterService clusterService, TransportService transportService, SnapshotShardsService snapshotShardsService, ActionFilters actionFilters) {, +        this.snapshotShardsService = snapshotShardsService;, +                Map<ShardId, IndexShardSnapshotStatus> shardsStatus = snapshotShardsService.currentSnapshotShards(snapshotId);, +                for (Map.Entry<ShardId, IndexShardSnapshotStatus> shardEntry : shardsStatus.entrySet()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java, +import java.util.Collection;, +    /**, +     * Checks if all shards in the list have completed, +     *, +     * @param shards list of shard statuses, +     * @return true if all shards have completed (either successfully or failed), false otherwise, +     */, +    public static boolean completed(Collection<ShardSnapshotStatus> shards) {, +        for (ShardSnapshotStatus status : shards) {, +            if (status.state().completed() == false) {, +                return false;, +            }, +        }, +        return true;, +    }, +, +, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java, +import org.elasticsearch.snapshots.SnapshotShardsService;, +import java.util.Map;, +    private final SnapshotShardsService snapshotShardsService;, +    public TransportNodesSnapshotsStatus(Settings settings, ClusterName clusterName, ThreadPool threadPool, ClusterService clusterService, TransportService transportService, SnapshotShardsService snapshotShardsService, ActionFilters actionFilters) {, +        this.snapshotShardsService = snapshotShardsService;, +                Map<ShardId, IndexShardSnapshotStatus> shardsStatus = snapshotShardsService.currentSnapshotShards(snapshotId);, +                for (Map.Entry<ShardId, IndexShardSnapshotStatus> shardEntry : shardsStatus.entrySet()) {]