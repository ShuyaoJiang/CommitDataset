[+++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder!= null ){, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder!= null ){, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder != null) {, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder!= null ){, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder != null) {, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)));, +        queryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(queryBuilder.innerHit().isIgnoreUnmapped());, +        assertTrue(queryBuilder.innerHit().isIgnoreUnmapped());, +        failingQueryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder!= null ){, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder != null) {, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)));, +        queryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(queryBuilder.innerHit().isIgnoreUnmapped());, +        assertTrue(queryBuilder.innerHit().isIgnoreUnmapped());, +        failingQueryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java, +                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)));, +        queryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(queryBuilder.innerHit().isIgnoreUnmapped());, +        assertTrue(queryBuilder.innerHit().isIgnoreUnmapped());, +        failingQueryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder!= null ){, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder != null) {, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)));, +        queryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(queryBuilder.innerHit().isIgnoreUnmapped());, +        assertTrue(queryBuilder.innerHit().isIgnoreUnmapped());, +        failingQueryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java, +                    .addSort(new FieldSortBuilder(STRING_FIELD_NAME_2).order(SortOrder.ASC)));, +        queryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(queryBuilder.innerHit().isIgnoreUnmapped());, +        assertTrue(queryBuilder.innerHit().isIgnoreUnmapped());, +        failingQueryBuilder.innerHit(new InnerHitBuilder());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +        assertFalse(failingQueryBuilder.innerHit().isIgnoreUnmapped());, +++ b/server/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder != null) {, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder!= null ){, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java, +        innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        if (innerHitBuilder != null) {, +            innerHitBuilder.setIgnoreUnmapped(ignoreUnmapped);, +        }]