[+++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String SETTING_VERSION_CREATED = "index.version.created";, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String SETTING_VERSION_CREATED = "index.version.created";, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.Version;, +, +                    indexSettingsBuilder.put(SETTING_VERSION_CREATED, Version.CURRENT);, +, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String SETTING_VERSION_CREATED = "index.version.created";, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.Version;, +, +                    indexSettingsBuilder.put(SETTING_VERSION_CREATED, Version.CURRENT);, +, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +import org.elasticsearch.Version;, +    public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {, +        String sValue = get(setting);, +        if (sValue == null) {, +            return defaultVersion;, +        }, +        try {, +            return Version.fromId(Integer.parseInt(sValue));, +        } catch (Exception e) {, +            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e);, +        }, +    }, +, +    @Override, +        public Builder put(String setting, Version version) {, +            put(setting, version.id);, +            return this;, +        }, +, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String SETTING_VERSION_CREATED = "index.version.created";, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.Version;, +, +                    indexSettingsBuilder.put(SETTING_VERSION_CREATED, Version.CURRENT);, +, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +import org.elasticsearch.Version;, +    public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {, +        String sValue = get(setting);, +        if (sValue == null) {, +            return defaultVersion;, +        }, +        try {, +            return Version.fromId(Integer.parseInt(sValue));, +        } catch (Exception e) {, +            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e);, +        }, +    }, +, +    @Override, +        public Builder put(String setting, Version version) {, +            put(setting, version.id);, +            return this;, +        }, +, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +import org.elasticsearch.Version;, +     * Retruns a parsed version., +     */, +    Version getAsVersion(String setting, Version defaultVersion) throws SettingsException;, +, +    /**, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final String SETTING_VERSION_CREATED = "index.version.created";, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.Version;, +, +                    indexSettingsBuilder.put(SETTING_VERSION_CREATED, Version.CURRENT);, +, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +import org.elasticsearch.Version;, +    public Version getAsVersion(String setting, Version defaultVersion) throws SettingsException {, +        String sValue = get(setting);, +        if (sValue == null) {, +            return defaultVersion;, +        }, +        try {, +            return Version.fromId(Integer.parseInt(sValue));, +        } catch (Exception e) {, +            throw new SettingsException("Failed to parse version setting [" + setting + "] with value [" + sValue + "]", e);, +        }, +    }, +, +    @Override, +        public Builder put(String setting, Version version) {, +            put(setting, version.id);, +            return this;, +        }, +, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +import org.elasticsearch.Version;, +     * Retruns a parsed version.]