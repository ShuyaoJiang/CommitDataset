[+++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import java.util.concurrent.atomic.AtomicInteger, +import static com.carrotsearch.ant.tasks.junit4.FormattingUtils.formatDurationInSeconds, +, +, +    int totalSuites;, +    AtomicInteger suitesCompleted = new AtomicInteger(), +    AtomicInteger testsCompleted = new AtomicInteger(), +    AtomicInteger testsFailed = new AtomicInteger(), +    AtomicInteger testsIgnored = new AtomicInteger(), +        totalSuites = e.getSuiteCount();, +        progressLogger.progress('Starting JUnit4 with ' + e.getSlaveCount() + ' jvms'), +        final int suitesCompleted = suitesCompleted.incrementAndGet();, +        final int testsCompleted = testsCompleted.addAndGet(e.getDescription().testCount()), +        final int testsFailed = testsFailed.addAndGet(e.getErrorCount() + e.getFailureCount()), +        final int testsIgnored = testsIgnored.addAndGet(e.getIgnoredCount()), +        Description description = e.getDescription(), +        String suiteName = description.getDisplayName();, +        suiteName = suiteName.substring(suiteName.lastIndexOf('.') + 1);, +        progressLogger.progress('Suites [' + suitesCompleted + '/' + totalSuites + '], Tests [' + testsCompleted + '|' + testsFailed + '|' + testsIgnored + '], ' + suiteName + ' on J' + e.getSlave().id + ' in ' + formatDurationInSeconds(e.getExecutionTime())), +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import java.util.concurrent.atomic.AtomicInteger, +import static com.carrotsearch.ant.tasks.junit4.FormattingUtils.formatDurationInSeconds, +, +, +    int totalSuites;, +    AtomicInteger suitesCompleted = new AtomicInteger(), +    AtomicInteger testsCompleted = new AtomicInteger(), +    AtomicInteger testsFailed = new AtomicInteger(), +    AtomicInteger testsIgnored = new AtomicInteger(), +        totalSuites = e.getSuiteCount();, +        progressLogger.progress('Starting JUnit4 with ' + e.getSlaveCount() + ' jvms'), +        final int suitesCompleted = suitesCompleted.incrementAndGet();, +        final int testsCompleted = testsCompleted.addAndGet(e.getDescription().testCount()), +        final int testsFailed = testsFailed.addAndGet(e.getErrorCount() + e.getFailureCount()), +        final int testsIgnored = testsIgnored.addAndGet(e.getIgnoredCount()), +        Description description = e.getDescription(), +        String suiteName = description.getDisplayName();, +        suiteName = suiteName.substring(suiteName.lastIndexOf('.') + 1);, +        progressLogger.progress('Suites [' + suitesCompleted + '/' + totalSuites + '], Tests [' + testsCompleted + '|' + testsFailed + '|' + testsIgnored + '], ' + suiteName + ' on J' + e.getSlave().id + ' in ' + formatDurationInSeconds(e.getExecutionTime())), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import java.util.concurrent.atomic.AtomicInteger, +import static com.carrotsearch.ant.tasks.junit4.FormattingUtils.formatDurationInSeconds, +, +, +    int totalSuites;, +    AtomicInteger suitesCompleted = new AtomicInteger(), +    AtomicInteger testsCompleted = new AtomicInteger(), +    AtomicInteger testsFailed = new AtomicInteger(), +    AtomicInteger testsIgnored = new AtomicInteger(), +        totalSuites = e.getSuiteCount();, +        progressLogger.progress('Starting JUnit4 with ' + e.getSlaveCount() + ' jvms'), +        final int suitesCompleted = suitesCompleted.incrementAndGet();, +        final int testsCompleted = testsCompleted.addAndGet(e.getDescription().testCount()), +        final int testsFailed = testsFailed.addAndGet(e.getErrorCount() + e.getFailureCount()), +        final int testsIgnored = testsIgnored.addAndGet(e.getIgnoredCount()), +        Description description = e.getDescription(), +        String suiteName = description.getDisplayName();, +        suiteName = suiteName.substring(suiteName.lastIndexOf('.') + 1);, +        progressLogger.progress('Suites [' + suitesCompleted + '/' + totalSuites + '], Tests [' + testsCompleted + '|' + testsFailed + '|' + testsIgnored + '], ' + suiteName + ' on J' + e.getSlave().id + ' in ' + formatDurationInSeconds(e.getExecutionTime())), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import nebula.plugin.extraconfigurations.ProvidedBasePlugin, +        // TODO: add target compatibility (java version) to elasticsearch properties and set for the project, +            project.jar.configure {, +                baseName project.pluginProperties.extension.name, +            project.bundlePlugin.configure {, +                baseName project.pluginProperties.extension.name, +            }, +            project.integTest.configure {, +                dependsOn project.bundlePlugin, +                cluster {, +                    plugin project.pluginProperties.extension.name, project.bundlePlugin.outputs.files, +                }, +            }, +        }, +        RestIntegTestTask.configure(project), +++ b/build.gradle, +task run(dependsOn: ':distribution:run'), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestProgressLogger.groovy, +import java.util.concurrent.atomic.AtomicInteger, +import static com.carrotsearch.ant.tasks.junit4.FormattingUtils.formatDurationInSeconds, +, +, +    int totalSuites;, +    AtomicInteger suitesCompleted = new AtomicInteger(), +    AtomicInteger testsCompleted = new AtomicInteger(), +    AtomicInteger testsFailed = new AtomicInteger(), +    AtomicInteger testsIgnored = new AtomicInteger(), +        totalSuites = e.getSuiteCount();, +        progressLogger.progress('Starting JUnit4 with ' + e.getSlaveCount() + ' jvms')]