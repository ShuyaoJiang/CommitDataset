[+++ b/docs/reference/query-dsl/queries/mlt-query.asciidoc, +|`like_text` |The text to find documents like it, *required* if `ids` or `docs` are, +++ b/docs/reference/query-dsl/queries/mlt-query.asciidoc, +|`like_text` |The text to find documents like it, *required* if `ids` or `docs` are, +++ b/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java, +        if (mltQuery.getLikeText() == null && items.isEmpty()) {, +            throw new QueryParsingException(parseContext.index(), "more_like_this requires at least 'like_text' or 'ids/docs' to be specified");, +            // add the possible mlt query with like_text, +            if (mltQuery.getLikeText() != null) {, +                boolQuery.add(mltQuery, BooleanClause.Occur.SHOULD);, +            }, +++ b/docs/reference/query-dsl/queries/mlt-query.asciidoc, +|`like_text` |The text to find documents like it, *required* if `ids` or `docs` are, +++ b/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java, +        if (mltQuery.getLikeText() == null && items.isEmpty()) {, +            throw new QueryParsingException(parseContext.index(), "more_like_this requires at least 'like_text' or 'ids/docs' to be specified");, +            // add the possible mlt query with like_text, +            if (mltQuery.getLikeText() != null) {, +                boolQuery.add(mltQuery, BooleanClause.Occur.SHOULD);, +            }, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +        assertThat(booleanQuery.getClauses().length, is(likeTexts.size() + 1));, +        // check each clause is for each item, +        BooleanClause[] boolClauses = booleanQuery.getClauses();, +            assertThat(boolClauses[i].getOccur(), is(BooleanClause.Occur.SHOULD));, +            assertThat(boolClauses[i].getQuery(), instanceOf(MoreLikeThisQuery.class));, +            MoreLikeThisQuery mltQuery = (MoreLikeThisQuery) boolClauses[i].getQuery();, +, +        // check last clause is for 'like_text', +        BooleanClause boolClause = boolClauses[boolClauses.length - 1];, +        assertThat(boolClause.getOccur(), is(BooleanClause.Occur.SHOULD));, +        assertThat(boolClause.getQuery(), instanceOf(MoreLikeThisQuery.class));, +        MoreLikeThisQuery mltQuery = (MoreLikeThisQuery) boolClause.getQuery();, +        assertArrayEquals("Not the same more like this 'fields'", new String[] {"name.first", "name.last"}, mltQuery.getMoreLikeFields());, +        assertThat(mltQuery.getLikeText(), equalTo("Apache Lucene"));, +++ b/docs/reference/query-dsl/queries/mlt-query.asciidoc, +|`like_text` |The text to find documents like it, *required* if `ids` or `docs` are, +++ b/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java, +        if (mltQuery.getLikeText() == null && items.isEmpty()) {, +            throw new QueryParsingException(parseContext.index(), "more_like_this requires at least 'like_text' or 'ids/docs' to be specified");, +            // add the possible mlt query with like_text, +            if (mltQuery.getLikeText() != null) {, +                boolQuery.add(mltQuery, BooleanClause.Occur.SHOULD);, +            }, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +        assertThat(booleanQuery.getClauses().length, is(likeTexts.size() + 1));, +        // check each clause is for each item, +        BooleanClause[] boolClauses = booleanQuery.getClauses();, +            assertThat(boolClauses[i].getOccur(), is(BooleanClause.Occur.SHOULD));, +            assertThat(boolClauses[i].getQuery(), instanceOf(MoreLikeThisQuery.class));, +            MoreLikeThisQuery mltQuery = (MoreLikeThisQuery) boolClauses[i].getQuery();, +, +        // check last clause is for 'like_text', +        BooleanClause boolClause = boolClauses[boolClauses.length - 1];, +        assertThat(boolClause.getOccur(), is(BooleanClause.Occur.SHOULD));, +        assertThat(boolClause.getQuery(), instanceOf(MoreLikeThisQuery.class));, +        MoreLikeThisQuery mltQuery = (MoreLikeThisQuery) boolClause.getQuery();, +        assertArrayEquals("Not the same more like this 'fields'", new String[] {"name.first", "name.last"}, mltQuery.getMoreLikeFields());, +        assertThat(mltQuery.getLikeText(), equalTo("Apache Lucene"));, +++ b/src/test/java/org/elasticsearch/index/query/mlt-ids.json, +        "like_text": "Apache Lucene",]