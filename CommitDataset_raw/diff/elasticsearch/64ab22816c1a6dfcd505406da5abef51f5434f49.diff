[+++ b/docs/reference/modules/scripting.asciidoc, +script. The `lang` options are `groovy`, `js`, `mvel`, `python`,, +`expression` and `native`., +descriptive name), and place the jar / classes files there. They will be, +=== Lucene Expressions Scripts, +, +[WARNING], +========================, +This feature is *experimental* and subject to change in future versions., +========================, +, +Lucene's expressions module provides a mechanism to compile a, +`javascript` expression to bytecode.  This allows very fast execution,, +as if you had written a `native` script.  Expression scripts can be, +used in `script_score`, `script_fields`, sort scripts and numeric aggregation scripts., +, +See the link:http://lucene.apache.org/core/4_9_0/expressions/index.html?org/apache/lucene/expressions/js/package-summary.html[expressions module documentation], +for details on what operators and functions are available., +, +Variables in `expression` scripts are available to access:, +, +* Single valued document fields, e.g. `doc['myfield'].value`, +* Parameters passed into the script, e.g. `mymodifier`, +* The current document's score, `_score` (only available when used in a `script_score`), +, +There are a few limitations relative to other script languages:, +, +* Only numeric fields may be accessed, +* Stored fields are not available, +* If a field is sparse (only some documents contain a value), documents missing the field will have a value of `0`, +, +[float], +In all scripts that can be used in facets, the current, +document's score is accessible in `doc.score`.  When using a `script_score`,, +the current score is available in `_score`., +, +++ b/docs/reference/modules/scripting.asciidoc, +script. The `lang` options are `groovy`, `js`, `mvel`, `python`,, +`expression` and `native`., +descriptive name), and place the jar / classes files there. They will be, +=== Lucene Expressions Scripts, +, +[WARNING], +========================, +This feature is *experimental* and subject to change in future versions., +========================, +, +Lucene's expressions module provides a mechanism to compile a, +`javascript` expression to bytecode.  This allows very fast execution,, +as if you had written a `native` script.  Expression scripts can be, +used in `script_score`, `script_fields`, sort scripts and numeric aggregation scripts., +, +See the link:http://lucene.apache.org/core/4_9_0/expressions/index.html?org/apache/lucene/expressions/js/package-summary.html[expressions module documentation], +for details on what operators and functions are available., +, +Variables in `expression` scripts are available to access:, +, +* Single valued document fields, e.g. `doc['myfield'].value`, +* Parameters passed into the script, e.g. `mymodifier`, +* The current document's score, `_score` (only available when used in a `script_score`), +, +There are a few limitations relative to other script languages:, +, +* Only numeric fields may be accessed, +* Stored fields are not available, +* If a field is sparse (only some documents contain a value), documents missing the field will have a value of `0`, +, +[float], +In all scripts that can be used in facets, the current, +document's score is accessible in `doc.score`.  When using a `script_score`,, +the current score is available in `_score`., +, +++ b/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <version>${lucene.version}</version>, +            <scope>compile</scope>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/docs/reference/modules/scripting.asciidoc, +script. The `lang` options are `groovy`, `js`, `mvel`, `python`,, +`expression` and `native`., +descriptive name), and place the jar / classes files there. They will be, +=== Lucene Expressions Scripts, +, +[WARNING], +========================, +This feature is *experimental* and subject to change in future versions., +========================, +, +Lucene's expressions module provides a mechanism to compile a, +`javascript` expression to bytecode.  This allows very fast execution,, +as if you had written a `native` script.  Expression scripts can be, +used in `script_score`, `script_fields`, sort scripts and numeric aggregation scripts., +, +See the link:http://lucene.apache.org/core/4_9_0/expressions/index.html?org/apache/lucene/expressions/js/package-summary.html[expressions module documentation], +for details on what operators and functions are available., +, +Variables in `expression` scripts are available to access:]