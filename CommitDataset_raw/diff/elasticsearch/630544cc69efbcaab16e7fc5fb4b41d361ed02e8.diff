[+++ /dev/null, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                PidFile.create(Paths.get(pidFile), true);, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                PidFile.create(Paths.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = Paths.get(path.toString().concat(suffix));, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                PidFile.create(Paths.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = Paths.get(path.toString().concat(suffix));, +++ /dev/null, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                PidFile.create(Paths.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = Paths.get(path.toString().concat(suffix));, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/env/Environment.java, +            homeFile = Paths.get(cleanPath(settings.get("path.home")));, +            homeFile = Paths.get(System.getProperty("user.dir"));, +            configFile = Paths.get(cleanPath(settings.get("path.conf")));, +            pluginsFile = Paths.get(cleanPath(settings.get("path.plugins")));, +            workFile = Paths.get(cleanPath(settings.get("path.work")));, +                dataFiles[i] = Paths.get(dataPaths[i]);, +            logsFile = Paths.get(cleanPath(settings.get("path.logs")));, +        Path f1 = Paths.get(path);, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                PidFile.create(Paths.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = Paths.get(path.toString().concat(suffix));, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/env/Environment.java, +            homeFile = Paths.get(cleanPath(settings.get("path.home")));, +            homeFile = Paths.get(System.getProperty("user.dir"));, +            configFile = Paths.get(cleanPath(settings.get("path.conf")));, +            pluginsFile = Paths.get(cleanPath(settings.get("path.plugins")));, +            workFile = Paths.get(cleanPath(settings.get("path.work")));, +                dataFiles[i] = Paths.get(dataPaths[i]);, +            logsFile = Paths.get(cleanPath(settings.get("path.logs")));, +        Path f1 = Paths.get(path);, +++ b/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +                Path dir = environment.dataWithClusterFiles()[dirIndex].resolve(Paths.get(NODES_FOLDER, Integer.toString(possibleLockId)));, +            shardLocations[i] = nodePaths[i].path.resolve(Paths.get(INDICES_FOLDER,, +                return Paths.get(customDataDir, Integer.toString(this.localNodeId));, +                return Paths.get(customDataDir);, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                PidFile.create(Paths.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = Paths.get(path.toString().concat(suffix));, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/env/Environment.java, +            homeFile = Paths.get(cleanPath(settings.get("path.home")));, +            homeFile = Paths.get(System.getProperty("user.dir"));, +            configFile = Paths.get(cleanPath(settings.get("path.conf")));, +            pluginsFile = Paths.get(cleanPath(settings.get("path.plugins")));, +            workFile = Paths.get(cleanPath(settings.get("path.work")));, +                dataFiles[i] = Paths.get(dataPaths[i]);, +            logsFile = Paths.get(cleanPath(settings.get("path.logs")));, +        Path f1 = Paths.get(path);, +++ b/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +                Path dir = environment.dataWithClusterFiles()[dirIndex].resolve(Paths.get(NODES_FOLDER, Integer.toString(possibleLockId)));, +            shardLocations[i] = nodePaths[i].path.resolve(Paths.get(INDICES_FOLDER,, +                return Paths.get(customDataDir, Integer.toString(this.localNodeId));, +                return Paths.get(customDataDir);, +++ b/src/main/java/org/elasticsearch/http/HttpServer.java, +        Path file = FileSystemUtils.append(siteFile, Paths.get(sitePath), 0);, +++ /dev/null, +++ b/dev-tools/forbidden/all-signatures.txt, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                PidFile.create(Paths.get(pidFile), true);, +++ b/src/main/java/org/elasticsearch/common/io/FileSystemUtils.java, +                        path = Paths.get(path.toString().concat(suffix));, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/env/Environment.java, +            homeFile = Paths.get(cleanPath(settings.get("path.home")));, +            homeFile = Paths.get(System.getProperty("user.dir"));, +            configFile = Paths.get(cleanPath(settings.get("path.conf")));, +            pluginsFile = Paths.get(cleanPath(settings.get("path.plugins")));, +            workFile = Paths.get(cleanPath(settings.get("path.work")));, +                dataFiles[i] = Paths.get(dataPaths[i]);, +            logsFile = Paths.get(cleanPath(settings.get("path.logs")));, +        Path f1 = Paths.get(path);, +++ b/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +                Path dir = environment.dataWithClusterFiles()[dirIndex].resolve(Paths.get(NODES_FOLDER, Integer.toString(possibleLockId)));, +            shardLocations[i] = nodePaths[i].path.resolve(Paths.get(INDICES_FOLDER,, +                return Paths.get(customDataDir, Integer.toString(this.localNodeId));]