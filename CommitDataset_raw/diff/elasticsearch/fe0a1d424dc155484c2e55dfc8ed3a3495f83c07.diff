[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +    public void add(@Nullable String defaultIndex, @Nullable String defaultType, @Nullable String[] defaultFields, byte[] data, int from, int length) throws Exception {, +                            String[] aFields;, +                            if (fields != null) {, +                                aFields = fields.toArray(new String[fields.size()]);, +                            } else {, +                                aFields = defaultFields;, +                            }, +                            add(new Item(index, type, id).routing(routing).fields(aFields));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +    public void add(@Nullable String defaultIndex, @Nullable String defaultType, @Nullable String[] defaultFields, byte[] data, int from, int length) throws Exception {, +                            String[] aFields;, +                            if (fields != null) {, +                                aFields = fields.toArray(new String[fields.size()]);, +                            } else {, +                                aFields = defaultFields;, +                            }, +                            add(new Item(index, type, id).routing(routing).fields(aFields));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/get/RestMultiGetAction.java, +import org.elasticsearch.common.Strings;, +        String[] sFields = null;, +        String sField = request.param("fields");, +        if (sField != null) {, +            sFields = Strings.splitStringByCommaToArray(sField);, +        }, +, +            multiGetRequest.add(request.param("index"), request.param("type"), sFields, request.contentByteArray(), request.contentByteArrayOffset(), request.contentLength());]