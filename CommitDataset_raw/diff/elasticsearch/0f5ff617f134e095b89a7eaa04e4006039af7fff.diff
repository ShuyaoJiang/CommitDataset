[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/ExceptionsHelper.java, +                    sb.append(t.getClass().getSimpleName()).append("{");, +                    sb.append("}");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/ExceptionsHelper.java, +                    sb.append(t.getClass().getSimpleName()).append("{");, +                    sb.append("}");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +, +        // we want the transport service to throw connect exceptions, so we can retry, +        transportService.throwConnectException(true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/ExceptionsHelper.java, +                    sb.append(t.getClass().getSimpleName()).append("{");, +                    sb.append("}");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +, +        // we want the transport service to throw connect exceptions, so we can retry, +        transportService.throwConnectException(true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/RemoteTransportException.java, +    protected Throwable fillStack() {, +        return super.fillInStackTrace();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/ExceptionsHelper.java, +                    sb.append(t.getClass().getSimpleName()).append("{");, +                    sb.append("}");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +, +        // we want the transport service to throw connect exceptions, so we can retry, +        transportService.throwConnectException(true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/RemoteTransportException.java, +    protected Throwable fillStack() {, +        return super.fillInStackTrace();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/SendRequestTransportException.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.transport;, +, +import org.elasticsearch.cluster.node.Node;, +, +/**, + * @author kimchy (shay.banon), + */, +public class SendRequestTransportException extends RemoteTransportException {, +, +    public SendRequestTransportException(Node node, String action, Throwable cause) {, +        super(node.name(), node.address(), action, cause);, +    }, +, +    @Override public Throwable fillInStackTrace() {, +        return fillStack();, +    }, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/ExceptionsHelper.java, +                    sb.append(t.getClass().getSimpleName()).append("{");, +                    sb.append("}");, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +, +        // we want the transport service to throw connect exceptions, so we can retry, +        transportService.throwConnectException(true);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/RemoteTransportException.java, +    protected Throwable fillStack() {, +        return super.fillInStackTrace();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/transport/SendRequestTransportException.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations]