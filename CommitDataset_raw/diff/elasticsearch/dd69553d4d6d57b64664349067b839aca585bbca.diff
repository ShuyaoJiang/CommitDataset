[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +            HttpEntity byteEntity = new NByteArrayEntity(source.bytes,, +        HttpEntity byteEntity = new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(XContentType.JSON));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +            HttpEntity byteEntity = new NByteArrayEntity(source.bytes,, +        HttpEntity byteEntity = new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(XContentType.JSON));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(content.toByteArray(), 0, content.size(), requestContentType));, +        request.setEntity(new NByteArrayEntity(source.bytes, source.offset, source.length, contentType));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        return new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +            HttpEntity byteEntity = new NByteArrayEntity(source.bytes,, +        HttpEntity byteEntity = new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(XContentType.JSON));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(content.toByteArray(), 0, content.size(), requestContentType));, +        request.setEntity(new NByteArrayEntity(source.bytes, source.offset, source.length, contentType));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        return new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/WatcherRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(source.toBytesRef().bytes, 0, source.length(), contentType));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +            HttpEntity byteEntity = new NByteArrayEntity(source.bytes,, +        HttpEntity byteEntity = new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(XContentType.JSON));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(content.toByteArray(), 0, content.size(), requestContentType));, +        request.setEntity(new NByteArrayEntity(source.bytes, source.offset, source.length, contentType));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        return new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/WatcherRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(source.toBytesRef().bytes, 0, source.length(), contentType));, +++ b/client/rest-high-level/src/main/resources/forbidden/rest-high-level-signatures.txt, +, +@defaultMessage Use Nonblocking org.apache.http.nio.entity.NByteArrayEntity, +org.apache.http.entity.ByteArrayEntity, +org.apache.http.entity.StringEntity, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +            HttpEntity byteEntity = new NByteArrayEntity(source.bytes,, +        HttpEntity byteEntity = new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(XContentType.JSON));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(content.toByteArray(), 0, content.size(), requestContentType));, +        request.setEntity(new NByteArrayEntity(source.bytes, source.offset, source.length, contentType));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        return new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/WatcherRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(source.toBytesRef().bytes, 0, source.length(), contentType));, +++ b/client/rest-high-level/src/main/resources/forbidden/rest-high-level-signatures.txt, +, +@defaultMessage Use Nonblocking org.apache.http.nio.entity.NByteArrayEntity, +org.apache.http.entity.ByteArrayEntity, +org.apache.http.entity.StringEntity, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CustomRestHighLevelClientTests.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        when(mockResponse.getEntity()).thenReturn(new NByteArrayEntity(bytesRef.bytes, ContentType.APPLICATION_JSON));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +            HttpEntity byteEntity = new NByteArrayEntity(source.bytes,, +        HttpEntity byteEntity = new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(XContentType.JSON));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(content.toByteArray(), 0, content.size(), requestContentType));, +        request.setEntity(new NByteArrayEntity(source.bytes, source.offset, source.length, contentType));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        request.setEntity(new NByteArrayEntity(source, createContentType(xContent.type())));, +        return new NByteArrayEntity(source.bytes, source.offset, source.length, createContentType(xContentType));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/WatcherRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        request.setEntity(new NByteArrayEntity(source.toBytesRef().bytes, 0, source.length(), contentType));, +++ b/client/rest-high-level/src/main/resources/forbidden/rest-high-level-signatures.txt, +, +@defaultMessage Use Nonblocking org.apache.http.nio.entity.NByteArrayEntity, +org.apache.http.entity.ByteArrayEntity, +org.apache.http.entity.StringEntity, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CustomRestHighLevelClientTests.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        when(mockResponse.getEntity()).thenReturn(new NByteArrayEntity(bytesRef.bytes, ContentType.APPLICATION_JSON));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +        assertTrue(entity instanceof NByteArrayEntity);, +        assertTrue(entity instanceof NByteArrayEntity);, +        assertTrue(entity instanceof NByteArrayEntity);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.apache.http.nio.entity.NByteArrayEntity;, +            HttpEntity byteEntity = new NByteArrayEntity(source.bytes,]