[+++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING = new Setting<>("action.auto_create_index", "true", AutoCreate::new, false, Setting.Scope.CLUSTER);, +        final AutoCreate autoCreate = AUTO_CREATE_INDEX_SETTING.get(settings);, +        if (autoCreate.autoCreateIndex) {, +            matches = autoCreate.indices;, +            if (matches != null) {, +            } else {, +                matches2 = null;, +            }, +        } else {, +            needToCheck = false;, +            globallyDisabled = true;, +            matches = null;, +            matches2 = null;, +, +    public static class AutoCreate {, +        private final boolean autoCreateIndex;, +        private final String[] indices;, +, +        public AutoCreate(String value) {, +            boolean autoCreateIndex;, +            String[] indices = null;, +            try {, +                autoCreateIndex = Booleans.parseBooleanExact(value);, +            } catch (IllegalArgumentException ex) {, +                try {, +                    indices = Strings.commaDelimitedListToStringArray(value);, +                    for (String string : indices) {, +                        if (string == null || string.length() == 0) {, +                            throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must be either [true, false, or a comma seperated list of index patterns]");, +                        }, +                    }, +                    autoCreateIndex = true;, +                } catch (IllegalArgumentException ex1) {, +                    ex1.addSuppressed(ex);, +                    throw ex1;, +                }, +            }, +            this.indices = indices;, +            this.autoCreateIndex = autoCreateIndex;, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING = new Setting<>("action.auto_create_index", "true", AutoCreate::new, false, Setting.Scope.CLUSTER);, +        final AutoCreate autoCreate = AUTO_CREATE_INDEX_SETTING.get(settings);, +        if (autoCreate.autoCreateIndex) {, +            matches = autoCreate.indices;, +            if (matches != null) {, +            } else {, +                matches2 = null;, +            }, +        } else {, +            needToCheck = false;, +            globallyDisabled = true;, +            matches = null;, +            matches2 = null;, +, +    public static class AutoCreate {, +        private final boolean autoCreateIndex;, +        private final String[] indices;, +, +        public AutoCreate(String value) {, +            boolean autoCreateIndex;, +            String[] indices = null;, +            try {, +                autoCreateIndex = Booleans.parseBooleanExact(value);, +            } catch (IllegalArgumentException ex) {, +                try {, +                    indices = Strings.commaDelimitedListToStringArray(value);, +                    for (String string : indices) {, +                        if (string == null || string.length() == 0) {, +                            throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must be either [true, false, or a comma seperated list of index patterns]");, +                        }, +                    }, +                    autoCreateIndex = true;, +                } catch (IllegalArgumentException ex1) {, +                    ex1.addSuppressed(ex);, +                    throw ex1;, +                }, +            }, +            this.indices = indices;, +            this.autoCreateIndex = autoCreateIndex;, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Boolean> FORCE_LOCAL_SETTING = Setting.boolSetting("action.master.force_local", false, false, Setting.Scope.CLUSTER);, +    private final boolean forceLocal;, +        this.forceLocal = FORCE_LOCAL_SETTING.get(settings);, +        return forceLocal || request.local();, +++ b/core/src/main/java/org/elasticsearch/action/support/AutoCreateIndex.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<AutoCreate> AUTO_CREATE_INDEX_SETTING = new Setting<>("action.auto_create_index", "true", AutoCreate::new, false, Setting.Scope.CLUSTER);, +        final AutoCreate autoCreate = AUTO_CREATE_INDEX_SETTING.get(settings);, +        if (autoCreate.autoCreateIndex) {, +            matches = autoCreate.indices;, +            if (matches != null) {, +            } else {]