[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-test-signatures.txt, +org.apache.lucene.util.LuceneTestCase$Nightly @ We don't run nightly tests at this point!, +com.carrotsearch.randomizedtesting.annotations.Nightly @ We don't run nightly tests at this point!, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-test-signatures.txt, +org.apache.lucene.util.LuceneTestCase$Nightly @ We don't run nightly tests at this point!, +com.carrotsearch.randomizedtesting.annotations.Nightly @ We don't run nightly tests at this point!, +++ b/core/src/test/java/org/elasticsearch/search/basic/SearchWhileRelocatingIT.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/es-test-signatures.txt, +org.apache.lucene.util.LuceneTestCase$Nightly @ We don't run nightly tests at this point!, +com.carrotsearch.randomizedtesting.annotations.Nightly @ We don't run nightly tests at this point!, +++ b/core/src/test/java/org/elasticsearch/search/basic/SearchWhileRelocatingIT.java, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.suggest;, +, +import org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilder;, +import org.elasticsearch.action.index.IndexRequestBuilder;, +import org.elasticsearch.action.search.ReduceSearchPhaseException;, +import org.elasticsearch.action.search.SearchPhaseExecutionException;, +import org.elasticsearch.action.search.SearchRequestBuilder;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorBuilder;, +import org.elasticsearch.search.suggest.phrase.Laplace;, +import org.elasticsearch.search.suggest.phrase.LinearInterpolation;, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder;, +import org.elasticsearch.search.suggest.phrase.StupidBackoff;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder;, +import org.elasticsearch.search.suggest.term.TermSuggestionBuilder.SuggestMode;, +import org.elasticsearch.test.ESIntegTestCase;, +import org.elasticsearch.test.hamcrest.ElasticsearchAssertions;, +, +import java.io.IOException;, +import java.net.URISyntaxException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import java.util.Map.Entry;, +import java.util.concurrent.ExecutionException;, +, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_REPLICAS;, +import static org.elasticsearch.cluster.metadata.IndexMetaData.SETTING_NUMBER_OF_SHARDS;, +import static org.elasticsearch.index.query.QueryBuilders.matchQuery;, +import static org.elasticsearch.search.suggest.SuggestBuilders.phraseSuggestion;, +import static org.elasticsearch.search.suggest.SuggestBuilders.termSuggestion;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertNoFailures;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSuggestion;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSuggestionSize;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertThrows;, +import static org.hamcrest.Matchers.anyOf;, +import static org.hamcrest.Matchers.endsWith;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.instanceOf;, +import static org.hamcrest.Matchers.nullValue;, +, +/**, + * Integration tests for term and phrase suggestions.  Many of these tests many requests that vary only slightly from one another.  Where, + * possible these tests should declare for the first request, make the request, modify the configuration for the next request, make that, + * request, modify again, request again, etc.  This makes it very obvious what changes between requests., + */, +public class SuggestSearchIT extends ESIntegTestCase {, +, +    // see #3196, +    public void testSuggestAcrossMultipleIndices() throws IOException {, +        createIndex("test");, +        ensureGreen();, +, +        index("test", "type1", "1", "text", "abcd");, +        index("test", "type1", "2", "text", "aacd");, +        index("test", "type1", "3", "text", "abbd");, +        index("test", "type1", "4", "text", "abcc");, +        refresh();]