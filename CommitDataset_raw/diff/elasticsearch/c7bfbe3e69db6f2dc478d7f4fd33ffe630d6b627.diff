[+++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.cluster.health.ClusterHealthStatus;, +    Table buildTable(RestRequest request, Index[] indices, ClusterHealthResponse response, IndicesStatsResponse stats, MetaData indexMetaDatas) {, +        final String healthParam = request.param("health");, +        final ClusterHealthStatus status;, +        if (healthParam != null) {, +            status = ClusterHealthStatus.fromString(healthParam);, +        } else {, +            status = null;, +        }, +, +            ClusterIndexHealth indexHealth = response.getIndices().get(indexName);, +            if (status != null) {, +                if (state == IndexMetaData.State.CLOSE ||, +                        (indexHealth == null && !ClusterHealthStatus.RED.equals(status)) ||, +                        !indexHealth.getStatus().equals(status)) {, +                    continue;, +                }, +            }, +, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.cluster.health.ClusterHealthStatus;, +    Table buildTable(RestRequest request, Index[] indices, ClusterHealthResponse response, IndicesStatsResponse stats, MetaData indexMetaDatas) {, +        final String healthParam = request.param("health");, +        final ClusterHealthStatus status;, +        if (healthParam != null) {, +            status = ClusterHealthStatus.fromString(healthParam);, +        } else {, +            status = null;, +        }, +, +            ClusterIndexHealth indexHealth = response.getIndices().get(indexName);, +            if (status != null) {, +                if (state == IndexMetaData.State.CLOSE ||, +                        (indexHealth == null && !ClusterHealthStatus.RED.equals(status)) ||, +                        !indexHealth.getStatus().equals(status)) {, +                    continue;, +                }, +            }, +, +++ b/core/src/test/java/org/elasticsearch/rest/action/cat/RestIndicesActionTests.java, +import org.elasticsearch.test.rest.FakeRestRequest;, +        final Table table = action.buildTable(new FakeRestRequest(), indices, clusterHealth, randomIndicesStatsResponse(indices), metaData);, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.cluster.health.ClusterHealthStatus;, +    Table buildTable(RestRequest request, Index[] indices, ClusterHealthResponse response, IndicesStatsResponse stats, MetaData indexMetaDatas) {, +        final String healthParam = request.param("health");, +        final ClusterHealthStatus status;, +        if (healthParam != null) {, +            status = ClusterHealthStatus.fromString(healthParam);, +        } else {, +            status = null;, +        }, +, +            ClusterIndexHealth indexHealth = response.getIndices().get(indexName);, +            if (status != null) {, +                if (state == IndexMetaData.State.CLOSE ||, +                        (indexHealth == null && !ClusterHealthStatus.RED.equals(status)) ||, +                        !indexHealth.getStatus().equals(status)) {, +                    continue;, +                }, +            }, +, +++ b/core/src/test/java/org/elasticsearch/rest/action/cat/RestIndicesActionTests.java, +import org.elasticsearch.test.rest.FakeRestRequest;, +        final Table table = action.buildTable(new FakeRestRequest(), indices, clusterHealth, randomIndicesStatsResponse(indices), metaData);, +++ b/docs/reference/cat/indices.asciidoc, +% curl localhost:9200/_cat/indices?health=yellow, +++ b/core/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.cluster.health.ClusterHealthStatus;, +    Table buildTable(RestRequest request, Index[] indices, ClusterHealthResponse response, IndicesStatsResponse stats, MetaData indexMetaDatas) {, +        final String healthParam = request.param("health");, +        final ClusterHealthStatus status;, +        if (healthParam != null) {, +            status = ClusterHealthStatus.fromString(healthParam);, +        } else {, +            status = null;, +        }, +, +            ClusterIndexHealth indexHealth = response.getIndices().get(indexName);, +            if (status != null) {, +                if (state == IndexMetaData.State.CLOSE ||, +                        (indexHealth == null && !ClusterHealthStatus.RED.equals(status)) ||, +                        !indexHealth.getStatus().equals(status)) {, +                    continue;, +                }, +            }, +, +++ b/core/src/test/java/org/elasticsearch/rest/action/cat/RestIndicesActionTests.java, +import org.elasticsearch.test.rest.FakeRestRequest;, +        final Table table = action.buildTable(new FakeRestRequest(), indices, clusterHealth, randomIndicesStatsResponse(indices), metaData);, +++ b/docs/reference/cat/indices.asciidoc, +% curl localhost:9200/_cat/indices?health=yellow, +++ b/rest-api-spec/src/main/resources/rest-api-spec/api/cat.indices.json, +        "health": {, +            "type" : "string",]