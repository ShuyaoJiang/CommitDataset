[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    // for serialization, +    NodesHotThreadsRequest() {, +, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    // for serialization, +    NodesHotThreadsRequest() {, +, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +        super(settings, NodesHotThreadsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    // for serialization, +    NodesHotThreadsRequest() {, +, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +        super(settings, NodesHotThreadsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +        super(settings, NodesInfoAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesInfoRequest.class, NodeInfoRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    // for serialization, +    NodesHotThreadsRequest() {, +, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +        super(settings, NodesHotThreadsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +        super(settings, NodesInfoAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesInfoRequest.class, NodeInfoRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/TransportLivenessAction.java, +public final class TransportLivenessAction implements TransportRequestHandler<LivenessRequest> {, +        transportService.registerRequestHandler(NAME, LivenessRequest.class, ThreadPool.Names.SAME, this);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    // for serialization, +    NodesHotThreadsRequest() {, +, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +        super(settings, NodesHotThreadsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +        super(settings, NodesInfoAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesInfoRequest.class, NodeInfoRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/TransportLivenessAction.java, +public final class TransportLivenessAction implements TransportRequestHandler<LivenessRequest> {, +        transportService.registerRequestHandler(NAME, LivenessRequest.class, ThreadPool.Names.SAME, this);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java, +        super(settings, NodesShutdownAction.NAME, transportService, clusterService, threadPool, actionFilters, NodesShutdownRequest.class);, +        this.transportService.registerRequestHandler(SHUTDOWN_NODE_ACTION_NAME, NodeShutdownRequest.class, ThreadPool.Names.SAME, new NodeShutdownRequestHandler());, +    private class NodeShutdownRequestHandler implements TransportRequestHandler<NodeShutdownRequest> {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    // for serialization, +    NodesHotThreadsRequest() {, +, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +        super(settings, NodesHotThreadsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +        super(settings, NodesInfoAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesInfoRequest.class, NodeInfoRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/TransportLivenessAction.java, +public final class TransportLivenessAction implements TransportRequestHandler<LivenessRequest> {, +        transportService.registerRequestHandler(NAME, LivenessRequest.class, ThreadPool.Names.SAME, this);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java, +        super(settings, NodesShutdownAction.NAME, transportService, clusterService, threadPool, actionFilters, NodesShutdownRequest.class);, +        this.transportService.registerRequestHandler(SHUTDOWN_NODE_ACTION_NAME, NodeShutdownRequest.class, ThreadPool.Names.SAME, new NodeShutdownRequestHandler());, +    private class NodeShutdownRequestHandler implements TransportRequestHandler<NodeShutdownRequest> {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java, +        super(settings, NodesStatsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters,, +                NodesStatsRequest.class, NodeStatsRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, ClusterHealthRequest.class);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java]