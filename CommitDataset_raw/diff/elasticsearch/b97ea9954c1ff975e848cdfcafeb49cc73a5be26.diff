[+++ b/core/src/main/java/org/elasticsearch/ingest/IngestService.java, +public class IngestService implements Closeable {, +, +    @Override, +    public void close() throws IOException {, +        pipelineStore.close();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestService.java, +public class IngestService implements Closeable {, +, +    @Override, +    public void close() throws IOException {, +        pipelineStore.close();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/ingest/PipelineStore.java, +public class PipelineStore extends AbstractComponent implements Closeable, ClusterStateListener {, +    public void close() throws IOException {, +        // TODO: When org.elasticsearch.node.Node can close Closable instances we should try to remove this code,, +        // since any wired closable should be able to close itself, +        processorRegistry.close();, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestService.java, +public class IngestService implements Closeable {, +, +    @Override, +    public void close() throws IOException {, +        pipelineStore.close();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/ingest/PipelineStore.java, +public class PipelineStore extends AbstractComponent implements Closeable, ClusterStateListener {, +    public void close() throws IOException {, +        // TODO: When org.elasticsearch.node.Node can close Closable instances we should try to remove this code,, +        // since any wired closable should be able to close itself, +        processorRegistry.close();, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/ingest/ProcessorsRegistry.java, +import org.apache.lucene.util.IOUtils;, +import java.io.Closeable;, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import java.util.function.Function;, +, +public final class ProcessorsRegistry implements Closeable {, +    @Override, +    public void close() throws IOException {, +        List<Closeable> closeables = new ArrayList<>();, +        for (Processor.Factory factory : processorFactories.values()) {, +            if (factory instanceof Closeable) {, +                closeables.add((Closeable) factory);, +            }, +        }, +        IOUtils.close(closeables);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/ingest/IngestService.java, +public class IngestService implements Closeable {, +, +    @Override, +    public void close() throws IOException {, +        pipelineStore.close();, +    }, +, +++ b/core/src/main/java/org/elasticsearch/ingest/PipelineStore.java, +public class PipelineStore extends AbstractComponent implements Closeable, ClusterStateListener {, +    public void close() throws IOException {, +        // TODO: When org.elasticsearch.node.Node can close Closable instances we should try to remove this code,, +        // since any wired closable should be able to close itself, +        processorRegistry.close();, +    }, +, +    @Override, +++ b/core/src/main/java/org/elasticsearch/ingest/ProcessorsRegistry.java, +import org.apache.lucene.util.IOUtils;, +import java.io.Closeable;, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import java.util.function.Function;, +, +public final class ProcessorsRegistry implements Closeable {, +    @Override, +    public void close() throws IOException {, +        List<Closeable> closeables = new ArrayList<>();, +        for (Processor.Factory factory : processorFactories.values()) {, +            if (factory instanceof Closeable) {, +                closeables.add((Closeable) factory);]