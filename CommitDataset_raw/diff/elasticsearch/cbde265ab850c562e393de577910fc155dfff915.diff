[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        boolean loadSource = gFields == null || gFields.length > 0;, +                get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(typeX, id))).loadSource(loadSource));, +            get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(type, id))).loadSource(loadSource));, +                if (gFields == null) {, +                    sourceRequested = true;, +                } else if (gFields.length == 0) {, +                    // no fields, and no source, +                    sourceRequested = false;, +                } else {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        boolean loadSource = gFields == null || gFields.length > 0;, +                get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(typeX, id))).loadSource(loadSource));, +            get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(type, id))).loadSource(loadSource));, +                if (gFields == null) {, +                    sourceRequested = true;, +                } else if (gFields.length == 0) {, +                    // no fields, and no source, +                    sourceRequested = false;, +                } else {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +        private boolean loadSource = true;, +, +        public boolean loadSource() {, +            return this.loadSource;, +        }, +, +        public Get loadSource(boolean loadSource) {, +            this.loadSource = loadSource;, +            return this;, +        }, +        public GetResult(boolean exists, long version, @Nullable BytesHolder source) {, +        @Nullable public BytesHolder source() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        boolean loadSource = gFields == null || gFields.length > 0;, +                get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(typeX, id))).loadSource(loadSource));, +            get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(type, id))).loadSource(loadSource));, +                if (gFields == null) {, +                    sourceRequested = true;, +                } else if (gFields.length == 0) {, +                    // no fields, and no source, +                    sourceRequested = false;, +                } else {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +        private boolean loadSource = true;, +, +        public boolean loadSource() {, +            return this.loadSource;, +        }, +, +        public Get loadSource(boolean loadSource) {, +            this.loadSource = loadSource;, +            return this;, +        }, +        public GetResult(boolean exists, long version, @Nullable BytesHolder source) {, +        @Nullable public BytesHolder source() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +                    if (!get.loadSource()) {, +                        return new GetResult(true, versionValue.version(), null);, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        boolean loadSource = gFields == null || gFields.length > 0;, +                get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(typeX, id))).loadSource(loadSource));, +            get = indexShard.get(new Engine.Get(realtime, UidFieldMapper.TERM_FACTORY.createTerm(Uid.createUid(type, id))).loadSource(loadSource));, +                if (gFields == null) {, +                    sourceRequested = true;, +                } else if (gFields.length == 0) {, +                    // no fields, and no source, +                    sourceRequested = false;, +                } else {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/Engine.java, +        private boolean loadSource = true;, +, +        public boolean loadSource() {, +            return this.loadSource;, +        }, +, +        public Get loadSource(boolean loadSource) {, +            this.loadSource = loadSource;, +            return this;, +        }, +        public GetResult(boolean exists, long version, @Nullable BytesHolder source) {, +        @Nullable public BytesHolder source() {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +                    if (!get.loadSource()) {, +                        return new GetResult(true, versionValue.version(), null);, +                    }, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/document/GetActionTests.java, +import org.elasticsearch.common.Strings;, +        logger.info("--> realtime get 1 (no source)");, +        response = client.prepareGet("test", "type1", "1").setFields(Strings.EMPTY_ARRAY).execute().actionGet();, +        assertThat(response.exists(), equalTo(true));, +        assertThat(response.source(), nullValue());, +]