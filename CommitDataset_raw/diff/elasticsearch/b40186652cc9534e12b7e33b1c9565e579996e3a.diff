[+++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +        String[] parts = version.split("\\.|\\-");, +                if (buildStr.startsWith("RC") || buildStr.startsWith("rc")) {, +                sb.append("-beta");, +            if (major >= 2) {, +                sb.append("-rc");, +            } else {, +                sb.append(".RC");, +            }, +            sb.append(build - 50);, +    public boolean isRC() {, +        return build > 50 && build < 99;, +    }, +, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +        String[] parts = version.split("\\.|\\-");, +                if (buildStr.startsWith("RC") || buildStr.startsWith("rc")) {, +                sb.append("-beta");, +            if (major >= 2) {, +                sb.append("-rc");, +            } else {, +                sb.append(".RC");, +            }, +            sb.append(build - 50);, +    public boolean isRC() {, +        return build > 50 && build < 99;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        assertEquals("2.0.0-beta1", Version.V_2_0_0_beta1.number());, +                if (v.major >= 2) {, +                    String number = v.number();, +                    if (v.isBeta()) {, +                        number = number.replace("-beta", "_beta");, +                    } else if (v.isRC()) {, +                        number = number.replace("-rc", "_rc");, +                    }, +                    assertEquals("V_" + number.replace('.', '_'), constantName);, +                } else {, +                }, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +        String[] parts = version.split("\\.|\\-");, +                if (buildStr.startsWith("RC") || buildStr.startsWith("rc")) {, +                sb.append("-beta");, +            if (major >= 2) {, +                sb.append("-rc");, +            } else {, +                sb.append(".RC");, +            }, +            sb.append(build - 50);, +    public boolean isRC() {, +        return build > 50 && build < 99;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        assertEquals("2.0.0-beta1", Version.V_2_0_0_beta1.number());, +                if (v.major >= 2) {, +                    String number = v.number();, +                    if (v.isBeta()) {, +                        number = number.replace("-beta", "_beta");, +                    } else if (v.isRC()) {, +                        number = number.replace("-rc", "_rc");, +                    }, +                    assertEquals("V_" + number.replace('.', '_'), constantName);, +                } else {, +                }, +++ b/dev-tools/pom.xml, +  <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/pom.xml, +        <version>2.0.0-beta1-SNAPSHOT</version>, +++ b/core/src/main/java/org/elasticsearch/Version.java, +        String[] parts = version.split("\\.|\\-");, +                if (buildStr.startsWith("RC") || buildStr.startsWith("rc")) {, +                sb.append("-beta");, +            if (major >= 2) {, +                sb.append("-rc");, +            } else {, +                sb.append(".RC");, +            }, +            sb.append(build - 50);, +    public boolean isRC() {, +        return build > 50 && build < 99;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/VersionTests.java, +        assertEquals("2.0.0-beta1", Version.V_2_0_0_beta1.number());, +                if (v.major >= 2) {, +                    String number = v.number();, +                    if (v.isBeta()) {, +                        number = number.replace("-beta", "_beta");, +                    } else if (v.isRC()) {, +                        number = number.replace("-rc", "_rc");]