[+++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder.SmoothingModel;, +     * Reads a {@link SmoothingModel} from the current stream, +     */, +    public SmoothingModel readSmoothingModel() throws IOException {, +        return readNamedWriteable(SmoothingModel.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder.SmoothingModel;, +     * Reads a {@link SmoothingModel} from the current stream, +     */, +    public SmoothingModel readSmoothingModel() throws IOException {, +        return readNamedWriteable(SmoothingModel.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder.SmoothingModel;, +     * Writes the given {@link SmoothingModel} to the stream, +     */, +    public void writeSmoothingModel(SmoothingModel smoothinModel) throws IOException {, +        writeNamedWriteable(smoothinModel);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder.SmoothingModel;, +     * Reads a {@link SmoothingModel} from the current stream, +     */, +    public SmoothingModel readSmoothingModel() throws IOException {, +        return readNamedWriteable(SmoothingModel.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder.SmoothingModel;, +     * Writes the given {@link SmoothingModel} to the stream, +     */, +    public void writeSmoothingModel(SmoothingModel smoothinModel) throws IOException {, +        writeNamedWriteable(smoothinModel);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java, +    /**, +     * Gets the {@link SmoothingModel}, +     */, +    public SmoothingModel smoothingModel() {, +        return this.model;, +    }, +, +        private double discount = DEFAULT_BACKOFF_DISCOUNT;, +        boolean hasModel = model != null;, +        out.writeBoolean(hasModel);, +        if (hasModel) {, +            out.writeSmoothingModel(model);, +        }, +        if (in.readBoolean()) {, +            builder.model = in.readSmoothingModel();, +        }, +                Objects.equals(model, other.model) &&, +                // NORELEASE generators,, +                gramSize, model, forceUnigrams, tokenLimit, preTag, postTag,, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder.SmoothingModel;, +     * Reads a {@link SmoothingModel} from the current stream, +     */, +    public SmoothingModel readSmoothingModel() throws IOException {, +        return readNamedWriteable(SmoothingModel.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder.SmoothingModel;, +     * Writes the given {@link SmoothingModel} to the stream, +     */, +    public void writeSmoothingModel(SmoothingModel smoothinModel) throws IOException {, +        writeNamedWriteable(smoothinModel);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java, +    /**, +     * Gets the {@link SmoothingModel}, +     */, +    public SmoothingModel smoothingModel() {, +        return this.model;, +    }, +, +        private double discount = DEFAULT_BACKOFF_DISCOUNT;, +        boolean hasModel = model != null;, +        out.writeBoolean(hasModel);, +        if (hasModel) {, +            out.writeSmoothingModel(model);, +        }, +        if (in.readBoolean()) {, +            builder.model = in.readSmoothingModel();, +        }]