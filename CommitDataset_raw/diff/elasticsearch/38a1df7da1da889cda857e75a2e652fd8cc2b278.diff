[+++ b/test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java, +import com.carrotsearch.randomizedtesting.SysGlobals;, +import org.elasticsearch.test.ESTestCase;, +    private static final int JVM_ORDINAL = Integer.parseInt(System.getProperty(SysGlobals.CHILDVM_SYSPROP_JVM_ID, "0"));, +        // some tests use MockTransportService to do network based testing. Yet, we run tests in multiple JVMs that means, +        // concurrent tests could claim port that another JVM just released and if that test tries to simulate a disconnect it might, +        // be smart enough to re-connect depending on what is tested. To reduce the risk, since this is very hard to debug we use, +        // a different default port range per JVM unless the incoming settings override it, +        int basePort = 9300 + (JVM_ORDINAL * 100);, +        settings = Settings.builder().put(TcpTransport.PORT.getKey(), basePort + "-" + (basePort+100)).put(settings).build();]