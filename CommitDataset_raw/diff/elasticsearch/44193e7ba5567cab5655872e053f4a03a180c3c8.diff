[+++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated with the key `30`., +==== Offset, +, +By default the bucket keys start with 0 and then continue in even spaced steps of `interval`, e.g. if the interval is 10 the first buckets, +(assuming there is data inside them) will be [0 - 9], [10-19], [20-29]. The bucket boundaries can be shifted by using the `offset` option., +, +This can be best illustrated with an example. If there are 10 documents with values ranging from 5 to 14, using interval `10` will result in, +two buckets with 5 documents each. If an additional offset `5` is used, there will be only one single bucket [5-14] containing all the 10, +documents., +, +++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated with the key `30`., +==== Offset, +, +By default the bucket keys start with 0 and then continue in even spaced steps of `interval`, e.g. if the interval is 10 the first buckets, +(assuming there is data inside them) will be [0 - 9], [10-19], [20-29]. The bucket boundaries can be shifted by using the `offset` option., +, +This can be best illustrated with an example. If there are 10 documents with values ranging from 5 to 14, using interval `10` will result in, +two buckets with 5 documents each. If an additional offset `5` is used, there will be only one single bucket [5-14] containing all the 10, +documents., +, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java, +    private Long offset;, +     * Set the offset to apply to shift bucket boundaries., +    public HistogramBuilder offset(long offset) {, +        this.offset = offset;, +        if (offset != null) {, +            builder.field("offset", offset);, +++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated with the key `30`., +==== Offset, +, +By default the bucket keys start with 0 and then continue in even spaced steps of `interval`, e.g. if the interval is 10 the first buckets, +(assuming there is data inside them) will be [0 - 9], [10-19], [20-29]. The bucket boundaries can be shifted by using the `offset` option., +, +This can be best illustrated with an example. If there are 10 documents with values ranging from 5 to 14, using interval `10` will result in, +two buckets with 5 documents each. If an additional offset `5` is used, there will be only one single bucket [5-14] containing all the 10, +documents., +, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java, +    private Long offset;, +     * Set the offset to apply to shift bucket boundaries., +    public HistogramBuilder offset(long offset) {, +        this.offset = offset;, +        if (offset != null) {, +            builder.field("offset", offset);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java, +        long offset = 0;, +                } else if ("offset".equals(currentFieldName)) {, +                    offset = parser.longValue();, +        if (offset != 0) {, +            rounding = new Rounding.PrePostRounding((Rounding.Interval) rounding, -offset, offset);, +++ b/docs/reference/search/aggregations/bucket/histogram-aggregation.asciidoc, +then the rounding will yield `30` and thus the document will "fall" into the bucket that is associated with the key `30`., +==== Offset, +, +By default the bucket keys start with 0 and then continue in even spaced steps of `interval`, e.g. if the interval is 10 the first buckets, +(assuming there is data inside them) will be [0 - 9], [10-19], [20-29]. The bucket boundaries can be shifted by using the `offset` option., +, +This can be best illustrated with an example. If there are 10 documents with values ranging from 5 to 14, using interval `10` will result in, +two buckets with 5 documents each. If an additional offset `5` is used, there will be only one single bucket [5-14] containing all the 10, +documents., +, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java, +    private Long offset;, +     * Set the offset to apply to shift bucket boundaries., +    public HistogramBuilder offset(long offset) {, +        this.offset = offset;, +        if (offset != null) {, +            builder.field("offset", offset);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java, +        long offset = 0;, +                } else if ("offset".equals(currentFieldName)) {, +                    offset = parser.longValue();, +        if (offset != 0) {, +            rounding = new Rounding.PrePostRounding((Rounding.Interval) rounding, -offset, offset);, +++ b/src/test/java/org/elasticsearch/common/rounding/RoundingTests.java, +import org.junit.Test;, +    /**, +     * simple testcase to ilustrate how Rounding.Interval works on readable input, +     */, +    @Test, +        int interval = 10;, +        Rounding.Interval rounding = new Rounding.Interval(interval);, +        int value = 24;, +        final long key = rounding.roundKey(24);, +        final long r = rounding.round(24);, +        String message = "round(" + value + ", interval=" + interval + ") = " + r;, +        assertEquals(value/interval, key);, +        assertEquals(value/interval * interval, r);, +        assertEquals(message, 0, r % interval);, +    }, +, +    @Test, +    public void testIntervalRandom() {, +            final long key = rounding.roundKey(l);, +            assertEquals(message, r, key*interval);, +    /**, +     * Simple testcase to ilustrate how Rounding.Pre works on readable input.]