[+++ b/bin/elasticsearch.bat, +set ES_CLASSPATH=$CLASSPATH;"%ES_HOME%/lib/elasticsearch-@ES_VERSION@.jar";"%ES_HOME%/lib/*";"%ES_HOME%/lib/sigar/*", +++ b/bin/elasticsearch.bat, +set ES_CLASSPATH=$CLASSPATH;"%ES_HOME%/lib/elasticsearch-@ES_VERSION@.jar";"%ES_HOME%/lib/*";"%ES_HOME%/lib/sigar/*", +++ b/bin/elasticsearch.in.sh, +CLASSPATH=$CLASSPATH:$ES_HOME/lib/elasticsearch-@ES_VERSION@.jar:$ES_HOME/lib/*:$ES_HOME/lib/sigar/*, +++ b/bin/elasticsearch.bat, +set ES_CLASSPATH=$CLASSPATH;"%ES_HOME%/lib/elasticsearch-@ES_VERSION@.jar";"%ES_HOME%/lib/*";"%ES_HOME%/lib/sigar/*", +++ b/bin/elasticsearch.in.sh, +CLASSPATH=$CLASSPATH:$ES_HOME/lib/elasticsearch-@ES_VERSION@.jar:$ES_HOME/lib/*:$ES_HOME/lib/sigar/*, +++ b/build.gradle, +    ant.replace(dir: explodedDistBinDir, token: "@ES_VERSION@", value: versionNumber), +, +++ b/bin/elasticsearch.bat, +set ES_CLASSPATH=$CLASSPATH;"%ES_HOME%/lib/elasticsearch-@ES_VERSION@.jar";"%ES_HOME%/lib/*";"%ES_HOME%/lib/sigar/*", +++ b/bin/elasticsearch.in.sh, +CLASSPATH=$CLASSPATH:$ES_HOME/lib/elasticsearch-@ES_VERSION@.jar:$ES_HOME/lib/*:$ES_HOME/lib/sigar/*, +++ b/build.gradle, +    ant.replace(dir: explodedDistBinDir, token: "@ES_VERSION@", value: versionNumber), +, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/FieldCache.java, +package org.apache.lucene.search;, +, +/**, + * Licensed to the Apache Software Foundation (ASF) under one or more, + * contributor license agreements.  See the NOTICE file distributed with, + * this work for additional information regarding copyright ownership., + * The ASF licenses this file to You under the Apache License, Version 2.0, + * (the "License"); you may not use this file except in compliance with, + * the License.  You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +import org.apache.lucene.analysis.NumericTokenStream;, +import org.apache.lucene.document.NumericField;, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.util.NumericUtils;, +import org.apache.lucene.util.RamUsageEstimator;, +, +import java.io.IOException;, +import java.io.PrintStream;, +import java.io.Serializable;, +import java.text.DecimalFormat;, +, +/**, + * Expert: Maintains caches of term values., + *, + * <p>Created: May 19, 2004 11:13:14 AM, + *, + * @see org.apache.lucene.util.FieldCacheSanityChecker, + * @since lucene 1.4, + */, +// LUCENE MONITOR - Added the ability to listen to purge notifications, sadly no extension point in Lucene for this..., +public interface FieldCache {, +, +    void setIndexReaderPurgedListener(IndexReaderPurgedListener listener);, +, +    public static final class CreationPlaceholder {, +        Object value;, +    }, +, +    /**, +     * Indicator for StringIndex values in the cache., +     */, +    // NOTE: the value assigned to this constant must not be, +    // the same as any of those in SortField!!, +    public static final int STRING_INDEX = -1;, +, +, +    /**, +     * Expert: Stores term text values and document ordering data., +     */, +    public static class StringIndex {, +, +        public int binarySearchLookup(String key) {, +            // this special case is the reason that Arrays.binarySearch() isn't useful., +            if (key == null), +                return 0;, +, +            int low = 1;, +            int high = lookup.length - 1;, +, +            while (low <= high) {, +                int mid = (low + high) >>> 1;, +                int cmp = lookup[mid].compareTo(key);, +, +                if (cmp < 0), +                    low = mid + 1;, +                else if (cmp > 0), +                    high = mid - 1;, +                else, +                    return mid; // key found, +            }]