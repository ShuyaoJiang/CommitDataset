[+++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +import java.util.Objects;, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        MainResponse other = (MainResponse) o;, +        return Objects.equals(nodeName, other.nodeName) &&, +                Objects.equals(version, other.version) &&, +                Objects.equals(clusterUuid, other.clusterUuid) &&, +                Objects.equals(build, other.build) &&, +                Objects.equals(available, other.available) &&, +                Objects.equals(clusterName, other.clusterName);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(nodeName, version, clusterUuid, build, clusterName, available);, +    }, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +import java.util.Objects;, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        MainResponse other = (MainResponse) o;, +        return Objects.equals(nodeName, other.nodeName) &&, +                Objects.equals(version, other.version) &&, +                Objects.equals(clusterUuid, other.clusterUuid) &&, +                Objects.equals(build, other.build) &&, +                Objects.equals(available, other.available) &&, +                Objects.equals(clusterName, other.clusterName);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(nodeName, version, clusterUuid, build, clusterName, available);, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationsLock.java, +import org.elasticsearch.action.support.ContextPreservingActionListener;, +import org.elasticsearch.common.util.concurrent.ThreadContext.StoredContext;, +import java.util.function.Supplier;, +                    final Supplier<StoredContext> contextSupplier = threadPool.getThreadContext().newRestorableContext(false);, +                            new ThreadedActionListener<>(logger, threadPool, executorOnDelay,, +                                new ContextPreservingActionListener<>(contextSupplier, onAcquired), forceExecution));, +                        delayedOperations.add(new ContextPreservingActionListener<>(contextSupplier, onAcquired));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +import java.util.Objects;, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        MainResponse other = (MainResponse) o;, +        return Objects.equals(nodeName, other.nodeName) &&, +                Objects.equals(version, other.version) &&, +                Objects.equals(clusterUuid, other.clusterUuid) &&, +                Objects.equals(build, other.build) &&, +                Objects.equals(available, other.available) &&, +                Objects.equals(clusterName, other.clusterName);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(nodeName, version, clusterUuid, build, clusterName, available);, +    }, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationsLock.java, +import org.elasticsearch.action.support.ContextPreservingActionListener;, +import org.elasticsearch.common.util.concurrent.ThreadContext.StoredContext;, +import java.util.function.Supplier;, +                    final Supplier<StoredContext> contextSupplier = threadPool.getThreadContext().newRestorableContext(false);, +                            new ThreadedActionListener<>(logger, threadPool, executorOnDelay,, +                                new ContextPreservingActionListener<>(contextSupplier, onAcquired), forceExecution));, +                        delayedOperations.add(new ContextPreservingActionListener<>(contextSupplier, onAcquired));, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            try {, +            } catch (NoSuchFileException nsfe) {, +                return RepositoryData.EMPTY_REPO_GEN;, +            }, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +import java.util.Objects;]