[+++ b/core/src/main/java/org/elasticsearch/index/mapper/RangeFieldMapper.java, +            Query query = rangeQuery(value, value, true, true, ShapeRelation.INTERSECTS, context);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/RangeFieldMapper.java, +            Query query = rangeQuery(value, value, true, true, ShapeRelation.INTERSECTS, context);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java, +, +    public void testTermQuery() throws Exception, IllegalArgumentException {, +        // See https://github.com/elastic/elasticsearch/issues/25950, +        Settings indexSettings = Settings.builder(), +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build();, +        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(randomAlphaOfLengthBetween(1, 10), indexSettings);, +        QueryShardContext context = new QueryShardContext(0, idxSettings, null, null, null, null, null, xContentRegistry(),, +            writableRegistry(), null, null, () -> nowInMillis, null);, +        RangeFieldMapper.RangeFieldType ft = new RangeFieldMapper.RangeFieldType(type, Version.CURRENT);, +        ft.setName(FIELDNAME);, +        ft.setIndexOptions(IndexOptions.DOCS);, +, +        Object value = nextFrom();, +        ShapeRelation relation = ShapeRelation.INTERSECTS;, +        boolean includeLower = true;, +        boolean includeUpper = true;, +        assertEquals(getExpectedRangeQuery(relation, value, value, includeLower, includeUpper),, +            ft.termQuery(value, context));, +    }]