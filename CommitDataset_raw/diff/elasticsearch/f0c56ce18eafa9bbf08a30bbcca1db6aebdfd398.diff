[+++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +import org.elasticsearch.util.collect.Lists;, +                    listeners = Lists.newArrayListWithCapacity(2);, +++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +import org.elasticsearch.util.collect.Lists;, +                    listeners = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        ArrayList<String> actualIndices = Lists.newArrayListWithCapacity(indices.length);, +++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +import org.elasticsearch.util.collect.Lists;, +                    listeners = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        ArrayList<String> actualIndices = Lists.newArrayListWithCapacity(indices.length);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +import org.elasticsearch.util.collect.Lists;, +        List<ShardRouting> backupShards = Lists.newArrayListWithCapacity(2);, +++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +import org.elasticsearch.util.collect.Lists;, +                    listeners = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        ArrayList<String> actualIndices = Lists.newArrayListWithCapacity(indices.length);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +import org.elasticsearch.util.collect.Lists;, +        List<ShardRouting> backupShards = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +        List<DiscoveryNode> nextPossibleMasters = Lists.newArrayListWithCapacity(numberOfPossibleMasters);, +++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +import org.elasticsearch.util.collect.Lists;, +                    listeners = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        ArrayList<String> actualIndices = Lists.newArrayListWithCapacity(indices.length);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +import org.elasticsearch.util.collect.Lists;, +        List<ShardRouting> backupShards = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +        List<DiscoveryNode> nextPossibleMasters = Lists.newArrayListWithCapacity(numberOfPossibleMasters);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/fs/FsIndexShardGateway.java, +import org.elasticsearch.util.collect.Lists;, +            ArrayList<Translog.Operation> operations = Lists.newArrayListWithCapacity(numberOfOperations);, +++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +import org.elasticsearch.util.collect.Lists;, +                    listeners = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        ArrayList<String> actualIndices = Lists.newArrayListWithCapacity(indices.length);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +import org.elasticsearch.util.collect.Lists;, +        List<ShardRouting> backupShards = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +        List<DiscoveryNode> nextPossibleMasters = Lists.newArrayListWithCapacity(numberOfPossibleMasters);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/fs/FsIndexShardGateway.java, +import org.elasticsearch.util.collect.Lists;, +            ArrayList<Translog.Operation> operations = Lists.newArrayListWithCapacity(numberOfOperations);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java, +import org.elasticsearch.search.facets.internal.InternalFacet;, +import org.elasticsearch.search.facets.internal.InternalFacets;, +        InternalFacets facets = null;, +                facets = new InternalFacets(mergedFacets);, +++ b/.idea/runConfigurations/Elastic_Search_Tests.xml, +      <option name="myExternalizedOptions" value="&#10;additional-options2=onexit\=snapshot&#10;" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +import org.elasticsearch.util.collect.Lists;, +                    listeners = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +        ArrayList<String> actualIndices = Lists.newArrayListWithCapacity(indices.length);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +import org.elasticsearch.util.collect.Lists;, +        List<ShardRouting> backupShards = Lists.newArrayListWithCapacity(2);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java, +        List<DiscoveryNode> nextPossibleMasters = Lists.newArrayListWithCapacity(numberOfPossibleMasters);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/fs/FsIndexShardGateway.java, +import org.elasticsearch.util.collect.Lists;, +            ArrayList<Translog.Operation> operations = Lists.newArrayListWithCapacity(numberOfOperations);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java, +import org.elasticsearch.search.facets.internal.InternalFacet;, +import org.elasticsearch.search.facets.internal.InternalFacets;, +        InternalFacets facets = null;, +                facets = new InternalFacets(mergedFacets);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/Facet.java, +import org.elasticsearch.search.facets.query.QueryFacet;, +import org.elasticsearch.search.facets.statistical.StatisticalFacet;, +import org.elasticsearch.search.facets.terms.TermsFacet;, +    /**, +     * The type of the facet., +     */, +        /**, +         * Terms facet type, matching {@link TermsFacet}.]