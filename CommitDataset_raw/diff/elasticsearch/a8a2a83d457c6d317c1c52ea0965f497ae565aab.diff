[+++ b/docs/reference/sql/language/index-patterns.asciidoc, +The same kind of patterns can also be used to query multiple indices or tables., +, +For example:, +, +["source","sql",subs="attributes,callouts,macros"], +----, +include-tagged::{sql-specs}/docs.csv-spec[fromTablePatternQuoted], +----, +, +NOTE: There is the restriction that all resolved concrete tables have the exact same mapping., +, +++ b/docs/reference/sql/language/index-patterns.asciidoc, +The same kind of patterns can also be used to query multiple indices or tables., +, +For example:, +, +["source","sql",subs="attributes,callouts,macros"], +----, +include-tagged::{sql-specs}/docs.csv-spec[fromTablePatternQuoted], +----, +, +NOTE: There is the restriction that all resolved concrete tables have the exact same mapping., +, +++ b/docs/reference/sql/language/syntax/select.asciidoc, +If the table name contains special SQL characters (such as `.`,`-`,`*`,etc...) use double quotes to escape them:, +++ b/docs/reference/sql/language/index-patterns.asciidoc, +The same kind of patterns can also be used to query multiple indices or tables., +, +For example:, +, +["source","sql",subs="attributes,callouts,macros"], +----, +include-tagged::{sql-specs}/docs.csv-spec[fromTablePatternQuoted], +----, +, +NOTE: There is the restriction that all resolved concrete tables have the exact same mapping., +, +++ b/docs/reference/sql/language/syntax/select.asciidoc, +If the table name contains special SQL characters (such as `.`,`-`,`*`,etc...) use double quotes to escape them:, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +    : (LETTER | DIGIT | '_')+, +++ b/docs/reference/sql/language/index-patterns.asciidoc, +The same kind of patterns can also be used to query multiple indices or tables., +, +For example:, +, +["source","sql",subs="attributes,callouts,macros"], +----, +include-tagged::{sql-specs}/docs.csv-spec[fromTablePatternQuoted], +----, +, +NOTE: There is the restriction that all resolved concrete tables have the exact same mapping., +, +++ b/docs/reference/sql/language/syntax/select.asciidoc, +If the table name contains special SQL characters (such as `.`,`-`,`*`,etc...) use double quotes to escape them:, +++ b/x-pack/plugin/sql/src/main/antlr/SqlBase.g4, +    : (LETTER | DIGIT | '_')+, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/SqlBaseLexer.java, +    "\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2k\u036f\b\1\4\2\t"+, +    "\6c\u0319\nc\rc\16c\u031a\3d\3d\3d\6d\u0320\nd\rd\16d\u0321\3e\3e\3e\3"+, +    "e\7e\u0328\ne\fe\16e\u032b\13e\3e\3e\3f\3f\3f\3f\7f\u0333\nf\ff\16f\u0336"+, +    "\13f\3f\3f\3g\3g\5g\u033c\ng\3g\6g\u033f\ng\rg\16g\u0340\3h\3h\3i\3i\3"+, +    "j\3j\3j\3j\7j\u034b\nj\fj\16j\u034e\13j\3j\5j\u0351\nj\3j\5j\u0354\nj"+, +    "\3j\3j\3k\3k\3k\3k\3k\7k\u035d\nk\fk\16k\u0360\13k\3k\3k\3k\3k\3k\3l\6"+, +    "l\u0368\nl\rl\16l\u0369\3l\3l\3m\3m\3\u035e\2n\3\3\5\4\7\5\t\6\13\7\r"+, +    "\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+, +    "bb\4\2--//\3\2\62;\3\2C\\\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u0390\2\3\3"+, +    "\u0306\3\2\2\2\u00c3\u030a\3\2\2\2\u00c5\u0314\3\2\2\2\u00c7\u031f\3\2"+, +    "\2\2\u00c9\u0323\3\2\2\2\u00cb\u032e\3\2\2\2\u00cd\u0339\3\2\2\2\u00cf"+, +    "\u0342\3\2\2\2\u00d1\u0344\3\2\2\2\u00d3\u0346\3\2\2\2\u00d5\u0357\3\2"+, +    "\2\2\u00d7\u0367\3\2\2\2\u00d9\u036d\3\2\2\2\u00db\u00dc\7*\2\2\u00dc"+, +    "\2\2\u031a\u031b\3\2\2\2\u031b\u00c6\3\2\2\2\u031c\u0320\5\u00d1i\2\u031d"+, +    "\u0320\5\u00cfh\2\u031e\u0320\t\3\2\2\u031f\u031c\3\2\2\2\u031f\u031d"+, +    "\3\2\2\2\u031f\u031e\3\2\2\2\u0320\u0321\3\2\2\2\u0321\u031f\3\2\2\2\u0321"+, +    "\u0322\3\2\2\2\u0322\u00c8\3\2\2\2\u0323\u0329\7$\2\2\u0324\u0328\n\5"+, +    "\2\2\u0325\u0326\7$\2\2\u0326\u0328\7$\2\2\u0327\u0324\3\2\2\2\u0327\u0325"+, +    "\3\2\2\2\u0328\u032b\3\2\2\2\u0329\u0327\3\2\2\2\u0329\u032a\3\2\2\2\u032a"+, +    "\u032c\3\2\2\2\u032b\u0329\3\2\2\2\u032c\u032d\7$\2\2\u032d\u00ca\3\2"+, +    "\2\2\u032e\u0334\7b\2\2\u032f\u0333\n\6\2\2\u0330\u0331\7b\2\2\u0331\u0333"+, +    "\7b\2\2\u0332\u032f\3\2\2\2\u0332\u0330\3\2\2\2\u0333\u0336\3\2\2\2\u0334"+, +    "\u0332\3\2\2\2\u0334\u0335\3\2\2\2\u0335\u0337\3\2\2\2\u0336\u0334\3\2"+, +    "\2\2\u0337\u0338\7b\2\2\u0338\u00cc\3\2\2\2\u0339\u033b\7G\2\2\u033a\u033c"+, +    "\t\7\2\2\u033b\u033a\3\2\2\2\u033b\u033c\3\2\2\2\u033c\u033e\3\2\2\2\u033d"+, +    "\u033f\5\u00cfh\2\u033e\u033d\3\2\2\2\u033f\u0340\3\2\2\2\u0340\u033e"+, +    "\3\2\2\2\u0340\u0341\3\2\2\2\u0341\u00ce\3\2\2\2\u0342\u0343\t\b\2\2\u0343"+, +    "\u00d0\3\2\2\2\u0344\u0345\t\t\2\2\u0345\u00d2\3\2\2\2\u0346\u0347\7/"+, +    "\2\2\u0347\u0348\7/\2\2\u0348\u034c\3\2\2\2\u0349\u034b\n\n\2\2\u034a"+, +    "\u0349\3\2\2\2\u034b\u034e\3\2\2\2\u034c\u034a\3\2\2\2\u034c\u034d\3\2"+, +    "\2\2\u034d\u0350\3\2\2\2\u034e\u034c\3\2\2\2\u034f\u0351\7\17\2\2\u0350"+, +    "\u034f\3\2\2\2\u0350\u0351\3\2\2\2\u0351\u0353\3\2\2\2\u0352\u0354\7\f"+, +    "\2\2\u0353\u0352\3\2\2\2\u0353\u0354\3\2\2\2\u0354\u0355\3\2\2\2\u0355"+, +    "\u0356\bj\2\2\u0356\u00d4\3\2\2\2\u0357\u0358\7\61\2\2\u0358\u0359\7,"+, +    "\2\2\u0359\u035e\3\2\2\2\u035a\u035d\5\u00d5k\2\u035b\u035d\13\2\2\2\u035c"+, +    "\u035a\3\2\2\2\u035c\u035b\3\2\2\2\u035d\u0360\3\2\2\2\u035e\u035f\3\2"+, +    "\2\2\u035e\u035c\3\2\2\2\u035f\u0361\3\2\2\2\u0360\u035e\3\2\2\2\u0361"+, +    "\u0362\7,\2\2\u0362\u0363\7\61\2\2\u0363\u0364\3\2\2\2\u0364\u0365\bk"+, +    "\2\2\u0365\u00d6\3\2\2\2\u0366\u0368\t\13\2\2\u0367\u0366\3\2\2\2\u0368"+, +    "\u0369\3\2\2\2\u0369\u0367\3\2\2\2\u0369\u036a\3\2\2\2\u036a\u036b\3\2"+, +    "\2\2\u036b\u036c\bl\2\2\u036c\u00d8\3\2\2\2\u036d\u036e\13\2\2\2\u036e"+]