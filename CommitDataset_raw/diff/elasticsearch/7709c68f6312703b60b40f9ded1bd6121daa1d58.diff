[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonQueryParser.java, +        return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonQueryParser.java, +        return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/FieldJsonQueryParser.java, +            return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonQueryParser.java, +        return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/FieldJsonQueryParser.java, +            return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/QueryStringJsonQueryParser.java, +            return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/BoolJsonQueryParser.java, +        return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/FieldJsonQueryParser.java, +            return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/json/QueryStringJsonQueryParser.java, +            return optimizeQuery(fixNegativeQueryIfNeeded(query));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java, +    /**, +     * Optimizes the given query and returns the optimized version of it., +     */, +    public static Query optimizeQuery(Query q) {, +        if (q instanceof BooleanQuery) {, +            return optimizeBooleanQuery((BooleanQuery) q);, +        }, +        return q;, +    }, +, +    public static BooleanQuery optimizeBooleanQuery(BooleanQuery q) {, +        BooleanQuery optimized = new BooleanQuery(q.isCoordDisabled());, +        optimized.setMinimumNumberShouldMatch(q.getMinimumNumberShouldMatch());, +        optimizeBooleanQuery(optimized, q);, +        return optimized;, +    }, +, +    public static void optimizeBooleanQuery(BooleanQuery optimized, BooleanQuery q) {, +        for (BooleanClause clause : q.clauses()) {, +            Query cq = clause.getQuery();, +            cq.setBoost(cq.getBoost() * q.getBoost());, +            if (cq instanceof BooleanQuery && !clause.isRequired() && !clause.isProhibited()) {, +                optimizeBooleanQuery(optimized, (BooleanQuery) cq);, +            } else {, +                optimized.add(clause);, +            }, +        }, +    }, +]