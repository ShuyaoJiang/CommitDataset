[+++ b/src/main/java/org/elasticsearch/shield/authc/support/UsernamePasswordToken.java, +        return Objects.equals(password, that.password) &&, +++ b/src/main/java/org/elasticsearch/shield/authc/support/UsernamePasswordToken.java, +        return Objects.equals(password, that.password) &&, +++ b/src/test/java/org/elasticsearch/shield/authc/support/UsernamePasswordTokenTests.java, +, +    @Test, +    public void testEqualsWithDifferentPasswords() {, +        UsernamePasswordToken token1 = new UsernamePasswordToken("username", new SecuredString("password".toCharArray()));, +        UsernamePasswordToken token2 = new UsernamePasswordToken("username", new SecuredString("new password".toCharArray()));, +        assertThat(token1, not(equalTo(token2)));, +    }, +, +    @Test, +    public void testEqualsWithDifferentUsernames() {, +        UsernamePasswordToken token1 = new UsernamePasswordToken("username", new SecuredString("password".toCharArray()));, +        UsernamePasswordToken token2 = new UsernamePasswordToken("username1", new SecuredString("password".toCharArray()));, +        assertThat(token1, not(equalTo(token2)));, +    }, +, +    @Test, +    public void testEquals() {, +        UsernamePasswordToken token1 = new UsernamePasswordToken("username", new SecuredString("password".toCharArray()));, +        UsernamePasswordToken token2 = new UsernamePasswordToken("username", new SecuredString("password".toCharArray()));, +        assertThat(token1, equalTo(token2));, +    }]