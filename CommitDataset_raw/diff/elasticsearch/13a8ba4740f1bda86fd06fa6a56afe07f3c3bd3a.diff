[+++ b/README.textile, +Elasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 5 shards and 1 replica per shard (5/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards)., +++ b/README.textile, +Elasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 5 shards and 1 replica per shard (5/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards)., +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when commiting bwc changes */, +++ b/README.textile, +Elasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 5 shards and 1 replica per shard (5/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards)., +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when commiting bwc changes */, +++ b/dev-tools/es_release_notes.pl, +my %Ignore = map { $_ => 1 }, +    ( ">non-issue", ">refactoring", ">docs", ">test", ":Core/Build" );, +    my $branch = $version;, +    $branch =~ s/\.\d+$//;, +, +coming[$version], +, +Also see <<breaking-changes-$branch>>., +, +        my ($header) = map { m{:[^/]+/(.+)} && $1 }, +            grep {/^:/} sort keys %labels;, +++ b/README.textile, +Elasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 5 shards and 1 replica per shard (5/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards)., +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when commiting bwc changes */, +++ b/dev-tools/es_release_notes.pl, +my %Ignore = map { $_ => 1 }, +    ( ">non-issue", ">refactoring", ">docs", ">test", ":Core/Build" );, +    my $branch = $version;, +    $branch =~ s/\.\d+$//;, +, +coming[$version], +, +Also see <<breaking-changes-$branch>>., +, +        my ($header) = map { m{:[^/]+/(.+)} && $1 }, +            grep {/^:/} sort keys %labels;, +++ b/distribution/src/main/resources/bin/elasticsearch-env, +# now make ES_PATH_CONF absolute, +ES_PATH_CONF=`cd "$ES_PATH_CONF"; pwd`, +, +++ b/README.textile, +Elasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 5 shards and 1 replica per shard (5/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards)., +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when commiting bwc changes */, +++ b/dev-tools/es_release_notes.pl, +my %Ignore = map { $_ => 1 }, +    ( ">non-issue", ">refactoring", ">docs", ">test", ":Core/Build" );, +    my $branch = $version;, +    $branch =~ s/\.\d+$//;, +, +coming[$version], +, +Also see <<breaking-changes-$branch>>., +, +        my ($header) = map { m{:[^/]+/(.+)} && $1 }, +            grep {/^:/} sort keys %labels;, +++ b/distribution/src/main/resources/bin/elasticsearch-env, +# now make ES_PATH_CONF absolute, +ES_PATH_CONF=`cd "$ES_PATH_CONF"; pwd`, +, +++ b/distribution/src/main/resources/bin/elasticsearch-env.bat, +rem now make ES_PATH_CONF absolute, +for %%I in ("%ES_PATH_CONF%..") do set ES_PATH_CONF=%%~dpfI, +, +++ b/README.textile, +Elasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 5 shards and 1 replica per shard (5/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards)., +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when commiting bwc changes */, +++ b/dev-tools/es_release_notes.pl, +my %Ignore = map { $_ => 1 }, +    ( ">non-issue", ">refactoring", ">docs", ">test", ":Core/Build" );, +    my $branch = $version;, +    $branch =~ s/\.\d+$//;, +, +coming[$version], +, +Also see <<breaking-changes-$branch>>., +, +        my ($header) = map { m{:[^/]+/(.+)} && $1 }, +            grep {/^:/} sort keys %labels;, +++ b/distribution/src/main/resources/bin/elasticsearch-env, +# now make ES_PATH_CONF absolute, +ES_PATH_CONF=`cd "$ES_PATH_CONF"; pwd`, +, +++ b/distribution/src/main/resources/bin/elasticsearch-env.bat, +rem now make ES_PATH_CONF absolute, +for %%I in ("%ES_PATH_CONF%..") do set ES_PATH_CONF=%%~dpfI, +, +++ b/docs/reference/cluster/nodes-stats.asciidoc, +`adaptive_selection`::, +  Statistics about <<search-adaptive-replica,adaptive replica selection>>. See, +  <<adaptive-selection-stats,adaptive selection statistics>>., +]