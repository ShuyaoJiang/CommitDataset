[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/Security.java, +        final SecurityContext securityContext = new SecurityContext(settings, threadPool.getThreadContext(), cryptoService);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/Security.java, +        final SecurityContext securityContext = new SecurityContext(settings, threadPool.getThreadContext(), cryptoService);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/SecurityContext.java, +    public SecurityContext(Settings settings, ThreadContext threadContext, CryptoService cryptoService) {, +        this.threadContext = threadContext;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/Security.java, +        final SecurityContext securityContext = new SecurityContext(settings, threadPool.getThreadContext(), cryptoService);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/SecurityContext.java, +    public SecurityContext(Settings settings, ThreadContext threadContext, CryptoService cryptoService) {, +        this.threadContext = threadContext;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Authentication.java, +    private final Version version;, +        this.version = Version.CURRENT;, +        this.version = in.getVersion();, +    public Version getVersion() {, +        return version;, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/Security.java, +        final SecurityContext securityContext = new SecurityContext(settings, threadPool.getThreadContext(), cryptoService);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/SecurityContext.java, +    public SecurityContext(Settings settings, ThreadContext threadContext, CryptoService cryptoService) {, +        this.threadContext = threadContext;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Authentication.java, +    private final Version version;, +        this.version = Version.CURRENT;, +        this.version = in.getVersion();, +    public Version getVersion() {, +        return version;, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/Security.java, +        final SecurityContext securityContext = new SecurityContext(settings, threadPool.getThreadContext(), cryptoService);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/SecurityContext.java, +    public SecurityContext(Settings settings, ThreadContext threadContext, CryptoService cryptoService) {, +        this.threadContext = threadContext;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Authentication.java, +    private final Version version;, +        this.version = Version.CURRENT;, +        this.version = in.getVersion();, +    public Version getVersion() {, +        return version;, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/privilege/IndexPrivilege.java, +    private static final Automaton CREATE_AUTOMATON = patterns("indices:data/write/index*", PutMappingAction.NAME);, +            patterns("indices:data/write/index*", "indices:data/write/update*", PutMappingAction.NAME);, +    private static final Automaton DELETE_AUTOMATON = patterns("indices:data/write/delete*");, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/Security.java, +        final SecurityContext securityContext = new SecurityContext(settings, threadPool.getThreadContext(), cryptoService);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/SecurityContext.java, +    public SecurityContext(Settings settings, ThreadContext threadContext, CryptoService cryptoService) {, +        this.threadContext = threadContext;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Authentication.java, +    private final Version version;, +        this.version = Version.CURRENT;, +        this.version = in.getVersion();, +    public Version getVersion() {, +        return version;, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/privilege/IndexPrivilege.java, +    private static final Automaton CREATE_AUTOMATON = patterns("indices:data/write/index*", PutMappingAction.NAME);, +            patterns("indices:data/write/index*", "indices:data/write/update*", PutMappingAction.NAME);, +    private static final Automaton DELETE_AUTOMATON = patterns("indices:data/write/delete*");, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/store/ReservedRolesStore.java, +import org.elasticsearch.xpack.security.user.KibanaUser;, +                .put(KibanaUser.ROLE_NAME, new RoleDescriptor(KibanaUser.ROLE_NAME, new String[] { "monitor", MonitoringBulkAction.NAME},, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/Security.java, +        final SecurityContext securityContext = new SecurityContext(settings, threadPool.getThreadContext(), cryptoService);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/SecurityContext.java, +    public SecurityContext(Settings settings, ThreadContext threadContext, CryptoService cryptoService) {, +        this.threadContext = threadContext;, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authc/Authentication.java, +    private final Version version;, +        this.version = Version.CURRENT;, +        this.version = in.getVersion();, +    public Version getVersion() {, +        return version;, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/privilege/IndexPrivilege.java, +    private static final Automaton CREATE_AUTOMATON = patterns("indices:data/write/index*", PutMappingAction.NAME);, +            patterns("indices:data/write/index*", "indices:data/write/update*", PutMappingAction.NAME);, +    private static final Automaton DELETE_AUTOMATON = patterns("indices:data/write/delete*");, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/store/ReservedRolesStore.java, +import org.elasticsearch.xpack.security.user.KibanaUser;, +                .put(KibanaUser.ROLE_NAME, new RoleDescriptor(KibanaUser.ROLE_NAME, new String[] { "monitor", MonitoringBulkAction.NAME},, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/transport/SecurityServerTransportInterceptor.java, +import org.elasticsearch.Version;, +import org.elasticsearch.xpack.XPackSettings;, +import org.elasticsearch.xpack.security.user.KibanaUser;, +import org.elasticsearch.xpack.security.user.User;, +    private final boolean reservedRealmEnabled;]