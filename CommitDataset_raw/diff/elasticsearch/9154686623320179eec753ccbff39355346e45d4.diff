[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +import org.elasticsearch.Version;, +        public StoreStatus(DiscoveryNode node, String allocationId, AllocationStatus allocationStatus, Exception storeException) {, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                in.readLong();, +            }, +            if (out.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                out.writeLong(-1L);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +import org.elasticsearch.Version;, +        public StoreStatus(DiscoveryNode node, String allocationId, AllocationStatus allocationStatus, Exception storeException) {, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                in.readLong();, +            }, +            if (out.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                out.writeLong(-1L);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +                            storeStatuses.add(new IndicesShardStoresResponse.StoreStatus(response.getNode(), response.allocationId(), allocationStatus, response.storeException()));, +                return response.storeException() != null || response.allocationId() != null;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +import org.elasticsearch.Version;, +        public StoreStatus(DiscoveryNode node, String allocationId, AllocationStatus allocationStatus, Exception storeException) {, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                in.readLong();, +            }, +            if (out.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                out.writeLong(-1L);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +                            storeStatuses.add(new IndicesShardStoresResponse.StoreStatus(response.getNode(), response.allocationId(), allocationStatus, response.storeException()));, +                return response.storeException() != null || response.allocationId() != null;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +import org.elasticsearch.Version;, +        public StoreStatus(DiscoveryNode node, String allocationId, AllocationStatus allocationStatus, Exception storeException) {, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                in.readLong();, +            }, +            if (out.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                out.writeLong(-1L);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +                            storeStatuses.add(new IndicesShardStoresResponse.StoreStatus(response.getNode(), response.allocationId(), allocationStatus, response.storeException()));, +                return response.storeException() != null || response.allocationId() != null;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +                if (indexMetaData.isIndexUsingShadowReplicas() == false && // see #20650, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +import org.elasticsearch.Version;, +        public StoreStatus(DiscoveryNode node, String allocationId, AllocationStatus allocationStatus, Exception storeException) {, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                in.readLong();, +            }, +            if (out.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                out.writeLong(-1L);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +                            storeStatuses.add(new IndicesShardStoresResponse.StoreStatus(response.getNode(), response.allocationId(), allocationStatus, response.storeException()));, +                return response.storeException() != null || response.allocationId() != null;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +                if (indexMetaData.isIndexUsingShadowReplicas() == false && // see #20650, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +import org.elasticsearch.Version;, +        public StoreStatus(DiscoveryNode node, String allocationId, AllocationStatus allocationStatus, Exception storeException) {, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                in.readLong();, +            }, +            if (out.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                out.writeLong(-1L);, +            }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +                            storeStatuses.add(new IndicesShardStoresResponse.StoreStatus(response.getNode(), response.allocationId(), allocationStatus, response.storeException()));, +                return response.storeException() != null || response.allocationId() != null;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java, +                if (indexMetaData.isIndexUsingShadowReplicas() == false && // see #20650, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java, +import org.elasticsearch.Version;, +        public StoreStatus(DiscoveryNode node, String allocationId, AllocationStatus allocationStatus, Exception storeException) {, +            if (in.getVersion().before(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                // legacy version, +                in.readLong();]