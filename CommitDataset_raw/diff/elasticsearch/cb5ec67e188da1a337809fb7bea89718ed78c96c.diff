[+++ /dev/null, +++ /dev/null, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java, +import org.elasticsearch.painless.action.PainlessExecuteAction;, +++ /dev/null, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java, +import org.elasticsearch.painless.action.PainlessExecuteAction;, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/action/PainlessExecuteAction.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.painless.action;, +, +import org.apache.lucene.analysis.Analyzer;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.IndexWriterConfig;, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreMode;, +import org.apache.lucene.search.Scorer;, +import org.apache.lucene.search.Weight;, +import org.apache.lucene.store.RAMDirectory;, +import org.elasticsearch.Version;, +import org.elasticsearch.action.Action;, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.action.ActionResponse;, +import org.elasticsearch.action.support.ActionFilters;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.action.support.single.shard.SingleShardRequest;, +import org.elasticsearch.action.support.single.shard.TransportSingleShardAction;, +import org.elasticsearch.client.node.NodeClient;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.block.ClusterBlockException;, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +import org.elasticsearch.cluster.routing.ShardsIterator;, +import org.elasticsearch.cluster.service.ClusterService;, +import org.elasticsearch.common.CheckedBiFunction;, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Writeable;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.ConstructingObjectParser;, +import org.elasticsearch.common.xcontent.LoggingDeprecationHandler;, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.common.xcontent.XContentType;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.IndexService;, +import org.elasticsearch.index.mapper.ParsedDocument;, +import org.elasticsearch.index.mapper.SourceToParse;, +import org.elasticsearch.index.query.AbstractQueryBuilder;, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.index.query.QueryShardContext;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.indices.IndicesService;, +import org.elasticsearch.rest.BaseRestHandler;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.action.RestToXContentListener;, +import org.elasticsearch.script.FilterScript;, +import org.elasticsearch.script.ScoreScript;, +import org.elasticsearch.script.Script;, +import org.elasticsearch.script.ScriptContext;, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.ScriptType;, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.transport.TransportService;, +, +import java.io.IOException;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Map;, +import java.util.Objects;, +, +import static org.elasticsearch.action.ValidateActions.addValidationError;]