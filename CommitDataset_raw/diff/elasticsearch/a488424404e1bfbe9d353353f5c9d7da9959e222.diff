[+++ b/pom.xml, +            <version>1.6</version>, +++ b/pom.xml, +            <version>1.6</version>, +++ b/src/main/java/org/elasticsearch/index/analysis/phonetic/PhoneticTokenFilterFactory.java, +import org.apache.commons.codec.language.bm.BeiderMorseEncoder;, +import org.apache.commons.codec.language.bm.NameType;, +import org.apache.commons.codec.language.bm.RuleType;, +        } else if ("bm".equalsIgnoreCase(encoder) || "beider_morse".equalsIgnoreCase(encoder)) {, +            BeiderMorseEncoder bm = new BeiderMorseEncoder();, +            String ruleType = settings.get("rule_type", "approx");, +            if ("approx".equalsIgnoreCase(ruleType)) {, +                bm.setRuleType(RuleType.APPROX);, +            } else if ("exact".equalsIgnoreCase(ruleType)) {, +                bm.setRuleType(RuleType.EXACT);, +            } else {, +                throw new ElasticSearchIllegalArgumentException("No matching rule type [" + ruleType + "] for beider morse encoder");, +            }, +            String nameType = settings.get("name_type", "generic");, +            if ("GENERIC".equalsIgnoreCase(nameType)) {, +                bm.setNameType(NameType.GENERIC);, +            } else if ("ASHKENAZI".equalsIgnoreCase(nameType)) {, +                bm.setNameType(NameType.ASHKENAZI);, +            } else if ("SEPHARDIC".equalsIgnoreCase(nameType)) {, +                bm.setNameType(NameType.SEPHARDIC);, +            }, +            this.encoder = bm;]