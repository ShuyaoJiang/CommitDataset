[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateSettings(transientToApply, transientSettings, transientUpdates, "transient", false);, +        changed |= clusterSettings.updateSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent", false);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateSettings(transientToApply, transientSettings, transientUpdates, "transient", false);, +        changed |= clusterSettings.updateSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent", false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.index.IndexNotFoundException;, +                    for (String index : openIndices) {, +                        IndexMetaData indexMetaData = metaDataBuilder.get(index);, +                        if (indexMetaData == null) {, +                            throw new IndexNotFoundException(index);, +                        }, +                        Settings.Builder updates = Settings.builder();, +                        Settings.Builder indexSettings = Settings.builder().put(indexMetaData.getSettings());, +                        if (indexScopeSettings.updateSettings(openSettings, indexSettings, updates, index, false)) {, +                            metaDataBuilder.put(IndexMetaData.builder(indexMetaData).settings(indexSettings));, +                        }, +                    }, +                    for (String index : closeIndices) {, +                        IndexMetaData indexMetaData = metaDataBuilder.get(index);, +                        if (indexMetaData == null) {, +                            throw new IndexNotFoundException(index);, +                        }, +                        Settings.Builder updates = Settings.builder();, +                        Settings.Builder indexSettings = Settings.builder().put(indexMetaData.getSettings());, +                        if (indexScopeSettings.updateSettings(closedSettings, indexSettings, updates, index, true)) {, +                            metaDataBuilder.put(IndexMetaData.builder(indexMetaData).settings(indexSettings));, +                        }, +                    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateSettings(transientToApply, transientSettings, transientUpdates, "transient", false);, +        changed |= clusterSettings.updateSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent", false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.index.IndexNotFoundException;, +                    for (String index : openIndices) {, +                        IndexMetaData indexMetaData = metaDataBuilder.get(index);, +                        if (indexMetaData == null) {, +                            throw new IndexNotFoundException(index);, +                        }, +                        Settings.Builder updates = Settings.builder();, +                        Settings.Builder indexSettings = Settings.builder().put(indexMetaData.getSettings());, +                        if (indexScopeSettings.updateSettings(openSettings, indexSettings, updates, index, false)) {, +                            metaDataBuilder.put(IndexMetaData.builder(indexMetaData).settings(indexSettings));, +                        }, +                    }, +                    for (String index : closeIndices) {, +                        IndexMetaData indexMetaData = metaDataBuilder.get(index);, +                        if (indexMetaData == null) {, +                            throw new IndexNotFoundException(index);, +                        }, +                        Settings.Builder updates = Settings.builder();, +                        Settings.Builder indexSettings = Settings.builder().put(indexMetaData.getSettings());, +                        if (indexScopeSettings.updateSettings(closedSettings, indexSettings, updates, index, true)) {, +                            metaDataBuilder.put(IndexMetaData.builder(indexMetaData).settings(indexSettings));, +                        }, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +    /**, +     * Updates a target settings builder with new, updated or deleted settings from a given settings builder., +     * @param toApply the new settings to apply, +     * @param target the target settings builder that the updates are applied to. All keys that have explicit null value in toApply will be removed from this builder, +     * @param updates a settings builder that holds all updates applied to target, +     * @param type a free text string to allow better exceptions messages, +     * @param all if <code>true</code> all settings are updated otherwise only dynamic settings are updated. if set to <code>false</code> and a non-dynamic setting is updated an exception is thrown, +     * @return <code>true</code> if the target has changed otherwise <code>false</code>, +     */, +    public boolean updateSettings(Settings toApply, Settings.Builder target, Settings.Builder updates, String type, boolean all) {, +            } else if ((all && get(entry.getKey()) != null) || hasDynamicSetting(entry.getKey())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateSettings(transientToApply, transientSettings, transientUpdates, "transient", false);, +        changed |= clusterSettings.updateSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent", false);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.index.IndexNotFoundException;, +                    for (String index : openIndices) {, +                        IndexMetaData indexMetaData = metaDataBuilder.get(index);, +                        if (indexMetaData == null) {, +                            throw new IndexNotFoundException(index);, +                        }, +                        Settings.Builder updates = Settings.builder();, +                        Settings.Builder indexSettings = Settings.builder().put(indexMetaData.getSettings());, +                        if (indexScopeSettings.updateSettings(openSettings, indexSettings, updates, index, false)) {, +                            metaDataBuilder.put(IndexMetaData.builder(indexMetaData).settings(indexSettings));, +                        }, +                    }, +                    for (String index : closeIndices) {, +                        IndexMetaData indexMetaData = metaDataBuilder.get(index);, +                        if (indexMetaData == null) {, +                            throw new IndexNotFoundException(index);, +                        }, +                        Settings.Builder updates = Settings.builder();, +                        Settings.Builder indexSettings = Settings.builder().put(indexMetaData.getSettings());, +                        if (indexScopeSettings.updateSettings(closedSettings, indexSettings, updates, index, true)) {, +                            metaDataBuilder.put(IndexMetaData.builder(indexMetaData).settings(indexSettings));, +                        }, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +    /**, +     * Updates a target settings builder with new, updated or deleted settings from a given settings builder., +     * @param toApply the new settings to apply]