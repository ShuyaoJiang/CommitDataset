[+++ b/.idea/dictionaries/kimchy.xml, +      <w>versioning</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>versioning</w>, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.TermPositions;, +import org.elasticsearch.common.lucene.uid.UidField;, +            doc.add(new UidField("_uid", Long.toString(i), i));, +++ b/.idea/dictionaries/kimchy.xml, +      <w>versioning</w>, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.TermPositions;, +import org.elasticsearch.common.lucene.uid.UidField;, +            doc.add(new UidField("_uid", Long.toString(i), i));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +++ b/.idea/dictionaries/kimchy.xml, +      <w>versioning</w>, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.TermPositions;, +import org.elasticsearch.common.lucene.uid.UidField;, +            doc.add(new UidField("_uid", Long.toString(i), i));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +     * The version of the action., +     */, +    public long version() {, +        if (failure != null) {, +            return -1;, +        }, +        if (response instanceof IndexResponse) {, +            return ((IndexResponse) response).version();, +        } else if (response instanceof DeleteResponse) {, +            return ((DeleteResponse) response).version();, +        }, +        return -1;, +    }, +, +    /**, +++ b/.idea/dictionaries/kimchy.xml, +      <w>versioning</w>, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.TermPositions;, +import org.elasticsearch.common.lucene.uid.UidField;, +            doc.add(new UidField("_uid", Long.toString(i), i));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +     * The version of the action., +     */, +    public long version() {, +        if (failure != null) {, +            return -1;, +        }, +        if (response instanceof IndexResponse) {, +            return ((IndexResponse) response).version();, +        } else if (response instanceof DeleteResponse) {, +            return ((DeleteResponse) response).version();, +        }, +        return -1;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +            long version = 0;, +                    } else if ("_version".equals(currentFieldName)) {, +                        version = parser.longValue();, +                        add(new IndexRequest(index, type, id).routing(routing).parent(parent).version(version), +                        add(new IndexRequest(index, type, id).routing(routing).parent(parent).version(version), +                    add(new IndexRequest(index, type, id).routing(routing).parent(parent).version(version), +++ b/.idea/dictionaries/kimchy.xml, +      <w>versioning</w>, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.TermPositions;, +import org.elasticsearch.common.lucene.uid.UidField;, +            doc.add(new UidField("_uid", Long.toString(i), i));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +                engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +                        engine.create(new Engine.Create(new Term("_id", sId), pDoc));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +     * The version of the action.]