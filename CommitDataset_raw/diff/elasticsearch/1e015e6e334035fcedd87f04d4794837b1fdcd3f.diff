[+++ b/docs/reference/testing/testing-framework.asciidoc, +By default the tests are run with unique cluster per test suite. Of course all indices and templates are deleted between each test. However, sometimes you need to start a new cluster for each test - for example, if you load a certain plugin, but you do not want to load it for every test., +@ClusterScope(scope=TEST, numNodes=1), +The above sample configures the test to use a new cluster for each test method. The default scope is `SUITE` (one cluster for all test methods in the test). The `numNodes` settings allows you to only start a certain number of nodes, which can speed up test execution, as starting a new node is a costly and time consuming operation and might not be needed for this test., +++ b/docs/reference/testing/testing-framework.asciidoc, +By default the tests are run with unique cluster per test suite. Of course all indices and templates are deleted between each test. However, sometimes you need to start a new cluster for each test - for example, if you load a certain plugin, but you do not want to load it for every test., +@ClusterScope(scope=TEST, numNodes=1), +The above sample configures the test to use a new cluster for each test method. The default scope is `SUITE` (one cluster for all test methods in the test). The `numNodes` settings allows you to only start a certain number of nodes, which can speed up test execution, as starting a new node is a costly and time consuming operation and might not be needed for this test., +++ b/src/test/java/org/elasticsearch/network/DirectBufferNetworkTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true), +            .put(super.nodeSettings(nodeOrdinal)).build();, +    }, +, +++ b/docs/reference/testing/testing-framework.asciidoc, +By default the tests are run with unique cluster per test suite. Of course all indices and templates are deleted between each test. However, sometimes you need to start a new cluster for each test - for example, if you load a certain plugin, but you do not want to load it for every test., +@ClusterScope(scope=TEST, numNodes=1), +The above sample configures the test to use a new cluster for each test method. The default scope is `SUITE` (one cluster for all test methods in the test). The `numNodes` settings allows you to only start a certain number of nodes, which can speed up test execution, as starting a new node is a costly and time consuming operation and might not be needed for this test., +++ b/src/test/java/org/elasticsearch/network/DirectBufferNetworkTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true), +            .put(super.nodeSettings(nodeOrdinal)).build();, +    }, +, +++ b/src/test/java/org/elasticsearch/rest/CorsRegexDefaultTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true), +            .put(super.nodeSettings(nodeOrdinal)).build();, +    }, +, +++ b/docs/reference/testing/testing-framework.asciidoc, +By default the tests are run with unique cluster per test suite. Of course all indices and templates are deleted between each test. However, sometimes you need to start a new cluster for each test - for example, if you load a certain plugin, but you do not want to load it for every test., +@ClusterScope(scope=TEST, numNodes=1), +The above sample configures the test to use a new cluster for each test method. The default scope is `SUITE` (one cluster for all test methods in the test). The `numNodes` settings allows you to only start a certain number of nodes, which can speed up test execution, as starting a new node is a costly and time consuming operation and might not be needed for this test., +++ b/src/test/java/org/elasticsearch/network/DirectBufferNetworkTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true), +            .put(super.nodeSettings(nodeOrdinal)).build();, +    }, +, +++ b/src/test/java/org/elasticsearch/rest/CorsRegexDefaultTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true), +            .put(super.nodeSettings(nodeOrdinal)).build();, +    }, +, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java, + * tests against a JVM private Elasticsearch Cluster. The test class supports 2 different, + * <li>{@link Scope#SUITE} - uses a cluster shared across all test methods in the same suite</li>, + * The most common test scope is {@link Scope#SUITE} which shares a cluster per test suite., + * If the test methods need specific node settings or change persistent and/or transient cluster settings {@link Scope#TEST}, + * should be used. To configure a scope for the test cluster the {@link ClusterScope} annotation, + * If no {@link ClusterScope} annotation is present on an integration test the default scope is {@link Scope#SUITE}, + * determined at random and can change across tests. The {@link ClusterScope} allows configuring the initial number of nodes , + * that are created before the tests start., +     * By default if no {@link ClusterScope} annotation is present {@link org.elasticsearch.test.ElasticsearchIntegrationTest.Scope#SUITE} is used, +         * Returns the scope. {@link org.elasticsearch.test.ElasticsearchIntegrationTest.Scope#SUITE} is default., +        Scope scope() default Scope.SUITE;, +        // if we are not annotated assume suite!, +        return annotation == null ? Scope.SUITE : annotation.scope();, +        , +++ b/docs/reference/testing/testing-framework.asciidoc, +By default the tests are run with unique cluster per test suite. Of course all indices and templates are deleted between each test. However, sometimes you need to start a new cluster for each test - for example, if you load a certain plugin, but you do not want to load it for every test., +@ClusterScope(scope=TEST, numNodes=1), +The above sample configures the test to use a new cluster for each test method. The default scope is `SUITE` (one cluster for all test methods in the test). The `numNodes` settings allows you to only start a certain number of nodes, which can speed up test execution, as starting a new node is a costly and time consuming operation and might not be needed for this test., +++ b/src/test/java/org/elasticsearch/network/DirectBufferNetworkTests.java, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +    @Override, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true), +            .put(super.nodeSettings(nodeOrdinal)).build();, +    }]