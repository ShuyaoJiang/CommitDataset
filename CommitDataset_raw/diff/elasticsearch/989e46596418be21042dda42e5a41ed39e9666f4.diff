[+++ b/plugins/repository-gcs/build.gradle, +forbiddenApisTest {, +  // we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +++ b/plugins/repository-gcs/build.gradle, +forbiddenApisTest {, +  // we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +++ b/plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageFixture.java, +        final InetSocketAddress socketAddress = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);, +            final Path workingDirectory = workingDir(args[0]);, +    @SuppressForbidden(reason = "Paths#get is fine - we don't have environment here"), +    private static Path workingDir(final String dir) {, +        return Paths.get(dir);, +    }, +, +++ b/plugins/repository-gcs/build.gradle, +forbiddenApisTest {, +  // we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +++ b/plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageFixture.java, +        final InetSocketAddress socketAddress = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);, +            final Path workingDirectory = workingDir(args[0]);, +    @SuppressForbidden(reason = "Paths#get is fine - we don't have environment here"), +    private static Path workingDir(final String dir) {, +        return Paths.get(dir);, +    }, +, +++ b/plugins/repository-gcs/src/test/resources/rest-api-spec/test/repository_gcs/10_basic.yml, +  # Get repository, +  - do:, +      snapshot.get_repository:, +        repository: repository, +, +  - match: {repository.settings.bucket : "bucket_test"}, +  - match: {repository.settings.client : "integration_test"}, +, +++ b/plugins/repository-gcs/build.gradle, +forbiddenApisTest {, +  // we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +++ b/plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageFixture.java, +        final InetSocketAddress socketAddress = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);, +            final Path workingDirectory = workingDir(args[0]);, +    @SuppressForbidden(reason = "Paths#get is fine - we don't have environment here"), +    private static Path workingDir(final String dir) {, +        return Paths.get(dir);, +    }, +, +++ b/plugins/repository-gcs/src/test/resources/rest-api-spec/test/repository_gcs/10_basic.yml, +  # Get repository, +  - do:, +      snapshot.get_repository:, +        repository: repository, +, +  - match: {repository.settings.bucket : "bucket_test"}, +  - match: {repository.settings.client : "integration_test"}, +, +++ b/plugins/repository-s3/build.gradle, +import org.elasticsearch.gradle.test.AntFixture, +, +forbiddenApisTest {, +  // we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}, +, +/** A task to start the AmazonS3Fixture which emulates a S3 service **/, +task s3Fixture(type: AntFixture) {, +  dependsOn compileTestJava, +  env 'CLASSPATH', "${ -> project.sourceSets.test.runtimeClasspath.asPath }", +  executable = new File(project.runtimeJavaHome, 'bin/java'), +  args 'org.elasticsearch.repositories.s3.AmazonS3Fixture', baseDir, 'bucket_test', +}, +, +  dependsOn s3Fixture, +, +  keystoreSetting 's3.client.integration_test.access_key', "s3_integration_test_access_key", +  keystoreSetting 's3.client.integration_test.secret_key', "s3_integration_test_secret_key", +, +  /* Use a closure on the string to delay evaluation until tests are executed */, +  setting 's3.client.integration_test.endpoint', "http://${ -> s3Fixture.addressAndPort }", +++ b/plugins/repository-gcs/build.gradle, +forbiddenApisTest {, +  // we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage, +  bundledSignatures -= 'jdk-non-portable', +  bundledSignatures += 'jdk-internal', +}]