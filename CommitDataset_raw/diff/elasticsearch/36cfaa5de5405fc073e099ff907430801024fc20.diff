[+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/extractor/scroll/ScrollDataExtractor.java, +        Optional<InputStream> stream = tryNextStream();, +    private Optional<InputStream> tryNextStream() throws IOException {, +        try {, +            return scrollId == null ?, +                Optional.ofNullable(initScroll(context.start)) : Optional.ofNullable(continueScroll());, +        } catch (Exception e) {, +            // In case of error make sure we clear the scroll context, +            clearScroll();, +            throw e;, +        }, +    }, +, +        scrollId = searchResponse.getScrollId();, +, +            clearScroll();, +                            clearScroll();, +        clearScroll();, +    private void clearScroll() {, +            scrollId = null;, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/extractor/scroll/ScrollDataExtractor.java, +        Optional<InputStream> stream = tryNextStream();, +    private Optional<InputStream> tryNextStream() throws IOException {, +        try {, +            return scrollId == null ?, +                Optional.ofNullable(initScroll(context.start)) : Optional.ofNullable(continueScroll());, +        } catch (Exception e) {, +            // In case of error make sure we clear the scroll context, +            clearScroll();, +            throw e;, +        }, +    }, +, +        scrollId = searchResponse.getScrollId();, +, +            clearScroll();, +                            clearScroll();, +        clearScroll();, +    private void clearScroll() {, +            scrollId = null;, +++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/datafeed/extractor/scroll/ScrollDataExtractorTests.java, +, +        List<String> capturedClearScrollIds = getCapturedClearScrollIds();, +        assertThat(capturedClearScrollIds.size(), equalTo(1));, +, +        List<String> capturedClearScrollIds = getCapturedClearScrollIds();, +        // We should clear the scroll context twice: once for the first search when we retry, +        // and once after the retry where we'll have an exception, +        assertThat(capturedClearScrollIds.size(), equalTo(2));, +, +        List<String> capturedClearScrollIds = getCapturedClearScrollIds();, +        assertThat(capturedClearScrollIds.size(), equalTo(2));, +, +        List<String> capturedClearScrollIds = getCapturedClearScrollIds();, +        assertThat(capturedClearScrollIds.size(), equalTo(2));, +        // We should clear the scroll context twice: once for the first search when we retry, +        // and once after the retry where we'll have an exception, +        assertThat(capturedClearScrollIds.size(), equalTo(2));, +        when(searchResponse.getScrollId()).thenReturn(randomAlphaOfLength(1000));, +        when(searchResponse.getScrollId()).thenReturn(randomAlphaOfLength(1000));]