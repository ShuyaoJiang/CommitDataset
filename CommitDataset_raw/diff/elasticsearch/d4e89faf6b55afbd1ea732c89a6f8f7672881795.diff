[+++ b/plugins/river/twitter/src/main/java/org/elasticsearch/river/twitter/TwitterRiver.java, +import twitter4j.conf.ConfigurationBuilder;, +        String oauthConsumerKey = null;, +        String oauthConsumerSecret = null;, +        String oauthAccessToken = null;, +        String oauthAccessTokenSecret = null;, +        , +            if(twitterSettings.containsKey("oauthConsumerKey")){, +                oauthConsumerKey = XContentMapValues.nodeStringValue(twitterSettings.get("oauthConsumerKey"), null);, +            }, +            if(twitterSettings.containsKey("oauthConsumerSecret")){, +                oauthConsumerSecret = XContentMapValues.nodeStringValue(twitterSettings.get("oauthConsumerSecret"), null);, +            }, +            if(twitterSettings.containsKey("oauthAccessToken")){, +                oauthAccessToken = XContentMapValues.nodeStringValue(twitterSettings.get("oauthAccessToken"), null);, +            }, +            if(twitterSettings.containsKey("oauthAccessTokenSecret")){, +                oauthAccessTokenSecret = XContentMapValues.nodeStringValue(twitterSettings.get("oauthAccessTokenSecret"), null);, +            }            , +        if (oauthAccessToken != null && oauthConsumerKey != null && oauthConsumerSecret != null && oauthAccessTokenSecret != null) {, +            ConfigurationBuilder cb = new ConfigurationBuilder();, +            cb.setDebugEnabled(true), +                    .setOAuthConsumerKey(oauthConsumerKey), +                    .setOAuthConsumerSecret(oauthConsumerSecret), +                    .setOAuthAccessToken(oauthAccessToken), +                    .setOAuthAccessTokenSecret(oauthAccessTokenSecret);, +            stream = new TwitterStreamFactory(cb.build()).getInstance();, +        } else {, +        }]