[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        ClusterState.Builder builder = ClusterState.builder(currentState.getClusterName());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        ClusterState.Builder builder = ClusterState.builder(currentState.getClusterName());, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +    private final ClusterName clusterName;, +, +        this(state.clusterName, version, state.metaData(), state.routingTable(), state.nodes(), state.blocks(), state.customs());, +    public ClusterState(ClusterName clusterName, long version, MetaData metaData, RoutingTable routingTable, DiscoveryNodes nodes, ClusterBlocks blocks, ImmutableOpenMap<String, Custom> customs) {, +        this.clusterName = clusterName;, +    public ClusterName getClusterName() {, +        return this.clusterName;, +    }, +, +    public static Builder builder(ClusterName clusterName) {, +        return new Builder(clusterName);, +        private final ClusterName clusterName;, +            this.clusterName = state.clusterName;, +        public Builder(ClusterName clusterName) {, +            customs = ImmutableOpenMap.builder();, +            this.clusterName = clusterName;, +        }, +, +            return new ClusterState(clusterName, version, metaData, routingTable, nodes, blocks, customs.build());, +            if (out.getVersion().onOrAfter(Version.V_1_1_1)) {, +                out.writeBoolean(state.clusterName != null);, +                if (state.clusterName != null) {, +                    state.clusterName.writeTo(out);, +                }, +            }, +            ClusterName clusterName = null;, +            if (in.getVersion().onOrAfter(Version.V_1_1_1)) {, +                // it might be null even if it comes from a >= 1.1.1 node since it's origin might be an older node, +                if (in.readBoolean()) {, +                    clusterName = ClusterName.readClusterName(in);, +                }, +            }, +            Builder builder = new Builder(clusterName);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        ClusterState.Builder builder = ClusterState.builder(currentState.getClusterName());, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +    private final ClusterName clusterName;, +, +        this(state.clusterName, version, state.metaData(), state.routingTable(), state.nodes(), state.blocks(), state.customs());, +    public ClusterState(ClusterName clusterName, long version, MetaData metaData, RoutingTable routingTable, DiscoveryNodes nodes, ClusterBlocks blocks, ImmutableOpenMap<String, Custom> customs) {, +        this.clusterName = clusterName;, +    public ClusterName getClusterName() {, +        return this.clusterName;, +    }, +, +    public static Builder builder(ClusterName clusterName) {, +        return new Builder(clusterName);, +        private final ClusterName clusterName;, +            this.clusterName = state.clusterName;, +        public Builder(ClusterName clusterName) {, +            customs = ImmutableOpenMap.builder();, +            this.clusterName = clusterName;, +        }, +, +            return new ClusterState(clusterName, version, metaData, routingTable, nodes, blocks, customs.build());, +            if (out.getVersion().onOrAfter(Version.V_1_1_1)) {, +                out.writeBoolean(state.clusterName != null);, +                if (state.clusterName != null) {, +                    state.clusterName.writeTo(out);, +                }, +            }, +            ClusterName clusterName = null;, +            if (in.getVersion().onOrAfter(Version.V_1_1_1)) {, +                // it might be null even if it comes from a >= 1.1.1 node since it's origin might be an older node, +                if (in.readBoolean()) {, +                    clusterName = ClusterName.readClusterName(in);, +                }, +            }, +            Builder builder = new Builder(clusterName);, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +    private volatile ClusterState clusterState;, +                                  NodeSettingsService nodeSettingsService, ThreadPool threadPool, ClusterName clusterName) {, +        this.clusterState = ClusterState.builder(clusterName).build();, +        this.clusterState = ClusterState.builder(clusterState).blocks(initialBlocks).build();, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        ClusterState.Builder builder = ClusterState.builder(currentState.getClusterName());, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +    private final ClusterName clusterName;, +, +        this(state.clusterName, version, state.metaData(), state.routingTable(), state.nodes(), state.blocks(), state.customs());, +    public ClusterState(ClusterName clusterName, long version, MetaData metaData, RoutingTable routingTable, DiscoveryNodes nodes, ClusterBlocks blocks, ImmutableOpenMap<String, Custom> customs) {, +        this.clusterName = clusterName;, +    public ClusterName getClusterName() {, +        return this.clusterName;, +    }, +, +    public static Builder builder(ClusterName clusterName) {, +        return new Builder(clusterName);, +        private final ClusterName clusterName;, +            this.clusterName = state.clusterName;, +        public Builder(ClusterName clusterName) {, +            customs = ImmutableOpenMap.builder();, +            this.clusterName = clusterName;, +        }, +]