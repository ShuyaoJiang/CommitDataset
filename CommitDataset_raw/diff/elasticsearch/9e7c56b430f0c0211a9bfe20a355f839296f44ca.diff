[+++ b/core/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/core/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            clusterService.submitStateUpdateTask("cluster_health (wait_for_events [" + request.waitForEvents() + "])", request.waitForEvents(), new ProcessedClusterStateUpdateTask() {, +++ b/core/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            clusterService.submitStateUpdateTask("cluster_health (wait_for_events [" + request.waitForEvents() + "])", request.waitForEvents(), new ProcessedClusterStateUpdateTask() {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    if (arg.startsWith("-D") || arg.startsWith("-d") || arg.startsWith("-p")) {, +                        throw new IllegalArgumentException(, +                                "Parameter [" + arg + "] starting with \"-D\", \"-d\" or \"-p\" must be before any parameters starting with --", +                        );, +                    } else {, +                }, +++ b/core/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            clusterService.submitStateUpdateTask("cluster_health (wait_for_events [" + request.waitForEvents() + "])", request.waitForEvents(), new ProcessedClusterStateUpdateTask() {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    if (arg.startsWith("-D") || arg.startsWith("-d") || arg.startsWith("-p")) {, +                        throw new IllegalArgumentException(, +                                "Parameter [" + arg + "] starting with \"-D\", \"-d\" or \"-p\" must be before any parameters starting with --", +                        );, +                    } else {, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/AckedClusterStateUpdateTask.java, +public abstract class AckedClusterStateUpdateTask<Response> extends TimeoutClusterStateUpdateTask {, +    @Override, +    public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {, +, +    }, +, +++ b/core/pom.xml, +            <groupId>org.apache.lucene</groupId>, +            <artifactId>lucene-expressions</artifactId>, +            <optional>true</optional>, +        </dependency>, +        <dependency>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +            clusterService.submitStateUpdateTask("cluster_health (wait_for_events [" + request.waitForEvents() + "])", request.waitForEvents(), new ProcessedClusterStateUpdateTask() {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCLIParser.java, +                    if (arg.startsWith("-D") || arg.startsWith("-d") || arg.startsWith("-p")) {, +                        throw new IllegalArgumentException(, +                                "Parameter [" + arg + "] starting with \"-D\", \"-d\" or \"-p\" must be before any parameters starting with --", +                        );, +                    } else {, +                }, +++ b/core/src/main/java/org/elasticsearch/cluster/AckedClusterStateUpdateTask.java, +public abstract class AckedClusterStateUpdateTask<Response> extends TimeoutClusterStateUpdateTask {, +    @Override, +    public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {, +, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterStateNonMasterUpdateTask.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.cluster;, +, +/**, + * This is a marker interface to indicate that the task should be executed, + * even if the current node is not a master., + */, +public abstract class ClusterStateNonMasterUpdateTask extends ClusterStateUpdateTask {]