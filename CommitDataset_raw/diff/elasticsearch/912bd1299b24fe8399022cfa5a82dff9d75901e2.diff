[+++ b/src/main/java/org/elasticsearch/watcher/WatcherBuild.java, +        String versionName = "NA";, +            versionName = props.getProperty("version", "NA");, +        CURRENT = new WatcherBuild(versionName, hash, hashShort, timestamp);, +    private final String versionName;, +    WatcherBuild(String versionName, String hash, String hashShort, String timestamp) {, +        this.versionName = versionName;, +    public String versionName() {, +        return versionName;, +    }, +, +        if (!versionName.equals(that.versionName)) return false;, +        result = 31 * result + versionName.hashCode();, +        String versionName = in.readString();, +        return new WatcherBuild(versionName, hash, hashShort, timestamp);, +        out.writeString(build.versionName);, +        out.writeString(build.hash);, +        out.writeString(build.hashShort);, +        out.writeString(build.timestamp);, +++ b/src/main/java/org/elasticsearch/watcher/WatcherBuild.java, +        String versionName = "NA";, +            versionName = props.getProperty("version", "NA");, +        CURRENT = new WatcherBuild(versionName, hash, hashShort, timestamp);, +    private final String versionName;, +    WatcherBuild(String versionName, String hash, String hashShort, String timestamp) {, +        this.versionName = versionName;, +    public String versionName() {, +        return versionName;, +    }, +, +        if (!versionName.equals(that.versionName)) return false;, +        result = 31 * result + versionName.hashCode();, +        String versionName = in.readString();, +        return new WatcherBuild(versionName, hash, hashShort, timestamp);, +        out.writeString(build.versionName);, +        out.writeString(build.hash);, +        out.writeString(build.hashShort);, +        out.writeString(build.timestamp);, +++ b/src/main/java/org/elasticsearch/watcher/rest/action/RestWatcherInfoAction.java, +                        .field("name", watcherStatsResponse.getBuild().versionName())]