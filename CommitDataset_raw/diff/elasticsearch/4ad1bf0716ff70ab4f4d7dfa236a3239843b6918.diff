[+++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      , +      try (TokenStream ts = queryAnalyzer.tokenStream("", key.toString())) {, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      , +      try (TokenStream ts = queryAnalyzer.tokenStream("", key.toString())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/core/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +      , +      try (TokenStream ts = queryAnalyzer.tokenStream("", key.toString())) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable ImmutableMap<String, String> serviceAttributes, @Nullable Settings settings,, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +            for (SnapshotsInProgress.ShardSnapshotStatus status : entry.shards().values()) {, +                if (status.nodeId() != null) {, +                    nodesIds.add(status.nodeId());, +                for (ImmutableMap.Entry<ShardId, SnapshotsInProgress.ShardSnapshotStatus> shardEntry : entry.shards().entrySet()) {, +                    SnapshotsInProgress.ShardSnapshotStatus status = shardEntry.getValue();, +                                SnapshotIndexShardStatus shardStatus = shardStatues.get(shardEntry.getKey());, +                    switch (shardEntry.getValue().state()) {, +                            throw new IllegalArgumentException("Unknown snapshot state " + shardEntry.getValue().state());, +                    SnapshotIndexShardStatus shardStatus = new SnapshotIndexShardStatus(shardEntry.getKey(), stage);, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }]