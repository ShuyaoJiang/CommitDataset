[+++ b/distribution/docker/build.gradle, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} /opt/, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId) || "ingest-user-agent".equals(pluginId)) {, +            throw new UserException(, +                    ExitCodes.OK,, +                    "[" + pluginId + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId) || "ingest-user-agent".equals(pluginId)) {, +            throw new UserException(, +                    ExitCodes.OK,, +                    "[" + pluginId + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +import org.elasticsearch.core.internal.io.IOUtils;, +            /*, +             * This is special case handling for ingest-geoip and ingest-user-agent since they are modules now but could have been installed, +             * from a previous when it was a plugin., +             */, +            if ("ingest-geoip".equals(pluginName) || "ingest-user-agent".equals(pluginName)) {, +                        "[" + pluginName + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId) || "ingest-user-agent".equals(pluginId)) {, +            throw new UserException(, +                    ExitCodes.OK,, +                    "[" + pluginId + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +import org.elasticsearch.core.internal.io.IOUtils;, +            /*, +             * This is special case handling for ingest-geoip and ingest-user-agent since they are modules now but could have been installed, +             * from a previous when it was a plugin., +             */, +            if ("ingest-geoip".equals(pluginName) || "ingest-user-agent".equals(pluginName)) {, +                        "[" + pluginName + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +    public void testInstallIngestGeoIp() throws IOException {, +        runInstallIngestGeoIpOrIngestUserAgentTest("ingest-geoip");, +    }, +, +    public void testInstallIngestUserAgent() throws IOException {, +        runInstallIngestGeoIpOrIngestUserAgentTest("ingest-user-agent");, +    }, +, +    private void runInstallIngestGeoIpOrIngestUserAgentTest(final String pluginId) throws IOException {, +        assert "ingest-geoip".equals(pluginId) || "ingest-user-agent".equals(pluginId) : pluginId;, +                expectThrows(UserException.class, () -> new InstallPluginCommand().execute(terminal, pluginId, false, environment));, +                        "[" + pluginId + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch")));, +, +++ b/distribution/docker/build.gradle, +++ b/distribution/docker/src/docker/Dockerfile, +COPY ${elasticsearch} /opt/, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, +        if ("ingest-geoip".equals(pluginId) || "ingest-user-agent".equals(pluginId)) {, +            throw new UserException(, +                    ExitCodes.OK,, +                    "[" + pluginId + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java, +import org.elasticsearch.core.internal.io.IOUtils;, +            /*, +             * This is special case handling for ingest-geoip and ingest-user-agent since they are modules now but could have been installed, +             * from a previous when it was a plugin., +             */, +            if ("ingest-geoip".equals(pluginName) || "ingest-user-agent".equals(pluginName)) {, +                        "[" + pluginName + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch");, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +    public void testInstallIngestGeoIp() throws IOException {, +        runInstallIngestGeoIpOrIngestUserAgentTest("ingest-geoip");, +    }, +, +    public void testInstallIngestUserAgent() throws IOException {, +        runInstallIngestGeoIpOrIngestUserAgentTest("ingest-user-agent");, +    }, +, +    private void runInstallIngestGeoIpOrIngestUserAgentTest(final String pluginId) throws IOException {, +        assert "ingest-geoip".equals(pluginId) || "ingest-user-agent".equals(pluginId) : pluginId;, +                expectThrows(UserException.class, () -> new InstallPluginCommand().execute(terminal, pluginId, false, environment));, +                        "[" + pluginId + "] is no longer a plugin but instead a module packaged with this distribution of Elasticsearch")));, +, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java, +        runTestRemoveIngestGeoIpOrIngestUserAgent("ingest-geoip");, +    }, +, +    /**, +     * The ingest-user-agent plugin receives special handling because we have re-packaged it as a module; this test ensures that we are, +     * still able to uninstall an old installation of ingest-user-agent., +     *, +     * @throws Exception if an exception is thrown creating or removing the plugin, +     */, +    public void testRemoveIngestUserAgent() throws Exception {, +        runTestRemoveIngestGeoIpOrIngestUserAgent("ingest-user-agent");]