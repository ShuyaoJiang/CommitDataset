[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/cache/filter/IndicesNodeFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.threadpool.ThreadPool;, +import java.util.concurrent.TimeUnit;, +    @Inject public IndicesNodeFilterCache(Settings settings, ThreadPool threadPool) {, +        TimeValue catchupTime = componentSettings.getAsTime("catchup", TimeValue.timeValueSeconds(10));, +                .catchup(threadPool.scheduler(), catchupTime.millis(), TimeUnit.MILLISECONDS), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/cache/filter/IndicesNodeFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.threadpool.ThreadPool;, +import java.util.concurrent.TimeUnit;, +    @Inject public IndicesNodeFilterCache(Settings settings, ThreadPool threadPool) {, +        TimeValue catchupTime = componentSettings.getAsTime("catchup", TimeValue.timeValueSeconds(10));, +                .catchup(threadPool.scheduler(), catchupTime.millis(), TimeUnit.MILLISECONDS), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +    public ScheduledExecutorService scheduler() {, +        return this.scheduler;, +    }, +]