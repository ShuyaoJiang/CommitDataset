[+++ b/.idea/dictionaries/kimchy.xml, +      <w>hashtag</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>hashtag</w>, +++ b/.idea/modules/plugin-river-twitter.iml, +          <root url="jar://$GRADLE_REPOSITORY$/org.twitter4j/twitter4j-core/jars/twitter4j-core-2.1.10.jar!/" />, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/twitter4j/2.1.10/twitter4j-core/twitter4j-core-2.1.10-sources.jar!/" />, +        </SOURCES>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>hashtag</w>, +++ b/.idea/modules/plugin-river-twitter.iml, +          <root url="jar://$GRADLE_REPOSITORY$/org.twitter4j/twitter4j-core/jars/twitter4j-core-2.1.10.jar!/" />, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/twitter4j/2.1.10/twitter4j-core/twitter4j-core-2.1.10-sources.jar!/" />, +        </SOURCES>, +++ b/plugins/river/twitter/build.gradle, +    compile('org.twitter4j:twitter4j-core:2.1.10') { transitive = false }, +    distLib('org.twitter4j:twitter4j-core:2.1.10') { transitive = false }, +++ b/.idea/dictionaries/kimchy.xml, +      <w>hashtag</w>, +++ b/.idea/modules/plugin-river-twitter.iml, +          <root url="jar://$GRADLE_REPOSITORY$/org.twitter4j/twitter4j-core/jars/twitter4j-core-2.1.10.jar!/" />, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/twitter4j/2.1.10/twitter4j-core/twitter4j-core-2.1.10-sources.jar!/" />, +        </SOURCES>, +++ b/plugins/river/twitter/build.gradle, +    compile('org.twitter4j:twitter4j-core:2.1.10') { transitive = false }, +    distLib('org.twitter4j:twitter4j-core:2.1.10') { transitive = false }, +++ b/plugins/river/twitter/src/main/java/org/elasticsearch/river/twitter/TwitterRiver.java, +        stream = new TwitterStreamFactory().getInstance(user, password);, +        stream.addListener(new StatusHandler());, +                if (status.getUserMentionEntities() != null) {, +                    for (UserMentionEntity user : status.getUserMentionEntities()) {, +                        builder.field("start", user.getStart());, +                        builder.field("end", user.getEnd());, +                if (status.getHashtagEntities() != null) {, +                    builder.startArray("hashtag");, +                    for (HashtagEntity hashtag : status.getHashtagEntities()) {, +                        builder.startObject();, +                        builder.field("text", hashtag.getText());, +                        builder.field("start", hashtag.getStart());, +                        builder.field("end", hashtag.getEnd());, +                        builder.endObject();, +                    }, +                    builder.endArray();, +                if (status.getURLEntities() != null) {, +                    for (URLEntity url : status.getURLEntities()) {, +                            builder.startObject();, +                            builder.field("url", url.getURL().toExternalForm());, +                            if (url.getDisplayURL() != null) {, +                                builder.field("display_url", url.getDisplayURL());, +                            }, +                            if (url.getExpandedURL() != null) {, +                                builder.field("expand_url", url.getExpandedURL());, +                            }, +                            builder.field("start", url.getStart());, +                            builder.field("end", url.getEnd());, +                            builder.endObject();]