[+++ b/docs/reference/modules/network.asciidoc, +Defaults to `true`. coming[1.4,Can be set to `default` to not be set at all.], +|`network.tcp.keep_alive` |Enable or disable tcp keep alive. Defaults, +to `true`. coming[1.4,Can be set to `default` to not be set at all]., +++ b/docs/reference/modules/network.asciidoc, +Defaults to `true`. coming[1.4,Can be set to `default` to not be set at all.], +|`network.tcp.keep_alive` |Enable or disable tcp keep alive. Defaults, +to `true`. coming[1.4,Can be set to `default` to not be set at all]., +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +import org.elasticsearch.common.Booleans;, +    private final String tcpNoDelay;, +    private final String tcpKeepAlive;, +        this.tcpNoDelay = componentSettings.get("tcp_no_delay", settings.get(TCP_NO_DELAY, "true"));, +        this.tcpKeepAlive = componentSettings.get("tcp_keep_alive", settings.get(TCP_KEEP_ALIVE, "true"));, +        if (!"default".equals(tcpNoDelay)) {, +            serverBootstrap.setOption("child.tcpNoDelay", Booleans.parseBoolean(tcpNoDelay, null));, +        if (!"default".equals(tcpKeepAlive)) {, +            serverBootstrap.setOption("child.keepAlive", Booleans.parseBoolean(tcpKeepAlive, null));, +++ b/docs/reference/modules/network.asciidoc, +Defaults to `true`. coming[1.4,Can be set to `default` to not be set at all.], +|`network.tcp.keep_alive` |Enable or disable tcp keep alive. Defaults, +to `true`. coming[1.4,Can be set to `default` to not be set at all]., +++ b/src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java, +import org.elasticsearch.common.Booleans;, +    private final String tcpNoDelay;, +    private final String tcpKeepAlive;, +        this.tcpNoDelay = componentSettings.get("tcp_no_delay", settings.get(TCP_NO_DELAY, "true"));, +        this.tcpKeepAlive = componentSettings.get("tcp_keep_alive", settings.get(TCP_KEEP_ALIVE, "true"));, +        if (!"default".equals(tcpNoDelay)) {, +            serverBootstrap.setOption("child.tcpNoDelay", Booleans.parseBoolean(tcpNoDelay, null));, +        if (!"default".equals(tcpKeepAlive)) {, +            serverBootstrap.setOption("child.keepAlive", Booleans.parseBoolean(tcpKeepAlive, null));, +++ b/src/main/java/org/elasticsearch/transport/netty/NettyTransport.java, +import org.elasticsearch.common.Booleans;, +    final String tcpNoDelay;, +    final String tcpKeepAlive;, +        this.tcpNoDelay = componentSettings.get("tcp_no_delay", settings.get(TCP_NO_DELAY, "true"));, +        this.tcpKeepAlive = componentSettings.get("tcp_keep_alive", settings.get(TCP_KEEP_ALIVE, "true"));, +        if (!"default".equals(tcpNoDelay)) {, +            clientBootstrap.setOption("tcpNoDelay", Booleans.parseBoolean(tcpNoDelay, null));, +        if (!"default".equals(tcpKeepAlive)) {, +            clientBootstrap.setOption("keepAlive", Booleans.parseBoolean(tcpKeepAlive, null));, +        if (!"default".equals(tcpNoDelay)) {, +            serverBootstrap.setOption("child.tcpNoDelay", Booleans.parseBoolean(tcpNoDelay, null));, +        if (!"default".equals(tcpKeepAlive)) {, +            serverBootstrap.setOption("child.keepAlive", Booleans.parseBoolean(tcpKeepAlive, null));]