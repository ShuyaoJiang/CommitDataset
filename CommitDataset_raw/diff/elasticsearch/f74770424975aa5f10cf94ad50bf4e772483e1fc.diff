[+++ b/src/main/java/org/elasticsearch/index/mapper/object/DynamicTemplate.java, +        if (match == null && pathMatch == null && matchMappingType == null) {, +            throw new MapperParsingException("template must have match, path_match or match_mapping_type set");, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        if (match != null ? !match.equals(that.match) : that.match != null) {, +        }, +        if (matchMappingType != null ? !matchMappingType.equals(that.matchMappingType) : that.matchMappingType != null) {, +            return false;, +        }, +        if (matchType != that.matchType) {, +            return false;, +        }, +        if (unmatch != null ? !unmatch.equals(that.unmatch) : that.unmatch != null) {, +            return false;, +        }, +++ b/src/main/java/org/elasticsearch/index/mapper/object/DynamicTemplate.java, +        if (match == null && pathMatch == null && matchMappingType == null) {, +            throw new MapperParsingException("template must have match, path_match or match_mapping_type set");, +        if (this == o) {, +            return true;, +        }, +        if (o == null || getClass() != o.getClass()) {, +            return false;, +        }, +        if (match != null ? !match.equals(that.match) : that.match != null) {, +        }, +        if (matchMappingType != null ? !matchMappingType.equals(that.matchMappingType) : that.matchMappingType != null) {, +            return false;, +        }, +        if (matchType != that.matchType) {, +            return false;, +        }, +        if (unmatch != null ? !unmatch.equals(that.unmatch) : that.unmatch != null) {, +            return false;, +        }, +++ b/src/test/java/org/elasticsearch/index/mapper/dynamictemplate/simple/SimpleDynamicTemplatesTests.java, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.json.JsonXContent;, +import org.elasticsearch.index.mapper.DocumentFieldMappers;, +import org.hamcrest.Matchers;, +    public void testMatchTypeOnly() throws Exception {, +        XContentBuilder builder = JsonXContent.contentBuilder();, +        builder.startObject().startObject("person").startArray("dynamic_templates").startObject().startObject("test"), +                .field("match_mapping_type", "string"), +                .startObject("mapping").field("index", "no").endObject(), +                .endObject().endObject().endArray().endObject().endObject();, +        DocumentMapper docMapper = MapperTestUtils.newParser().parse(builder.string());, +        builder = JsonXContent.contentBuilder();, +        builder.startObject().field("_id", "1").field("s", "hello").field("l", 1).endObject();, +        docMapper.parse(builder.bytes());, +, +        DocumentFieldMappers mappers = docMapper.mappers();, +, +        assertThat(mappers.smartName("s"), Matchers.notNullValue());, +        assertThat(mappers.smartName("s").mapper().fieldType().indexed(), equalTo(false));, +, +        assertThat(mappers.smartName("l"), Matchers.notNullValue());, +        assertThat(mappers.smartName("l").mapper().fieldType().indexed(), equalTo(true));, +, +, +    }, +, +, +    @Test]