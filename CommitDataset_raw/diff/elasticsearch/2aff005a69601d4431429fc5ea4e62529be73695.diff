[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/server/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +import org.elasticsearch.discovery.Discovery.FailedToCommitClusterStateException;, +public abstract class TransportMasterNodeAction<Request extends MasterNodeRequest<Request>, Response extends ActionResponse>, +    extends HandledTransportAction<Request, Response> {, +, +    private final String executor;, +                                        ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver,, +                                        Supplier<Request> request) {, +            this.observer, +                = new ClusterStateObserver(state, clusterService, request.masterNodeTimeout(), logger, threadPool.getThreadContext());, +                                if (t instanceof FailedToCommitClusterStateException || t instanceof NotMasterException) {, +                                    logger.debug(() -> new ParameterizedMessage("master could not publish cluster state or " +, +                                        "stepped down before publishing action [{}], scheduling a retry", actionName), t);, +                        threadPool.executor(executor).execute(new ActionRunnable<Response>(delegate) {, +                                    logger.debug("connection exception while trying to forward request with action name [{}] to " +, +                                            "master node [{}], scheduling a retry. Error: [{}]",, +                        logger.debug(() -> new ParameterizedMessage("timed out while retrying [{}] after failure (timeout [{}])",, +                            actionName, timeout), failure);]