[+++ b/docs/en/commands/index.asciidoc, +* <<syskeygen>>, +include::syskeygen.asciidoc[], +++ b/docs/en/commands/index.asciidoc, +* <<syskeygen>>, +include::syskeygen.asciidoc[], +++ b/docs/en/commands/syskeygen.asciidoc, +[role="xpack"], +[[syskeygen]], +== syskeygen, +, +The `syskeygen` command creates a system key file in, +`CONFIG_DIR/x-pack/system_key`. You can then copy the generated system key to, +the rest of the nodes in the cluster., +, +//TBD: Why?  What's its purpose?, +, +IMPORTANT: The system key is a symmetric key, so the same key must be on every, +node in the cluster. You must also ensure that the file permissions are set, +such that the key can be read by the user that {es} runs as., +, +[float], +=== Synopsis, +, +[source,shell], +--------------------------------------------------, +bin/x-pack/syskeygen, +[-E <KeyValuePair>] [-h, --help], +([-s, --silent] | [-v, --verbose]), +--------------------------------------------------, +, +[float], +=== Description, +, +Encryption of sensitive data requires a key. For example, if you enable the, +<<notification-settings,`xpack.watcher.encrypt_sensitive_data` setting>>,, +//TBD: Can we clarify what type of sensitive data is encrypted when this is enabled?, +you must also create a system key file and place it in the secure setting store., +After you run the `syskeygen` command, run the, +`elasticsearch-keystore add-file xpack.watcher.encryption_key <filepath>`, +command. Finally, remove the `system_key` file from the filesystem. Repeat these, +steps on every node in the cluster., +, +//TBD: Are there other scenarios where you could use this system file?, +, +[float], +=== Parameters, +, +`-E <KeyValuePair>`:: Configures a setting., +, +`-h, --help`:: Returns all of the command parameters., +, +`-s, --silent`:: Shows minimal output., +, +`-v, --verbose`:: Shows verbose output., +, +////, +[float], +=== Examples, +, +//TBD: What's an example of a -E value that we might use in this command?, +, +[source, sh], +--------------------------------------------------, +bin/x-pack/syskeygen, +--------------------------------------------------, +////, +++ b/docs/en/commands/index.asciidoc, +* <<syskeygen>>, +include::syskeygen.asciidoc[], +++ b/docs/en/commands/syskeygen.asciidoc, +[role="xpack"], +[[syskeygen]], +== syskeygen, +, +The `syskeygen` command creates a system key file in, +`CONFIG_DIR/x-pack/system_key`. You can then copy the generated system key to, +the rest of the nodes in the cluster., +, +//TBD: Why?  What's its purpose?, +, +IMPORTANT: The system key is a symmetric key, so the same key must be on every, +node in the cluster. You must also ensure that the file permissions are set, +such that the key can be read by the user that {es} runs as., +, +[float], +=== Synopsis, +, +[source,shell], +--------------------------------------------------, +bin/x-pack/syskeygen, +[-E <KeyValuePair>] [-h, --help], +([-s, --silent] | [-v, --verbose]), +--------------------------------------------------, +, +[float], +=== Description, +, +Encryption of sensitive data requires a key. For example, if you enable the, +<<notification-settings,`xpack.watcher.encrypt_sensitive_data` setting>>,]