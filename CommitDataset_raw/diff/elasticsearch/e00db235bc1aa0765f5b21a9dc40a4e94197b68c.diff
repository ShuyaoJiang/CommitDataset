[+++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING,, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting describing the maximum value of allowed `docvalue_fields`that can be retrieved, +     * per search request. The default maximum of 100 is defensive for the reason that retrieving, +     * doc values might incur a per-field per-document seek., +     */, +    public static final Setting<Integer> MAX_DOCVALUE_FIELDS_SEARCH_SETTING =, +        Setting.intSetting("index.max_docvalue_fields_search", 100, 0, Property.Dynamic, Property.IndexScope);, +    /**, +    private volatile int maxDocvalueFields;, +        maxDocvalueFields = scopedSettings.get(MAX_DOCVALUE_FIELDS_SEARCH_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_DOCVALUE_FIELDS_SEARCH_SETTING, this::setMaxDocvalueFields);, +     * Returns the maximum number of allowed docvalue_fields to retrieve in a search request, +     */, +    public int getMaxDocvalueFields() {, +        return this.maxDocvalueFields;, +    }, +, +    private void setMaxDocvalueFields(int maxDocvalueFields) {, +        this.maxDocvalueFields = maxDocvalueFields;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting describing the maximum value of allowed `docvalue_fields`that can be retrieved, +     * per search request. The default maximum of 100 is defensive for the reason that retrieving, +     * doc values might incur a per-field per-document seek., +     */, +    public static final Setting<Integer> MAX_DOCVALUE_FIELDS_SEARCH_SETTING =, +        Setting.intSetting("index.max_docvalue_fields_search", 100, 0, Property.Dynamic, Property.IndexScope);, +    /**, +    private volatile int maxDocvalueFields;, +        maxDocvalueFields = scopedSettings.get(MAX_DOCVALUE_FIELDS_SEARCH_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_DOCVALUE_FIELDS_SEARCH_SETTING, this::setMaxDocvalueFields);, +     * Returns the maximum number of allowed docvalue_fields to retrieve in a search request, +     */, +    public int getMaxDocvalueFields() {, +        return this.maxDocvalueFields;, +    }, +, +    private void setMaxDocvalueFields(int maxDocvalueFields) {, +        this.maxDocvalueFields = maxDocvalueFields;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +            int maxAllowedDocvalueFields = context.mapperService().getIndexSettings().getMaxDocvalueFields();, +            if (source.docValueFields().size() > maxAllowedDocvalueFields) {, +                throw new IllegalArgumentException(, +                        "Trying to retrieve too many docvalue_fields. Must be less than or equal to: [" + maxAllowedDocvalueFields, +                                + "] but was [" + source.docValueFields().size() + "]. This limit can be set by changing the [", +                                + IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING.getKey() + "] index level setting.");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +        IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING,, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +     * Index setting describing the maximum value of allowed `docvalue_fields`that can be retrieved, +     * per search request. The default maximum of 100 is defensive for the reason that retrieving, +     * doc values might incur a per-field per-document seek., +     */, +    public static final Setting<Integer> MAX_DOCVALUE_FIELDS_SEARCH_SETTING =, +        Setting.intSetting("index.max_docvalue_fields_search", 100, 0, Property.Dynamic, Property.IndexScope);, +    /**, +    private volatile int maxDocvalueFields;, +        maxDocvalueFields = scopedSettings.get(MAX_DOCVALUE_FIELDS_SEARCH_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(MAX_DOCVALUE_FIELDS_SEARCH_SETTING, this::setMaxDocvalueFields);, +     * Returns the maximum number of allowed docvalue_fields to retrieve in a search request, +     */, +    public int getMaxDocvalueFields() {, +        return this.maxDocvalueFields;, +    }, +, +    private void setMaxDocvalueFields(int maxDocvalueFields) {, +        this.maxDocvalueFields = maxDocvalueFields;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/SearchService.java, +            int maxAllowedDocvalueFields = context.mapperService().getIndexSettings().getMaxDocvalueFields();, +            if (source.docValueFields().size() > maxAllowedDocvalueFields) {, +                throw new IllegalArgumentException(, +                        "Trying to retrieve too many docvalue_fields. Must be less than or equal to: [" + maxAllowedDocvalueFields, +                                + "] but was [" + source.docValueFields().size() + "]. This limit can be set by changing the [", +                                + IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING.getKey() + "] index level setting.");, +            }, +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +    public void testMaxDocvalueFields() {, +        IndexMetaData metaData = newIndexMeta("index", Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +                .put(IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING.getKey(), 200).build());, +        IndexSettings settings = new IndexSettings(metaData, Settings.EMPTY);, +        assertEquals(200, settings.getMaxDocvalueFields());, +        settings.updateIndexMetaData(, +                newIndexMeta("index", Settings.builder().put(IndexSettings.MAX_DOCVALUE_FIELDS_SEARCH_SETTING.getKey(), 50).build()));, +        assertEquals(50, settings.getMaxDocvalueFields());, +        settings.updateIndexMetaData(newIndexMeta("index", Settings.EMPTY));]