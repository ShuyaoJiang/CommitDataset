[+++ b/src/main/java/org/elasticsearch/common/lucene/search/XFilteredQuery.java, +    public static final FilterStrategy ALWAYS_RANDOM_ACCESS_FILTER_STRATEGY = new CustomRandomAccessFilterStrategy(0);, +, +, +    public static final CustomRandomAccessFilterStrategy CUSTOM_FILTER_STRATEGY = new CustomRandomAccessFilterStrategy();, +++ b/src/main/java/org/elasticsearch/common/lucene/search/XFilteredQuery.java, +    public static final FilterStrategy ALWAYS_RANDOM_ACCESS_FILTER_STRATEGY = new CustomRandomAccessFilterStrategy(0);, +, +, +    public static final CustomRandomAccessFilterStrategy CUSTOM_FILTER_STRATEGY = new CustomRandomAccessFilterStrategy();, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java, +        XFilteredQuery.FilterStrategy filterStrategy = XFilteredQuery.CUSTOM_FILTER_STRATEGY;, +, +                if ("strategy".equals(currentFieldName)) {, +                    String value = parser.text();, +                    if ("query_filter".equals(value) || "queryFirst".equals(value)) {, +                        filterStrategy = XFilteredQuery.QUERY_FIRST_FILTER_STRATEGY;, +                    } else if ("random_access_random".equals(value) || "randomAccessAlways".equals(value)) {, +                        filterStrategy = XFilteredQuery.ALWAYS_RANDOM_ACCESS_FILTER_STRATEGY;, +                    } else if ("leap_frog".equals(value) || "leapFrog".equals(value)) {, +                        filterStrategy = XFilteredQuery.LEAP_FROG_QUERY_FIRST_STRATEGY;, +                    } else if (value.startsWith("random_access_")) {, +                        int threshold = Integer.parseInt(value.substring("random_access_".length()));, +                        filterStrategy = new XFilteredQuery.CustomRandomAccessFilterStrategy(threshold);, +                    } else if (value.startsWith("randomAccess")) {, +                        int threshold = Integer.parseInt(value.substring("randomAccess".length()));, +                        filterStrategy = new XFilteredQuery.CustomRandomAccessFilterStrategy(threshold);, +                    } else if ("leap_frog_query_first".equals(value) || "leapFrogQueryFirst".equals(value)) {, +                        filterStrategy = XFilteredQuery.LEAP_FROG_QUERY_FIRST_STRATEGY;, +                    } else if ("leap_frog_filter_first".equals(value) || "leapFrogFilterFirst".equals(value)) {, +                        filterStrategy = XFilteredQuery.LEAP_FROG_FILTER_FIRST_STRATEGY;, +                    } else {, +                        throw new QueryParsingException(parseContext.index(), "[filtered] strategy value not supported [" + value + "]");, +                    }, +                } else if ("boost".equals(currentFieldName)) {, +        XFilteredQuery filteredQuery = new XFilteredQuery(query, filter, filterStrategy);]