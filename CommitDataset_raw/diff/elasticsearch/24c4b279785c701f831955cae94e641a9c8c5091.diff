[+++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +    /**, +     * This interface is in the fetch phase plugin mechanism., +     * Whenever a new search is executed we create a new {@link SearchContext} that holds individual contexts for each {@link org.elasticsearch.search.fetch.FetchSubPhase}., +     * Fetch phases that use the plugin mechanism must provide a ContextFactory to the SearchContext that creates the fetch phase context and also associates them with a name., +     * See {@link SearchContext#getFetchSubPhaseContext(FetchSubPhase.ContextFactory)}, +     */, +        /**, +         * The name of the context., +         */, +        /**, +         * Creates a new instance of a FetchSubPhaseContext that holds all information a FetchSubPhase needs to execute on hits., +         */, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +    /**, +     * This interface is in the fetch phase plugin mechanism., +     * Whenever a new search is executed we create a new {@link SearchContext} that holds individual contexts for each {@link org.elasticsearch.search.fetch.FetchSubPhase}., +     * Fetch phases that use the plugin mechanism must provide a ContextFactory to the SearchContext that creates the fetch phase context and also associates them with a name., +     * See {@link SearchContext#getFetchSubPhaseContext(FetchSubPhase.ContextFactory)}, +     */, +        /**, +         * The name of the context., +         */, +        /**, +         * Creates a new instance of a FetchSubPhaseContext that holds all information a FetchSubPhase needs to execute on hits., +         */, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhaseContext.java, +/**, + * This class stores  if or if not a FetchSubPhase is supposed to execute., + * It be extended by FetchSubPhases to hold information the phase needs to execute on hits., + * See {@link org.elasticsearch.search.fetch.FetchSubPhase.ContextFactory} and also {@link org.elasticsearch.search.fetch.fielddata.FieldDataFieldsContext} for an example., + */, +    // This is to store if the FetchSubPhase should be executed at all., +    /**, +     * Set if this phase should be executed at all., +     */, +    /**, +     * Returns if this phase be executed at all., +     */, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +    /**, +     * This interface is in the fetch phase plugin mechanism., +     * Whenever a new search is executed we create a new {@link SearchContext} that holds individual contexts for each {@link org.elasticsearch.search.fetch.FetchSubPhase}., +     * Fetch phases that use the plugin mechanism must provide a ContextFactory to the SearchContext that creates the fetch phase context and also associates them with a name., +     * See {@link SearchContext#getFetchSubPhaseContext(FetchSubPhase.ContextFactory)}, +     */, +        /**, +         * The name of the context., +         */, +        /**, +         * Creates a new instance of a FetchSubPhaseContext that holds all information a FetchSubPhase needs to execute on hits., +         */, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhaseContext.java, +/**, + * This class stores  if or if not a FetchSubPhase is supposed to execute., + * It be extended by FetchSubPhases to hold information the phase needs to execute on hits., + * See {@link org.elasticsearch.search.fetch.FetchSubPhase.ContextFactory} and also {@link org.elasticsearch.search.fetch.fielddata.FieldDataFieldsContext} for an example., + */, +    // This is to store if the FetchSubPhase should be executed at all., +    /**, +     * Set if this phase should be executed at all., +     */, +    /**, +     * Returns if this phase be executed at all., +     */, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhaseModule.java, + * Module for registering fetch sub phases. Fetch phases are executed when the document is finally, + * retrieved from the shard. To implement a new fetch phase one needs to implement the following classes and interfaces, + * <p/>, + * <ul>, + * <li>  {@link FetchSubPhaseParseElement} </li>, + * <li>  {@link FetchSubPhase} </li>, + * <li>  {@link FetchSubPhaseContext} </li>, + * </ul>, + * <p/>, + * The FetchSubPhase must then be registered with this module with {@link FetchSubPhaseModule#registerFetchSubPhase(Class<? extends FetchSubPhase>)}., + * See {@link FieldDataFieldsFetchSubPhase} for an example., +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java, +    /**, +     * This interface is in the fetch phase plugin mechanism., +     * Whenever a new search is executed we create a new {@link SearchContext} that holds individual contexts for each {@link org.elasticsearch.search.fetch.FetchSubPhase}., +     * Fetch phases that use the plugin mechanism must provide a ContextFactory to the SearchContext that creates the fetch phase context and also associates them with a name., +     * See {@link SearchContext#getFetchSubPhaseContext(FetchSubPhase.ContextFactory)}, +     */, +        /**, +         * The name of the context., +         */, +        /**, +         * Creates a new instance of a FetchSubPhaseContext that holds all information a FetchSubPhase needs to execute on hits., +         */, +++ b/core/src/main/java/org/elasticsearch/search/fetch/FetchSubPhaseContext.java, +/**, + * This class stores  if or if not a FetchSubPhase is supposed to execute., + * It be extended by FetchSubPhases to hold information the phase needs to execute on hits., + * See {@link org.elasticsearch.search.fetch.FetchSubPhase.ContextFactory} and also {@link org.elasticsearch.search.fetch.fielddata.FieldDataFieldsContext} for an example., + */, +    // This is to store if the FetchSubPhase should be executed at all., +    /**, +     * Set if this phase should be executed at all., +     */]