[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +import org.elasticsearch.common.util.concurrent.AtomicArray;, +import java.util.ArrayList;, +                // The task has no child tasks, so we can return immediately, +                // The task has some child tasks, we need to wait for until ban is set on all nodes, +                String nodeId = clusterService.localNode().getId();, +                AtomicInteger responses = new AtomicInteger(childNodes.size());, +                List<Exception> failures = new ArrayList<>();, +                setBanOnNodes(request.getReason(), cancellableTask, childNodes, new ActionListener<Void>() {, +                    @Override, +                    public void onResponse(Void aVoid) {, +                        processResponse();, +                    }, +, +                    @Override, +                    public void onFailure(Exception e) {, +                        synchronized (failures) {, +                            failures.add(e);, +                        }, +                        processResponse();, +                    }, +, +                    private void processResponse() {, +                        banLock.onBanSet();, +                        if (responses.decrementAndGet() == 0) {, +                            if (failures.isEmpty() == false) {, +                                IllegalStateException exception = new IllegalStateException("failed to cancel children of the task [" +, +                                    cancellableTask.getId() + "]");, +                                failures.forEach(exception::addSuppressed);, +                                listener.onFailure(exception);, +                            } else {, +                                listener.onResponse(cancellableTask.taskInfo(nodeId, false));, +                            }, +                        }, +                    }, +                });, +, +    private void setBanOnNodes(String reason, CancellableTask task, Set<String> nodes, ActionListener<Void> listener) {, +            listener);, +    private void sendSetBanRequest(Set<String> nodes, BanParentTaskRequest request, ActionListener<Void> listener) {, +                logger.trace("Sending ban for tasks with the parent [{}] to the node [{}], ban [{}]", request.parentTaskId, node,, +                            listener.onResponse(null);, +                            logger.warn("Cannot send ban for tasks with the parent [{}] to the node [{}]", request.parentTaskId, node);, +                            listener.onFailure(exp);, +                listener.onResponse(null);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +import org.elasticsearch.common.util.concurrent.AtomicArray;, +import java.util.ArrayList;, +                // The task has no child tasks, so we can return immediately, +                // The task has some child tasks, we need to wait for until ban is set on all nodes, +                String nodeId = clusterService.localNode().getId();, +                AtomicInteger responses = new AtomicInteger(childNodes.size());, +                List<Exception> failures = new ArrayList<>();, +                setBanOnNodes(request.getReason(), cancellableTask, childNodes, new ActionListener<Void>() {, +                    @Override, +                    public void onResponse(Void aVoid) {, +                        processResponse();, +                    }, +, +                    @Override, +                    public void onFailure(Exception e) {, +                        synchronized (failures) {, +                            failures.add(e);, +                        }, +                        processResponse();, +                    }, +, +                    private void processResponse() {, +                        banLock.onBanSet();, +                        if (responses.decrementAndGet() == 0) {, +                            if (failures.isEmpty() == false) {, +                                IllegalStateException exception = new IllegalStateException("failed to cancel children of the task [" +, +                                    cancellableTask.getId() + "]");, +                                failures.forEach(exception::addSuppressed);, +                                listener.onFailure(exception);, +                            } else {, +                                listener.onResponse(cancellableTask.taskInfo(nodeId, false));, +                            }, +                        }, +                    }, +                });, +, +    private void setBanOnNodes(String reason, CancellableTask task, Set<String> nodes, ActionListener<Void> listener) {, +            listener);, +    private void sendSetBanRequest(Set<String> nodes, BanParentTaskRequest request, ActionListener<Void> listener) {, +                logger.trace("Sending ban for tasks with the parent [{}] to the node [{}], ban [{}]", request.parentTaskId, node,, +                            listener.onResponse(null);, +                            logger.warn("Cannot send ban for tasks with the parent [{}] to the node [{}]", request.parentTaskId, node);, +                            listener.onFailure(exp);, +                listener.onResponse(null);, +++ b/core/src/test/java/org/elasticsearch/search/SearchCancellationIT.java]