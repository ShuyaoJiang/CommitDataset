[+++ b/rest-api-spec/api/search.json, +        },, +        "query_cache": {, +          "type" : "boolean",, +          "description" : "Specify if query cache should be used for this request or not, defaults to index level setting", +++ b/rest-api-spec/api/search.json, +        },, +        "query_cache": {, +          "type" : "boolean",, +          "description" : "Specify if query cache should be used for this request or not, defaults to index level setting", +++ b/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +                                } else if ("query_cache".equals(currentFieldName) || "queryCache".equals(currentFieldName)) {, +                                    searchRequest.queryCache(parser.booleanValue());, +++ b/rest-api-spec/api/search.json, +        },, +        "query_cache": {, +          "type" : "boolean",, +          "description" : "Specify if query cache should be used for this request or not, defaults to index level setting", +++ b/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +                                } else if ("query_cache".equals(currentFieldName) || "queryCache".equals(currentFieldName)) {, +                                    searchRequest.queryCache(parser.booleanValue());, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private Boolean queryCache;, +    /**, +     * Sets if this request should use the query cache or not, assuming that it can (for, +     * example, if "now" is used, it will never be cached). By default (not set, or null,, +     * will default to the index level setting if query cache is enabled or not)., +     */, +    public SearchRequest queryCache(Boolean queryCache) {, +        this.queryCache = queryCache;, +        return this;, +    }, +, +    public Boolean queryCache() {, +        return this.queryCache;, +    }, +, +, +        if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +            queryCache = in.readOptionalBoolean();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +            out.writeOptionalBoolean(queryCache);, +        }, +++ b/rest-api-spec/api/search.json, +        },, +        "query_cache": {, +          "type" : "boolean",, +          "description" : "Specify if query cache should be used for this request or not, defaults to index level setting", +++ b/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +                                } else if ("query_cache".equals(currentFieldName) || "queryCache".equals(currentFieldName)) {, +                                    searchRequest.queryCache(parser.booleanValue());, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private Boolean queryCache;, +    /**, +     * Sets if this request should use the query cache or not, assuming that it can (for, +     * example, if "now" is used, it will never be cached). By default (not set, or null,, +     * will default to the index level setting if query cache is enabled or not)., +     */, +    public SearchRequest queryCache(Boolean queryCache) {, +        this.queryCache = queryCache;, +        return this;, +    }, +, +    public Boolean queryCache() {, +        return this.queryCache;, +    }, +, +, +        if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +            queryCache = in.readOptionalBoolean();, +        }, +, +        if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +            out.writeOptionalBoolean(queryCache);, +        }, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Sets if this request should use the query cache or not, assuming that it can (for, +     * example, if "now" is used, it will never be cached). By default (not set, or null,, +     * will default to the index level setting if query cache is enabled or not)., +     */, +    public SearchRequestBuilder setQueryCache(Boolean queryCache) {, +        request.queryCache(queryCache);, +        return this;, +    }, +, +    /**, +++ b/rest-api-spec/api/search.json, +        },, +        "query_cache": {, +          "type" : "boolean",, +          "description" : "Specify if query cache should be used for this request or not, defaults to index level setting", +++ b/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +                                } else if ("query_cache".equals(currentFieldName) || "queryCache".equals(currentFieldName)) {, +                                    searchRequest.queryCache(parser.booleanValue());, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private Boolean queryCache;, +    /**, +     * Sets if this request should use the query cache or not, assuming that it can (for]