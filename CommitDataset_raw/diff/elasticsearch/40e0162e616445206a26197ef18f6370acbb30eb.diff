[+++ b/Vagrantfile, +    cat \<\<SUDOERS_VARS > /etc/sudoers.d/elasticsearch_vars, +Defaults   env_keep += "ZIP", +Defaults   env_keep += "TAR", +Defaults   env_keep += "RPM", +Defaults   env_keep += "DEB", +Defaults   env_keep += "BATS", +Defaults   env_keep += "BATS_UTILS", +Defaults   env_keep += "BATS_TESTS", +Defaults   env_keep += "BATS_ARCHIVES", +SUDOERS_VARS, +    chmod 0440 /etc/sudoers.d/elasticsearch_vars, +++ b/Vagrantfile, +    cat \<\<SUDOERS_VARS > /etc/sudoers.d/elasticsearch_vars, +Defaults   env_keep += "ZIP", +Defaults   env_keep += "TAR", +Defaults   env_keep += "RPM", +Defaults   env_keep += "DEB", +Defaults   env_keep += "BATS", +Defaults   env_keep += "BATS_UTILS", +Defaults   env_keep += "BATS_TESTS", +Defaults   env_keep += "BATS_ARCHIVES", +SUDOERS_VARS, +    chmod 0440 /etc/sudoers.d/elasticsearch_vars, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +    private static final String BATS_TEST_COMMAND ="cd \$BATS_ARCHIVES && sudo bats --tap \$BATS_TESTS/*.$BATS", +++ b/Vagrantfile, +    cat \<\<SUDOERS_VARS > /etc/sudoers.d/elasticsearch_vars, +Defaults   env_keep += "ZIP", +Defaults   env_keep += "TAR", +Defaults   env_keep += "RPM", +Defaults   env_keep += "DEB", +Defaults   env_keep += "BATS", +Defaults   env_keep += "BATS_UTILS", +Defaults   env_keep += "BATS_TESTS", +Defaults   env_keep += "BATS_ARCHIVES", +SUDOERS_VARS, +    chmod 0440 /etc/sudoers.d/elasticsearch_vars, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +    private static final String BATS_TEST_COMMAND ="cd \$BATS_ARCHIVES && sudo bats --tap \$BATS_TESTS/*.$BATS", +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/Vagrantfile, +    cat \<\<SUDOERS_VARS > /etc/sudoers.d/elasticsearch_vars, +Defaults   env_keep += "ZIP", +Defaults   env_keep += "TAR", +Defaults   env_keep += "RPM", +Defaults   env_keep += "DEB", +Defaults   env_keep += "BATS", +Defaults   env_keep += "BATS_UTILS", +Defaults   env_keep += "BATS_TESTS", +Defaults   env_keep += "BATS_ARCHIVES", +SUDOERS_VARS, +    chmod 0440 /etc/sudoers.d/elasticsearch_vars, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +    private static final String BATS_TEST_COMMAND ="cd \$BATS_ARCHIVES && sudo bats --tap \$BATS_TESTS/*.$BATS", +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/service/ClusterService.java, +import java.util.LinkedHashSet;, +    final Map<ClusterStateTaskExecutor, LinkedHashSet<UpdateTask>> updateTasksPerExecutor = new HashMap<>();, +                LinkedHashSet<UpdateTask> existingTasks = updateTasksPerExecutor.computeIfAbsent(executor,, +                    k -> new LinkedHashSet<>(updateTasks.size()));, +            final TimeValue timeout = config.timeout();, +            if (timeout != null) {, +                updateTasksExecutor.execute(firstTask, threadPool.scheduler(), timeout, () -> threadPool.generic().execute(() -> {, +                    final ArrayList<UpdateTask<T>> toRemove = new ArrayList<>();, +                            logger.debug("cluster state update task [{}] timed out after [{}]", source, timeout);, +                            toRemove.add(task);, +                        }, +                    }, +                    if (toRemove.isEmpty() == false) {, +                        ClusterStateTaskExecutor<T> clusterStateTaskExecutor = toRemove.get(0).executor;, +                        synchronized (updateTasksPerExecutor) {, +                            LinkedHashSet<UpdateTask> existingTasks = updateTasksPerExecutor.get(clusterStateTaskExecutor);, +                            if (existingTasks != null) {, +                                existingTasks.removeAll(toRemove);, +                                if (existingTasks.isEmpty()) {, +                                    updateTasksPerExecutor.remove(clusterStateTaskExecutor);, +                                }, +                            }, +                        }, +                        for (UpdateTask<T> task : toRemove) {, +                            task.listener.onFailure(source, new ProcessClusterEventTimeoutException(timeout, source));, +            LinkedHashSet<UpdateTask> pending = updateTasksPerExecutor.remove(executor);, +++ b/Vagrantfile, +    cat \<\<SUDOERS_VARS > /etc/sudoers.d/elasticsearch_vars, +Defaults   env_keep += "ZIP", +Defaults   env_keep += "TAR", +Defaults   env_keep += "RPM", +Defaults   env_keep += "DEB", +Defaults   env_keep += "BATS", +Defaults   env_keep += "BATS_UTILS", +Defaults   env_keep += "BATS_TESTS", +Defaults   env_keep += "BATS_ARCHIVES", +SUDOERS_VARS, +    chmod 0440 /etc/sudoers.d/elasticsearch_vars, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantTestPlugin.groovy, +    private static final String BATS_TEST_COMMAND ="cd \$BATS_ARCHIVES && sudo bats --tap \$BATS_TESTS/*.$BATS", +++ b/core/src/main/java/org/elasticsearch/client/transport/support/TransportProxyClient.java, +++ b/core/src/main/java/org/elasticsearch/cluster/service/ClusterService.java, +import java.util.LinkedHashSet;]