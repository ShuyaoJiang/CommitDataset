[+++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.PrintStream;, +import java.nio.file.Path;, +import java.util.Locale;, +import java.util.concurrent.CountDownLatch;, +, +import org.elasticsearch.cli.ExitCodes;, +import org.elasticsearch.cli.Terminal;, +        BootstrapCliParser parser = new BootstrapCliParser();, +        int status = parser.main(args, Terminal.DEFAULT);, +        if (parser.shouldRun() == false || status != ExitCodes.OK) {, +            exit(status);, +++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.PrintStream;, +import java.nio.file.Path;, +import java.util.Locale;, +import java.util.concurrent.CountDownLatch;, +, +import org.elasticsearch.cli.ExitCodes;, +import org.elasticsearch.cli.Terminal;, +        BootstrapCliParser parser = new BootstrapCliParser();, +        int status = parser.main(args, Terminal.DEFAULT);, +        if (parser.shouldRun() == false || status != ExitCodes.OK) {, +            exit(status);, +++ /dev/null, +++ b/core/build.gradle, +  compile 'net.sf.jopt-simple:jopt-simple:4.9', +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.PrintStream;, +import java.nio.file.Path;, +import java.util.Locale;, +import java.util.concurrent.CountDownLatch;, +, +import org.elasticsearch.cli.ExitCodes;, +import org.elasticsearch.cli.Terminal;, +        BootstrapCliParser parser = new BootstrapCliParser();, +        int status = parser.main(args, Terminal.DEFAULT);, +        if (parser.shouldRun() == false || status != ExitCodes.OK) {, +            exit(status);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/bootstrap/BootstrapCliParser.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.bootstrap;, +, +import java.util.Arrays;, +, +import joptsimple.OptionSet;, +import joptsimple.OptionSpec;, +import org.elasticsearch.Build;, +import org.elasticsearch.cli.Command;, +import org.elasticsearch.cli.ExitCodes;, +import org.elasticsearch.cli.UserError;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.cli.Terminal;, +import org.elasticsearch.common.SuppressForbidden;, +import org.elasticsearch.monitor.jvm.JvmInfo;, +, +final class BootstrapCliParser extends Command {, +, +    private final OptionSpec<Void> versionOption;, +    private final OptionSpec<Void> daemonizeOption;, +    private final OptionSpec<String> pidfileOption;, +    private final OptionSpec<String> propertyOption;, +    private boolean shouldRun = false;, +, +    BootstrapCliParser() {, +        super("Starts elasticsearch");, +        // TODO: in jopt-simple 5.0, make this mutually exclusive with all other options, +        versionOption = parser.acceptsAll(Arrays.asList("V", "version"),, +            "Prints elasticsearch version information and exits");]