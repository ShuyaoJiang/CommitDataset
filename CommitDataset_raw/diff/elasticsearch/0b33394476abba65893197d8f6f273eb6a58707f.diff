[+++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +import org.elasticsearch.common.Strings;, +import java.util.Locale;, +            return addValidationError("Must specify at least one alias action", validationException);, +        }, +        for (AliasAction aliasAction : aliasActions) {, +            if (!Strings.hasText(aliasAction.alias())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [alias] to be set", validationException);, +            }, +            if (!Strings.hasText(aliasAction.index())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [index] to be set", validationException);, +            }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +import org.elasticsearch.common.Strings;, +import java.util.Locale;, +            return addValidationError("Must specify at least one alias action", validationException);, +        }, +        for (AliasAction aliasAction : aliasActions) {, +            if (!Strings.hasText(aliasAction.alias())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [alias] to be set", validationException);, +            }, +            if (!Strings.hasText(aliasAction.index())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [index] to be set", validationException);, +            }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        if (!Strings.hasText(aliasAction.alias()) || !Strings.hasText(aliasAction.index())) {, +                            listener.onFailure(new ElasticSearchIllegalArgumentException("Index name and alias name are required"));, +                            return currentState;, +                        }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +import org.elasticsearch.common.Strings;, +import java.util.Locale;, +            return addValidationError("Must specify at least one alias action", validationException);, +        }, +        for (AliasAction aliasAction : aliasActions) {, +            if (!Strings.hasText(aliasAction.alias())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [alias] to be set", validationException);, +            }, +            if (!Strings.hasText(aliasAction.index())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [index] to be set", validationException);, +            }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        if (!Strings.hasText(aliasAction.alias()) || !Strings.hasText(aliasAction.index())) {, +                            listener.onFailure(new ElasticSearchIllegalArgumentException("Index name and alias name are required"));, +                            return currentState;, +                        }, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +import org.elasticsearch.common.Strings;, +import java.util.Locale;, +            return addValidationError("Must specify at least one alias action", validationException);, +        }, +        for (AliasAction aliasAction : aliasActions) {, +            if (!Strings.hasText(aliasAction.alias())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [alias] to be set", validationException);, +            }, +            if (!Strings.hasText(aliasAction.index())) {, +                validationException = addValidationError("Alias action [" + aliasAction.actionType().name().toLowerCase(Locale.ENGLISH) + "] requires an [index] to be set", validationException);, +            }, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        if (!Strings.hasText(aliasAction.alias()) || !Strings.hasText(aliasAction.index())) {, +                            listener.onFailure(new ElasticSearchIllegalArgumentException("Index name and alias name are required"));, +                            return currentState;, +                        }, +++ b/src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java, +, +++ b/src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java, +import org.elasticsearch.action.ActionRequestValidationException;, +import static org.testng.AssertJUnit.assertTrue;, +    @Test(expectedExceptions = ActionRequestValidationException.class), +    public void testAddAliasNullIndex() {, +, +        client().admin().indices().prepareAliases().addAliasAction(AliasAction.newAddAliasAction(null, "alias1")), +                .execute().actionGet();, +    }, +, +    @Test(expectedExceptions = ActionRequestValidationException.class), +    public void testAddAliasEmptyIndex() {, +, +        client().admin().indices().prepareAliases().addAliasAction(AliasAction.newAddAliasAction("", "alias1")), +                .execute().actionGet();, +    }, +, +    @Test(expectedExceptions = ActionRequestValidationException.class), +    public void testAddAliasNullAlias() {, +, +        client().admin().indices().prepareAliases().addAliasAction(AliasAction.newAddAliasAction("index1", null)), +                .execute().actionGet();, +    }, +, +    @Test(expectedExceptions = ActionRequestValidationException.class), +    public void testAddAliasEmptyAlias() {, +, +        client().admin().indices().prepareAliases().addAliasAction(AliasAction.newAddAliasAction("index1", "")), +                .execute().actionGet();, +    }, +, +    @Test, +    public void testAddAliasNullAliasNullIndex() {]