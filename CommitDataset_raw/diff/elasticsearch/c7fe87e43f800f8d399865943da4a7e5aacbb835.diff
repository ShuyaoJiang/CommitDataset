[+++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /** Returns a closure of common configuration shared by unit and integration tests. */, +    static Closure commonTestConfig(Project project) {, +        return {, +        RandomizedTestingTask test = project.tasks.getByName('test'), +        test.configure(commonTestConfig(project)), +        test.configure {, +, +        // Add a method to create additional unit tests for a project, which will share the same, +        // randomized testing setup, but by default run no tests., +        project.extensions.add('additionalTest', { String name, Closure config ->, +            RandomizedTestingTask additionalTest = project.tasks.create(name, RandomizedTestingTask.class), +            additionalTest.classpath = test.classpath, +            additionalTest.testClassesDirs = test.testClassesDirs, +            additionalTest.configure(commonTestConfig(project)), +            additionalTest.configure(config), +            additionalTest.dependsOn(project.tasks.testClasses), +            project.check.dependsOn(additionalTest), +        });, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /** Returns a closure of common configuration shared by unit and integration tests. */, +    static Closure commonTestConfig(Project project) {, +        return {, +        RandomizedTestingTask test = project.tasks.getByName('test'), +        test.configure(commonTestConfig(project)), +        test.configure {, +, +        // Add a method to create additional unit tests for a project, which will share the same, +        // randomized testing setup, but by default run no tests., +        project.extensions.add('additionalTest', { String name, Closure config ->, +            RandomizedTestingTask additionalTest = project.tasks.create(name, RandomizedTestingTask.class), +            additionalTest.classpath = test.classpath, +            additionalTest.testClassesDirs = test.testClassesDirs, +            additionalTest.configure(commonTestConfig(project)), +            additionalTest.configure(config), +            additionalTest.dependsOn(project.tasks.testClasses), +            project.check.dependsOn(additionalTest), +        });, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +        // start with the common test configuration, +        runner.configure(BuildPlugin.commonTestConfig(project)), +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /** Returns a closure of common configuration shared by unit and integration tests. */, +    static Closure commonTestConfig(Project project) {, +        return {, +        RandomizedTestingTask test = project.tasks.getByName('test'), +        test.configure(commonTestConfig(project)), +        test.configure {, +, +        // Add a method to create additional unit tests for a project, which will share the same, +        // randomized testing setup, but by default run no tests., +        project.extensions.add('additionalTest', { String name, Closure config ->, +            RandomizedTestingTask additionalTest = project.tasks.create(name, RandomizedTestingTask.class), +            additionalTest.classpath = test.classpath, +            additionalTest.testClassesDirs = test.testClassesDirs, +            additionalTest.configure(commonTestConfig(project)), +            additionalTest.configure(config), +            additionalTest.dependsOn(project.tasks.testClasses), +            project.check.dependsOn(additionalTest), +        });, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +        // start with the common test configuration, +        runner.configure(BuildPlugin.commonTestConfig(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneRestTestPlugin.groovy, +++ b/.ci/java-versions.properties, +GRADLE_EXTRA_ARGS=-Dtests.bwc.refspec=elastic/index-lifecycle-6.x, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +    /** Returns a closure of common configuration shared by unit and integration tests. */, +    static Closure commonTestConfig(Project project) {, +        return {, +        RandomizedTestingTask test = project.tasks.getByName('test'), +        test.configure(commonTestConfig(project)), +        test.configure {, +, +        // Add a method to create additional unit tests for a project, which will share the same, +        // randomized testing setup, but by default run no tests., +        project.extensions.add('additionalTest', { String name, Closure config ->, +            RandomizedTestingTask additionalTest = project.tasks.create(name, RandomizedTestingTask.class), +            additionalTest.classpath = test.classpath, +            additionalTest.testClassesDirs = test.testClassesDirs, +            additionalTest.configure(commonTestConfig(project)), +            additionalTest.configure(config), +            additionalTest.dependsOn(project.tasks.testClasses), +            project.check.dependsOn(additionalTest), +        });, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +        // start with the common test configuration, +        runner.configure(BuildPlugin.commonTestConfig(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneRestTestPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +import org.gradle.api.tasks.compile.JavaCompile, +        test.configure(BuildPlugin.commonTestConfig(project))]