[+++ b/distribution/build.gradle, +      into('') {, +        // CopySpec does not make it easy to create an empty directory, +        // so we create the directory that we want, and then point, +        // CopySpec to its parent to copy to the root of the, +        // distribution, +        File plugins = new File(buildDir, 'plugins-hack/plugins'), +        plugins.mkdirs(), +        from {, +          plugins.getParent(), +        }, +      }, +++ b/distribution/build.gradle, +      into('') {, +        // CopySpec does not make it easy to create an empty directory, +        // so we create the directory that we want, and then point, +        // CopySpec to its parent to copy to the root of the, +        // distribution, +        File plugins = new File(buildDir, 'plugins-hack/plugins'), +        plugins.mkdirs(), +        from {, +          plugins.getParent(), +        }, +      }, +++ b/qa/vagrant/src/test/resources/packaging/scripts/20_tar_package.bats, +@test "[TAR] verify elasticsearch-plugin list runs without any plugins installed" {, +    # previously this would fail because the archive installations did, +    # not create an empty plugins directory, +    local plugins_list=`$ESHOME/bin/elasticsearch-plugin list`, +    [[ -z $plugins_list ]], +}, +, +++ b/distribution/build.gradle, +      into('') {, +        // CopySpec does not make it easy to create an empty directory, +        // so we create the directory that we want, and then point, +        // CopySpec to its parent to copy to the root of the, +        // distribution, +        File plugins = new File(buildDir, 'plugins-hack/plugins'), +        plugins.mkdirs(), +        from {, +          plugins.getParent(), +        }, +      }, +++ b/qa/vagrant/src/test/resources/packaging/scripts/20_tar_package.bats, +@test "[TAR] verify elasticsearch-plugin list runs without any plugins installed" {, +    # previously this would fail because the archive installations did, +    # not create an empty plugins directory, +    local plugins_list=`$ESHOME/bin/elasticsearch-plugin list`, +    [[ -z $plugins_list ]], +}, +, +++ b/qa/vagrant/src/test/resources/packaging/scripts/30_deb_package.bats, +@test "[DEB] verify elasticsearch-plugin list runs without any plugins installed" {, +    local plugins_list=`$ESHOME/bin/elasticsearch-plugin list`, +    [[ -z $plugins_list ]], +}, +, +++ b/distribution/build.gradle, +      into('') {, +        // CopySpec does not make it easy to create an empty directory, +        // so we create the directory that we want, and then point, +        // CopySpec to its parent to copy to the root of the, +        // distribution, +        File plugins = new File(buildDir, 'plugins-hack/plugins'), +        plugins.mkdirs(), +        from {, +          plugins.getParent(), +        }, +      }, +++ b/qa/vagrant/src/test/resources/packaging/scripts/20_tar_package.bats, +@test "[TAR] verify elasticsearch-plugin list runs without any plugins installed" {, +    # previously this would fail because the archive installations did, +    # not create an empty plugins directory, +    local plugins_list=`$ESHOME/bin/elasticsearch-plugin list`, +    [[ -z $plugins_list ]], +}, +, +++ b/qa/vagrant/src/test/resources/packaging/scripts/30_deb_package.bats, +@test "[DEB] verify elasticsearch-plugin list runs without any plugins installed" {, +    local plugins_list=`$ESHOME/bin/elasticsearch-plugin list`, +    [[ -z $plugins_list ]], +}, +, +++ b/qa/vagrant/src/test/resources/packaging/scripts/40_rpm_package.bats, +@test "[RPM] verify elasticsearch-plugin list runs without any plugins installed" {, +    local plugins_list=`$ESHOME/bin/elasticsearch-plugin list`, +    [[ -z $plugins_list ]], +}, +, +++ b/distribution/build.gradle, +      into('') {, +        // CopySpec does not make it easy to create an empty directory, +        // so we create the directory that we want, and then point, +        // CopySpec to its parent to copy to the root of the, +        // distribution, +        File plugins = new File(buildDir, 'plugins-hack/plugins'), +        plugins.mkdirs(), +        from {, +          plugins.getParent()]