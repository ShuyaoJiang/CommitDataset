[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/TypeEncounter.java, +@SuppressWarnings("overloads"), +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/TypeEncounter.java, +@SuppressWarnings("overloads"), +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +            this.fileStore = Environment.getFileStore(path);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/TypeEncounter.java, +@SuppressWarnings("overloads"), +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +            this.fileStore = Environment.getFileStore(path);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/TypeEncounter.java, +@SuppressWarnings("overloads"), +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +            this.fileStore = Environment.getFileStore(path);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +++ b/core/src/main/java/org/elasticsearch/search/query/QueryPhase.java, +                                break;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/TypeEncounter.java, +@SuppressWarnings("overloads"), +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +            this.fileStore = Environment.getFileStore(path);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +++ b/core/src/main/java/org/elasticsearch/search/query/QueryPhase.java, +                                break;, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +        assertTrue(Files.exists(translogDir.resolve(Translog.getFilename(1))));, +        if (Files.exists(translogDir.resolve(Translog.getFilename(id)))) {, +        fail(Translog.getFilename(id) + " is not present in any location: " + translog.location());, +        assertFalse("translog [" + id + "] still exists", Files.exists(translog.location().resolve(Translog.getFilename(id))));, +        try (final ImmutableTranslogReader reader = translog.openReader(translog.location().resolve(Translog.getFilename(translog.currentFileGeneration())), checkpoint)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/TypeEncounter.java, +@SuppressWarnings("overloads"), +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +            this.fileStore = Environment.getFileStore(path);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +++ b/core/src/main/java/org/elasticsearch/search/query/QueryPhase.java, +                                break;, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +        assertTrue(Files.exists(translogDir.resolve(Translog.getFilename(1))));, +        if (Files.exists(translogDir.resolve(Translog.getFilename(id)))) {, +        fail(Translog.getFilename(id) + " is not present in any location: " + translog.location());, +        assertFalse("translog [" + id + "] still exists", Files.exists(translog.location().resolve(Translog.getFilename(id))));, +        try (final ImmutableTranslogReader reader = translog.openReader(translog.location().resolve(Translog.getFilename(translog.currentFileGeneration())), checkpoint)) {, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/MinDocCountIT.java, +                throw ae;, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java, +        @SuppressWarnings("fallthrough"), +++ b/core/src/main/java/org/elasticsearch/common/inject/spi/TypeEncounter.java, +@SuppressWarnings("overloads"), +++ b/core/src/main/java/org/elasticsearch/env/NodeEnvironment.java, +            this.fileStore = Environment.getFileStore(path);, +++ b/core/src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java, +            // TODO: this switch seems very wrong...either each case should be breaking, or this should not be a switch, +++ b/core/src/main/java/org/elasticsearch/search/query/QueryPhase.java, +                                break;, +++ b/core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java, +        assertTrue(Files.exists(translogDir.resolve(Translog.getFilename(1))));, +        if (Files.exists(translogDir.resolve(Translog.getFilename(id)))) {, +        fail(Translog.getFilename(id) + " is not present in any location: " + translog.location());, +        assertFalse("translog [" + id + "] still exists", Files.exists(translog.location().resolve(Translog.getFilename(id))));, +        try (final ImmutableTranslogReader reader = translog.openReader(translog.location().resolve(Translog.getFilename(translog.currentFileGeneration())), checkpoint)) {, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/MinDocCountIT.java, +                throw ae;, +, +++ b/pom.xml, +                        <showWarnings>true</showWarnings>, +                            <arg>-Xlint:all</arg>, +                            <arg>-Xlint:-cast</arg>, +                            <arg>-Xlint:-deprecation</arg>, +                            <arg>-Xlint:-fallthrough</arg>, +                            <arg>-Xlint:-overrides</arg>, +                            <arg>-Xlint:-rawtypes</arg>, +                            <arg>-Xlint:-serial</arg>, +                            <arg>-Xlint:-try</arg>, +                            <arg>-Xlint:-unchecked</arg>]