[+++ b/src/main/java/org/elasticsearch/index/engine/internal/DeleteVersionValue.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.engine.internal;, +, +import org.elasticsearch.index.translog.Translog;, +, +/** Holds a deleted version, which just adds a timestmap to {@link VersionValue} so we know when we can expire the deletion. */, +, +class DeleteVersionValue extends VersionValue {, +    private final long time;, +, +    public DeleteVersionValue(long version, long time, Translog.Location translogLocation) {, +        super(version, translogLocation);, +        this.time = time;, +    }, +, +    @Override, +    public long time() {, +        return this.time;, +    }, +, +    @Override, +    public boolean delete() {, +        return true;, +    }, +}, +++ b/src/main/java/org/elasticsearch/index/engine/internal/DeleteVersionValue.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.index.engine.internal;, +, +import org.elasticsearch.index.translog.Translog;, +, +/** Holds a deleted version, which just adds a timestmap to {@link VersionValue} so we know when we can expire the deletion. */, +, +class DeleteVersionValue extends VersionValue {, +    private final long time;, +, +    public DeleteVersionValue(long version, long time, Translog.Location translogLocation) {, +        super(version, translogLocation);, +        this.time = time;, +    }, +, +    @Override, +    public long time() {, +        return this.time;, +    }, +, +    @Override, +    public boolean delete() {, +        return true;, +    }, +}, +++ b/src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java, +    private final LiveVersionMap versionMap;, +        this.versionMap = new LiveVersionMap();, +                versionMap.setManager(searcherManager);, +                VersionValue versionValue = versionMap.getUnderLock(get.uid().bytes());, +                versionValue = versionMap.getUnderLock(create.uid().bytes());, +            // if the doc does not exist or it exists but is not deleted, +            versionMap.putUnderLock(create.uid().bytes(), new VersionValue(updatedVersion, translogLocation));, +            VersionValue versionValue = versionMap.getUnderLock(index.uid().bytes());, +            versionMap.putUnderLock(index.uid().bytes(), new VersionValue(updatedVersion, translogLocation));, +            VersionValue versionValue = versionMap.getUnderLock(delete.uid().bytes());, +            final boolean found;]