[+++ b/docs/painless/painless-debugging.asciidoc, +PUT /hockey/_doc/1?refresh, +POST /hockey/_explain/1, +// TEST[s/_explain\/1/_explain\/1?error_trace=false/ catch:/painless_explain_error/], +POST /hockey/_update/1, +// TEST[continued s/_update\/1/_update\/1?error_trace=false/ catch:/painless_explain_error/], +++ b/docs/painless/painless-debugging.asciidoc, +PUT /hockey/_doc/1?refresh, +POST /hockey/_explain/1, +// TEST[s/_explain\/1/_explain\/1?error_trace=false/ catch:/painless_explain_error/], +POST /hockey/_update/1, +// TEST[continued s/_update\/1/_update\/1?error_trace=false/ catch:/painless_explain_error/], +++ b/docs/painless/painless-getting-started.asciidoc, +PUT hockey/_bulk?refresh, +POST hockey/_update/1, +POST hockey/_update/1, +++ b/docs/painless/painless-debugging.asciidoc, +PUT /hockey/_doc/1?refresh, +POST /hockey/_explain/1, +// TEST[s/_explain\/1/_explain\/1?error_trace=false/ catch:/painless_explain_error/], +POST /hockey/_update/1, +// TEST[continued s/_update\/1/_update\/1?error_trace=false/ catch:/painless_explain_error/], +++ b/docs/painless/painless-getting-started.asciidoc, +PUT hockey/_bulk?refresh, +POST hockey/_update/1, +POST hockey/_update/1, +++ b/docs/reference/aggregations/metrics/cardinality-aggregation.asciidoc, +                "field" : "type",, +                        "type_field": "type",, +++ b/docs/painless/painless-debugging.asciidoc, +PUT /hockey/_doc/1?refresh, +POST /hockey/_explain/1, +// TEST[s/_explain\/1/_explain\/1?error_trace=false/ catch:/painless_explain_error/], +POST /hockey/_update/1, +// TEST[continued s/_update\/1/_update\/1?error_trace=false/ catch:/painless_explain_error/], +++ b/docs/painless/painless-getting-started.asciidoc, +PUT hockey/_bulk?refresh, +POST hockey/_update/1, +POST hockey/_update/1, +++ b/docs/reference/aggregations/metrics/cardinality-aggregation.asciidoc, +                "field" : "type",, +                        "type_field": "type",, +++ b/docs/reference/docs/update.asciidoc, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST sessions/_update/dh3sgudg8gsrgl, +POST test/_update/1, +++ b/docs/painless/painless-debugging.asciidoc, +PUT /hockey/_doc/1?refresh, +POST /hockey/_explain/1, +// TEST[s/_explain\/1/_explain\/1?error_trace=false/ catch:/painless_explain_error/], +POST /hockey/_update/1, +// TEST[continued s/_update\/1/_update\/1?error_trace=false/ catch:/painless_explain_error/], +++ b/docs/painless/painless-getting-started.asciidoc, +PUT hockey/_bulk?refresh, +POST hockey/_update/1, +POST hockey/_update/1, +++ b/docs/reference/aggregations/metrics/cardinality-aggregation.asciidoc, +                "field" : "type",, +                        "type_field": "type",, +++ b/docs/reference/docs/update.asciidoc, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST test/_update/1, +POST sessions/_update/dh3sgudg8gsrgl, +POST test/_update/1, +++ b/docs/reference/getting-started.asciidoc, +A document is a basic unit of information that can be indexed. For example, you can have a document for a single customer, another document for a single product, and yet another for a single order. This document is expressed in http://json.org/[JSON] (JavaScript Object Notation) which is a ubiquitous internet data interchange format. Within an index, you can store as many documents as you want., +<HTTP Verb> /<Index>/<Endpoint>/<ID>, +POST /customer/_update/1?pretty, +POST /customer/_update/1?pretty, +POST /customer/_update/1?pretty, +Which means that we just successfully bulk indexed 1000 documents into the bank index.]