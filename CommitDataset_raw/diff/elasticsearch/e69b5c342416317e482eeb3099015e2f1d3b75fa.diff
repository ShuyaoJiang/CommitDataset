[+++ b/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +            if (coordinates.children == null) {, +                String error = "Invalid LinearRing found.";, +                error += (coordinates.coordinate == null) ?, +                        " No coordinate array provided" : " Found a single coordinate when expecting a coordinate array";, +                throw new ElasticsearchParseException(error);, +            } else if (coordinates.children.size() < 4) {, +++ b/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +            if (coordinates.children == null) {, +                String error = "Invalid LinearRing found.";, +                error += (coordinates.coordinate == null) ?, +                        " No coordinate array provided" : " Found a single coordinate when expecting a coordinate array";, +                throw new ElasticsearchParseException(error);, +            } else if (coordinates.children.size() < 4) {, +++ b/src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java, +        String invalidPoly = XContentFactory.jsonBuilder().startObject().field("type", "polygon"), +        XContentParser parser = JsonXContent.jsonXContent.createParser(invalidPoly);, +        invalidPoly = XContentFactory.jsonBuilder().startObject().field("type", "polygon"), +        parser = JsonXContent.jsonXContent.createParser(invalidPoly);, +        invalidPoly = XContentFactory.jsonBuilder().startObject().field("type", "polygon"), +        parser = JsonXContent.jsonXContent.createParser(invalidPoly);, +        invalidPoly = XContentFactory.jsonBuilder().startObject().field("type", "polygon"), +        parser = JsonXContent.jsonXContent.createParser(invalidPoly);, +        invalidPoly = XContentFactory.jsonBuilder().startObject().field("type", "polygon"), +        parser = JsonXContent.jsonXContent.createParser(invalidPoly);, +        invalidPoly = XContentFactory.jsonBuilder().startObject().field("type", "polygon"), +        parser = JsonXContent.jsonXContent.createParser(invalidPoly);, +        parser.nextToken();, +        ElasticsearchGeoAssertions.assertValidException(parser, ElasticsearchParseException.class);, +, +        // test case 7: create an invalid polygon with 0 LinearRings, +        invalidPoly = XContentFactory.jsonBuilder().startObject().field("type", "polygon"), +                .startArray("coordinates"), +                .startArray().value(-74.011).value(40.753).endArray(), +                .endArray(), +                .endObject().string();, +, +        parser = JsonXContent.jsonXContent.createParser(invalidPoly);]