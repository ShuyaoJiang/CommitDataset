[+++ b/core/pom.xml, +                                <include>org/elasticsearch/common/io/PathUtilsForTesting.class</include>, +++ b/core/pom.xml, +                                <include>org/elasticsearch/common/io/PathUtilsForTesting.class</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +++ b/core/pom.xml, +                                <include>org/elasticsearch/common/io/PathUtilsForTesting.class</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +++ b/core/src/main/java/org/elasticsearch/common/io/PathUtils.java, +    /** can be changed by tests */, +    static volatile FileSystem DEFAULT = ACTUAL_DEFAULT;, +++ b/core/pom.xml, +                                <include>org/elasticsearch/common/io/PathUtilsForTesting.class</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +++ b/core/src/main/java/org/elasticsearch/common/io/PathUtils.java, +    /** can be changed by tests */, +    static volatile FileSystem DEFAULT = ACTUAL_DEFAULT;, +++ b/core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java, +    , +    /**, +     * Returns the type (for testing), +     */, +    public MultiMatchQueryBuilder.Type getType() {, +        return type;, +    }, +++ b/core/pom.xml, +                                <include>org/elasticsearch/common/io/PathUtilsForTesting.class</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +++ b/core/src/main/java/org/elasticsearch/common/io/PathUtils.java, +    /** can be changed by tests */, +    static volatile FileSystem DEFAULT = ACTUAL_DEFAULT;, +++ b/core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java, +    , +    /**, +     * Returns the type (for testing), +     */, +    public MultiMatchQueryBuilder.Type getType() {, +        return type;, +    }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +  // needed by aws core sdk (TODO: look into this), +  permission java.lang.RuntimePermission "accessClassInPackage.sun.security.ssl";, +++ b/core/pom.xml, +                                <include>org/elasticsearch/common/io/PathUtilsForTesting.class</include>, +++ b/core/src/main/java/org/elasticsearch/bootstrap/ESPolicy.java, +++ b/core/src/main/java/org/elasticsearch/common/io/PathUtils.java, +    /** can be changed by tests */, +    static volatile FileSystem DEFAULT = ACTUAL_DEFAULT;, +++ b/core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java, +    , +    /**, +     * Returns the type (for testing), +     */, +    public MultiMatchQueryBuilder.Type getType() {, +        return type;, +    }, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +  // needed by aws core sdk (TODO: look into this), +  permission java.lang.RuntimePermission "accessClassInPackage.sun.security.ssl";, +++ b/core/src/test/java/org/elasticsearch/common/io/PathUtilsForTesting.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.io;, +, +import org.apache.lucene.util.LuceneTestCase;, +, +import java.nio.file.FileSystem;, +, +/** , + * Exposes some package private stuff in PathUtils for framework purposes only! , + */, +public class PathUtilsForTesting {, +    , +    /** Sets a new default filesystem for testing */, +    public static void setup() {, +        FileSystem mock = LuceneTestCase.getBaseTempDirForTestClass().getFileSystem();, +        PathUtils.DEFAULT = mock;, +    }, +    , +    /** Resets filesystem back to the real system default */, +    public static void teardown() {, +        PathUtils.DEFAULT = PathUtils.ACTUAL_DEFAULT;, +    }]