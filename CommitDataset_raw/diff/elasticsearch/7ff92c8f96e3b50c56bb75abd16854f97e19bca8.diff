[+++ b/src/test/java/org/elasticsearch/watcher/input/search/SearchInputTests.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import static org.elasticsearch.watcher.test.WatcherTestUtils.areJsonEquivalent;, +import static org.hamcrest.Matchers.*;, +        assertThat(areJsonEquivalent(executedResult.executedRequest().templateSource().toUtf8(), expectedQuery), is(true));, +++ b/src/test/java/org/elasticsearch/watcher/input/search/SearchInputTests.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import static org.elasticsearch.watcher.test.WatcherTestUtils.areJsonEquivalent;, +import static org.hamcrest.Matchers.*;, +        assertThat(areJsonEquivalent(executedResult.executedRequest().templateSource().toUtf8(), expectedQuery), is(true));, +++ b/src/test/java/org/elasticsearch/watcher/test/WatcherTestUtils.java, +import org.elasticsearch.common.base.Charsets;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.XContentParser;, +    public static boolean areJsonEquivalent(String json1, String json2) throws IOException {, +        XContentParser parser1 = XContentHelper.createParser(json1.getBytes(Charsets.UTF_8), 0, json1.getBytes(Charsets.UTF_8).length);, +        XContentParser parser2 = XContentHelper.createParser(json2.getBytes(Charsets.UTF_8), 0, json2.getBytes(Charsets.UTF_8).length);, +        Map<String, Object> map1 = parser1.map();, +        Map<String, Object> map2 = parser2.map();, +        return map1.equals(map2);, +    }, +++ b/src/test/java/org/elasticsearch/watcher/input/search/SearchInputTests.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import static org.elasticsearch.watcher.test.WatcherTestUtils.areJsonEquivalent;, +import static org.hamcrest.Matchers.*;, +        assertThat(areJsonEquivalent(executedResult.executedRequest().templateSource().toUtf8(), expectedQuery), is(true));, +++ b/src/test/java/org/elasticsearch/watcher/test/WatcherTestUtils.java, +import org.elasticsearch.common.base.Charsets;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.common.xcontent.XContentParser;, +    public static boolean areJsonEquivalent(String json1, String json2) throws IOException {, +        XContentParser parser1 = XContentHelper.createParser(json1.getBytes(Charsets.UTF_8), 0, json1.getBytes(Charsets.UTF_8).length);, +        XContentParser parser2 = XContentHelper.createParser(json2.getBytes(Charsets.UTF_8), 0, json2.getBytes(Charsets.UTF_8).length);, +        Map<String, Object> map1 = parser1.map();, +        Map<String, Object> map2 = parser2.map();, +        return map1.equals(map2);, +    }, +++ b/src/test/java/org/elasticsearch/watcher/transform/search/SearchTransformTests.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +        assertThat(areJsonEquivalent(executedResult.executedRequest().templateSource().toUtf8(), expectedQuery), is(true));]