[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +import org.elasticsearch.client.Response;, +        }, +, +        {, +            // tag::delete-index-notfound, +            try {, +                DeleteIndexRequest request = new DeleteIndexRequest("does_not_exist");, +                client.indices().deleteIndex(request);, +            } catch (ElasticsearchException exception) {, +                if (exception.status() == RestStatus.NOT_FOUND) {, +                    // <1>, +                }, +            }, +            // end::delete-index-notfound, +        }, +    }, +, +    public void testDeleteIndexAsync() throws Exception {, +        final RestHighLevelClient client = highLevelClient();, +, +        {, +            CreateIndexResponse createIndexResponse = client.indices().createIndex(new CreateIndexRequest("posts"));, +            assertTrue(createIndexResponse.isAcknowledged());, +        }, +, +        {, +            DeleteIndexRequest request = new DeleteIndexRequest("posts");, +            assertBusy(() -> {, +                // TODO Use Indices Exist API instead once it exists, +                Response response = client.getLowLevelClient().performRequest("HEAD", "posts");, +                assertTrue(RestStatus.NOT_FOUND.getStatus() == response.getStatusLine().getStatusCode());, +            });, +        }, +    }, +, +    public void testCreateIndexAsync() throws Exception {, +        final RestHighLevelClient client = highLevelClient();, +, +        {, +            CreateIndexRequest request = new CreateIndexRequest("twitter");, +, +            assertBusy(() -> {, +                // TODO Use Indices Exist API instead once it exists, +                Response response = client.getLowLevelClient().performRequest("HEAD", "twitter");, +                assertTrue(RestStatus.OK.getStatus() == response.getStatusLine().getStatusCode());, +            });, +, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +import org.elasticsearch.client.Response;, +        }, +, +        {, +            // tag::delete-index-notfound, +            try {, +                DeleteIndexRequest request = new DeleteIndexRequest("does_not_exist");, +                client.indices().deleteIndex(request);, +            } catch (ElasticsearchException exception) {, +                if (exception.status() == RestStatus.NOT_FOUND) {, +                    // <1>, +                }, +            }, +            // end::delete-index-notfound, +        }, +    }, +, +    public void testDeleteIndexAsync() throws Exception {, +        final RestHighLevelClient client = highLevelClient();, +, +        {, +            CreateIndexResponse createIndexResponse = client.indices().createIndex(new CreateIndexRequest("posts"));, +            assertTrue(createIndexResponse.isAcknowledged());, +        }, +, +        {, +            DeleteIndexRequest request = new DeleteIndexRequest("posts");, +            assertBusy(() -> {, +                // TODO Use Indices Exist API instead once it exists, +                Response response = client.getLowLevelClient().performRequest("HEAD", "posts");, +                assertTrue(RestStatus.NOT_FOUND.getStatus() == response.getStatusLine().getStatusCode());, +            });, +        }, +    }, +, +    public void testCreateIndexAsync() throws Exception {, +        final RestHighLevelClient client = highLevelClient();, +, +        {, +            CreateIndexRequest request = new CreateIndexRequest("twitter");, +, +            assertBusy(() -> {, +                // TODO Use Indices Exist API instead once it exists, +                Response response = client.getLowLevelClient().performRequest("HEAD", "twitter");, +                assertTrue(RestStatus.OK.getStatus() == response.getStatusLine().getStatusCode());, +            });, +, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MigrationDocumentationIT.java, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +import org.elasticsearch.client.Response;, +        }]