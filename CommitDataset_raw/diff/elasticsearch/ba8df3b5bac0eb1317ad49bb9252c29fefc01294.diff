[+++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +            detectNoop = in.readBoolean();, +            out.writeBoolean(detectNoop);, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +            detectNoop = in.readBoolean();, +            out.writeBoolean(detectNoop);, +++ b/src/main/java/org/elasticsearch/index/indexing/IndexingStats.java, +            if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +            if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +            detectNoop = in.readBoolean();, +            out.writeBoolean(detectNoop);, +++ b/src/main/java/org/elasticsearch/index/indexing/IndexingStats.java, +            if (in.getVersion().onOrAfter(Version.V_1_4_0)) {, +            if (out.getVersion().onOrAfter(Version.V_1_4_0)) {, +++ b/src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java, +import org.elasticsearch.action.admin.indices.stats.IndicesStatsResponse;, +    @Test, +    public void testIndicesStats() {, +        createIndex("test");, +        ensureYellow("test");, +, +        IndicesStatsResponse indicesStatsResponse = client().admin().indices().prepareStats().all().get();, +        assertThat(indicesStatsResponse.getIndices().size(), equalTo(1));, +        assertThat(indicesStatsResponse.getIndices().containsKey("test"), equalTo(true));, +    }, +]