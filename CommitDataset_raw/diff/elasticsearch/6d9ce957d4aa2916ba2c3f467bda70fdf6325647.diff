[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +import org.elasticsearch.common.collect.Tuple;, +            Tuple<String, TokenizerFactory> tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers,, +                        analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory.v1(), tokenizerFactory.v2(), charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(, +                    customAnalyzer.getTokenizerName(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static Tuple<String, TokenizerFactory> parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        String name;, +            name = "_anonymous_tokenizer";, +                name = tokenizer.name;, +                name = tokenizer.name;, +        return new Tuple<>(name, tokenizerFactory);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +import org.elasticsearch.common.collect.Tuple;, +            Tuple<String, TokenizerFactory> tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers,, +                        analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory.v1(), tokenizerFactory.v2(), charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(, +                    customAnalyzer.getTokenizerName(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static Tuple<String, TokenizerFactory> parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        String name;, +            name = "_anonymous_tokenizer";, +                name = tokenizer.name;, +                name = tokenizer.name;, +        return new Tuple<>(name, tokenizerFactory);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AbstractTokenizerFactory.java, +    // TODO drop `String ignored` in a followup, +    public AbstractTokenizerFactory(IndexSettings indexSettings, String ignored, Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +import org.elasticsearch.common.collect.Tuple;, +            Tuple<String, TokenizerFactory> tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers,, +                        analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory.v1(), tokenizerFactory.v2(), charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(, +                    customAnalyzer.getTokenizerName(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static Tuple<String, TokenizerFactory> parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        String name;, +            name = "_anonymous_tokenizer";, +                name = tokenizer.name;, +                name = tokenizer.name;, +        return new Tuple<>(name, tokenizerFactory);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AbstractTokenizerFactory.java, +    // TODO drop `String ignored` in a followup, +    public AbstractTokenizerFactory(IndexSettings indexSettings, String ignored, Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzer.java, +    private final String tokenizerName;, +    public CustomAnalyzer(String tokenizerName, TokenizerFactory tokenizerFactory, CharFilterFactory[] charFilters,, +            TokenFilterFactory[] tokenFilters) {, +        this(tokenizerName, tokenizerFactory, charFilters, tokenFilters, 0, -1);, +    public CustomAnalyzer(String tokenizerName, TokenizerFactory tokenizerFactory, CharFilterFactory[] charFilters,, +            TokenFilterFactory[] tokenFilters, int positionIncrementGap, int offsetGap) {, +        this.tokenizerName = tokenizerName;, +    /**, +     * The name of the tokenizer as configured by the user., +     */, +    public String getTokenizerName() {, +        return tokenizerName;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +import org.elasticsearch.common.collect.Tuple;, +            Tuple<String, TokenizerFactory> tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers,, +                        analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory.v1(), tokenizerFactory.v2(), charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(, +                    customAnalyzer.getTokenizerName(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static Tuple<String, TokenizerFactory> parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        String name;, +            name = "_anonymous_tokenizer";, +                name = tokenizer.name;, +                name = tokenizer.name;, +        return new Tuple<>(name, tokenizerFactory);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AbstractTokenizerFactory.java, +    // TODO drop `String ignored` in a followup, +    public AbstractTokenizerFactory(IndexSettings indexSettings, String ignored, Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzer.java, +    private final String tokenizerName;, +    public CustomAnalyzer(String tokenizerName, TokenizerFactory tokenizerFactory, CharFilterFactory[] charFilters,, +            TokenFilterFactory[] tokenFilters) {, +        this(tokenizerName, tokenizerFactory, charFilters, tokenFilters, 0, -1);, +    public CustomAnalyzer(String tokenizerName, TokenizerFactory tokenizerFactory, CharFilterFactory[] charFilters,, +            TokenFilterFactory[] tokenFilters, int positionIncrementGap, int offsetGap) {, +        this.tokenizerName = tokenizerName;, +    /**, +     * The name of the tokenizer as configured by the user., +     */, +    public String getTokenizerName() {, +        return tokenizerName;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzerProvider.java, +        this.customAnalyzer = new CustomAnalyzer(tokenizerName, tokenizer,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +import org.elasticsearch.common.collect.Tuple;, +            Tuple<String, TokenizerFactory> tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers,, +                        analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory.v1(), tokenizerFactory.v2(), charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(, +                    customAnalyzer.getTokenizerName(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static Tuple<String, TokenizerFactory> parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        String name;]