[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.gradle.api.file.FileCollection, +, +            if (project.path.startsWith(':modules:')) {, +                project.integTest.clusterConfig.module(project), +                project.tasks.run.clusterConfig.module(project), +            } else {, +                project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.gradle.api.file.FileCollection, +, +            if (project.path.startsWith(':modules:')) {, +                project.integTest.clusterConfig.module(project), +                project.tasks.run.clusterConfig.module(project), +            } else {, +                project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    List<Project> modules = new ArrayList<>(), +, +    /** Add a module to the cluster. The project must be an esplugin and have a single zip default artifact. */, +    @Input, +    void module(Project moduleProject) {, +        modules.add(moduleProject), +    }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.gradle.api.file.FileCollection, +, +            if (project.path.startsWith(':modules:')) {, +                project.integTest.clusterConfig.module(project), +                project.tasks.run.clusterConfig.module(project), +            } else {, +                project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    List<Project> modules = new ArrayList<>(), +, +    /** Add a module to the cluster. The project must be an esplugin and have a single zip default artifact. */, +    @Input, +    void module(Project moduleProject) {, +        modules.add(moduleProject), +    }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        // install modules, +        for (Project module : node.config.modules) {, +            String actionName = pluginTaskName('install', module.name, 'Module'), +            setup = configureInstallModuleTask(taskName(task, node, actionName), project, setup, node, module), +        }, +, +    static Task configureInstallModuleTask(String name, Project project, Task setup, NodeInfo node, Project module) {, +        if (node.config.distribution != 'integ-test-zip') {, +            throw new GradleException("Module ${module.path} cannot be installed in cluster which is not using integ-test-zip"), +        }, +        if (module.plugins.hasPlugin(PluginBuildPlugin) == false) {, +            throw new GradleException("Task ${name} cannot include module ${module.path} which is not an esplugin"), +        }, +        Copy installModule = project.tasks.create(name, Copy.class), +        installModule.dependsOn(setup), +        installModule.into(new File(node.homeDir, "modules/${module.name}")), +        installModule.from({ project.zipTree(module.tasks.bundlePlugin.outputs.files.singleFile) }), +        return installModule, +    }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +import org.gradle.api.file.FileCollection, +, +            if (project.path.startsWith(':modules:')) {, +                project.integTest.clusterConfig.module(project), +                project.tasks.run.clusterConfig.module(project), +            } else {, +                project.integTest.clusterConfig.plugin(name, project.bundlePlugin.outputs.files), +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    List<Project> modules = new ArrayList<>(), +, +    /** Add a module to the cluster. The project must be an esplugin and have a single zip default artifact. */, +    @Input, +    void module(Project moduleProject) {, +        modules.add(moduleProject), +    }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        // install modules, +        for (Project module : node.config.modules) {, +            String actionName = pluginTaskName('install', module.name, 'Module'), +            setup = configureInstallModuleTask(taskName(task, node, actionName), project, setup, node, module), +        }, +, +    static Task configureInstallModuleTask(String name, Project project, Task setup, NodeInfo node, Project module) {, +        if (node.config.distribution != 'integ-test-zip') {, +            throw new GradleException("Module ${module.path} cannot be installed in cluster which is not using integ-test-zip"), +        }, +        if (module.plugins.hasPlugin(PluginBuildPlugin) == false) {, +            throw new GradleException("Task ${name} cannot include module ${module.path} which is not an esplugin"), +        }, +        Copy installModule = project.tasks.create(name, Copy.class), +        installModule.dependsOn(setup)]