[+++ b/.gitignore, +# gradle wrapper , +gradle/, +gradlew, +gradlew.bat, +, +++ b/.gitignore, +# gradle wrapper , +gradle/, +gradlew, +gradlew.bat, +, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java, +        AnalyzeRequest request = new AnalyzeRequest();, +        request.analyzer("custom_analyzer");, +        request.text("the qu1ck brown fox-dog");, +        try {, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, null, registry, environment);, +            fail("no analysis service provided");, +        } catch (IllegalArgumentException e) {, +    }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.analyzer("foobar");, +            request.text("the qu1ck brown fox");, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, notGlobal ? analysisService : null, registry, environment);, +            fail("no such analyzer");, +        } catch (IllegalArgumentException e) {, +        }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.tokenizer("foobar");, +            request.text("the qu1ck brown fox");, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, notGlobal ? analysisService : null, registry, environment);, +            fail("no such analyzer");, +        } catch (IllegalArgumentException e) {, +        }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.tokenizer("whitespace");, +            request.addTokenFilter("foobar");, +            request.text("the qu1ck brown fox");, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, notGlobal ? analysisService : null, registry, environment);, +            fail("no such analyzer");, +        } catch (IllegalArgumentException e) {, +        }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.tokenizer("whitespace");, +            request.addTokenFilter("lowercase");, +            request.addCharFilter("foobar");, +            request.text("the qu1ck brown fox");, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, notGlobal ? analysisService : null, registry, environment);, +            fail("no such analyzer");, +        } catch (IllegalArgumentException e) {, +}, +++ b/.gitignore, +# gradle wrapper , +gradle/, +gradlew, +gradlew.bat, +, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java, +        AnalyzeRequest request = new AnalyzeRequest();, +        request.analyzer("custom_analyzer");, +        request.text("the qu1ck brown fox-dog");, +        try {, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, null, registry, environment);, +            fail("no analysis service provided");, +        } catch (IllegalArgumentException e) {, +    }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.analyzer("foobar");, +            request.text("the qu1ck brown fox");, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, notGlobal ? analysisService : null, registry, environment);, +            fail("no such analyzer");, +        } catch (IllegalArgumentException e) {, +        }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.tokenizer("foobar");, +            request.text("the qu1ck brown fox");, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, notGlobal ? analysisService : null, registry, environment);, +            fail("no such analyzer");, +        } catch (IllegalArgumentException e) {, +        }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.tokenizer("whitespace");, +            request.addTokenFilter("foobar");, +            request.text("the qu1ck brown fox");, +            TransportAnalyzeAction.analyze(request, AllFieldMapper.NAME, null, notGlobal ? analysisService : null, registry, environment);, +            fail("no such analyzer");, +        } catch (IllegalArgumentException e) {, +        }, +        try {, +            AnalyzeRequest request = new AnalyzeRequest();, +            request.tokenizer("whitespace");, +            request.addTokenFilter("lowercase");]