[+++ b/src/main/java/org/elasticsearch/common/Table.java, +    private Map<String, Cell> headerMap = Maps.newHashMap();, +         *, +         * Also populate map to look up headers by name., +         *, +            headerMap.put(header.value.toString(), header);, +    public Map<String, Cell> getHeaderMap() {, +        return this.headerMap;, +    }, +, +++ b/src/main/java/org/elasticsearch/common/Table.java, +    private Map<String, Cell> headerMap = Maps.newHashMap();, +         *, +         * Also populate map to look up headers by name., +         *, +            headerMap.put(header.value.toString(), header);, +    public Map<String, Cell> getHeaderMap() {, +        return this.headerMap;, +    }, +, +++ b/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java, +        table.addCell("docs.count", "alias:docsCount;text-align:right;desc:available docs");, +        table.addCell("docs.deleted", "alias:docsDeleted;text-align:right;desc:deleted docs");, +        table.addCell("store.size", "sibling:pri;alias:ss,storeSize;text-align:right;desc:store size of primaries & replicas");, +        table.addCell("pri.store.size", "text-align:right;desc:store size of primaries");, +        table.addCell("completion.size", "sibling:pri;alias:cs,completionSize;default:false;text-align:right;desc:size of completion");, +        table.addCell("pri.completion.size", "default:false;text-align:right;desc:size of completion");, +        table.addCell("fielddata.memory_size", "sibling:pri;alias:fm,fielddataMemory;default:false;text-align:right;desc:used fielddata cache");, +        table.addCell("pri.fielddata.memory_size", "default:false;text-align:right;desc:used fielddata cache");, +        table.addCell("fielddata.evictions", "sibling:pri;alias:fe,fielddataEvictions;default:false;text-align:right;desc:fielddata evictions");, +        table.addCell("pri.fielddata.evictions", "default:false;text-align:right;desc:fielddata evictions");, +        table.addCell("filter_cache.memory_size", "sibling:pri;alias:fcm,filterCacheMemory;default:false;text-align:right;desc:used filter cache");, +        table.addCell("pri.filter_cache.memory_size", "default:false;text-align:right;desc:used filter cache");, +        table.addCell("filter_cache.evictions", "sibling:pri;alias:fce,filterCacheEvictions;default:false;text-align:right;desc:filter cache evictions");, +        table.addCell("pri.filter_cache.evictions", "default:false;text-align:right;desc:filter cache evictions");, +        table.addCell("flush.total", "sibling:pri;alias:ft,flushTotal;default:false;text-align:right;desc:number of flushes");, +        table.addCell("pri.flush.total", "default:false;text-align:right;desc:number of flushes");, +        table.addCell("flush.total_time", "sibling:pri;alias:ftt,flushTotalTime;default:false;text-align:right;desc:time spent in flush");, +        table.addCell("pri.flush.total_time", "default:false;text-align:right;desc:time spent in flush");, +        table.addCell("get.current", "sibling:pri;alias:gc,getCurrent;default:false;text-align:right;desc:number of current get ops");, +        table.addCell("pri.get.current", "default:false;text-align:right;desc:number of current get ops");, +        table.addCell("get.time", "sibling:pri;alias:gti,getTime;default:false;text-align:right;desc:time spent in get");, +        table.addCell("pri.get.time", "default:false;text-align:right;desc:time spent in get");, +        table.addCell("get.total", "sibling:pri;alias:gto,getTotal;default:false;text-align:right;desc:number of get ops");, +        table.addCell("pri.get.total", "default:false;text-align:right;desc:number of get ops");, +        table.addCell("get.exists_time", "sibling:pri;alias:geti,getExistsTime;default:false;text-align:right;desc:time spent in successful gets");, +        table.addCell("pri.get.exists_time", "default:false;text-align:right;desc:time spent in successful gets");, +        table.addCell("get.exists_total", "sibling:pri;alias:geto,getExistsTotal;default:false;text-align:right;desc:number of successful gets");, +        table.addCell("pri.get.exists_total", "default:false;text-align:right;desc:number of successful gets");, +        table.addCell("get.missing_time", "sibling:pri;alias:gmti,getMissingTime;default:false;text-align:right;desc:time spent in failed gets");, +        table.addCell("pri.get.missing_time", "default:false;text-align:right;desc:time spent in failed gets");, +        table.addCell("get.missing_total", "sibling:pri;alias:gmto,getMissingTotal;default:false;text-align:right;desc:number of failed gets");, +        table.addCell("pri.get.missing_total", "default:false;text-align:right;desc:number of failed gets");, +        table.addCell("id_cache.memory_size", "sibling:pri;alias:im,idCacheMemory;default:false;text-align:right;desc:used id cache");, +        table.addCell("pri.id_cache.memory_size", "default:false;text-align:right;desc:used id cache");, +        table.addCell("indexing.delete_current", "sibling:pri;alias:idc,indexingDeleteCurrent;default:false;text-align:right;desc:number of current deletions");, +        table.addCell("pri.indexing.delete_current", "default:false;text-align:right;desc:number of current deletions");, +        table.addCell("indexing.delete_time", "sibling:pri;alias:idti,indexingDeleteTime;default:false;text-align:right;desc:time spent in deletions");, +        table.addCell("pri.indexing.delete_time", "default:false;text-align:right;desc:time spent in deletions");, +        table.addCell("indexing.delete_total", "sibling:pri;alias:idto,indexingDeleteTotal;default:false;text-align:right;desc:number of delete ops");, +        table.addCell("pri.indexing.delete_total", "default:false;text-align:right;desc:number of delete ops");, +        table.addCell("indexing.index_current", "sibling:pri;alias:iic,indexingIndexCurrent;default:false;text-align:right;desc:number of current indexing ops");, +        table.addCell("pri.indexing.index_current", "default:false;text-align:right;desc:number of current indexing ops");, +        table.addCell("indexing.index_time", "sibling:pri;alias:iiti,indexingIndexTime;default:false;text-align:right;desc:time spent in indexing");, +        table.addCell("pri.indexing.index_time", "default:false;text-align:right;desc:time spent in indexing");, +        table.addCell("indexing.index_total", "sibling:pri;alias:iito,indexingIndexTotal;default:false;text-align:right;desc:number of indexing ops");, +        table.addCell("pri.indexing.index_total", "default:false;text-align:right;desc:number of indexing ops");, +        table.addCell("merges.current", "sibling:pri;alias:mc,mergesCurrent;default:false;text-align:right;desc:number of current merges");, +        table.addCell("pri.merges.current", "default:false;text-align:right;desc:number of current merges");, +        table.addCell("merges.current_docs", "sibling:pri;alias:mcd,mergesCurrentDocs;default:false;text-align:right;desc:number of current merging docs");, +        table.addCell("pri.merges.current_docs", "default:false;text-align:right;desc:number of current merging docs");, +        table.addCell("merges.current_size", "sibling:pri;alias:mcs,mergesCurrentSize;default:false;text-align:right;desc:size of current merges");, +        table.addCell("pri.merges.current_size", "default:false;text-align:right;desc:size of current merges");, +        table.addCell("merges.total", "sibling:pri;alias:mt,mergesTotal;default:false;text-align:right;desc:number of completed merge ops");, +        table.addCell("pri.merges.total", "default:false;text-align:right;desc:number of completed merge ops");, +, +        table.addCell("merges.total_docs", "sibling:pri;alias:mtd,mergesTotalDocs;default:false;text-align:right;desc:docs merged");, +        table.addCell("pri.merges.total_docs", "default:false;text-align:right;desc:docs merged");, +, +        table.addCell("merges.total_size", "sibling:pri;alias:mts,mergesTotalSize;default:false;text-align:right;desc:size merged");, +        table.addCell("pri.merges.total_size", "default:false;text-align:right;desc:size merged");, +, +        table.addCell("merges.total_time", "sibling:pri;alias:mtt,mergesTotalTime;default:false;text-align:right;desc:time spent in merges");, +        table.addCell("pri.merges.total_time", "default:false;text-align:right;desc:time spent in merges");, +, +        table.addCell("percolate.current", "sibling:pri;alias:pc,percolateCurrent;default:false;text-align:right;desc:number of current percolations");, +        table.addCell("pri.percolate.current", "default:false;text-align:right;desc:number of current percolations");, +, +        table.addCell("percolate.memory_size", "sibling:pri;alias:pm,percolateMemory;default:false;text-align:right;desc:memory used by percolations");, +        table.addCell("pri.percolate.memory_size", "default:false;text-align:right;desc:memory used by percolations");, +, +        table.addCell("percolate.queries", "sibling:pri;alias:pq,percolateQueries;default:false;text-align:right;desc:number of registered percolation queries");, +        table.addCell("pri.percolate.queries", "default:false;text-align:right;desc:number of registered percolation queries");, +, +        table.addCell("percolate.time", "sibling:pri;alias:pti,percolateTime;default:false;text-align:right;desc:time spent percolating");, +        table.addCell("pri.percolate.time", "default:false;text-align:right;desc:time spent percolating");, +, +        table.addCell("percolate.total", "sibling:pri;alias:pto,percolateTotal;default:false;text-align:right;desc:total percolations");, +        table.addCell("pri.percolate.total", "default:false;text-align:right;desc:total percolations");, +]