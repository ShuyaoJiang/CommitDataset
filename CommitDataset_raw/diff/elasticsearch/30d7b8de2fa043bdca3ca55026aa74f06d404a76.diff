[+++ b/pom.xml, +        <lucene.version>4.7.0</lucene.version>, +++ b/pom.xml, +        <lucene.version>4.7.0</lucene.version>, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>4.7.0</lucene.version>, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>4.7.0</lucene.version>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>4.7.0</lucene.version>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/pom.xml, +        <lucene.version>4.7.0</lucene.version>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +  /** Number of entries the lookup was built with */, +  private long count = 0;, +, +    count = 0;, +        count++;, +    public long getCount() {, +        return count;, +    }, +, +    @Override, +  @Override, +  public boolean store(DataOutput output) throws IOException {, +    output.writeVLong(count);, +    if (fst == null) {, +      return false;, +    }, +, +    fst.save(output);, +    output.writeVInt(maxAnalyzedPathsForOneInput);, +    output.writeByte((byte) (hasPayloads ? 1 : 0));, +    return true;, +  }, +, +  @Override, +  public boolean load(DataInput input) throws IOException {, +    count = input.readVLong();, +    this.fst = new FST<Pair<Long,BytesRef>>(input, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(), ByteSequenceOutputs.getSingleton()));, +    maxAnalyzedPathsForOneInput = input.readVInt();, +    hasPayloads = input.readByte() == 1;, +    return true;, +  }, +, +++ b/pom.xml, +        <lucene.version>4.7.0</lucene.version>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java, +  /** Number of entries the lookup was built with */, +  private long count = 0;, +, +    count = 0;, +        count++;, +    public long getCount() {, +        return count;, +    }, +, +    @Override, +  @Override, +  public boolean store(DataOutput output) throws IOException {, +    output.writeVLong(count);, +    if (fst == null) {, +      return false;, +    }, +, +    fst.save(output);, +    output.writeVInt(maxAnalyzedPathsForOneInput);, +    output.writeByte((byte) (hasPayloads ? 1 : 0));, +    return true;, +  }, +, +  @Override, +  public boolean load(DataInput input) throws IOException {, +    count = input.readVLong();, +    this.fst = new FST<Pair<Long,BytesRef>>(input, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(), ByteSequenceOutputs.getSingleton()));, +    maxAnalyzedPathsForOneInput = input.readVInt();, +    hasPayloads = input.readByte() == 1;, +    return true;, +  }, +, +++ b/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_1_0 = new Version(V_1_1_0_ID, true, org.apache.lucene.util.Version.LUCENE_47);]