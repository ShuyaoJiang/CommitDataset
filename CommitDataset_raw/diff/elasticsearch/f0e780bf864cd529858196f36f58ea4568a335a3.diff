[+++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            ifNoTests 'fail', +            leaveTemporary true, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            ifNoTests 'fail', +            leaveTemporary true, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +, +    private final MapperRegistry mapperRegistry;, +, +    public MetaDataIndexUpgradeService(Settings settings, MapperRegistry mapperRegistry) {, +        this.mapperRegistry = mapperRegistry;, +                try (MapperService mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry)) {, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +import com.esotericsoftware.kryo.serializers.FieldSerializer, +    @Optional, +    @Input, +    boolean leaveTemporary = false, +, +    @Optional, +    @Input, +    String ifNoTests = 'ignore', +, +            shuffleOnSlave: shuffleOnSlave,, +            leaveTemporary: leaveTemporary,, +            ifNoTests: ifNoTests, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            ifNoTests 'fail', +            leaveTemporary true, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.indices.mapper.MapperRegistry;, +, +    private final MapperRegistry mapperRegistry;, +, +    public MetaDataIndexUpgradeService(Settings settings, MapperRegistry mapperRegistry) {, +        this.mapperRegistry = mapperRegistry;, +                try (MapperService mapperService = new MapperService(indexSettings, analysisService, similarityService, mapperRegistry)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/AllocationId.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.ObjectParser;, +import java.util.Objects;, +    private static final ObjectParser<AllocationId.Builder, Void> ALLOCATION_ID_PARSER = new ObjectParser<>("allocationId");, +, +    static {, +        ALLOCATION_ID_PARSER.declareString(AllocationId.Builder::setId, new ParseField(ID_KEY));, +        ALLOCATION_ID_PARSER.declareString(AllocationId.Builder::setRelocationId, new ParseField(RELOCATION_ID_KEY));, +    }, +, +    private static class Builder {, +        private String id;, +        private String relocationId;, +, +        public void setId(String id) {, +            this.id = id;, +        }, +, +        public void setRelocationId(String relocationId) {, +            this.relocationId = relocationId;, +        }, +]