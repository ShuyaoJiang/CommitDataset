[+++ b/TESTING.asciidoc, +gradle prepareTestRoot, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +, +== Building with extra plugins, +Additional plugins may be built alongside elasticsearch, where their, +dependency on elasticsearch will be substituted with the local elasticsearch, +build. To add your plugin, check it out into the extra-plugins directory., +The build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +, +---------------------------------------------------------------------------, +gradle projects, +---------------------------------------------------------------------------, +, +++ b/TESTING.asciidoc, +gradle prepareTestRoot, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +, +== Building with extra plugins, +Additional plugins may be built alongside elasticsearch, where their, +dependency on elasticsearch will be substituted with the local elasticsearch, +build. To add your plugin, check it out into the extra-plugins directory., +The build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +, +---------------------------------------------------------------------------, +gradle projects, +---------------------------------------------------------------------------, +, +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/distributions, +export TAR=/elasticsearch/distribution/tar/build/distributions, +export RPM=/elasticsearch/distribution/rpm/build/distributions, +export DEB=/elasticsearch/distribution/deb/build/distributions, +++ b/TESTING.asciidoc, +gradle prepareTestRoot, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +, +== Building with extra plugins, +Additional plugins may be built alongside elasticsearch, where their, +dependency on elasticsearch will be substituted with the local elasticsearch, +build. To add your plugin, check it out into the extra-plugins directory., +The build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +, +---------------------------------------------------------------------------, +gradle projects, +---------------------------------------------------------------------------, +, +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/distributions, +export TAR=/elasticsearch/distribution/tar/build/distributions, +export RPM=/elasticsearch/distribution/rpm/build/distributions, +export DEB=/elasticsearch/distribution/deb/build/distributions, +++ b/build.gradle, +      javadoc = true, +  project.afterEvaluate {, +    // ignore missing javadocs, +    tasks.withType(Javadoc) { Javadoc javadoc ->, +      // the -quiet here is because of a bug in gradle, in that adding a string option, +      // by itself is not added to the options. By adding quiet, both this option and, +      // the "value" -quiet is added, separated by a space. This is ok since the javadoc, +      // command already adds -quiet, so we are just duplicating it, +      // see https://discuss.gradle.org/t/add-custom-javadoc-option-that-does-not-take-an-argument/5959, +      javadoc.options.addStringOption('Xdoclint:all,-missing', '-quiet'), +    }, +  ext.projectSubstitutions = [, +    "org.elasticsearch:rest-api-spec:${version}": ':rest-api-spec',, +    "org.elasticsearch:elasticsearch:${version}": ':core',, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    "org.elasticsearch.distribution.zip:elasticsearch:${version}": ':distribution:zip',, +    "org.elasticsearch.distribution.tar:elasticsearch:${version}": ':distribution:tar', +  ], +  configurations.all {, +    resolutionStrategy.dependencySubstitution { DependencySubstitutions subs ->, +      projectSubstitutions.each { k,v ->, +        subs.substitute(subs.module(k)).with(subs.project(v)), +      }, +    }, +  }, +}, +, +// Ensure similar tasks in dependent projects run first. The projectsEvaluated here is, +// important because, while dependencies.all will pickup future dependencies,]