[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]completion[/\\]CompletionSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggestionBuilder.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]term[/\\]TermSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]rescore[/\\]QueryRescoreBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]SmoothingModelTestCase.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]completion[/\\]CompletionSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggestionBuilder.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]term[/\\]TermSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]rescore[/\\]QueryRescoreBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]SmoothingModelTestCase.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.fetch.FetchPhase;, +    private final FetchPhase fetchPhase;, +, +            TransportService transportService, IndicesService indicesService, ScriptService scriptService,, +            PageCacheRecycler pageCacheRecycler, BigArrays bigArrays, ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver, FetchPhase fetchPhase) {, +        this.fetchPhase = fetchPhase;, +                new ShardSearchLocalRequest(request.types(), request.nowInMillis(), request.filteringAliases()), null, searcher,, +                indexService, indexShard, scriptService, pageCacheRecycler, bigArrays, threadPool.estimatedTimeInMillisCounter(),, +                parseFieldMatcher, SearchService.NO_TIMEOUT, fetchPhase);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]completion[/\\]CompletionSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggestionBuilder.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]term[/\\]TermSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]rescore[/\\]QueryRescoreBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]SmoothingModelTestCase.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.fetch.FetchPhase;, +    private final FetchPhase fetchPhase;, +, +            TransportService transportService, IndicesService indicesService, ScriptService scriptService,, +            PageCacheRecycler pageCacheRecycler, BigArrays bigArrays, ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver, FetchPhase fetchPhase) {, +        this.fetchPhase = fetchPhase;, +                new ShardSearchLocalRequest(request.types(), request.nowInMillis(), request.filteringAliases()), null, searcher,, +                indexService, indexShard, scriptService, pageCacheRecycler, bigArrays, threadPool.estimatedTimeInMillisCounter(),, +                parseFieldMatcher, SearchService.NO_TIMEOUT, fetchPhase);, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +import org.elasticsearch.search.fetch.FetchPhase;, +    private final FetchPhase fetchPhase;, +, +            TransportService transportService, IndicesService indicesService, ScriptService scriptService,, +            PageCacheRecycler pageCacheRecycler, BigArrays bigArrays, ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver, FetchPhase fetchPhase) {, +        this.fetchPhase = fetchPhase;, +        SearchContext context = new DefaultSearchContext(0,, +                new ShardSearchLocalRequest(new String[] { request.type() }, request.nowInMillis, request.filteringAlias()), null,, +                result.searcher(), indexService, indexShard, scriptService, pageCacheRecycler, bigArrays,, +                threadPool.estimatedTimeInMillisCounter(), parseFieldMatcher, SearchService.NO_TIMEOUT, fetchPhase);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]completion[/\\]CompletionSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]PhraseSuggestionBuilder.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]term[/\\]TermSuggester.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]rescore[/\\]QueryRescoreBuilderTests.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]test[/\\]java[/\\]org[/\\]elasticsearch[/\\]search[/\\]suggest[/\\]phrase[/\\]SmoothingModelTestCase.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.search.fetch.FetchPhase;, +    private final FetchPhase fetchPhase;, +, +            TransportService transportService, IndicesService indicesService, ScriptService scriptService,, +            PageCacheRecycler pageCacheRecycler, BigArrays bigArrays, ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver, FetchPhase fetchPhase) {, +        this.fetchPhase = fetchPhase;, +                new ShardSearchLocalRequest(request.types(), request.nowInMillis(), request.filteringAliases()), null, searcher,, +                indexService, indexShard, scriptService, pageCacheRecycler, bigArrays, threadPool.estimatedTimeInMillisCounter(),, +                parseFieldMatcher, SearchService.NO_TIMEOUT, fetchPhase);, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +import org.elasticsearch.search.fetch.FetchPhase;, +    private final FetchPhase fetchPhase;, +, +            TransportService transportService, IndicesService indicesService, ScriptService scriptService,, +            PageCacheRecycler pageCacheRecycler, BigArrays bigArrays, ActionFilters actionFilters,, +            IndexNameExpressionResolver indexNameExpressionResolver, FetchPhase fetchPhase) {, +        this.fetchPhase = fetchPhase;, +        SearchContext context = new DefaultSearchContext(0,, +                new ShardSearchLocalRequest(new String[] { request.type() }, request.nowInMillis, request.filteringAlias()), null,, +                result.searcher(), indexService, indexShard, scriptService, pageCacheRecycler, bigArrays,, +                threadPool.estimatedTimeInMillisCounter(), parseFieldMatcher, SearchService.NO_TIMEOUT, fetchPhase);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.AggregatorBuilder;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorFactory;, +     * Delegates to, +     * {@link PercolateSourceBuilder#addAggregation(AggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(AggregatorBuilder<?> aggregationBuilder) {, +     * Delegates to, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorFactory)}, +     */, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorFactory aggregationBuilder) {, +        sourceBuilder().addAggregation(aggregationBuilder);, +        return this;, +    }, +, +    /**]