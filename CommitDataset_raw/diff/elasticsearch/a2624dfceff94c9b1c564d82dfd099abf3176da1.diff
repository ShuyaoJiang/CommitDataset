[+++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operationResult = performOpOnReplica(primaryResponse, docWriteRequest, replica);, +                        operationResult = replica.markSeqNoAsNoop(failure.getSeqNo(), failure.getMessage());, +                                                    IndexShard replica) throws Exception {, +                return replica.applyIndexOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +                return replica.applyDeleteOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operationResult = performOpOnReplica(primaryResponse, docWriteRequest, replica);, +                        operationResult = replica.markSeqNoAsNoop(failure.getSeqNo(), failure.getMessage());, +                                                    IndexShard replica) throws Exception {, +                return replica.applyIndexOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +                return replica.applyDeleteOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operationResult = performOpOnReplica(primaryResponse, docWriteRequest, replica);, +                        operationResult = replica.markSeqNoAsNoop(failure.getSeqNo(), failure.getMessage());, +                                                    IndexShard replica) throws Exception {, +                return replica.applyIndexOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +                return replica.applyDeleteOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operationResult = performOpOnReplica(primaryResponse, docWriteRequest, replica);, +                        operationResult = replica.markSeqNoAsNoop(failure.getSeqNo(), failure.getMessage());, +                                                    IndexShard replica) throws Exception {, +                return replica.applyIndexOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +                return replica.applyDeleteOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +    protected ReplicationOperation.Replicas newReplicasProxy(long primaryTerm) {, +        return new ReplicasProxy(primaryTerm);, +    public void sync(ResyncReplicationRequest request, Task parentTask, String primaryAllocationId, long primaryTerm,, +            new ConcreteShardRequest<>(request, primaryAllocationId, primaryTerm),, +++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operationResult = performOpOnReplica(primaryResponse, docWriteRequest, replica);, +                        operationResult = replica.markSeqNoAsNoop(failure.getSeqNo(), failure.getMessage());, +                                                    IndexShard replica) throws Exception {, +                return replica.applyIndexOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +                return replica.applyDeleteOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +    protected ReplicationOperation.Replicas newReplicasProxy(long primaryTerm) {, +        return new ReplicasProxy(primaryTerm);, +    public void sync(ResyncReplicationRequest request, Task parentTask, String primaryAllocationId, long primaryTerm,, +            new ConcreteShardRequest<>(request, primaryAllocationId, primaryTerm),, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +            replicasProxy.markShardCopyAsStaleIfNeeded(replicaRequest.shardId(), allocationId,, +                    replicasProxy.failShardIfNeeded(shard, message,, +        void failShardIfNeeded(ShardRouting replica, String message, Exception exception, Runnable onSuccess,, +        void markShardCopyAsStaleIfNeeded(ShardId shardId, String allocationId, Runnable onSuccess,, +++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operationResult = performOpOnReplica(primaryResponse, docWriteRequest, replica);, +                        operationResult = replica.markSeqNoAsNoop(failure.getSeqNo(), failure.getMessage());, +                                                    IndexShard replica) throws Exception {, +                return replica.applyIndexOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +                return replica.applyDeleteOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java, +    protected ReplicationOperation.Replicas newReplicasProxy(long primaryTerm) {, +        return new ReplicasProxy(primaryTerm);, +    public void sync(ResyncReplicationRequest request, Task parentTask, String primaryAllocationId, long primaryTerm,, +            new ConcreteShardRequest<>(request, primaryAllocationId, primaryTerm),, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +            replicasProxy.markShardCopyAsStaleIfNeeded(replicaRequest.shardId(), allocationId,, +                    replicasProxy.failShardIfNeeded(shard, message,, +        void failShardIfNeeded(ShardRouting replica, String message, Exception exception, Runnable onSuccess,, +        void markShardCopyAsStaleIfNeeded(ShardId shardId, String allocationId, Runnable onSuccess,, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationRequest.java, +++ b/build.gradle, +  // disabled in preparation of merging #25822 & #25824, +  ext.bwc_tests_enabled = false, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                        operationResult = performOpOnReplica(primaryResponse, docWriteRequest, replica);, +                        operationResult = replica.markSeqNoAsNoop(failure.getSeqNo(), failure.getMessage());, +                                                    IndexShard replica) throws Exception {, +                return replica.applyIndexOperationOnReplica(primaryResponse.getSeqNo(), primaryResponse.getVersion(),]