[+++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/docs/plugins/cloud-gce.asciidoc, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/docs/plugins/cloud-gce.asciidoc, +++ b/docs/reference/modules/network.asciidoc, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/docs/plugins/cloud-gce.asciidoc, +++ b/docs/reference/modules/network.asciidoc, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java, +    static final public class Fields {, +    public Collection<Instance> instances();, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/docs/plugins/cloud-gce.asciidoc, +++ b/docs/reference/modules/network.asciidoc, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java, +    static final public class Fields {, +    public Collection<Instance> instances();, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeServiceImpl.java, +    public static final String TOKEN_SERVER_ENCODED_URL = "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token";, +    public GceComputeServiceImpl(Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/docs/plugins/cloud-gce.asciidoc, +++ b/docs/reference/modules/network.asciidoc, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java, +    static final public class Fields {, +    public Collection<Instance> instances();, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeServiceImpl.java, +    public static final String TOKEN_SERVER_ENCODED_URL = "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token";, +    public GceComputeServiceImpl(Settings settings) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/docs/plugins/cloud-gce.asciidoc, +++ b/docs/reference/modules/network.asciidoc, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java, +    static final public class Fields {, +    public Collection<Instance> instances();, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeServiceImpl.java, +    public static final String TOKEN_SERVER_ENCODED_URL = "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token";, +    public GceComputeServiceImpl(Settings settings) {, +++ /dev/null, +++ b/plugins/cloud-gce/src/test/java/org/elasticsearch/discovery/gce/GceComputeServiceMock.java, +    public GceComputeServiceMock(Settings settings) {, +        super(settings);, +        HttpTransport transport = new MockHttpTransport() {, +                        if (url.equals(TOKEN_SERVER_ENCODED_URL)) {, +                            logger.info("--> Simulate GCE Auth response for [{}]", url);, +, +        return transport;, +        String mockFileName = Strings.replace(url, urlRoot, "") + ".json";, +                    sb.append(s).append("\n");, +        } catch (IOException e) {, +            throw e;, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +import java.net.UnknownHostException;, +        InetAddress[] resolveIfPossible(String value);, +    private InetAddress[] resolveInetAddress(String host) throws UnknownHostException, IOException {, +++ b/docs/plugins/cloud-gce.asciidoc, +++ b/docs/reference/modules/network.asciidoc, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java, +    static final public class Fields {, +    public Collection<Instance> instances();, +++ b/plugins/cloud-gce/src/main/java/org/elasticsearch/cloud/gce/GceComputeServiceImpl.java, +    public static final String TOKEN_SERVER_ENCODED_URL = "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token";, +    public GceComputeServiceImpl(Settings settings) {, +++ /dev/null, +++ b/plugins/cloud-gce/src/test/java/org/elasticsearch/discovery/gce/GceComputeServiceMock.java, +    public GceComputeServiceMock(Settings settings) {, +        super(settings);, +        HttpTransport transport = new MockHttpTransport() {, +                        if (url.equals(TOKEN_SERVER_ENCODED_URL)) {, +                            logger.info("--> Simulate GCE Auth response for [{}]", url);, +, +        return transport;, +        String mockFileName = Strings.replace(url, urlRoot, "") + ".json";, +                    sb.append(s).append("\n");, +        } catch (IOException e) {, +            throw e;, +++ b/plugins/cloud-gce/src/test/java/org/elasticsearch/discovery/gce/GceDiscoveryTests.java]