[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchParseElement.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchParseElement.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.util.Booleans;, +                    } else if (token == JsonToken.VALUE_STRING) {, +                        global = Booleans.parseBoolean(jp.getText(), global);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchParseElement.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.util.Booleans;, +                    } else if (token == JsonToken.VALUE_STRING) {, +                        global = Booleans.parseBoolean(jp.getText(), global);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/ExplainParseElement.java, +import org.elasticsearch.util.Booleans;, + * @author kimchy (shay.banon), +        } else if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.explain(Booleans.parseBoolean(jp.getText(), context.explain()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchParseElement.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.util.Booleans;, +                    } else if (token == JsonToken.VALUE_STRING) {, +                        global = Booleans.parseBoolean(jp.getText(), global);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/ExplainParseElement.java, +import org.elasticsearch.util.Booleans;, + * @author kimchy (shay.banon), +        } else if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.explain(Booleans.parseBoolean(jp.getText(), context.explain()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/FromParseElement.java, +import org.codehaus.jackson.JsonToken;, +        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.from(Integer.parseInt(jp.getText()));, +        } else {, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchParseElement.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.util.Booleans;, +                    } else if (token == JsonToken.VALUE_STRING) {, +                        global = Booleans.parseBoolean(jp.getText(), global);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/ExplainParseElement.java, +import org.elasticsearch.util.Booleans;, + * @author kimchy (shay.banon), +        } else if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.explain(Booleans.parseBoolean(jp.getText(), context.explain()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/FromParseElement.java, +import org.codehaus.jackson.JsonToken;, +        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.from(Integer.parseInt(jp.getText()));, +        } else {, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/IndicesBoostParseElement.java, +                    if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +                        context.queryBoost(Float.parseFloat(jp.getText()));, +                    } else {, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchParseElement.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.util.Booleans;, +                    } else if (token == JsonToken.VALUE_STRING) {, +                        global = Booleans.parseBoolean(jp.getText(), global);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/ExplainParseElement.java, +import org.elasticsearch.util.Booleans;, + * @author kimchy (shay.banon), +        } else if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.explain(Booleans.parseBoolean(jp.getText(), context.explain()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/FromParseElement.java, +import org.codehaus.jackson.JsonToken;, +        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.from(Integer.parseInt(jp.getText()));, +        } else {, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/IndicesBoostParseElement.java, +                    if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +                        context.queryBoost(Float.parseFloat(jp.getText()));, +                    } else {, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/SizeParseElement.java, +import org.codehaus.jackson.JsonToken;, +        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.size(Integer.parseInt(jp.getText()));, +        } else {, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchParseElement.java, + * @author kimchy (shay.banon), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsParseElement.java, +import org.elasticsearch.util.Booleans;, +                    } else if (token == JsonToken.VALUE_STRING) {, +                        global = Booleans.parseBoolean(jp.getText(), global);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/ExplainParseElement.java, +import org.elasticsearch.util.Booleans;, + * @author kimchy (shay.banon), +        } else if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {, +            context.explain(Booleans.parseBoolean(jp.getText(), context.explain()));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/query/FromParseElement.java, +import org.codehaus.jackson.JsonToken;, +        if (jp.getCurrentToken() == JsonToken.VALUE_STRING) {]