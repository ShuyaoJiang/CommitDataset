[+++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                                      Version version, AliasValidator aliasValidator,, +        if (index.charAt(0) == '_') {, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +        builder.startObject(AndQueryParser.NAME);, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser implements QueryParser {, +, +    public static final String NAME = "and";, +        return new String[]{NAME};, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +        builder.startObject("bool");, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        final boolean created = operation.execute(indexShard);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java]