[+++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +        orientation.writeTo(out);, +        return new EnvelopeBuilder(Orientation.readFrom(in)), +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +        orientation.writeTo(out);, +        return new EnvelopeBuilder(Orientation.readFrom(in)), +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import java.util.Locale;, +import java.util.Objects;, +    public static final GeometryCollectionBuilder PROTOTYPE = new GeometryCollectionBuilder();, +, +        builder.field(FIELD_ORIENTATION, orientation.name().toLowerCase(Locale.ROOT));, +    @Override, +    public int hashCode() {, +        return Objects.hash(orientation, shapes);, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +        if (this == obj) {, +            return true;, +        }, +        if (obj == null || getClass() != obj.getClass()) {, +            return false;, +        }, +        GeometryCollectionBuilder other = (GeometryCollectionBuilder) obj;, +        return Objects.equals(orientation, other.orientation) && Objects.equals(shapes, other.shapes);, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        orientation.writeTo(out);, +        out.writeVInt(shapes.size());, +        for (ShapeBuilder shape : shapes) {, +            out.writeShape(shape);, +        }, +    }, +, +    @Override, +    public GeometryCollectionBuilder readFrom(StreamInput in) throws IOException {, +        GeometryCollectionBuilder geometryCollectionBuilder = new GeometryCollectionBuilder(Orientation.readFrom(in));, +        int shapes = in.readVInt();, +        for (int i = 0; i < shapes; i++) {, +            geometryCollectionBuilder.shape(in.readShape());, +        }, +        return geometryCollectionBuilder;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +        orientation.writeTo(out);, +        return new EnvelopeBuilder(Orientation.readFrom(in)), +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import java.util.Locale;, +import java.util.Objects;, +    public static final GeometryCollectionBuilder PROTOTYPE = new GeometryCollectionBuilder();, +, +        builder.field(FIELD_ORIENTATION, orientation.name().toLowerCase(Locale.ROOT));, +    @Override, +    public int hashCode() {, +        return Objects.hash(orientation, shapes);, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +        if (this == obj) {, +            return true;, +        }, +        if (obj == null || getClass() != obj.getClass()) {, +            return false;, +        }, +        GeometryCollectionBuilder other = (GeometryCollectionBuilder) obj;, +        return Objects.equals(orientation, other.orientation) && Objects.equals(shapes, other.shapes);, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        orientation.writeTo(out);, +        out.writeVInt(shapes.size());, +        for (ShapeBuilder shape : shapes) {, +            out.writeShape(shape);, +        }, +    }, +, +    @Override, +    public GeometryCollectionBuilder readFrom(StreamInput in) throws IOException {, +        GeometryCollectionBuilder geometryCollectionBuilder = new GeometryCollectionBuilder(Orientation.readFrom(in));, +        int shapes = in.readVInt();, +        for (int i = 0; i < shapes; i++) {, +            geometryCollectionBuilder.shape(in.readShape());, +        }, +        return geometryCollectionBuilder;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/MultiPolygonBuilder.java]