[+++ b/x-pack/docs/en/security/securing-communications/node-certificates.asciidoc, +recommended approach for validating certificate authenticity in an {es} cluster, +++ b/x-pack/docs/en/security/securing-communications/node-certificates.asciidoc, +recommended approach for validating certificate authenticity in an {es} cluster, +++ b/x-pack/docs/en/security/securing-communications/tls-transport.asciidoc, +<3> The `elasticsearch-certutil` outputs a PKCS#12 keystore which includes the, +CA certificate as a trusted certificate entry. This allows for the keystore to, +also be used as a truststore. In this case, the path value should match, +the `keystore.path` value., +Note, however, that this is not the general rule. There are keystores that cannot be, +used as trustores, only , +{ref}/security-settings.html#pkcs12-truststore-note[specifically crafted ones can], +++ b/x-pack/docs/en/security/securing-communications/node-certificates.asciidoc, +recommended approach for validating certificate authenticity in an {es} cluster, +++ b/x-pack/docs/en/security/securing-communications/tls-transport.asciidoc, +<3> The `elasticsearch-certutil` outputs a PKCS#12 keystore which includes the, +CA certificate as a trusted certificate entry. This allows for the keystore to, +also be used as a truststore. In this case, the path value should match, +the `keystore.path` value., +Note, however, that this is not the general rule. There are keystores that cannot be, +used as trustores, only , +{ref}/security-settings.html#pkcs12-truststore-note[specifically crafted ones can], +++ b/x-pack/docs/en/settings/security-settings.asciidoc, +[[pkcs12-truststore-note]], +[NOTE], +Storing trusted certificates in a PKCS#12 file, although supported, is, +uncommon in practice. The {ref}/certutil.html[`elasticsearch-certutil`] tool,, +as well as Java's `keytool`, are designed to generate PKCS#12 files that, +can be used both as a keystore and as a truststore, but this may not be the, +case for container files that are created using other tools. Usually,, +PKCS#12 files only contain secret and private entries. To confirm that, +a PKCS#12 container includes trusted certificate ("anchor") entries look for, +`2.16.840.1.113894.746875.1.1: <Unsupported tag 6>` in the, +`openssl pkcs12 -info` output, or `trustedCertEntry` in the, +`keytool -list` output., +]