[+++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    protected final String allocationId;, +        this.allocationId = engineConfig.getAllocationId();, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    protected final String allocationId;, +        this.allocationId = engineConfig.getAllocationId();, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private final String allocationId;, +    public EngineConfig(OpenMode openMode, ShardId shardId, String allocationId, ThreadPool threadPool,, +        this.allocationId = allocationId;, +     * Returns the allocation ID for the shard., +     *, +     * @return the allocation ID, +     */, +    public String getAllocationId() {, +        return allocationId;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    protected final String allocationId;, +        this.allocationId = engineConfig.getAllocationId();, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private final String allocationId;, +    public EngineConfig(OpenMode openMode, ShardId shardId, String allocationId, ThreadPool threadPool,, +        this.allocationId = allocationId;, +     * Returns the allocation ID for the shard., +     *, +     * @return the allocation ID, +     */, +    public String getAllocationId() {, +        return allocationId;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                seqNoService = sequenceNumberService(shardId, allocationId, engineConfig.getIndexSettings(), seqNoStats);, +        final String allocationId,, +            allocationId,, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    protected final String allocationId;, +        this.allocationId = engineConfig.getAllocationId();, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private final String allocationId;, +    public EngineConfig(OpenMode openMode, ShardId shardId, String allocationId, ThreadPool threadPool,, +        this.allocationId = allocationId;, +     * Returns the allocation ID for the shard., +     *, +     * @return the allocation ID, +     */, +    public String getAllocationId() {, +        return allocationId;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                seqNoService = sequenceNumberService(shardId, allocationId, engineConfig.getIndexSettings(), seqNoStats);, +        final String allocationId,, +            allocationId,, +++ b/core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java, +    private final String allocationId;, +, +     * @param allocationId     the allocation ID, +    GlobalCheckpointTracker(, +            final ShardId shardId,, +            final String allocationId,, +            final IndexSettings indexSettings,, +            final long globalCheckpoint) {, +        this.allocationId = allocationId;, +    public synchronized void activatePrimaryMode(final long localCheckpoint) {, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +    protected final String allocationId;, +        this.allocationId = engineConfig.getAllocationId();, +++ b/core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java, +    private final String allocationId;, +    public EngineConfig(OpenMode openMode, ShardId shardId, String allocationId, ThreadPool threadPool,, +        this.allocationId = allocationId;, +     * Returns the allocation ID for the shard., +     *, +     * @return the allocation ID, +     */, +    public String getAllocationId() {, +        return allocationId;, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +                seqNoService = sequenceNumberService(shardId, allocationId, engineConfig.getIndexSettings(), seqNoStats);, +        final String allocationId,, +            allocationId,, +++ b/core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java, +    private final String allocationId;, +, +     * @param allocationId     the allocation ID, +    GlobalCheckpointTracker(, +            final ShardId shardId,, +            final String allocationId,, +            final IndexSettings indexSettings,, +            final long globalCheckpoint) {, +        this.allocationId = allocationId;]