[+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.common.util.CollectionUtils;, +        CollectionUtils.ensureNoSelfReferences(document.getSourceAndMetadata(), "ingest script");, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.common.util.CollectionUtils;, +        CollectionUtils.ensureNoSelfReferences(document.getSourceAndMetadata(), "ingest script");, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +import com.carrotsearch.hppc.ObjectArrayList;, +import org.apache.lucene.util.BytesRef;, +import org.apache.lucene.util.BytesRefArray;, +import org.apache.lucene.util.BytesRefBuilder;, +import org.apache.lucene.util.InPlaceMergeSorter;, +import org.apache.lucene.util.IntroSorter;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.collect.Iterators;, +, +            Map<?,?> map = (Map<?,?>) value;, +            return () -> Iterators.concat(map.keySet().iterator(), map.values().iterator());, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.common.util.CollectionUtils;, +        CollectionUtils.ensureNoSelfReferences(document.getSourceAndMetadata(), "ingest script");, +++ b/server/src/main/java/org/elasticsearch/common/util/CollectionUtils.java, +import com.carrotsearch.hppc.ObjectArrayList;, +import org.apache.lucene.util.BytesRef;, +import org.apache.lucene.util.BytesRefArray;, +import org.apache.lucene.util.BytesRefBuilder;, +import org.apache.lucene.util.InPlaceMergeSorter;, +import org.apache.lucene.util.IntroSorter;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.collect.Iterators;, +, +            Map<?,?> map = (Map<?,?>) value;, +            return () -> Iterators.concat(map.keySet().iterator(), map.values().iterator());, +++ b/server/src/test/java/org/elasticsearch/common/util/CollectionUtilsTests.java, +        {, +                () -> CollectionUtils.ensureNoSelfReferences(map, "test with self ref value"));, +            assertThat(e.getMessage(), containsString("Iterable object is self-referencing itself (test with self ref value)"));, +        }, +        {, +            Map<Object, Object> map = new HashMap<>();, +            map.put(map, 1);, +, +            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,, +                () -> CollectionUtils.ensureNoSelfReferences(map, "test with self ref key"));, +            assertThat(e.getMessage(), containsString("Iterable object is self-referencing itself (test with self ref key)"));, +        }, +]