[+++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/StringScriptDataComparator.java, +    private BytesRef[] values; // TODO maybe we can preallocate or use a sentinel to prevent the conditionals in compare, +    private final BytesRef spare = new BytesRef();, +        setSpare(doc);, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/StringScriptDataComparator.java, +    private BytesRef[] values; // TODO maybe we can preallocate or use a sentinel to prevent the conditionals in compare, +    private final BytesRef spare = new BytesRef();, +        setSpare(doc);, +++ b/src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java, +import org.elasticsearch.search.sort.ScriptSortBuilder;, +, +        , +        // STRING script, +        size = 1 + random.nextInt(10);, +, +        searchResponse = client().prepareSearch(), +                .setQuery(matchAllQuery()), +                .setSize(size), +                .addSort(new ScriptSortBuilder("doc['str_value'].value", "string")), +                .execute().actionGet();, +        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));, +        assertThat(searchResponse.getHits().hits().length, equalTo(size));, +        for (int i = 0; i < size; i++) {, +            assertThat(searchResponse.getHits().getAt(i).id(), equalTo(Integer.toString(i)));, +            assertThat(searchResponse.getHits().getAt(i).sortValues()[0].toString(), equalTo(new String(new char[]{(char) (97 + i), (char) (97 + i)})));, +        }, +        size = 1 + random.nextInt(10);, +        searchResponse = client().prepareSearch(), +                .setQuery(matchAllQuery()), +                .setSize(size), +                .addSort("str_value", SortOrder.DESC), +                .execute().actionGet();, +, +        assertThat(searchResponse.getHits().getTotalHits(), equalTo(10l));, +        assertThat(searchResponse.getHits().hits().length, equalTo(size));, +        for (int i = 0; i < size; i++) {, +            assertThat(searchResponse.getHits().getAt(i).id(), equalTo(Integer.toString(9 - i)));, +            assertThat(searchResponse.getHits().getAt(i).sortValues()[0].toString(), equalTo(new String(new char[]{(char) (97 + (9 - i)), (char) (97 + (9 - i))})));, +        }, +, +        assertThat(searchResponse.toString(), not(containsString("error")));, +]