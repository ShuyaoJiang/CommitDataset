[+++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.index.shard.service.IndexShard;, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.search.internal.InternalSearchRequest;, +import org.elasticsearch.search.internal.SearchContext;, +    private final ScriptService scriptService;, +, +    public TransportValidateQueryAction(Settings settings, ThreadPool threadPool, ClusterService clusterService, TransportService transportService, IndicesService indicesService, ScriptService scriptService) {, +        this.scriptService = scriptService;, +        IndexService indexService = indicesService.indexServiceSafe(request.index());, +        IndexShard indexShard = indexService.shardSafe(request.shardId());, +, +            SearchContext.setCurrent(new SearchContext(0,, +                    new InternalSearchRequest().types(request.types()),, +                    null, indexShard.searcher(), indexService, indexShard,, +                    scriptService));, +            } finally {, +                SearchContext.current().release();, +                SearchContext.removeCurrent();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.index.shard.service.IndexShard;, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.search.internal.InternalSearchRequest;, +import org.elasticsearch.search.internal.SearchContext;, +    private final ScriptService scriptService;, +, +    public TransportValidateQueryAction(Settings settings, ThreadPool threadPool, ClusterService clusterService, TransportService transportService, IndicesService indicesService, ScriptService scriptService) {, +        this.scriptService = scriptService;, +        IndexService indexService = indicesService.indexServiceSafe(request.index());, +        IndexShard indexShard = indexService.shardSafe(request.shardId());, +, +            SearchContext.setCurrent(new SearchContext(0,, +                    new InternalSearchRequest().types(request.types()),, +                    null, indexShard.searcher(), indexService, indexShard,, +                    scriptService));, +            } finally {, +                SearchContext.current().release();, +                SearchContext.removeCurrent();, +++ b/src/test/java/org/elasticsearch/test/integration/validate/SimpleValidateQueryTests.java, +        client.admin().indices().preparePutMapping("test").setType("child-type"), +                .setSource(XContentFactory.jsonBuilder().startObject().startObject("child-type"), +                        .startObject("_parent").field("type", "type1").endObject(), +                        .startObject("properties"), +                        .startObject("foo").field("type", "string").endObject(), +                        .endObject(), +                        .endObject().endObject()), +                .execute().actionGet();, +        assertExplanation(QueryBuilders.filteredQuery(, +                QueryBuilders.termQuery("foo", "1"),, +                FilterBuilders.hasChildFilter(, +                        "child-type",, +                        QueryBuilders.fieldQuery("foo", "1"), +                ), +        ), equalTo("filtered(foo:1)->child_filter[child-type/type1](filtered(foo:1)->cache(_type:child-type))"));, +, +        assertExplanation(QueryBuilders.filteredQuery(, +                QueryBuilders.termQuery("foo", "1"),, +                FilterBuilders.scriptFilter("true"), +        ), equalTo("filtered(foo:1)->ScriptFilter(true)"));, +, +                .setTypes("type1")]