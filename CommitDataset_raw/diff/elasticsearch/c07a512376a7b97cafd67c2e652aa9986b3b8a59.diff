[+++ b/src/main/java/org/elasticsearch/mapper/attachments/TikaImpl.java, +import java.io.ByteArrayInputStream;, +, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +import java.io.FilePermission;, +import java.lang.reflect.ReflectPermission;, +import java.net.URISyntaxException;, +import java.net.URL;, +import java.net.URLClassLoader;, +import java.nio.file.Path;, +import java.security.AccessControlContext;, +import java.security.PermissionCollection;, +import java.security.Permissions;, +import java.security.ProtectionDomain;, +import java.security.SecurityPermission;, +import java.util.PropertyPermission;, +import org.elasticsearch.bootstrap.JarHell;, +import org.elasticsearch.common.SuppressForbidden;, +import org.elasticsearch.common.io.PathUtils;, +/**, + * Runs tika with limited parsers and limited permissions., + * <p>, + * Do NOT make public, + */, +                    return TIKA_INSTANCE.parseToString(new ByteArrayInputStream(content), metadata, limit);, +            }, RESTRICTED_CONTEXT);, +, +    // apply additional containment for parsers, this is intersected with the current permissions, +    // its hairy, but worth it so we don't have some XML flaw reading random crap from the FS, +    private static final AccessControlContext RESTRICTED_CONTEXT = new AccessControlContext(, +        new ProtectionDomain[] {, +            new ProtectionDomain(null, getRestrictedPermissions()), +        }, +    );, +, +    // compute some minimal permissions for parsers. they only get r/w access to the java temp directory,, +    // the ability to load some resources from JARs, and read sysprops, +    static PermissionCollection getRestrictedPermissions() {, +        Permissions perms = new Permissions();, +        // property/env access needed for parsing, +        perms.add(new PropertyPermission("*", "read"));, +        perms.add(new RuntimePermission("getenv.TIKA_CONFIG"));, +, +        // add permissions for resource access:, +        // classpath, +        addReadPermissions(perms, JarHell.parseClassPath());, +        // plugin jars, +        if (TikaImpl.class.getClassLoader() instanceof URLClassLoader) {, +            addReadPermissions(perms, ((URLClassLoader)TikaImpl.class.getClassLoader()).getURLs());, +        }, +        // jvm's java.io.tmpdir (needs read/write), +        perms.add(new FilePermission(System.getProperty("java.io.tmpdir") + System.getProperty("file.separator") + "-",, +                                     "read,readlink,write,delete"));, +        // current hacks needed for POI/PDFbox issues:, +        perms.add(new SecurityPermission("putProviderProperty.BC"));, +        perms.add(new SecurityPermission("insertProvider"));, +        perms.add(new ReflectPermission("suppressAccessChecks"));, +        perms.setReadOnly();, +        return perms;, +    }, +, +    // add resources to (what is typically) a jar, but might not be (e.g. in tests/IDE), +    @SuppressForbidden(reason = "adds access to jar resources"), +    static void addReadPermissions(Permissions perms, URL resources[]) {, +        try {, +            for (URL url : resources) {, +                Path path = PathUtils.get(url.toURI());, +                // resource itself, +                perms.add(new FilePermission(path.toString(), "read,readlink"));, +                // classes underneath, +                perms.add(new FilePermission(path.toString() + System.getProperty("file.separator") + "-", "read,readlink"));, +            }, +        } catch (URISyntaxException bogus) {, +            throw new RuntimeException(bogus);, +        }, +    }, +++ b/src/main/java/org/elasticsearch/mapper/attachments/TikaImpl.java, +import java.io.ByteArrayInputStream;, +, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with]