[+++ b/shield/src/test/java/org/elasticsearch/shield/audit/index/IndexAuditTrailTests.java, +import org.elasticsearch.common.transport.BoundTransportAddress;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +import org.elasticsearch.common.transport.LocalTransportAddress;, +import org.elasticsearch.common.transport.TransportAddress;, +import java.util.Collections;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Set;, +import static org.mockito.Matchers.any;, +import static org.mockito.Matchers.eq;, +++ b/shield/src/test/java/org/elasticsearch/shield/audit/index/IndexAuditTrailTests.java, +import org.elasticsearch.common.transport.BoundTransportAddress;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +import org.elasticsearch.common.transport.LocalTransportAddress;, +import org.elasticsearch.common.transport.TransportAddress;, +import java.util.Collections;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Set;, +import static org.mockito.Matchers.any;, +import static org.mockito.Matchers.eq;, +++ b/watcher/src/main/java/org/elasticsearch/watcher/input/search/ExecutableSearchInput.java, +import org.elasticsearch.common.xcontent.ToXContent;, +    @Override, +            ToXContent source = request.source() != null ? request.source() : request.template();, +            logger.trace("[{}] running query for [{}] [{}]", ctx.id(), ctx.watch().id(), XContentHelper.toString(source));, +++ b/shield/src/test/java/org/elasticsearch/shield/audit/index/IndexAuditTrailTests.java, +import org.elasticsearch.common.transport.BoundTransportAddress;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +import org.elasticsearch.common.transport.LocalTransportAddress;, +import org.elasticsearch.common.transport.TransportAddress;, +import java.util.Collections;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Set;, +import static org.mockito.Matchers.any;, +import static org.mockito.Matchers.eq;, +++ b/watcher/src/main/java/org/elasticsearch/watcher/input/search/ExecutableSearchInput.java, +import org.elasticsearch.common.xcontent.ToXContent;, +    @Override, +            ToXContent source = request.source() != null ? request.source() : request.template();, +            logger.trace("[{}] running query for [{}] [{}]", ctx.id(), ctx.watch().id(), XContentHelper.toString(source));, +++ b/watcher/src/main/java/org/elasticsearch/watcher/input/search/SearchInput.java, +import org.elasticsearch.index.query.QueryParseContext;, +    public static SearchInput parse(String watchId, XContentParser parser, QueryParseContext context) throws IOException {, +                    request = WatcherUtils.readSearchRequest(parser, ExecutableSearchInput.DEFAULT_SEARCH_TYPE, context);, +++ b/shield/src/test/java/org/elasticsearch/shield/audit/index/IndexAuditTrailTests.java, +import org.elasticsearch.common.transport.BoundTransportAddress;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +import org.elasticsearch.common.transport.LocalTransportAddress;, +import org.elasticsearch.common.transport.TransportAddress;, +import java.util.Collections;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Set;, +import static org.mockito.Matchers.any;, +import static org.mockito.Matchers.eq;, +++ b/watcher/src/main/java/org/elasticsearch/watcher/input/search/ExecutableSearchInput.java, +import org.elasticsearch.common.xcontent.ToXContent;, +    @Override, +            ToXContent source = request.source() != null ? request.source() : request.template();, +            logger.trace("[{}] running query for [{}] [{}]", ctx.id(), ctx.watch().id(), XContentHelper.toString(source));, +++ b/watcher/src/main/java/org/elasticsearch/watcher/input/search/SearchInput.java, +import org.elasticsearch.index.query.QueryParseContext;, +    public static SearchInput parse(String watchId, XContentParser parser, QueryParseContext context) throws IOException {, +                    request = WatcherUtils.readSearchRequest(parser, ExecutableSearchInput.DEFAULT_SEARCH_TYPE, context);, +++ b/watcher/src/main/java/org/elasticsearch/watcher/input/search/SearchInputFactory.java, +import org.elasticsearch.index.query.QueryParseContext;, +import org.elasticsearch.indices.query.IndicesQueriesRegistry;, +    private IndicesQueriesRegistry queryRegistry;, +    public SearchInputFactory(Settings settings, ClientProxy client, IndicesQueriesRegistry queryRegistry) {, +        this.queryRegistry = queryRegistry;, +        QueryParseContext context = new QueryParseContext(queryRegistry);, +        context.reset(parser);, +        return SearchInput.parse(watchId, parser, context);, +++ b/shield/src/test/java/org/elasticsearch/shield/audit/index/IndexAuditTrailTests.java, +import org.elasticsearch.common.transport.BoundTransportAddress;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +import org.elasticsearch.common.transport.LocalTransportAddress;, +import org.elasticsearch.common.transport.TransportAddress;, +import java.util.Collections;, +import java.util.List;, +import java.util.Locale;, +import java.util.Map;, +import java.util.Set;, +import static org.mockito.Matchers.any;, +import static org.mockito.Matchers.eq;, +++ b/watcher/src/main/java/org/elasticsearch/watcher/input/search/ExecutableSearchInput.java, +import org.elasticsearch.common.xcontent.ToXContent;, +    @Override]