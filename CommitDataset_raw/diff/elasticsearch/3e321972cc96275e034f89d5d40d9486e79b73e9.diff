[+++ b/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +                    if(suggestion.entries.size() != size) {, +                        throw new ElasticSearchIllegalStateException("Can't merge suggest result, this might be caused by suggest calls " +, +                                "across multiple indices with different analysis chains. Suggest entries have different sizes actual [" +, +                                suggestion.entries.size() + "] expected [" + size +"]");, +                    }, +            protected <T extends Entry<O>> Entry<O> reduce(List<T> toReduce) {, +                    if (!leader.text.equals(entry.text)) {, +                        throw new ElasticSearchIllegalStateException("Can't merge suggest entries, this might be caused by suggest calls " +, +                                "across multiple indices with different analysis chains. Suggest entries have different text actual [" +, +                                entry.text + "] expected [" + leader.text +"]");, +                    }, +++ b/src/main/java/org/elasticsearch/search/suggest/Suggest.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +                    if(suggestion.entries.size() != size) {, +                        throw new ElasticSearchIllegalStateException("Can't merge suggest result, this might be caused by suggest calls " +, +                                "across multiple indices with different analysis chains. Suggest entries have different sizes actual [" +, +                                suggestion.entries.size() + "] expected [" + size +"]");, +                    }, +            protected <T extends Entry<O>> Entry<O> reduce(List<T> toReduce) {, +                    if (!leader.text.equals(entry.text)) {, +                        throw new ElasticSearchIllegalStateException("Can't merge suggest entries, this might be caused by suggest calls " +, +                                "across multiple indices with different analysis chains. Suggest entries have different text actual [" +, +                                entry.text + "] expected [" + leader.text +"]");, +                    }, +++ b/src/test/java/org/elasticsearch/search/suggest/SuggestSearchTests.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +import org.elasticsearch.action.search.*;, +import static org.hamcrest.Matchers.*;, +, +, +    @Test // see #3196, +    public void testSuggestAcrossMultipleIndices() throws IOException {, +        prepareCreate("test").setSettings(, +                SETTING_NUMBER_OF_SHARDS, between(1, 5),, +                SETTING_NUMBER_OF_REPLICAS, between(0, 1)).get();, +        ensureGreen();, +, +        index("test", "type1", "1", "text", "abcd");, +        index("test", "type1", "2", "text", "aacd");, +        index("test", "type1", "3", "text", "abbd");, +        index("test", "type1", "4", "text", "abcc");, +        refresh();, +, +        TermSuggestionBuilder termSuggest = termSuggestion("test"), +                .suggestMode("always") // Always, otherwise the results can vary between requests., +                .text("abcd"), +                .field("text");, +        logger.info("--> run suggestions with one index");, +        searchSuggest(client(), termSuggest);, +        prepareCreate("test_1").setSettings(, +                SETTING_NUMBER_OF_SHARDS, between(1, 5),, +                SETTING_NUMBER_OF_REPLICAS, between(0, 1)).get();, +        ensureGreen();, +, +        index("test_1", "type1", "1", "text", "ab cd");, +        index("test_1", "type1", "2", "text", "aa cd");, +        index("test_1", "type1", "3", "text", "ab bd");, +        index("test_1", "type1", "4", "text", "ab cc");, +        refresh();, +        termSuggest = termSuggestion("test"), +                .suggestMode("always") // Always, otherwise the results can vary between requests., +                .text("ab cd"), +                .minWordLength(1), +                .field("text");, +        logger.info("--> run suggestions with two indices");, +        searchSuggest(client(), termSuggest);, +, +, +        XContentBuilder mapping = XContentFactory.jsonBuilder().startObject().startObject("type1"), +                .startObject("properties"), +                .startObject("text").field("type", "string").field("analyzer", "keyword").endObject(), +                .endObject(), +                .endObject().endObject();, +        assertAcked(prepareCreate("test_2").setSettings(settingsBuilder(), +                .put(SETTING_NUMBER_OF_SHARDS, between(1, 5)), +                .put(SETTING_NUMBER_OF_REPLICAS, between(0, 1)), +                ).addMapping("type1", mapping));, +        ensureGreen();, +, +        index("test_2", "type1", "1", "text", "ab cd");, +        index("test_2", "type1", "2", "text", "aa cd");, +        index("test_2", "type1", "3", "text", "ab bd");, +        index("test_2", "type1", "4", "text", "ab cc");, +        index("test_2", "type1", "1", "text", "abcd");, +        index("test_2", "type1", "2", "text", "aacd");, +        index("test_2", "type1", "3", "text", "abbd");, +        index("test_2", "type1", "4", "text", "abcc");, +        refresh();, +, +        termSuggest = termSuggestion("test"), +                .suggestMode("always") // Always, otherwise the results can vary between requests., +                .text("ab cd"), +                .minWordLength(1), +                .field("text");, +        logger.info("--> run suggestions with three indices");, +        try {, +            searchSuggest(client(), termSuggest);, +            fail(" can not suggest across multiple indices with different analysis chains");]