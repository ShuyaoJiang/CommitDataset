[+++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public BoostFieldMapper boostFieldMapper() {, +        return rootMapper(BoostFieldMapper.class);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public BoostFieldMapper boostFieldMapper() {, +        return rootMapper(BoostFieldMapper.class);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java, +        if (name().equals(Defaults.NAME) && nullValue == null &&, +				fieldType.indexed() == Defaults.FIELD_TYPE.indexed() &&, +                fieldType.stored() == Defaults.FIELD_TYPE.stored()) {, +        if (fieldType.indexed() != Defaults.FIELD_TYPE.indexed()) {, +            builder.field("index", fieldType.indexed());, +        }, +        if (fieldType.stored() != Defaults.FIELD_TYPE.stored()) {, +            builder.field("store", fieldType.stored());, +        }, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public BoostFieldMapper boostFieldMapper() {, +        return rootMapper(BoostFieldMapper.class);, +    }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java, +        if (name().equals(Defaults.NAME) && nullValue == null &&, +				fieldType.indexed() == Defaults.FIELD_TYPE.indexed() &&, +                fieldType.stored() == Defaults.FIELD_TYPE.stored()) {, +        if (fieldType.indexed() != Defaults.FIELD_TYPE.indexed()) {, +            builder.field("index", fieldType.indexed());, +        }, +        if (fieldType.stored() != Defaults.FIELD_TYPE.stored()) {, +            builder.field("store", fieldType.stored());, +        }, +++ b/src/test/java/org/elasticsearch/index/mapper/boost/BoostMappingTests.java, +import org.elasticsearch.index.mapper.internal.BoostFieldMapper;, +, +    @Test, +    public void testDefaultValues() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").endObject().string();, +        DocumentMapper docMapper = MapperTestUtils.newParser().parse(mapping);, +        assertThat(docMapper.boostFieldMapper().fieldType().stored(), equalTo(BoostFieldMapper.Defaults.FIELD_TYPE.stored()));, +        assertThat(docMapper.boostFieldMapper().fieldType().indexed(), equalTo(BoostFieldMapper.Defaults.FIELD_TYPE.indexed()));, +    }, +, +    @Test, +    public void testSetValues() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +                .startObject("_boost"), +                .field("store", "yes").field("index", "not_analyzed"), +                .endObject(), +                .endObject().endObject().string();, +        DocumentMapper docMapper = MapperTestUtils.newParser().parse(mapping);, +        assertThat(docMapper.boostFieldMapper().fieldType().stored(), equalTo(true));, +        assertThat(docMapper.boostFieldMapper().fieldType().indexed(), equalTo(true));, +    }]