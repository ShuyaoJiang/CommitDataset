[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder.PROTOTYPE.readFrom(in)), +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder.PROTOTYPE.readFrom(in)), +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                SearchSourceBuilder source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder.PROTOTYPE.readFrom(in)), +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                SearchSourceBuilder source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder source = null;, +                            source = request.searchRequest().source();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder.PROTOTYPE.readFrom(in)), +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                SearchSourceBuilder source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder source = null;, +                            source = request.searchRequest().source();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +import org.elasticsearch.common.xcontent.FromXContentBuilder;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +import static org.elasticsearch.common.settings.Settings.readSettingsFromStream;, +import static org.elasticsearch.common.settings.Settings.settingsBuilder;, +import static org.elasticsearch.common.settings.Settings.writeSettingsToStream;, +    public IndexMetaData fromXContent(XContentParser parser, ParseFieldMatcher parseFieldMatcher), +            throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder.PROTOTYPE.readFrom(in)), +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                SearchSourceBuilder source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder source = null;, +                            source = request.searchRequest().source();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +import org.elasticsearch.common.xcontent.FromXContentBuilder;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +import static org.elasticsearch.common.settings.Settings.readSettingsFromStream;, +import static org.elasticsearch.common.settings.Settings.settingsBuilder;, +import static org.elasticsearch.common.settings.Settings.writeSettingsToStream;, +    public IndexMetaData fromXContent(XContentParser parser, ParseFieldMatcher parseFieldMatcher), +            throws IOException {, +++ b/core/src/main/java/org/elasticsearch/index/search/stats/SearchSlowLog.java, +                sb.append("source[").append(context.request().source()).append("], ");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder.PROTOTYPE.readFrom(in)), +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java, +, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                SearchSourceBuilder source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +                warmerEntry.source().writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +                        SearchSourceBuilder source = null;, +                            source = request.searchRequest().source();, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +, +import org.elasticsearch.common.xcontent.FromXContentBuilder;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +import static org.elasticsearch.common.settings.Settings.readSettingsFromStream;, +import static org.elasticsearch.common.settings.Settings.settingsBuilder;]