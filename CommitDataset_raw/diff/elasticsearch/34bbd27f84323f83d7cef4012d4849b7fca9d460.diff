[+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +, +import java.io.IOException;, +, +    @Override, +    public void readFrom(StreamInput in) throws IOException {, +        super.readFrom(in);, +        pipeline = in.readOptionalString();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeOptionalString(pipeline);, +    }, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +, +import java.io.IOException;, +, +    @Override, +    public void readFrom(StreamInput in) throws IOException {, +        super.readFrom(in);, +        pipeline = in.readOptionalString();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeOptionalString(pipeline);, +    }, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/CancelTests.java, +        // Scroll by 1 so that cancellation is easier to control, +            indexModule.addIndexOperationListener(new BlockingOperationListener());, +    public static class BlockingOperationListener implements IndexingOperationListener {, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequest.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +, +import java.io.IOException;, +, +    @Override, +    public void readFrom(StreamInput in) throws IOException {, +        super.readFrom(in);, +        pipeline = in.readOptionalString();, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        super.writeTo(out);, +        out.writeOptionalString(pipeline);, +    }, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/CancelTests.java, +        // Scroll by 1 so that cancellation is easier to control, +            indexModule.addIndexOperationListener(new BlockingOperationListener());, +    public static class BlockingOperationListener implements IndexingOperationListener {, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/RoundTripTests.java, +        if (randomBoolean()) {, +            update.setPipeline(randomAsciiOfLength(5));, +        }, +        assertEquals(update.getPipeline(), tripped.getPipeline());]