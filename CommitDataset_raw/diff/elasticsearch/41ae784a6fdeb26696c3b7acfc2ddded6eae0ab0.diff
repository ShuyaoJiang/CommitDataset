[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addSocketPermissionForTransportProfiles(policy, settings);, +        addSocketPermissionForTribeNodes(policy, settings);, +    private static void addSocketPermissionForTransportProfiles(, +        // transport is way over-engineered, +        final Map<String, Settings> profiles = new HashMap<>(TransportSettings.TRANSPORT_PROFILES_SETTING.get(settings).getAsGroups());, +        profiles.putIfAbsent(TransportSettings.DEFAULT_PROFILE, Settings.EMPTY);, +, +        // loop through all profiles and add permissions for each one, if it's valid; otherwise Netty transports are lenient and ignores it, +        for (final Map.Entry<String, Settings> entry : profiles.entrySet()) {, +            final Settings profileSettings = entry.getValue();, +            final String name = entry.getKey();, +, +            // a profile is only valid if it's the default profile, or if it has an actual name and specifies a port, +            // TODO: can this leniency be removed?, +            final boolean valid =, +                TransportSettings.DEFAULT_PROFILE.equals(name) ||, +                    (name != null && name.length() > 0 && profileSettings.get("port") != null);, +            if (valid) {, +        }, +    }, +    private static void addSocketPermissionForTribeNodes(final Permissions policy, final Settings settings) {, +        for (final Settings tribeNodeSettings : settings.getGroups("tribe", true).values()) {, +            // tribe nodes have HTTP disabled by default, so we check if HTTP is enabled before granting, +            if (NetworkModule.HTTP_ENABLED.exists(tribeNodeSettings) && NetworkModule.HTTP_ENABLED.get(tribeNodeSettings)) {, +                addSocketPermissionForHttp(policy, tribeNodeSettings);, +            }, +            addSocketPermissionForTransport(policy, tribeNodeSettings);, +        }, +    }, +]