[+++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +    protected boolean localNodeMaster() {, +        return clusterService.state().nodes().localNodeMaster();, +    }, +, +        if (masterOnly() && !localNodeMaster()) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +    protected boolean localNodeMaster() {, +        return clusterService.state().nodes().localNodeMaster();, +    }, +, +        if (masterOnly() && !localNodeMaster()) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateCollector.java, +        results.add(new ClusterStateMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterState, clusterHealth.getStatus()));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +    protected boolean localNodeMaster() {, +        return clusterService.state().nodes().localNodeMaster();, +    }, +, +        if (masterOnly() && !localNodeMaster()) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateCollector.java, +        results.add(new ClusterStateMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterState, clusterHealth.getStatus()));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateMarvelDoc.java, +public class ClusterStateMarvelDoc extends MarvelDoc {, +    public ClusterStateMarvelDoc(String clusterUUID, String type, long timestamp, ClusterState clusterState, ClusterHealthStatus status) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +    protected boolean localNodeMaster() {, +        return clusterService.state().nodes().localNodeMaster();, +    }, +, +        if (masterOnly() && !localNodeMaster()) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateCollector.java, +        results.add(new ClusterStateMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterState, clusterHealth.getStatus()));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateMarvelDoc.java, +public class ClusterStateMarvelDoc extends MarvelDoc {, +    public ClusterStateMarvelDoc(String clusterUUID, String type, long timestamp, ClusterState clusterState, ClusterHealthStatus status) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStatsCollector.java, +        results.add(new ClusterStatsMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterStatsResponse));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +    protected boolean localNodeMaster() {, +        return clusterService.state().nodes().localNodeMaster();, +    }, +, +        if (masterOnly() && !localNodeMaster()) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateCollector.java, +        results.add(new ClusterStateMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterState, clusterHealth.getStatus()));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateMarvelDoc.java, +public class ClusterStateMarvelDoc extends MarvelDoc {, +    public ClusterStateMarvelDoc(String clusterUUID, String type, long timestamp, ClusterState clusterState, ClusterHealthStatus status) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStatsCollector.java, +        results.add(new ClusterStatsMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterStatsResponse));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStatsMarvelDoc.java, +public class ClusterStatsMarvelDoc extends MarvelDoc {, +    public ClusterStatsMarvelDoc(String clusterUUID, String type, long timestamp, ClusterStatsResponse clusterStats) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +    protected boolean localNodeMaster() {, +        return clusterService.state().nodes().localNodeMaster();, +    }, +, +        if (masterOnly() && !localNodeMaster()) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateCollector.java, +        results.add(new ClusterStateMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterState, clusterHealth.getStatus()));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateMarvelDoc.java, +public class ClusterStateMarvelDoc extends MarvelDoc {, +    public ClusterStateMarvelDoc(String clusterUUID, String type, long timestamp, ClusterState clusterState, ClusterHealthStatus status) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStatsCollector.java, +        results.add(new ClusterStatsMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterStatsResponse));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStatsMarvelDoc.java, +public class ClusterStatsMarvelDoc extends MarvelDoc {, +    public ClusterStatsMarvelDoc(String clusterUUID, String type, long timestamp, ClusterStatsResponse clusterStats) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/indices/IndexRecoveryCollector.java, +            results.add(new IndexRecoveryMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), recoveryResponse));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/AbstractCollector.java, +    protected boolean localNodeMaster() {, +        return clusterService.state().nodes().localNodeMaster();, +    }, +, +        if (masterOnly() && !localNodeMaster()) {, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateCollector.java, +        results.add(new ClusterStateMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterState, clusterHealth.getStatus()));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStateMarvelDoc.java, +public class ClusterStateMarvelDoc extends MarvelDoc {, +    public ClusterStateMarvelDoc(String clusterUUID, String type, long timestamp, ClusterState clusterState, ClusterHealthStatus status) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStatsCollector.java, +        results.add(new ClusterStatsMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), clusterStatsResponse));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/cluster/ClusterStatsMarvelDoc.java, +public class ClusterStatsMarvelDoc extends MarvelDoc {, +    public ClusterStatsMarvelDoc(String clusterUUID, String type, long timestamp, ClusterStatsResponse clusterStats) {, +        super(clusterUUID, type, timestamp);, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/indices/IndexRecoveryCollector.java, +            results.add(new IndexRecoveryMarvelDoc(clusterUUID(), TYPE, System.currentTimeMillis(), recoveryResponse));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/collector/indices/IndexRecoveryMarvelDoc.java, +public class IndexRecoveryMarvelDoc extends MarvelDoc {]