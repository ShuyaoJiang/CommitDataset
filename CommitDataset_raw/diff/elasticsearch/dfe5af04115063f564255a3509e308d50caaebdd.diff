[+++ b/docs/reference/ml/apis/find-file-structure.asciidoc, +the formats it knows, which are these Joda formats and their Java time equivalents:, +* `MMM dd, YYYY h:mm:ss a`, +The next example shows how it's possible to find the structure of some New York, +City yellow cab trip data. The first `curl` command downloads the data, the, +first 20000 lines of which are then piped into the `find_file_structure`, +endpoint. The `lines_to_sample` query parameter of the endpoint is set to 20000, +to match what is specified in the `head` command., +, +[source,js], +----, +curl -s "s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-06.csv" | head -20000 | curl -s -H "Content-Type: application/json" -XPOST "localhost:9200/_xpack/ml/find_file_structure?pretty&lines_to_sample=20000" -T -, +----, +// NOTCONSOLE, +// Not converting to console because this shows how curl can be used, +, +--, +NOTE: The `Content-Type: application/json` header must be set even though in, +this case the data is not JSON.  (Alternatively the `Content-Type` can be set, +to any other supported by Elasticsearch, but it must be set.), +--, +, +If the request does not encounter errors, you receive the following result:, +[source,js], +----, +{, +  "num_lines_analyzed" : 20000,, +  "num_messages_analyzed" : 19998, <1>, +  "sample_start" : "VendorID,tpep_pickup_datetime,tpep_dropoff_datetime,passenger_count,trip_distance,RatecodeID,store_and_fwd_flag,PULocationID,DOLocationID,payment_type,fare_amount,extra,mta_tax,tip_amount,tolls_amount,improvement_surcharge,total_amount\n\n1,2018-06-01 00:15:40,2018-06-01 00:16:46,1,.00,1,N,145,145,2,3,0.5,0.5,0,0,0.3,4.3\n",, +  "charset" : "UTF-8",, +  "has_byte_order_marker" : false,, +  "format" : "delimited", <2>, +  "multiline_start_pattern" : "^.*?,\"?\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",, +  "exclude_lines_pattern" : "^\"?VendorID\"?,\"?tpep_pickup_datetime\"?,\"?tpep_dropoff_datetime\"?,\"?passenger_count\"?,\"?trip_distance\"?,\"?RatecodeID\"?,\"?store_and_fwd_flag\"?,\"?PULocationID\"?,\"?DOLocationID\"?,\"?payment_type\"?,\"?fare_amount\"?,\"?extra\"?,\"?mta_tax\"?,\"?tip_amount\"?,\"?tolls_amount\"?,\"?improvement_surcharge\"?,\"?total_amount\"?",, +  "column_names" : [ <3>, +    "VendorID",, +    "tpep_pickup_datetime",, +    "tpep_dropoff_datetime",, +    "passenger_count",, +    "trip_distance",, +    "RatecodeID",, +    "store_and_fwd_flag",, +    "PULocationID",, +    "DOLocationID",, +    "payment_type",, +    "fare_amount",, +    "extra",, +    "mta_tax",, +    "tip_amount",, +    "tolls_amount",, +    "improvement_surcharge",, +    "total_amount", +  ],, +  "has_header_row" : true, <4>, +  "delimiter" : ",", <5>, +  "quote" : "\"", <6>, +  "timestamp_field" : "tpep_pickup_datetime", <7>, +  "joda_timestamp_formats" : [ <8>, +    "YYYY-MM-dd HH:mm:ss", +  ],, +  "java_timestamp_formats" : [ <9>, +    "yyyy-MM-dd HH:mm:ss", +  ],, +  "need_client_timezone" : true, <10>, +  "mappings" : {, +    "@timestamp" : {, +      "type" : "date", +    },, +    "DOLocationID" : {, +      "type" : "long", +    },, +    "PULocationID" : {, +      "type" : "long", +    },, +    "RatecodeID" : {, +      "type" : "long", +    },, +    "VendorID" : {, +      "type" : "long", +    },, +    "extra" : {, +      "type" : "double", +    },, +    "fare_amount" : {, +      "type" : "double", +    },, +    "improvement_surcharge" : {, +      "type" : "double", +    },, +    "mta_tax" : {, +      "type" : "double", +    },, +    "passenger_count" : {, +      "type" : "long", +    },, +    "payment_type" : {, +      "type" : "long", +    },, +    "store_and_fwd_flag" : {, +      "type" : "keyword"]