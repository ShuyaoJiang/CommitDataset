[+++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +    public final boolean isListenerThreaded() {, +    public final T setListenerThreaded(boolean listenerThreaded) {, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +    public final boolean isListenerThreaded() {, +    public final T setListenerThreaded(boolean listenerThreaded) {, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        request.setListenerThreaded(listenerThreaded);, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<Response>(request.isListenerThreaded(), client.threadPool());, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +    public final boolean isListenerThreaded() {, +    public final T setListenerThreaded(boolean listenerThreaded) {, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        request.setListenerThreaded(listenerThreaded);, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<Response>(request.isListenerThreaded(), client.threadPool());, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +        request.setListenerThreaded(false);, +                if (request.isListenerThreaded()) {, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +    public final boolean isListenerThreaded() {, +    public final T setListenerThreaded(boolean listenerThreaded) {, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        request.setListenerThreaded(listenerThreaded);, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<Response>(request.isListenerThreaded(), client.threadPool());, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +        request.setListenerThreaded(false);, +                if (request.isListenerThreaded()) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java, +    public String[] getIndices() {, +    public ClusterHealthRequest setIndices(String[] indices) {, +    public TimeValue getTimeout() {, +    public ClusterHealthRequest setTimeout(TimeValue timeout) {, +    public ClusterHealthRequest setTimeout(String timeout) {, +        return setTimeout(TimeValue.parseTimeValue(timeout, null));, +    public ClusterHealthStatus getWaitForStatus() {, +    public ClusterHealthRequest setWaitForStatus(ClusterHealthStatus waitForStatus) {, +    public ClusterHealthRequest setWaitForGreenStatus() {, +        return setWaitForStatus(ClusterHealthStatus.GREEN);, +    public ClusterHealthRequest setWaitForYellowStatus() {, +        return setWaitForStatus(ClusterHealthStatus.YELLOW);, +    public int getWaitForRelocatingShards() {, +    public ClusterHealthRequest setWaitForRelocatingShards(int waitForRelocatingShards) {, +    public int getWaitForActiveShards() {, +    public ClusterHealthRequest setWaitForActiveShards(int waitForActiveShards) {, +    public String getWaitForNodes() {, +    public ClusterHealthRequest setWaitForNodes(String waitForNodes) {, +    public ClusterHealthRequest setLocal(boolean local) {, +    public boolean getLocal() {, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +    public final boolean isListenerThreaded() {, +    public final T setListenerThreaded(boolean listenerThreaded) {, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        request.setListenerThreaded(listenerThreaded);, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<Response>(request.isListenerThreaded(), client.threadPool());, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +        request.setListenerThreaded(false);, +                if (request.isListenerThreaded()) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java, +    public String[] getIndices() {, +    public ClusterHealthRequest setIndices(String[] indices) {, +    public TimeValue getTimeout() {, +    public ClusterHealthRequest setTimeout(TimeValue timeout) {, +    public ClusterHealthRequest setTimeout(String timeout) {, +        return setTimeout(TimeValue.parseTimeValue(timeout, null));, +    public ClusterHealthStatus getWaitForStatus() {, +    public ClusterHealthRequest setWaitForStatus(ClusterHealthStatus waitForStatus) {, +    public ClusterHealthRequest setWaitForGreenStatus() {, +        return setWaitForStatus(ClusterHealthStatus.GREEN);, +    public ClusterHealthRequest setWaitForYellowStatus() {, +        return setWaitForStatus(ClusterHealthStatus.YELLOW);, +    public int getWaitForRelocatingShards() {, +    public ClusterHealthRequest setWaitForRelocatingShards(int waitForRelocatingShards) {, +    public int getWaitForActiveShards() {, +    public ClusterHealthRequest setWaitForActiveShards(int waitForActiveShards) {, +    public String getWaitForNodes() {, +    public ClusterHealthRequest setWaitForNodes(String waitForNodes) {, +    public ClusterHealthRequest setLocal(boolean local) {, +    public boolean getLocal() {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequestBuilder.java, +        request.setIndices(indices);, +        request.setTimeout(timeout);, +        request.setTimeout(timeout);, +        request.setWaitForStatus(waitForStatus);, +        request.setWaitForGreenStatus();, +        request.setWaitForYellowStatus();, +        request.setWaitForRelocatingShards(waitForRelocatingShards);, +        request.setWaitForActiveShards(waitForActiveShards);, +        request.setWaitForNodes(waitForNodes);, +++ b/src/main/java/org/elasticsearch/action/ActionRequest.java, +    public final boolean isListenerThreaded() {, +    public final T setListenerThreaded(boolean listenerThreaded) {, +++ b/src/main/java/org/elasticsearch/action/ActionRequestBuilder.java, +        request.setListenerThreaded(listenerThreaded);, +        PlainListenableActionFuture<Response> future = new PlainListenableActionFuture<Response>(request.isListenerThreaded(), client.threadPool());, +++ b/src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java, +        request.setListenerThreaded(false);, +                if (request.isListenerThreaded()) {, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java, +    public String[] getIndices() {, +    public ClusterHealthRequest setIndices(String[] indices) {]