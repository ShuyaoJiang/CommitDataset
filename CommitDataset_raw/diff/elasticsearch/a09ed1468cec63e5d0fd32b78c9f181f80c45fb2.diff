[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +                        for (FormatDateTimeFormatter dateTimeFormatter : context.root().dynamicDateTimeFormatters()) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +                        for (FormatDateTimeFormatter dateTimeFormatter : context.root().dynamicDateTimeFormatters()) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/RootObjectMapper.java, +        public static final FormatDateTimeFormatter[] DYNAMIC_DATE_TIME_FORMATTERS =, +        protected List<FormatDateTimeFormatter> dynamicDateTimeFormatters = newArrayList();, +        public Builder noDynamicDateTimeFormatter() {, +            this.dynamicDateTimeFormatters = null;, +        public Builder dynamicDateTimeFormatter(Iterable<FormatDateTimeFormatter> dateTimeFormatters) {, +                    this.dynamicDateTimeFormatters.add(dateTimeFormatter);, +            if (dynamicDateTimeFormatters == null) {, +            } else if (dynamicDateTimeFormatters.isEmpty()) {, +                dates = Defaults.DYNAMIC_DATE_TIME_FORMATTERS;, +                dates = dynamicDateTimeFormatters.toArray(new FormatDateTimeFormatter[dynamicDateTimeFormatters.size()]);, +            if (fieldName.equals("date_formats") || fieldName.equals("dynamic_date_formats")) {, +                    ((Builder) builder).noDynamicDateTimeFormatter();, +                    ((Builder) builder).dynamicDateTimeFormatter(dateTimeFormatters);, +    private final FormatDateTimeFormatter[] dynamicDateTimeFormatters;, +                     FormatDateTimeFormatter[] dynamicDateTimeFormatters, DynamicTemplate dynamicTemplates[], boolean dateDetection) {, +        this.dynamicDateTimeFormatters = dynamicDateTimeFormatters;, +    public FormatDateTimeFormatter[] dynamicDateTimeFormatters() {, +        return dynamicDateTimeFormatters;, +        if (dynamicDateTimeFormatters != Defaults.DYNAMIC_DATE_TIME_FORMATTERS) {, +            if (dynamicDateTimeFormatters.length > 0) {, +                builder.startArray("dynamic_date_formats");, +                for (FormatDateTimeFormatter dateTimeFormatter : dynamicDateTimeFormatters) {]