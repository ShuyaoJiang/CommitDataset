[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkAction.java, +public class NoopBulkAction extends Action<BulkResponse> {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkAction.java, +public class NoopBulkAction extends Action<BulkResponse> {, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/NoopSearchAction.java, +public class NoopSearchAction extends Action<SearchResponse> {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkAction.java, +public class NoopBulkAction extends Action<BulkResponse> {, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/NoopSearchAction.java, +public class NoopSearchAction extends Action<SearchResponse> {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.validate.query.ValidateQueryRequest;, +import org.elasticsearch.action.admin.indices.validate.query.ValidateQueryResponse;, +     * Validate a potentially expensive query without executing it., +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-validate.html"> Validate Query API, +     * on elastic.co</a>, +     * @param validateQueryRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public ValidateQueryResponse validateQuery(ValidateQueryRequest validateQueryRequest, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(validateQueryRequest, RequestConverters::validateQuery, options,, +            ValidateQueryResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously validate a potentially expensive query without executing it., +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-validate.html"> Validate Query API, +     * on elastic.co</a>, +     * @param validateQueryRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void validateQueryAsync(ValidateQueryRequest validateQueryRequest, RequestOptions options,, +                                   ActionListener<ValidateQueryResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(validateQueryRequest, RequestConverters::validateQuery, options,, +            ValidateQueryResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/DocsTestPlugin.groovy, +        // The distribution can be configured with -Dtests.distribution on the command line, +        project.integTestCluster.distribution = System.getProperty('tests.distribution', 'zip'), +            '\\{build_flavor\\}' :, +                project.integTestCluster.distribution.startsWith('oss-') ? 'oss' : 'default',, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkAction.java, +public class NoopBulkAction extends Action<BulkResponse> {, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/NoopSearchAction.java, +public class NoopSearchAction extends Action<SearchResponse> {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.validate.query.ValidateQueryRequest;, +import org.elasticsearch.action.admin.indices.validate.query.ValidateQueryResponse;, +     * Validate a potentially expensive query without executing it., +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-validate.html"> Validate Query API, +     * on elastic.co</a>, +     * @param validateQueryRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public ValidateQueryResponse validateQuery(ValidateQueryRequest validateQueryRequest, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(validateQueryRequest, RequestConverters::validateQuery, options,, +            ValidateQueryResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously validate a potentially expensive query without executing it., +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-validate.html"> Validate Query API, +     * on elastic.co</a>, +     * @param validateQueryRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void validateQueryAsync(ValidateQueryRequest validateQueryRequest, RequestOptions options,, +                                   ActionListener<ValidateQueryResponse> listener) {]