[+++ b/plugins/lang-plan-a/src/main/java/org/elasticsearch/plan/a/Def.java, +import org.elasticsearch.plan.a.Definition.Cast;, +import org.elasticsearch.plan.a.Definition.Field;, +import org.elasticsearch.plan.a.Definition.Method;, +import org.elasticsearch.plan.a.Definition.Struct;, +import org.elasticsearch.plan.a.Definition.Transform;, +import org.elasticsearch.plan.a.Definition.Type;, +, +    @SuppressWarnings({ "unchecked", "rawtypes" }), +    @SuppressWarnings("rawtypes"), +    @SuppressWarnings({ "unchecked", "rawtypes" }), +    @SuppressWarnings("rawtypes"), +            for (final Class<?> iface : clazz.getInterfaces()) {, +            for (final Class<?> iface : clazz.getInterfaces()) {, +            for (final Class<?> iface : fromClass.getInterfaces()) {, +                for (final Class<?> iface : toClass.getInterfaces()) {, +                    return ((Number)left).doubleValue() * (char)right;, +                    return ((Number)left).floatValue() * (char)right;, +                    return ((Number)left).longValue() * (char)right;, +                    return ((Number)left).intValue() * (char)right;, +                    return (char)left * ((Number)right).doubleValue();, +                    return (char)left * ((Number)right).floatValue();, +                    return (char)left * ((Number)right).longValue();, +                    return (char)left * ((Number)right).intValue();, +                return (char)left * (char)right;, +                    return ((Number)left).doubleValue() / (char)right;, +                    return ((Number)left).floatValue() / (char)right;, +                    return ((Number)left).longValue() / (char)right;, +                    return ((Number)left).intValue() / (char)right;, +                    return (char)left / ((Number)right).doubleValue();, +                    return (char)left / ((Number)right).floatValue();, +                    return (char)left / ((Number)right).longValue();, +                    return (char)left / ((Number)right).intValue();, +                return (char)left / (char)right;, +                    return ((Number)left).doubleValue() % (char)right;, +                    return ((Number)left).floatValue() % (char)right;, +                    return ((Number)left).longValue() % (char)right;, +                    return ((Number)left).intValue() % (char)right;, +                    return (char)left % ((Number)right).doubleValue();, +                    return (char)left % ((Number)right).floatValue();, +                    return (char)left % ((Number)right).longValue();, +                    return (char)left % ((Number)right).intValue();, +                return (char)left % (char)right;, +                    return ((Number)left).doubleValue() + (char)right;, +                    return ((Number)left).floatValue() + (char)right;, +                    return ((Number)left).longValue() + (char)right;, +                    return ((Number)left).intValue() + (char)right;, +                    return (char)left + ((Number)right).doubleValue();, +                    return (char)left + ((Number)right).floatValue();, +                    return (char)left + ((Number)right).longValue();, +                    return (char)left + ((Number)right).intValue();, +                return (char)left + (char)right;, +                    return ((Number)left).doubleValue() - (char)right;, +                    return ((Number)left).floatValue() - (char)right;, +                    return ((Number)left).longValue() - (char)right;, +                    return ((Number)left).intValue() - (char)right;, +                    return (char)left - ((Number)right).doubleValue();, +                    return (char)left - ((Number)right).floatValue();, +                    return (char)left - ((Number)right).longValue();, +                    return (char)left - ((Number)right).intValue();, +                return (char)left - (char)right;, +                    return ((Number)left).longValue() << (char)right;, +                    return ((Number)left).intValue() << (char)right;, +                    return (char)left << ((Number)right).intValue();, +                return (char)left << (char)right;, +                    return ((Number)left).longValue() >> (char)right;, +                    return ((Number)left).intValue() >> (char)right;, +                    return (char)left >> ((Number)right).intValue();, +                return (char)left >> (char)right;, +                    return ((Number)left).longValue() >>> (char)right;, +                    return ((Number)left).intValue() >>> (char)right;, +                    return (char)left >>> ((Number)right).intValue();, +                return (char)left >>> (char)right;, +                    return ((Number)left).longValue() & (char)right;, +                    return ((Number)left).intValue() & (char)right;, +                    return (char)left & ((Number)right).longValue();, +                    return (char)left & ((Number)right).intValue();, +                return (char)left & (char)right;, +                    return ((Number)left).longValue() ^ (char)right;, +                    return ((Number)left).intValue() ^ (char)right;, +                    return (char)left ^ ((Number)right).longValue();, +                    return (char)left ^ ((Number)right).intValue();, +                return (char)left ^ (char)right;, +                    return ((Number)left).longValue() | (char)right;, +                    return ((Number)left).intValue() | (char)right;, +                    return (char)left | ((Number)right).longValue();, +                    return (char)left | ((Number)right).intValue();, +                return (char)left | (char)right;, +                    return (double)left == (char)right;, +                    return (char)left == ((Number)right).doubleValue();, +                    return (float)left == (char)right;, +                    return (char)left == ((Number)right).floatValue();, +                    return (long)left == (char)right;, +                    return (char)left == ((Number)right).longValue();, +                    return ((Number)left).intValue() == (char)right;, +                return (char)left == ((Number)right).intValue();, +                return (char)left == (char)right;, +                    return ((Number)left).doubleValue() < (char)right;, +                    return ((Number)left).floatValue() < (char)right;, +                    return ((Number)left).longValue() < (char)right;]