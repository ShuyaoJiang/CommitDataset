[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +                includeAliases = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +                includeAliases = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +                includeAliases = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                nodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                nodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +                includeAliases = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                nodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                nodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                    required = nodeBooleanValue(fieldNode);, +                    enabled = nodeBooleanValue(fieldNode);, +                    ignoreMissing = nodeBooleanValue(fieldNode);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +                includeAliases = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                nodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                nodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                    required = nodeBooleanValue(fieldNode);, +                    enabled = nodeBooleanValue(fieldNode);, +                    ignoreMissing = nodeBooleanValue(fieldNode);, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +    public static boolean nodeBooleanValue(Object node, boolean defaultValue) {, +        return nodeBooleanValue(node);, +    public static boolean nodeBooleanValue(Object node) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue()));, +                includeGlobalState = nodeBooleanValue(entry.getValue());, +                includeAliases = nodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                nodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                nodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                    required = nodeBooleanValue(fieldNode);, +                    enabled = nodeBooleanValue(fieldNode);, +                    ignoreMissing = nodeBooleanValue(fieldNode);, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +    public static boolean nodeBooleanValue(Object node, boolean defaultValue) {]