[+++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/ReciprocalRank.java, +        this.relevantRatingThreshhold = in.readInt();, +        for (RatedSearchHit hit : ratedHits) {, +        out.writeVInt(relevantRatingThreshhold);, +        builder.field(RELEVANT_RATING_FIELD.getPreferredName(), this.relevantRatingThreshhold);, +        return Objects.equals(relevantRatingThreshhold, other.relevantRatingThreshhold);, +        return Objects.hash(relevantRatingThreshhold);, +++ b/modules/rank-eval/src/main/java/org/elasticsearch/index/rankeval/ReciprocalRank.java, +        this.relevantRatingThreshhold = in.readInt();, +        for (RatedSearchHit hit : ratedHits) {, +        out.writeVInt(relevantRatingThreshhold);, +        builder.field(RELEVANT_RATING_FIELD.getPreferredName(), this.relevantRatingThreshhold);, +        return Objects.equals(relevantRatingThreshhold, other.relevantRatingThreshhold);, +        return Objects.hash(relevantRatingThreshhold);, +++ b/modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/ReciprocalRankTests.java, +import java.util.Arrays;, +        int searchHits = randomIntBetween(1, 50);, +        SearchHit[] hits = createSearchHits(0, searchHits, "test", "type");, +        int relevantAt = randomIntBetween(0, searchHits);, +        for (int i = 0; i <= searchHits; i++) {, +        // check that if we have fewer search hits than relevant doc position, we don't find any result and get 0.0 quality level, +        reciprocalRank = new ReciprocalRank();, +        evaluation = reciprocalRank.evaluate("id", Arrays.copyOfRange(hits, 0, relevantAt), ratedDocs);, +        ReciprocalRank testItem = new ReciprocalRank();, +        testItem.setRelevantRatingThreshhold(randomIntBetween(0, 20));]