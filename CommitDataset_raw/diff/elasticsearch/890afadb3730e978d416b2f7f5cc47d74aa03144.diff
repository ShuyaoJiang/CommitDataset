[+++ b/TESTING.asciidoc, +== Testing packaging, +The packaging tests use Vagrant virtual machines to verify that installing, +and running elasticsearch distributions works correctly on supported operating systems., +These tests should really only be run in vagrant vms because they're destructive., +. (Optional) Install https://github.com/fgrehm/vagrant-cachier[vagrant-cachier] to squeeze, +a bit more performance out of the process:, +download the base images and provision the boxes and immediately quit. Downloading all, +the images may take a long time. After the images are already on your machine, they won't, +be downloaded again unless they have been updated to a new version., +You can choose which boxes to test by setting the `-Pvagrant.boxes` project property. All of, +the valid options for this property are:, +, +* `sample` - The default, only chooses ubuntu-1404 and centos-7, +* List of box names, comma separated (e.g. `oel-7,fedora-26`) - Chooses exactly the boxes listed., +* `linux-all` - All linux boxes., +* `windows-all` - All Windows boxes. If there are any Windows boxes which do not, +have images available when this value is provided, the build will fail., +* `all` - All boxes we test. If there are any boxes (e.g. Windows) which do not have images, +available when this value is provided, the build will fail., +, +For a complete list of boxes on which tests can be run, run `./gradlew :qa:vagrant:listAllBoxes`., +For a list of boxes that have images available from your configuration, run, +`./gradlew :qa:vagrant:listAvailableBoxes`, +, +Note that if you interrupt gradle in the middle of running these tasks, any boxes started, +will remain running and you'll have to stop them manually with `./gradlew stop` or, +`vagrant halt`., +These are the linux flavors supported, all of which we provide images for, +=== Testing packaging on Windows, +The packaging tests also support Windows Server 2012R2 and Windows Server 2016., +Unfortunately we're not able to provide boxes for them in open source use, +because of licensing issues. Any Virtualbox image that has WinRM and Powershell, +enabled for remote users should work., +, +Testing on Windows requires the https://github.com/criteo/vagrant-winrm[vagrant-winrm] plugin., +, +------------------------------------, +vagrant plugin install vagrant-winrm, +------------------------------------, +, +Specify the image IDs of the Windows boxes to gradle with the following project, +properties. They can be set in `~/.gradle/gradle.properties` like, +, +------------------------------------, +vagrant.windows-2012r2.id=my-image-id, +vagrant.windows-2016.id=another-image-id, +------------------------------------, +, +or passed on the command line like `-Pvagrant.windows-2012r2.id=my-image-id`, +`-Pvagrant.windows-2016=another-image-id`, +, +These properties are required for Windows support in all gradle tasks that, +handle packaging tests. Either or both may be specified. Remember that to run tests, +on these boxes, the project property `vagrant.boxes` still needs to be set to a, +value that will include them., +, +If you're running vagrant commands outside of gradle, specify the Windows boxes, +with the environment variables, +, +* `VAGRANT_WINDOWS_2012R2_BOX`, +* `VAGRANT_WINDOWS_2016_BOX`, +, +=== Testing VMs are disposable, +=== Iterating on packaging tests, +Running the packaging tests through gradle can take a while because it will start, +and stop the VM each time. You can iterate faster by keeping the VM up and running, +the tests directly., +The packaging tests use a random seed to determine which past version to use for, +testing upgrades. To use a single past version fix the test seed when running, +the commands below (see <<Seed and repetitions.>>), +First build the packaging tests and their dependencies, +--------------------------------------------, +./gradlew :qa:vagrant:setupPackagingTest, +--------------------------------------------, +, +Then choose the VM you want to test on and bring it up. For example, to bring, +up Debian 9 use the gradle command below. Bringing the box up with vagrant directly, +may not mount the packaging test project in the right place. Once the VM is up, ssh, +into it, +, +--------------------------------------------, +./gradlew :qa:vagrant:vagrantDebian9#up, +vagrant ssh debian-9, +--------------------------------------------, +, +Now inside the VM, to run the https://github.com/sstephenson/bats[bats] packaging tests, +, +--------------------------------------------, +# runs all bats tests, +sudo bats $BATS_TESTS/*.bats, +# you can also pass specific test files, +sudo bats $BATS_TESTS/20_tar_package.bats $BATS_TESTS/25_tar_plugins.bats, +--------------------------------------------, +To run the Java packaging tests, again inside the VM, +--------------------------------------------, +bash $PACKAGING_TESTS/run-tests.sh, +--------------------------------------------, +or on Windows, +--------------------------------------------]