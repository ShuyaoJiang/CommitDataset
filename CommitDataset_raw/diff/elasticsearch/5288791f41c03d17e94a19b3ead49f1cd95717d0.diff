[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +import java.util.ArrayList;, +import java.util.HashSet;, +import java.util.Set;, +        // first find the concrete indices associated with the aliases, +        GetAliasesRequest aliasesRequest = new GetAliasesRequest().aliases(readAliasName, writeAliasName), +                .indicesOptions(IndicesOptions.lenientExpandOpen());, +        client.admin().indices().getAliases(aliasesRequest, ActionListener.wrap(, +                getAliasesResponse -> {, +                    Set<String> aliases = new HashSet<>();, +                    getAliasesResponse.getAliases().valuesIt().forEachRemaining(, +                            metaDataList -> metaDataList.forEach(metadata -> aliases.add(metadata.getAlias())));, +                    if (aliases.isEmpty()) {, +                        // don't error if the job's aliases have already been deleted - carry on and delete the rest of the job's data, +                        return;, +                    List<String> indices = new ArrayList<>();, +                    getAliasesResponse.getAliases().keysIt().forEachRemaining(indices::add);, +                    // remove the aliases from the concrete indices found in the first step, +                    IndicesAliasesRequest removeRequest = new IndicesAliasesRequest().addAliasAction(, +                            IndicesAliasesRequest.AliasActions.remove(), +                                    .aliases(aliases.toArray(new String[aliases.size()])), +                                    .indices(indices.toArray(new String[indices.size()])));, +                    client.admin().indices().aliases(removeRequest, ActionListener.wrap(, +                            removeResponse -> finishedHandler.onResponse(true),, +                            finishedHandler::onFailure));, +                },, +                finishedHandler::onFailure));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobStorageDeletionTask.java, +import org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;, +import java.util.ArrayList;, +import java.util.HashSet;, +import java.util.Set;, +        // first find the concrete indices associated with the aliases, +        GetAliasesRequest aliasesRequest = new GetAliasesRequest().aliases(readAliasName, writeAliasName), +                .indicesOptions(IndicesOptions.lenientExpandOpen());, +        client.admin().indices().getAliases(aliasesRequest, ActionListener.wrap(, +                getAliasesResponse -> {, +                    Set<String> aliases = new HashSet<>();, +                    getAliasesResponse.getAliases().valuesIt().forEachRemaining(, +                            metaDataList -> metaDataList.forEach(metadata -> aliases.add(metadata.getAlias())));, +                    if (aliases.isEmpty()) {, +                        // don't error if the job's aliases have already been deleted - carry on and delete the rest of the job's data, +                        return;, +                    List<String> indices = new ArrayList<>();, +                    getAliasesResponse.getAliases().keysIt().forEachRemaining(indices::add);, +                    // remove the aliases from the concrete indices found in the first step, +                    IndicesAliasesRequest removeRequest = new IndicesAliasesRequest().addAliasAction(, +                            IndicesAliasesRequest.AliasActions.remove(), +                                    .aliases(aliases.toArray(new String[aliases.size()])), +                                    .indices(indices.toArray(new String[indices.size()])));, +                    client.admin().indices().aliases(removeRequest, ActionListener.wrap(, +                            removeResponse -> finishedHandler.onResponse(true),, +                            finishedHandler::onFailure));, +                },, +                finishedHandler::onFailure));, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/integration/MlRestTestStateCleaner.java, +        // indices will be deleted by the ESIntegTestCase class]