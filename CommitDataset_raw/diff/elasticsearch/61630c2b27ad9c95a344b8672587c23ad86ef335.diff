[+++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        if (Node.NODE_LOCAL_SETTING.exists(settings)) {, +            return Node.NODE_LOCAL_SETTING.get(settings);, +        if (Node.NODE_MODE_SETTING.exists(settings)) {, +            String nodeMode = Node.NODE_MODE_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        if (Node.NODE_LOCAL_SETTING.exists(settings)) {, +            return Node.NODE_LOCAL_SETTING.get(settings);, +        if (Node.NODE_MODE_SETTING.exists(settings)) {, +            String nodeMode = Node.NODE_MODE_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        Node.NODE_LOCAL_SETTING,, +        Node.NODE_MODE_SETTING,, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        if (Node.NODE_LOCAL_SETTING.exists(settings)) {, +            return Node.NODE_LOCAL_SETTING.get(settings);, +        if (Node.NODE_MODE_SETTING.exists(settings)) {, +            String nodeMode = Node.NODE_MODE_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        Node.NODE_LOCAL_SETTING,, +        Node.NODE_MODE_SETTING,, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import java.util.function.Function;, +    public static final Setting<Boolean> NODE_LOCAL_SETTING = Setting.boolSetting("node.local", false, false, Setting.Scope.CLUSTER);, +    public static final Setting<String> NODE_MODE_SETTING = new Setting<>("node.mode", "network", Function.identity(), false, Setting.Scope.CLUSTER);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        if (Node.NODE_LOCAL_SETTING.exists(settings)) {, +            return Node.NODE_LOCAL_SETTING.get(settings);, +        if (Node.NODE_MODE_SETTING.exists(settings)) {, +            String nodeMode = Node.NODE_MODE_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        Node.NODE_LOCAL_SETTING,, +        Node.NODE_MODE_SETTING,, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import java.util.function.Function;, +    public static final Setting<Boolean> NODE_LOCAL_SETTING = Setting.boolSetting("node.local", false, false, Setting.Scope.CLUSTER);, +    public static final Setting<String> NODE_MODE_SETTING = new Setting<>("node.mode", "network", Function.identity(), false, Setting.Scope.CLUSTER);, +++ b/core/src/test/java/org/elasticsearch/client/transport/TransportClientRetryIT.java, +import org.elasticsearch.node.Node;, +                .put(Node.NODE_MODE_SETTING.getKey(), internalCluster().getNodeMode()), +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        if (Node.NODE_LOCAL_SETTING.exists(settings)) {, +            return Node.NODE_LOCAL_SETTING.get(settings);, +        if (Node.NODE_MODE_SETTING.exists(settings)) {, +            String nodeMode = Node.NODE_MODE_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        Node.NODE_LOCAL_SETTING,, +        Node.NODE_MODE_SETTING,, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import java.util.function.Function;, +    public static final Setting<Boolean> NODE_LOCAL_SETTING = Setting.boolSetting("node.local", false, false, Setting.Scope.CLUSTER);, +    public static final Setting<String> NODE_MODE_SETTING = new Setting<>("node.mode", "network", Function.identity(), false, Setting.Scope.CLUSTER);, +++ b/core/src/test/java/org/elasticsearch/client/transport/TransportClientRetryIT.java, +import org.elasticsearch.node.Node;, +                .put(Node.NODE_MODE_SETTING.getKey(), internalCluster().getNodeMode()), +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryModuleTests.java, +import org.elasticsearch.node.Node;, +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), false)., +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), false)., +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), local).build();, +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), local)., +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        if (Node.NODE_LOCAL_SETTING.exists(settings)) {, +            return Node.NODE_LOCAL_SETTING.get(settings);, +        if (Node.NODE_MODE_SETTING.exists(settings)) {, +            String nodeMode = Node.NODE_MODE_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        Node.NODE_LOCAL_SETTING,, +        Node.NODE_MODE_SETTING,, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import java.util.function.Function;, +    public static final Setting<Boolean> NODE_LOCAL_SETTING = Setting.boolSetting("node.local", false, false, Setting.Scope.CLUSTER);, +    public static final Setting<String> NODE_MODE_SETTING = new Setting<>("node.mode", "network", Function.identity(), false, Setting.Scope.CLUSTER);, +++ b/core/src/test/java/org/elasticsearch/client/transport/TransportClientRetryIT.java, +import org.elasticsearch.node.Node;, +                .put(Node.NODE_MODE_SETTING.getKey(), internalCluster().getNodeMode()), +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryModuleTests.java, +import org.elasticsearch.node.Node;, +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), false)., +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), false)., +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), local).build();, +        Settings settings = Settings.builder().put(Node.NODE_LOCAL_SETTING.getKey(), local)., +++ b/core/src/test/java/org/elasticsearch/transport/netty/NettyTransportIT.java, +import org.elasticsearch.node.Node;, +                .put(Node.NODE_MODE_SETTING.getKey(), "network"), +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        if (Node.NODE_LOCAL_SETTING.exists(settings)) {, +            return Node.NODE_LOCAL_SETTING.get(settings);, +        if (Node.NODE_MODE_SETTING.exists(settings)) {, +            String nodeMode = Node.NODE_MODE_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +        Node.NODE_LOCAL_SETTING,, +        Node.NODE_MODE_SETTING,, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import java.util.function.Function;, +    public static final Setting<Boolean> NODE_LOCAL_SETTING = Setting.boolSetting("node.local", false, false, Setting.Scope.CLUSTER);, +    public static final Setting<String> NODE_MODE_SETTING = new Setting<>("node.mode", "network", Function.identity(), false, Setting.Scope.CLUSTER);, +++ b/core/src/test/java/org/elasticsearch/client/transport/TransportClientRetryIT.java, +import org.elasticsearch.node.Node;, +                .put(Node.NODE_MODE_SETTING.getKey(), internalCluster().getNodeMode())]