[+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/Grok.java, +, +            if (pattern == null) {, +                throw new IllegalArgumentException("Unable to find pattern [" + patternName + "] in Grok's pattern dictionary");, +            }, +, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/Grok.java, +, +            if (pattern == null) {, +                throw new IllegalArgumentException("Unable to find pattern [" + patternName + "] in Grok's pattern dictionary");, +            }, +, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GrokProcessorTests.java, +    public void testNoMatchingPatternName() {, +        String fieldName = RandomDocumentPicks.randomFieldName(random());, +        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());, +        doc.setFieldValue(fieldName, "23");, +        Exception e = expectThrows(IllegalArgumentException.class, () -> new GrokProcessor(randomAlphaOfLength(10),, +            Collections.singletonMap("ONE", "1"), Collections.singletonList("%{NOTONE:not_one}"), fieldName,, +            false, false));, +        assertThat(e.getMessage(), equalTo("Unable to find pattern [NOTONE] in Grok's pattern dictionary"));, +    }, +, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/Grok.java, +, +            if (pattern == null) {, +                throw new IllegalArgumentException("Unable to find pattern [" + patternName + "] in Grok's pattern dictionary");, +            }, +, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GrokProcessorTests.java, +    public void testNoMatchingPatternName() {, +        String fieldName = RandomDocumentPicks.randomFieldName(random());, +        IngestDocument doc = RandomDocumentPicks.randomIngestDocument(random(), new HashMap<>());, +        doc.setFieldValue(fieldName, "23");, +        Exception e = expectThrows(IllegalArgumentException.class, () -> new GrokProcessor(randomAlphaOfLength(10),, +            Collections.singletonMap("ONE", "1"), Collections.singletonList("%{NOTONE:not_one}"), fieldName,, +            false, false));, +        assertThat(e.getMessage(), equalTo("Unable to find pattern [NOTONE] in Grok's pattern dictionary"));, +    }, +, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GrokTests.java, +import java.util.Collections;, +    public void testNoMatchingPatternInDictionary() {, +        Exception e = expectThrows(IllegalArgumentException.class, () -> new Grok(Collections.emptyMap(), "%{NOTFOUND}"));, +        assertThat(e.getMessage(), equalTo("Unable to find pattern [NOTFOUND] in Grok's pattern dictionary"));, +    }, +]