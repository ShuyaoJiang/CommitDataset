[+++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                for (ObjectObjectCursor<String, CompressedXContent> cursor1 : templateMetaData.mappings()) {, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                for (ObjectObjectCursor<String, CompressedXContent> cursor1 : templateMetaData.mappings()) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +import org.elasticsearch.common.compress.CompressedXContent;, +    private final CompressedXContent filter;, +    private AliasMetaData(String alias, CompressedXContent filter, String indexRouting, String searchRouting) {, +    public CompressedXContent filter() {, +    public CompressedXContent getFilter() {, +        CompressedXContent filter = null;, +            filter = CompressedXContent.readCompressedString(in);, +        private CompressedXContent filter;, +        public Builder filter(CompressedXContent filter) {, +                this.filter = new CompressedXContent(builder.bytes());, +                        builder.filter(new CompressedXContent(parser.binaryValue()));, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                for (ObjectObjectCursor<String, CompressedXContent> cursor1 : templateMetaData.mappings()) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +import org.elasticsearch.common.compress.CompressedXContent;, +    private final CompressedXContent filter;, +    private AliasMetaData(String alias, CompressedXContent filter, String indexRouting, String searchRouting) {, +    public CompressedXContent filter() {, +    public CompressedXContent getFilter() {, +        CompressedXContent filter = null;, +            filter = CompressedXContent.readCompressedString(in);, +        private CompressedXContent filter;, +        public Builder filter(CompressedXContent filter) {, +                this.filter = new CompressedXContent(builder.bytes());, +                        builder.filter(new CompressedXContent(parser.binaryValue()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                                builder.putMapping(new MappingMetaData(new CompressedXContent(parser.binaryValue())));, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                for (ObjectObjectCursor<String, CompressedXContent> cursor1 : templateMetaData.mappings()) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +import org.elasticsearch.common.compress.CompressedXContent;, +    private final CompressedXContent filter;, +    private AliasMetaData(String alias, CompressedXContent filter, String indexRouting, String searchRouting) {, +    public CompressedXContent filter() {, +    public CompressedXContent getFilter() {, +        CompressedXContent filter = null;, +            filter = CompressedXContent.readCompressedString(in);, +        private CompressedXContent filter;, +        public Builder filter(CompressedXContent filter) {, +                this.filter = new CompressedXContent(builder.bytes());, +                        builder.filter(new CompressedXContent(parser.binaryValue()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                                builder.putMapping(new MappingMetaData(new CompressedXContent(parser.binaryValue())));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java, +import org.elasticsearch.common.compress.CompressedXContent;, +    private final ImmutableOpenMap<String, CompressedXContent> mappings;, +    public IndexTemplateMetaData(String name, int order, String template, Settings settings, ImmutableOpenMap<String, CompressedXContent> mappings,, +    public ImmutableOpenMap<String, CompressedXContent> mappings() {, +    public ImmutableOpenMap<String, CompressedXContent> getMappings() {, +            builder.putMapping(in.readString(), CompressedXContent.readCompressedString(in));, +        for (ObjectObjectCursor<String, CompressedXContent> cursor : mappings) {, +        private final ImmutableOpenMap.Builder<String, CompressedXContent> mappings;, +        public Builder putMapping(String mappingType, CompressedXContent mappingSource) throws IOException {, +            mappings.put(mappingType, new CompressedXContent(mappingSource));, +                for (ObjectObjectCursor<String, CompressedXContent> cursor : indexTemplateMetaData.mappings()) {, +                for (ObjectObjectCursor<String, CompressedXContent> cursor : indexTemplateMetaData.mappings()) {, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                for (ObjectObjectCursor<String, CompressedXContent> cursor1 : templateMetaData.mappings()) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +import org.elasticsearch.common.compress.CompressedXContent;, +    private final CompressedXContent filter;, +    private AliasMetaData(String alias, CompressedXContent filter, String indexRouting, String searchRouting) {, +    public CompressedXContent filter() {, +    public CompressedXContent getFilter() {, +        CompressedXContent filter = null;, +            filter = CompressedXContent.readCompressedString(in);, +        private CompressedXContent filter;, +        public Builder filter(CompressedXContent filter) {, +                this.filter = new CompressedXContent(builder.bytes());, +                        builder.filter(new CompressedXContent(parser.binaryValue()));]