[+++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/common/http/HttpReadTimeoutTests.java, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/common/http/HttpReadTimeoutTests.java, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterIT.java, +import com.squareup.okhttp.mockwebserver.QueueDispatcher;, +import okio.Buffer;, +    public void startWebServer() throws IOException {, +        webServer = createMockWebServer();, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer)), +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer)), +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +        final MockWebServer secondWebServer = createMockWebServer();, +        try {, +                    Settings.builder().putArray("xpack.monitoring.exporters._http.host", getFormattedAddress(secondWebServer))));, +        } finally {, +            secondWebServer.shutdown();, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +, +    private String getFormattedAddress(MockWebServer server) {, +        return server.getHostName() + ":" + server.getPort();, +    }, +, +    private MockWebServer createMockWebServer() throws IOException {, +        MockWebServer server = new MockWebServer();, +        server.start();, +        final QueueDispatcher dispatcher = new QueueDispatcher();, +        dispatcher.setFailFast(true);, +        server.setDispatcher(dispatcher);, +        return server;, +    }, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/common/http/HttpReadTimeoutTests.java, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterIT.java, +import com.squareup.okhttp.mockwebserver.QueueDispatcher;, +import okio.Buffer;, +    public void startWebServer() throws IOException {, +        webServer = createMockWebServer();, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer)), +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer)), +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +        final MockWebServer secondWebServer = createMockWebServer();, +        try {, +                    Settings.builder().putArray("xpack.monitoring.exporters._http.host", getFormattedAddress(secondWebServer))));, +        } finally {, +            secondWebServer.shutdown();, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +, +    private String getFormattedAddress(MockWebServer server) {, +        return server.getHostName() + ":" + server.getPort();, +    }, +, +    private MockWebServer createMockWebServer() throws IOException {, +        MockWebServer server = new MockWebServer();, +        server.start();, +        final QueueDispatcher dispatcher = new QueueDispatcher();, +        dispatcher.setFailFast(true);, +        server.setDispatcher(dispatcher);, +        return server;, +    }, +++ /dev/null, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/common/http/HttpReadTimeoutTests.java, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterIT.java, +import com.squareup.okhttp.mockwebserver.QueueDispatcher;, +import okio.Buffer;, +    public void startWebServer() throws IOException {, +        webServer = createMockWebServer();, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer)), +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer)), +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +        final MockWebServer secondWebServer = createMockWebServer();, +        try {, +                    Settings.builder().putArray("xpack.monitoring.exporters._http.host", getFormattedAddress(secondWebServer))));, +        } finally {, +            secondWebServer.shutdown();, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +                .put("xpack.monitoring.exporters._http.host", getFormattedAddress(webServer));, +, +    private String getFormattedAddress(MockWebServer server) {, +        return server.getHostName() + ":" + server.getPort();, +    }, +, +    private MockWebServer createMockWebServer() throws IOException {, +        MockWebServer server = new MockWebServer();, +        server.start();, +        final QueueDispatcher dispatcher = new QueueDispatcher();, +        dispatcher.setFailFast(true);, +        server.setDispatcher(dispatcher);, +        return server;, +    }, +++ /dev/null, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/watcher/actions/email/EmailAttachmentTests.java, +import org.elasticsearch.xpack.common.http.HttpRequestTemplate;, +import org.elasticsearch.xpack.common.http.Scheme;, +import static org.elasticsearch.xpack.watcher.actions.ActionBuilders.emailAction;, +        webServer.start();, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/common/http/HttpReadTimeoutTests.java, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterIT.java]