[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/deprecation/DeprecationInfoAction.java, +import org.elasticsearch.Version;, +import org.elasticsearch.xpack.core.ml.datafeed.DatafeedConfig;, +import java.util.ArrayList;, +import java.util.Collections;, +        private List<DeprecationIssue> mlSettingsIssues;, +                        Map<String, List<DeprecationIssue>> indexSettingsIssues,, +                        List<DeprecationIssue> mlSettingsIssues) {, +            this.mlSettingsIssues = mlSettingsIssues;, +        public List<DeprecationIssue> getMlSettingsIssues() {, +            return mlSettingsIssues;, +        }, +, +            if (in.getVersion().onOrAfter(Version.V_6_7_0)) {, +                mlSettingsIssues = in.readList(DeprecationIssue::new);, +            } else {, +                mlSettingsIssues = Collections.emptyList();, +            }, +            if (out.getVersion().onOrAfter(Version.V_6_7_0)) {, +                out.writeList(mlSettingsIssues);, +            }, +                .array("ml_settings", mlSettingsIssues.toArray()), +                Objects.equals(indexSettingsIssues, response.indexSettingsIssues) &&, +                Objects.equals(mlSettingsIssues, response.mlSettingsIssues);, +            return Objects.hash(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +         * @param datafeeds The ml datafeed configurations, +         * @param mlSettingsCheck The list of ml checks, +                                                  List<DatafeedConfig> datafeeds,, +                                                  List<Function<IndexMetaData, DeprecationIssue>> indexSettingsChecks,, +                                                  List<Function<DatafeedConfig, DeprecationIssue>> mlSettingsCheck) {, +            List<DeprecationIssue> mlSettingsIssues = new ArrayList<>();, +            for (DatafeedConfig config : datafeeds) {, +                mlSettingsIssues.addAll(filterChecks(mlSettingsCheck, (c) -> c.apply(config)));, +            }, +            return new DeprecationInfoAction.Response(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/deprecation/DeprecationInfoAction.java, +import org.elasticsearch.Version;, +import org.elasticsearch.xpack.core.ml.datafeed.DatafeedConfig;, +import java.util.ArrayList;, +import java.util.Collections;, +        private List<DeprecationIssue> mlSettingsIssues;, +                        Map<String, List<DeprecationIssue>> indexSettingsIssues,, +                        List<DeprecationIssue> mlSettingsIssues) {, +            this.mlSettingsIssues = mlSettingsIssues;, +        public List<DeprecationIssue> getMlSettingsIssues() {, +            return mlSettingsIssues;, +        }, +, +            if (in.getVersion().onOrAfter(Version.V_6_7_0)) {, +                mlSettingsIssues = in.readList(DeprecationIssue::new);, +            } else {, +                mlSettingsIssues = Collections.emptyList();, +            }, +            if (out.getVersion().onOrAfter(Version.V_6_7_0)) {, +                out.writeList(mlSettingsIssues);, +            }, +                .array("ml_settings", mlSettingsIssues.toArray()), +                Objects.equals(indexSettingsIssues, response.indexSettingsIssues) &&, +                Objects.equals(mlSettingsIssues, response.mlSettingsIssues);, +            return Objects.hash(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +         * @param datafeeds The ml datafeed configurations, +         * @param mlSettingsCheck The list of ml checks, +                                                  List<DatafeedConfig> datafeeds,, +                                                  List<Function<IndexMetaData, DeprecationIssue>> indexSettingsChecks,, +                                                  List<Function<DatafeedConfig, DeprecationIssue>> mlSettingsCheck) {, +            List<DeprecationIssue> mlSettingsIssues = new ArrayList<>();, +            for (DatafeedConfig config : datafeeds) {, +                mlSettingsIssues.addAll(filterChecks(mlSettingsCheck, (c) -> c.apply(config)));, +            }, +            return new DeprecationInfoAction.Response(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        public void setQuery(Map<String, Object> query) {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/deprecation/DeprecationInfoAction.java, +import org.elasticsearch.Version;, +import org.elasticsearch.xpack.core.ml.datafeed.DatafeedConfig;, +import java.util.ArrayList;, +import java.util.Collections;, +        private List<DeprecationIssue> mlSettingsIssues;, +                        Map<String, List<DeprecationIssue>> indexSettingsIssues,, +                        List<DeprecationIssue> mlSettingsIssues) {, +            this.mlSettingsIssues = mlSettingsIssues;, +        public List<DeprecationIssue> getMlSettingsIssues() {, +            return mlSettingsIssues;, +        }, +, +            if (in.getVersion().onOrAfter(Version.V_6_7_0)) {, +                mlSettingsIssues = in.readList(DeprecationIssue::new);, +            } else {, +                mlSettingsIssues = Collections.emptyList();, +            }, +            if (out.getVersion().onOrAfter(Version.V_6_7_0)) {, +                out.writeList(mlSettingsIssues);, +            }, +                .array("ml_settings", mlSettingsIssues.toArray()), +                Objects.equals(indexSettingsIssues, response.indexSettingsIssues) &&, +                Objects.equals(mlSettingsIssues, response.mlSettingsIssues);, +            return Objects.hash(clusterSettingsIssues, nodeSettingsIssues, indexSettingsIssues, mlSettingsIssues);, +         * @param datafeeds The ml datafeed configurations, +         * @param mlSettingsCheck The list of ml checks, +                                                  List<DatafeedConfig> datafeeds,]