[+++ b/src/main/java/org/elasticsearch/alerts/AlertManager.java, +import org.elasticsearch.alerts.actions.AlertActionRegistry;, +    private final AlertActionRegistry actionRegistry;, +                        IndicesService indicesService, TriggerManager triggerManager, AlertActionManager actionManager, AlertActionRegistry actionRegistry) {, +        this.actionManager.setAlertManager(this);, +        this.actionRegistry = actionRegistry;, +    public void scheduleAlert(String alertName, DateTime scheduledFireTime, DateTime fireTime){, +, +            actionManager.addAlertAction(alert, scheduledFireTime, fireTime);, +        } catch (IOException ioe) {, +            logger.error("Failed to add alert action for [{}]", ioe, alert);, +        }, +    }, +, +    public TriggerResult executeAlert(String alertName, DateTime scheduledFireTime, DateTime fireTime) {, +        ensureStarted();, +        Alert alert = alertsStore.getAlert(alertName);, +        if (alert == null) {, +            throw new ElasticsearchException("Alert is not available");, +        }, +        try {, +            TriggerResult triggerResult = triggerManager.isTriggered(alert, scheduledFireTime, fireTime);, +            if (triggerResult.isTriggered()) {, +                actionRegistry.doAction(alert, triggerResult);, +                alert.lastActionFire(fireTime);, +                alertsStore.updateAlert(alert);, +            }, +            return triggerResult;, +            throw new ElasticsearchException("Failed to execute alert [" + alert + "]", e);, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertManager.java, +import org.elasticsearch.alerts.actions.AlertActionRegistry;, +    private final AlertActionRegistry actionRegistry;, +                        IndicesService indicesService, TriggerManager triggerManager, AlertActionManager actionManager, AlertActionRegistry actionRegistry) {, +        this.actionManager.setAlertManager(this);, +        this.actionRegistry = actionRegistry;, +    public void scheduleAlert(String alertName, DateTime scheduledFireTime, DateTime fireTime){, +, +            actionManager.addAlertAction(alert, scheduledFireTime, fireTime);, +        } catch (IOException ioe) {, +            logger.error("Failed to add alert action for [{}]", ioe, alert);, +        }, +    }, +, +    public TriggerResult executeAlert(String alertName, DateTime scheduledFireTime, DateTime fireTime) {, +        ensureStarted();, +        Alert alert = alertsStore.getAlert(alertName);, +        if (alert == null) {, +            throw new ElasticsearchException("Alert is not available");, +        }, +        try {, +            TriggerResult triggerResult = triggerManager.isTriggered(alert, scheduledFireTime, fireTime);, +            if (triggerResult.isTriggered()) {, +                actionRegistry.doAction(alert, triggerResult);, +                alert.lastActionFire(fireTime);, +                alertsStore.updateAlert(alert);, +            }, +            return triggerResult;, +            throw new ElasticsearchException("Failed to execute alert [" + alert + "]", e);, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +import org.elasticsearch.action.update.UpdateRequest;, +import org.elasticsearch.action.update.UpdateResponse;, +    public IndexResponse updateAlert(Alert alert) throws IOException {, +, +                .setSource(), +                .setOpType(IndexRequest.OpType.INDEX), +, +++ b/src/main/java/org/elasticsearch/alerts/AlertManager.java, +import org.elasticsearch.alerts.actions.AlertActionRegistry;, +    private final AlertActionRegistry actionRegistry;, +                        IndicesService indicesService, TriggerManager triggerManager, AlertActionManager actionManager, AlertActionRegistry actionRegistry) {, +        this.actionManager.setAlertManager(this);, +        this.actionRegistry = actionRegistry;, +    public void scheduleAlert(String alertName, DateTime scheduledFireTime, DateTime fireTime){, +, +            actionManager.addAlertAction(alert, scheduledFireTime, fireTime);, +        } catch (IOException ioe) {, +            logger.error("Failed to add alert action for [{}]", ioe, alert);, +        }, +    }, +, +    public TriggerResult executeAlert(String alertName, DateTime scheduledFireTime, DateTime fireTime) {, +        ensureStarted();, +        Alert alert = alertsStore.getAlert(alertName);, +        if (alert == null) {, +            throw new ElasticsearchException("Alert is not available");, +        }, +        try {, +            TriggerResult triggerResult = triggerManager.isTriggered(alert, scheduledFireTime, fireTime);, +            if (triggerResult.isTriggered()) {, +                actionRegistry.doAction(alert, triggerResult);, +                alert.lastActionFire(fireTime);, +                alertsStore.updateAlert(alert);, +            }, +            return triggerResult;, +            throw new ElasticsearchException("Failed to execute alert [" + alert + "]", e);, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +import org.elasticsearch.action.update.UpdateRequest;]