[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "com.spatial4j:spatial4j:${project.versions.spatial4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "com.spatial4j:spatial4j:${project.versions.spatial4j}", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "com.spatial4j:spatial4j:${project.versions.spatial4j}", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Don't use deprecated lucene apis, +org.apache.lucene.index.DocsEnum, +org.apache.lucene.index.DocsAndPositionsEnum, +org.apache.lucene.queries.TermFilter, +org.apache.lucene.queries.TermsFilter, +org.apache.lucene.search.Filter, +org.apache.lucene.search.FilteredQuery, +org.apache.lucene.search.TermRangeFilter, +org.apache.lucene.search.NumericRangeFilter, +org.apache.lucene.search.PrefixFilter, +org.apache.lucene.search.QueryWrapperFilter, +org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "com.spatial4j:spatial4j:${project.versions.spatial4j}", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Don't use deprecated lucene apis, +org.apache.lucene.index.DocsEnum, +org.apache.lucene.index.DocsAndPositionsEnum, +org.apache.lucene.queries.TermFilter, +org.apache.lucene.queries.TermsFilter, +org.apache.lucene.search.Filter, +org.apache.lucene.search.FilteredQuery, +org.apache.lucene.search.TermRangeFilter, +org.apache.lucene.search.NumericRangeFilter, +org.apache.lucene.search.PrefixFilter, +org.apache.lucene.search.QueryWrapperFilter, +org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +, +++ b/buildSrc/src/main/resources/forbidden/core-signatures.txt, +org.apache.lucene.search.NumericRangeQuery#newDoubleRange(java.lang.String,java.lang.Double,java.lang.Double,boolean,boolean), +org.apache.lucene.search.NumericRangeQuery#newFloatRange(java.lang.String,java.lang.Float,java.lang.Float,boolean,boolean), +org.apache.lucene.search.NumericRangeQuery#newIntRange(java.lang.String,java.lang.Integer,java.lang.Integer,boolean,boolean), +org.apache.lucene.search.NumericRangeQuery#newLongRange(java.lang.String,java.lang.Long,java.lang.Long,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newDoubleRange(java.lang.String,java.lang.Double,java.lang.Double,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newFloatRange(java.lang.String,java.lang.Float,java.lang.Float,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newIntRange(java.lang.String,java.lang.Integer,java.lang.Integer,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newLongRange(java.lang.String,java.lang.Long,java.lang.Long,boolean,boolean), +@defaultMessage Don't use deprecated Query#setBoost, wrap the query into a BoostQuery instead, +org.apache.lucene.search.Query#setBoost(float), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "com.spatial4j:spatial4j:${project.versions.spatial4j}", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Don't use deprecated lucene apis, +org.apache.lucene.index.DocsEnum, +org.apache.lucene.index.DocsAndPositionsEnum, +org.apache.lucene.queries.TermFilter, +org.apache.lucene.queries.TermsFilter, +org.apache.lucene.search.Filter, +org.apache.lucene.search.FilteredQuery, +org.apache.lucene.search.TermRangeFilter, +org.apache.lucene.search.NumericRangeFilter, +org.apache.lucene.search.PrefixFilter, +org.apache.lucene.search.QueryWrapperFilter, +org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter, +org.apache.lucene.index.IndexWriter#isLocked(org.apache.lucene.store.Directory), +, +++ b/buildSrc/src/main/resources/forbidden/core-signatures.txt, +org.apache.lucene.search.NumericRangeQuery#newDoubleRange(java.lang.String,java.lang.Double,java.lang.Double,boolean,boolean), +org.apache.lucene.search.NumericRangeQuery#newFloatRange(java.lang.String,java.lang.Float,java.lang.Float,boolean,boolean), +org.apache.lucene.search.NumericRangeQuery#newIntRange(java.lang.String,java.lang.Integer,java.lang.Integer,boolean,boolean), +org.apache.lucene.search.NumericRangeQuery#newLongRange(java.lang.String,java.lang.Long,java.lang.Long,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newDoubleRange(java.lang.String,java.lang.Double,java.lang.Double,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newFloatRange(java.lang.String,java.lang.Float,java.lang.Float,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newIntRange(java.lang.String,java.lang.Integer,java.lang.Integer,boolean,boolean), +org.apache.lucene.search.NumericRangeFilter#newLongRange(java.lang.String,java.lang.Long,java.lang.Long,boolean,boolean), +@defaultMessage Don't use deprecated Query#setBoost, wrap the query into a BoostQuery instead, +org.apache.lucene.search.Query#setBoost(float), +, +++ b/buildSrc/version.properties, +lucene            = 5.5.0, +spatial4j         = 0.5, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "com.spatial4j:spatial4j:${project.versions.spatial4j}", +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +@defaultMessage Don't use deprecated lucene apis, +org.apache.lucene.index.DocsEnum, +org.apache.lucene.index.DocsAndPositionsEnum, +org.apache.lucene.queries.TermFilter, +org.apache.lucene.queries.TermsFilter, +org.apache.lucene.search.Filter, +org.apache.lucene.search.FilteredQuery, +org.apache.lucene.search.TermRangeFilter, +org.apache.lucene.search.NumericRangeFilter, +org.apache.lucene.search.PrefixFilter]