[+++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                modules.add(new PluginsModule(pluginsService));, +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                modules.add(new PluginsModule(pluginsService));, +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java, +    public ModulesBuilder add(Module... newModules) {, +        for (Module module : newModules) {, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                modules.add(new PluginsModule(pluginsService));, +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java, +    public ModulesBuilder add(Module... newModules) {, +        for (Module module : newModules) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                modules.add(new PluginsModule(pluginsService));, +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java, +    public ModulesBuilder add(Module... newModules) {, +        for (Module module : newModules) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +, +            for (Module pluginModule : pluginsService.shardModules(indexSettings)) {, +                modules.add(pluginModule);, +            }, +            pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;, +                modules.add(new PluginsModule(pluginsService));, +                for (Module pluginModule : pluginsService.nodeModules()) {, +                    modules.add(pluginModule);, +                }, +                pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java, +    public ModulesBuilder add(Module... newModules) {, +        for (Module module : newModules) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +, +            for (Module pluginModule : pluginsService.shardModules(indexSettings)) {, +                modules.add(pluginModule);, +            }, +            pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +import com.google.common.collect.ImmutableMap;, +import com.google.common.collect.ImmutableSet;, +import com.google.common.collect.Iterables;, +import com.google.common.collect.Iterators;, +import com.google.common.collect.Lists;, +import com.google.common.collect.Maps;, +import org.elasticsearch.common.inject.CreationException;, +import org.elasticsearch.common.inject.Inject;, +import org.elasticsearch.common.inject.Injector;, +import org.elasticsearch.common.inject.Injectors;, +import org.elasticsearch.common.inject.Module;, +import org.elasticsearch.common.inject.ModulesBuilder;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.IndexModule;, +import org.elasticsearch.index.IndexNameModule;, +import org.elasticsearch.index.IndexNotFoundException;, +import org.elasticsearch.index.IndexService;, +import org.elasticsearch.index.LocalNodeIdModule;, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +        for (Module pluginModule : pluginsService.indexModules(indexSettings)) {, +            modules.add(pluginModule);, +        }, +        pluginsService.processModules(modules);, +, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +import org.elasticsearch.common.inject.Module;]