[+++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public enum Type {, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public enum Type {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public enum Type {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/action/ActionFuture.java, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public enum Type {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/action/ActionFuture.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.forcemerge.ForceMergeAction;, +import org.elasticsearch.action.admin.indices.forcemerge.TransportForceMergeAction;, +        registerAction(ForceMergeAction.INSTANCE, TransportForceMergeAction.class);, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public enum Type {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/action/ActionFuture.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.forcemerge.ForceMergeAction;, +import org.elasticsearch.action.admin.indices.forcemerge.TransportForceMergeAction;, +        registerAction(ForceMergeAction.INSTANCE, TransportForceMergeAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +public class TransportCloseIndexAction extends TransportMasterNodeAction<CloseIndexRequest, CloseIndexResponse> implements NodeSettingsService.Listener {, +    private volatile boolean closeIndexEnabled;, +    public static final String SETTING_CLUSTER_INDICES_CLOSE_ENABLE = "cluster.indices.close.enable";, +        this.closeIndexEnabled = settings.getAsBoolean(SETTING_CLUSTER_INDICES_CLOSE_ENABLE, true);, +        nodeSettingsService.addListener(this);, +        if (closeIndexEnabled == false) {, +            throw new IllegalStateException("closing indices is disabled - set [" + SETTING_CLUSTER_INDICES_CLOSE_ENABLE + ": true] to enable it. NOTE: closed indices still consume a significant amount of diskspace");, +        }, +, +    @Override, +    public void onRefreshSettings(Settings settings) {, +        final boolean enable = settings.getAsBoolean(SETTING_CLUSTER_INDICES_CLOSE_ENABLE, this.closeIndexEnabled);, +        if (enable != this.closeIndexEnabled) {, +            logger.info("updating [{}] from [{}] to [{}]", SETTING_CLUSTER_INDICES_CLOSE_ENABLE, this.closeIndexEnabled, enable);, +            this.closeIndexEnabled = enable;, +        }, +    }, +++ b/TESTING.asciidoc, +mvn verify -Dtests.filter="@Rest" -Dskip.unit.tests=true, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +++ b/core/src/main/java/org/apache/lucene/store/StoreRateLimiting.java, +    public enum Type {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +            throw new IllegalArgumentException("the version needs to contain major, minor, and revision, and optionally the build: " + version);, +++ b/core/src/main/java/org/elasticsearch/action/ActionFuture.java, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.forcemerge.ForceMergeAction;, +import org.elasticsearch.action.admin.indices.forcemerge.TransportForceMergeAction;, +        registerAction(ForceMergeAction.INSTANCE, TransportForceMergeAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java, +public class TransportCloseIndexAction extends TransportMasterNodeAction<CloseIndexRequest, CloseIndexResponse> implements NodeSettingsService.Listener {, +    private volatile boolean closeIndexEnabled;, +    public static final String SETTING_CLUSTER_INDICES_CLOSE_ENABLE = "cluster.indices.close.enable";, +        this.closeIndexEnabled = settings.getAsBoolean(SETTING_CLUSTER_INDICES_CLOSE_ENABLE, true);, +        nodeSettingsService.addListener(this);, +        if (closeIndexEnabled == false) {, +            throw new IllegalStateException("closing indices is disabled - set [" + SETTING_CLUSTER_INDICES_CLOSE_ENABLE + ": true] to enable it. NOTE: closed indices still consume a significant amount of diskspace");, +        }, +, +    @Override]