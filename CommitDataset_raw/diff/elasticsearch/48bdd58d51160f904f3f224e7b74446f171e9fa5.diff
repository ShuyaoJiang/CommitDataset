[+++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.cluster.ClusterService;, +    private final ClusterService clusterService;, +                            IndicesService indicesService, ClusterService clusterService) throws Exception {, +        this.clusterService = clusterService;, +                                    indicesService.deleteIndexStore("dangling index with timeout set to 0", indexMetaData, state);, +                    indicesService.deleteIndexStore("deleting dangling index", metaData, clusterService.state());, +++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.cluster.ClusterService;, +    private final ClusterService clusterService;, +                            IndicesService indicesService, ClusterService clusterService) throws Exception {, +        this.clusterService = clusterService;, +                                    indicesService.deleteIndexStore("dangling index with timeout set to 0", indexMetaData, state);, +                    indicesService.deleteIndexStore("deleting dangling index", metaData, clusterService.state());, +++ b/src/main/java/org/elasticsearch/indices/IndicesService.java, +    public IndicesService(Settings settings, IndicesLifecycle indicesLifecycle, IndicesAnalysisService indicesAnalysisService, Injector injector, NodeEnvironment nodeEnv) {, +    public void deleteClosedIndex(String reason, IndexMetaData metaData, ClusterState clusterState) {, +                deleteIndexStore(reason, metaData, clusterState);, +    public void deleteIndexStore(String reason, IndexMetaData metaData, ClusterState clusterState) throws IOException {, +++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.cluster.ClusterService;, +    private final ClusterService clusterService;, +                            IndicesService indicesService, ClusterService clusterService) throws Exception {, +        this.clusterService = clusterService;, +                                    indicesService.deleteIndexStore("dangling index with timeout set to 0", indexMetaData, state);, +                    indicesService.deleteIndexStore("deleting dangling index", metaData, clusterService.state());, +++ b/src/main/java/org/elasticsearch/indices/IndicesService.java, +    public IndicesService(Settings settings, IndicesLifecycle indicesLifecycle, IndicesAnalysisService indicesAnalysisService, Injector injector, NodeEnvironment nodeEnv) {, +    public void deleteClosedIndex(String reason, IndexMetaData metaData, ClusterState clusterState) {, +                deleteIndexStore(reason, metaData, clusterState);, +    public void deleteIndexStore(String reason, IndexMetaData metaData, ClusterState clusterState) throws IOException {, +++ b/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                indicesService.deleteClosedIndex("closed index no longer part of the metadata", metaData, event.state());, +++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.cluster.ClusterService;, +    private final ClusterService clusterService;, +                            IndicesService indicesService, ClusterService clusterService) throws Exception {, +        this.clusterService = clusterService;, +                                    indicesService.deleteIndexStore("dangling index with timeout set to 0", indexMetaData, state);, +                    indicesService.deleteIndexStore("deleting dangling index", metaData, clusterService.state());, +++ b/src/main/java/org/elasticsearch/indices/IndicesService.java, +    public IndicesService(Settings settings, IndicesLifecycle indicesLifecycle, IndicesAnalysisService indicesAnalysisService, Injector injector, NodeEnvironment nodeEnv) {, +    public void deleteClosedIndex(String reason, IndexMetaData metaData, ClusterState clusterState) {, +                deleteIndexStore(reason, metaData, clusterState);, +    public void deleteIndexStore(String reason, IndexMetaData metaData, ClusterState clusterState) throws IOException {, +++ b/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                indicesService.deleteClosedIndex("closed index no longer part of the metadata", metaData, event.state());, +++ b/src/main/java/org/elasticsearch/indices/store/IndicesStore.java, +                            indicesService.deleteIndexStore("no longer used", indexMeta, currentState);, +++ b/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +import org.elasticsearch.cluster.ClusterService;, +    private final ClusterService clusterService;, +                            IndicesService indicesService, ClusterService clusterService) throws Exception {, +        this.clusterService = clusterService;, +                                    indicesService.deleteIndexStore("dangling index with timeout set to 0", indexMetaData, state);, +                    indicesService.deleteIndexStore("deleting dangling index", metaData, clusterService.state());, +++ b/src/main/java/org/elasticsearch/indices/IndicesService.java, +    public IndicesService(Settings settings, IndicesLifecycle indicesLifecycle, IndicesAnalysisService indicesAnalysisService, Injector injector, NodeEnvironment nodeEnv) {, +    public void deleteClosedIndex(String reason, IndexMetaData metaData, ClusterState clusterState) {, +                deleteIndexStore(reason, metaData, clusterState);, +    public void deleteIndexStore(String reason, IndexMetaData metaData, ClusterState clusterState) throws IOException {, +++ b/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                indicesService.deleteClosedIndex("closed index no longer part of the metadata", metaData, event.state());, +++ b/src/main/java/org/elasticsearch/indices/store/IndicesStore.java, +                            indicesService.deleteIndexStore("no longer used", indexMeta, currentState);, +++ b/src/test/java/org/elasticsearch/indices/IndicesServiceTest.java, +            indicesService.deleteIndexStore("boom", firstMetaData, clusterService.state());, +            indicesService.deleteIndexStore("boom", secondMetaData, clusterService.state());, +            indicesService.deleteIndexStore("boom", firstMetaData, clusterService.state());]