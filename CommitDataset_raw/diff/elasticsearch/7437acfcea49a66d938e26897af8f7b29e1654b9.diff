[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +    public int indexRecoveryProgress() {, +        if (recoveredIndexSize == 0) {, +            return 0;, +        }, +        return (int) (((double) recoveredIndexSize) / expectedRecoveredIndexSize().bytes() * 100);, +    }, +, +    public int getIndexRecoveryProgress() {, +        return indexRecoveryProgress();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +    public int indexRecoveryProgress() {, +        if (recoveredIndexSize == 0) {, +            return 0;, +        }, +        return (int) (((double) recoveredIndexSize) / expectedRecoveredIndexSize().bytes() * 100);, +    }, +, +    public int getIndexRecoveryProgress() {, +        return indexRecoveryProgress();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java, +    public int indexRecoveryProgress() {, +        if (recoveredIndexSize == 0) {, +            return 0;, +        }, +        return (int) (((double) recoveredIndexSize) / expectedRecoveredIndexSize().bytes() * 100);, +    }, +, +    public int getIndexRecoveryProgress() {, +        return indexRecoveryProgress();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +    public int indexRecoveryProgress() {, +        if (recoveredIndexSize == 0) {, +            return 0;, +        }, +        return (int) (((double) recoveredIndexSize) / expectedRecoveredIndexSize().bytes() * 100);, +    }, +, +    public int getIndexRecoveryProgress() {, +        return indexRecoveryProgress();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java, +    public int indexRecoveryProgress() {, +        if (recoveredIndexSize == 0) {, +            return 0;, +        }, +        return (int) (((double) recoveredIndexSize) / expectedRecoveredIndexSize().bytes() * 100);, +    }, +, +    public int getIndexRecoveryProgress() {, +        return indexRecoveryProgress();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +        InternalIndexShard indexShard = (InternalIndexShard) indexService.shardSafe(request.shardId());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java, +    public int indexRecoveryProgress() {, +        if (recoveredIndexSize == 0) {, +            return 0;, +        }, +        return (int) (((double) recoveredIndexSize) / expectedRecoveredIndexSize().bytes() * 100);, +    }, +, +    public int getIndexRecoveryProgress() {, +        return indexRecoveryProgress();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java, +    public int indexRecoveryProgress() {, +        if (recoveredIndexSize == 0) {, +            return 0;, +        }, +        return (int) (((double) recoveredIndexSize) / expectedRecoveredIndexSize().bytes() * 100);, +    }, +, +    public int getIndexRecoveryProgress() {, +        return indexRecoveryProgress();, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java, +        InternalIndexShard indexShard = (InternalIndexShard) indexService.shardSafe(request.shardId());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/admin/indices/status/RestIndicesStatusAction.java, +                                    builder.field("progress", peerRecoveryStatus.indexRecoveryProgress());, +                                    builder.field("progress", gatewayRecoveryStatus.indexRecoveryProgress());]