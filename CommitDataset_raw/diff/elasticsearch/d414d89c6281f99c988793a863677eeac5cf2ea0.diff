[+++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import static org.elasticsearch.index.query.HasParentQueryParser.createParentQuery;, +        Query parentQuery = createParentQuery(query, parentType, false, parseContext);, +        if (parentQuery == null) {, +            return null;, +            parseContext.addNamedFilter(filterName, new CustomQueryWrappingFilter(parentQuery));, +        return new CustomQueryWrappingFilter(parentQuery);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import static org.elasticsearch.index.query.HasParentQueryParser.createParentQuery;, +        Query parentQuery = createParentQuery(query, parentType, false, parseContext);, +        if (parentQuery == null) {, +            return null;, +            parseContext.addNamedFilter(filterName, new CustomQueryWrappingFilter(parentQuery));, +        return new CustomQueryWrappingFilter(parentQuery);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +        Query query = createParentQuery(innerQuery, parentType, score, parseContext);, +        if (query == null) {, +            return null;, +        }, +        query.setBoost(boost);, +        if (queryName != null) {, +            parseContext.addNamedFilter(queryName, new CustomQueryWrappingFilter(query));, +        }, +        return query;, +    }, +, +    static Query createParentQuery(Query innerQuery, String parentType, boolean score, QueryParseContext parseContext) {, +        ParentChildIndexFieldData parentChildIndexFieldData = null;, +                parentChildIndexFieldData = parseContext.getForField(parentFieldMapper);, +        Filter parentFilter = null;, +            if (documentMapper != null) {, +            }, +                if (documentMapper != null) {, +            }, +        if (parentFilter == null) {, +            return null;, +        }, +, +        Filter childrenFilter = parseContext.cacheFilter(new NotFilter(parentFilter), null);, +            return new ParentQuery(parentChildIndexFieldData, innerQuery, parentType, childrenFilter);, +            return new ParentConstantScoreQuery(parentChildIndexFieldData, innerQuery, parentType, childrenFilter);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import static org.elasticsearch.index.query.HasParentQueryParser.createParentQuery;, +        Query parentQuery = createParentQuery(query, parentType, false, parseContext);, +        if (parentQuery == null) {, +            return null;, +            parseContext.addNamedFilter(filterName, new CustomQueryWrappingFilter(parentQuery));, +        return new CustomQueryWrappingFilter(parentQuery);, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +        Query query = createParentQuery(innerQuery, parentType, score, parseContext);, +        if (query == null) {, +            return null;, +        }, +        query.setBoost(boost);, +        if (queryName != null) {, +            parseContext.addNamedFilter(queryName, new CustomQueryWrappingFilter(query));, +        }, +        return query;, +    }, +, +    static Query createParentQuery(Query innerQuery, String parentType, boolean score, QueryParseContext parseContext) {, +        ParentChildIndexFieldData parentChildIndexFieldData = null;, +                parentChildIndexFieldData = parseContext.getForField(parentFieldMapper);, +        Filter parentFilter = null;, +            if (documentMapper != null) {, +            }, +                if (documentMapper != null) {, +            }, +        if (parentFilter == null) {, +            return null;, +        }, +, +        Filter childrenFilter = parseContext.cacheFilter(new NotFilter(parentFilter), null);, +            return new ParentQuery(parentChildIndexFieldData, innerQuery, parentType, childrenFilter);, +            return new ParentConstantScoreQuery(parentChildIndexFieldData, innerQuery, parentType, childrenFilter);, +++ b/src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java, +    @Test, +    public void testParentFieldToNonExistingType() {, +        assertAcked(prepareCreate("test").addMapping("parent").addMapping("child", "_parent", "type=parent2"));, +        client().prepareIndex("test", "parent", "1").setSource("{}").get();, +        client().prepareIndex("test", "child", "1").setParent("1").setSource("{}").get();, +        refresh();, +, +        try {, +            client().prepareSearch("test"), +                    .setQuery(QueryBuilders.hasChildQuery("child", matchAllQuery())), +                    .get();, +            fail();, +        } catch (SearchPhaseExecutionException e) {, +        }, +, +        SearchResponse response = client().prepareSearch("test"), +                .setQuery(QueryBuilders.hasParentQuery("parent", matchAllQuery())), +                .get();, +        assertHitCount(response, 0);, +, +        try {, +            client().prepareSearch("test"), +                    .setQuery(QueryBuilders.constantScoreQuery(FilterBuilders.hasChildFilter("child", matchAllQuery()))), +                    .get();]