[+++ b/.idea/projectCodeStyle.xml, +        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10" />, +++ b/.idea/projectCodeStyle.xml, +        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/.idea/projectCodeStyle.xml, +        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/.idea/projectCodeStyle.xml, +        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +++ b/.idea/projectCodeStyle.xml, +        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +++ b/.idea/projectCodeStyle.xml, +        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/io/BytesStream.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.io;, +, +public interface BytesStream {, +, +    byte[] unsafeByteArray();, +, +    int size();, +, +    byte[] copiedByteArray();, +}, +++ b/.idea/projectCodeStyle.xml, +        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10" />, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = queryBuilder.buildAsUnsafeBytes();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +import org.elasticsearch.common.io.BytesStream;, +        BytesStream bos = sourceBuilder.buildAsUnsafeBytes(Requests.CONTENT_TYPE);]