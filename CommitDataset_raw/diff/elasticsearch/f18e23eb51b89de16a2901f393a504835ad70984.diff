[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        project.configurations {, +            elasticsearchDistro, +        }, +        configureDistributionDependency(project, config.distribution, project.configurations.elasticsearchDistro, VersionProperties.elasticsearch), +            Configuration configuration = project.configurations.elasticsearchDistro, +                configuration = project.configurations.elasticsearchBwcDistro, +            startTasks.add(configureNode(project, task, cleanup, node, configuration)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        project.configurations {, +            elasticsearchDistro, +        }, +        configureDistributionDependency(project, config.distribution, project.configurations.elasticsearchDistro, VersionProperties.elasticsearch), +            Configuration configuration = project.configurations.elasticsearchDistro, +                configuration = project.configurations.elasticsearchBwcDistro, +            startTasks.add(configureNode(project, task, cleanup, node, configuration)), +++ b/buildSrc/version.properties, +lucene            = 6.1.0, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        project.configurations {, +            elasticsearchDistro, +        }, +        configureDistributionDependency(project, config.distribution, project.configurations.elasticsearchDistro, VersionProperties.elasticsearch), +            Configuration configuration = project.configurations.elasticsearchDistro, +                configuration = project.configurations.elasticsearchBwcDistro, +            startTasks.add(configureNode(project, task, cleanup, node, configuration)), +++ b/buildSrc/version.properties, +lucene            = 6.1.0, +++ b/core/src/main/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilter.java, +import org.apache.lucene.analysis.util.CharArraySet;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        project.configurations {, +            elasticsearchDistro, +        }, +        configureDistributionDependency(project, config.distribution, project.configurations.elasticsearchDistro, VersionProperties.elasticsearch), +            Configuration configuration = project.configurations.elasticsearchDistro, +                configuration = project.configurations.elasticsearchBwcDistro, +            startTasks.add(configureNode(project, task, cleanup, node, configuration)), +++ b/buildSrc/version.properties, +lucene            = 6.1.0, +++ b/core/src/main/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilter.java, +import org.apache.lucene.analysis.util.CharArraySet;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_5_0_0_alpha6 = new Version(V_5_0_0_alpha6_ID, org.apache.lucene.util.Version.LUCENE_6_1_0);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        project.configurations {, +            elasticsearchDistro, +        }, +        configureDistributionDependency(project, config.distribution, project.configurations.elasticsearchDistro, VersionProperties.elasticsearch), +            Configuration configuration = project.configurations.elasticsearchDistro, +                configuration = project.configurations.elasticsearchBwcDistro, +            startTasks.add(configureNode(project, task, cleanup, node, configuration)), +++ b/buildSrc/version.properties, +lucene            = 6.1.0, +++ b/core/src/main/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilter.java, +import org.apache.lucene.analysis.util.CharArraySet;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_5_0_0_alpha6 = new Version(V_5_0_0_alpha6_ID, org.apache.lucene.util.Version.LUCENE_6_1_0);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Sets no fields to be loaded, resulting in only id and type to be returned per field., +     */, +    public SearchRequestBuilder setNoStoredFields() {, +        sourceBuilder().noStoredFields();, +        return this;, +    }, +, +    /**, +     * If none are specified, the source of the document will be return., +     * Sets the stored fields to load and return as part of the search request. If none, +     * are specified, the source of the document will be returned., +     *, +     * Sets the fields to load and return as part of the search request. If none, +     * are specified, the source of the document will be returned., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        project.configurations {, +            elasticsearchDistro, +        }, +        configureDistributionDependency(project, config.distribution, project.configurations.elasticsearchDistro, VersionProperties.elasticsearch), +            Configuration configuration = project.configurations.elasticsearchDistro, +                configuration = project.configurations.elasticsearchBwcDistro, +            startTasks.add(configureNode(project, task, cleanup, node, configuration)), +++ b/buildSrc/version.properties, +lucene            = 6.1.0, +++ b/core/src/main/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilter.java, +import org.apache.lucene.analysis.util.CharArraySet;, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_5_0_0_alpha6 = new Version(V_5_0_0_alpha6_ID, org.apache.lucene.util.Version.LUCENE_6_1_0);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Sets no fields to be loaded, resulting in only id and type to be returned per field., +     */, +    public SearchRequestBuilder setNoStoredFields() {, +        sourceBuilder().noStoredFields();, +        return this;, +    }, +, +    /**, +     * If none are specified, the source of the document will be return., +     * Sets the stored fields to load and return as part of the search request. If none, +     * are specified, the source of the document will be returned., +     *]