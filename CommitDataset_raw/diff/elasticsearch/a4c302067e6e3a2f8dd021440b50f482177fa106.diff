[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.PutRoleMappingRequest;, +import org.elasticsearch.client.security.PutRoleMappingResponse;, +     * Create/Update a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping information, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the put role mapping call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public PutRoleMappingResponse putRoleMapping(final PutRoleMappingRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::putRoleMapping, options,, +                PutRoleMappingResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously create/update a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping information, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putRoleMappingAsync(final PutRoleMappingRequest request, final RequestOptions options,, +            final ActionListener<PutRoleMappingResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::putRoleMapping, options,, +                PutRoleMappingResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.PutRoleMappingRequest;, +import org.elasticsearch.client.security.PutRoleMappingResponse;, +     * Create/Update a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping information, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the put role mapping call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public PutRoleMappingResponse putRoleMapping(final PutRoleMappingRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::putRoleMapping, options,, +                PutRoleMappingResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously create/update a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping information, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void putRoleMappingAsync(final PutRoleMappingRequest request, final RequestOptions options,, +            final ActionListener<PutRoleMappingResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::putRoleMapping, options,, +                PutRoleMappingResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +import org.elasticsearch.client.security.PutRoleMappingRequest;, +    static Request putRoleMapping(final PutRoleMappingRequest putRoleMappingRequest) throws IOException {, +        final String endpoint = new RequestConverters.EndpointBuilder(), +            .addPathPartAsIs("_xpack/security/role_mapping"), +            .addPathPart(putRoleMappingRequest.getName()), +            .build();, +        final Request request = new Request(HttpPut.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(putRoleMappingRequest, REQUEST_BODY_CONTENT_TYPE));, +        final RequestConverters.Params params = new RequestConverters.Params(request);, +        params.withRefreshPolicy(putRoleMappingRequest.getRefreshPolicy());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.PutRoleMappingRequest;, +import org.elasticsearch.client.security.PutRoleMappingResponse;, +     * Create/Update a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping information, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the put role mapping call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public PutRoleMappingResponse putRoleMapping(final PutRoleMappingRequest request, final RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::putRoleMapping, options,, +                PutRoleMappingResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously create/update a role mapping., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role-mapping.html">, +     * the docs</a> for more., +     * @param request the request with the role mapping information, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */]