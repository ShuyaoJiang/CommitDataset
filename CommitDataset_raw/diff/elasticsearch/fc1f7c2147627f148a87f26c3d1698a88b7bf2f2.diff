[+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSource.java, +                                            "Response didn't include Content-Type: " + bodyMessage(response.getEntity()));, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSource.java, +                                            "Response didn't include Content-Type: " + bodyMessage(response.getEntity()));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSourceTests.java, +import static org.hamcrest.Matchers.containsString;, +        sourceWithMockedRemoteCall(false, ContentType.APPLICATION_JSON, "main/0_20_5.json").lookupRemoteVersion(v -> {, +        sourceWithMockedRemoteCall(false, ContentType.APPLICATION_JSON, "main/0_90_13.json").lookupRemoteVersion(v -> {, +        sourceWithMockedRemoteCall(false, ContentType.APPLICATION_JSON, "main/1_7_5.json").lookupRemoteVersion(v -> {, +        sourceWithMockedRemoteCall(false, ContentType.APPLICATION_JSON, "main/2_3_3.json").lookupRemoteVersion(v -> {, +        sourceWithMockedRemoteCall(false, ContentType.APPLICATION_JSON, "main/5_0_0_alpha_3.json").lookupRemoteVersion(v -> {, +        sourceWithMockedRemoteCall(false, ContentType.APPLICATION_JSON, "main/with_unknown_fields.json").lookupRemoteVersion(v -> {, +    public void testNoContentTypeIsError() throws Exception {, +        Exception e = expectThrows(RuntimeException.class, () ->, +                sourceWithMockedRemoteCall(false, null, "main/0_20_5.json").lookupRemoteVersion(null));, +        assertThat(e.getCause().getCause().getMessage(), containsString("Response didn't include Content-Type: body={\n  \"ok\""));, +    }, +, +        return sourceWithMockedRemoteCall(true, ContentType.APPLICATION_JSON, paths);, +    private RemoteScrollableHitSource sourceWithMockedRemoteCall(boolean mockRemoteVersion, ContentType contentType, String... paths), +            throws Exception {, +                    httpResponse.setEntity(new InputStreamEntity(resource.openStream(), contentType));]