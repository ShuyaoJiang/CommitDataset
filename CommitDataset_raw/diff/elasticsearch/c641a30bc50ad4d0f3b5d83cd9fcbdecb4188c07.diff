[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/docs/en/index.asciidoc, +, +:edit_url!:, +:edit_url!:, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/docs/en/index.asciidoc, +, +:edit_url!:, +:edit_url!:, +++ b/docs/en/rest-api/watcher/execute-watch.asciidoc, +==== Security Integration, +, +When {security} is enabled on your Elasticsearch cluster, then watches will be, +executed with the privileges of the user that stored the watches. If your user, +is allowed to read index `a`, but not index `b`, then the exact same set of, +rules will apply during execution of a watch., +, +When using the execute watch API, the authorization data of the user that, +called the API will be used as a base, instead of of the information who stored, +the watch., +, +[float], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/docs/en/index.asciidoc, +, +:edit_url!:, +:edit_url!:, +++ b/docs/en/rest-api/watcher/execute-watch.asciidoc, +==== Security Integration, +, +When {security} is enabled on your Elasticsearch cluster, then watches will be, +executed with the privileges of the user that stored the watches. If your user, +is allowed to read index `a`, but not index `b`, then the exact same set of, +rules will apply during execution of a watch., +, +When using the execute watch API, the authorization data of the user that, +called the API will be used as a base, instead of of the information who stored, +the watch., +, +[float], +++ b/docs/en/rest-api/watcher/put-watch.asciidoc, +==== Security Integration, +, +When {security} is enabled, your watch will only be able to index or search on, +indices for which the user that stored the watch, has privileges. If the user is, +able to read index `a`, but not index `b`, the same will apply, when the watch, +is executed., +, +[float], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/build.gradle, +++ b/docs/en/index.asciidoc, +, +:edit_url!:, +:edit_url!:, +++ b/docs/en/rest-api/watcher/execute-watch.asciidoc, +==== Security Integration, +, +When {security} is enabled on your Elasticsearch cluster, then watches will be, +executed with the privileges of the user that stored the watches. If your user, +is allowed to read index `a`, but not index `b`, then the exact same set of, +rules will apply during execution of a watch., +, +When using the execute watch API, the authorization data of the user that]