[+++ b/CONTRIBUTING.md, +JDK 10 is required to build Elasticsearch. You must have a JDK 10 installation, +your JDK 10 installation. By default, tests use the same runtime as `JAVA_HOME`., +JDK 10 and testing on a JDK 8 runtime; to do this, set `RUNTIME_JAVA_HOME`, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +++ b/CONTRIBUTING.md, +JDK 10 is required to build Elasticsearch. You must have a JDK 10 installation, +your JDK 10 installation. By default, tests use the same runtime as `JAVA_HOME`., +JDK 10 and testing on a JDK 8 runtime; to do this, set `RUNTIME_JAVA_HOME`, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/CONTRIBUTING.md, +JDK 10 is required to build Elasticsearch. You must have a JDK 10 installation, +your JDK 10 installation. By default, tests use the same runtime as `JAVA_HOME`., +JDK 10 and testing on a JDK 8 runtime; to do this, set `RUNTIME_JAVA_HOME`, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            for (int version = 7; version <= Integer.parseInt(minimumCompilerVersion.majorVersion); version++) {, +++ b/CONTRIBUTING.md, +JDK 10 is required to build Elasticsearch. You must have a JDK 10 installation, +your JDK 10 installation. By default, tests use the same runtime as `JAVA_HOME`., +JDK 10 and testing on a JDK 8 runtime; to do this, set `RUNTIME_JAVA_HOME`, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            for (int version = 7; version <= Integer.parseInt(minimumCompilerVersion.majorVersion); version++) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                setup(snippet), +                // Insert a setup defined outside of the docs, +                for (String setupName : test.setup.split(',')) {, +                    String setup = setups[setupName], +                        throw new InvalidUserDataException("Couldn't find setup ", +                                + "for $test"), +            body(test, false), +        }, +, +        private void setup(Snippet setup) {, +            if (lastDocsPath == setup.path) {, +                throw new InvalidUserDataException("$setup: wasn't first"), +            setupCurrent(setup), +            body(setup, true), +++ b/CONTRIBUTING.md, +JDK 10 is required to build Elasticsearch. You must have a JDK 10 installation, +your JDK 10 installation. By default, tests use the same runtime as `JAVA_HOME`., +JDK 10 and testing on a JDK 8 runtime; to do this, set `RUNTIME_JAVA_HOME`, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            for (int version = 7; version <= Integer.parseInt(minimumCompilerVersion.majorVersion); version++) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                setup(snippet), +                // Insert a setup defined outside of the docs, +                for (String setupName : test.setup.split(',')) {, +                    String setup = setups[setupName], +                        throw new InvalidUserDataException("Couldn't find setup ", +                                + "for $test"), +            body(test, false), +        }, +, +        private void setup(Snippet setup) {, +            if (lastDocsPath == setup.path) {, +                throw new InvalidUserDataException("$setup: wasn't first"), +            setupCurrent(setup), +            body(setup, true), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +        } else if (project.inFipsJvm && nodeVersion.onOrAfter("6.3.0") && nodeVersion.before("6.4.0")) {, +            /*, +             * Elasticsearch versions before 6.4.0 cannot be run in a FIPS-140 JVM. If we're running, +             * bwc tests in a FIPS-140 JVM, ensure that the pre v6.4.0 nodes use a Java 10 JVM instead., +             */, +++ b/CONTRIBUTING.md, +JDK 10 is required to build Elasticsearch. You must have a JDK 10 installation, +your JDK 10 installation. By default, tests use the same runtime as `JAVA_HOME`., +JDK 10 and testing on a JDK 8 runtime; to do this, set `RUNTIME_JAVA_HOME`, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            for (int version = 7; version <= Integer.parseInt(minimumCompilerVersion.majorVersion); version++) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                setup(snippet), +                // Insert a setup defined outside of the docs, +                for (String setupName : test.setup.split(',')) {, +                    String setup = setups[setupName]]