[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.DeleteUserRequest;, +import org.elasticsearch.client.security.DeleteUserResponse;, +     * Removes user from the native realm synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">, +     * the docs</a> for more., +     * @param request the request with the user to delete, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the delete user call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteUserResponse deleteUser(DeleteUserRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::deleteUser, options,, +            DeleteUserResponse::fromXContent, singleton(404));, +    }, +, +    /**, +     *  Asynchronously deletes a user in the native realm., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">, +     * the docs</a> for more., +     * @param request the request with the user to delete, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteUserAsync(DeleteUserRequest request, RequestOptions options, ActionListener<DeleteUserResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::deleteUser, options,, +            DeleteUserResponse::fromXContent, listener, singleton(404));, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.DeleteUserRequest;, +import org.elasticsearch.client.security.DeleteUserResponse;, +     * Removes user from the native realm synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">, +     * the docs</a> for more., +     * @param request the request with the user to delete, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the delete user call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteUserResponse deleteUser(DeleteUserRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::deleteUser, options,, +            DeleteUserResponse::fromXContent, singleton(404));, +    }, +, +    /**, +     *  Asynchronously deletes a user in the native realm., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">, +     * the docs</a> for more., +     * @param request the request with the user to delete, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteUserAsync(DeleteUserRequest request, RequestOptions options, ActionListener<DeleteUserResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::deleteUser, options,, +            DeleteUserResponse::fromXContent, listener, singleton(404));, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +import org.elasticsearch.client.security.DeleteUserRequest;, +    static Request deleteUser(DeleteUserRequest deleteUserRequest) {, +        String endpoint = new RequestConverters.EndpointBuilder(), +            .addPathPartAsIs("_xpack","security", "user"), +            .addPathPart(deleteUserRequest.getName()), +            .build();, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +        RequestConverters.Params params = new RequestConverters.Params(request);, +        params.withRefreshPolicy(deleteUserRequest.getRefreshPolicy());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.DeleteUserRequest;, +import org.elasticsearch.client.security.DeleteUserResponse;, +     * Removes user from the native realm synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">, +     * the docs</a> for more., +     * @param request the request with the user to delete, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the delete user call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public DeleteUserResponse deleteUser(DeleteUserRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::deleteUser, options,, +            DeleteUserResponse::fromXContent, singleton(404));, +    }, +, +    /**, +     *  Asynchronously deletes a user in the native realm., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-delete-user.html">, +     * the docs</a> for more., +     * @param request the request with the user to delete, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void deleteUserAsync(DeleteUserRequest request, RequestOptions options, ActionListener<DeleteUserResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::deleteUser, options,, +            DeleteUserResponse::fromXContent, listener, singleton(404));]