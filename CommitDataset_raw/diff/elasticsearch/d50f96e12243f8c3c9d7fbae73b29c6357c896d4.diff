[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +    public AbstractAggregationBuilder(String name) {, +        super(name);, +    protected AbstractAggregationBuilder(StreamInput in) throws IOException {, +        super(in.readString());, +    public final String getWriteableName() {, +        // We always use the type of the aggregation as the writeable name, +        return getType();, +        builder.field(getType());, +        return Objects.hash(factoriesBuilder, metaData, name, doHashCode());, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +    public AbstractAggregationBuilder(String name) {, +        super(name);, +    protected AbstractAggregationBuilder(StreamInput in) throws IOException {, +        super(in.readString());, +    public final String getWriteableName() {, +        // We always use the type of the aggregation as the writeable name, +        return getType();, +        builder.field(getType());, +        return Objects.hash(factoriesBuilder, metaData, name, doHashCode());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    protected AggregationBuilder(String name) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +    public AbstractAggregationBuilder(String name) {, +        super(name);, +    protected AbstractAggregationBuilder(StreamInput in) throws IOException {, +        super(in.readString());, +    public final String getWriteableName() {, +        // We always use the type of the aggregation as the writeable name, +        return getType();, +        builder.field(getType());, +        return Objects.hash(factoriesBuilder, metaData, name, doHashCode());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    protected AggregationBuilder(String name) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +    public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +    public AbstractAggregationBuilder(String name) {, +        super(name);, +    protected AbstractAggregationBuilder(StreamInput in) throws IOException {, +        super(in.readString());, +    public final String getWriteableName() {, +        // We always use the type of the aggregation as the writeable name, +        return getType();, +        builder.field(getType());, +        return Objects.hash(factoriesBuilder, metaData, name, doHashCode());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    protected AggregationBuilder(String name) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +    public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +    public AbstractAggregationBuilder(String name) {, +        super(name);, +    protected AbstractAggregationBuilder(StreamInput in) throws IOException {, +        super(in.readString());, +    public final String getWriteableName() {, +        // We always use the type of the aggregation as the writeable name, +        return getType();, +        builder.field(getType());, +        return Objects.hash(factoriesBuilder, metaData, name, doHashCode());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    protected AggregationBuilder(String name) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +    public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenAggregationBuilder.java, +        super(name, ValuesSourceType.BYTES, ValueType.STRING);, +        super(in, ValuesSourceType.BYTES, ValueType.STRING);, +        return new ChildrenAggregatorFactory(name, config, parentType, childFilter, parentFilter, context, parent,, +    public String getType() {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java, +    public AbstractAggregationBuilder(String name) {, +        super(name);, +    protected AbstractAggregationBuilder(StreamInput in) throws IOException {, +        super(in.readString());, +    public final String getWriteableName() {, +        // We always use the type of the aggregation as the writeable name, +        return getType();, +        builder.field(getType());, +        return Objects.hash(factoriesBuilder, metaData, name, doHashCode());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java, +    protected AggregationBuilder(String name) {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +    public AggregatorFactory(String name, SearchContext context, AggregatorFactory<?> parent,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenAggregationBuilder.java, +        super(name, ValuesSourceType.BYTES, ValueType.STRING);, +        super(in, ValuesSourceType.BYTES, ValueType.STRING);, +        return new ChildrenAggregatorFactory(name, config, parentType, childFilter, parentFilter, context, parent,, +    public String getType() {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenAggregatorFactory.java, +    public ChildrenAggregatorFactory(String name, ValuesSourceConfig<ParentChild> config, String parentType, Query childFilter,]