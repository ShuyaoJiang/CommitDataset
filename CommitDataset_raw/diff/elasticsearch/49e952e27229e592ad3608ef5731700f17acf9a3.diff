[+++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    public static boolean isDataNode(Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    public static boolean isDataNode(Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        if (DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    public static boolean isDataNode(Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        if (DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/repositories/RepositoriesService.java, +        if (DiscoveryNode.isDataNode(settings) || DiscoveryNode.isMasterNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    public static boolean isDataNode(Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        if (DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/repositories/RepositoriesService.java, +        if (DiscoveryNode.isDataNode(settings) || DiscoveryNode.isMasterNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java, +        if (DiscoveryNode.isDataNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    public static boolean isDataNode(Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        if (DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/repositories/RepositoriesService.java, +        if (DiscoveryNode.isDataNode(settings) || DiscoveryNode.isMasterNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java, +        if (DiscoveryNode.isDataNode(settings)) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/ExternalTestCluster.java, +                if (DiscoveryNode.isDataNode(nodeInfo.getSettings())) {, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +    public static boolean isDataNode(Settings settings) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        if (DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +        if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/repositories/RepositoriesService.java, +        if (DiscoveryNode.isDataNode(settings) || DiscoveryNode.isMasterNode(settings)) {, +++ b/core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java, +        if (DiscoveryNode.isDataNode(settings)) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/ExternalTestCluster.java, +                if (DiscoveryNode.isDataNode(nodeInfo.getSettings())) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java, +            return DiscoveryNode.isDataNode(nodeAndClient.node.settings());, +            return DiscoveryNode.isDataNode(nodeAndClient.node.settings()) ||, +                DiscoveryNode.isDataNode(nodeAndClient.node.settings()) == false;]