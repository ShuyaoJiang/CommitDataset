[+++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_true: routing_nodes, +, +---, +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_true: routing_nodes, +, +---, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        ROUTING_NODES("routing_nodes"),, +        // gets printed out even if only routing_table was requested for bw comp reasons, +        if (metrics.contains(Metric.ROUTING_TABLE) || metrics.contains(Metric.ROUTING_NODES)) {, +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_true: routing_nodes, +, +---, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        ROUTING_NODES("routing_nodes"),, +        // gets printed out even if only routing_table was requested for bw comp reasons, +        if (metrics.contains(Metric.ROUTING_TABLE) || metrics.contains(Metric.ROUTING_NODES)) {, +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, + * stopwords. This query basically builds 2 queries off the {@link #add(Term), +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_true: routing_nodes, +, +---, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        ROUTING_NODES("routing_nodes"),, +        // gets printed out even if only routing_table was requested for bw comp reasons, +        if (metrics.contains(Metric.ROUTING_TABLE) || metrics.contains(Metric.ROUTING_NODES)) {, +++ b/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, + * stopwords. This query basically builds 2 queries off the {@link #add(Term), +++ b/src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java, +            //there is no distinction in Java api between routing_table and routing_nodes, it's the same info set over the wire, one single flag to ask for it, +            clusterStateRequest.routingTable(metrics.contains(ClusterState.Metric.ROUTING_TABLE) || metrics.contains(ClusterState.Metric.ROUTING_NODES));, +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +  - is_true: routing_nodes, +, +---, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        ROUTING_NODES("routing_nodes"),, +        // gets printed out even if only routing_table was requested for bw comp reasons, +        if (metrics.contains(Metric.ROUTING_TABLE) || metrics.contains(Metric.ROUTING_NODES)) {]