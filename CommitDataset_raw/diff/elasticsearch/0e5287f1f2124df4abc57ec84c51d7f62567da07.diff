[+++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                    // normalize the data if needed (mainly for binary fields, to convert from base64 strings to bytes), +                                    if (value != null && x != null) {, +                                        value = x.valueForSearch(value);, +                                    }, +                        if (value != null && x != null) {, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                    // normalize the data if needed (mainly for binary fields, to convert from base64 strings to bytes), +                                    if (value != null && x != null) {, +                                        value = x.valueForSearch(value);, +                                    }, +                        if (value != null && x != null) {, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java, +public class BinaryFieldMapper extends AbstractFieldMapper<BytesReference> {, +            FIELD_TYPE.setIndexed(false);, +            FIELD_TYPE.setStored(true);, +    public BytesReference value(Object value) {, +            return CompressorFactory.uncompressIfNeeded(bytes);, +        if (fieldType.stored() != defaultFieldType().stored()) {, +            builder.field("store", fieldType.stored());, +        }, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                    // normalize the data if needed (mainly for binary fields, to convert from base64 strings to bytes), +                                    if (value != null && x != null) {, +                                        value = x.valueForSearch(value);, +                                    }, +                        if (value != null && x != null) {, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java, +public class BinaryFieldMapper extends AbstractFieldMapper<BytesReference> {, +            FIELD_TYPE.setIndexed(false);, +            FIELD_TYPE.setStored(true);, +    public BytesReference value(Object value) {, +            return CompressorFactory.uncompressIfNeeded(bytes);, +        if (fieldType.stored() != defaultFieldType().stored()) {, +            builder.field("store", fieldType.stored());, +        }, +++ b/src/test/java/org/elasticsearch/test/integration/get/GetActionTests.java, +import org.elasticsearch.common.Base64;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.bytes.BytesReference;, +import static org.hamcrest.Matchers.*;, +                        .startObject("binary").field("type", "binary").field("store", "yes").endObject(), +        client.prepareIndex("test", "type1", "1").setSource("str", "test", "int", 42, "date", "2012-11-13T15:26:14.000Z", "binary", Base64.encodeBytes(new byte[]{1, 2, 3})).execute().actionGet();, +        client.prepareIndex("test", "type2", "1").setSource("str", "test", "int", 42, "date", "2012-11-13T15:26:14.000Z", "binary", Base64.encodeBytes(new byte[]{1, 2, 3})).execute().actionGet();, +        GetResponse getResponse = client.prepareGet("test", "type1", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat((Long) getResponse.field("int").getValue(), equalTo(42l));, +        assertThat(getResponse.field("binary").getValue(), instanceOf(String.class)); // its a String..., not binary mapped, +        getResponse = client.prepareGet("test", "type2", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat((BytesReference) getResponse.field("binary").getValue(), equalTo((BytesReference) new BytesArray(new byte[]{1, 2, 3})));, +        getResponse = client.prepareGet("test", "type1", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat(getResponse.field("binary").getValue(), instanceOf(String.class)); // its a String..., not binary mapped, +        getResponse = client.prepareGet("test", "type2", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat((BytesReference) getResponse.field("binary").getValue(), equalTo((BytesReference) new BytesArray(new byte[]{1, 2, 3})));, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                    // normalize the data if needed (mainly for binary fields, to convert from base64 strings to bytes), +                                    if (value != null && x != null) {, +                                        value = x.valueForSearch(value);, +                                    }, +                        if (value != null && x != null) {, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java, +public class BinaryFieldMapper extends AbstractFieldMapper<BytesReference> {, +            FIELD_TYPE.setIndexed(false);, +            FIELD_TYPE.setStored(true);, +    public BytesReference value(Object value) {, +            return CompressorFactory.uncompressIfNeeded(bytes);, +        if (fieldType.stored() != defaultFieldType().stored()) {, +            builder.field("store", fieldType.stored());, +        }, +++ b/src/test/java/org/elasticsearch/test/integration/get/GetActionTests.java, +import org.elasticsearch.common.Base64;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.bytes.BytesReference;, +import static org.hamcrest.Matchers.*;, +                        .startObject("binary").field("type", "binary").field("store", "yes").endObject(), +        client.prepareIndex("test", "type1", "1").setSource("str", "test", "int", 42, "date", "2012-11-13T15:26:14.000Z", "binary", Base64.encodeBytes(new byte[]{1, 2, 3})).execute().actionGet();, +        client.prepareIndex("test", "type2", "1").setSource("str", "test", "int", 42, "date", "2012-11-13T15:26:14.000Z", "binary", Base64.encodeBytes(new byte[]{1, 2, 3})).execute().actionGet();, +        GetResponse getResponse = client.prepareGet("test", "type1", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat((Long) getResponse.field("int").getValue(), equalTo(42l));, +        assertThat(getResponse.field("binary").getValue(), instanceOf(String.class)); // its a String..., not binary mapped, +        getResponse = client.prepareGet("test", "type2", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat((BytesReference) getResponse.field("binary").getValue(), equalTo((BytesReference) new BytesArray(new byte[]{1, 2, 3})));, +        getResponse = client.prepareGet("test", "type1", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat(getResponse.field("binary").getValue(), instanceOf(String.class)); // its a String..., not binary mapped, +        getResponse = client.prepareGet("test", "type2", "1").setFields("str", "int", "date", "binary").execute().actionGet();, +        assertThat((BytesReference) getResponse.field("binary").getValue(), equalTo((BytesReference) new BytesArray(new byte[]{1, 2, 3})));, +++ b/src/test/java/org/elasticsearch/test/integration/search/fields/SearchFieldsTests.java, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.bytes.BytesReference;, +        assertThat(((BytesReference) searchResponse.hits().getAt(0).fields().get("binary_field").value()).toBytesArray(), equalTo((BytesReference) new BytesArray("testing text".getBytes("UTF8"))));]