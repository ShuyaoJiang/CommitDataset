[+++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +            FollowIndexAction.Request request = new FollowIndexAction.Request();, +            request.setLeaderIndex(leaderIndexNameWithClusterAliasPrefix);, +            request.setFollowerIndex(followIndexName);, +            request.setMaxBatchOperationCount(pattern.getMaxBatchOperationCount());, +            request.setMaxConcurrentReadBatches(pattern.getMaxConcurrentReadBatches());, +            request.setMaxOperationSizeInBytes(pattern.getMaxOperationSizeInBytes());, +            request.setMaxConcurrentWriteBatches(pattern.getMaxConcurrentWriteBatches());, +            request.setMaxWriteBufferSize(pattern.getMaxWriteBufferSize());, +            request.setMaxRetryDelay(pattern.getMaxRetryDelay());, +            request.setPollTimeout(pattern.getIdleShardRetryDelay());, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +            FollowIndexAction.Request request = new FollowIndexAction.Request();, +            request.setLeaderIndex(leaderIndexNameWithClusterAliasPrefix);, +            request.setFollowerIndex(followIndexName);, +            request.setMaxBatchOperationCount(pattern.getMaxBatchOperationCount());, +            request.setMaxConcurrentReadBatches(pattern.getMaxConcurrentReadBatches());, +            request.setMaxOperationSizeInBytes(pattern.getMaxOperationSizeInBytes());, +            request.setMaxConcurrentWriteBatches(pattern.getMaxConcurrentWriteBatches());, +            request.setMaxWriteBufferSize(pattern.getMaxWriteBufferSize());, +            request.setMaxRetryDelay(pattern.getMaxRetryDelay());, +            request.setPollTimeout(pattern.getIdleShardRetryDelay());, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardChangesAction.java, +        private TimeValue pollTimeout = TransportFollowIndexAction.DEFAULT_POLL_TIMEOUT;, +        private long maxOperationSizeInBytes = TransportFollowIndexAction.DEFAULT_MAX_BATCH_SIZE_IN_BYTES;, +++ b/x-pack/plugin/ccr/qa/multi-cluster-with-security/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexSecurityIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +        request.setJsonEntity("{\"leader_index\": \"" + leaderIndex + "\", \"poll_timeout\": \"10ms\"}");, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +            FollowIndexAction.Request request = new FollowIndexAction.Request();, +            request.setLeaderIndex(leaderIndexNameWithClusterAliasPrefix);, +            request.setFollowerIndex(followIndexName);, +            request.setMaxBatchOperationCount(pattern.getMaxBatchOperationCount());, +            request.setMaxConcurrentReadBatches(pattern.getMaxConcurrentReadBatches());, +            request.setMaxOperationSizeInBytes(pattern.getMaxOperationSizeInBytes());, +            request.setMaxConcurrentWriteBatches(pattern.getMaxConcurrentWriteBatches());, +            request.setMaxWriteBufferSize(pattern.getMaxWriteBufferSize());, +            request.setMaxRetryDelay(pattern.getMaxRetryDelay());, +            request.setPollTimeout(pattern.getIdleShardRetryDelay());, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardChangesAction.java, +        private TimeValue pollTimeout = TransportFollowIndexAction.DEFAULT_POLL_TIMEOUT;, +        private long maxOperationSizeInBytes = TransportFollowIndexAction.DEFAULT_MAX_BATCH_SIZE_IN_BYTES;, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportFollowIndexAction.java, +import org.elasticsearch.common.unit.TimeValue;, +    static final long DEFAULT_MAX_BATCH_SIZE_IN_BYTES = Long.MAX_VALUE;, +    private static final TimeValue DEFAULT_MAX_RETRY_DELAY = new TimeValue(500);, +    private static final int DEFAULT_MAX_CONCURRENT_WRITE_BATCHES = 1;, +    private static final int DEFAULT_MAX_WRITE_BUFFER_SIZE = 10240;, +    private static final int DEFAULT_MAX_BATCH_OPERATION_COUNT = 1024;, +    private static final int DEFAULT_MAX_CONCURRENT_READ_BATCHES = 1;, +    static final TimeValue DEFAULT_POLL_TIMEOUT = TimeValue.timeValueMinutes(1);, +, +            final ShardFollowTask shardFollowTask =  createShardFollowTask(shardId, clusterNameAlias, request,, +                leaderIndexMetadata, followIndexMetadata, recordedLeaderShardHistoryUUID, filteredHeaders);, +    private static ShardFollowTask createShardFollowTask(, +        int shardId,, +        String clusterAliasName,, +        FollowIndexAction.Request request,, +        IndexMetaData leaderIndexMetadata,, +        IndexMetaData followIndexMetadata,, +        String recordedLeaderShardHistoryUUID,, +        Map<String, String> filteredHeaders, +    ) {, +        int maxBatchOperationCount;, +        if (request.getMaxBatchOperationCount() != null) {, +            maxBatchOperationCount = request.getMaxBatchOperationCount();, +        } else {, +            maxBatchOperationCount = DEFAULT_MAX_BATCH_OPERATION_COUNT;, +        }, +, +        int maxConcurrentReadBatches;, +        if (request.getMaxConcurrentReadBatches() != null){, +            maxConcurrentReadBatches = request.getMaxConcurrentReadBatches();, +        } else {, +            maxConcurrentReadBatches = DEFAULT_MAX_CONCURRENT_READ_BATCHES;, +        }]