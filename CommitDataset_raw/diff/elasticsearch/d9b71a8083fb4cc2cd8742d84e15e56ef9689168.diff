[+++ b/docs/README.md, +The Elasticsearch docs are in AsciiDoc format and can be built using the Elasticsearch documentation build process, +, +See: https://github.com/elasticsearch/docs, +, +++ b/docs/README.md, +The Elasticsearch docs are in AsciiDoc format and can be built using the Elasticsearch documentation build process, +, +See: https://github.com/elasticsearch/docs, +, +++ b/docs/reference/index-modules/merge.asciidoc, +The more segments one has in the Lucene index means slower searches and, +more memory used. Segment merging is used to reduce the number of segments,, +however merges can be expensive to perform, especially on low IO environments., +Merges can be throttled using <<store-throttling,store level throttling>>., +	>= then the `max_merge_at_once` otherwise you'll force too many merges to, +++ b/docs/README.md, +The Elasticsearch docs are in AsciiDoc format and can be built using the Elasticsearch documentation build process, +, +See: https://github.com/elasticsearch/docs, +, +++ b/docs/reference/index-modules/merge.asciidoc, +The more segments one has in the Lucene index means slower searches and, +more memory used. Segment merging is used to reduce the number of segments,, +however merges can be expensive to perform, especially on low IO environments., +Merges can be throttled using <<store-throttling,store level throttling>>., +	>= then the `max_merge_at_once` otherwise you'll force too many merges to, +++ /dev/null, +++ b/docs/README.md, +The Elasticsearch docs are in AsciiDoc format and can be built using the Elasticsearch documentation build process, +, +See: https://github.com/elasticsearch/docs, +, +++ b/docs/reference/index-modules/merge.asciidoc, +The more segments one has in the Lucene index means slower searches and, +more memory used. Segment merging is used to reduce the number of segments,, +however merges can be expensive to perform, especially on low IO environments., +Merges can be throttled using <<store-throttling,store level throttling>>., +	>= then the `max_merge_at_once` otherwise you'll force too many merges to, +++ /dev/null, +++ b/docs/reference/modules/transport.asciidoc, +time setting format). Defaults to `30s`., +++ b/docs/README.md, +The Elasticsearch docs are in AsciiDoc format and can be built using the Elasticsearch documentation build process, +, +See: https://github.com/elasticsearch/docs, +, +++ b/docs/reference/index-modules/merge.asciidoc, +The more segments one has in the Lucene index means slower searches and, +more memory used. Segment merging is used to reduce the number of segments,, +however merges can be expensive to perform, especially on low IO environments., +Merges can be throttled using <<store-throttling,store level throttling>>., +	>= then the `max_merge_at_once` otherwise you'll force too many merges to, +++ /dev/null, +++ b/docs/reference/modules/transport.asciidoc, +time setting format). Defaults to `30s`., +++ b/docs/reference/query-dsl/queries/match-query.asciidoc, +A phrase query matches terms up to a configurable `slop`, +(which defaults to 0) in any order. Transposed terms have a slop of 2., +++ b/docs/README.md, +The Elasticsearch docs are in AsciiDoc format and can be built using the Elasticsearch documentation build process, +, +See: https://github.com/elasticsearch/docs, +, +++ b/docs/reference/index-modules/merge.asciidoc, +The more segments one has in the Lucene index means slower searches and, +more memory used. Segment merging is used to reduce the number of segments,, +however merges can be expensive to perform, especially on low IO environments., +Merges can be throttled using <<store-throttling,store level throttling>>., +	>= then the `max_merge_at_once` otherwise you'll force too many merges to, +++ /dev/null, +++ b/docs/reference/modules/transport.asciidoc, +time setting format). Defaults to `30s`., +++ b/docs/reference/query-dsl/queries/match-query.asciidoc, +A phrase query matches terms up to a configurable `slop`, +(which defaults to 0) in any order. Transposed terms have a slop of 2., +++ b/docs/reference/setup/dir-layout.asciidoc, +, +|*plugins* |Plugin files location. Each plugin will be contained in a subdirectory. |`{path.home}/plugins` |`path.plugins`]