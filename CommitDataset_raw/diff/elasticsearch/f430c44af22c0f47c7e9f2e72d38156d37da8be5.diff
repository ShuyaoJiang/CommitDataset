[+++ b/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +, +import static org.hamcrest.Matchers.allOf;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.greaterThan;, +import static org.hamcrest.Matchers.greaterThanOrEqualTo;, +import static org.hamcrest.Matchers.instanceOf;, +import static org.hamcrest.Matchers.lessThanOrEqualTo;, +import static org.hamcrest.Matchers.notNullValue;, +import static org.hamcrest.Matchers.nullValue;, +        int numShardsRun = 0;, +            assertThat(map.size(), lessThanOrEqualTo(1));, +            if (map.size() == 1) {, +                numShardsRun++;, +        // We don't know how many shards will have documents but we need to make, +        // sure that at least one shard ran the map script, +        assertThat(numShardsRun, greaterThan(0));, +    }, +                // A particular shard may not have any documents stored on it so, +                // we have to assume the lower bound may be 0. The check at the, +                // bottom of the test method will make sure the count is correct, +                assertThat(numberValue.longValue(), allOf(greaterThanOrEqualTo(0l), lessThanOrEqualTo(numDocs)));, +                // A particular shard may not have any documents stored on it so, +                // we have to assume the lower bound may be 0. The check at the, +                // bottom of the test method will make sure the count is correct, +                assertThat(numberValue.longValue(), allOf(greaterThanOrEqualTo(0l), lessThanOrEqualTo(numDocs * 3)));]