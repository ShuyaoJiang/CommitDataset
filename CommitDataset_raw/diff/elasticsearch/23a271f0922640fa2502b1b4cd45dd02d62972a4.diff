[+++ b/modules/transport-netty3/src/test/java/org/elasticsearch/http/netty3/Netty3HttpServerPipeliningTests.java, +import java.util.HashSet;, +import java.util.Set;, +import static org.elasticsearch.test.hamcrest.RegexMatcher.matches;, +import static org.hamcrest.CoreMatchers.equalTo;, +        TransportAddress transportAddress = randomFrom(httpServerTransport.boundAddress().boundAddresses());, +        final int numberOfRequests = randomIntBetween(4, 16);, +        final List<String> requests = new ArrayList<>(numberOfRequests);, +        for (int i = 0; i < numberOfRequests; i++) {, +            if (rarely()) {, +                requests.add("/slow/" + i);, +            } else {, +                requests.add("/" + i);, +            }, +        }, +            assertThat(responseBodies, contains(requests.toArray()));, +        TransportAddress transportAddress = randomFrom(httpServerTransport.boundAddress().boundAddresses());, +        final int numberOfRequests = randomIntBetween(4, 16);, +        final Set<Integer> slowIds = new HashSet<>();, +        final List<String> requests = new ArrayList<>(numberOfRequests);, +        for (int i = 0; i < numberOfRequests; i++) {, +            if (rarely()) {, +                requests.add("/slow/" + i);, +                slowIds.add(i);, +            } else {, +                requests.add("/" + i);, +            }, +        }, +, +            // we cannot be sure about the order of the responses, but the slow ones should come last, +            assertThat(responseBodies, hasSize(numberOfRequests));, +            for (int i = 0; i < numberOfRequests - slowIds.size(); i++) {, +                assertThat(responseBodies.get(i), matches("/\\d+"));, +            }, +, +            final Set<Integer> ids = new HashSet<>();, +            for (int i = 0; i < slowIds.size(); i++) {, +                final String response = responseBodies.get(numberOfRequests - slowIds.size() + i);, +                assertThat(response, matches("/slow/\\d+"));, +                assertTrue(ids.add(Integer.parseInt(response.split("/")[2])));, +            }, +, +            assertThat(ids, equalTo(slowIds));, +            final boolean slow = request.getUri().matches("/slow/\\d+");, +            if (slow) {, +                    Thread.sleep(scaledRandomIntBetween(500, 1000));, +            } else {, +                assert request.getUri().matches("/\\d+");, +++ b/modules/transport-netty3/src/test/java/org/elasticsearch/http/netty3/Netty3HttpServerPipeliningTests.java, +import java.util.HashSet;, +import java.util.Set;, +import static org.elasticsearch.test.hamcrest.RegexMatcher.matches;, +import static org.hamcrest.CoreMatchers.equalTo;, +        TransportAddress transportAddress = randomFrom(httpServerTransport.boundAddress().boundAddresses());, +        final int numberOfRequests = randomIntBetween(4, 16);, +        final List<String> requests = new ArrayList<>(numberOfRequests);, +        for (int i = 0; i < numberOfRequests; i++) {, +            if (rarely()) {, +                requests.add("/slow/" + i);, +            } else {, +                requests.add("/" + i);, +            }, +        }, +            assertThat(responseBodies, contains(requests.toArray()));, +        TransportAddress transportAddress = randomFrom(httpServerTransport.boundAddress().boundAddresses());, +        final int numberOfRequests = randomIntBetween(4, 16);, +        final Set<Integer> slowIds = new HashSet<>();, +        final List<String> requests = new ArrayList<>(numberOfRequests);, +        for (int i = 0; i < numberOfRequests; i++) {, +            if (rarely()) {, +                requests.add("/slow/" + i);, +                slowIds.add(i);, +            } else {, +                requests.add("/" + i);, +            }, +        }, +, +            // we cannot be sure about the order of the responses, but the slow ones should come last, +            assertThat(responseBodies, hasSize(numberOfRequests));, +            for (int i = 0; i < numberOfRequests - slowIds.size(); i++) {, +                assertThat(responseBodies.get(i), matches("/\\d+"));, +            }, +, +            final Set<Integer> ids = new HashSet<>();, +            for (int i = 0; i < slowIds.size(); i++) {, +                final String response = responseBodies.get(numberOfRequests - slowIds.size() + i);, +                assertThat(response, matches("/slow/\\d+"));, +                assertTrue(ids.add(Integer.parseInt(response.split("/")[2])));, +            }, +, +            assertThat(ids, equalTo(slowIds));, +            final boolean slow = request.getUri().matches("/slow/\\d+");, +            if (slow) {, +                    Thread.sleep(scaledRandomIntBetween(500, 1000));, +            } else {, +                assert request.getUri().matches("/\\d+");, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpServerPipeliningTests.java, +            final TransportAddress transportAddress = randomFrom(httpServerTransport.boundAddress().boundAddresses());, +            final TransportAddress transportAddress = randomFrom(httpServerTransport.boundAddress().boundAddresses());, +                // we can not be sure about the order of the responses, but the slow ones should come last]