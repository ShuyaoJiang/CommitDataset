[+++ b/src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java, +    public void testMultiField_includeInAllSetToFalse() throws IOException {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/all/multifield-mapping_include_in_all_set_to_false.json");, +, +    @Test, +    public void testMultiField_defaults() throws IOException {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/all/multifield-mapping_default.json");, +        DocumentMapper docMapper = MapperTestUtils.newParser().parse(mapping);, +, +        XContentBuilder builder = XContentFactory.jsonBuilder();, +        builder.startObject(), +                .field("_id", "1"), +                .field("foo"), +                .startObject(), +                .field("bar", "Elasticsearch rules!"), +                .endObject(), +                .endObject();, +, +        Document doc = docMapper.parse(builder.bytes()).rootDoc();, +        AllField field = (AllField) doc.getField("_all");, +        AllEntries allEntries = ((AllTokenStream) field.tokenStream(docMapper.mappers().indexAnalyzer())).allEntries();, +        assertThat(allEntries.fields(), hasSize(1));, +        assertThat(allEntries.fields(), hasItem("foo.bar"));, +    }, +++ b/src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java, +    public void testMultiField_includeInAllSetToFalse() throws IOException {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/all/multifield-mapping_include_in_all_set_to_false.json");, +, +    @Test, +    public void testMultiField_defaults() throws IOException {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/all/multifield-mapping_default.json");, +        DocumentMapper docMapper = MapperTestUtils.newParser().parse(mapping);, +, +        XContentBuilder builder = XContentFactory.jsonBuilder();, +        builder.startObject(), +                .field("_id", "1"), +                .field("foo"), +                .startObject(), +                .field("bar", "Elasticsearch rules!"), +                .endObject(), +                .endObject();, +, +        Document doc = docMapper.parse(builder.bytes()).rootDoc();, +        AllField field = (AllField) doc.getField("_all");, +        AllEntries allEntries = ((AllTokenStream) field.tokenStream(docMapper.mappers().indexAnalyzer())).allEntries();, +        assertThat(allEntries.fields(), hasSize(1));, +        assertThat(allEntries.fields(), hasItem("foo.bar"));, +    }, +++ /dev/null, +++ b/src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java, +    public void testMultiField_includeInAllSetToFalse() throws IOException {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/all/multifield-mapping_include_in_all_set_to_false.json");, +, +    @Test, +    public void testMultiField_defaults() throws IOException {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/all/multifield-mapping_default.json");, +        DocumentMapper docMapper = MapperTestUtils.newParser().parse(mapping);, +, +        XContentBuilder builder = XContentFactory.jsonBuilder();, +        builder.startObject(), +                .field("_id", "1"), +                .field("foo"), +                .startObject(), +                .field("bar", "Elasticsearch rules!"), +                .endObject(), +                .endObject();, +, +        Document doc = docMapper.parse(builder.bytes()).rootDoc();, +        AllField field = (AllField) doc.getField("_all");, +        AllEntries allEntries = ((AllTokenStream) field.tokenStream(docMapper.mappers().indexAnalyzer())).allEntries();, +        assertThat(allEntries.fields(), hasSize(1));, +        assertThat(allEntries.fields(), hasItem("foo.bar"));, +    }, +++ /dev/null, +++ b/src/test/java/org/elasticsearch/index/mapper/all/multifield-mapping_default.json, +{, +    "test": {, +        "properties": {, +            "foo": {, +                "type": "nested",, +                "properties": {, +                    "bar": {, +                        "type": "string",, +                        "index": "not_analyzed",, +                        "fields": {, +                            "lower": {, +                                "analyzer": "standard",, +                                "type": "string", +                            }, +                        }, +                    }, +                }, +            }, +        }, +    }, +}, +++ b/src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java, +    public void testMultiField_includeInAllSetToFalse() throws IOException {, +        String mapping = copyToStringFromClasspath("/org/elasticsearch/index/mapper/all/multifield-mapping_include_in_all_set_to_false.json");, +]