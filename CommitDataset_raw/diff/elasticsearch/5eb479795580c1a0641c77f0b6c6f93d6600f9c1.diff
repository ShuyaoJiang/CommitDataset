[+++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +, +        if (!blobExists(blobName)) {, +            throw new IOException("Blob [" + blobName + "] does not exist");, +        }, +, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +, +        if (!blobExists(blobName)) {, +            throw new IOException("Blob [" + blobName + "] does not exist");, +        }, +, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null || keyPath.isEmpty()) {, +            if (prefix == null || startsWithIgnoreCase(checkBlob, prefix)) {, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +, +        if (!blobExists(blobName)) {, +            throw new IOException("Blob [" + blobName + "] does not exist");, +        }, +, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null || keyPath.isEmpty()) {, +            if (prefix == null || startsWithIgnoreCase(checkBlob, prefix)) {, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/repositories/azure/AzureBlobStoreContainerTests.java, +import org.elasticsearch.cloud.azure.storage.AzureStorageServiceMock;, +            RepositorySettings repositorySettings = new RepositorySettings(, +                    Settings.EMPTY, Settings.EMPTY);, +            AzureStorageServiceMock client = new AzureStorageServiceMock(Settings.EMPTY);, +            return new AzureBlobStore(repositoryName, Settings.EMPTY, repositorySettings, client);]