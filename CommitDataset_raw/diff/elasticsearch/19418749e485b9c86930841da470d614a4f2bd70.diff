[+++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.IndicesRequest;, +import org.elasticsearch.action.support.IndicesOptions;, + * A request to get an indexed script (its source) based on its language (optional) and id., + * The operation requires the {@link #scriptLang(String)} and {@link #id(String)} to be set., +public class GetIndexedScriptRequest extends ActionRequest<GetIndexedScriptRequest> implements IndicesRequest {, +, +     * @param scriptLang  The language of the script, +     * @param id    The id of the script, +    public GetIndexedScriptRequest(String scriptLang, String id) {, +        ActionRequestValidationException validationException = null;, +, +    @Override, +    public IndicesOptions indicesOptions() {, +        return IndicesOptions.strictSingleIndexNoExpandForbidClosed();, +    }, +, +     * Sets the language of the script to fetch., +     * Sets the id of the script to fetch., +     * Sets the preference to execute the get. Defaults to randomize across shards. Can be set to, +        if (in.getVersion().before(Version.V_1_4_0)) {, +            //the index was previously serialized although not needed, +            in.readString();, +        }, +        if (out.getVersion().before(Version.V_1_4_0)) {, +            //the index was previously serialized although not needed, +            out.writeString(ScriptService.SCRIPT_INDEX);, +        }, +        } else if (!realtime) {, +        return "[" + ScriptService.SCRIPT_INDEX + "][" + scriptLang + "][" + id + "]: routing [" + routing + "]";, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.IndicesRequest;, +import org.elasticsearch.action.support.IndicesOptions;, + * A request to get an indexed script (its source) based on its language (optional) and id., + * The operation requires the {@link #scriptLang(String)} and {@link #id(String)} to be set., +public class GetIndexedScriptRequest extends ActionRequest<GetIndexedScriptRequest> implements IndicesRequest {, +, +     * @param scriptLang  The language of the script, +     * @param id    The id of the script, +    public GetIndexedScriptRequest(String scriptLang, String id) {, +        ActionRequestValidationException validationException = null;, +, +    @Override, +    public IndicesOptions indicesOptions() {, +        return IndicesOptions.strictSingleIndexNoExpandForbidClosed();, +    }, +, +     * Sets the language of the script to fetch., +     * Sets the id of the script to fetch., +     * Sets the preference to execute the get. Defaults to randomize across shards. Can be set to, +        if (in.getVersion().before(Version.V_1_4_0)) {, +            //the index was previously serialized although not needed, +            in.readString();, +        }, +        if (out.getVersion().before(Version.V_1_4_0)) {, +            //the index was previously serialized although not needed, +            out.writeString(ScriptService.SCRIPT_INDEX);, +        }, +        } else if (!realtime) {, +        return "[" + ScriptService.SCRIPT_INDEX + "][" + scriptLang + "][" + id + "]: routing [" + routing + "]";, +++ b/src/main/java/org/elasticsearch/rest/action/script/RestGetIndexedScriptAction.java, +    public RestGetIndexedScriptAction(Settings settings, Client client, RestController controller) {, +        final GetIndexedScriptRequest getRequest = new GetIndexedScriptRequest(request.param("lang"), request.param("id"));, +++ b/src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java, +import org.elasticsearch.Version;, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.IndicesRequest;, +import org.elasticsearch.action.support.IndicesOptions;, + * A request to get an indexed script (its source) based on its language (optional) and id., + * The operation requires the {@link #scriptLang(String)} and {@link #id(String)} to be set., +public class GetIndexedScriptRequest extends ActionRequest<GetIndexedScriptRequest> implements IndicesRequest {, +, +     * @param scriptLang  The language of the script, +     * @param id    The id of the script, +    public GetIndexedScriptRequest(String scriptLang, String id) {, +        ActionRequestValidationException validationException = null;, +, +    @Override, +    public IndicesOptions indicesOptions() {, +        return IndicesOptions.strictSingleIndexNoExpandForbidClosed();, +    }, +, +     * Sets the language of the script to fetch., +     * Sets the id of the script to fetch., +     * Sets the preference to execute the get. Defaults to randomize across shards. Can be set to, +        if (in.getVersion().before(Version.V_1_4_0)) {, +            //the index was previously serialized although not needed, +            in.readString();, +        }, +        if (out.getVersion().before(Version.V_1_4_0)) {, +            //the index was previously serialized although not needed, +            out.writeString(ScriptService.SCRIPT_INDEX);, +        }, +        } else if (!realtime) {, +        return "[" + ScriptService.SCRIPT_INDEX + "][" + scriptLang + "][" + id + "]: routing [" + routing + "]";, +++ b/src/main/java/org/elasticsearch/rest/action/script/RestGetIndexedScriptAction.java]