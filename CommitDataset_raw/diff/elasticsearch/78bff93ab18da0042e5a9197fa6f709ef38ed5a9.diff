[+++ b/core/src/main/java/org/elasticsearch/common/Preconditions.java, +++ b/core/src/main/java/org/elasticsearch/common/Preconditions.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +        if (this.binder != null) {, +            throw new IllegalStateException("Re-entry is not allowed.");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Preconditions.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +        if (this.binder != null) {, +            throw new IllegalStateException("Re-entry is not allowed.");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/inject/ConfigurationException.java, +import java.util.Locale;, +        if (this.partialValue != null) {, +            String message = String.format(Locale.ROOT, "Can't clobber existing partial value %s with %s", this.partialValue, partialValue);, +            throw new IllegalStateException(message);, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Preconditions.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +        if (this.binder != null) {, +            throw new IllegalStateException("Re-entry is not allowed.");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/inject/ConfigurationException.java, +import java.util.Locale;, +        if (this.partialValue != null) {, +            String message = String.format(Locale.ROOT, "Can't clobber existing partial value %s with %s", this.partialValue, partialValue);, +            throw new IllegalStateException(message);, +        }, +++ b/core/src/main/java/org/elasticsearch/common/inject/ConstructorBindingImpl.java, +        if (factory.constructorInjector == null) {, +            throw new IllegalStateException("not initialized");, +        }, +        if (factory.constructorInjector == null) {, +            throw new IllegalStateException("Binding is not ready");, +        }, +        if (factory.constructorInjector == null) {, +            throw new IllegalStateException("Binding is not ready");, +        }, +            if (constructorInjector == null) {, +                throw new IllegalStateException("Constructor not ready");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/Preconditions.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +        if (this.binder != null) {, +            throw new IllegalStateException("Re-entry is not allowed.");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/inject/ConfigurationException.java, +import java.util.Locale;, +        if (this.partialValue != null) {, +            String message = String.format(Locale.ROOT, "Can't clobber existing partial value %s with %s", this.partialValue, partialValue);, +            throw new IllegalStateException(message);, +        }, +++ b/core/src/main/java/org/elasticsearch/common/inject/ConstructorBindingImpl.java, +        if (factory.constructorInjector == null) {, +            throw new IllegalStateException("not initialized");, +        }, +        if (factory.constructorInjector == null) {, +            throw new IllegalStateException("Binding is not ready");, +        }, +        if (factory.constructorInjector == null) {, +            throw new IllegalStateException("Binding is not ready");, +        }, +            if (constructorInjector == null) {, +                throw new IllegalStateException("Constructor not ready");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/inject/EncounterImpl.java, +        if (!valid) {, +            throw new IllegalStateException("Encounters may not be used after hear() returns.");, +        }, +        if (!valid) {, +            throw new IllegalStateException("Encounters may not be used after hear() returns.");, +        }, +        if (!valid) {, +            throw new IllegalStateException("Encounters may not be used after hear() returns.");, +        }, +        if (!valid) {, +            throw new IllegalStateException("Encounters may not be used after hear() returns.");, +        }, +        if (!valid) {, +            throw new IllegalStateException("Encounters may not be used after hear() returns.");, +        }, +        if (!valid) {, +            throw new IllegalStateException("Encounters may not be used after hear() returns.");, +        }, +        if (!valid) {, +            throw new IllegalStateException("Encounters may not be used after hear() returns.");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/Preconditions.java, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +        if (this.binder != null) {, +            throw new IllegalStateException("Re-entry is not allowed.");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/inject/ConfigurationException.java, +import java.util.Locale;, +        if (this.partialValue != null) {, +            String message = String.format(Locale.ROOT, "Can't clobber existing partial value %s with %s", this.partialValue, partialValue);, +            throw new IllegalStateException(message);, +        }, +++ b/core/src/main/java/org/elasticsearch/common/inject/ConstructorBindingImpl.java, +        if (factory.constructorInjector == null) {]