[+++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +                String endname = repo;, +                    endname = repo.substring("elasticsearch-".length());, +                } else if (name.startsWith("es-")) {, +                    endname = repo.substring("es-".length());, +                }, +                return new PluginHandle(endname, Version.CURRENT.number(), null, repo);, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginManager.java, +                String endname = repo;, +                    endname = repo.substring("elasticsearch-".length());, +                } else if (name.startsWith("es-")) {, +                    endname = repo.substring("es-".length());, +                }, +                return new PluginHandle(endname, Version.CURRENT.number(), null, repo);, +++ b/core/src/test/java/org/elasticsearch/plugins/PluginManagerUnitTests.java, +, +    @Test, +    public void testTrimmingElasticsearchFromPluginName() throws IOException {, +        String randomName = randomAsciiOfLength(10);, +        String pluginName = randomFrom("elasticsearch-", "es-") + randomName;, +        PluginManager.PluginHandle handle = PluginManager.PluginHandle.parse(pluginName);, +        assertThat(handle.name, is(randomName));, +        assertThat(handle.urls(), hasSize(1));, +        URL expected = new URL("http", "download.elastic.co", "/org.elasticsearch.plugins/" + pluginName + "/" +, +                pluginName + "-" + Version.CURRENT.number() + ".zip");, +        assertThat(handle.urls().get(0), is(expected));, +    }]