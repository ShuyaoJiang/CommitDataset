[+++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_1_7_0_ID = 1070099;, +    public static final Version V_1_7_0 = new Version(V_1_7_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +            case V_1_7_0_ID:, +                return V_1_7_0;, +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_1_7_0_ID = 1070099;, +    public static final Version V_1_7_0 = new Version(V_1_7_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +            case V_1_7_0_ID:, +                return V_1_7_0;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_1_7_0_ID = 1070099;, +    public static final Version V_1_7_0 = new Version(V_1_7_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +            case V_1_7_0_ID:, +                return V_1_7_0;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_1_7_0_ID = 1070099;, +    public static final Version V_1_7_0 = new Version(V_1_7_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +            case V_1_7_0_ID:, +                return V_1_7_0;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +        ShardSuggestMetric suggestMetric = indexShard.getSuggestMetric();, +        suggestMetric.preSuggest();, +            suggestMetric.postSuggest(System.nanoTime() - startTime);, +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_1_7_0_ID = 1070099;, +    public static final Version V_1_7_0 = new Version(V_1_7_0_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +            case V_1_7_0_ID:, +                return V_1_7_0;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +import org.elasticsearch.index.suggest.stats.ShardSuggestMetric;, +        ShardSuggestMetric suggestMetric = indexShard.getSuggestMetric();, +        suggestMetric.preSuggest();, +            suggestMetric.postSuggest(System.nanoTime() - startTime);, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java, +++ b/CONTRIBUTING.md, +mvn clean test -Dtests.slow=true, +++ b/README.textile, +The distribution for each project will be created under the @target/releases@ directory in that project., +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java, +import org.elasticsearch.index.query.ExistsQueryParser;, +        return new ConstantScoreQuery(ExistsQueryParser.newFilter(parseContext, queryText, null));, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final int V_1_7_0_ID = 1070099;]