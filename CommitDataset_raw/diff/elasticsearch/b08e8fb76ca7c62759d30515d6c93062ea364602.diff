[+++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import java.util.List;, +, +    Filter termsFilter(List<Object> values, @Nullable QueryParseContext context);, +, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import java.util.List;, +, +    Filter termsFilter(List<Object> values, @Nullable QueryParseContext context);, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.elasticsearch.common.lucene.search.XTermsFilter;, +import java.util.List;, +    public Filter termsFilter(List<Object> values, @Nullable QueryParseContext context) {, +        Term[] terms = new Term[values.size()];, +        for (int i = 0; i < terms.length; i++) {, +            terms[i] = names().createIndexNameTerm(indexedValueForSearch(values.get(i)));, +        }, +        return new XTermsFilter(terms);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import java.util.List;, +, +    Filter termsFilter(List<Object> values, @Nullable QueryParseContext context);, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.elasticsearch.common.lucene.search.XTermsFilter;, +import java.util.List;, +    public Filter termsFilter(List<Object> values, @Nullable QueryParseContext context) {, +        Term[] terms = new Term[values.size()];, +        for (int i = 0; i < terms.length; i++) {, +            terms[i] = names().createIndexNameTerm(indexedValueForSearch(values.get(i)));, +        }, +        return new XTermsFilter(terms);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +import org.elasticsearch.common.lucene.BytesRefs;, +import java.util.ArrayList;, +import java.util.List;, +        return new UidFilter(context.queryTypes(), ImmutableList.of(BytesRefs.toBytesRef(value)));, +, +    @Override, +    public Filter termsFilter(List<Object> values, @Nullable QueryParseContext context) {, +        if (fieldType.indexed() || context == null) {, +            return super.termsFilter(values, context);, +        }, +        List<BytesRef> bytesRefs = new ArrayList<BytesRef>(values.size());, +        for (Object value : values) {, +            bytesRefs.add(BytesRefs.toBytesRef(value));, +        }, +        return new UidFilter(context.queryTypes(), bytesRefs);, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import java.util.List;, +, +    Filter termsFilter(List<Object> values, @Nullable QueryParseContext context);, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.elasticsearch.common.lucene.search.XTermsFilter;, +import java.util.List;, +    public Filter termsFilter(List<Object> values, @Nullable QueryParseContext context) {, +        Term[] terms = new Term[values.size()];, +        for (int i = 0; i < terms.length; i++) {, +            terms[i] = names().createIndexNameTerm(indexedValueForSearch(values.get(i)));, +        }, +        return new XTermsFilter(terms);, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java, +import org.elasticsearch.common.lucene.BytesRefs;, +import java.util.ArrayList;, +import java.util.List;, +        return new UidFilter(context.queryTypes(), ImmutableList.of(BytesRefs.toBytesRef(value)));, +, +    @Override, +    public Filter termsFilter(List<Object> values, @Nullable QueryParseContext context) {, +        if (fieldType.indexed() || context == null) {, +            return super.termsFilter(values, context);, +        }, +        List<BytesRef> bytesRefs = new ArrayList<BytesRef>(values.size());, +        for (Object value : values) {, +            bytesRefs.add(BytesRefs.toBytesRef(value));, +        }, +        return new UidFilter(context.queryTypes(), bytesRefs);, +++ b/src/main/java/org/elasticsearch/index/query/TermsFilterParser.java, +                    filter = fieldMapper.termsFilter(terms, parseContext);, +                    Term[] filterTerms = new Term[terms.size()];, +                }, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import java.util.List;, +, +    Filter termsFilter(List<Object> values, @Nullable QueryParseContext context);, +, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +import org.elasticsearch.common.lucene.search.XTermsFilter;, +import java.util.List;]