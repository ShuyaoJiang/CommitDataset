[+++ b/src/test/java/org/elasticsearch/junit/annotations/Network.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements. See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations under, + * the License., + */, +, +package org.elasticsearch.junit.annotations;, +, +import com.carrotsearch.randomizedtesting.annotations.TestGroup;, +, +import java.lang.annotation.*;, +, +/**, + * Annotation used to set if internet network connectivity is required to run the test., + * By default, tests annotated with @Network won't be executed., + * Set -Dtests.network=true when running test to launch network tests, + */, +@Retention(RetentionPolicy.RUNTIME), +@Inherited, +@TestGroup(enabled = false, sysProperty = "tests.network"), +public @interface Network {, +}, +++ b/src/test/java/org/elasticsearch/junit/annotations/Network.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements. See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations under, + * the License., + */, +, +package org.elasticsearch.junit.annotations;, +, +import com.carrotsearch.randomizedtesting.annotations.TestGroup;, +, +import java.lang.annotation.*;, +, +/**, + * Annotation used to set if internet network connectivity is required to run the test., + * By default, tests annotated with @Network won't be executed., + * Set -Dtests.network=true when running test to launch network tests, + */, +@Retention(RetentionPolicy.RUNTIME), +@Inherited, +@TestGroup(enabled = false, sysProperty = "tests.network"), +public @interface Network {, +}, +++ b/src/test/java/org/elasticsearch/plugin/PluginManagerTests.java, +import org.elasticsearch.junit.annotations.Network;, +    @After, +    public void afterTest() {, +        deletePluginsFolder();, +    }, +    @Before, +    public void beforeTest() {, +        deletePluginsFolder();, +    }, +    @Test, +    public void testListInstalledEmpty() throws IOException {, +        File[] plugins = pluginManager(null).getListInstalledPlugins();, +        assertThat(plugins, notNullValue());, +        assertThat(plugins.length, is(0));, +    @Test(expected = IOException.class), +    public void testInstallPluginNull() throws IOException {, +        pluginManager(null).downloadAndExtract("");, +, +    @Test, +    public void testInstallPlugin() throws IOException {, +        PluginManager pluginManager = pluginManager("file://".concat(PluginManagerTests.class.getResource("plugin_with_classfile.zip").getFile()));, +, +        pluginManager.downloadAndExtract("plugin");, +        File[] plugins = pluginManager.getListInstalledPlugins();, +        assertThat(plugins, notNullValue());, +        assertThat(plugins.length, is(1));, +    @Test, +    public void testInstallSitePlugin() throws IOException {, +        PluginManager pluginManager = pluginManager("file://".concat(PluginManagerTests.class.getResource("plugin_without_folders.zip").getFile()));]