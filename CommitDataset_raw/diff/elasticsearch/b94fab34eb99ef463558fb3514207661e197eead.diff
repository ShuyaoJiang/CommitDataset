[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/stress/SingleThreadBulkStress.java, +                .startObject("_type").field("index", "no").endObject(), +                .startObject("_id").field("index", "no").endObject(), +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/stress/SingleThreadBulkStress.java, +                .startObject("_type").field("index", "no").endObject(), +                .startObject("_id").field("index", "no").endObject(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/IdFieldMapper.java, +            return new IdFieldMapper(name, indexName, index, store, termVector, boost, omitNorms, omitTermFreqAndPositions);, +        this(name, indexName, Defaults.INDEX, Defaults.STORE, Defaults.TERM_VECTOR, Defaults.BOOST,, +    protected IdFieldMapper(String name, String indexName, Field.Index index, Field.Store store, Field.TermVector termVector,, +        super(new Names(name, indexName, indexName, name), index, store, termVector, boost, omitNorms, omitTermFreqAndPositions,, +            if (index == Field.Index.NO && store == Field.Store.NO) {, +                return null;, +            }, +            if (index == Field.Index.NO && store == Field.Store.NO) {, +                return null;, +            }, +        if (store == Defaults.STORE && index == Defaults.INDEX) {, +        if (index != Defaults.INDEX) {, +            builder.field("index", index.name().toLowerCase());, +        }, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/stress/SingleThreadBulkStress.java, +                .startObject("_type").field("index", "no").endObject(), +                .startObject("_id").field("index", "no").endObject(), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/IdFieldMapper.java, +            return new IdFieldMapper(name, indexName, index, store, termVector, boost, omitNorms, omitTermFreqAndPositions);, +        this(name, indexName, Defaults.INDEX, Defaults.STORE, Defaults.TERM_VECTOR, Defaults.BOOST,, +    protected IdFieldMapper(String name, String indexName, Field.Index index, Field.Store store, Field.TermVector termVector,, +        super(new Names(name, indexName, indexName, name), index, store, termVector, boost, omitNorms, omitTermFreqAndPositions,, +            if (index == Field.Index.NO && store == Field.Store.NO) {, +                return null;, +            }, +            if (index == Field.Index.NO && store == Field.Store.NO) {, +                return null;, +            }, +        if (store == Defaults.STORE && index == Defaults.INDEX) {, +        if (index != Defaults.INDEX) {, +            builder.field("index", index.name().toLowerCase());, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/TypeFieldMapper.java, +            return new TypeFieldMapper(name, indexName, index, store, termVector, boost, omitNorms, omitTermFreqAndPositions);, +        this(name, indexName, Defaults.INDEX, Defaults.STORE, Defaults.TERM_VECTOR, Defaults.BOOST,, +    public TypeFieldMapper(String name, String indexName, Field.Index index, Field.Store store, Field.TermVector termVector,, +        super(new Names(name, indexName, indexName, name), index, store, termVector, boost, omitNorms, omitTermFreqAndPositions,, +        if (index == Field.Index.NO && store == Field.Store.NO) {, +            return null;, +        }, +        if (store == Defaults.STORE && index == Defaults.INDEX) {, +        if (index != Defaults.INDEX) {, +            builder.field("index", index.name().toLowerCase());, +        }]