[+++ b/core/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    private DummyTransportAddress() {, +    public DummyTransportAddress readFrom(StreamInput in) throws IOException {, +        return INSTANCE;, +++ b/core/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    private DummyTransportAddress() {, +    public DummyTransportAddress readFrom(StreamInput in) throws IOException {, +        return INSTANCE;, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    public static final InetSocketTransportAddress PROTO = new InetSocketTransportAddress();, +    private final InetSocketAddress address;, +    public InetSocketTransportAddress(StreamInput in) throws IOException {, +        if (in.readByte() == 0) {, +            int len = in.readByte();, +            byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +            in.readFully(a);, +            InetAddress inetAddress;, +            if (len == 16) {, +                int scope_id = in.readInt();, +                inetAddress = Inet6Address.getByAddress(null, a, scope_id);, +            } else {, +                inetAddress = InetAddress.getByAddress(a);, +            }, +            int port = in.readInt();, +            this.address = new InetSocketAddress(inetAddress, port);, +        } else {, +            this.address = new InetSocketAddress(in.readString(), in.readInt());, +        }, +    }, +, +    private InetSocketTransportAddress() {, +        address = null;, +    public TransportAddress readFrom(StreamInput in) throws IOException {, +        return new InetSocketTransportAddress(in);, +++ b/core/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    private DummyTransportAddress() {, +    public DummyTransportAddress readFrom(StreamInput in) throws IOException {, +        return INSTANCE;, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    public static final InetSocketTransportAddress PROTO = new InetSocketTransportAddress();, +    private final InetSocketAddress address;, +    public InetSocketTransportAddress(StreamInput in) throws IOException {, +        if (in.readByte() == 0) {, +            int len = in.readByte();, +            byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +            in.readFully(a);, +            InetAddress inetAddress;, +            if (len == 16) {, +                int scope_id = in.readInt();, +                inetAddress = Inet6Address.getByAddress(null, a, scope_id);, +            } else {, +                inetAddress = InetAddress.getByAddress(a);, +            }, +            int port = in.readInt();, +            this.address = new InetSocketAddress(inetAddress, port);, +        } else {, +            this.address = new InetSocketAddress(in.readString(), in.readInt());, +        }, +    }, +, +    private InetSocketTransportAddress() {, +        address = null;, +    public TransportAddress readFrom(StreamInput in) throws IOException {, +        return new InetSocketTransportAddress(in);, +++ b/core/src/main/java/org/elasticsearch/common/transport/LocalTransportAddress.java, +import org.elasticsearch.common.io.stream.Writeable;, +import org.elasticsearch.transport.local.LocalTransport;, +    public static final LocalTransportAddress PROTO = new LocalTransportAddress("_na");, +, +    public LocalTransportAddress(StreamInput in) throws IOException {, +        id = in.readString();, +    public LocalTransportAddress readFrom(StreamInput in) throws IOException {, +        return new LocalTransportAddress(in);, +++ b/core/src/main/java/org/elasticsearch/common/transport/DummyTransportAddress.java, +    private DummyTransportAddress() {, +    public DummyTransportAddress readFrom(StreamInput in) throws IOException {, +        return INSTANCE;, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    public static final InetSocketTransportAddress PROTO = new InetSocketTransportAddress();, +    private final InetSocketAddress address;, +    public InetSocketTransportAddress(StreamInput in) throws IOException {, +        if (in.readByte() == 0) {, +            int len = in.readByte();, +            byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +            in.readFully(a);, +            InetAddress inetAddress;, +            if (len == 16) {, +                int scope_id = in.readInt();, +                inetAddress = Inet6Address.getByAddress(null, a, scope_id);, +            } else {, +                inetAddress = InetAddress.getByAddress(a);, +            }, +            int port = in.readInt();, +            this.address = new InetSocketAddress(inetAddress, port);, +        } else {, +            this.address = new InetSocketAddress(in.readString(), in.readInt());, +        }, +    }, +, +    private InetSocketTransportAddress() {]