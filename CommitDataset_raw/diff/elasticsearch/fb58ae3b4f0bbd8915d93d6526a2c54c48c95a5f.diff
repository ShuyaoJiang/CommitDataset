[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // TODO: do we really need to make the exception name in underscore casing?, +        return toUnderscoreCase(simpleName);, +, +    // lower cases and adds underscores to transitions in a name, +    private static String toUnderscoreCase(String value) {, +        StringBuilder sb = new StringBuilder();, +        boolean changed = false;, +        for (int i = 0; i < value.length(); i++) {, +            char c = value.charAt(i);, +            if (Character.isUpperCase(c)) {, +                if (!changed) {, +                    // copy it over here, +                    for (int j = 0; j < i; j++) {, +                        sb.append(value.charAt(j));, +                    }, +                    changed = true;, +                    if (i == 0) {, +                        sb.append(Character.toLowerCase(c));, +                    } else {, +                        sb.append('_');, +                        sb.append(Character.toLowerCase(c));, +                    }, +                } else {, +                    sb.append('_');, +                    sb.append(Character.toLowerCase(c));, +                }, +            } else {, +                if (changed) {, +                    sb.append(c);, +                }, +            }, +        }, +        if (!changed) {, +            return value;, +        }, +        return sb.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // TODO: do we really need to make the exception name in underscore casing?, +        return toUnderscoreCase(simpleName);, +, +    // lower cases and adds underscores to transitions in a name, +    private static String toUnderscoreCase(String value) {, +        StringBuilder sb = new StringBuilder();, +        boolean changed = false;, +        for (int i = 0; i < value.length(); i++) {, +            char c = value.charAt(i);, +            if (Character.isUpperCase(c)) {, +                if (!changed) {, +                    // copy it over here, +                    for (int j = 0; j < i; j++) {, +                        sb.append(value.charAt(j));, +                    }, +                    changed = true;, +                    if (i == 0) {, +                        sb.append(Character.toLowerCase(c));, +                    } else {, +                        sb.append('_');, +                        sb.append(Character.toLowerCase(c));, +                    }, +                } else {, +                    sb.append('_');, +                    sb.append(Character.toLowerCase(c));, +                }, +            } else {, +                if (changed) {, +                    sb.append(c);, +                }, +            }, +        }, +        if (!changed) {, +            return value;, +        }, +        return sb.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/cli/Command.java, +            if (e.exitCode == ExitCodes.USAGE) {, +                printHelp(terminal);, +            }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // TODO: do we really need to make the exception name in underscore casing?, +        return toUnderscoreCase(simpleName);, +, +    // lower cases and adds underscores to transitions in a name, +    private static String toUnderscoreCase(String value) {, +        StringBuilder sb = new StringBuilder();, +        boolean changed = false;, +        for (int i = 0; i < value.length(); i++) {, +            char c = value.charAt(i);, +            if (Character.isUpperCase(c)) {, +                if (!changed) {, +                    // copy it over here, +                    for (int j = 0; j < i; j++) {, +                        sb.append(value.charAt(j));, +                    }, +                    changed = true;, +                    if (i == 0) {, +                        sb.append(Character.toLowerCase(c));, +                    } else {]