[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/datafeed/DatafeedConfig.java, +    public static final ParseField DELAYED_DATA_CHECK_CONFIG = new ParseField("delayed_data_check_config");, +        PARSER.declareObject(Builder::setDelayedDataCheckConfig, DelayedDataCheckConfig.PARSER, DELAYED_DATA_CHECK_CONFIG);, +    private final DelayedDataCheckConfig delayedDataCheckConfig;, +, +                           Integer scrollSize, ChunkingConfig chunkingConfig, DelayedDataCheckConfig delayedDataCheckConfig) {, +        this.delayedDataCheckConfig = delayedDataCheckConfig;, +    public DelayedDataCheckConfig getDelayedDataCheckConfig() {, +        return delayedDataCheckConfig;, +    }, +, +        if (delayedDataCheckConfig != null) {, +            builder.field(DELAYED_DATA_CHECK_CONFIG.getPreferredName(), delayedDataCheckConfig);, +        }, +            && Objects.equals(this.chunkingConfig, that.chunkingConfig), +            && Objects.equals(this.delayedDataCheckConfig, that.delayedDataCheckConfig);, +            chunkingConfig, delayedDataCheckConfig);, +        private DelayedDataCheckConfig delayedDataCheckConfig;, +            this.delayedDataCheckConfig = config.getDelayedDataCheckConfig();, +        /**, +         * This sets the {@link DelayedDataCheckConfig} settings., +         *, +         * See {@link DelayedDataCheckConfig} for more information., +         *, +         * @param delayedDataCheckConfig the delayed data check configuration, +         *                               Default value is enabled, with `check_window` being null. This means the true window is, +         *                               calculated when the real-time Datafeed runs., +         */, +        public Builder setDelayedDataCheckConfig(DelayedDataCheckConfig delayedDataCheckConfig) {, +            this.delayedDataCheckConfig = delayedDataCheckConfig;, +            return this;, +        }, +, +                chunkingConfig, delayedDataCheckConfig);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/datafeed/DatafeedConfig.java, +    public static final ParseField DELAYED_DATA_CHECK_CONFIG = new ParseField("delayed_data_check_config");, +        PARSER.declareObject(Builder::setDelayedDataCheckConfig, DelayedDataCheckConfig.PARSER, DELAYED_DATA_CHECK_CONFIG);, +    private final DelayedDataCheckConfig delayedDataCheckConfig;, +, +                           Integer scrollSize, ChunkingConfig chunkingConfig, DelayedDataCheckConfig delayedDataCheckConfig) {, +        this.delayedDataCheckConfig = delayedDataCheckConfig;, +    public DelayedDataCheckConfig getDelayedDataCheckConfig() {, +        return delayedDataCheckConfig;, +    }, +, +        if (delayedDataCheckConfig != null) {, +            builder.field(DELAYED_DATA_CHECK_CONFIG.getPreferredName(), delayedDataCheckConfig);, +        }, +            && Objects.equals(this.chunkingConfig, that.chunkingConfig), +            && Objects.equals(this.delayedDataCheckConfig, that.delayedDataCheckConfig);, +            chunkingConfig, delayedDataCheckConfig);, +        private DelayedDataCheckConfig delayedDataCheckConfig;, +            this.delayedDataCheckConfig = config.getDelayedDataCheckConfig();, +        /**, +         * This sets the {@link DelayedDataCheckConfig} settings., +         *, +         * See {@link DelayedDataCheckConfig} for more information., +         *, +         * @param delayedDataCheckConfig the delayed data check configuration, +         *                               Default value is enabled, with `check_window` being null. This means the true window is, +         *                               calculated when the real-time Datafeed runs., +         */, +        public Builder setDelayedDataCheckConfig(DelayedDataCheckConfig delayedDataCheckConfig) {, +            this.delayedDataCheckConfig = delayedDataCheckConfig;, +            return this;, +        }, +, +                chunkingConfig, delayedDataCheckConfig);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/datafeed/DatafeedUpdate.java, +        PARSER.declareObject(Builder::setDelayedDataCheckConfig,, +            DelayedDataCheckConfig.PARSER,, +            DatafeedConfig.DELAYED_DATA_CHECK_CONFIG);, +    private final DelayedDataCheckConfig delayedDataCheckConfig;, +                           Integer scrollSize, ChunkingConfig chunkingConfig, DelayedDataCheckConfig delayedDataCheckConfig) {, +        this.delayedDataCheckConfig = delayedDataCheckConfig;, +        if (delayedDataCheckConfig != null) {, +            builder.field(DatafeedConfig.DELAYED_DATA_CHECK_CONFIG.getPreferredName(), delayedDataCheckConfig);, +        }, +    public DelayedDataCheckConfig getDelayedDataCheckConfig() {, +        return delayedDataCheckConfig;, +    }, +, +            && Objects.equals(this.delayedDataCheckConfig, that.delayedDataCheckConfig), +            chunkingConfig, delayedDataCheckConfig);, +        private DelayedDataCheckConfig delayedDataCheckConfig;, +            this.delayedDataCheckConfig = config.delayedDataCheckConfig;, +        public Builder setDelayedDataCheckConfig(DelayedDataCheckConfig delayedDataCheckConfig) {, +            this.delayedDataCheckConfig = delayedDataCheckConfig;, +            return this;, +        }, +, +                chunkingConfig, delayedDataCheckConfig);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ml/datafeed/DatafeedConfig.java, +    public static final ParseField DELAYED_DATA_CHECK_CONFIG = new ParseField("delayed_data_check_config");, +        PARSER.declareObject(Builder::setDelayedDataCheckConfig, DelayedDataCheckConfig.PARSER, DELAYED_DATA_CHECK_CONFIG);, +    private final DelayedDataCheckConfig delayedDataCheckConfig;, +, +                           Integer scrollSize, ChunkingConfig chunkingConfig, DelayedDataCheckConfig delayedDataCheckConfig) {, +        this.delayedDataCheckConfig = delayedDataCheckConfig;, +    public DelayedDataCheckConfig getDelayedDataCheckConfig() {]