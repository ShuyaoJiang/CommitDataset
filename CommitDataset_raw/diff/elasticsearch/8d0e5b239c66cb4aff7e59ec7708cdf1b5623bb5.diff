[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import org.elasticsearch.rest.action.support.RestXContentBuilder;, +                RestXContentBuilder.restDocumentSource(source, builder, params);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import org.elasticsearch.rest.action.support.RestXContentBuilder;, +                RestXContentBuilder.restDocumentSource(source, builder, params);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/support/RestXContentBuilder.java, +import org.elasticsearch.common.compress.lzf.LZFDecoder;, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.CachedStreamInput;, +import org.elasticsearch.common.io.stream.LZFStreamInput;, +import org.elasticsearch.common.xcontent.ToXContent;, +, +    public static void restDocumentSource(byte[] source, XContentBuilder builder, ToXContent.Params params) throws IOException {, +        if (LZFDecoder.isCompressed(source)) {, +            BytesStreamInput siBytes = new BytesStreamInput(source);, +            LZFStreamInput siLzf = CachedStreamInput.cachedLzf(siBytes);, +            XContentType contentType = XContentFactory.xContentType(siLzf);, +            siLzf.resetToBufferStart();, +            if (contentType == builder.contentType()) {, +                builder.rawField("_source", siLzf);, +            } else {, +                // TODO, should we just return it as binary and not auto convert it?, +                builder.field("_source", XContentFactory.xContent(builder.contentType()).createParser(siLzf).map());, +            }, +        } else {, +            if (XContentFactory.xContentType(source) == builder.contentType()) {, +                builder.rawField("_source", source);, +            } else {, +                // TODO, should we just return it as binary and not auto convert it?, +                builder.field("_source", XContentFactory.xContent(builder.contentType()).createParser(source).map());, +            }, +        }, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +import org.elasticsearch.rest.action.support.RestXContentBuilder;, +                RestXContentBuilder.restDocumentSource(source, builder, params);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/support/RestXContentBuilder.java, +import org.elasticsearch.common.compress.lzf.LZFDecoder;, +import org.elasticsearch.common.io.stream.BytesStreamInput;, +import org.elasticsearch.common.io.stream.CachedStreamInput;, +import org.elasticsearch.common.io.stream.LZFStreamInput;, +import org.elasticsearch.common.xcontent.ToXContent;, +, +    public static void restDocumentSource(byte[] source, XContentBuilder builder, ToXContent.Params params) throws IOException {, +        if (LZFDecoder.isCompressed(source)) {, +            BytesStreamInput siBytes = new BytesStreamInput(source);, +            LZFStreamInput siLzf = CachedStreamInput.cachedLzf(siBytes);, +            XContentType contentType = XContentFactory.xContentType(siLzf);, +            siLzf.resetToBufferStart();, +            if (contentType == builder.contentType()) {, +                builder.rawField("_source", siLzf);, +            } else {, +                // TODO, should we just return it as binary and not auto convert it?, +                builder.field("_source", XContentFactory.xContent(builder.contentType()).createParser(siLzf).map());, +            }, +        } else {, +            if (XContentFactory.xContentType(source) == builder.contentType()) {, +                builder.rawField("_source", source);, +            } else {, +                // TODO, should we just return it as binary and not auto convert it?, +                builder.field("_source", XContentFactory.xContent(builder.contentType()).createParser(source).map());, +            }, +        }, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.rest.action.support.RestXContentBuilder;, +            RestXContentBuilder.restDocumentSource(source, builder, params);]