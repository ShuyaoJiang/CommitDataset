[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/CcrRequests.java, +                if (response.getState() == null) { // timeout on wait_for_metadata_version, +                    if (timeoutSupplier.get().nanos() < 0) {, +                        listener.onFailure(new IllegalStateException("timeout to get cluster state with" +, +                            " metadata version [" + metadataVersion + "], mapping version [" + mappingVersion + "]"));, +                    } else {, +                        getIndexMetadata(client, index, mappingVersion, metadataVersion, timeoutSupplier, listener);, +                } else {, +                        listener.onFailure(new IllegalStateException(, +                            "timeout to get cluster state with mapping version [" + mappingVersion + "]"));, +                    } else {, +                    }, +                }, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/CcrRequests.java, +                if (response.getState() == null) { // timeout on wait_for_metadata_version, +                    if (timeoutSupplier.get().nanos() < 0) {, +                        listener.onFailure(new IllegalStateException("timeout to get cluster state with" +, +                            " metadata version [" + metadataVersion + "], mapping version [" + mappingVersion + "]"));, +                    } else {, +                        getIndexMetadata(client, index, mappingVersion, metadataVersion, timeoutSupplier, listener);, +                } else {, +                        listener.onFailure(new IllegalStateException(, +                            "timeout to get cluster state with mapping version [" + mappingVersion + "]"));, +                    } else {, +                    }, +                }, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/FollowerFailOverIT.java]