[+++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/SimpleIndexQueryParserTests.java, +    @Test public void testPrefixBoostQuery() throws IOException {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/prefix-boost.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(PrefixQuery.class));, +        PrefixQuery prefixQuery = (PrefixQuery) parsedQuery;, +        // since age is automatically registered in data, we encode it as numeric, +        assertThat(prefixQuery.getPrefix(), equalTo(new Term("name.first", "sh")));, +        assertThat((double) prefixQuery.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +    @Test public void testWildcardBoostQuery() throws IOException {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/wildcard-boost.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(WildcardQuery.class));, +        WildcardQuery wildcardQuery = (WildcardQuery) parsedQuery;, +        assertThat(wildcardQuery.getTerm(), equalTo(new Term("name.first", "sh*")));, +        assertThat((double) wildcardQuery.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/SimpleIndexQueryParserTests.java, +    @Test public void testPrefixBoostQuery() throws IOException {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/prefix-boost.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(PrefixQuery.class));, +        PrefixQuery prefixQuery = (PrefixQuery) parsedQuery;, +        // since age is automatically registered in data, we encode it as numeric, +        assertThat(prefixQuery.getPrefix(), equalTo(new Term("name.first", "sh")));, +        assertThat((double) prefixQuery.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +    @Test public void testWildcardBoostQuery() throws IOException {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/wildcard-boost.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(WildcardQuery.class));, +        WildcardQuery wildcardQuery = (WildcardQuery) parsedQuery;, +        assertThat(wildcardQuery.getTerm(), equalTo(new Term("name.first", "sh*")));, +        assertThat((double) wildcardQuery.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/prefix-boost.json, +{, +    "prefix" : {, +        "name.first" : {, +            "value" : "sh",, +            "boost" : 1.2, +        }, +    }, +}, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/SimpleIndexQueryParserTests.java, +    @Test public void testPrefixBoostQuery() throws IOException {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/prefix-boost.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(PrefixQuery.class));, +        PrefixQuery prefixQuery = (PrefixQuery) parsedQuery;, +        // since age is automatically registered in data, we encode it as numeric, +        assertThat(prefixQuery.getPrefix(), equalTo(new Term("name.first", "sh")));, +        assertThat((double) prefixQuery.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +    @Test public void testWildcardBoostQuery() throws IOException {, +        IndexQueryParser queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/xcontent/wildcard-boost.json");, +        Query parsedQuery = queryParser.parse(query).query();, +        assertThat(parsedQuery, instanceOf(WildcardQuery.class));, +        WildcardQuery wildcardQuery = (WildcardQuery) parsedQuery;, +        assertThat(wildcardQuery.getTerm(), equalTo(new Term("name.first", "sh*")));, +        assertThat((double) wildcardQuery.getBoost(), closeTo(1.2, 0.00001));, +    }, +, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/prefix-boost.json, +{, +    "prefix" : {, +        "name.first" : {, +            "value" : "sh",, +            "boost" : 1.2, +        }, +    }, +}, +++ b/modules/elasticsearch/src/test/java/org/elasticsearch/index/query/xcontent/wildcard-boost.json, +{, +    "wildcard" : {, +        "name.first" : {, +            "value" : "sh*",, +            "boost" : 1.2, +        }, +    }, +}]