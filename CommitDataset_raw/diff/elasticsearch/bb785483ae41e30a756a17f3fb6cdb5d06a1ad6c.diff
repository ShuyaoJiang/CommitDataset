[+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    public Engine.IndexResult index(final Engine.Index index) {, +    private Engine.IndexResult index(final Engine engine, final Engine.Index index) {, +        indexingOperationListeners.preIndex(index);, +    public Engine.DeleteResult delete(final Engine.Delete delete) {, +    private Engine.DeleteResult delete(final Engine engine, final Engine.Delete delete) {, +        indexingOperationListeners.preDelete(delete);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    public Engine.IndexResult index(final Engine.Index index) {, +    private Engine.IndexResult index(final Engine engine, final Engine.Index index) {, +        indexingOperationListeners.preIndex(index);, +    public Engine.DeleteResult delete(final Engine.Delete delete) {, +    private Engine.DeleteResult delete(final Engine engine, final Engine.Delete delete) {, +        indexingOperationListeners.preDelete(delete);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexingOperationListener.java, +    /** Called before the indexing occurs */, +    default void preIndex(Engine.Index operation) {}, +    /** Called after the indexing operation occurred */, +    /** Called after the indexing operation occurred with exception */, +    /** Called before the delete occurs */, +    default void preDelete(Engine.Delete delete) {}, +    /** Called after the delete operation occurred */, +    /** Called after the delete operation occurred with exception */, +    /** A Composite listener that multiplexes calls to each of the listeners methods */, +        public void preIndex(Engine.Index operation) {, +            assert index != null && result != null;, +        public void preDelete(Engine.Delete delete) {, +            assert delete != null && result != null;, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    public Engine.IndexResult index(final Engine.Index index) {, +    private Engine.IndexResult index(final Engine engine, final Engine.Index index) {, +        indexingOperationListeners.preIndex(index);, +    public Engine.DeleteResult delete(final Engine.Delete delete) {, +    private Engine.DeleteResult delete(final Engine engine, final Engine.Delete delete) {, +        indexingOperationListeners.preDelete(delete);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexingOperationListener.java, +    /** Called before the indexing occurs */, +    default void preIndex(Engine.Index operation) {}, +    /** Called after the indexing operation occurred */, +    /** Called after the indexing operation occurred with exception */, +    /** Called before the delete occurs */, +    default void preDelete(Engine.Delete delete) {}, +    /** Called after the delete operation occurred */, +    /** Called after the delete operation occurred with exception */, +    /** A Composite listener that multiplexes calls to each of the listeners methods */, +        public void preIndex(Engine.Index operation) {, +            assert index != null && result != null;, +        public void preDelete(Engine.Delete delete) {, +            assert delete != null && result != null;, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +    public void preIndex(Engine.Index operation) {, +    public void preDelete(Engine.Delete delete) {, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    public Engine.IndexResult index(final Engine.Index index) {, +    private Engine.IndexResult index(final Engine engine, final Engine.Index index) {, +        indexingOperationListeners.preIndex(index);, +    public Engine.DeleteResult delete(final Engine.Delete delete) {, +    private Engine.DeleteResult delete(final Engine engine, final Engine.Delete delete) {, +        indexingOperationListeners.preDelete(delete);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexingOperationListener.java, +    /** Called before the indexing occurs */, +    default void preIndex(Engine.Index operation) {}, +    /** Called after the indexing operation occurred */, +    /** Called after the indexing operation occurred with exception */, +    /** Called before the delete occurs */, +    default void preDelete(Engine.Delete delete) {}, +    /** Called after the delete operation occurred */, +    /** Called after the delete operation occurred with exception */, +    /** A Composite listener that multiplexes calls to each of the listeners methods */, +        public void preIndex(Engine.Index operation) {, +            assert index != null && result != null;, +        public void preDelete(Engine.Delete delete) {, +            assert delete != null && result != null;, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java, +    public void preIndex(Engine.Index operation) {, +    public void preDelete(Engine.Delete delete) {, +++ b/core/src/test/java/org/elasticsearch/index/IndexModuleTests.java, +            public void preIndex(Engine.Index operation) {, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +    public Engine.IndexResult index(final Engine.Index index) {, +    private Engine.IndexResult index(final Engine engine, final Engine.Index index) {, +        indexingOperationListeners.preIndex(index);, +    public Engine.DeleteResult delete(final Engine.Delete delete) {, +    private Engine.DeleteResult delete(final Engine engine, final Engine.Delete delete) {, +        indexingOperationListeners.preDelete(delete);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexingOperationListener.java, +    /** Called before the indexing occurs */, +    default void preIndex(Engine.Index operation) {}, +    /** Called after the indexing operation occurred */, +    /** Called after the indexing operation occurred with exception */, +    /** Called before the delete occurs */, +    default void preDelete(Engine.Delete delete) {}, +    /** Called after the delete operation occurred */, +    /** Called after the delete operation occurred with exception */, +    /** A Composite listener that multiplexes calls to each of the listeners methods */, +        public void preIndex(Engine.Index operation) {, +            assert index != null && result != null;, +        public void preDelete(Engine.Delete delete) {, +            assert delete != null && result != null;, +++ b/core/src/main/java/org/elasticsearch/index/shard/InternalIndexingStats.java]