[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +            MetaData.Builder builder = MetaData.builder(currentState.metaData());, +, +                IndexMetaData indexMetaData = currentState.metaData().index(index);, +                    throw new IndexNotFoundException(index);, +                IndexMetaData.Builder indexMetaDataBuilder = IndexMetaData.builder(indexMetaData);, +                // Mapping updates on a single type may have side-effects on other types so we need to, +                // update mapping metadata on all types, +                for (DocumentMapper mapper : indexService.mapperService().docMappers(true)) {, +                    indexMetaDataBuilder.putMapping(new MappingMetaData(mapper.mappingSource()));, +                builder.put(indexMetaDataBuilder);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +            MetaData.Builder builder = MetaData.builder(currentState.metaData());, +, +                IndexMetaData indexMetaData = currentState.metaData().index(index);, +                    throw new IndexNotFoundException(index);, +                IndexMetaData.Builder indexMetaDataBuilder = IndexMetaData.builder(indexMetaData);, +                // Mapping updates on a single type may have side-effects on other types so we need to, +                // update mapping metadata on all types, +                for (DocumentMapper mapper : indexService.mapperService().docMappers(true)) {, +                    indexMetaDataBuilder.putMapping(new MappingMetaData(mapper.mappingSource()));, +                builder.put(indexMetaDataBuilder);, +++ b/core/src/test/java/org/elasticsearch/indices/mapping/UpdateMappingIntegrationIT.java, +import java.io.IOException;, +, +    public void testUpdateMappingOnAllTypes() throws IOException {, +        assertAcked(prepareCreate("index").addMapping("type1", "f", "type=string").addMapping("type2", "f", "type=string"));, +, +        assertAcked(client().admin().indices().preparePutMapping("index"), +                .setType("type1"), +                .setUpdateAllTypes(true), +                .setSource("f", "type=string,analyzer=default,null_value=n/a"), +                .get());, +, +        GetMappingsResponse mappings = client().admin().indices().prepareGetMappings("index").setTypes("type2").get();, +        MappingMetaData type2Mapping = mappings.getMappings().get("index").get("type2").get();, +        Map<String, Object> properties = (Map<String, Object>) type2Mapping.sourceAsMap().get("properties");, +        Map<String, Object> f = (Map<String, Object>) properties.get("f");, +        assertEquals("n/a", f.get("null_value"));, +    }]