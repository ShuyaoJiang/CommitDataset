[+++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/license");, +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/license");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/license");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +++ b/docs/java-api/index.asciidoc, +    <version>2.9.1</version>, +    <version>2.9.1</version>, +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/license");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +++ b/docs/java-api/index.asciidoc, +    <version>2.9.1</version>, +    <version>2.9.1</version>, +++ /dev/null, +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/license");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +++ b/docs/java-api/index.asciidoc, +    <version>2.9.1</version>, +    <version>2.9.1</version>, +++ /dev/null, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/license");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +++ b/docs/java-api/index.asciidoc, +    <version>2.9.1</version>, +    <version>2.9.1</version>, +++ /dev/null, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/buildSrc/version.properties, +log4j             = 2.9.1, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/LicenseClient.java, +     * Asynchronously updates license for the cluster cluster., +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +        Request request = new Request(HttpPut.METHOD_NAME, "/_xpack/license");, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +++ b/docs/java-api/index.asciidoc, +    <version>2.9.1</version>, +    <version>2.9.1</version>, +++ /dev/null, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",]