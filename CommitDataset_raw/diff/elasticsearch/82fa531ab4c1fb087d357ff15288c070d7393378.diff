[+++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BinaryFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BinaryFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BooleanFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BinaryFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BooleanFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BinaryFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BooleanFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/GeoPointFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BinaryFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BooleanFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/GeoPointFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/IdFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BinaryFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BooleanFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/GeoPointFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/IdFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/IndexFieldMapper.java, +        public IndexFieldData.Builder fielddataBuilder(String fullyQualifiedIndexName) {, +            return new ConstantIndexFieldData.Builder(mapperService -> fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java, +        return getForField(fieldType, index().getName());, +    }, +, +    @SuppressWarnings("unchecked"), +    public <IFD extends IndexFieldData<?>> IFD getForField(MappedFieldType fieldType, String fullyQualifiedIndexName) {, +        IndexFieldData.Builder builder = fieldType.fielddataBuilder(fullyQualifiedIndexName);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/BinaryFieldMapper.java]