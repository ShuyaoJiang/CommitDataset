[+++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    private List<PipelineAggregatorBuilder> pipelineAggregationFactorys;, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationFactorys) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    private List<PipelineAggregatorBuilder> pipelineAggregationFactorys;, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationFactorys) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public SearchRequestBuilder addAggregation(PipelineAggregatorBuilder aggregation) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    private List<PipelineAggregatorBuilder> pipelineAggregationFactorys;, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationFactorys) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public SearchRequestBuilder addAggregation(PipelineAggregatorBuilder aggregation) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * Reads a {@link PipelineAggregatorBuilder} from the current stream, +    public PipelineAggregatorBuilder readPipelineAggregatorFactory() throws IOException {, +        return readNamedWriteable(PipelineAggregatorBuilder.class);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    private List<PipelineAggregatorBuilder> pipelineAggregationFactorys;, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationFactorys) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public SearchRequestBuilder addAggregation(PipelineAggregatorBuilder aggregation) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * Reads a {@link PipelineAggregatorBuilder} from the current stream, +    public PipelineAggregatorBuilder readPipelineAggregatorFactory() throws IOException {, +        return readNamedWriteable(PipelineAggregatorBuilder.class);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * Writes a {@link PipelineAggregatorBuilder} to the current stream, +    public void writePipelineAggregatorFactory(PipelineAggregatorBuilder factory) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    private List<PipelineAggregatorBuilder> pipelineAggregationFactorys;, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationFactorys) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public SearchRequestBuilder addAggregation(PipelineAggregatorBuilder aggregation) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * Reads a {@link PipelineAggregatorBuilder} from the current stream, +    public PipelineAggregatorBuilder readPipelineAggregatorFactory() throws IOException {, +        return readNamedWriteable(PipelineAggregatorBuilder.class);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * Writes a {@link PipelineAggregatorBuilder} to the current stream, +    public void writePipelineAggregatorFactory(PipelineAggregatorBuilder factory) throws IOException {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public AB subAggregation(PipelineAggregatorBuilder aggregation) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +     * {@link PercolateSourceBuilder#addAggregation(PipelineAggregatorBuilder)}, +    public PercolateRequestBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    private List<PipelineAggregatorBuilder> pipelineAggregationFactorys;, +    public PercolateSourceBuilder addAggregation(PipelineAggregatorBuilder aggregationBuilder) {, +                for (PipelineAggregatorBuilder aggregation : pipelineAggregationFactorys) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorBuilder;, +    public SearchRequestBuilder addAggregation(PipelineAggregatorBuilder aggregation) {, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java]