[+++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        int size = root.size();, +        switch (size) {, +        case 0:, +            // if we don't have any keys throw an exception, +            throw new MapperParsingException("malformed mapping no root object found");, +        case 1:, +            break;, +        default:, +, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java, +        int size = root.size();, +        switch (size) {, +        case 0:, +            // if we don't have any keys throw an exception, +            throw new MapperParsingException("malformed mapping no root object found");, +        case 1:, +            break;, +        default:, +, +++ b/src/test/java/org/elasticsearch/test/unit/index/mapper/source/DefaultSourceMappingTests.java, +import org.elasticsearch.test.integration.ElasticsearchTestCase;, +public class DefaultSourceMappingTests extends ElasticsearchTestCase {, +            mapper = MapperTestUtils.newParser().parse(null, getRandom().nextBoolean() ? null : "", defaultMapping);, +        try {, +            mapper = MapperTestUtils.newParser().parse(null, "{}", defaultMapping);, +            assertThat(mapper.type(), equalTo("my_type"));, +            assertThat(mapper.sourceMapper().enabled(), equalTo(false));, +            assert false;, +        } catch (MapperParsingException e) {, +            assertThat(e.getMessage(), equalTo("malformed mapping no root object found"));, +            // all is well, +        }]