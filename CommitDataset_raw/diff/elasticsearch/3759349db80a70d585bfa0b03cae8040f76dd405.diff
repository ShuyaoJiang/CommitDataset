[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <!-- These files are generated by ANTLR so its silly to hold them to our rules. -->, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +, +  <!-- NOCOMMIT Temporary-->, +  <suppress files="sql[/\\].*.java" checks="LineLength" />, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <!-- These files are generated by ANTLR so its silly to hold them to our rules. -->, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +, +  <!-- NOCOMMIT Temporary-->, +  <suppress files="sql[/\\].*.java" checks="LineLength" />, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +, +++ b/dev-tools/create_bwc_indexes.py, +        client.search(index=monitoring_name, doc_type=doc_type, body={"query": {"match_all": {}}})), +  wait_for_monitoring_to_index('cluster_info', 1), +  if parse_version(version) >= parse_version('2.1.0'):, +    wait_for_monitoring_to_index('node', 1), +  wait_for_monitoring_to_index('cluster_state', 3), +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <!-- These files are generated by ANTLR so its silly to hold them to our rules. -->, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +, +  <!-- NOCOMMIT Temporary-->, +  <suppress files="sql[/\\].*.java" checks="LineLength" />, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +, +++ b/dev-tools/create_bwc_indexes.py, +        client.search(index=monitoring_name, doc_type=doc_type, body={"query": {"match_all": {}}})), +  wait_for_monitoring_to_index('cluster_info', 1), +  if parse_version(version) >= parse_version('2.1.0'):, +    wait_for_monitoring_to_index('node', 1), +  wait_for_monitoring_to_index('cluster_state', 3), +++ b/docs/en/ml/limitations.asciidoc, +=== {xpackml} features do not support cross cluster search, +You cannot use cross cluster search in either the {ml} APIs or the {ml}, +features in {kib}., +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <!-- These files are generated by ANTLR so its silly to hold them to our rules. -->, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +, +  <!-- NOCOMMIT Temporary-->, +  <suppress files="sql[/\\].*.java" checks="LineLength" />, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +, +++ b/dev-tools/create_bwc_indexes.py, +        client.search(index=monitoring_name, doc_type=doc_type, body={"query": {"match_all": {}}})), +  wait_for_monitoring_to_index('cluster_info', 1), +  if parse_version(version) >= parse_version('2.1.0'):, +    wait_for_monitoring_to_index('node', 1), +  wait_for_monitoring_to_index('cluster_state', 3), +++ b/docs/en/ml/limitations.asciidoc, +=== {xpackml} features do not support cross cluster search, +You cannot use cross cluster search in either the {ml} APIs or the {ml}, +features in {kib}., +++ b/plugin/build.gradle, +, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +  // sql's server components and its transitive dependencies, +  compile project(':x-pack-elasticsearch:sql:server'), +, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential', 'Generated'], +++ b/dev-tools/checkstyle_suppressions.xml, +  <!-- These files are generated by ANTLR so its silly to hold them to our rules. -->, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]parser[/\\]SqlBase(Base(Listener|Visitor)|Lexer|Listener|Parser|Visitor).java" checks="." />, +, +  <!-- NOCOMMIT Temporary-->, +  <suppress files="sql[/\\].*.java" checks="LineLength" />, +  <suppress files="sql[/\\]server[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]xpack[/\\]sql[/\\]expression[/\\].*.java" checks="EqualsHashCode" />, +, +++ b/dev-tools/create_bwc_indexes.py, +        client.search(index=monitoring_name, doc_type=doc_type, body={"query": {"match_all": {}}})), +  wait_for_monitoring_to_index('cluster_info', 1), +  if parse_version(version) >= parse_version('2.1.0'):, +    wait_for_monitoring_to_index('node', 1), +  wait_for_monitoring_to_index('cluster_state', 3), +++ b/docs/en/ml/limitations.asciidoc, +=== {xpackml} features do not support cross cluster search, +You cannot use cross cluster search in either the {ml} APIs or the {ml}, +features in {kib}., +++ b/plugin/build.gradle, +, +  compile 'com.google.guava:guava:18.0' // needed by watcher for the html sanitizer and security tests for jimfs, +  // sql's server components and its transitive dependencies, +  compile project(':x-pack-elasticsearch:sql:server'), +]