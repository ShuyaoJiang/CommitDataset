[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.rollover.RolloverRequest;, +import org.elasticsearch.action.admin.indices.rollover.RolloverResponse;, +     * Split Index API on elastic.co</a>, +, +    /**, +     * Rolls over an index using the Rollover Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-rollover-index.html">, +     * Rollover Index API on elastic.co</a>, +     */, +    public RolloverResponse rollover(RolloverRequest rolloverRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(rolloverRequest, Request::rollover, RolloverResponse::fromXContent,, +                emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously rolls over an index using the Rollover Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-rollover-index.html">, +     * Rollover Index API on elastic.co</a>, +     */, +    public void rolloverAsync(RolloverRequest rolloverRequest, ActionListener<RolloverResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(rolloverRequest, Request::rollover, RolloverResponse::fromXContent,, +                listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.rollover.RolloverRequest;, +import org.elasticsearch.action.admin.indices.rollover.RolloverResponse;, +     * Split Index API on elastic.co</a>, +, +    /**, +     * Rolls over an index using the Rollover Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-rollover-index.html">, +     * Rollover Index API on elastic.co</a>, +     */, +    public RolloverResponse rollover(RolloverRequest rolloverRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(rolloverRequest, Request::rollover, RolloverResponse::fromXContent,, +                emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously rolls over an index using the Rollover Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-rollover-index.html">, +     * Rollover Index API on elastic.co</a>, +     */, +    public void rolloverAsync(RolloverRequest rolloverRequest, ActionListener<RolloverResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(rolloverRequest, Request::rollover, RolloverResponse::fromXContent,, +                listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.action.admin.indices.rollover.RolloverRequest;, +        // TODO maybe indices should be property of RankEvalRequest and not of the spec, +        HttpEntity entity = createEntity(rankEvalRequest.getRankEvalSpec(), REQUEST_BODY_CONTENT_TYPE);, +    static Request rollover(RolloverRequest rolloverRequest) throws IOException {, +        Params params = Params.builder();, +        params.withTimeout(rolloverRequest.timeout());, +        params.withMasterTimeout(rolloverRequest.masterNodeTimeout());, +        params.withWaitForActiveShards(rolloverRequest.getCreateIndexRequest().waitForActiveShards());, +        if (rolloverRequest.isDryRun()) {, +            params.putParam("dry_run", Boolean.TRUE.toString());, +        }, +        String endpoint = buildEndpoint(rolloverRequest.getAlias(), "_rollover", rolloverRequest.getNewIndexName());, +        HttpEntity entity = createEntity(rolloverRequest, REQUEST_BODY_CONTENT_TYPE);, +        return new Request(HttpPost.METHOD_NAME, endpoint, params.getParams(), entity);, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.rollover.RolloverRequest;, +import org.elasticsearch.action.admin.indices.rollover.RolloverResponse;, +     * Split Index API on elastic.co</a>, +, +    /**, +     * Rolls over an index using the Rollover Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-rollover-index.html">, +     * Rollover Index API on elastic.co</a>, +     */, +    public RolloverResponse rollover(RolloverRequest rolloverRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(rolloverRequest, Request::rollover, RolloverResponse::fromXContent,, +                emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously rolls over an index using the Rollover Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-rollover-index.html">, +     * Rollover Index API on elastic.co</a>, +     */, +    public void rolloverAsync(RolloverRequest rolloverRequest, ActionListener<RolloverResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(rolloverRequest, Request::rollover, RolloverResponse::fromXContent,, +                listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.action.admin.indices.rollover.RolloverRequest;, +        // TODO maybe indices should be property of RankEvalRequest and not of the spec, +        HttpEntity entity = createEntity(rankEvalRequest.getRankEvalSpec(), REQUEST_BODY_CONTENT_TYPE);, +    static Request rollover(RolloverRequest rolloverRequest) throws IOException {]