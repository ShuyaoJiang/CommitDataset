[+++ b/docs/reference/modules.asciidoc, +include::modules/snapshots.asciidoc[], +, +++ b/docs/reference/modules.asciidoc, +include::modules/snapshots.asciidoc[], +, +++ b/docs/reference/modules/snapshots.asciidoc, +[[modules-snapshots]], +== Snapshot And Restore, +, +The snapshot and restore module allows to create snapshots of individual indices or an entire cluster into a remote, +repository. At the time of the initial release only shared file system repository is supported., +, +[float], +=== Repositories, +, +Before any snapshot or restore operation can be performed a snapshot repository should be registered in, +Elasticsearch. The following command registers a shared file system repository with the name `my_backup` that, +will use location `/mount/backups/my_backup` to store snapshots., +, +[source,js], +-----------------------------------, +$ curl -XPUT 'http://localhost:9200/_snapshot/my_backup' -d '{, +    "type": "fs",, +    "settings": {, +        "location": "/mount/backups/my_backup",, +        "compress": true, +    }, +}', +-----------------------------------, +, +Once repository is registered, its information can be obtained using the following command:, +, +[source,js], +-----------------------------------, +$ curl -XGET 'http://localhost:9200/_snapshot/my_backup?pretty', +-----------------------------------, +[source,js], +-----------------------------------, +{, +  "my_backup" : {, +    "type" : "fs",, +    "settings" : {, +      "compress" : "false",, +      "location" : "/mount/backups/my_backup", +    }, +  }, +}, +-----------------------------------, +, +If a repository name is not specified, or `_all` is used as repository name Elasticsearch will return information about, +all repositories currently registered in the cluster:, +, +[source,js], +-----------------------------------, +$ curl -XGET 'http://localhost:9200/_snapshot', +-----------------------------------, +, +or, +, +[source,js], +-----------------------------------, +$ curl -XGET 'http://localhost:9200/_snapshot/all', +-----------------------------------, +, +[float], +===== Shared File System Repository, +, +The shared file system repository (`"type": "fs"`) is using shared file system to store snapshot. The path, +specified in the `location` parameter should point to the same location in the shared filesystem and be accessible, +on all data and master nodes. The following settings are supported:, +, +[horizontal], +`location`:: Location of the snapshots. Mandatory., +`compress`:: Turns on compression of the snapshot files. Defaults to `true`., +`concurrent_streams`:: Throttles the number of streams (per node) preforming snapshot operation. Defaults to `5`, +`chunk_size`:: Big files can be broken down into chunks during snapshotting if needed. The chunk size can be specified in bytes or by, + using size value notation, i.e. 1g, 10m, 5k. Defaults to `null` (unlimited chunk size)., +, +, +[float], +=== Snapshot, +, +A repository can contain multiple snapshots of the same cluster. Snapshot are identified by unique names within the, +cluster. A snapshot with the name `snapshot_1` in the repository `my_backup` can be created by executing the following, +command:, +, +[source,js], +-----------------------------------, +$ curl -XPUT "localhost:9200/_snapshot/my_backup/snapshot_1?wait_for_completion=true", +-----------------------------------, +, +The `wait_for_completion` parameter specifies whether or not the request should return immediately or wait for snapshot, +completion. By default snapshot of all open and started indices in the cluster is created. This behavior can be changed, +by specifying the list of indices in the body of the snapshot request., +, +[source,js], +-----------------------------------, +$ curl -XPUT "localhost:9200/_snapshot/my_backup/snapshot_1" -d '{, +    "indices": "index_1,index_2",]