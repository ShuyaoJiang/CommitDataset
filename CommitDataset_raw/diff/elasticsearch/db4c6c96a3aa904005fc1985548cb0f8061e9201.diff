[+++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            from('src/site') {, +                include '_site/**', +            }, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            from('src/site') {, +                include '_site/**', +            }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +    boolean jvm = true, +, +    @Input, +    boolean site = false, +, +    @Input, +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            from('src/site') {, +                include '_site/**', +            }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +    boolean jvm = true, +, +    @Input, +    boolean site = false, +, +    @Input, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.jvm && extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin with jvm=true'), +                if (extension.jvm && extension.isolated == false) {, +            'jvm': extension.jvm as String,, +            'site': extension.site as String,, +            'classname': extension.jvm ? extension.classname : 'NA', +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            from('src/site') {, +                include '_site/**', +            }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +    boolean jvm = true, +, +    @Input, +    boolean site = false, +, +    @Input, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.jvm && extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin with jvm=true'), +                if (extension.jvm && extension.isolated == false) {, +            'jvm': extension.jvm as String,, +            'site': extension.site as String,, +            'classname': extension.jvm ? extension.classname : 'NA', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('wildcard imports', /^\s*import.*\.\*/), +        // We don't use Java serialization so we fail if it looks like we're trying to., +        patterns.put('declares serialVersionUID', /serialVersionUID/), +        patterns.put('references Serializable', /java\.io\.Serializable/), +++ b/.projectile, +-/plugins/discovery-multicast/target, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            from('src/site') {, +                include '_site/**', +            }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +    boolean jvm = true, +, +    @Input, +    boolean site = false, +, +    @Input, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.jvm && extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin with jvm=true'), +                if (extension.jvm && extension.isolated == false) {, +            'jvm': extension.jvm as String,, +            'site': extension.site as String,, +            'classname': extension.jvm ? extension.classname : 'NA', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('wildcard imports', /^\s*import.*\.\*/), +        // We don't use Java serialization so we fail if it looks like we're trying to., +        patterns.put('declares serialVersionUID', /serialVersionUID/), +        patterns.put('references Serializable', /java\.io\.Serializable/), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy]