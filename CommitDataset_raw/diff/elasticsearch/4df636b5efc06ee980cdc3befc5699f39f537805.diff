[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +            if (connection.getVersion().before(Version.V_5_3_0_UNRELEASED) && request.scroll() != null) {, +                /**, +                 * This is needed for nodes pre 5.3 when the single shard optimization is used., +                 * These nodes will set the last emitted doc only if the removed `query_and_fetch` search type is set, +                 * in the request. See {@link SearchType}., +                 */, +                request.searchType(SearchType.fromId((byte) 3));, +            }, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +            if (connection.getVersion().before(Version.V_5_3_0_UNRELEASED) && request.scroll() != null) {, +                /**, +                 * This is needed for nodes pre 5.3 when the single shard optimization is used., +                 * These nodes will set the last emitted doc only if the removed `query_and_fetch` search type is set, +                 * in the request. See {@link SearchType}., +                 */, +                request.searchType(SearchType.fromId((byte) 3));, +            }, +++ b/core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java, +    void setSearchType(SearchType type) {, +        this.searchType = type;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +            if (connection.getVersion().before(Version.V_5_3_0_UNRELEASED) && request.scroll() != null) {, +                /**, +                 * This is needed for nodes pre 5.3 when the single shard optimization is used., +                 * These nodes will set the last emitted doc only if the removed `query_and_fetch` search type is set, +                 * in the request. See {@link SearchType}., +                 */, +                request.searchType(SearchType.fromId((byte) 3));, +            }, +++ b/core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java, +    void setSearchType(SearchType type) {, +        this.searchType = type;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java, +    public void searchType(SearchType searchType) {, +        shardSearchLocalRequest.setSearchType(searchType);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java, +            if (connection.getVersion().before(Version.V_5_3_0_UNRELEASED) && request.scroll() != null) {, +                /**, +                 * This is needed for nodes pre 5.3 when the single shard optimization is used., +                 * These nodes will set the last emitted doc only if the removed `query_and_fetch` search type is set, +                 * in the request. See {@link SearchType}., +                 */, +                request.searchType(SearchType.fromId((byte) 3));, +            }, +++ b/core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java, +    void setSearchType(SearchType type) {, +        this.searchType = type;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java, +    public void searchType(SearchType searchType) {, +        shardSearchLocalRequest.setSearchType(searchType);, +    }, +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/scroll/10_basic.yaml, +"Basic scroll with 1 shard":, +  - do:, +      indices.create:, +        index: test_scroll, +        body:, +          settings:, +            index:, +              number_of_shards: 1, +, +  - do:, +      index:, +        index:  test_scroll, +        type:   test, +        id:     42, +        body:   { foo: 1 }, +, +  - do:, +      index:, +        index:  test_scroll, +        type:   test, +        id:     43, +        body:   { foo: 2 }, +, +  - do:, +      indices.refresh: {}, +, +  - do:, +      search:, +        index: test_scroll, +        size: 1, +        scroll: 1m, +        sort: foo, +        body:, +          query:, +            match_all: {}, +, +  - set: {_scroll_id: scroll_id}, +  - match: {hits.total:      2    }]