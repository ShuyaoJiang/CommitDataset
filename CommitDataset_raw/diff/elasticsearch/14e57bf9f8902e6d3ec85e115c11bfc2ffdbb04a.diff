[+++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexResponse.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class FieldCapabilitiesIndexResponse extends ActionResponse implements Writeable {, +    FieldCapabilitiesIndexResponse(StreamInput input) throws IOException {, +        this.readFrom(input);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexResponse.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class FieldCapabilitiesIndexResponse extends ActionResponse implements Writeable {, +    FieldCapabilitiesIndexResponse(StreamInput input) throws IOException {, +        this.readFrom(input);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +import org.elasticsearch.Version;, +public final class FieldCapabilitiesRequest extends ActionRequest implements IndicesRequest.Replaceable {, +    // pkg private API mainly for cross cluster search to signal that we do multiple reductions ie. the results should not be merged, +    private boolean mergeResults = true;, +    /**, +     * Returns <code>true</code> iff the results should be merged., +     */, +    boolean isMergeResults() {, +        return mergeResults;, +    }, +, +    /**, +     * if set to <code>true</code> the response will contain only a merged view of the per index field capabilities. Otherwise only, +     * unmerged per index field capabilities are returned., +     */, +    void setMergeResults(boolean mergeResults) {, +        this.mergeResults = mergeResults;, +    }, +, +        if (in.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +            mergeResults = in.readBoolean();, +        } else {, +            mergeResults = true;, +        }, +        if (out.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +            out.writeBoolean(mergeResults);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexResponse.java, +import org.elasticsearch.common.io.stream.Writeable;, +public class FieldCapabilitiesIndexResponse extends ActionResponse implements Writeable {, +    FieldCapabilitiesIndexResponse(StreamInput input) throws IOException {, +        this.readFrom(input);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +import org.elasticsearch.Version;, +public final class FieldCapabilitiesRequest extends ActionRequest implements IndicesRequest.Replaceable {, +    // pkg private API mainly for cross cluster search to signal that we do multiple reductions ie. the results should not be merged, +    private boolean mergeResults = true;, +    /**, +     * Returns <code>true</code> iff the results should be merged., +     */, +    boolean isMergeResults() {, +        return mergeResults;, +    }, +, +    /**, +     * if set to <code>true</code> the response will contain only a merged view of the per index field capabilities. Otherwise only, +     * unmerged per index field capabilities are returned., +     */, +    void setMergeResults(boolean mergeResults) {, +        this.mergeResults = mergeResults;, +    }, +, +        if (in.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +            mergeResults = in.readBoolean();, +        } else {, +            mergeResults = true;, +        }, +        if (out.getVersion().onOrAfter(Version.V_5_5_0_UNRELEASED)) {, +            out.writeBoolean(mergeResults);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponse.java, +import org.elasticsearch.Version;, +import java.util.List;, +    private List<FieldCapabilitiesIndexResponse> indexResponses;, +        this(responseMap, Collections.emptyList());, +    }, +, +    FieldCapabilitiesResponse(List<FieldCapabilitiesIndexResponse> indexResponses) {, +        this(Collections.emptyMap(), indexResponses);, +    }, +, +    private FieldCapabilitiesResponse(Map<String, Map<String, FieldCapabilities>> responseMap,, +                                      List<FieldCapabilitiesIndexResponse> indexResponses) {, +        this.indexResponses = indexResponses;, +, +    /**, +     * Returns the actual per-index field caps responses, +     */, +    List<FieldCapabilitiesIndexResponse> getIndexResponses() {, +        return indexResponses;, +    }, +        if (in.getVersion().onOrAfter(Version.V_6_0_0_alpha1_UNRELEASED)) {, +            indexResponses = in.readList(FieldCapabilitiesIndexResponse::new);]