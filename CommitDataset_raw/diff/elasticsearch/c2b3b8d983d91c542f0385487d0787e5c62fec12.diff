[+++ b/TESTING.asciidoc, +or run wheezy and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty', +* wheezy aka Debian 7, the current debian oldstable distribution, +++ b/TESTING.asciidoc, +or run wheezy and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty', +* wheezy aka Debian 7, the current debian oldstable distribution, +++ b/Vagrantfile, +  config.vm.define "wheezy" do |config|, +    config.vm.box = "debian/wheezy64", +    deb_common(config), +  end, +    deb_common(config), +    # TODO switch from chef to boxcutter to provide?, +    config.vm.box = "chef/centos-6.6", +    rpm_common(config), +    # TODO switch from chef to boxcutter to provide?, +    config.vm.box = "chef/centos-7.0", +    rpm_common(config), +    rpm_common(config), +    dnf_common(config), +  config.vm.synced_folder "", "/elasticsearch", +  # Ubuntu is noisy, +  deb_common(config), +end, +, +def deb_common(config), +  provision(config, "apt-get update", "/var/cache/apt/archives/last_update",, +    "apt-get install -y", "openjdk-7-jdk"), +  provision(config, "yum check-update", "/var/cache/yum/last_update",, +    "yum install -y", "java-1.7.0-openjdk-devel"), +  provision(config, "dnf check-update", "/var/cache/dnf/last_update",, +    "dnf install -y", "java-1.8.0-openjdk-devel"), +def provision(config, update_command, update_tracking_file, install_command, java_package), +      if [ ! -f /tmp/update ] || [ "x$(find /tmp/update -mtime +0)" == "x/tmp/update" ]; then, +          sudo #{update_command} || true, +      sudo #{install_command} $1, +      sudo /tmp/bats/install.sh /usr, +      sudo rm -rf /tmp/bats, +++ b/TESTING.asciidoc, +or run wheezy and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty', +* wheezy aka Debian 7, the current debian oldstable distribution, +++ b/Vagrantfile, +  config.vm.define "wheezy" do |config|, +    config.vm.box = "debian/wheezy64", +    deb_common(config), +  end, +    deb_common(config), +    # TODO switch from chef to boxcutter to provide?, +    config.vm.box = "chef/centos-6.6", +    rpm_common(config), +    # TODO switch from chef to boxcutter to provide?, +    config.vm.box = "chef/centos-7.0", +    rpm_common(config), +    rpm_common(config), +    dnf_common(config), +  config.vm.synced_folder "", "/elasticsearch", +  # Ubuntu is noisy, +  deb_common(config), +end, +, +def deb_common(config), +  provision(config, "apt-get update", "/var/cache/apt/archives/last_update",, +    "apt-get install -y", "openjdk-7-jdk"), +  provision(config, "yum check-update", "/var/cache/yum/last_update",, +    "yum install -y", "java-1.7.0-openjdk-devel"), +  provision(config, "dnf check-update", "/var/cache/dnf/last_update",, +    "dnf install -y", "java-1.8.0-openjdk-devel"), +def provision(config, update_command, update_tracking_file, install_command, java_package), +      if [ ! -f /tmp/update ] || [ "x$(find /tmp/update -mtime +0)" == "x/tmp/update" ]; then, +          sudo #{update_command} || true, +      sudo #{install_command} $1, +      sudo /tmp/bats/install.sh /usr, +      sudo rm -rf /tmp/bats, +++ b/core/pom.xml, +                <directory>${project.basedir}/src/main/java</directory>, +                    <include>**/*.json</include>, +                    <include>**/*.yml</include>, +                <filtering>true</filtering>, +                <directory>${project.basedir}/src/test/java</directory>, +                <includes>, +                    <include>**/*.json</include>, +                    <include>**/*.yml</include>, +                    <include>**/*.txt</include>, +                    <include>**/*.properties</include>, +                </includes>, +                <filtering>true</filtering>, +            </testResource>, +            <testResource>, +                <directory>${project.basedir}/src/test/java</directory>, +                <includes>, +                    <include>**/*.gz</include>, +                </includes>, +            </testResource>, +            <testResource>, +++ b/TESTING.asciidoc, +or run wheezy and trusty:, +mvn -Dtests.vagrant -pl qa/vagrant verify -DboxesToTest='wheezy, trusty']