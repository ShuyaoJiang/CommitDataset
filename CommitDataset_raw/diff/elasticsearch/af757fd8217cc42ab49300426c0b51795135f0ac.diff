[+++ b/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                    service.fieldData().clear();, +                        service.fieldData().clearField(field);, +                        service.fieldData().clearField(field);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                    service.fieldData().clear();, +                        service.fieldData().clearField(field);, +                        service.fieldData().clearField(field);, +++ b/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long filterEvictions, long filterSize, long filterCount, long idCacheSize) {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                    service.fieldData().clear();, +                        service.fieldData().clearField(field);, +                        service.fieldData().clearField(field);, +++ b/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long filterEvictions, long filterSize, long filterCount, long idCacheSize) {, +++ b/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +    public IndexCache(Index index, @IndexSettings Settings indexSettings, FilterCache filterCache, QueryParserCache queryParserCache, IdCache idCache) {, +        latestCacheStats = new CacheStats(filterCache.evictions(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, idCache.sizeInBytes());, +            latestCacheStats = new CacheStats(filterCache.evictions(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, idCache.sizeInBytes());, +++ b/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java, +                    service.fieldData().clear();, +                        service.fieldData().clearField(field);, +                        service.fieldData().clearField(field);, +++ b/src/main/java/org/elasticsearch/index/cache/CacheStats.java, +    public CacheStats(long filterEvictions, long filterSize, long filterCount, long idCacheSize) {, +++ b/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +    public IndexCache(Index index, @IndexSettings Settings indexSettings, FilterCache filterCache, QueryParserCache queryParserCache, IdCache idCache) {, +        latestCacheStats = new CacheStats(filterCache.evictions(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, idCache.sizeInBytes());, +            latestCacheStats = new CacheStats(filterCache.evictions(), filterEntriesStats.sizeInBytes, filterEntriesStats.count, idCache.sizeInBytes());, +++ b/src/main/java/org/elasticsearch/index/percolator/PercolatorExecutor.java, +import org.elasticsearch.index.fielddata.BytesValues;, +import org.elasticsearch.index.fielddata.FieldDataType;, +import org.elasticsearch.index.fielddata.IndexFieldData;, +import org.elasticsearch.index.mapper.*;, +        private final IndexFieldData uidFieldData;, +        private BytesValues values;, +            // TODO: when we move to a UID level mapping def on the index level, we can use that one, now, its per type, and we can't easily choose one, +            this.uidFieldData = percolatorIndex.fieldData().getForField(new FieldMapper.Names(UidFieldMapper.NAME), new FieldDataType("string", "paged_bytes"));, +            BytesRef uid = values.getValue(doc);, +            values = uidFieldData.load(context).getBytesValues();]