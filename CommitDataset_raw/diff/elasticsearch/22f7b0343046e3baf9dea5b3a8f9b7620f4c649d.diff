[+++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentIdQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentIdQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/server/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java, +                indexSettings().getIndexVersionCreated().onOrAfter(Version.V_6_0_0_alpha1));, +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentIdQueryBuilderTests.java, +    protected Settings createTestIndexSettings() {, +            .put(super.createTestIndexSettings()), +++ b/server/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java, +                indexSettings().getIndexVersionCreated().onOrAfter(Version.V_6_0_0_alpha1));, +++ b/test/framework/src/main/java/org/elasticsearch/test/AbstractBuilderTestCase.java, +import com.carrotsearch.randomizedtesting.RandomizedTest;, +import com.carrotsearch.randomizedtesting.SeedUtils;, +, +import java.util.concurrent.Callable;, +    private static long nowInMillis;, +        nowInMillis = randomNonNegativeLong();, +    protected Settings createTestIndexSettings() {, +        Version indexVersionCreated = randomBoolean() ? Version.CURRENT, +    protected static IndexSettings indexSettings() {, +        return serviceHolder.idxSettings;, +    }, +, +    public void beforeTest() throws Exception {, +            assert serviceHolderWithNoType == null;, +            // we initialize the serviceHolder and serviceHolderWithNoType just once, but need some, +            // calls to the randomness source during its setup. In order to not mix these calls with, +            // the randomness source that is later used in the test method, we use the master seed during, +            // this setup, +            long masterSeed = SeedUtils.parseSeed(RandomizedTest.getContext().getRunnerSeedAsString());, +            RandomizedTest.getContext().runWithPrivateRandomness(masterSeed, (Callable<Void>) () -> {, +                serviceHolder = new ServiceHolder(nodeSettings, createTestIndexSettings(), getPlugins(), nowInMillis,, +                        AbstractBuilderTestCase.this, true);, +                serviceHolderWithNoType = new ServiceHolder(nodeSettings, createTestIndexSettings(), getPlugins(), nowInMillis,, +                        AbstractBuilderTestCase.this, false);, +                return null;, +            });, +, +        private final long nowInMillis;, +                        long nowInMillis,, +            this.nowInMillis = nowInMillis;]