[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/DefaultJDKTrustConfig.java, +import java.security.KeyStore;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.cert.CertificateException;, +            return CertParsingUtils.trustManager(getSystemTrustStore(), TrustManagerFactory.getDefaultAlgorithm());, +, +    /**, +     * When a PKCS#11 token is used as the system default keystore/truststore, we need to pass the keystore, +     * password when loading, even for reading certificates only ( as opposed to i.e. JKS keystores where, +     * we only need to pass the password for reading Private Key entries )., +     *, +     * @return the KeyStore used as truststore for PKCS#11 initialized with the password, null otherwise, +     */, +    private KeyStore getSystemTrustStore() throws KeyStoreException, CertificateException, NoSuchAlgorithmException, IOException {, +        if (System.getProperty("javax.net.ssl.trustStoreType", "").equalsIgnoreCase("PKCS11")) {, +            KeyStore keyStore = KeyStore.getInstance("PKCS11");, +            keyStore.load(null, System.getProperty("javax.net.ssl.trustStorePassword", "").toCharArray());, +            return keyStore;, +        }, +        return null;, +    }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/DefaultJDKTrustConfig.java, +import java.security.KeyStore;, +import java.security.KeyStoreException;, +import java.security.NoSuchAlgorithmException;, +import java.security.cert.CertificateException;, +            return CertParsingUtils.trustManager(getSystemTrustStore(), TrustManagerFactory.getDefaultAlgorithm());, +, +    /**, +     * When a PKCS#11 token is used as the system default keystore/truststore, we need to pass the keystore, +     * password when loading, even for reading certificates only ( as opposed to i.e. JKS keystores where, +     * we only need to pass the password for reading Private Key entries )., +     *, +     * @return the KeyStore used as truststore for PKCS#11 initialized with the password, null otherwise, +     */, +    private KeyStore getSystemTrustStore() throws KeyStoreException, CertificateException, NoSuchAlgorithmException, IOException {, +        if (System.getProperty("javax.net.ssl.trustStoreType", "").equalsIgnoreCase("PKCS11")) {, +            KeyStore keyStore = KeyStore.getInstance("PKCS11");, +            keyStore.load(null, System.getProperty("javax.net.ssl.trustStorePassword", "").toCharArray());, +            return keyStore;, +        }, +        return null;, +    }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ssl/SSLConfiguration.java, +        if (System.getProperty("javax.net.ssl.keyStore") != null && System.getProperty("javax.net.ssl.keyStore").equals("NONE") == false) {, +        } else if (global == null && System.getProperty("javax.net.ssl.trustStore") != null, +            && System.getProperty("javax.net.ssl.trustStore").equals("NONE") == false) {]