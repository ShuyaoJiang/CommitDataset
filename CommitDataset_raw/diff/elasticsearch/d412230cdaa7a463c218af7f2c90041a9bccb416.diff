[+++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +                public Double execute() {, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +                public Double execute() {, +++ b/server/src/main/java/org/elasticsearch/script/BucketAggregationScript.java, +    public abstract Double execute();, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +                public Double execute() {, +++ b/server/src/main/java/org/elasticsearch/script/BucketAggregationScript.java, +    public abstract Double execute();, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregator.java, +                Double returned = factory.newInstance(vars).execute();, +                if (returned == null) {, +                    newBuckets.add(bucket);, +                } else {, +        }, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +                public Double execute() {, +++ b/server/src/main/java/org/elasticsearch/script/BucketAggregationScript.java, +    public abstract Double execute();, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregator.java, +                Double returned = factory.newInstance(vars).execute();, +                if (returned == null) {, +                    newBuckets.add(bucket);, +                } else {, +        }, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketScriptIT.java, +            scripts.put("return null", vars -> null);, +, +    public void testInlineScriptReturnNull() {, +        SearchResponse response = client(), +            .prepareSearch("idx"), +            .addAggregation(, +                histogram("histo"), +                    .field(FIELD_1_NAME).interval(interval), +                    .subAggregation(, +                        bucketScript(, +                            "nullField",, +                            new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "return null", Collections.emptyMap()), +                        ), +                    ), +            ).execute().actionGet();, +, +        assertSearchResponse(response);, +, +        Histogram histo = response.getAggregations().get("histo");, +        assertThat(histo, notNullValue());, +        assertThat(histo.getName(), equalTo("histo"));, +        List<? extends Histogram.Bucket> buckets = histo.getBuckets();, +, +        for (int i = 0; i < buckets.size(); ++i) {, +            Histogram.Bucket bucket = buckets.get(i);, +            assertNull(bucket.getAggregations().get("nullField"));, +        }, +    }, +, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +                public Double execute() {, +++ b/server/src/main/java/org/elasticsearch/script/BucketAggregationScript.java, +    public abstract Double execute();, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregator.java, +                Double returned = factory.newInstance(vars).execute();, +                if (returned == null) {, +                    newBuckets.add(bucket);, +                } else {, +        }, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketScriptIT.java, +            scripts.put("return null", vars -> null);, +, +    public void testInlineScriptReturnNull() {, +        SearchResponse response = client(), +            .prepareSearch("idx"), +            .addAggregation(, +                histogram("histo"), +                    .field(FIELD_1_NAME).interval(interval), +                    .subAggregation(, +                        bucketScript(, +                            "nullField",, +                            new Script(ScriptType.INLINE, CustomScriptPlugin.NAME, "return null", Collections.emptyMap()), +                        ), +                    ), +            ).execute().actionGet();, +, +        assertSearchResponse(response);, +, +        Histogram histo = response.getAggregations().get("histo");, +        assertThat(histo, notNullValue());, +        assertThat(histo.getName(), equalTo("histo"));, +        List<? extends Histogram.Bucket> buckets = histo.getBuckets();, +, +        for (int i = 0; i < buckets.size(); ++i) {, +            Histogram.Bucket bucket = buckets.get(i);, +            assertNull(bucket.getAggregations().get("nullField"));, +        }, +    }, +, +++ b/test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java, +                public Double execute() {, +                    Object ret = script.apply(getParams());, +                    if (ret == null) {]