[+++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public static DeleteResponse fromXContent(XContentParser parser) {, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public static DeleteResponse fromXContent(XContentParser parser) {, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public static DeleteResponse fromXContent(XContentParser parser) {, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +++ b/core/src/test/java/org/elasticsearch/action/delete/DeleteResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();, +        BytesReference deleteResponseBytes = toXContent(deleteResponse, xContentType, humanReadable);, +        BytesReference parsedDeleteResponseBytes = toXContent(parsedDeleteResponse, xContentType, humanReadable);, +        long seqNo = randomFrom(SequenceNumbersService.UNASSIGNED_SEQ_NO, randomNonNegativeLong(), (long) randomIntBetween(0, 10000));, +        long version = randomBoolean() ? randomNonNegativeLong() : randomIntBetween(0, 10000);, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public static DeleteResponse fromXContent(XContentParser parser) {, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +++ b/core/src/test/java/org/elasticsearch/action/delete/DeleteResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();, +        BytesReference deleteResponseBytes = toXContent(deleteResponse, xContentType, humanReadable);, +        BytesReference parsedDeleteResponseBytes = toXContent(parsedDeleteResponse, xContentType, humanReadable);, +        long seqNo = randomFrom(SequenceNumbersService.UNASSIGNED_SEQ_NO, randomNonNegativeLong(), (long) randomIntBetween(0, 10000));, +        long version = randomBoolean() ? randomNonNegativeLong() : randomIntBetween(0, 10000);, +++ b/core/src/test/java/org/elasticsearch/action/get/GetResponseTests.java, +        boolean humanReadable = randomBoolean();, +        BytesReference originalBytes = toXContent(getResponse, xContentType, humanReadable);, +        BytesReference finalBytes = toXContent(parsedGetResponse, xContentType, humanReadable);, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public static DeleteResponse fromXContent(XContentParser parser) {, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +++ b/core/src/test/java/org/elasticsearch/action/delete/DeleteResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();, +        BytesReference deleteResponseBytes = toXContent(deleteResponse, xContentType, humanReadable);, +        BytesReference parsedDeleteResponseBytes = toXContent(parsedDeleteResponse, xContentType, humanReadable);, +        long seqNo = randomFrom(SequenceNumbersService.UNASSIGNED_SEQ_NO, randomNonNegativeLong(), (long) randomIntBetween(0, 10000));, +        long version = randomBoolean() ? randomNonNegativeLong() : randomIntBetween(0, 10000);, +++ b/core/src/test/java/org/elasticsearch/action/get/GetResponseTests.java, +        boolean humanReadable = randomBoolean();, +        BytesReference originalBytes = toXContent(getResponse, xContentType, humanReadable);, +        BytesReference finalBytes = toXContent(parsedGetResponse, xContentType, humanReadable);, +++ b/core/src/test/java/org/elasticsearch/action/index/IndexResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();, +        BytesReference indexResponseBytes = toXContent(indexResponse, xContentType, humanReadable);, +        BytesReference parsedIndexResponseBytes = toXContent(parsedIndexResponse, xContentType, humanReadable);, +    @SuppressWarnings("unchecked"), +        long seqNo = randomFrom(SequenceNumbersService.UNASSIGNED_SEQ_NO, randomNonNegativeLong(), (long) randomIntBetween(0, 10000));, +        long version = randomBoolean() ? randomNonNegativeLong() : randomIntBetween(0, 10000);, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public static DeleteResponse fromXContent(XContentParser parser) {, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +++ b/core/src/test/java/org/elasticsearch/action/delete/DeleteResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();, +        BytesReference deleteResponseBytes = toXContent(deleteResponse, xContentType, humanReadable);, +        BytesReference parsedDeleteResponseBytes = toXContent(parsedDeleteResponse, xContentType, humanReadable);, +        long seqNo = randomFrom(SequenceNumbersService.UNASSIGNED_SEQ_NO, randomNonNegativeLong(), (long) randomIntBetween(0, 10000));, +        long version = randomBoolean() ? randomNonNegativeLong() : randomIntBetween(0, 10000);, +++ b/core/src/test/java/org/elasticsearch/action/get/GetResponseTests.java, +        boolean humanReadable = randomBoolean();, +        BytesReference originalBytes = toXContent(getResponse, xContentType, humanReadable);, +        BytesReference finalBytes = toXContent(parsedGetResponse, xContentType, humanReadable);, +++ b/core/src/test/java/org/elasticsearch/action/index/IndexResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();, +        BytesReference indexResponseBytes = toXContent(indexResponse, xContentType, humanReadable);, +        BytesReference parsedIndexResponseBytes = toXContent(parsedIndexResponse, xContentType, humanReadable);, +    @SuppressWarnings("unchecked"), +        long seqNo = randomFrom(SequenceNumbersService.UNASSIGNED_SEQ_NO, randomNonNegativeLong(), (long) randomIntBetween(0, 10000));, +        long version = randomBoolean() ? randomNonNegativeLong() : randomIntBetween(0, 10000);, +++ b/core/src/test/java/org/elasticsearch/action/search/ShardSearchFailureTests.java, +        BytesReference xContent = toXContent(failure, XContentType.JSON, randomBoolean());, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java, +    public static DeleteResponse fromXContent(XContentParser parser) {, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +++ b/core/src/test/java/org/elasticsearch/action/delete/DeleteResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();, +        BytesReference deleteResponseBytes = toXContent(deleteResponse, xContentType, humanReadable);, +        BytesReference parsedDeleteResponseBytes = toXContent(parsedDeleteResponse, xContentType, humanReadable);, +        long seqNo = randomFrom(SequenceNumbersService.UNASSIGNED_SEQ_NO, randomNonNegativeLong(), (long) randomIntBetween(0, 10000));, +        long version = randomBoolean() ? randomNonNegativeLong() : randomIntBetween(0, 10000);, +++ b/core/src/test/java/org/elasticsearch/action/get/GetResponseTests.java, +        boolean humanReadable = randomBoolean();, +        BytesReference originalBytes = toXContent(getResponse, xContentType, humanReadable);, +        BytesReference finalBytes = toXContent(parsedGetResponse, xContentType, humanReadable);, +++ b/core/src/test/java/org/elasticsearch/action/index/IndexResponseTests.java, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +    public void testToXContent() {, +        boolean humanReadable = randomBoolean();]