[+++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/HttpESExporter.java, +import java.io.*;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            template = out.toByteArray();, +                ByteArrayOutputStream out = new ByteArrayOutputStream();, +                Streams.copy(is, out);, +                byte[] existingTemplate = out.toByteArray();, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/HttpESExporter.java, +import java.io.*;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            template = out.toByteArray();, +                ByteArrayOutputStream out = new ByteArrayOutputStream();, +                Streams.copy(is, out);, +                byte[] existingTemplate = out.toByteArray();, +++ b/shield/src/main/java/org/elasticsearch/shield/audit/index/IndexAuditTrail.java, +import org.elasticsearch.common.io.Streams;, +import java.io.ByteArrayOutputStream;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            final byte[] template = out.toByteArray();, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/HttpESExporter.java, +import java.io.*;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            template = out.toByteArray();, +                ByteArrayOutputStream out = new ByteArrayOutputStream();, +                Streams.copy(is, out);, +                byte[] existingTemplate = out.toByteArray();, +++ b/shield/src/main/java/org/elasticsearch/shield/audit/index/IndexAuditTrail.java, +import org.elasticsearch.common.io.Streams;, +import java.io.ByteArrayOutputStream;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            final byte[] template = out.toByteArray();, +++ b/shield/src/main/java/org/elasticsearch/shield/authc/esusers/tool/ESUsersTool.java, +import com.google.common.base.Joiner;, +import org.elasticsearch.common.util.ArrayUtils;, +            String[] allRoles = ArrayUtils.concat(addRoles, removeRoles, String.class);, +                    terminal.println("%-15s: %s", username, Joiner.on(",").useForNull("-").join(markedRoles));, +                    terminal.println("%-15s: %s", entry.getKey(), Joiner.on(",").join(markedRoles));, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/HttpESExporter.java, +import java.io.*;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            template = out.toByteArray();, +                ByteArrayOutputStream out = new ByteArrayOutputStream();, +                Streams.copy(is, out);, +                byte[] existingTemplate = out.toByteArray();, +++ b/shield/src/main/java/org/elasticsearch/shield/audit/index/IndexAuditTrail.java, +import org.elasticsearch.common.io.Streams;, +import java.io.ByteArrayOutputStream;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            final byte[] template = out.toByteArray();, +++ b/shield/src/main/java/org/elasticsearch/shield/authc/esusers/tool/ESUsersTool.java, +import com.google.common.base.Joiner;, +import org.elasticsearch.common.util.ArrayUtils;, +            String[] allRoles = ArrayUtils.concat(addRoles, removeRoles, String.class);, +                    terminal.println("%-15s: %s", username, Joiner.on(",").useForNull("-").join(markedRoles));, +                    terminal.println("%-15s: %s", entry.getKey(), Joiner.on(",").join(markedRoles));, +++ b/shield/src/main/java/org/elasticsearch/shield/authz/Permission.java, +    class Global implements Permission {, +                return Arrays.asList(groups).iterator();, +            static class Iter implements Iterator<Group> {, +                @Override, +                public void remove() {, +                    throw new UnsupportedOperationException();, +                }, +, +++ b/marvel/src/main/java/org/elasticsearch/marvel/agent/exporter/HttpESExporter.java, +import java.io.*;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            template = out.toByteArray();, +                ByteArrayOutputStream out = new ByteArrayOutputStream();, +                Streams.copy(is, out);, +                byte[] existingTemplate = out.toByteArray();, +++ b/shield/src/main/java/org/elasticsearch/shield/audit/index/IndexAuditTrail.java, +import org.elasticsearch.common.io.Streams;, +import java.io.ByteArrayOutputStream;, +            ByteArrayOutputStream out = new ByteArrayOutputStream();, +            Streams.copy(is, out);, +            final byte[] template = out.toByteArray();, +++ b/shield/src/main/java/org/elasticsearch/shield/authc/esusers/tool/ESUsersTool.java, +import com.google.common.base.Joiner;, +import org.elasticsearch.common.util.ArrayUtils;, +            String[] allRoles = ArrayUtils.concat(addRoles, removeRoles, String.class);, +                    terminal.println("%-15s: %s", username, Joiner.on(",").useForNull("-").join(markedRoles));, +                    terminal.println("%-15s: %s", entry.getKey(), Joiner.on(",").join(markedRoles));, +++ b/shield/src/main/java/org/elasticsearch/shield/authz/Permission.java, +    class Global implements Permission {, +                return Arrays.asList(groups).iterator();, +            static class Iter implements Iterator<Group> {, +                @Override, +                public void remove() {, +                    throw new UnsupportedOperationException();, +                }, +]