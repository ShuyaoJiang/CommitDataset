[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.collect.ImmutableMap;, +    private final ImmutableMap<String, Filter> namedFilters;, +, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +        this.namedFilters = namedFilters;, +    }, +, +    public ParsedQuery(Query query, ParsedQuery parsedQuery) {, +        this.query = query;, +        this.namedFilters = parsedQuery.namedFilters;, +, +    public ImmutableMap<String, Filter> namedFilters() {, +        return this.namedFilters;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.collect.ImmutableMap;, +    private final ImmutableMap<String, Filter> namedFilters;, +, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +        this.namedFilters = namedFilters;, +    }, +, +    public ParsedQuery(Query query, ParsedQuery parsedQuery) {, +        this.query = query;, +        this.namedFilters = parsedQuery.namedFilters;, +, +    public ImmutableMap<String, Filter> namedFilters() {, +        return this.namedFilters;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.Query;, +import org.elasticsearch.common.collect.ImmutableList;, +import org.elasticsearch.common.lucene.search.AndFilter;, +        return new AndFilter(ImmutableList.of(parseContext.cacheFilterIfPossible(docMapper.typeFilter()), filter));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.collect.ImmutableMap;, +    private final ImmutableMap<String, Filter> namedFilters;, +, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +        this.namedFilters = namedFilters;, +    }, +, +    public ParsedQuery(Query query, ParsedQuery parsedQuery) {, +        this.query = query;, +        this.namedFilters = parsedQuery.namedFilters;, +, +    public ImmutableMap<String, Filter> namedFilters() {, +        return this.namedFilters;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.Query;, +import org.elasticsearch.common.collect.ImmutableList;, +import org.elasticsearch.common.lucene.search.AndFilter;, +        return new AndFilter(ImmutableList.of(parseContext.cacheFilterIfPossible(docMapper.typeFilter()), filter));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/AndFilterBuilder.java, +    private String filterName;, +, +    /**, +     * Sets the filter name for the filter that can be used when searching for matched_filters per hit., +     */, +    public AndFilterBuilder filterName(String filterName) {, +        this.filterName = filterName;, +        return this;, +    }, +, +            builder.field("_cache", cache);, +        }, +        if (filterName != null) {, +            builder.field("_name", filterName);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/ParsedQuery.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.collect.ImmutableMap;, +    private final ImmutableMap<String, Filter> namedFilters;, +, +    public ParsedQuery(Query query, ImmutableMap<String, Filter> namedFilters) {, +        this.namedFilters = namedFilters;, +    }, +, +    public ParsedQuery(Query query, ParsedQuery parsedQuery) {, +        this.query = query;, +        this.namedFilters = parsedQuery.namedFilters;, +, +    public ImmutableMap<String, Filter> namedFilters() {, +        return this.namedFilters;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.Query;, +import org.elasticsearch.common.collect.ImmutableList;, +import org.elasticsearch.common.lucene.search.AndFilter;, +        return new AndFilter(ImmutableList.of(parseContext.cacheFilterIfPossible(docMapper.typeFilter()), filter));]