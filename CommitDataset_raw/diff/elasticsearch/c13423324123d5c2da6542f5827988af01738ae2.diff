[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import java.util.Arrays;, +import java.util.HashSet;, +    private static ImmutableSet<String> dynamicSettings = ImmutableSet.<String>builder(), +            .add(IndexMetaData.SETTING_NUMBER_OF_REPLICAS), +            .add(IndexMetaData.SETTING_AUTO_EXPAND_REPLICAS), +            .build();, +, +    public static ImmutableSet<String> dynamicSettings() {, +        return dynamicSettings;, +    }, +, +    public static synchronized void addDynamicSettings(String... settings) {, +        HashSet<String> updatedSettings = new HashSet<String>(dynamicSettings);, +        updatedSettings.addAll(Arrays.asList(settings));, +        dynamicSettings = ImmutableSet.copyOf(updatedSettings);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import java.util.Arrays;, +import java.util.HashSet;, +    private static ImmutableSet<String> dynamicSettings = ImmutableSet.<String>builder(), +            .add(IndexMetaData.SETTING_NUMBER_OF_REPLICAS), +            .add(IndexMetaData.SETTING_AUTO_EXPAND_REPLICAS), +            .build();, +, +    public static ImmutableSet<String> dynamicSettings() {, +        return dynamicSettings;, +    }, +, +    public static synchronized void addDynamicSettings(String... settings) {, +        HashSet<String> updatedSettings = new HashSet<String>(dynamicSettings);, +        updatedSettings.addAll(Arrays.asList(settings));, +        dynamicSettings = ImmutableSet.copyOf(updatedSettings);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.common.collect.Sets;, +import java.util.Set;, +            if (entry.getKey().equals("index")) {, +                continue;, +            }, +        Set<String> removedSettings = Sets.newHashSet();, +        for (String key : updatedSettingsBuilder.internalMap().keySet()) {, +            if (!IndexMetaData.dynamicSettings().contains(key)) {, +                removedSettings.add(key);, +        }, +        if (!removedSettings.isEmpty()) {, +            logger.warn("{} ignoring non dynamic index level settings: {}", indices, removedSettings);, +            for (String removedSetting : removedSettings) {, +                updatedSettingsBuilder.remove(removedSetting);, +            }, +        }, +        final Settings settings = updatedSettingsBuilder.build();, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import java.util.Arrays;, +import java.util.HashSet;, +    private static ImmutableSet<String> dynamicSettings = ImmutableSet.<String>builder(), +            .add(IndexMetaData.SETTING_NUMBER_OF_REPLICAS), +            .add(IndexMetaData.SETTING_AUTO_EXPAND_REPLICAS), +            .build();, +, +    public static ImmutableSet<String> dynamicSettings() {, +        return dynamicSettings;, +    }, +, +    public static synchronized void addDynamicSettings(String... settings) {, +        HashSet<String> updatedSettings = new HashSet<String>(dynamicSettings);, +        updatedSettings.addAll(Arrays.asList(settings));, +        dynamicSettings = ImmutableSet.copyOf(updatedSettings);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.common.collect.Sets;, +import java.util.Set;, +            if (entry.getKey().equals("index")) {, +                continue;, +            }, +        Set<String> removedSettings = Sets.newHashSet();, +        for (String key : updatedSettingsBuilder.internalMap().keySet()) {, +            if (!IndexMetaData.dynamicSettings().contains(key)) {, +                removedSettings.add(key);, +        }, +        if (!removedSettings.isEmpty()) {, +            logger.warn("{} ignoring non dynamic index level settings: {}", indices, removedSettings);, +            for (String removedSetting : removedSettings) {, +                updatedSettingsBuilder.remove(removedSetting);, +            }, +        }, +        final Settings settings = updatedSettingsBuilder.build();, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +import java.util.Collections;, +import java.util.LinkedHashMap;, +import java.util.List;, +import java.util.Map;, +import java.util.Properties;, +        public Map<String, String> internalMap() {, +            return this.map;]