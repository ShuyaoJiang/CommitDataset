[+++ b/src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java, +    public void testLocalNodeMasterListenerCallbacks() throws Exception {, +        ClusterService clusterService = internalCluster().getInstance(ClusterService.class);, +        MasterAwareService testService = internalCluster().getInstance(MasterAwareService.class);, +        assertThat(clusterService.state().nodes().masterNode(), notNullValue());, +        assertThat(clusterService.state().nodes().localNodeMaster(), is(true));, +        assertThat(testService.master(), is(true));, +        final ClusterService clusterService1 = internalCluster().getInstance(ClusterService.class, node_1);, +        MasterAwareService testService1 = internalCluster().getInstance(MasterAwareService.class, node_1);, +        assertThat(clusterService1.state().nodes().localNodeMaster(), is(false));, +        assertThat(testService1.master(), is(false));, +        assertThat(clusterService1.state().nodes().localNodeMaster(), is(true));, +        assertThat(testService1.master(), is(true));, +                return clusterService1.state().nodes().masterNode() == null;, +        assertThat(testService1.master(), is(false));, +        String node_2 = internalCluster().startNode(newSettings);, +        ClusterService clusterService2 = internalCluster().getInstance(ClusterService.class, node_2);, +        MasterAwareService testService2 = internalCluster().getInstance(MasterAwareService.class, node_2);, +        assertThat(clusterService2.state().nodes().masterNode(), is(notNullValue()));, +        if (node_2.equals(clusterService2.state().nodes().masterNode().name())) {, +        } else {, +            assertThat(testService1.master(), is(true));, +            assertThat(testService2.master(), is(false));]