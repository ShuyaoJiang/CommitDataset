[+++ b/distribution/src/bin/elasticsearch, +++ b/distribution/src/bin/elasticsearch, +++ b/distribution/src/bin/elasticsearch-env, +, +cd "$ES_HOME", +++ b/distribution/src/bin/elasticsearch, +++ b/distribution/src/bin/elasticsearch-env, +, +cd "$ES_HOME", +++ b/distribution/src/bin/elasticsearch-env.bat, +, +cd /d "%ES_HOME%", +++ b/distribution/src/bin/elasticsearch, +++ b/distribution/src/bin/elasticsearch-env, +, +cd "$ES_HOME", +++ b/distribution/src/bin/elasticsearch-env.bat, +, +cd /d "%ES_HOME%", +++ b/distribution/src/bin/elasticsearch.bat, +++ b/distribution/src/bin/elasticsearch, +++ b/distribution/src/bin/elasticsearch-env, +, +cd "$ES_HOME", +++ b/distribution/src/bin/elasticsearch-env.bat, +, +cd /d "%ES_HOME%", +++ b/distribution/src/bin/elasticsearch.bat, +++ b/qa/vagrant/src/main/java/org/elasticsearch/packaging/test/ArchiveTestCase.java, +    public void test91ElasticsearchShardCliPackaging() {, +            final Result result = sh.run(bin.elasticsearchShard + " -h");, +    public void test92ElasticsearchNodeCliPackaging() {, +    public void test93ElasticsearchNodeCustomDataPathAndNotEsHomeWorkDir() throws IOException {, +        assumeThat(installation, is(notNullValue()));, +, +        Path relativeDataPath = installation.data.relativize(installation.home);, +        append(installation.config("elasticsearch.yml"), "path.data: " + relativeDataPath);, +, +        Archives.runElasticsearch(installation);, +        Archives.stopElasticsearch(installation);, +, +        final Shell sh = new Shell(getTempDir());, +, +        Result result = sh.run("echo y | " + installation.executables().elasticsearchNode + " unsafe-bootstrap");, +        assertThat(result.stdout, containsString("Master node was successfully bootstrapped"));, +    }, +]