[+++ b/core/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestionOptionTests.java, +import java.util.function.Predicate;, +import static org.elasticsearch.test.XContentTestUtils.insertRandomFields;, +        doTestFromXContent(false);, +    }, +, +    public void testFromXContentWithRandomFields() throws IOException {, +        doTestFromXContent(true);, +    }, +, +    private void doTestFromXContent(boolean addRandomFields) throws IOException {, +        BytesReference mutated;, +        if (addRandomFields) {, +            // "contexts" is an object consisting of key/array pairs, we shouldn't add anything random there, +            // also there can be inner search hits fields inside this option, we need to exclude another couple of paths, +            // where we cannot add random stuff, +            Predicate<String> excludeFilter = (path) -> (path.endsWith(CompletionSuggestion.Entry.Option.CONTEXTS.getPreferredName()), +                    || path.endsWith("highlight") || path.endsWith("fields") || path.contains("_source") || path.contains("inner_hits"));, +            mutated = insertRandomFields(xContentType, originalBytes, excludeFilter, random());, +        } else {, +            mutated = originalBytes;, +        try (XContentParser parser = createParser(xContentType.xContent(), mutated)) {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestionOptionTests.java, +import java.util.function.Predicate;, +import static org.elasticsearch.test.XContentTestUtils.insertRandomFields;, +        doTestFromXContent(false);, +    }, +, +    public void testFromXContentWithRandomFields() throws IOException {, +        doTestFromXContent(true);, +    }, +, +    private void doTestFromXContent(boolean addRandomFields) throws IOException {, +        BytesReference mutated;, +        if (addRandomFields) {, +            // "contexts" is an object consisting of key/array pairs, we shouldn't add anything random there, +            // also there can be inner search hits fields inside this option, we need to exclude another couple of paths, +            // where we cannot add random stuff, +            Predicate<String> excludeFilter = (path) -> (path.endsWith(CompletionSuggestion.Entry.Option.CONTEXTS.getPreferredName()), +                    || path.endsWith("highlight") || path.endsWith("fields") || path.contains("_source") || path.contains("inner_hits"));, +            mutated = insertRandomFields(xContentType, originalBytes, excludeFilter, random());, +        } else {, +            mutated = originalBytes;, +        try (XContentParser parser = createParser(xContentType.xContent(), mutated)) {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestTests.java, +        BytesReference originalBytes = toShuffledXContent(suggest, xContentType, params, humanReadable);, +++ b/core/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestionOptionTests.java, +import java.util.function.Predicate;, +import static org.elasticsearch.test.XContentTestUtils.insertRandomFields;, +        doTestFromXContent(false);, +    }, +, +    public void testFromXContentWithRandomFields() throws IOException {, +        doTestFromXContent(true);, +    }, +, +    private void doTestFromXContent(boolean addRandomFields) throws IOException {, +        BytesReference mutated;, +        if (addRandomFields) {, +            // "contexts" is an object consisting of key/array pairs, we shouldn't add anything random there, +            // also there can be inner search hits fields inside this option, we need to exclude another couple of paths, +            // where we cannot add random stuff, +            Predicate<String> excludeFilter = (path) -> (path.endsWith(CompletionSuggestion.Entry.Option.CONTEXTS.getPreferredName()), +                    || path.endsWith("highlight") || path.endsWith("fields") || path.contains("_source") || path.contains("inner_hits"));, +            mutated = insertRandomFields(xContentType, originalBytes, excludeFilter, random());, +        } else {, +            mutated = originalBytes;, +        try (XContentParser parser = createParser(xContentType.xContent(), mutated)) {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestTests.java, +        BytesReference originalBytes = toShuffledXContent(suggest, xContentType, params, humanReadable);, +++ b/core/src/test/java/org/elasticsearch/search/suggest/SuggestionEntryTests.java, +import java.util.function.Predicate;, +import static org.elasticsearch.test.XContentTestUtils.insertRandomFields;, +        doTestFromXContent(false);, +    }, +, +    public void testFromXContentWithRandomFields() throws IOException {, +        doTestFromXContent(true);, +    }, +, +    @SuppressWarnings("unchecked"), +    private void doTestFromXContent(boolean addRandomFields) throws IOException {, +            BytesReference mutated;, +            if (addRandomFields) {, +                // "contexts" is an object consisting of key/array pairs, we shouldn't add anything random there, +                // also there can be inner search hits fields inside this option, we need to exclude another couple of paths, +                // where we cannot add random stuff, +                Predicate<String> excludeFilter = (, +                        path) -> (path.endsWith(CompletionSuggestion.Entry.Option.CONTEXTS.getPreferredName()) || path.endsWith("highlight"), +                                || path.endsWith("fields") || path.contains("_source") || path.contains("inner_hits"));, +                mutated = insertRandomFields(xContentType, originalBytes, excludeFilter, random());, +            } else {, +                mutated = originalBytes;, +            }, +            try (XContentParser parser = createParser(xContentType.xContent(), mutated)) {, +++ b/core/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestionOptionTests.java, +import java.util.function.Predicate;, +import static org.elasticsearch.test.XContentTestUtils.insertRandomFields;, +        doTestFromXContent(false);, +    }]