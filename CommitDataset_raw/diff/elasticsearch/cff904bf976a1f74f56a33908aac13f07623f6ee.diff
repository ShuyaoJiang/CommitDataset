[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +            Setting.boolSetting("cluster.routing.use_adaptive_replica_selection", true,, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +            Setting.boolSetting("cluster.routing.use_adaptive_replica_selection", true,, +++ b/docs/reference/how-to/search-speed.asciidoc, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +            Setting.boolSetting("cluster.routing.use_adaptive_replica_selection", true,, +++ b/docs/reference/how-to/search-speed.asciidoc, +++ b/docs/reference/migration/migrate_7_0.asciidoc, +* <<breaking_70_search_changes>>, +include::migrate_7_0/search.asciidoc[], +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +            Setting.boolSetting("cluster.routing.use_adaptive_replica_selection", true,, +++ b/docs/reference/how-to/search-speed.asciidoc, +++ b/docs/reference/migration/migrate_7_0.asciidoc, +* <<breaking_70_search_changes>>, +include::migrate_7_0/search.asciidoc[], +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +[[breaking_70_search_changes]], +=== Search changes, +, +==== Adaptive replica selection enabled by default, +, +Adaptive replica selection has been enabled by default. If you wish to return to, +the older round robin of search requests, you can use the, +`cluster.routing.use_adaptive_replica_selection` setting:, +, +[source,js], +--------------------------------------------------, +PUT /_cluster/settings, +{, +    "transient": {, +        "cluster.routing.use_adaptive_replica_selection": false, +    }, +}, +--------------------------------------------------, +// CONSOLE, +, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +            Setting.boolSetting("cluster.routing.use_adaptive_replica_selection", true,, +++ b/docs/reference/how-to/search-speed.asciidoc, +++ b/docs/reference/migration/migrate_7_0.asciidoc, +* <<breaking_70_search_changes>>, +include::migrate_7_0/search.asciidoc[], +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +[[breaking_70_search_changes]], +=== Search changes, +, +==== Adaptive replica selection enabled by default, +, +Adaptive replica selection has been enabled by default. If you wish to return to, +the older round robin of search requests, you can use the, +`cluster.routing.use_adaptive_replica_selection` setting:, +, +[source,js], +--------------------------------------------------, +PUT /_cluster/settings, +{, +    "transient": {, +        "cluster.routing.use_adaptive_replica_selection": false, +    }, +}, +--------------------------------------------------, +// CONSOLE, +, +++ b/docs/reference/search.asciidoc, +When executing a search, Elasticsearch will pick the "best" copy of the data, +based on the <<search-adaptive-replica,adaptive replica selection>> formula., +Which shards will be searched on can also be controlled by providing the, +`routing` parameter. For example, when indexing tweets, the routing value can be, +the user name:, +By default, Elasticsearch will use what is called adaptive replica selection., +This allows the coordinating node to send the request to the copy deemed "best", +based on a number of criteria:, +This can be turned off by changing the dynamic cluster setting, +`cluster.routing.use_adaptive_replica_selection` from `true` to `false`:, +        "cluster.routing.use_adaptive_replica_selection": false, +If adaptive replica selection is turned off, searches are sent to the, +index/indices shards in a round robin fashion between all copies of the data, +(primaries and replicas)., +]