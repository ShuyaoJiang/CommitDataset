[+++ b/plugin/core/build.gradle, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +import org.elasticsearch.gradle.BuildPlugin, +, +// xpack modules are installed in real clusters as the meta plugin, so, +// installing them as individual plugins for integ tests doesn't make sense,, +// so we disable integ tests, +integTest.enabled = false, +, +// Instead we create a separate task to run the, +// tests based on ESIntegTestCase, +task internalClusterTest(type: RandomizedTestingTask,, +                         group: JavaBasePlugin.VERIFICATION_GROUP,, +                         description: 'Multi-node tests',, +                         dependsOn: test.dependsOn) {, +  configure(BuildPlugin.commonTestConfig(project)), +  classpath = project.test.classpath, +  testClassesDir = project.test.testClassesDir, +  include '**/*IT.class', +  systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +check.dependsOn internalClusterTest , +internalClusterTest.mustRunAfter test, +, +// also add an "alias" task to make typing on the command line easier, +task icTest {, +  dependsOn internalClusterTest, +}, +++ b/plugin/core/build.gradle, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +import org.elasticsearch.gradle.BuildPlugin, +, +// xpack modules are installed in real clusters as the meta plugin, so, +// installing them as individual plugins for integ tests doesn't make sense,, +// so we disable integ tests, +integTest.enabled = false, +, +// Instead we create a separate task to run the, +// tests based on ESIntegTestCase, +task internalClusterTest(type: RandomizedTestingTask,, +                         group: JavaBasePlugin.VERIFICATION_GROUP,, +                         description: 'Multi-node tests',, +                         dependsOn: test.dependsOn) {, +  configure(BuildPlugin.commonTestConfig(project)), +  classpath = project.test.classpath, +  testClassesDir = project.test.testClassesDir, +  include '**/*IT.class', +  systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +check.dependsOn internalClusterTest , +internalClusterTest.mustRunAfter test, +, +// also add an "alias" task to make typing on the command line easier, +task icTest {, +  dependsOn internalClusterTest, +}, +++ b/plugin/core/src/test/java/org/elasticsearch/license/TestUtils.java, +import java.io.InputStream;, +import java.nio.file.Files;, +import java.nio.file.StandardCopyOption;, +import static org.apache.lucene.util.LuceneTestCase.createTempFile;, +        Path resourceFile = createTempFile();, +        try (InputStream resourceInput = TestUtils.class.getResourceAsStream(resource)) {, +            Files.copy(resourceInput, resourceFile, StandardCopyOption.REPLACE_EXISTING);, +        }, +        return resourceFile;, +++ b/plugin/core/build.gradle, +import com.carrotsearch.gradle.junit4.RandomizedTestingTask, +import org.elasticsearch.gradle.BuildPlugin, +, +// xpack modules are installed in real clusters as the meta plugin, so, +// installing them as individual plugins for integ tests doesn't make sense,, +// so we disable integ tests, +integTest.enabled = false, +, +// Instead we create a separate task to run the, +// tests based on ESIntegTestCase, +task internalClusterTest(type: RandomizedTestingTask,, +                         group: JavaBasePlugin.VERIFICATION_GROUP,, +                         description: 'Multi-node tests',, +                         dependsOn: test.dependsOn) {, +  configure(BuildPlugin.commonTestConfig(project)), +  classpath = project.test.classpath, +  testClassesDir = project.test.testClassesDir, +  include '**/*IT.class', +  systemProperty 'es.set.netty.runtime.available.processors', 'false', +}, +check.dependsOn internalClusterTest , +internalClusterTest.mustRunAfter test, +, +// also add an "alias" task to make typing on the command line easier, +task icTest {, +  dependsOn internalClusterTest, +}, +++ b/plugin/core/src/test/java/org/elasticsearch/license/TestUtils.java, +import java.io.InputStream;, +import java.nio.file.Files;, +import java.nio.file.StandardCopyOption;, +import static org.apache.lucene.util.LuceneTestCase.createTempFile;, +        Path resourceFile = createTempFile();]