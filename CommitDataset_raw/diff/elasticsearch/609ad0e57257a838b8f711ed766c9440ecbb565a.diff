[+++ b/src/main/java/org/elasticsearch/Version.java, +    public boolean onOrAfter(Version version) {, +    public boolean before(Version version) {, +        return version.id > id;, +    }, +, +    public boolean onOrBefore(Version version) {, +        return version.id >= id;, +    }, +, +++ b/src/main/java/org/elasticsearch/Version.java, +    public boolean onOrAfter(Version version) {, +    public boolean before(Version version) {, +        return version.id > id;, +    }, +, +    public boolean onOrBefore(Version version) {, +        return version.id >= id;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +        if (in.getVersion().onOrAfter(Version.V_0_90_1)) {, +        if (out.getVersion().onOrAfter(Version.V_0_90_1)) {, +++ b/src/main/java/org/elasticsearch/Version.java, +    public boolean onOrAfter(Version version) {, +    public boolean before(Version version) {, +        return version.id > id;, +    }, +, +    public boolean onOrBefore(Version version) {, +        return version.id >= id;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java, +        if (in.getVersion().onOrAfter(Version.V_0_90_1)) {, +        if (out.getVersion().onOrAfter(Version.V_0_90_1)) {, +++ b/src/test/java/org/elasticsearch/test/unit/VersionTests.java, +import org.testng.annotations.Test;, +, +import static org.elasticsearch.Version.V_0_20_0;, +import static org.elasticsearch.Version.V_0_90_0;, +import static org.hamcrest.MatcherAssert.assertThat;, +import static org.hamcrest.Matchers.is;, +, +    @Test, +    public void testVersions() throws Exception {, +        assertThat(V_0_20_0.before(V_0_90_0), is(true));, +        assertThat(V_0_20_0.before(V_0_20_0), is(false));, +        assertThat(V_0_90_0.before(V_0_20_0), is(false));, +, +        assertThat(V_0_20_0.onOrBefore(V_0_90_0), is(true));, +        assertThat(V_0_20_0.onOrBefore(V_0_20_0), is(true));, +        assertThat(V_0_90_0.onOrBefore(V_0_20_0), is(false));, +, +        assertThat(V_0_20_0.after(V_0_90_0), is(false));, +        assertThat(V_0_20_0.after(V_0_20_0), is(false));, +        assertThat(V_0_90_0.after(V_0_20_0), is(true));, +, +        assertThat(V_0_20_0.onOrAfter(V_0_90_0), is(false));, +        assertThat(V_0_20_0.onOrAfter(V_0_20_0), is(true));, +        assertThat(V_0_90_0.onOrAfter(V_0_20_0), is(true));, +    }, +]