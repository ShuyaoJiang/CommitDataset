[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +                includeAliases = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +                includeAliases = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                lenientNodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                lenientNodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +                includeAliases = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                lenientNodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                lenientNodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                    required = lenientNodeBooleanValue(fieldNode);, +                    enabled = lenientNodeBooleanValue(fieldNode);, +                    ignoreMissing = lenientNodeBooleanValue(fieldNode);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +                includeAliases = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                lenientNodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                lenientNodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                    required = lenientNodeBooleanValue(fieldNode);, +                    enabled = lenientNodeBooleanValue(fieldNode);, +                    ignoreMissing = lenientNodeBooleanValue(fieldNode);, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java, +    /**, +     * This method is very lenient, use {@link #nodeBooleanValue} instead., +     */, +    public static boolean lenientNodeBooleanValue(Object node, boolean defaultValue) {, +        return lenientNodeBooleanValue(node);, +    /**, +     * This method is very lenient, use {@link #nodeBooleanValue} instead., +     */, +    public static boolean lenientNodeBooleanValue(Object node) {, +    public static boolean nodeBooleanValue(Object node) {, +        switch (node.toString()) {, +        case "true":, +            return true;, +        case "false":, +            return false;, +        default:, +            throw new IllegalArgumentException("Can't parse boolean value [" + node + "], expected [true] or [false]");, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                partial(lenientNodeBooleanValue(entry.getValue()));, +                includeGlobalState = lenientNodeBooleanValue(entry.getValue());, +                includeAliases = lenientNodeBooleanValue(entry.getValue());, +++ b/core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                lenientNodeBooleanValue(ignoreUnavailableString, defaultSettings.ignoreUnavailable()),, +                lenientNodeBooleanValue(allowNoIndicesString, defaultSettings.allowNoIndices()),, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.lenientNodeBooleanValue;, +                    required = lenientNodeBooleanValue(fieldNode);, +                    enabled = lenientNodeBooleanValue(fieldNode);]