[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +    @Required private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    public CountRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource());, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +    @Required private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    public CountRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource());, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/ShardCountRequest.java, +    private byte[] querySource;, +    public ShardCountRequest(String index, int shardId, byte[] querySource, float minScore,, +    public byte[] querySource() {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource);, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +    @Required private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    public CountRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource());, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/ShardCountRequest.java, +    private byte[] querySource;, +    public ShardCountRequest(String index, int shardId, byte[] querySource, float minScore,, +    public byte[] querySource() {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource);, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +    private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    @Required public DeleteByQueryRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource);, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +    @Required private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    public CountRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource());, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/ShardCountRequest.java, +    private byte[] querySource;, +    public ShardCountRequest(String index, int shardId, byte[] querySource, float minScore,, +    public byte[] querySource() {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource);, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +    private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    @Required public DeleteByQueryRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource);, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java, +    private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    @Required public IndexDeleteByQueryRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource);, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +    @Required private byte[] querySource;, +    byte[] querySource() {, +        return querySource(queryBuilder.buildAsBytes());, +    public CountRequest querySource(byte[] querySource) {, +        querySource = new byte[in.readInt()];, +        in.readFully(querySource());, +        out.writeInt(querySource.length);, +        out.write(querySource);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/ShardCountRequest.java, +    private byte[] querySource;, +    public ShardCountRequest(String index, int shardId, byte[] querySource, float minScore,, +    public byte[] querySource() {]