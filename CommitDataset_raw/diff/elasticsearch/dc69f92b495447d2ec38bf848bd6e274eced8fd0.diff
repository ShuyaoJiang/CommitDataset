[+++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/rest/RestSqlTestCase.java, +        index("{\"test\":\"test\"}",, +            "{\"test\":\"test\"}");, +        index("{\"test\":\"2017-07-27 00:00:00\"}",, +            "{\"test\":\"2017-07-27 01:00:00\"}");, +    public void testSelectWithJoinFails() throws Exception {, +        // Normal join not supported, +        expectBadRequest(() -> runSql("SELECT * FROM test JOIN other"),, +            containsString("line 1:21: Queries with JOIN are not yet supported"));, +        // Neither is a self join, +        expectBadRequest(() -> runSql("SELECT * FROM test JOIN test"),, +            containsString("line 1:21: Queries with JOIN are not yet supported"));, +        // Nor fancy stuff like CTEs, +        expectBadRequest(() -> runSql(, +            "    WITH evil", +            + "  AS (SELECT *", +            + "        FROM foo)", +            + "SELECT *", +            + "  FROM test", +            + "  JOIN evil"),, +            containsString("line 1:67: Queries with JOIN are not yet supported"));, +    }, +, +        index("{\"test\":\"test\"}");, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql("SELECT missing(foo) FROM test"), containsString("1:8: Unknown function [missing]"));, +    }, +, +    private void index(String... docs) throws IOException {, +        for (String doc : docs) {, +            bulk.append("{\"index\":{}\n");, +            bulk.append(doc + "\n");, +        }, +        index("{\"test\":\"foo\"}",, +            "{\"test\":\"bar\"}");, +        index("{\"test\":\"foo\"}",, +            "{\"test\":\"bar\"}");, +        index("{\"test\":\"test\"}",, +            "{\"test\":\"test\"}");, +, +++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/rest/RestSqlTestCase.java, +        index("{\"test\":\"test\"}",, +            "{\"test\":\"test\"}");, +        index("{\"test\":\"2017-07-27 00:00:00\"}",, +            "{\"test\":\"2017-07-27 01:00:00\"}");, +    public void testSelectWithJoinFails() throws Exception {, +        // Normal join not supported, +        expectBadRequest(() -> runSql("SELECT * FROM test JOIN other"),, +            containsString("line 1:21: Queries with JOIN are not yet supported"));, +        // Neither is a self join, +        expectBadRequest(() -> runSql("SELECT * FROM test JOIN test"),, +            containsString("line 1:21: Queries with JOIN are not yet supported"));, +        // Nor fancy stuff like CTEs, +        expectBadRequest(() -> runSql(, +            "    WITH evil", +            + "  AS (SELECT *", +            + "        FROM foo)", +            + "SELECT *", +            + "  FROM test", +            + "  JOIN evil"),, +            containsString("line 1:67: Queries with JOIN are not yet supported"));, +    }, +, +        index("{\"test\":\"test\"}");, +        index("{\"foo\":1}");, +        expectBadRequest(() -> runSql("SELECT missing(foo) FROM test"), containsString("1:8: Unknown function [missing]"));, +    }, +, +    private void index(String... docs) throws IOException {, +        for (String doc : docs) {, +            bulk.append("{\"index\":{}\n");, +            bulk.append(doc + "\n");, +        }, +        index("{\"test\":\"foo\"}",, +            "{\"test\":\"bar\"}");, +        index("{\"test\":\"foo\"}",, +            "{\"test\":\"bar\"}");, +        index("{\"test\":\"test\"}",, +            "{\"test\":\"test\"}");, +, +++ b/sql/server/src/main/java/org/elasticsearch/xpack/sql/analysis/index/MappingException.java, +import org.elasticsearch.rest.RestStatus;, +, +    @Override, +    public RestStatus status() {, +        return RestStatus.BAD_REQUEST;, +    }, +++ b/qa/sql/src/main/java/org/elasticsearch/xpack/qa/sql/rest/RestSqlTestCase.java, +        index("{\"test\":\"test\"}",, +            "{\"test\":\"test\"}");, +        index("{\"test\":\"2017-07-27 00:00:00\"}",, +            "{\"test\":\"2017-07-27 01:00:00\"}");, +    public void testSelectWithJoinFails() throws Exception {, +        // Normal join not supported, +        expectBadRequest(() -> runSql("SELECT * FROM test JOIN other"),, +            containsString("line 1:21: Queries with JOIN are not yet supported"));, +        // Neither is a self join, +        expectBadRequest(() -> runSql("SELECT * FROM test JOIN test"),, +            containsString("line 1:21: Queries with JOIN are not yet supported"));, +        // Nor fancy stuff like CTEs]