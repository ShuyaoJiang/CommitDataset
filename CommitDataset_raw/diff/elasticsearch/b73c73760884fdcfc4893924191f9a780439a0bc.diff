[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateDynamicSettings(transientToApply, transientSettings, transientUpdates, "transient");, +        changed |= clusterSettings.updateDynamicSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateDynamicSettings(transientToApply, transientSettings, transientUpdates, "transient");, +        changed |= clusterSettings.updateDynamicSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                           ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(templateSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateDynamicSettings(transientToApply, transientSettings, transientUpdates, "transient");, +        changed |= clusterSettings.updateDynamicSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                           ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(templateSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AutoExpandReplicas.java, + * based on the number of datanodes in the cluster. This class handles all the parsing and streamlines the access to these values., +    private AutoExpandReplicas(int minReplicas, int maxReplicas, boolean enabled) {, +        return enabled ? minReplicas + "-" + maxReplicas : "false";, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateDynamicSettings(transientToApply, transientSettings, transientUpdates, "transient");, +        changed |= clusterSettings.updateDynamicSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                           ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(templateSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AutoExpandReplicas.java, + * based on the number of datanodes in the cluster. This class handles all the parsing and streamlines the access to these values., +    private AutoExpandReplicas(int minReplicas, int maxReplicas, boolean enabled) {, +        return enabled ? minReplicas + "-" + maxReplicas : "false";, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final Setting<AutoExpandReplicas> INDEX_AUTO_EXPAND_REPLICAS_SETTING = AutoExpandReplicas.SETTING;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateDynamicSettings(transientToApply, transientSettings, transientUpdates, "transient");, +        changed |= clusterSettings.updateDynamicSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                           ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(templateSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AutoExpandReplicas.java, + * based on the number of datanodes in the cluster. This class handles all the parsing and streamlines the access to these values., +    private AutoExpandReplicas(int minReplicas, int maxReplicas, boolean enabled) {, +        return enabled ? minReplicas + "-" + maxReplicas : "false";, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final Setting<AutoExpandReplicas> INDEX_AUTO_EXPAND_REPLICAS_SETTING = AutoExpandReplicas.SETTING;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                      Set<IndexTemplateFilter> indexTemplateFilters, Environment env, NodeServicesProvider nodeServicesProvider, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(updatedSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateDynamicSettings(transientToApply, transientSettings, transientUpdates, "transient");, +        changed |= clusterSettings.updateDynamicSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                           ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(templateSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AutoExpandReplicas.java, + * based on the number of datanodes in the cluster. This class handles all the parsing and streamlines the access to these values., +    private AutoExpandReplicas(int minReplicas, int maxReplicas, boolean enabled) {, +        return enabled ? minReplicas + "-" + maxReplicas : "false";, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final Setting<AutoExpandReplicas> INDEX_AUTO_EXPAND_REPLICAS_SETTING = AutoExpandReplicas.SETTING;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                      Set<IndexTemplateFilter> indexTemplateFilters, Environment env, NodeServicesProvider nodeServicesProvider, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(updatedSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java, +        changed |= clusterSettings.updateDynamicSettings(transientToApply, transientSettings, transientUpdates, "transient");, +        changed |= clusterSettings.updateDynamicSettings(persistentToApply, persistentSettings, persistentUpdates, "persistent");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java, +import org.elasticsearch.common.settings.IndexScopedSettings;, +    private final IndexScopedSettings indexScopedSettings;, +                                           ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver, IndexScopedSettings indexScopedSettings) {, +        this.indexScopedSettings = indexScopedSettings;, +        indexScopedSettings.validate(templateSettingsBuilder);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AutoExpandReplicas.java, + * based on the number of datanodes in the cluster. This class handles all the parsing and streamlines the access to these values., +    private AutoExpandReplicas(int minReplicas, int maxReplicas, boolean enabled) {, +        return enabled ? minReplicas + "-" + maxReplicas : "false";, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +    public static final Setting<AutoExpandReplicas> INDEX_AUTO_EXPAND_REPLICAS_SETTING = AutoExpandReplicas.SETTING;, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +import org.elasticsearch.common.settings.IndexScopedSettings;]