[+++ b/Vagrantfile, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +++ b/Vagrantfile, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/MockPluginPolicy.class</include>, +                                <include>org/elasticsearch/bootstrap/MockPluginPolicy.class</include>, +++ b/Vagrantfile, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/MockPluginPolicy.class</include>, +                                <include>org/elasticsearch/bootstrap/MockPluginPolicy.class</include>, +++ b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +    /**, +     * The name of the scripting engine/language., +     */, +    /**, +     * The setting to enable or disable <code>invokedynamic</code> instruction support in Java 7+., +     * <p>, +     * This should only be used with Java 7u60 or later because of issues related to the instruction., +     * The <code>invokedynamic</code> instruction allows near-Java performance from many of Groovy's, +     * dynamic features, which is why it is enabled by default., +     * <p>, +     * Note: If this is disabled because <code>invokedynamic</code> is causing issues, then the Groovy, +     * <code>indy</code> jar needs to be replaced by the non-<code>indy</code> variant of it on the classpath (e.g.,, +     * <code>groovy-all-2.4.4-indy.jar</code> should be replaced by <code>groovy-all-2.4.4.jar</code>)., +     * <p>, +     * Defaults to {@code true}., +     */, +    public static final String GROOVY_INDY_ENABLED = "script.groovy.indy";, +    /**, +     * The name of the Groovy compiler setting to use associated with activating <code>invokedynamic</code> support., +     */, +    public static final String GROOVY_INDY_SETTING_NAME = "indy";, +, +, +, +, +, +        // Implicitly requires Java 7u60 or later to get valid support, +        if (settings.getAsBoolean(GROOVY_INDY_ENABLED, true)) {, +            // maintain any default optimizations, +            config.getOptimizationOptions().put(GROOVY_INDY_SETTING_NAME, true);, +        }, +, +        // Groovy class loader to isolate Groovy-land code, +++ b/Vagrantfile, +          apt-get update -o \, +            Dir::Etc::sourcelist="$(ls /etc/apt/sources.list.d/#{openjdk_list}.list)" \, +            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"), +++ b/core/pom.xml, +                                <include>org/elasticsearch/bootstrap/MockPluginPolicy.class</include>, +                                <include>org/elasticsearch/bootstrap/MockPluginPolicy.class</include>, +++ b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +    /**, +     * The name of the scripting engine/language., +     */, +    /**, +     * The setting to enable or disable <code>invokedynamic</code> instruction support in Java 7+., +     * <p>, +     * This should only be used with Java 7u60 or later because of issues related to the instruction., +     * The <code>invokedynamic</code> instruction allows near-Java performance from many of Groovy's, +     * dynamic features, which is why it is enabled by default., +     * <p>, +     * Note: If this is disabled because <code>invokedynamic</code> is causing issues, then the Groovy, +     * <code>indy</code> jar needs to be replaced by the non-<code>indy</code> variant of it on the classpath (e.g.,, +     * <code>groovy-all-2.4.4-indy.jar</code> should be replaced by <code>groovy-all-2.4.4.jar</code>)., +     * <p>, +     * Defaults to {@code true}., +     */, +    public static final String GROOVY_INDY_ENABLED = "script.groovy.indy";, +    /**, +     * The name of the Groovy compiler setting to use associated with activating <code>invokedynamic</code> support., +     */, +    public static final String GROOVY_INDY_SETTING_NAME = "indy";, +, +, +, +, +, +        // Implicitly requires Java 7u60 or later to get valid support, +        if (settings.getAsBoolean(GROOVY_INDY_ENABLED, true)) {, +            // maintain any default optimizations, +            config.getOptimizationOptions().put(GROOVY_INDY_SETTING_NAME, true);, +        }, +, +        // Groovy class loader to isolate Groovy-land code, +++ b/core/src/test/java/org/elasticsearch/bootstrap/BootstrapForTesting.java, +                final Policy policy;, +                // if its an insecure plugin, we use a wrapper policy impl to try, +                // to simulate what happens with a real distribution, +                    policy = new MockPluginPolicy(perms, insecurePluginProp);, +                } else {, +                    policy = new ESPolicy(perms);]