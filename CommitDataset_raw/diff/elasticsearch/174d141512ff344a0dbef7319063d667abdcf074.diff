[+++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +            if (params.paramAsBoolean("human", true)) {, +                builder.humanReadable(true);, +            }, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +            if (params.paramAsBoolean("human", true)) {, +                builder.humanReadable(true);, +            }, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.indices.recovery.RecoverySettings;, +import org.elasticsearch.test.junit.annotations.TestLogging;, +                .put(RecoverySettings.INDICES_RECOVERY_CONCURRENT_SMALL_FILE_STREAMS, 30) // increase recovery speed for small files, +    @TestLogging("indices.recovery:TRACE"), +        final long startTime = System.currentTimeMillis();, +        logger.debug("--> creating [{}] replicas for index [{}]", numReplicas, indexName);, +        logger.debug("--> index [{}] is green, took [{}]", indexName, TimeValue.timeValueMillis(System.currentTimeMillis() - startTime));, +        logger.debug("--> recovery status:\n{}", XContentHelper.toString(client().admin().indices().prepareRecoveries(indexName).get()));]