[+++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +, +    @Override, +    protected String parserName() {, +        return AndQueryParser.NAME;, +    }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +, +    @Override, +    protected String parserName() {, +        return AndQueryParser.NAME;, +    }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser extends BaseQueryParserTemp {, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +, +    @Override, +    protected String parserName() {, +        return AndQueryParser.NAME;, +    }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser extends BaseQueryParserTemp {, +++ b/src/main/java/org/elasticsearch/index/query/BaseQueryBuilder.java, +import org.apache.lucene.search.Query;, + * Base class with common code for all {@link QueryBuilder} implementations., +    /**, +     * Temporary default implementation for toQuery that parses the query using its query parser, +     */, +    //norelease to be removed once all query builders override toQuery providing their own specific implementation., +    public Query toQuery(QueryParseContext parseContext) throws QueryParsingException, IOException {, +        return parseContext.indexQueryParserService().queryParser(parserName()).parse(parseContext);, +    }, +, +    /**, +     * Temporary method that allows to retrieve the parser for each query., +     * @return the name of the parser class the default {@link #toQuery(QueryParseContext)} method delegates to, +     */, +    //norelease to be removed once all query builders override toQuery providing their own specific implementation., +    protected abstract String parserName();, +, +, +    @Override, +    public QueryValidationException validate() {, +        // default impl does not validate, subclasses should override., +        //norelease to be removed once all queries support validation, +        return null;, +    }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +, +    @Override, +    protected String parserName() {, +        return AndQueryParser.NAME;, +    }, +++ b/src/main/java/org/elasticsearch/index/query/AndQueryParser.java, +public class AndQueryParser extends BaseQueryParserTemp {, +++ b/src/main/java/org/elasticsearch/index/query/BaseQueryBuilder.java, +import org.apache.lucene.search.Query;, + * Base class with common code for all {@link QueryBuilder} implementations., +    /**, +     * Temporary default implementation for toQuery that parses the query using its query parser, +     */, +    //norelease to be removed once all query builders override toQuery providing their own specific implementation., +    public Query toQuery(QueryParseContext parseContext) throws QueryParsingException, IOException {, +        return parseContext.indexQueryParserService().queryParser(parserName()).parse(parseContext);, +    }, +, +    /**, +     * Temporary method that allows to retrieve the parser for each query., +     * @return the name of the parser class the default {@link #toQuery(QueryParseContext)} method delegates to, +     */, +    //norelease to be removed once all query builders override toQuery providing their own specific implementation., +    protected abstract String parserName();, +, +, +    @Override, +    public QueryValidationException validate() {, +        // default impl does not validate, subclasses should override., +        //norelease to be removed once all queries support validation, +        return null;, +    }, +++ b/src/main/java/org/elasticsearch/index/query/BaseQueryParser.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +]