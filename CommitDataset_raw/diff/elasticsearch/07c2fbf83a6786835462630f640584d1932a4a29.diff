[+++ b/core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +import org.elasticsearch.common.lucene.search.MatchNoDocsQuery;, +import static org.hamcrest.CoreMatchers.containsString;, +            assertThat(query, instanceOf(MatchNoDocsQuery.class));, +            MatchNoDocsQuery matchNoDocsQuery = (MatchNoDocsQuery) query;, +            assertThat(matchNoDocsQuery.toString(null), containsString("Missing types in \"exists\" query."));, +++ b/core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +import org.elasticsearch.common.lucene.search.MatchNoDocsQuery;, +import static org.hamcrest.CoreMatchers.containsString;, +            assertThat(query, instanceOf(MatchNoDocsQuery.class));, +            MatchNoDocsQuery matchNoDocsQuery = (MatchNoDocsQuery) query;, +            assertThat(matchNoDocsQuery.toString(null), containsString("Missing types in \"exists\" query."));, +++ b/core/src/test/java/org/elasticsearch/threadpool/ESThreadPoolTestCase.java, +        assert "same".equals(name);, +        return null;, +++ b/core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +import org.elasticsearch.common.lucene.search.MatchNoDocsQuery;, +import static org.hamcrest.CoreMatchers.containsString;, +            assertThat(query, instanceOf(MatchNoDocsQuery.class));, +            MatchNoDocsQuery matchNoDocsQuery = (MatchNoDocsQuery) query;, +            assertThat(matchNoDocsQuery.toString(null), containsString("Missing types in \"exists\" query."));, +++ b/core/src/test/java/org/elasticsearch/threadpool/ESThreadPoolTestCase.java, +        assert "same".equals(name);, +        return null;, +++ b/plugins/discovery-azure/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +, +// needed to be consistent with ssl host checking, +String host = InetAddress.getLoopbackAddress().getHostAddress();, +, +// location of keystore and files to generate it, +File keystore = new File(project.buildDir, 'keystore/test-node.jks'), +, +// generate the keystore, +task createKey(type: LoggedExec) {, +  doFirst {, +    project.delete(keystore.parentFile), +    keystore.parentFile.mkdirs(), +  }, +  executable = 'keytool', +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-node',, +          '-keystore', keystore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=' + host,, +          '-keypass', 'keypass',, +          '-storepass', 'keypass', +}, +, +// add keystore to test classpath: it expects it there, +sourceSets.test.resources.srcDir(keystore.parentFile), +processTestResources.dependsOn(createKey), +, +++ b/core/src/test/java/org/elasticsearch/index/query/ExistsQueryBuilderTests.java, +import org.elasticsearch.common.lucene.search.MatchNoDocsQuery;, +import static org.hamcrest.CoreMatchers.containsString;, +            assertThat(query, instanceOf(MatchNoDocsQuery.class));, +            MatchNoDocsQuery matchNoDocsQuery = (MatchNoDocsQuery) query;, +            assertThat(matchNoDocsQuery.toString(null), containsString("Missing types in \"exists\" query."));, +++ b/core/src/test/java/org/elasticsearch/threadpool/ESThreadPoolTestCase.java, +        assert "same".equals(name);, +        return null;, +++ b/plugins/discovery-azure/build.gradle, +import org.elasticsearch.gradle.LoggedExec, +, +// needed to be consistent with ssl host checking, +String host = InetAddress.getLoopbackAddress().getHostAddress();, +, +// location of keystore and files to generate it, +File keystore = new File(project.buildDir, 'keystore/test-node.jks'), +, +// generate the keystore, +task createKey(type: LoggedExec) {, +  doFirst {, +    project.delete(keystore.parentFile), +    keystore.parentFile.mkdirs(), +  }, +  executable = 'keytool', +  standardInput = new ByteArrayInputStream('FirstName LastName\nUnit\nOrganization\nCity\nState\nNL\nyes\n\n'.getBytes('UTF-8')), +  args '-genkey',, +          '-alias', 'test-node',, +          '-keystore', keystore,, +          '-keyalg', 'RSA',, +          '-keysize', '2048',, +          '-validity', '712',, +          '-dname', 'CN=' + host,, +          '-keypass', 'keypass',, +          '-storepass', 'keypass', +}, +, +// add keystore to test classpath: it expects it there, +sourceSets.test.resources.srcDir(keystore.parentFile), +processTestResources.dependsOn(createKey), +, +++ b/plugins/discovery-azure/src/main/java/org/elasticsearch/cloud/azure/management/AzureComputeService.java, +import org.elasticsearch.discovery.azure.AzureUnicastHostsProvider.Deployment;, +]