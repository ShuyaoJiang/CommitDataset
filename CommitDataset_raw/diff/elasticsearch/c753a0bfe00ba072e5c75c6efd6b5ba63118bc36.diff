[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java, +            logger.error("multiple nodes trying to upgrade [{}] in parallel, retry upgrading with single node",, +                exception, target);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java, +            logger.error("multiple nodes trying to upgrade [{}] in parallel, retry upgrading with single node",, +                exception, target);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                logger.warn("Tried to query fileLength but file is gone [{}] [{}]", e, directory, file);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java, +            logger.error("multiple nodes trying to upgrade [{}] in parallel, retry upgrading with single node",, +                exception, target);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                logger.warn("Tried to query fileLength but file is gone [{}] [{}]", e, directory, file);, +++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            logger.info("{}: failed to obtain shard lock", ex, shardId);, +            logger.error("{} unable to acquire shard lock", ex, shardId);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java, +            logger.error("multiple nodes trying to upgrade [{}] in parallel, retry upgrading with single node",, +                exception, target);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                logger.warn("Tried to query fileLength but file is gone [{}] [{}]", e, directory, file);, +++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            logger.info("{}: failed to obtain shard lock", ex, shardId);, +            logger.error("{} unable to acquire shard lock", ex, shardId);, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +            logger.trace("ignore exception while checking if shard {} is inactive", e, shard.shardId());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java, +            logger.error("multiple nodes trying to upgrade [{}] in parallel, retry upgrading with single node",, +                exception, target);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                logger.warn("Tried to query fileLength but file is gone [{}] [{}]", e, directory, file);, +++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            logger.info("{}: failed to obtain shard lock", ex, shardId);, +            logger.error("{} unable to acquire shard lock", ex, shardId);, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +            logger.trace("ignore exception while checking if shard {} is inactive", e, shard.shardId());, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +                            logger.warn("plugin {}, failed to invoke custom onModule method", e, plugin.v1().getName());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java, +            logger.error("multiple nodes trying to upgrade [{}] in parallel, retry upgrading with single node",, +                exception, target);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                logger.warn("Tried to query fileLength but file is gone [{}] [{}]", e, directory, file);, +++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            logger.info("{}: failed to obtain shard lock", ex, shardId);, +            logger.error("{} unable to acquire shard lock", ex, shardId);, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +            logger.trace("ignore exception while checking if shard {} is inactive", e, shard.shardId());, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +                            logger.warn("plugin {}, failed to invoke custom onModule method", e, plugin.v1().getName());, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            logger.warn("cannot read snapshot file [{}]", ex, snapshotId);, +            logger.warn("cannot read metadata for snapshot [{}]", ex, snapshotId);, +                    logger.warn("[{}] [{}] failed to read metadata for index", ex, snapshotId, index.getName());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java, +            logger.error("multiple nodes trying to upgrade [{}] in parallel, retry upgrading with single node",, +                exception, target);, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +                logger.warn("Tried to query fileLength but file is gone [{}] [{}]", e, directory, file);, +++ b/core/src/main/java/org/elasticsearch/index/store/Store.java, +            logger.info("{}: failed to obtain shard lock", ex, shardId);, +            logger.error("{} unable to acquire shard lock", ex, shardId);, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +            logger.trace("ignore exception while checking if shard {} is inactive", e, shard.shardId());, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +                            logger.warn("plugin {}, failed to invoke custom onModule method", e, plugin.v1().getName());, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +            logger.warn("cannot read snapshot file [{}]", ex, snapshotId);, +            logger.warn("cannot read metadata for snapshot [{}]", ex, snapshotId);, +                    logger.warn("[{}] [{}] failed to read metadata for index", ex, snapshotId, index.getName());, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +                            logger.info("unexpected exception in background thread of [{}]", e, node);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/core/src/main/java/org/elasticsearch/common/util/IndexFolderUpgrader.java]