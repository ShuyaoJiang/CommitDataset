[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Translog.Durability> INDEX_TRANSLOG_DURABILITY_SETTING = new Setting<>("index.translog.durability", Translog.Durability.REQUEST.name(), (value) -> Translog.Durability.valueOf(value.toUpperCase(Locale.ROOT)), true, Setting.Scope.INDEX);, +        MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING,, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING, +        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Translog.Durability> INDEX_TRANSLOG_DURABILITY_SETTING = new Setting<>("index.translog.durability", Translog.Durability.REQUEST.name(), (value) -> Translog.Durability.valueOf(value.toUpperCase(Locale.ROOT)), true, Setting.Scope.INDEX);, +        MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING,, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING, +        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexServiceTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.ASYNC), +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Translog.Durability> INDEX_TRANSLOG_DURABILITY_SETTING = new Setting<>("index.translog.durability", Translog.Durability.REQUEST.name(), (value) -> Translog.Durability.valueOf(value.toUpperCase(Locale.ROOT)), true, Setting.Scope.INDEX);, +        MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING,, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING, +        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexServiceTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.ASYNC), +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "async"), +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "request").build()));, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Translog.Durability> INDEX_TRANSLOG_DURABILITY_SETTING = new Setting<>("index.translog.durability", Translog.Durability.REQUEST.name(), (value) -> Translog.Durability.valueOf(value.toUpperCase(Locale.ROOT)), true, Setting.Scope.INDEX);, +        MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING,, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING, +        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexServiceTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.ASYNC), +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "async"), +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "request").build()));, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +        client().admin().indices().prepareUpdateSettings(shard.shardId.getIndex()).setSettings(settingsBuilder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), durability.name()).build()).get();, +        createIndex("test", settingsBuilder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.REQUEST).build());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Translog.Durability> INDEX_TRANSLOG_DURABILITY_SETTING = new Setting<>("index.translog.durability", Translog.Durability.REQUEST.name(), (value) -> Translog.Durability.valueOf(value.toUpperCase(Locale.ROOT)), true, Setting.Scope.INDEX);, +        MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING,, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING, +        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexServiceTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.ASYNC), +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "async"), +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "request").build()));, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +        client().admin().indices().prepareUpdateSettings(shard.shardId.getIndex()).setSettings(settingsBuilder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), durability.name()).build()).get();, +        createIndex("test", settingsBuilder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.REQUEST).build());, +++ b/core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java, +                                 .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.ASYNC.name()), +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Translog.Durability> INDEX_TRANSLOG_DURABILITY_SETTING = new Setting<>("index.translog.durability", Translog.Durability.REQUEST.name(), (value) -> Translog.Durability.valueOf(value.toUpperCase(Locale.ROOT)), true, Setting.Scope.INDEX);, +        MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING,, +        IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING, +        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);, +    private void setTranslogDurability(Translog.Durability durability) {, +        this.durability = durability;, +    }, +, +++ b/core/src/test/java/org/elasticsearch/index/IndexServiceTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.ASYNC), +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +            .put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "async"), +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), "request").build()));, +++ b/core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java, +        client().admin().indices().prepareUpdateSettings(shard.shardId.getIndex()).setSettings(settingsBuilder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), durability.name()).build()).get();, +        createIndex("test", settingsBuilder().put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(), Translog.Durability.REQUEST).build());]