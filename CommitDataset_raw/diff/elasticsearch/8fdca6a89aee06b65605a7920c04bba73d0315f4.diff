[+++ b/docs/reference/cat/thread_pool.asciidoc, +|`pool_size` |`psz` |The number of threads in the current thread pool, +|`core` |`cr` |The configured core number of active threads allowed in the current thread pool, +|`max` |`mx` |The configured maximum number of active threads allowed in the current thread pool, +|`size` |`sz` |The configured fixed number of active threads allowed in the current thread pool, +++ b/docs/reference/cat/thread_pool.asciidoc, +|`pool_size` |`psz` |The number of threads in the current thread pool, +|`core` |`cr` |The configured core number of active threads allowed in the current thread pool, +|`max` |`mx` |The configured maximum number of active threads allowed in the current thread pool, +|`size` |`sz` |The configured fixed number of active threads allowed in the current thread pool, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cat.thread_pool/10_basic.yml, +  - skip:, +        version: " - 6.99.99", +        reason: this API was changed in a backwards-incompatible fashion in 7.0.0 so we need to skip in a mixed cluster, +, +          h: id,name,type,active,pool_size,queue,queue_size,rejected,largest,completed,core,max,size,keep_alive, +               /^  id  \s+ name \s+ type  \s+ active \s+ pool_size \s+ queue \s+ queue_size \s+ rejected \s+ largest \s+ completed \s+ core \s+ max \s+ size \s+ keep_alive \n, +                  (\S+ \s+ bulk \s+ fixed \s+ \d+    \s+ \d+       \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d*  \s+ \d* \s+ \d*  \s+ \S*        \n)+  $/, +          h: id,name,type,active,pool_size,queue,queue_size,rejected,largest,completed,core,max,size,keep_alive, +               /^  id  \s+ name                \s+ type    \s+ active \s+ pool_size \s+ queue \s+ queue_size \s+ rejected \s+ largest \s+ completed \s+ core \s+ max \s+ size \s+ keep_alive \n, +                  (\S+ \s+ fetch_shard_started \s+ scaling \s+ \d+    \s+ \d+       \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d*  \s+ \d* \s+ \d*  \s+ \S*        \n, +                   \S+ \s+ fetch_shard_store   \s+ scaling \s+ \d+    \s+ \d+       \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d*  \s+ \d* \s+ \d*  \s+ \S*        \n)+  $/, +++ b/docs/reference/cat/thread_pool.asciidoc, +|`pool_size` |`psz` |The number of threads in the current thread pool, +|`core` |`cr` |The configured core number of active threads allowed in the current thread pool, +|`max` |`mx` |The configured maximum number of active threads allowed in the current thread pool, +|`size` |`sz` |The configured fixed number of active threads allowed in the current thread pool, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cat.thread_pool/10_basic.yml, +  - skip:, +        version: " - 6.99.99", +        reason: this API was changed in a backwards-incompatible fashion in 7.0.0 so we need to skip in a mixed cluster, +, +          h: id,name,type,active,pool_size,queue,queue_size,rejected,largest,completed,core,max,size,keep_alive, +               /^  id  \s+ name \s+ type  \s+ active \s+ pool_size \s+ queue \s+ queue_size \s+ rejected \s+ largest \s+ completed \s+ core \s+ max \s+ size \s+ keep_alive \n, +                  (\S+ \s+ bulk \s+ fixed \s+ \d+    \s+ \d+       \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d*  \s+ \d* \s+ \d*  \s+ \S*        \n)+  $/, +          h: id,name,type,active,pool_size,queue,queue_size,rejected,largest,completed,core,max,size,keep_alive, +               /^  id  \s+ name                \s+ type    \s+ active \s+ pool_size \s+ queue \s+ queue_size \s+ rejected \s+ largest \s+ completed \s+ core \s+ max \s+ size \s+ keep_alive \n, +                  (\S+ \s+ fetch_shard_started \s+ scaling \s+ \d+    \s+ \d+       \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d*  \s+ \d* \s+ \d*  \s+ \S*        \n, +                   \S+ \s+ fetch_shard_store   \s+ scaling \s+ \d+    \s+ \d+       \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d*  \s+ \d* \s+ \d*  \s+ \S*        \n)+  $/, +++ b/server/src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java, +        table.addCell("pool_size", "alias:psz;default:false;text-align:right;desc:number of threads");, +        table.addCell("core", "alias:cr;default:false;text-align:right;desc:core number of threads in a scaling thread pool");, +        table.addCell("max", "alias:mx;default:false;text-align:right;desc:maximum number of threads in a scaling thread pool");, +        table.addCell("size", "alias:sz;default:false;text-align:right;desc:number of threads in a fixed thread pool");, +                Integer core = null;, +                Integer max = null;, +                Integer size = null;, +, +                    if (poolInfo.getThreadPoolType() == ThreadPool.ThreadPoolType.SCALING) {, +                        assert poolInfo.getMin() >= 0;, +                        core = poolInfo.getMin();, +                        assert poolInfo.getMax() > 0;, +                        max = poolInfo.getMax();, +                    } else {, +                        assert poolInfo.getMin() == poolInfo.getMax() && poolInfo.getMax() > 0;, +                        size = poolInfo.getMax();, +                table.addCell(core);, +                table.addCell(max);, +                table.addCell(size);]