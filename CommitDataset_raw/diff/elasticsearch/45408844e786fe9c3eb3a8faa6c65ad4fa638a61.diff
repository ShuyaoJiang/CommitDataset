[+++ b/config/elasticsearch.yml, +# For more information, see, +++ b/config/elasticsearch.yml, +# For more information, see, +++ b/docs/reference/modules/gateway.asciidoc, +The gateway set on the node level will automatically control the index gateway, +that will be used. For example, if the `local` gateway is used (the default),, +then each index created on the node will automatically use its own respective, +index level `local` gateway., +The `none` gateway option was removed in Elasticsearch 2.0., +, +++ b/config/elasticsearch.yml, +# For more information, see, +++ b/docs/reference/modules/gateway.asciidoc, +The gateway set on the node level will automatically control the index gateway, +that will be used. For example, if the `local` gateway is used (the default),, +then each index created on the node will automatically use its own respective, +index level `local` gateway., +The `none` gateway option was removed in Elasticsearch 2.0., +, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java, +import org.elasticsearch.gateway.local.LocalGatewayAllocator;, +    private Class<? extends GatewayAllocator> gatewayAllocator = LocalGatewayAllocator.class;, +++ b/config/elasticsearch.yml, +# For more information, see, +++ b/docs/reference/modules/gateway.asciidoc, +The gateway set on the node level will automatically control the index gateway, +that will be used. For example, if the `local` gateway is used (the default),, +then each index created on the node will automatically use its own respective, +index level `local` gateway., +The `none` gateway option was removed in Elasticsearch 2.0., +, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java, +import org.elasticsearch.gateway.local.LocalGatewayAllocator;, +    private Class<? extends GatewayAllocator> gatewayAllocator = LocalGatewayAllocator.class;, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocators.java, +    public ShardsAllocators(GatewayAllocator allocator) {, +        this(ImmutableSettings.Builder.EMPTY_SETTINGS, allocator);, +    public ShardsAllocators(Settings settings, GatewayAllocator allocator) {, +      this(settings, allocator, new BalancedShardsAllocator(settings));, +++ b/config/elasticsearch.yml, +# For more information, see, +++ b/docs/reference/modules/gateway.asciidoc, +The gateway set on the node level will automatically control the index gateway, +that will be used. For example, if the `local` gateway is used (the default),, +then each index created on the node will automatically use its own respective, +index level `local` gateway., +The `none` gateway option was removed in Elasticsearch 2.0., +, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java, +import org.elasticsearch.gateway.local.LocalGatewayAllocator;, +    private Class<? extends GatewayAllocator> gatewayAllocator = LocalGatewayAllocator.class;, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocators.java, +    public ShardsAllocators(GatewayAllocator allocator) {, +        this(ImmutableSettings.Builder.EMPTY_SETTINGS, allocator);, +    public ShardsAllocators(Settings settings, GatewayAllocator allocator) {, +      this(settings, allocator, new BalancedShardsAllocator(settings));, +++ b/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +    public static String GATEWAY_TYPE_SETTING = "gateway.type";, +, +        Class gateway = settings.getAsClass(GATEWAY_TYPE_SETTING, LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule");, +        return ImmutableList.of(Modules.createModule(gateway, settings));, +++ b/config/elasticsearch.yml, +# For more information, see, +++ b/docs/reference/modules/gateway.asciidoc, +The gateway set on the node level will automatically control the index gateway, +that will be used. For example, if the `local` gateway is used (the default),, +then each index created on the node will automatically use its own respective, +index level `local` gateway., +The `none` gateway option was removed in Elasticsearch 2.0., +, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java, +import org.elasticsearch.gateway.local.LocalGatewayAllocator;, +    private Class<? extends GatewayAllocator> gatewayAllocator = LocalGatewayAllocator.class;, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocators.java, +    public ShardsAllocators(GatewayAllocator allocator) {, +        this(ImmutableSettings.Builder.EMPTY_SETTINGS, allocator);, +    public ShardsAllocators(Settings settings, GatewayAllocator allocator) {, +      this(settings, allocator, new BalancedShardsAllocator(settings));, +++ b/src/main/java/org/elasticsearch/gateway/GatewayModule.java, +    public static String GATEWAY_TYPE_SETTING = "gateway.type";, +, +        Class gateway = settings.getAsClass(GATEWAY_TYPE_SETTING, LocalGatewayModule.class, "org.elasticsearch.gateway.", "GatewayModule");, +        return ImmutableList.of(Modules.createModule(gateway, settings));, +++ /dev/null, +++ b/config/elasticsearch.yml, +# For more information, see, +++ b/docs/reference/modules/gateway.asciidoc, +The gateway set on the node level will automatically control the index gateway, +that will be used. For example, if the `local` gateway is used (the default),, +then each index created on the node will automatically use its own respective, +index level `local` gateway., +The `none` gateway option was removed in Elasticsearch 2.0., +, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java, +import org.elasticsearch.gateway.local.LocalGatewayAllocator;, +    private Class<? extends GatewayAllocator> gatewayAllocator = LocalGatewayAllocator.class;, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocators.java, +    public ShardsAllocators(GatewayAllocator allocator) {, +        this(ImmutableSettings.Builder.EMPTY_SETTINGS, allocator);]