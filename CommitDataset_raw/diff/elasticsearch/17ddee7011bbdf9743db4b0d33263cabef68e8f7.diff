[+++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +++ b/core/src/main/java/org/elasticsearch/repositories/VerifyNodeRepositoryAction.java, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +++ b/core/src/main/java/org/elasticsearch/repositories/VerifyNodeRepositoryAction.java, +++ b/core/src/main/java/org/elasticsearch/transport/TransportService.java, +    private <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg) {, +            if (requestHandlers.containsKey(reg.getAction())) {, +                throw new IllegalArgumentException("transport handlers for action " + reg.getAction() + " is already registered");, +            }, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +++ b/core/src/main/java/org/elasticsearch/repositories/VerifyNodeRepositoryAction.java, +++ b/core/src/main/java/org/elasticsearch/transport/TransportService.java, +    private <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg) {, +            if (requestHandlers.containsKey(reg.getAction())) {, +                throw new IllegalArgumentException("transport handlers for action " + reg.getAction() + " is already registered");, +            }, +++ b/core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java, +    private ShardStateAction shardStateAction;, +, +        shardStateAction = new ShardStateAction(Settings.EMPTY, clusterService, transportService, null, null, threadPool);, +        action = new Action(Settings.EMPTY, "testAction", transportService, clusterService, shardStateAction, threadPool);, +        Action action = new Action(Settings.EMPTY, "testActionWithExceptions", transportService, clusterService, shardStateAction,, +            threadPool) {, +        Action action = new Action(Settings.EMPTY, "testActionWithExceptions", transportService, clusterService, shardStateAction,, +            threadPool) {, +               ShardStateAction shardStateAction,, +                shardStateAction,, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +        this(id, address, Collections.emptyMap(), EnumSet.allOf(Role.class), version);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +++ b/core/src/main/java/org/elasticsearch/repositories/VerifyNodeRepositoryAction.java, +++ b/core/src/main/java/org/elasticsearch/transport/TransportService.java, +    private <Request extends TransportRequest> void registerRequestHandler(RequestHandlerRegistry<Request> reg) {, +            if (requestHandlers.containsKey(reg.getAction())) {, +                throw new IllegalArgumentException("transport handlers for action " + reg.getAction() + " is already registered");, +            }, +++ b/core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java, +    private ShardStateAction shardStateAction;, +]