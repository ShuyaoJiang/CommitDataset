[+++ b/src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java, +++ b/src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java, +++ b/src/main/java/org/elasticsearch/index/search/geo/GeoDistanceFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptedDocs) throws IOException {, +            DocIdSet docIdSet = boundingBoxFilter.getDocIdSet(context, acceptedDocs);, +            boundingBoxDocSet = DocSets.convert(context.reader(), docIdSet);, +        final GeoPointFieldData fieldData = (GeoPointFieldData) fieldDataCache.cache(GeoPointFieldDataType.TYPE, context.reader(), fieldName);, +        GeoDistanceDocSet distDocSet = new GeoDistanceDocSet(context.reader().maxDoc(), fieldData, fixedSourceDistance, distanceBoundingCheck, distance);, +++ b/src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java, +++ b/src/main/java/org/elasticsearch/index/search/geo/GeoDistanceFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptedDocs) throws IOException {, +            DocIdSet docIdSet = boundingBoxFilter.getDocIdSet(context, acceptedDocs);, +            boundingBoxDocSet = DocSets.convert(context.reader(), docIdSet);, +        final GeoPointFieldData fieldData = (GeoPointFieldData) fieldDataCache.cache(GeoPointFieldDataType.TYPE, context.reader(), fieldName);, +        GeoDistanceDocSet distDocSet = new GeoDistanceDocSet(context.reader().maxDoc(), fieldData, fixedSourceDistance, distanceBoundingCheck, distance);, +++ b/src/main/java/org/elasticsearch/search/fetch/matchedfilters/MatchedFiltersFetchSubPhase.java, +                DocIdSet docIdSet = filter.getDocIdSet(hitContext.readerContext(), null); // null is fine, since we filter by hitContext.docId(), +++ b/src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java, +++ b/src/main/java/org/elasticsearch/index/search/geo/GeoDistanceFilter.java, +import org.apache.lucene.index.AtomicReaderContext;, +import org.apache.lucene.util.Bits;, +    public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptedDocs) throws IOException {, +            DocIdSet docIdSet = boundingBoxFilter.getDocIdSet(context, acceptedDocs);, +            boundingBoxDocSet = DocSets.convert(context.reader(), docIdSet);, +        final GeoPointFieldData fieldData = (GeoPointFieldData) fieldDataCache.cache(GeoPointFieldDataType.TYPE, context.reader(), fieldName);, +        GeoDistanceDocSet distDocSet = new GeoDistanceDocSet(context.reader().maxDoc(), fieldData, fixedSourceDistance, distanceBoundingCheck, distance);, +++ b/src/main/java/org/elasticsearch/search/fetch/matchedfilters/MatchedFiltersFetchSubPhase.java, +                DocIdSet docIdSet = filter.getDocIdSet(hitContext.readerContext(), null); // null is fine, since we filter by hitContext.docId(), +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java, +                        textsToHighlight = (List) fieldVisitor.values();]