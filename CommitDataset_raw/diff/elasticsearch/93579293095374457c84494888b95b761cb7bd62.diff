[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/Percentile.java, +import static org.elasticsearch.common.logging.LoggerMessageFormat.format;, +            return new TypeResolution(format(null, "2nd argument of PERCENTILE must be a constant, received [{}]",, +                Expressions.name(percent)));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/Percentile.java, +import static org.elasticsearch.common.logging.LoggerMessageFormat.format;, +            return new TypeResolution(format(null, "2nd argument of PERCENTILE must be a constant, received [{}]",, +                Expressions.name(percent)));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/PercentileRank.java, +import static org.elasticsearch.common.logging.LoggerMessageFormat.format;, +            return new TypeResolution(format(null, "2nd argument of PERCENTILE_RANK must be a constant, received [{}]",, +                Expressions.name(value)));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/Percentile.java, +import static org.elasticsearch.common.logging.LoggerMessageFormat.format;, +            return new TypeResolution(format(null, "2nd argument of PERCENTILE must be a constant, received [{}]",, +                Expressions.name(percent)));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/aggregate/PercentileRank.java, +import static org.elasticsearch.common.logging.LoggerMessageFormat.format;, +            return new TypeResolution(format(null, "2nd argument of PERCENTILE_RANK must be a constant, received [{}]",, +                Expressions.name(value)));, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java, +        assertEquals("1:8: 2nd argument of PERCENTILE must be a constant, received [ABS(int)]",, +            error("SELECT PERCENTILE(int, ABS(int)) FROM test"));, +        assertEquals("1:8: 2nd argument of PERCENTILE_RANK must be a constant, received [ABS(int)]",, +            error("SELECT PERCENTILE_RANK(int, ABS(int)) FROM test"));]