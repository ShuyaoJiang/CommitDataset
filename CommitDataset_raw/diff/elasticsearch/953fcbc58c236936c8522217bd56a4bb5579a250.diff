[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.SearchScript;, +import org.elasticsearch.search.lookup.SearchLookup;, +    private final ScriptService scriptService;, +, +                                      IndicesService indicesService, ScriptService scriptService, ThreadPool threadPool) {, +        this.scriptService = scriptService;, +, +                // now, go and do the script thingy if needed, +                if (request.fields() != null && request.fields().length > 0) {, +                    SearchLookup searchLookup = null;, +                    for (String field : request.fields()) {, +                        String script = null;, +                        if (field.contains("_source.") || field.contains("doc[")) {, +                            script = field;, +                        } else {, +                            FieldMappers x = docMapper.mappers().smartName(field);, +                            if (x != null && !x.mapper().stored()) {, +                                script = "_source." + x.mapper().names().fullName();, +                            }, +                        }, +                        if (script != null) {, +                            if (searchLookup == null) {, +                                searchLookup = new SearchLookup(indexService.mapperService(), indexService.cache().fieldData());, +                            }, +                            SearchScript searchScript = scriptService.search(searchLookup, "mvel", script, null);, +                            searchScript.setNextReader(docIdAndVersion.reader);, +                            searchScript.setNextDocId(docIdAndVersion.docId);, +, +                            try {, +                                Object value = searchScript.run();, +                                if (fields == null) {, +                                    fields = newHashMapWithExpectedSize(2);, +                                }, +                                GetField getField = fields.get(field);, +                                if (getField == null) {, +                                    getField = new GetField(field, new ArrayList<Object>(2));, +                                    fields.put(field, getField);, +                                }, +                                getField.values().add(value);, +                            } catch (RuntimeException e) {, +                                if (logger.isTraceEnabled()) {, +                                    logger.trace("failed to execute get request script field [{}]", e, script);, +                                }, +                                // ignore, +                            }, +                        }, +                    }, +                }, +        FieldMappersFieldSelector fieldSelector = null;, +            if (x != null && x.mapper().stored()) {, +                if (fieldSelector == null) {, +                    fieldSelector = new FieldMappersFieldSelector();, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +import org.elasticsearch.script.ScriptService;, +import org.elasticsearch.script.SearchScript;, +import org.elasticsearch.search.lookup.SearchLookup;, +    private final ScriptService scriptService;, +, +                                      IndicesService indicesService, ScriptService scriptService, ThreadPool threadPool) {, +        this.scriptService = scriptService;, +, +                // now, go and do the script thingy if needed, +                if (request.fields() != null && request.fields().length > 0) {, +                    SearchLookup searchLookup = null;, +                    for (String field : request.fields()) {, +                        String script = null;, +                        if (field.contains("_source.") || field.contains("doc[")) {, +                            script = field;, +                        } else {, +                            FieldMappers x = docMapper.mappers().smartName(field);, +                            if (x != null && !x.mapper().stored()) {, +                                script = "_source." + x.mapper().names().fullName();, +                            }, +                        }, +                        if (script != null) {, +                            if (searchLookup == null) {, +                                searchLookup = new SearchLookup(indexService.mapperService(), indexService.cache().fieldData());, +                            }, +                            SearchScript searchScript = scriptService.search(searchLookup, "mvel", script, null);, +                            searchScript.setNextReader(docIdAndVersion.reader);, +                            searchScript.setNextDocId(docIdAndVersion.docId);, +, +                            try {, +                                Object value = searchScript.run();, +                                if (fields == null) {, +                                    fields = newHashMapWithExpectedSize(2);, +                                }, +                                GetField getField = fields.get(field);, +                                if (getField == null) {, +                                    getField = new GetField(field, new ArrayList<Object>(2));, +                                    fields.put(field, getField);, +                                }, +                                getField.values().add(value);, +                            } catch (RuntimeException e) {, +                                if (logger.isTraceEnabled()) {, +                                    logger.trace("failed to execute get request script field [{}]", e, script);]