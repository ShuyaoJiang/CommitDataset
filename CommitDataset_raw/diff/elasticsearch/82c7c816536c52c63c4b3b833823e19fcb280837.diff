[+++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +    public void testBadTypeMatchQuery() throws Exception {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/match-query-bad-type.json");, +        QueryParsingException expectedException = null;, +        try {, +            queryParser.parse(query).query();, +        } catch (QueryParsingException qpe) {, +            expectedException = qpe;, +        }, +        assertThat(expectedException, notNullValue());, +    }     , +, +    @Test, +    public void testBadTypeMultiMatchQuery() throws Exception {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/multiMatch-query-bad-type.json");, +        QueryParsingException expectedException = null;, +        try {, +            queryParser.parse(query).query();, +        } catch (QueryParsingException qpe) {, +            expectedException = qpe;, +        }, +        assertThat(expectedException, notNullValue());, +    }, +, +    @Test, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +    public void testBadTypeMatchQuery() throws Exception {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/match-query-bad-type.json");, +        QueryParsingException expectedException = null;, +        try {, +            queryParser.parse(query).query();, +        } catch (QueryParsingException qpe) {, +            expectedException = qpe;, +        }, +        assertThat(expectedException, notNullValue());, +    }     , +, +    @Test, +    public void testBadTypeMultiMatchQuery() throws Exception {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/multiMatch-query-bad-type.json");, +        QueryParsingException expectedException = null;, +        try {, +            queryParser.parse(query).query();, +        } catch (QueryParsingException qpe) {, +            expectedException = qpe;, +        }, +        assertThat(expectedException, notNullValue());, +    }, +, +    @Test, +++ b/src/test/java/org/elasticsearch/index/query/match-query-bad-type.json, +{, +    "match" : {, +        "message" : {, +            "query" : "this is a test",, +            "type" : "doesNotExist", +        }, +    }, +}, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +    public void testBadTypeMatchQuery() throws Exception {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/match-query-bad-type.json");, +        QueryParsingException expectedException = null;, +        try {, +            queryParser.parse(query).query();, +        } catch (QueryParsingException qpe) {, +            expectedException = qpe;, +        }, +        assertThat(expectedException, notNullValue());, +    }     , +, +    @Test, +    public void testBadTypeMultiMatchQuery() throws Exception {, +        IndexQueryParserService queryParser = queryParser();, +        String query = copyToStringFromClasspath("/org/elasticsearch/index/query/multiMatch-query-bad-type.json");, +        QueryParsingException expectedException = null;, +        try {, +            queryParser.parse(query).query();, +        } catch (QueryParsingException qpe) {, +            expectedException = qpe;, +        }, +        assertThat(expectedException, notNullValue());, +    }, +, +    @Test, +++ b/src/test/java/org/elasticsearch/index/query/match-query-bad-type.json, +{, +    "match" : {, +        "message" : {, +            "query" : "this is a test",, +            "type" : "doesNotExist", +        }, +    }, +}, +++ b/src/test/java/org/elasticsearch/index/query/multiMatch-query-bad-type.json]