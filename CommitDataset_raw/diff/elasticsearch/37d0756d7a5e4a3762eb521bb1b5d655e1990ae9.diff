[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            TokenizerFactory tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers, analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory, charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(tokenizerFactory.name(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static TokenizerFactory parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        return tokenizerFactory;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            TokenizerFactory tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers, analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory, charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(tokenizerFactory.name(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static TokenizerFactory parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        return tokenizerFactory;, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            TokenizerFactory tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers, analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory, charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(tokenizerFactory.name(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static TokenizerFactory parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        return tokenizerFactory;, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            TokenizerFactory tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers, analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory, charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(tokenizerFactory.name(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static TokenizerFactory parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        return tokenizerFactory;, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +         * fail the primary, typically due to the fact that the operation has learned the primary has been demoted by the master, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            TokenizerFactory tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers, analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory, charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(tokenizerFactory.name(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static TokenizerFactory parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        return tokenizerFactory;, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +         * fail the primary, typically due to the fact that the operation has learned the primary has been demoted by the master, +, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java, +import org.elasticsearch.script.LeafSearchScript;, +    private final SearchScript script;, +    public ScriptScoreFunction(Script sScript, SearchScript script) {, +        final LeafSearchScript leafScript = script.getLeafSearchScript(ctx);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            TokenizerFactory tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers, analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory, charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(tokenizerFactory.name(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static TokenizerFactory parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        return tokenizerFactory;, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +         * fail the primary, typically due to the fact that the operation has learned the primary has been demoted by the master, +, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java, +import org.elasticsearch.script.LeafSearchScript;, +    private final SearchScript script;, +    public ScriptScoreFunction(Script sScript, SearchScript script) {, +        final LeafSearchScript leafScript = script.getLeafSearchScript(ctx);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AbstractTokenizerFactory.java, +, +    private final String name;, +, +, +    public AbstractTokenizerFactory(IndexSettings indexSettings, String name, Settings settings) {, +        this.name = name;, +    @Override, +    public String name() {, +        return this.name;, +    }, +    , +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +            TokenizerFactory tokenizerFactory = parseTokenizerFactory(request, indexAnalyzers, analysisRegistry, environment);, +            analyzer = new CustomAnalyzer(tokenizerFactory, charFilterFactories, tokenFilterFactories);, +            detailResponse = new DetailAnalyzeResponse(charFilteredLists, new DetailAnalyzeResponse.AnalyzeTokenList(tokenizerFactory.name(), tokenizerTokenListCreator.getArrayTokens()), tokenFilterLists);, +    private static TokenizerFactory parseTokenizerFactory(AnalyzeRequest request, IndexAnalyzers indexAnalzyers,, +        return tokenizerFactory;, +++ b/core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +         * fail the primary, typically due to the fact that the operation has learned the primary has been demoted by the master, +, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java, +import org.elasticsearch.script.LeafSearchScript;, +    private final SearchScript script;, +    public ScriptScoreFunction(Script sScript, SearchScript script) {, +        final LeafSearchScript leafScript = script.getLeafSearchScript(ctx);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AbstractTokenizerFactory.java, +, +    private final String name;, +, +, +    public AbstractTokenizerFactory(IndexSettings indexSettings, String name, Settings settings) {, +        this.name = name;, +    @Override]