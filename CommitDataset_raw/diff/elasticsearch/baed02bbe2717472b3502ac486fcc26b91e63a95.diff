[+++ b/core/src/main/java/org/elasticsearch/index/mapper/IpFieldMapper.java, +        public static final class IpScriptDocValues extends AbstractList<String> implements ScriptDocValues<String> {, +++ b/core/src/main/java/org/elasticsearch/index/mapper/IpFieldMapper.java, +        public static final class IpScriptDocValues extends AbstractList<String> implements ScriptDocValues<String> {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +                            assert elements[2].equals("->") : "Invalid struct definition [" + String.join(" ", elements) +"]";, +                                assert elements.length == 5 : "Invalid struct definition [" + String.join(" ", elements) + "]";, +                throw new RuntimeException("error in " + file + ", line: " + currentLine, e);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/IpFieldMapper.java, +        public static final class IpScriptDocValues extends AbstractList<String> implements ScriptDocValues<String> {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +                            assert elements[2].equals("->") : "Invalid struct definition [" + String.join(" ", elements) +"]";, +                                assert elements.length == 5 : "Invalid struct definition [" + String.join(" ", elements) + "]";, +                throw new RuntimeException("error in " + file + ", line: " + currentLine, e);, +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/org.elasticsearch.txt, +class org.elasticsearch.index.fielddata.ScriptDocValues.BytesRefs -> org.elasticsearch.index.fielddata.ScriptDocValues$BytesRefs extends List,Collection,Iterable,Object {, +  BytesRef get(int), +  BytesRef getValue(), +  List getValues(), +}, +, +class BytesRef -> org.apache.lucene.util.BytesRef extends Object {, +  byte[] bytes, +  int offset, +  int length, +  boolean bytesEquals(BytesRef), +  String utf8ToString(), +}, +, +class org.elasticsearch.index.mapper.IpFieldMapper.IpFieldType.IpScriptDocValues -> org.elasticsearch.index.mapper.IpFieldMapper$IpFieldType$IpScriptDocValues extends List,Collection,Iterable,Object {, +  String get(int), +  String getValue(), +  List getValues(), +}, +, +++ b/core/src/main/java/org/elasticsearch/index/mapper/IpFieldMapper.java, +        public static final class IpScriptDocValues extends AbstractList<String> implements ScriptDocValues<String> {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +                            assert elements[2].equals("->") : "Invalid struct definition [" + String.join(" ", elements) +"]";, +                                assert elements.length == 5 : "Invalid struct definition [" + String.join(" ", elements) + "]";, +                throw new RuntimeException("error in " + file + ", line: " + currentLine, e);, +++ b/modules/lang-painless/src/main/resources/org/elasticsearch/painless/org.elasticsearch.txt, +class org.elasticsearch.index.fielddata.ScriptDocValues.BytesRefs -> org.elasticsearch.index.fielddata.ScriptDocValues$BytesRefs extends List,Collection,Iterable,Object {, +  BytesRef get(int), +  BytesRef getValue(), +  List getValues(), +}, +, +class BytesRef -> org.apache.lucene.util.BytesRef extends Object {, +  byte[] bytes, +  int offset, +  int length, +  boolean bytesEquals(BytesRef), +  String utf8ToString(), +}, +, +class org.elasticsearch.index.mapper.IpFieldMapper.IpFieldType.IpScriptDocValues -> org.elasticsearch.index.mapper.IpFieldMapper$IpFieldType$IpScriptDocValues extends List,Collection,Iterable,Object {, +  String get(int), +  String getValue(), +  List getValues(), +}, +, +++ b/modules/lang-painless/src/test/resources/rest-api-spec/test/painless/50_script_doc_values.yaml, +setup:, +    - do:, +        indices.create:, +            index: test, +            body:, +                mappings:, +                    test:, +                        properties:, +                            binary:, +                                type: binary, +                                doc_values: true, +                            boolean:, +                                type: boolean, +                            date:, +                                type: date, +                            geo_point:, +                                type: geo_point, +                            ip:, +                                type: ip, +                            keyword:, +                                type: keyword, +                            long:, +                                type: long, +                            integer:, +                                type: integer, +                            short:, +                                type: short, +                            byte:, +                                type: byte, +                            double:, +                                type: double, +                            float:, +                                type: float, +                            half_float:, +                                type: half_float, +                            scaled_float:, +                                type: scaled_float]