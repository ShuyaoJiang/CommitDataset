[+++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +        } catch (RestTestResponseException e) {, +            if (e.getResponseException().getResponse().getStatusLine().getStatusCode() != 404) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +        } catch (RestTestResponseException e) {, +            if (e.getResponseException().getResponse().getStatusLine().getStatusCode() != 404) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/RestTestExecutionContext.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +            return response;, +        } catch(RestTestResponseException e) {, +            response = e.getRestTestResponse();, +            throw e;, +        } finally {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +        } catch (RestTestResponseException e) {, +            if (e.getResponseException().getResponse().getStatusLine().getStatusCode() != 404) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/RestTestExecutionContext.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +            return response;, +        } catch(RestTestResponseException e) {, +            response = e.getRestTestResponse();, +            throw e;, +        } finally {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/client/RestTestClient.java, +            try {, +            } catch(ResponseException e) {, +                throw new RestTestResponseException(e);, +            }, +            Response response = restClient.performRequest(requestMethod, requestPath, queryStringParams, requestBody, requestHeaders);, +            throw new RestTestResponseException(e);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +        } catch (RestTestResponseException e) {, +            if (e.getResponseException().getResponse().getStatusLine().getStatusCode() != 404) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/RestTestExecutionContext.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +            return response;, +        } catch(RestTestResponseException e) {, +            response = e.getRestTestResponse();, +            throw e;, +        } finally {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/client/RestTestClient.java, +            try {, +            } catch(ResponseException e) {, +                throw new RestTestResponseException(e);, +            }, +            Response response = restClient.performRequest(requestMethod, requestPath, queryStringParams, requestBody, requestHeaders);, +            throw new RestTestResponseException(e);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/client/RestTestResponse.java, +    RestTestResponse(Response response) throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +        } catch (RestTestResponseException e) {, +            if (e.getResponseException().getResponse().getStatusLine().getStatusCode() != 404) {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/RestTestExecutionContext.java, +import org.elasticsearch.test.rest.client.RestTestResponseException;, +            return response;, +        } catch(RestTestResponseException e) {, +            response = e.getRestTestResponse();, +            throw e;, +        } finally {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/client/RestTestClient.java, +            try {, +            } catch(ResponseException e) {, +                throw new RestTestResponseException(e);, +            }, +            Response response = restClient.performRequest(requestMethod, requestPath, queryStringParams, requestBody, requestHeaders);, +            throw new RestTestResponseException(e);, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/client/RestTestResponse.java, +    RestTestResponse(Response response) throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/client/RestTestResponseException.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.rest.client;, +, +import org.elasticsearch.client.ResponseException;, +, +import java.io.IOException;, +, +/**]