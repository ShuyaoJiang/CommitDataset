[+++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/dev-tools/forbidden/core-signatures.txt, +@defaultMessage QueryWrapperFilter is cacheable by default - use Queries#wrap instead, +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/dev-tools/forbidden/core-signatures.txt, +@defaultMessage QueryWrapperFilter is cacheable by default - use Queries#wrap instead, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +to avoid unnecessary initialization of the frequencies. The flag will have only, +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/dev-tools/forbidden/core-signatures.txt, +@defaultMessage QueryWrapperFilter is cacheable by default - use Queries#wrap instead, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +to avoid unnecessary initialization of the frequencies. The flag will have only, +++ b/docs/reference/query-dsl/filters/geo-shape-filter.asciidoc, +providing a whole shape definition, or by referencing the name of a shape, +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/dev-tools/forbidden/core-signatures.txt, +@defaultMessage QueryWrapperFilter is cacheable by default - use Queries#wrap instead, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +to avoid unnecessary initialization of the frequencies. The flag will have only, +++ b/docs/reference/query-dsl/filters/geo-shape-filter.asciidoc, +providing a whole shape definition, or by referencing the name of a shape, +++ b/docs/reference/query-dsl/queries/regexp-syntax.asciidoc, +Note that the dash `"-"` indicates a range of characters, unless it is, +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/dev-tools/forbidden/core-signatures.txt, +@defaultMessage QueryWrapperFilter is cacheable by default - use Queries#wrap instead, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +to avoid unnecessary initialization of the frequencies. The flag will have only, +++ b/docs/reference/query-dsl/filters/geo-shape-filter.asciidoc, +providing a whole shape definition, or by referencing the name of a shape, +++ b/docs/reference/query-dsl/queries/regexp-syntax.asciidoc, +Note that the dash `"-"` indicates a range of characters, unless it is, +++ b/docs/reference/query-dsl/queries/span-not-query.asciidoc, +In the above example all documents with the term hoya are filtered except the ones that have 'la' preceding them., +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/dev-tools/forbidden/core-signatures.txt, +@defaultMessage QueryWrapperFilter is cacheable by default - use Queries#wrap instead, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +to avoid unnecessary initialization of the frequencies. The flag will have only, +++ b/docs/reference/query-dsl/filters/geo-shape-filter.asciidoc, +providing a whole shape definition, or by referencing the name of a shape, +++ b/docs/reference/query-dsl/queries/regexp-syntax.asciidoc, +Note that the dash `"-"` indicates a range of characters, unless it is, +++ b/docs/reference/query-dsl/queries/span-not-query.asciidoc, +In the above example all documents with the term hoya are filtered except the ones that have 'la' preceding them., +++ b/docs/reference/search/aggregations/bucket/significantterms-aggregation.asciidoc, +Roughly, `mutual_information` prefers high frequent terms even if they occur also frequently in the background. For example, in an analysis of natural language text this might lead to selection of stop words. `mutual_information` is unlikely to select very rare terms like misspellings. `gnd` prefers terms with a high co-occurrence and avoids selection of stopwords. It might be better suited for synonym detection. However, `gnd` has a tendency to select very rare terms that are, for example, a result of misspelling. `chi_square` and `jlh` are somewhat in-between., +++ b/bin/service.bat, +echo Successfully started service manager for '%SERVICE_ID%'., +++ b/dev-tools/build_release.py, +      print('Running Backwards compatibility tests against version [%s]' % (bwc_version)), +++ b/dev-tools/extract_party_license.rb, +  puts '='*80 #separator, +++ b/dev-tools/forbidden/core-signatures.txt, +@defaultMessage QueryWrapperFilter is cacheable by default - use Queries#wrap instead, +++ b/docs/reference/modules/advanced-scripting.asciidoc, +to avoid unnecessary initialization of the frequencies. The flag will have only]