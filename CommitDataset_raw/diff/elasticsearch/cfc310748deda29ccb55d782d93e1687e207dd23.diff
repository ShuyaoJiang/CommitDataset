[+++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java, +import org.elasticsearch.xpack.core.ml.job.results.Bucket;, +                Bucket lastBucket = missingDataBuckets.get(missingDataBuckets.size() - 1).getBucket();, +                // Get the end of the last bucket and make it milliseconds, +                Date endTime = new Date((lastBucket.getEpoch() + lastBucket.getBucketSpan()) * 1000);, +, +                String msg = Messages.getMessage(Messages.JOB_AUDIT_DATAFEED_MISSING_DATA, totalRecordsMissing,, +                    XContentElasticsearchExtension.DEFAULT_DATE_PRINTER.print(lastBucket.getTimestamp().getTime()));, +, +                Annotation annotation = createAnnotation(missingDataBuckets.get(0).getBucket().getTimestamp(), endTime, msg);, +                    && annotation.getEndTimestamp().equals(lastDataCheckAnnotation.getEndTimestamp())) {, +                auditor.warning(jobId, msg);, +    private Annotation createAnnotation(Date startTime, Date endTime, String msg) {, +       Date currentTime = new Date(currentTimeSupplier.get());, +           currentTime,, +           currentTime,, +           SystemUser.NAME,, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java, +import org.elasticsearch.xpack.core.ml.job.results.Bucket;, +                Bucket lastBucket = missingDataBuckets.get(missingDataBuckets.size() - 1).getBucket();, +                // Get the end of the last bucket and make it milliseconds, +                Date endTime = new Date((lastBucket.getEpoch() + lastBucket.getBucketSpan()) * 1000);, +, +                String msg = Messages.getMessage(Messages.JOB_AUDIT_DATAFEED_MISSING_DATA, totalRecordsMissing,, +                    XContentElasticsearchExtension.DEFAULT_DATE_PRINTER.print(lastBucket.getTimestamp().getTime()));, +, +                Annotation annotation = createAnnotation(missingDataBuckets.get(0).getBucket().getTimestamp(), endTime, msg);, +                    && annotation.getEndTimestamp().equals(lastDataCheckAnnotation.getEndTimestamp())) {, +                auditor.warning(jobId, msg);, +    private Annotation createAnnotation(Date startTime, Date endTime, String msg) {, +       Date currentTime = new Date(currentTimeSupplier.get());, +           currentTime,, +           currentTime,, +           SystemUser.NAME,, +++ b/x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJobTests.java, +import java.util.Arrays;, +        when(bucket.getEpoch()).thenReturn(2L);, +        when(bucket.getBucketSpan()).thenReturn(4L);, +            new Date((bucket.getEpoch() + bucket.getBucketSpan()) * 1000),, +            new Date(currentTime),, +            SystemUser.NAME,, +        Bucket bucket2 = mock(Bucket.class);, +        when(bucket2.getTimestamp()).thenReturn(new Date(6000));, +        when(bucket2.getEpoch()).thenReturn(6L);, +        when(bucket2.getBucketSpan()).thenReturn(4L);, +            .thenReturn(Arrays.asList(BucketWithMissingData.fromMissingAndBucket(10, bucket),, +                BucketWithMissingData.fromMissingAndBucket(5, bucket2)));, +            XContentElasticsearchExtension.DEFAULT_DATE_PRINTER.print(6000));, +        updatedAnnotation.setEndTimestamp(new Date((bucket2.getEpoch() + bucket2.getBucketSpan()) * 1000));, +, +        // Execute a fifth time, no changes should occur as annotation is the same, +        currentTime = currentTime + DatafeedJob.MISSING_DATA_CHECK_INTERVAL_MS + 1;, +        inputStream = new ByteArrayInputStream(contentBytes);, +        when(dataExtractor.hasNext()).thenReturn(true).thenReturn(false);, +        when(dataExtractor.next()).thenReturn(Optional.of(inputStream));, +        when(dataExtractorFactory.newExtractor(anyLong(), anyLong())).thenReturn(dataExtractor);, +        datafeedJob.runRealtime();, +, +        // We should not get 3 index requests for the annotations, +        verify(client, atMost(2)).index(any());]