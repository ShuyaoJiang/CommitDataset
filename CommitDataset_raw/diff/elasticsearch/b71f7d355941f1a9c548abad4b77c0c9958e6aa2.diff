[+++ b/docs/Versions.asciidoc, +:docker-repo:     docker.elastic.co/elasticsearch/elasticsearch, +:docker-image:    {docker-repo}:{version}, +++ b/docs/Versions.asciidoc, +:docker-repo:     docker.elastic.co/elasticsearch/elasticsearch, +:docker-image:    {docker-repo}:{version}, +++ b/docs/reference/setup/install.asciidoc, +Images are available for running Elasticsearch as Docker containers. They may be, +downloaded from the Elastic Docker Registry. The default image ships with, +{xpack-ref}/index.html[X-Pack] pre-installed., +++ b/docs/Versions.asciidoc, +:docker-repo:     docker.elastic.co/elasticsearch/elasticsearch, +:docker-image:    {docker-repo}:{version}, +++ b/docs/reference/setup/install.asciidoc, +Images are available for running Elasticsearch as Docker containers. They may be, +downloaded from the Elastic Docker Registry. The default image ships with, +{xpack-ref}/index.html[X-Pack] pre-installed., +++ b/docs/reference/setup/install/docker.asciidoc, +Elasticsearch is also available as Docker images., +The images use https://hub.docker.com/_/centos/[centos:7] as the base image and, +are available with {xpack-ref}/xpack-introduction.html[X-Pack]., +A list of all published Docker images and tags can be found in https://www.docker.elastic.co[www.docker.elastic.co]. The source code can be found, +on https://github.com/elastic/elasticsearch-docker/tree/{branch}[GitHub]., +==== Image types, +The images are available in three different configurations or "flavors". The, +`basic` flavor, which is the default, ships with X-Pack Basic features, +pre-installed and automatically activated with a free licence. The `platinum`, +flavor features all X-Pack functionally under a 30-day trial licence. The `oss`, +flavor does not include X-Pack, and contains only open-source Elasticsearch., +, +NOTE: {xpack-ref}/xpack-security.html[X-Pack Security] is enabled in the `platinum`, +image. To access your cluster, it's necessary to set an initial password for the, +`elastic` user. The initial password can be set at start up time via the, +`ELASTIC_PASSWORD` environment variable:, +, +["source","txt",subs="attributes"], +--------------------------------------------, +docker run -e ELASTIC_PASSWORD=MagicWord {docker-repo}-platinum:{version}, +--------------------------------------------, +, +NOTE: The `platinum` image includes a trial license for 30 days. After that, you, +can obtain one of the https://www.elastic.co/subscriptions[available, +subscriptions] or revert to a Basic licence. The Basic license is free and, +includes a selection of X-Pack features., +WARNING: Version {version} of Elasticsearch has not yet been released, so no, +Docker image is currently available for this version., +Docker images can be retrieved with the following commands:, +docker pull {docker-repo}:{version}, +docker pull {docker-repo}-platinum:{version}, +docker pull {docker-repo}-oss:{version}, +* macOS with https://docs.docker.com/engine/installation/mac/#/docker-for-mac[Docker for Mac], +* Windows and macOS with https://www.docker.com/products/docker-toolbox[Docker Toolbox], +["source","txt"], +WARNING: Version {version} of Elasticsearch has not yet been released, so a, +`docker-compose.yml` is not available for this version., +Instructions for installing it can be found on the, +https://docs.docker.com/compose/install/#install-using-pip[Docker Compose webpage]., +The node `elasticsearch` listens on `localhost:9200` while `elasticsearch2`, +talks to `elasticsearch` over a Docker network., +WARNING: Version {version} of Elasticsearch has not yet been released, so a, +`docker-compose.yml` is not available for this version., +version: 2.2, +  elasticsearch:, +    image: {docker-image}, +    container_name: elasticsearch, +    image: {docker-image}, +    container_name: elasticsearch2, +      - "discovery.zen.ping.unicast.hosts=elasticsearch", +To destroy the cluster **and the data volumes**, just type `docker-compose down -v`., +["source","txt"], +curl http://127.0.0.1:9200/_cat/health, +IMPORTANT: The container **runs Elasticsearch as user `elasticsearch` using uid:gid `1000:1000`**. Bind mounted host directories and files, such as `custom_elasticsearch.yml` above, **need to be accessible by this user**. For the https://www.elastic.co/guide/en/elasticsearch/reference/current/important-settings.html#path-settings[data and log dirs], such as `/usr/share/elasticsearch/data`, write access is required as well. Also see note 1 below., +COPY --chown=elasticsearch:elasticsearch elasticsearch.yml /usr/share/elasticsearch/config/, +Any Docker parameters mentioned below assume the use of `docker run`., +. By default, Elasticsearch runs inside the container as user `elasticsearch` using uid:gid `1000:1000`., ++, +CAUTION: One exception is https://docs.openshift.com/container-platform/3.6/creating_images/guidelines.html#openshift-specific-guidelines[Openshift] which runs containers using an arbitrarily assigned user ID. Openshift will present persistent volumes with the gid set to `0` which will work without any adjustments., ++, +If you are bind-mounting a local directory or file, ensure it is readable by this user, while the <<path-settings,data and log dirs>> additionally require write access. A good strategy is to grant group access to gid `1000` or `0` for the local directory. As an example, to prepare a local directory for storing data through a bind-mount:, ++, +  mkdir esdatadir, +  chmod g+rwx esdatadir, +  chgrp 1000 esdatadir, ++, +As a last resort, you can also force the container to mutate the ownership of any bind-mounts used for the <<path-settings,data and log dirs>> through the environment variable `TAKE_FILE_OWNERSHIP`; in this case they will be owned by uid:gid `1000:0` providing read/write access to the elasticsearch process as required., +. Swapping needs to be disabled for performance and node stability. This can be, +achieved through any of the methods mentioned in the, +<<setup-configuration-memory,Elasticsearch docs>>. If you opt for the, +`bootstrap.memory_lock: true` approach, apart from defining it through any of, +the <<docker-configuration-methods,configuration methods>>, you will, +additionally need the `memlock: true` ulimit, either defined in the, +https://docs.docker.com/engine/reference/commandline/dockerd/#default-ulimits[Docker, +Daemon] or specifically set for the container. This is demonstrated above in the, +<<docker-prod-cluster-composefile,docker-compose.yml>>. If using `docker run`:, +. Use the `ES_JAVA_OPTS` environment variable to set heap size, e.g. to use 16GB, +use `-e ES_JAVA_OPTS="-Xms16g -Xmx16g"` with `docker run`., +. If you are using the devicemapper storage driver, make sure you are not using, +the default `loop-lvm` mode. Configure docker-engine to use, +https://docs.docker.com/engine/userguide/storagedriver/device-mapper-driver/#configure-docker-with-devicemapper[direct-lvm], +instead.]