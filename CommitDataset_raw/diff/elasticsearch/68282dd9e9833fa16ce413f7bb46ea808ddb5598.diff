[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +                throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +            }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +                throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +                throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +                throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        indexScopedSettings.validate(settings.filter(IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE));, +        final Predicate<String> acceptOnlyClusterSettings = TRIBE_CLIENT_NODE_SETTINGS_PREDICATE.or(IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE).negate();, +, +        // We validate scope settings. We should have one and only one scope., +        if (setting.hasNodeScope() && setting.hasIndexScope()) {, +            throw new IllegalArgumentException("More than one scope has been added to the setting [" + setting.getKey() + "]");, +        }, +        } else if (setting.hasIndexScope()) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +                throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        indexScopedSettings.validate(settings.filter(IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE));, +        final Predicate<String> acceptOnlyClusterSettings = TRIBE_CLIENT_NODE_SETTINGS_PREDICATE.or(IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE).negate();, +, +        // We validate scope settings. We should have one and only one scope., +        if (setting.hasNodeScope() && setting.hasIndexScope()) {, +            throw new IllegalArgumentException("More than one scope has been added to the setting [" + setting.getKey() + "]");, +        }, +        } else if (setting.hasIndexScope()) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +        new Setting<>("index.store.type", "", Function.identity(), Property.IndexScope);, +, +        final String queryCacheType = indexSettings.getValue(INDEX_QUERY_CACHE_TYPE_SETTING);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +                throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        indexScopedSettings.validate(settings.filter(IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE));, +        final Predicate<String> acceptOnlyClusterSettings = TRIBE_CLIENT_NODE_SETTINGS_PREDICATE.or(IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE).negate();, +, +        // We validate scope settings. We should have one and only one scope., +        if (setting.hasNodeScope() && setting.hasIndexScope()) {, +            throw new IllegalArgumentException("More than one scope has been added to the setting [" + setting.getKey() + "]");, +        }, +        } else if (setting.hasIndexScope()) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexModule.java, +        new Setting<>("index.store.type", "", Function.identity(), Property.IndexScope);, +, +        final String queryCacheType = indexSettings.getValue(INDEX_QUERY_CACHE_TYPE_SETTING);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]engine[/\\]EngineConfig.java" checks="LineLength" />, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]index[/\\]store[/\\]FsDirectoryService.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/common/settings/AbstractScopedSettings.java, +            if (isValidKey(setting.getKey()) == false && (setting.isGroupSetting() && isValidGroupKey(setting.getKey())) == false) {, +                throw new IllegalArgumentException("illegal settings key: [" + setting.getKey() + "]");, +            }, +++ b/core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java]