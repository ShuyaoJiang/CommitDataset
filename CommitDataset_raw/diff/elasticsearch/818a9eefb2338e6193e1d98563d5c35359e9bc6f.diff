[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    public static final Setting<Boolean> CLIENT_TRANSPORT_SNIFF = Setting.boolSetting("client.transport.sniff", false, false, Setting.Scope.CLUSTER);, +        if (CLIENT_TRANSPORT_SNIFF.get(this.settings)) {, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    public static final Setting<Boolean> CLIENT_TRANSPORT_SNIFF = Setting.boolSetting("client.transport.sniff", false, false, Setting.Scope.CLUSTER);, +        if (CLIENT_TRANSPORT_SNIFF.get(this.settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("node.name"), nodeId, publishAddress, nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    public static final Setting<Boolean> CLIENT_TRANSPORT_SNIFF = Setting.boolSetting("client.transport.sniff", false, false, Setting.Scope.CLUSTER);, +        if (CLIENT_TRANSPORT_SNIFF.get(this.settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("node.name"), nodeId, publishAddress, nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +        return settings.get("node.name", "");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    public static final Setting<Boolean> CLIENT_TRANSPORT_SNIFF = Setting.boolSetting("client.transport.sniff", false, false, Setting.Scope.CLUSTER);, +        if (CLIENT_TRANSPORT_SNIFF.get(this.settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("node.name"), nodeId, publishAddress, nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +        return settings.get("node.name", "");, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +import org.elasticsearch.common.settings.SettingsModule;, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    public static final Setting<Boolean> CLIENT_TRANSPORT_SNIFF = Setting.boolSetting("client.transport.sniff", false, false, Setting.Scope.CLUSTER);, +        if (CLIENT_TRANSPORT_SNIFF.get(this.settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("node.name"), nodeId, publishAddress, nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +        return settings.get("node.name", "");, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +import org.elasticsearch.common.settings.SettingsModule;, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        String name = settings.get("node.name");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    public static final Setting<Boolean> CLIENT_TRANSPORT_SNIFF = Setting.boolSetting("client.transport.sniff", false, false, Setting.Scope.CLUSTER);, +        if (CLIENT_TRANSPORT_SNIFF.get(this.settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("node.name"), nodeId, publishAddress, nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +        return settings.get("node.name", "");, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +import org.elasticsearch.common.settings.SettingsModule;, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        String name = settings.get("node.name");, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +    public static final Setting<String> TRANSPORT_SERVICE_TYPE_SETTING = Setting.simpleString("transport.service.type", false, Scope.CLUSTER);, +    public static final Setting<String> TRANSPORT_TYPE_SETTING = Setting.simpleString("transport.type", false, Scope.CLUSTER);, +, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +    public static final Setting<Boolean> CLIENT_TRANSPORT_SNIFF = Setting.boolSetting("client.transport.sniff", false, false, Setting.Scope.CLUSTER);, +        if (CLIENT_TRANSPORT_SNIFF.get(this.settings)) {, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +        DiscoveryNode localNode = new DiscoveryNode(settings.get("node.name"), nodeId, publishAddress, nodeAttributes, version);, +++ b/core/src/main/java/org/elasticsearch/common/component/AbstractComponent.java, +        return settings.get("node.name", "");, +++ b/core/src/main/java/org/elasticsearch/common/inject/AbstractModule.java, +import org.elasticsearch.common.settings.SettingsModule;, +++ b/core/src/main/java/org/elasticsearch/common/logging/Loggers.java, +        String name = settings.get("node.name");, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +    public static final Setting<String> TRANSPORT_SERVICE_TYPE_SETTING = Setting.simpleString("transport.service.type", false, Scope.CLUSTER);, +    public static final Setting<String> TRANSPORT_TYPE_SETTING = Setting.simpleString("transport.type", false, Scope.CLUSTER);, +, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.plugins.PluginsService;, +    }, +, +    ;, +            TransportClientNodesService.CLIENT_TRANSPORT_SNIFF,, +            NetworkModule.TRANSPORT_SERVICE_TYPE_SETTING,, +            NetworkModule.TRANSPORT_TYPE_SETTING,, +            ScriptService.SCRIPT_CACHE_EXPIRE_SETTING,, +            ScriptService.SCRIPT_AUTO_RELOAD_ENABLED_SETTING,, +            Node.NODE_NAME_SETTING,, +            Node.NODE_ATTRIBUTES,, +            TribeService.TRIBE_NAME_SETTING,, +            PageCacheRecycler.TYPE_SETTING,, +            PluginsService.MANDATORY_SETTING, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +                logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("node.name"));]