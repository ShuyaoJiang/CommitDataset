[+++ b/TESTING.asciidoc, +build. To add your plugin, create a directory called elasticsearch-extra as, +a sibling of elasticsearch. Checkout your plugin underneath elasticsearch-extra, +and the build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +++ b/TESTING.asciidoc, +build. To add your plugin, create a directory called elasticsearch-extra as, +a sibling of elasticsearch. Checkout your plugin underneath elasticsearch-extra, +and the build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {, +                    throw new InvalidUserDataException("Continued snippets ", +                        + "can't be skipped"), +                }, +                current.println("        - always_skip"), +++ b/TESTING.asciidoc, +build. To add your plugin, create a directory called elasticsearch-extra as, +a sibling of elasticsearch. Checkout your plugin underneath elasticsearch-extra, +and the build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {, +                    throw new InvalidUserDataException("Continued snippets ", +                        + "can't be skipped"), +                }, +                current.println("        - always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit|NOCOMMIT/), +        patterns.put('nocommit should be all lowercase or all uppercase',, +            /((?i)nocommit)(?<!(nocommit|NOCOMMIT))/), +            patterns.put('norelease', /norelease|NORELEASE/), +        patterns.put('norelease should be all lowercase or all uppercase',, +            /((?i)norelease)(?<!(norelease|NORELEASE))/), +, +++ b/TESTING.asciidoc, +build. To add your plugin, create a directory called elasticsearch-extra as, +a sibling of elasticsearch. Checkout your plugin underneath elasticsearch-extra, +and the build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                /* The Elasticsearch test runner doesn't support the warnings, +                 * construct unless you output this skip. Since we don't know, +                 * if this snippet will use the warnings construct we emit this, +                 * warning every time. */, +                current.println("  - skip:"), +                current.println("      features: "), +                current.println("        - warnings"), +                if (test.continued) {, +                    throw new InvalidUserDataException("Continued snippets ", +                        + "can't be skipped"), +                }, +                current.println("        - always_skip"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('nocommit', /nocommit|NOCOMMIT/), +        patterns.put('nocommit should be all lowercase or all uppercase',, +            /((?i)nocommit)(?<!(nocommit|NOCOMMIT))/), +            patterns.put('norelease', /norelease|NORELEASE/), +        patterns.put('norelease should be all lowercase or all uppercase',, +            /((?i)norelease)(?<!(norelease|NORELEASE))/), +, +++ b/client/rest/src/main/java/org/elasticsearch/client/RequestLogger.java, +        if (logger.isWarnEnabled()) {, +            Header[] warnings = httpResponse.getHeaders("Warning");, +            if (warnings != null && warnings.length > 0) {, +                logger.warn(buildWarningMessage(request, host, warnings));, +            }, +        }, +    static String buildWarningMessage(HttpUriRequest request, HttpHost host, Header[] warnings) {, +        StringBuilder message = new StringBuilder("request [").append(request.getMethod()).append(" ").append(host), +                .append(getUri(request.getRequestLine())).append("] returned ").append(warnings.length).append(" warnings: ");, +        for (int i = 0; i < warnings.length; i++) {, +            if (i > 0) {, +                message.append(",");, +            }, +            message.append("[").append(warnings[i].getValue()).append("]");, +        }, +        return message.toString();, +    }, +, +++ b/TESTING.asciidoc, +build. To add your plugin, create a directory called elasticsearch-extra as, +a sibling of elasticsearch. Checkout your plugin underneath elasticsearch-extra, +and the build will automatically pick it up. You can verify the plugin is, +included as part of the build by checking the projects of the build., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy]