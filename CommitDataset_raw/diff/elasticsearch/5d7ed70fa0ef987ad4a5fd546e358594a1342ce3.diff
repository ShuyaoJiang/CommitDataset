[+++ b/.gitignore, +/.settings, +*/.project, +*/.classpath, +*/eclipse-build, +*/.settings, +plugins/*/.settings, +++ b/.gitignore, +/.settings, +*/.project, +*/.classpath, +*/eclipse-build, +*/.settings, +plugins/*/.settings, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java, +                    // In the QueryPhase we don't need this protection, because it is build into the IndexSearcher,, +                    // but here we create collectors ourselves and we need prevent OOM because of crazy an offset and size., +                    topN = Math.min(topN, subSearchContext.searcher().getIndexReader().maxDoc());, +++ b/.gitignore, +/.settings, +*/.project, +*/.classpath, +*/eclipse-build, +*/.settings, +plugins/*/.settings, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java, +                    // In the QueryPhase we don't need this protection, because it is build into the IndexSearcher,, +                    // but here we create collectors ourselves and we need prevent OOM because of crazy an offset and size., +                    topN = Math.min(topN, subSearchContext.searcher().getIndexReader().maxDoc());, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java, +import org.apache.lucene.util.ArrayUtil;, +, +    @Test, +    public void testDontExplode() throws Exception {, +        SearchResponse response = client(), +                .prepareSearch("idx"), +                .setTypes("type"), +                .addAggregation(terms("terms"), +                                .executionHint(randomExecutionHint()), +                                .field(TERMS_AGGS_FIELD), +                                .subAggregation(, +                                        topHits("hits").setSize(ArrayUtil.MAX_ARRAY_LENGTH - 1).addSort(SortBuilders.fieldSort(SORT_FIELD).order(SortOrder.DESC)), +                                ), +                ), +                .get();, +        assertNoFailures(response);, +    }]