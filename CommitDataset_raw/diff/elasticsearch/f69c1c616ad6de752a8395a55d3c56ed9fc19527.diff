[+++ b/src/main/java/org/elasticsearch/shield/authc/esusers/FileUserRolesStore.java, +        if (userRoles == null) {, +            return Strings.EMPTY_ARRAY;, +        }, +        String[] roles = userRoles.get(username);, +        return roles == null ? Strings.EMPTY_ARRAY : userRoles.get(username);, +        List<String> lines;, +++ b/src/main/java/org/elasticsearch/shield/authc/esusers/FileUserRolesStore.java, +        if (userRoles == null) {, +            return Strings.EMPTY_ARRAY;, +        }, +        String[] roles = userRoles.get(username);, +        return roles == null ? Strings.EMPTY_ARRAY : userRoles.get(username);, +        List<String> lines;, +++ b/src/test/java/org/elasticsearch/shield/authc/esusers/FileUserRolesStoreTests.java, +import org.elasticsearch.common.Strings;, +            assertThat(store.roles("user4"), equalTo(Strings.EMPTY_ARRAY));, +    public void testThatEmptyRolesDoesNotCauseNPE() throws Exception {, +        ThreadPool threadPool = null;, +        try {, +            threadPool = new ThreadPool("test");, +            File usersRoles = writeUsersRoles("admin:role1");, +            Settings settings = ImmutableSettings.builder(), +                    .put("watcher.enabled", "false"), +                    .put("shield.authc.esusers.files.users_roles", usersRoles.toPath().toAbsolutePath()), +                    .build();, +            Environment env = new Environment(settings);, +            ResourceWatcherService watcherService = new ResourceWatcherService(settings, threadPool);, +            FileUserRolesStore store = new FileUserRolesStore(settings, env, watcherService);, +            assertThat(store.roles("user"), equalTo(Strings.EMPTY_ARRAY));, +        } finally {, +            if (threadPool != null) {, +                threadPool.shutdownNow();, +            }, +        }, +    }, +, +    @Test, +    private File writeUsersRoles(String input) throws Exception {, +        File file = tempFolder.newFile();, +        com.google.common.io.Files.write(input.getBytes(Charsets.UTF_8), file);, +        return file;, +    }, +]