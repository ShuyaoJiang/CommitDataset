[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +    public static Set<?> parseArticles(Environment env, Settings settings) {, +        String value = settings.get("articles");, +        if (value != null) {, +            if ("_none_".equals(value)) {, +                return ImmutableSet.of();, +            } else {, +                return ImmutableSet.copyOf(Strings.commaDelimitedListToSet(value));, +            }, +        }, +        String[] articles = settings.getAsArray("articles", null);, +        if (articles != null) {, +            Set setArticles = new HashSet<String>(Arrays.asList(articles));, +            return setArticles;, +        }, +        Set<String> pathLoadedArticles = getWordSet(env, settings, "articles");, +        if (pathLoadedArticles != null) {, +            Set setArticles = new HashSet<String>(pathLoadedArticles);, +            return setArticles;, +        }, +, +        return null;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +    public static Set<?> parseArticles(Environment env, Settings settings) {, +        String value = settings.get("articles");, +        if (value != null) {, +            if ("_none_".equals(value)) {, +                return ImmutableSet.of();, +            } else {, +                return ImmutableSet.copyOf(Strings.commaDelimitedListToSet(value));, +            }, +        }, +        String[] articles = settings.getAsArray("articles", null);, +        if (articles != null) {, +            Set setArticles = new HashSet<String>(Arrays.asList(articles));, +            return setArticles;, +        }, +        Set<String> pathLoadedArticles = getWordSet(env, settings, "articles");, +        if (pathLoadedArticles != null) {, +            Set setArticles = new HashSet<String>(pathLoadedArticles);, +            return setArticles;, +        }, +, +        return null;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/ElisionTokenFilterFactory.java, +import org.elasticsearch.env.Environment;, +import java.util.Set;, +    private final Set<?> articles;, +, +    @Inject public ElisionTokenFilterFactory(Index index, @IndexSettings Settings indexSettings, Environment env, @Assisted String name, @Assisted Settings settings) {, +	this.articles = Analysis.parseArticles(env, settings);, +	if (articles == null) {, +	} else {, +	    return new ElisionFilter(version, tokenStream, articles);, +	}]