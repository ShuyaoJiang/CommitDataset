[+++ b/core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java, +    public static final int AUTO_SLICES = 0;, +    public static final String AUTO_SLICES_VALUE = "auto";, +    private static final int DEFAULT_SLICES = 1;, +, +    private int slices = DEFAULT_SLICES;, +        if (searchRequest.source().slice() != null && slices != DEFAULT_SLICES) {, +            e = addValidationError("can't specify both manual and automatic slicing at the same time", e);, +        if (slices < 0) {, +            throw new IllegalArgumentException("[slices] must be at least 0 but was [" + slices + "]");, +    public abstract Self forSlice(TaskId slicingTask, SearchRequest slice, int totalSlices);, +    protected Self doForSlice(Self request, TaskId slicingTask, int totalSlices) {, +        if (totalSlices < 1) {, +            throw new IllegalArgumentException("Number of total slices must be at least 1 but was [" + totalSlices + "]");, +        }, +, +                .setRequestsPerSecond(requestsPerSecond / totalSlices), +            request.setSize(size == SIZE_ALL_MATCHES ? SIZE_ALL_MATCHES : size / totalSlices);, +        return new BulkByScrollTask(id, type, action, getDescription(), parentTaskId);, +        if (out.getVersion().before(Version.V_6_1_0) && slices == AUTO_SLICES) {, +            throw new IllegalArgumentException("Slices set as \"auto\" are not supported before version [" + Version.V_6_1_0 + "]. " +, +                "Found version [" + out.getVersion() + "]");, +            out.writeVInt(slices);, +++ b/core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java, +    public static final int AUTO_SLICES = 0;, +    public static final String AUTO_SLICES_VALUE = "auto";, +    private static final int DEFAULT_SLICES = 1;, +, +    private int slices = DEFAULT_SLICES;, +        if (searchRequest.source().slice() != null && slices != DEFAULT_SLICES) {, +            e = addValidationError("can't specify both manual and automatic slicing at the same time", e);, +        if (slices < 0) {, +            throw new IllegalArgumentException("[slices] must be at least 0 but was [" + slices + "]");, +    public abstract Self forSlice(TaskId slicingTask, SearchRequest slice, int totalSlices);, +    protected Self doForSlice(Self request, TaskId slicingTask, int totalSlices) {, +        if (totalSlices < 1) {, +            throw new IllegalArgumentException("Number of total slices must be at least 1 but was [" + totalSlices + "]");, +        }, +, +                .setRequestsPerSecond(requestsPerSecond / totalSlices), +            request.setSize(size == SIZE_ALL_MATCHES ? SIZE_ALL_MATCHES : size / totalSlices);, +        return new BulkByScrollTask(id, type, action, getDescription(), parentTaskId);, +        if (out.getVersion().before(Version.V_6_1_0) && slices == AUTO_SLICES) {, +            throw new IllegalArgumentException("Slices set as \"auto\" are not supported before version [" + Version.V_6_1_0 + "]. " +, +                "Found version [" + out.getVersion() + "]");, +            out.writeVInt(slices);, +++ b/core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequestBuilder.java, +    public Self setSlices(int slices) {, +        request.setSlices(slices);, +++ b/core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java, +    public static final int AUTO_SLICES = 0;, +    public static final String AUTO_SLICES_VALUE = "auto";, +    private static final int DEFAULT_SLICES = 1;, +, +    private int slices = DEFAULT_SLICES;, +        if (searchRequest.source().slice() != null && slices != DEFAULT_SLICES) {, +            e = addValidationError("can't specify both manual and automatic slicing at the same time", e);, +        if (slices < 0) {, +            throw new IllegalArgumentException("[slices] must be at least 0 but was [" + slices + "]");, +    public abstract Self forSlice(TaskId slicingTask, SearchRequest slice, int totalSlices);, +    protected Self doForSlice(Self request, TaskId slicingTask, int totalSlices) {, +        if (totalSlices < 1) {, +            throw new IllegalArgumentException("Number of total slices must be at least 1 but was [" + totalSlices + "]");, +        }, +, +                .setRequestsPerSecond(requestsPerSecond / totalSlices), +            request.setSize(size == SIZE_ALL_MATCHES ? SIZE_ALL_MATCHES : size / totalSlices);, +        return new BulkByScrollTask(id, type, action, getDescription(), parentTaskId);, +        if (out.getVersion().before(Version.V_6_1_0) && slices == AUTO_SLICES) {, +            throw new IllegalArgumentException("Slices set as \"auto\" are not supported before version [" + Version.V_6_1_0 + "]. " +, +                "Found version [" + out.getVersion() + "]");, +            out.writeVInt(slices);, +++ b/core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequestBuilder.java, +    public Self setSlices(int slices) {, +        request.setSlices(slices);, +++ b/core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkIndexByScrollRequest.java, +    protected Self doForSlice(Self request, TaskId slicingTask, int totalSlices) {, +        return super.doForSlice(request, slicingTask, totalSlices).setScript(script);, +++ b/core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java, +    public static final int AUTO_SLICES = 0;, +    public static final String AUTO_SLICES_VALUE = "auto";, +    private static final int DEFAULT_SLICES = 1;, +, +    private int slices = DEFAULT_SLICES;, +        if (searchRequest.source().slice() != null && slices != DEFAULT_SLICES) {, +            e = addValidationError("can't specify both manual and automatic slicing at the same time", e);, +        if (slices < 0) {, +            throw new IllegalArgumentException("[slices] must be at least 0 but was [" + slices + "]");, +    public abstract Self forSlice(TaskId slicingTask, SearchRequest slice, int totalSlices);, +    protected Self doForSlice(Self request, TaskId slicingTask, int totalSlices) {, +        if (totalSlices < 1) {, +            throw new IllegalArgumentException("Number of total slices must be at least 1 but was [" + totalSlices + "]");, +        }, +, +                .setRequestsPerSecond(requestsPerSecond / totalSlices), +            request.setSize(size == SIZE_ALL_MATCHES ? SIZE_ALL_MATCHES : size / totalSlices);, +        return new BulkByScrollTask(id, type, action, getDescription(), parentTaskId);, +        if (out.getVersion().before(Version.V_6_1_0) && slices == AUTO_SLICES) {, +            throw new IllegalArgumentException("Slices set as \"auto\" are not supported before version [" + Version.V_6_1_0 + "]. " +, +                "Found version [" + out.getVersion() + "]");]