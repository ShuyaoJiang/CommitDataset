[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java, +                            listener.onFailure(new NodeClosedException(clusterService.localNode()));, +                                listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java, +                            listener.onFailure(new NodeClosedException(clusterService.localNode()));, +                                listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java, +        assert node != null;, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java, +                            listener.onFailure(new NodeClosedException(clusterService.localNode()));, +                                listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java, +        assert node != null;, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +                        listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java, +                            listener.onFailure(new NodeClosedException(clusterService.localNode()));, +                                listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java, +        assert node != null;, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +                        listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    indicesService.createIndex(request.index, actualIndexSettings, clusterService.localNode().id());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java, +                            listener.onFailure(new NodeClosedException(clusterService.localNode()));, +                                listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java, +        assert node != null;, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +                        listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    indicesService.createIndex(request.index, actualIndexSettings, clusterService.localNode().id());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            indexService = indicesService.createIndex(indexMetaData.index(), indexMetaData.settings(), clusterService.localNode().id());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java, +                            listener.onFailure(new NodeClosedException(clusterService.localNode()));, +                                listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java, +        assert node != null;, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +                        listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    indicesService.createIndex(request.index, actualIndexSettings, clusterService.localNode().id());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                                            indexService = indicesService.createIndex(indexMetaData.index(), indexMetaData.settings(), clusterService.localNode().id());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                        IndexService indexService = indicesService.createIndex(indexMetaData.index(), indexMetaData.settings(), clusterService.localNode().id());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +            return new NodeHotThreads(clusterService.localNode(), hotThreads.detect());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java, +            return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +        return new NodesRestartResponse.NodeRestartResponse(clusterService.localNode());, +++ b/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java, +                            listener.onFailure(new NodeClosedException(clusterService.localNode()));, +                                listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java, +        assert node != null;, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java, +                        listener.onFailure(new NodeClosedException(clusterService.localNode()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    indicesService.createIndex(request.index, actualIndexSettings, clusterService.localNode().id());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java]