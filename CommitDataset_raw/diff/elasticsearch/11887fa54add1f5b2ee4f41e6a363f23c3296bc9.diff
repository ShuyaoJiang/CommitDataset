[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.action.ingest.DeletePipelineRequest;, +import org.elasticsearch.action.ingest.WritePipelineResponse;, +    public WritePipelineResponse putPipeline(PutPipelineRequest request, Header... headers) throws IOException {, +            WritePipelineResponse::fromXContent, emptySet(), headers);, +    public void putPipelineAsync(PutPipelineRequest request, ActionListener<WritePipelineResponse> listener, Header... headers) {, +            WritePipelineResponse::fromXContent, listener, emptySet(), headers);, +, +    /**, +     * Delete an existing pipeline, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">, +     *     Delete Pipeline API on elastic.co</a>, +     */, +    public WritePipelineResponse deletePipeline(DeletePipelineRequest request, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::deletePipeline,, +            WritePipelineResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously delete an existing pipeline, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">, +     *     Delete Pipeline API on elastic.co</a>, +     */, +    public void deletePipelineAsync(DeletePipelineRequest request, ActionListener<WritePipelineResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::deletePipeline,, +            WritePipelineResponse::fromXContent, listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.action.ingest.DeletePipelineRequest;, +import org.elasticsearch.action.ingest.WritePipelineResponse;, +    public WritePipelineResponse putPipeline(PutPipelineRequest request, Header... headers) throws IOException {, +            WritePipelineResponse::fromXContent, emptySet(), headers);, +    public void putPipelineAsync(PutPipelineRequest request, ActionListener<WritePipelineResponse> listener, Header... headers) {, +            WritePipelineResponse::fromXContent, listener, emptySet(), headers);, +, +    /**, +     * Delete an existing pipeline, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">, +     *     Delete Pipeline API on elastic.co</a>, +     */, +    public WritePipelineResponse deletePipeline(DeletePipelineRequest request, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::deletePipeline,, +            WritePipelineResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously delete an existing pipeline, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">, +     *     Delete Pipeline API on elastic.co</a>, +     */, +    public void deletePipelineAsync(DeletePipelineRequest request, ActionListener<WritePipelineResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::deletePipeline,, +            WritePipelineResponse::fromXContent, listener, emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.ingest.DeletePipelineRequest;, +    static Request deletePipeline(DeletePipelineRequest deletePipelineRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_ingest/pipeline"), +            .addPathPart(deletePipelineRequest.getId()), +            .build();, +        Request request = new Request(HttpDelete.METHOD_NAME, endpoint);, +, +        Params parameters = new Params(request);, +        parameters.withTimeout(deletePipelineRequest.timeout());, +        parameters.withMasterTimeout(deletePipelineRequest.masterNodeTimeout());, +, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.action.ingest.DeletePipelineRequest;, +import org.elasticsearch.action.ingest.WritePipelineResponse;, +    public WritePipelineResponse putPipeline(PutPipelineRequest request, Header... headers) throws IOException {, +            WritePipelineResponse::fromXContent, emptySet(), headers);, +    public void putPipelineAsync(PutPipelineRequest request, ActionListener<WritePipelineResponse> listener, Header... headers) {, +            WritePipelineResponse::fromXContent, listener, emptySet(), headers);, +, +    /**, +     * Delete an existing pipeline, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">, +     *     Delete Pipeline API on elastic.co</a>, +     */, +    public WritePipelineResponse deletePipeline(DeletePipelineRequest request, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::deletePipeline,, +            WritePipelineResponse::fromXContent, emptySet(), headers);, +    }]