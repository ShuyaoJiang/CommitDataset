[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.discovery.Discovery;, +                Discovery.FailedToCommitClusterStateException.class, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.discovery.Discovery;, +                Discovery.FailedToCommitClusterStateException.class, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +                    } catch (Discovery.FailedToCommitClusterStateException t) {, +                        logger.warn("failing [{}]: failed to commit cluster state version [{}]", t, source, newClusterState.version());, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.discovery.Discovery;, +                Discovery.FailedToCommitClusterStateException.class, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +                    } catch (Discovery.FailedToCommitClusterStateException t) {, +                        logger.warn("failing [{}]: failed to commit cluster state version [{}]", t, source, newClusterState.version());, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.io.stream.StreamInput;, +import java.io.IOException;, +, +     *, +     * The method is guaranteed to throw a {@link FailedToCommitClusterStateException} if the change is not committed and should be rejected., +     * Any other exception signals the something wrong happened but the change is committed., +    interface AckListener {, +, +    class FailedToCommitClusterStateException extends ElasticsearchException {, +, +        public FailedToCommitClusterStateException(StreamInput in) throws IOException {, +            super(in);, +        }, +, +        public FailedToCommitClusterStateException(String msg, Object... args) {, +            super(msg, args);, +        }, +, +        public FailedToCommitClusterStateException(String msg, Throwable cause, Object... args) {, +            super(msg, cause, args);, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.discovery.Discovery;, +                Discovery.FailedToCommitClusterStateException.class, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +                    } catch (Discovery.FailedToCommitClusterStateException t) {, +                        logger.warn("failing [{}]: failed to commit cluster state version [{}]", t, source, newClusterState.version());, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.io.stream.StreamInput;, +import java.io.IOException;, +, +     *, +     * The method is guaranteed to throw a {@link FailedToCommitClusterStateException} if the change is not committed and should be rejected., +     * Any other exception signals the something wrong happened but the change is committed., +    interface AckListener {, +, +    class FailedToCommitClusterStateException extends ElasticsearchException {, +, +        public FailedToCommitClusterStateException(StreamInput in) throws IOException {, +            super(in);, +        }, +, +        public FailedToCommitClusterStateException(String msg, Object... args) {, +            super(msg, args);, +        }, +, +        public FailedToCommitClusterStateException(String msg, Throwable cause, Object... args) {, +            super(msg, cause, args);, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +        } catch (FailedToCommitClusterStateException t) {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +import org.elasticsearch.discovery.Discovery;, +                Discovery.FailedToCommitClusterStateException.class, +++ b/core/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +                    } catch (Discovery.FailedToCommitClusterStateException t) {, +                        logger.warn("failing [{}]: failed to commit cluster state version [{}]", t, source, newClusterState.version());, +++ b/core/src/main/java/org/elasticsearch/discovery/Discovery.java, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.io.stream.StreamInput;, +import java.io.IOException;, +, +     *, +     * The method is guaranteed to throw a {@link FailedToCommitClusterStateException} if the change is not committed and should be rejected., +     * Any other exception signals the something wrong happened but the change is committed., +    interface AckListener {, +, +    class FailedToCommitClusterStateException extends ElasticsearchException {, +, +        public FailedToCommitClusterStateException(StreamInput in) throws IOException {, +            super(in);, +        }, +, +        public FailedToCommitClusterStateException(String msg, Object... args) {, +            super(msg, args);, +        }, +, +        public FailedToCommitClusterStateException(String msg, Throwable cause, Object... args) {, +            super(msg, cause, args);, +        }]