[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +    final boolean listenerThreaded;, +    final ThreadPool threadPool;, +    volatile Object listeners;, +    boolean executedListeners = false;, +    public boolean listenerThreaded() {, +        return listenerThreaded;, +    }, +, +    public ThreadPool threadPool() {, +        return threadPool;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java, +    final boolean listenerThreaded;, +    final ThreadPool threadPool;, +    volatile Object listeners;, +    boolean executedListeners = false;, +    public boolean listenerThreaded() {, +        return listenerThreaded;, +    }, +, +    public ThreadPool threadPool() {, +        return threadPool;, +    }, +, +++ b/plugins/client/groovy/src/main/groovy/org/elasticsearch/groovy/client/GClient.groovy, +import org.elasticsearch.action.ListenableActionFuture, +import org.elasticsearch.client.action.count.CountRequestBuilder, +import org.elasticsearch.client.action.delete.DeleteRequestBuilder, +import org.elasticsearch.client.action.deletebyquery.DeleteByQueryRequestBuilder, +import org.elasticsearch.client.action.get.GetRequestBuilder, +import org.elasticsearch.client.action.index.IndexRequestBuilder, +import org.elasticsearch.client.action.search.SearchRequestBuilder, +import org.elasticsearch.client.action.support.BaseRequestBuilder, +import org.elasticsearch.client.action.terms.TermsRequestBuilder, +        BaseRequestBuilder.metaClass.gexecute = {, +            ListenableActionFuture future = delegate.execute();, +            return new GActionFuture(future);, +        }, +, +        IndexRequestBuilder.metaClass.setSource = {Closure c ->, +            delegate.setSource(new GXContentBuilder().buildAsBytes(c, indexContentType)), +        }, +        IndexRequestBuilder.metaClass.source = {Closure c ->, +            delegate.setSource(new GXContentBuilder().buildAsBytes(c, indexContentType)), +        }, +        DeleteByQueryRequestBuilder.metaClass.setQuery = {Closure c ->, +            delegate.setQuery(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +        DeleteByQueryRequestBuilder.metaClass.query = {Closure c ->, +            delegate.setQuery(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +        CountRequestBuilder.metaClass.setQuery = {Closure c ->, +            delegate.setQuery(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +        CountRequestBuilder.metaClass.query = {Closure c ->, +            delegate.setQuery(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +        SearchRequestBuilder.metaClass.setSource = {Closure c ->, +            delegate.setSource(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +        SearchRequestBuilder.metaClass.source = {Closure c ->, +            delegate.setSource(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +        SearchRequestBuilder.metaClass.setExtraSource = {Closure c ->, +            delegate.setExtraSource(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +        SearchRequestBuilder.metaClass.extraSource = {Closure c ->, +            delegate.setExtraSource(new GXContentBuilder().buildAsBytes(c, contentType)), +        }, +    IndexRequestBuilder prepareIndex(String index, String type) {, +        return client.prepareIndex(index, type);, +    }, +, +    IndexRequestBuilder prepareIndex(String index, String type, String id) {, +        return client.prepareIndex(index, type, id);, +    }, +, +    GetRequestBuilder prepareGet(String index, String type, String id) {, +        return client.prepareGet(index, type, id);, +    }, +, +    DeleteRequestBuilder prepareDelete(String index, String type, String id) {, +        return client.prepareDelete(index, type, id), +    }, +, +    DeleteByQueryRequestBuilder prepareDeleteByQuery(String... indices) {, +        return client.prepareDeleteByQuery(indices);, +    }, +, +    CountRequestBuilder prepareCount(String... indices) {, +        return client.prepareCount(indices), +    }, +, +    SearchRequestBuilder prepareSearch(String... indices) {, +        return client.prepareSearch(indices), +    }, +, +    TermsRequestBuilder prepareTerms(String... indices) {]