[+++ b/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +++ b/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +++ b/src/main/java/org/elasticsearch/index/shard/TranslogRecoveryPerformer.java, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.join.BitDocIdSetFilter;, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.bytes.BytesReference;, +import org.elasticsearch.common.lucene.search.Queries;, +                    engine.delete(prepareDeleteByQuery(queryParserService, mapperService, indexAliasesService, indexCache,, +    private static Engine.DeleteByQuery prepareDeleteByQuery(IndexQueryParserService queryParserService, MapperService mapperService, IndexAliasesService indexAliasesService, IndexCache indexCache, BytesReference source, @Nullable String[] filteringAliases, Engine.Operation.Origin origin, String... types) {, +        long startTime = System.nanoTime();, +        if (types == null) {, +            types = Strings.EMPTY_ARRAY;, +        }, +        Query query = queryParserService.parseQuery(source).query();, +        Query searchFilter = mapperService.searchFilter(types);, +        if (searchFilter != null) {, +            query = Queries.filtered(query, searchFilter);, +        }, +, +        Query aliasFilter = indexAliasesService.aliasFilter(filteringAliases);, +        BitDocIdSetFilter parentFilter = mapperService.hasNested() ? indexCache.bitsetFilterCache().getBitDocIdSetFilter(Queries.newNonNestedFilter()) : null;, +        return new Engine.DeleteByQuery(query, source, filteringAliases, aliasFilter, parentFilter, origin, startTime, types);, +    }, +]