[+++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +        if (value instanceof Number) {, +            return ((Number) value).longValue();, +        }, +            if (lowerTerm instanceof Number) {, +                lowerVal = ((Number) lowerTerm).longValue();, +            } else {, +        }, +            if (upperTerm instanceof Number) {, +                upperVal = ((Number) upperTerm).longValue();, +            } else {, +        }, +            if (lowerTerm instanceof Number) {, +                lowerVal = ((Number) lowerTerm).longValue();, +            } else {, +        }, +            if (upperTerm instanceof Number) {, +                upperVal = ((Number) upperTerm).longValue();, +            } else {, +        }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +        if (value instanceof Number) {, +            return ((Number) value).longValue();, +        }, +            if (lowerTerm instanceof Number) {, +                lowerVal = ((Number) lowerTerm).longValue();, +            } else {, +        }, +            if (upperTerm instanceof Number) {, +                upperVal = ((Number) upperTerm).longValue();, +            } else {, +        }, +            if (lowerTerm instanceof Number) {, +                lowerVal = ((Number) lowerTerm).longValue();, +            } else {, +        }, +            if (upperTerm instanceof Number) {, +                upperVal = ((Number) upperTerm).longValue();, +            } else {, +        }, +++ b/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java, +    public void testDateProvidedAsNumber() {, +        createIndex("test");, +        assertAcked(client().admin().indices().preparePutMapping("test").setType("type").setSource("field", "type=date").get());, +        client().prepareIndex("test", "type", "1").setSource("field", -1000000000001L).get();, +        client().prepareIndex("test", "type", "2").setSource("field", -1000000000000L).get();, +        client().prepareIndex("test", "type", "3").setSource("field", -999999999999L).get();, +        refresh();, +, +        assertHitCount(client().prepareCount("test").setQuery(rangeQuery("field").lte(-1000000000000L)).get(), 2);, +        assertHitCount(client().prepareCount("test").setQuery(rangeQuery("field").lte(-999999999999L)).get(), 3);, +    }, +, +    @Test]