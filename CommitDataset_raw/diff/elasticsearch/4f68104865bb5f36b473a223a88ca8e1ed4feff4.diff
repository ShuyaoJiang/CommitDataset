[+++ b/server/src/main/java/org/elasticsearch/search/query/TopDocsCollectorContext.java, +, +        private static TopDocsCollector<?> createCollector(@Nullable SortAndFormats sortAndFormats, int numHits,, +                @Nullable ScoreDoc searchAfter, int hitCountThreshold) {, +            if (sortAndFormats == null) {, +                return TopScoreDocCollector.create(numHits, searchAfter, hitCountThreshold);, +            } else {, +                return TopFieldCollector.create(sortAndFormats.sort, numHits, (FieldDoc) searchAfter, hitCountThreshold);, +            }, +        }, +, +, +            // implicit total hit counts are valid only when there is no filter collector in the chain, +            final int hitCount = hasFilterCollector ? -1 : shortcutTotalHitCount(reader, query);, +            final TopDocsCollector<?> topDocsCollector;, +            if (hitCount == -1 && trackTotalHits) {, +                topDocsCollector = createCollector(sortAndFormats, numHits, searchAfter, Integer.MAX_VALUE);, +                topDocsSupplier = new CachedSupplier<>(topDocsCollector::topDocs);, +                totalHitsSupplier = () -> topDocsSupplier.get().totalHits;, +            } else {, +                topDocsCollector = createCollector(sortAndFormats, numHits, searchAfter, 1); // don't compute hit counts via the collector, +                topDocsSupplier = new CachedSupplier<>(topDocsCollector::topDocs);, +                if (hitCount == -1) {, +                    assert trackTotalHits == false;, +                    totalHitsSupplier = () -> new TotalHits(0, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO);, +                } else {, +                    totalHitsSupplier = () -> new TotalHits(hitCount, TotalHits.Relation.EQUAL_TO);, +                }, +            }, +            MaxScoreCollector maxScoreCollector = null;, +                maxScoreSupplier = () -> {, +            } else if (trackMaxScore) {, +            this.collector = MultiCollector.wrap(topDocsCollector, maxScoreCollector);]