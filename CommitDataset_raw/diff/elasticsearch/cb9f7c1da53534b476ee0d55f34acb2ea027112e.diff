[+++ b/src/main/java/org/elasticsearch/index/translog/TranslogService.java, +    private static final String FLUSH_THRESHOLD_OPS_KEY = "flush_threshold_ops";, +    private static final String FLUSH_THRESHOLD_SIZE_KEY = "flush_threshold_size";, +    private static final String FLUSH_THRESHOLD_PERIOD_KEY = "flush_threshold_period";, +    private static final String FLUSH_THRESHOLD_DISABLE_FLUSH_KEY = "disable_flush";, +    private static final String FLUSH_THRESHOLD_INTERVAL_KEY = "interval";, +, +    public static final String INDEX_TRANSLOG_FLUSH_INTERVAL = "index.translog." + FLUSH_THRESHOLD_INTERVAL_KEY;, +    public static final String INDEX_TRANSLOG_FLUSH_THRESHOLD_OPS = "index.translog." + FLUSH_THRESHOLD_OPS_KEY;, +    public static final String INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE = "index.translog." + FLUSH_THRESHOLD_SIZE_KEY;, +    public static final String INDEX_TRANSLOG_FLUSH_THRESHOLD_PERIOD =  "index.translog." + FLUSH_THRESHOLD_PERIOD_KEY;, +    public static final String INDEX_TRANSLOG_DISABLE_FLUSH = "index.translog." + FLUSH_THRESHOLD_DISABLE_FLUSH_KEY;, +, +        this.flushThresholdOperations = componentSettings.getAsInt(FLUSH_THRESHOLD_OPS_KEY, componentSettings.getAsInt("flush_threshold", Integer.MAX_VALUE));, +        this.flushThresholdSize = componentSettings.getAsBytesSize(FLUSH_THRESHOLD_SIZE_KEY, new ByteSizeValue(200, ByteSizeUnit.MB));, +        this.flushThresholdPeriod = componentSettings.getAsTime(FLUSH_THRESHOLD_PERIOD_KEY, TimeValue.timeValueMinutes(30));, +        this.interval = componentSettings.getAsTime(FLUSH_THRESHOLD_INTERVAL_KEY, timeValueMillis(5000));, +        this.disableFlush = componentSettings.getAsBoolean(FLUSH_THRESHOLD_DISABLE_FLUSH_KEY, false);, +, +++ b/src/main/java/org/elasticsearch/index/translog/TranslogService.java, +    private static final String FLUSH_THRESHOLD_OPS_KEY = "flush_threshold_ops";, +    private static final String FLUSH_THRESHOLD_SIZE_KEY = "flush_threshold_size";, +    private static final String FLUSH_THRESHOLD_PERIOD_KEY = "flush_threshold_period";, +    private static final String FLUSH_THRESHOLD_DISABLE_FLUSH_KEY = "disable_flush";, +    private static final String FLUSH_THRESHOLD_INTERVAL_KEY = "interval";, +, +    public static final String INDEX_TRANSLOG_FLUSH_INTERVAL = "index.translog." + FLUSH_THRESHOLD_INTERVAL_KEY;, +    public static final String INDEX_TRANSLOG_FLUSH_THRESHOLD_OPS = "index.translog." + FLUSH_THRESHOLD_OPS_KEY;, +    public static final String INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE = "index.translog." + FLUSH_THRESHOLD_SIZE_KEY;, +    public static final String INDEX_TRANSLOG_FLUSH_THRESHOLD_PERIOD =  "index.translog." + FLUSH_THRESHOLD_PERIOD_KEY;, +    public static final String INDEX_TRANSLOG_DISABLE_FLUSH = "index.translog." + FLUSH_THRESHOLD_DISABLE_FLUSH_KEY;, +, +        this.flushThresholdOperations = componentSettings.getAsInt(FLUSH_THRESHOLD_OPS_KEY, componentSettings.getAsInt("flush_threshold", Integer.MAX_VALUE));, +        this.flushThresholdSize = componentSettings.getAsBytesSize(FLUSH_THRESHOLD_SIZE_KEY, new ByteSizeValue(200, ByteSizeUnit.MB));, +        this.flushThresholdPeriod = componentSettings.getAsTime(FLUSH_THRESHOLD_PERIOD_KEY, TimeValue.timeValueMinutes(30));, +        this.interval = componentSettings.getAsTime(FLUSH_THRESHOLD_INTERVAL_KEY, timeValueMillis(5000));, +        this.disableFlush = componentSettings.getAsBoolean(FLUSH_THRESHOLD_DISABLE_FLUSH_KEY, false);, +, +++ b/src/test/java/org/elasticsearch/test/ImmutableTestCluster.java, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.unit.ByteSizeValue;, +import org.elasticsearch.common.unit.TimeValue;, +import org.elasticsearch.index.translog.TranslogService;, +            ImmutableSettings.Builder builder =, +                    setRandomTranslogSettings(random, setRandomNormsLoading(setRandomMerge(random, ImmutableSettings.builder())), +    private static ImmutableSettings.Builder setRandomTranslogSettings(Random random, ImmutableSettings.Builder builder) {, +        if (random.nextBoolean()) {, +            builder.put(TranslogService.INDEX_TRANSLOG_FLUSH_THRESHOLD_OPS, RandomInts.randomIntBetween(random, 1, 10000));, +        }, +        if (random.nextBoolean()) {, +            builder.put(TranslogService.INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE, new ByteSizeValue(RandomInts.randomIntBetween(random, 1, 300), ByteSizeUnit.MB));, +        }, +        if (random.nextBoolean()) {, +            builder.put(TranslogService.INDEX_TRANSLOG_FLUSH_THRESHOLD_PERIOD, TimeValue.timeValueMinutes(RandomInts.randomIntBetween(random, 1, 60)));, +        }, +        if (random.nextBoolean()) {, +            builder.put(TranslogService.INDEX_TRANSLOG_FLUSH_INTERVAL, TimeValue.timeValueMillis(RandomInts.randomIntBetween(random, 1, 10000)));, +        }, +        if (random.nextBoolean()) {, +            builder.put(TranslogService.INDEX_TRANSLOG_DISABLE_FLUSH, random.nextBoolean());, +        }, +        return builder;, +    }, +]