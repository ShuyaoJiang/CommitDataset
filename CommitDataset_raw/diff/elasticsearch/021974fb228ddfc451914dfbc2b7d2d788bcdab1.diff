[+++ b/src/main/java/org/elasticsearch/license/core/ESLicense.java, +    private final String type;, +    private final String subscriptionType;, +    private ESLicense(String uid, String issuer, String issuedTo, long issueDate, String type,, +                     String subscriptionType, String feature, String signature, long expiryDate, int maxNodes) {, +    public String type() {, +    public String subscriptionType() {, +        builder.type(in.readString());, +        builder.subscriptionType(in.readString());, +        out.writeString(type);, +        out.writeString(subscriptionType);, +        builder.field(XFields.TYPE, type);, +        builder.field(XFields.SUBSCRIPTION_TYPE, subscriptionType);, +                            builder.type(parser.text());, +                            builder.subscriptionType(parser.text());, +        private String type;, +        private String subscriptionType = "none";, +        public Builder type(String type) {, +        public Builder subscriptionType(String subscriptionType) {, +++ b/src/main/java/org/elasticsearch/license/core/ESLicense.java, +    private final String type;, +    private final String subscriptionType;, +    private ESLicense(String uid, String issuer, String issuedTo, long issueDate, String type,, +                     String subscriptionType, String feature, String signature, long expiryDate, int maxNodes) {, +    public String type() {, +    public String subscriptionType() {, +        builder.type(in.readString());, +        builder.subscriptionType(in.readString());, +        out.writeString(type);, +        out.writeString(subscriptionType);, +        builder.field(XFields.TYPE, type);, +        builder.field(XFields.SUBSCRIPTION_TYPE, subscriptionType);, +                            builder.type(parser.text());, +                            builder.subscriptionType(parser.text());, +        private String type;, +        private String subscriptionType = "none";, +        public Builder type(String type) {, +        public Builder subscriptionType(String subscriptionType) {, +++ b/src/main/java/org/elasticsearch/license/licensor/ESLicenseSigner.java, +        builder.field("type", license.type());, +        builder.field("subscription_type", license.subscriptionType());, +++ b/src/main/java/org/elasticsearch/license/core/ESLicense.java, +    private final String type;, +    private final String subscriptionType;, +    private ESLicense(String uid, String issuer, String issuedTo, long issueDate, String type,, +                     String subscriptionType, String feature, String signature, long expiryDate, int maxNodes) {, +    public String type() {, +    public String subscriptionType() {, +        builder.type(in.readString());, +        builder.subscriptionType(in.readString());, +        out.writeString(type);, +        out.writeString(subscriptionType);, +        builder.field(XFields.TYPE, type);, +        builder.field(XFields.SUBSCRIPTION_TYPE, subscriptionType);, +                            builder.type(parser.text());, +                            builder.subscriptionType(parser.text());, +        private String type;, +        private String subscriptionType = "none";, +        public Builder type(String type) {, +        public Builder subscriptionType(String subscriptionType) {, +++ b/src/main/java/org/elasticsearch/license/licensor/ESLicenseSigner.java, +        builder.field("type", license.type());, +        builder.field("subscription_type", license.subscriptionType());, +++ b/src/main/java/org/elasticsearch/license/licensor/LicenseSpecs.java, +                .type((String) map.get("type")), +                .subscriptionType((String) map.get("subscription_type")), +++ b/src/main/java/org/elasticsearch/license/core/ESLicense.java, +    private final String type;, +    private final String subscriptionType;, +    private ESLicense(String uid, String issuer, String issuedTo, long issueDate, String type,, +                     String subscriptionType, String feature, String signature, long expiryDate, int maxNodes) {, +    public String type() {, +    public String subscriptionType() {, +        builder.type(in.readString());, +        builder.subscriptionType(in.readString());, +        out.writeString(type);, +        out.writeString(subscriptionType);, +        builder.field(XFields.TYPE, type);, +        builder.field(XFields.SUBSCRIPTION_TYPE, subscriptionType);, +                            builder.type(parser.text());, +                            builder.subscriptionType(parser.text());, +        private String type;, +        private String subscriptionType = "none";, +        public Builder type(String type) {, +        public Builder subscriptionType(String subscriptionType) {, +++ b/src/main/java/org/elasticsearch/license/licensor/ESLicenseSigner.java, +        builder.field("type", license.type());, +        builder.field("subscription_type", license.subscriptionType());, +++ b/src/main/java/org/elasticsearch/license/licensor/LicenseSpecs.java, +                .type((String) map.get("type")), +                .subscriptionType((String) map.get("subscription_type")), +++ b/src/main/java/org/elasticsearch/license/manager/ESLicenseManager.java, +                            .type(licenseFeatures.type), +                            .subscriptionType(licenseFeatures.subscriptionType);, +            typeValid = eslicense.type().equals(licenseFeatures.type);, +            subscriptionTypeValid = eslicense.subscriptionType().equals(licenseFeatures.subscriptionType);, +++ b/src/main/java/org/elasticsearch/license/core/ESLicense.java, +    private final String type;, +    private final String subscriptionType;, +    private ESLicense(String uid, String issuer, String issuedTo, long issueDate, String type,]