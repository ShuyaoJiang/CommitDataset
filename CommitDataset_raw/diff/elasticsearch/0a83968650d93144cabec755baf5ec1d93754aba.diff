[+++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +++ /dev/null, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/cluster/stats.asciidoc, +   "cluster_uuid": "YjAvIhsCQ9CbjWZb2qJw3Q",, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/cluster/stats.asciidoc, +   "cluster_uuid": "YjAvIhsCQ9CbjWZb2qJw3Q",, +++ b/docs/reference/rest-api/info.asciidoc, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/cluster/stats.asciidoc, +   "cluster_uuid": "YjAvIhsCQ9CbjWZb2qJw3Q",, +++ b/docs/reference/rest-api/info.asciidoc, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java, +            Class<?> found = painlessLookup.canonicalTypeNameToType(name.replace('$', '.'));, +++ /dev/null, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.cluster.snapshots.delete.DeleteSnapshotRequest;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusRequest;, +import org.elasticsearch.action.ingest.PutPipelineRequest;, +import org.elasticsearch.protocol.xpack.XPackUsageRequest;, +import org.elasticsearch.protocol.xpack.license.PutLicenseRequest;, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/XPackClient.java, +++ /dev/null, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java, +++ b/docs/reference/cluster/stats.asciidoc, +   "cluster_uuid": "YjAvIhsCQ9CbjWZb2qJw3Q",, +++ b/docs/reference/rest-api/info.asciidoc, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java, +            Class<?> found = painlessLookup.canonicalTypeNameToType(name.replace('$', '.'));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +            PainlessClass struct = painlessLookup.lookupPainlessClass(clazz);, +                struct = painlessLookup.lookupPainlessClass(iface);, +         Class<?> interfaceType = painlessLookup.canonicalTypeNameToType(interfaceClass);, +         PainlessMethod interfaceMethod = painlessLookup.lookupPainlessClass(interfaceType).functionalMethod;, +             PainlessMethod interfaceMethod = painlessLookup.lookupPainlessClass(clazz).functionalMethod;, +            PainlessClass struct = painlessLookup.lookupPainlessClass(clazz);, +                struct = painlessLookup.lookupPainlessClass(iface);, +            PainlessClass struct = painlessLookup.lookupPainlessClass(clazz);, +                struct = painlessLookup.lookupPainlessClass(iface);]