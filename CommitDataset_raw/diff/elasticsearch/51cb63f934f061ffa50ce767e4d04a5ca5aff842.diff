[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +                AttributeSet missing = resolvedRefs.subtract(o.child().outputSet());, +                AttributeSet missing = resolvedRefs.subtract(f.child().outputSet());, +                AttributeSet diff = missing.subtract(p.child().outputSet());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +                AttributeSet missing = resolvedRefs.subtract(o.child().outputSet());, +                AttributeSet missing = resolvedRefs.subtract(f.child().outputSet());, +                AttributeSet diff = missing.subtract(p.child().outputSet());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeMap.java, +    public AttributeMap<E> subtract(AttributeMap<E> other) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +                AttributeSet missing = resolvedRefs.subtract(o.child().outputSet());, +                AttributeSet missing = resolvedRefs.subtract(f.child().outputSet());, +                AttributeSet diff = missing.subtract(p.child().outputSet());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeMap.java, +    public AttributeMap<E> subtract(AttributeMap<E> other) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeSet.java, +    public AttributeSet subtract(AttributeSet other) {, +        return new AttributeSet(delegate.subtract(other.delegate));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +                AttributeSet missing = resolvedRefs.subtract(o.child().outputSet());, +                AttributeSet missing = resolvedRefs.subtract(f.child().outputSet());, +                AttributeSet diff = missing.subtract(p.child().outputSet());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeMap.java, +    public AttributeMap<E> subtract(AttributeMap<E> other) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeSet.java, +    public AttributeSet subtract(AttributeSet other) {, +        return new AttributeSet(delegate.subtract(other.delegate));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/operator/arithmetic/BinaryArithmeticProcessor.java, +                throw new SqlIllegalArgumentException("Cannot subtract a date from an interval; do you mean the reverse?");, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +                AttributeSet missing = resolvedRefs.subtract(o.child().outputSet());, +                AttributeSet missing = resolvedRefs.subtract(f.child().outputSet());, +                AttributeSet diff = missing.subtract(p.child().outputSet());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeMap.java, +    public AttributeMap<E> subtract(AttributeMap<E> other) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeSet.java, +    public AttributeSet subtract(AttributeSet other) {, +        return new AttributeSet(delegate.subtract(other.delegate));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/operator/arithmetic/BinaryArithmeticProcessor.java, +                throw new SqlIllegalArgumentException("Cannot subtract a date from an interval; do you mean the reverse?");, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/AttributeMapTests.java, +    public void testSubtract() {, +        assertThat(m.subtract(empty), is(m));, +        assertThat(m.subtract(m), is(empty));, +        assertThat(mo.subtract(m), is(empty));, +        AttributeMap<String> subtract = m.subtract(mo);, +        assertThat(subtract.size(), is(2));, +        assertThat(subtract.attributeNames(), contains("two", "three"));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/analysis/analyzer/Analyzer.java, +                AttributeSet missing = resolvedRefs.subtract(o.child().outputSet());, +                AttributeSet missing = resolvedRefs.subtract(f.child().outputSet());, +                AttributeSet diff = missing.subtract(p.child().outputSet());, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeMap.java, +    public AttributeMap<E> subtract(AttributeMap<E> other) {, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/AttributeSet.java, +    public AttributeSet subtract(AttributeSet other) {, +        return new AttributeSet(delegate.subtract(other.delegate));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/predicate/operator/arithmetic/BinaryArithmeticProcessor.java, +                throw new SqlIllegalArgumentException("Cannot subtract a date from an interval; do you mean the reverse?");, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/AttributeMapTests.java, +    public void testSubtract() {, +        assertThat(m.subtract(empty), is(m));, +        assertThat(m.subtract(m), is(empty));, +        assertThat(mo.subtract(m), is(empty));, +        AttributeMap<String> subtract = m.subtract(mo);, +        assertThat(subtract.size(), is(2));, +        assertThat(subtract.attributeNames(), contains("two", "three"));, +++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/predicate/operator/arithmetic/BinaryArithmeticTests.java, +        assertEquals("Cannot subtract a date from an interval; do you mean the reverse?", ex.getMessage());]