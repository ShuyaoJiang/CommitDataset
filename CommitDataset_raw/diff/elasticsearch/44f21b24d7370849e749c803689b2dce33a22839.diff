[+++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpServerPipeliningTests.java, +        Settings settings = settingsBuilder(), +                               .put("http.pipelining", true), +                               .put("http.port", "0"), +                               .build();, +        Settings settings = settingsBuilder(), +                                .put("http.pipelining", false), +                                .put("http.port", "0"), +                                .build();, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpServerPipeliningTests.java, +        Settings settings = settingsBuilder(), +                               .put("http.pipelining", true), +                               .put("http.port", "0"), +                               .build();, +        Settings settings = settingsBuilder(), +                                .put("http.pipelining", false), +                                .put("http.port", "0"), +                                .build();, +++ b/core/src/test/java/org/elasticsearch/http/netty/pipelining/HttpPipeliningHandlerTests.java, +    private InetSocketAddress boundAddress;, +, +        Channel channel = serverBootstrap.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));, +        boundAddress = (InetSocketAddress) channel.getLocalAddress();, +        final ChannelFuture connectionFuture = clientBootstrap.connect(boundAddress);, +        request1.headers().add(HOST, NetworkAddress.formatAddress(boundAddress));, +        request2.headers().add(HOST, NetworkAddress.formatAddress(boundAddress));, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestReportLogger.groovy, +    /** Summarize the first N failures at the end. */, +    int showNumFailuresAtEnd = 3, +, +        if (showNumFailuresAtEnd > 0 && !failedTests.isEmpty()) {, +            if (sublist.size() > showNumFailuresAtEnd) {, +                sublist = sublist.subList(0, showNumFailuresAtEnd), +                b.append(" (first " + showNumFailuresAtEnd + " out of " + failedTests.size() + ")"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/test/java/org/elasticsearch/http/netty/NettyHttpServerPipeliningTests.java, +        Settings settings = settingsBuilder(), +                               .put("http.pipelining", true), +                               .put("http.port", "0"), +                               .build();, +        Settings settings = settingsBuilder(), +                                .put("http.pipelining", false), +                                .put("http.port", "0"), +                                .build();, +++ b/core/src/test/java/org/elasticsearch/http/netty/pipelining/HttpPipeliningHandlerTests.java, +    private InetSocketAddress boundAddress;, +, +        Channel channel = serverBootstrap.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));, +        boundAddress = (InetSocketAddress) channel.getLocalAddress();, +        final ChannelFuture connectionFuture = clientBootstrap.connect(boundAddress);, +        request1.headers().add(HOST, NetworkAddress.formatAddress(boundAddress));, +        request2.headers().add(HOST, NetworkAddress.formatAddress(boundAddress));, +++ b/core/src/test/java/org/elasticsearch/transport/NettySizeHeaderFrameDecoderTests.java, +    private final Settings settings = settingsBuilder(), +                                        .put("name", "foo"), +                                        .put("transport.host", "127.0.0.1"), +                                        .put("transport.tcp.port", "0"), +                                        .build();, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/TestLoggingConfiguration.groovy]