[+++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/ArrayValuesSourceParser.java, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/ArrayValuesSourceParser.java, +++ b/server/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/ArrayValuesSourceParser.java, +++ b/server/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +++ b/server/src/main/java/org/elasticsearch/common/geo/parsers/GeoJsonParser.java, +import org.locationtech.jts.geom.Coordinate;, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/ArrayValuesSourceParser.java, +++ b/server/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +++ b/server/src/main/java/org/elasticsearch/common/geo/parsers/GeoJsonParser.java, +import org.locationtech.jts.geom.Coordinate;, +++ b/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                        logger.trace("[{}] [{}] recovering [{}] from [{}], exists in local store but is different", shardId, snapshotId,, +                                fileInfo.physicalName(), fileInfo.name());, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/ArrayValuesSourceParser.java, +++ b/server/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java, +++ b/server/src/main/java/org/elasticsearch/common/geo/parsers/GeoJsonParser.java, +import org.locationtech.jts.geom.Coordinate;, +++ b/server/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +                        logger.trace("[{}] [{}] recovering [{}] from [{}], exists in local store but is different", shardId, snapshotId,, +                                fileInfo.physicalName(), fileInfo.name());, +++ b/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/writer/FieldConfigWriter.java, +import org.elasticsearch.xpack.ml.MachineLearning;, +        writeCategorizationFilters(contents);, +    @SuppressWarnings("unused") // CATEGORIZATION_TOKENIZATION_IN_JAVA is used for performance testing, +    private void writeCategorizationFilters(StringBuilder contents) {, +        if (MachineLearning.CATEGORIZATION_TOKENIZATION_IN_JAVA == false) {, +            writeAsEnumeratedSettings(CATEGORIZATION_FILTER_PREFIX, config.getCategorizationFilters(),, +                    contents, true);, +        }, +    }, +]