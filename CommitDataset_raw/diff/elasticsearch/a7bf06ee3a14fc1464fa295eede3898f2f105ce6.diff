[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java, +        super(msg);, +        this.phaseName = phaseName;, +        this.shardFailures = shardFailures;, +        super(msg, cause);, +        out.writeVInt(shardFailures == null ? 0 : shardFailures.length);, +        if (shardFailures != null) {, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java, +        super(msg);, +        this.phaseName = phaseName;, +        this.shardFailures = shardFailures;, +        super(msg, cause);, +        out.writeVInt(shardFailures == null ? 0 : shardFailures.length);, +        if (shardFailures != null) {, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                    listener.onFailure(new SearchPhaseExecutionException("query_fetch", "all shards failed", buildShardFailures()));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java, +        super(msg);, +        this.phaseName = phaseName;, +        this.shardFailures = shardFailures;, +        super(msg, cause);, +        out.writeVInt(shardFailures == null ? 0 : shardFailures.length);, +        if (shardFailures != null) {, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                    listener.onFailure(new SearchPhaseExecutionException("query_fetch", "all shards failed", buildShardFailures()));, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                            listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +                    listener.onFailure(new SearchPhaseExecutionException("query", "all shards failed", buildShardFailures()));, +                        listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java, +        super(msg);, +        this.phaseName = phaseName;, +        this.shardFailures = shardFailures;, +        super(msg, cause);, +        out.writeVInt(shardFailures == null ? 0 : shardFailures.length);, +        if (shardFailures != null) {, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                    listener.onFailure(new SearchPhaseExecutionException("query_fetch", "all shards failed", buildShardFailures()));, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                            listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +                    listener.onFailure(new SearchPhaseExecutionException("query", "all shards failed", buildShardFailures()));, +                        listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java, +                    raiseEarlyFailure(new SearchPhaseExecutionException(firstPhaseName(), "all shards failed", buildShardFailures()));, +                        raiseEarlyFailure(new ReduceSearchPhaseException(firstPhaseName(), "", e, buildShardFailures()));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java, +        super(msg);, +        this.phaseName = phaseName;, +        this.shardFailures = shardFailures;, +        super(msg, cause);, +        out.writeVInt(shardFailures == null ? 0 : shardFailures.length);, +        if (shardFailures != null) {, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                    listener.onFailure(new SearchPhaseExecutionException("query_fetch", "all shards failed", buildShardFailures()));, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                            listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +                    listener.onFailure(new SearchPhaseExecutionException("query", "all shards failed", buildShardFailures()));, +                        listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java, +                    raiseEarlyFailure(new SearchPhaseExecutionException(firstPhaseName(), "all shards failed", buildShardFailures()));, +                        raiseEarlyFailure(new ReduceSearchPhaseException(firstPhaseName(), "", e, buildShardFailures()));, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +            SearchPhaseExecutionException ex = new SearchPhaseExecutionException("search", "all shards failed", new ShardSearchFailure[]{failure, failure1});, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java, +        super(msg);, +        this.phaseName = phaseName;, +        this.shardFailures = shardFailures;, +        super(msg, cause);, +        out.writeVInt(shardFailures == null ? 0 : shardFailures.length);, +        if (shardFailures != null) {, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                    listener.onFailure(new SearchPhaseExecutionException("query_fetch", "all shards failed", buildShardFailures()));, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java, +                listener.onFailure(new SearchPhaseExecutionException("query", "no nodes to search on", null));, +                            listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +                    listener.onFailure(new SearchPhaseExecutionException("query", "all shards failed", buildShardFailures()));, +                        listener.onFailure(new SearchPhaseExecutionException("query", "Fetch failed", e, null));, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java, +                    raiseEarlyFailure(new SearchPhaseExecutionException(firstPhaseName(), "all shards failed", buildShardFailures()));, +                        raiseEarlyFailure(new ReduceSearchPhaseException(firstPhaseName(), "", e, buildShardFailures()));, +++ b/core/src/test/java/org/elasticsearch/ESExceptionTests.java, +            SearchPhaseExecutionException ex = new SearchPhaseExecutionException("search", "all shards failed", new ShardSearchFailure[]{failure, failure1});, +++ b/core/src/test/java/org/elasticsearch/index/query/TemplateQueryIT.java, +            assertThat(e.getCause().getMessage(), containsString("Illegal index script format"));, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java, +        super(msg);, +        this.phaseName = phaseName;, +        this.shardFailures = shardFailures;, +        super(msg, cause);, +        out.writeVInt(shardFailures == null ? 0 : shardFailures.length);, +        if (shardFailures != null) {, +++ b/core/src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java]