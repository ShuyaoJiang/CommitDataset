[+++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, + * <li>vint: position_1 (if positions)</li>, + * <li>vint: startOffset_1 (if offset)</li>, + * <li>vint: endOffset_1 (if offset)</li>, + * <li>BytesRef: payload_1 (if payloads)</li>, + * <li>vint: endOffset_freqency (if offset)</li>, + * <li>BytesRef: payload_freqency (if payloads)</li>, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, + * <li>vint: position_1 (if positions)</li>, + * <li>vint: startOffset_1 (if offset)</li>, + * <li>vint: endOffset_1 (if offset)</li>, + * <li>BytesRef: payload_1 (if payloads)</li>, + * <li>vint: endOffset_freqency (if offset)</li>, + * <li>BytesRef: payload_freqency (if payloads)</li>, +++ b/core/src/main/java/org/elasticsearch/common/util/BigArrays.java, +            if (this.checkBreaker) {, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, + * <li>vint: position_1 (if positions)</li>, + * <li>vint: startOffset_1 (if offset)</li>, + * <li>vint: endOffset_1 (if offset)</li>, + * <li>BytesRef: payload_1 (if payloads)</li>, + * <li>vint: endOffset_freqency (if offset)</li>, + * <li>BytesRef: payload_freqency (if payloads)</li>, +++ b/core/src/main/java/org/elasticsearch/common/util/BigArrays.java, +            if (this.checkBreaker) {, +++ b/core/src/main/java/org/elasticsearch/gateway/AsyncShardFetch.java, +        if (hasAnyNodeFetching(cache)) {, +                    if (nodeEntry.isFailed()) {, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "restarting fetching, but not in fetching mode";, +            return valueSet || failure != null;, +            assert valueSet : "value is not set, hasn't been fetched yet";, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, + * <li>vint: position_1 (if positions)</li>, + * <li>vint: startOffset_1 (if offset)</li>, + * <li>vint: endOffset_1 (if offset)</li>, + * <li>BytesRef: payload_1 (if payloads)</li>, + * <li>vint: endOffset_freqency (if offset)</li>, + * <li>BytesRef: payload_freqency (if payloads)</li>, +++ b/core/src/main/java/org/elasticsearch/common/util/BigArrays.java, +            if (this.checkBreaker) {, +++ b/core/src/main/java/org/elasticsearch/gateway/AsyncShardFetch.java, +        if (hasAnyNodeFetching(cache)) {, +                    if (nodeEntry.isFailed()) {, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "restarting fetching, but not in fetching mode";, +            return valueSet || failure != null;, +            assert valueSet : "value is not set, hasn't been fetched yet";, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +        if (danglingIndices.isEmpty()) {, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, + * <li>vint: position_1 (if positions)</li>, + * <li>vint: startOffset_1 (if offset)</li>, + * <li>vint: endOffset_1 (if offset)</li>, + * <li>BytesRef: payload_1 (if payloads)</li>, + * <li>vint: endOffset_freqency (if offset)</li>, + * <li>BytesRef: payload_freqency (if payloads)</li>, +++ b/core/src/main/java/org/elasticsearch/common/util/BigArrays.java, +            if (this.checkBreaker) {, +++ b/core/src/main/java/org/elasticsearch/gateway/AsyncShardFetch.java, +        if (hasAnyNodeFetching(cache)) {, +                    if (nodeEntry.isFailed()) {, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "restarting fetching, but not in fetching mode";, +            return valueSet || failure != null;, +            assert valueSet : "value is not set, hasn't been fetched yet";, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +        if (danglingIndices.isEmpty()) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayAllocator.java, +                    if (localNode.isMasterNode() && event.localNodeMaster() == false) {, +            if (shardState.hasData()) {, +            if (shardStores.hasData()) {, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java, + * <li>vint: position_1 (if positions)</li>, + * <li>vint: startOffset_1 (if offset)</li>, + * <li>vint: endOffset_1 (if offset)</li>, + * <li>BytesRef: payload_1 (if payloads)</li>, + * <li>vint: endOffset_freqency (if offset)</li>, + * <li>BytesRef: payload_freqency (if payloads)</li>, +++ b/core/src/main/java/org/elasticsearch/common/util/BigArrays.java, +            if (this.checkBreaker) {, +++ b/core/src/main/java/org/elasticsearch/gateway/AsyncShardFetch.java, +        if (hasAnyNodeFetching(cache)) {, +                    if (nodeEntry.isFailed()) {, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "setting value but not in fetching mode";, +            assert fetching : "restarting fetching, but not in fetching mode";, +            return valueSet || failure != null;, +            assert valueSet : "value is not set, hasn't been fetched yet";, +++ b/core/src/main/java/org/elasticsearch/gateway/DanglingIndicesState.java, +        if (danglingIndices.isEmpty()) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayAllocator.java, +                    if (localNode.isMasterNode() && event.localNodeMaster() == false) {, +            if (shardState.hasData()) {, +            if (shardStores.hasData()) {, +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java, +        } else if (state.nodes().getLocalNode().isMasterNode()) {]