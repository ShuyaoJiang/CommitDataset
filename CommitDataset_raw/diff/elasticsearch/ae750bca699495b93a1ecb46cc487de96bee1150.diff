[+++ b/core/pom.xml, +            <!-- execution and integration tests -->, +                    <!-- start up elasticsearch in foreground -->, +                    <execution>, +                        <id>execute</id>, +                        <phase>package</phase>, +                        <goals>, +                            <goal>run</goal>, +                        </goals>, +                        <configuration>, +                            <target if="${run}">, +                                <ant antfile="${elasticsearch.integ.antfile}" target="start-foreground"/>, +                            </target>, +                        </configuration>, +                    </execution>, +++ b/core/pom.xml, +            <!-- execution and integration tests -->, +                    <!-- start up elasticsearch in foreground -->, +                    <execution>, +                        <id>execute</id>, +                        <phase>package</phase>, +                        <goals>, +                            <goal>run</goal>, +                        </goals>, +                        <configuration>, +                            <target if="${run}">, +                                <ant antfile="${elasticsearch.integ.antfile}" target="start-foreground"/>, +                            </target>, +                        </configuration>, +                    </execution>, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +        logger.trace("cluster state used to determine shards [{}]", state.prettyPrint());, +++ b/core/pom.xml, +            <!-- execution and integration tests -->, +                    <!-- start up elasticsearch in foreground -->, +                    <execution>, +                        <id>execute</id>, +                        <phase>package</phase>, +                        <goals>, +                            <goal>run</goal>, +                        </goals>, +                        <configuration>, +                            <target if="${run}">, +                                <ant antfile="${elasticsearch.integ.antfile}" target="start-foreground"/>, +                            </target>, +                        </configuration>, +                    </execution>, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +        logger.trace("cluster state used to determine shards [{}]", state.prettyPrint());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/pom.xml, +            <!-- execution and integration tests -->, +                    <!-- start up elasticsearch in foreground -->, +                    <execution>, +                        <id>execute</id>, +                        <phase>package</phase>, +                        <goals>, +                            <goal>run</goal>, +                        </goals>, +                        <configuration>, +                            <target if="${run}">, +                                <ant antfile="${elasticsearch.integ.antfile}" target="start-foreground"/>, +                            </target>, +                        </configuration>, +                    </execution>, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +        logger.trace("cluster state used to determine shards [{}]", state.prettyPrint());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/pom.xml, +            <!-- execution and integration tests -->, +                    <!-- start up elasticsearch in foreground -->, +                    <execution>, +                        <id>execute</id>, +                        <phase>package</phase>, +                        <goals>, +                            <goal>run</goal>, +                        </goals>, +                        <configuration>, +                            <target if="${run}">, +                                <ant antfile="${elasticsearch.integ.antfile}" target="start-foreground"/>, +                            </target>, +                        </configuration>, +                    </execution>, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/shards/TransportIndicesShardStoresAction.java, +        logger.trace("cluster state used to determine shards [{}]", state.prettyPrint());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +                    SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()), +++ b/core/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.REPLICA, request.source()).type(request.type()).id(request.id()), +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +        SourceToParse sourceToParse = SourceToParse.source(SourceToParse.Origin.PRIMARY, request.source()).type(request.type()).id(request.id()), +++ b/core/pom.xml, +            <!-- execution and integration tests -->, +                    <!-- start up elasticsearch in foreground -->, +                    <execution>, +                        <id>execute</id>]