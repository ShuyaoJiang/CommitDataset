[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +, +        if (pluginProject.plugins.hasPlugin(PluginBuildPlugin) == false) {, +                    "[${project.path}] dependencies: the plugin is not an esplugin"), +    /** Find the plugin name in the given project. */, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +, +        if (pluginProject.plugins.hasPlugin(PluginBuildPlugin) == false) {, +                    "[${project.path}] dependencies: the plugin is not an esplugin"), +    /** Find the plugin name in the given project. */, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +, +        if (pluginProject.plugins.hasPlugin(PluginBuildPlugin) == false) {, +                    "[${project.path}] dependencies: the plugin is not an esplugin"), +    /** Find the plugin name in the given project. */, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +, +        if (pluginProject.plugins.hasPlugin(PluginBuildPlugin) == false) {, +                    "[${project.path}] dependencies: the plugin is not an esplugin"), +    /** Find the plugin name in the given project. */, +++ /dev/null, +++ /dev/null, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, + * Plugins are packaged as zip files. Each packaged plugin must contain a plugin properties file., + * See {@link PluginInfo}., +    private void verifyPluginName(Path pluginPath, String pluginName) throws UserException, IOException {, +    private PluginInfo loadPluginInfo(Terminal terminal, Path pluginRoot, Environment env) throws Exception {, +        verifyPluginName(env.pluginsFile(), info.getName());, +        final PluginInfo info = loadPluginInfo(terminal, tmpRoot, env);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +, +        if (pluginProject.plugins.hasPlugin(PluginBuildPlugin) == false) {, +                    "[${project.path}] dependencies: the plugin is not an esplugin"), +    /** Find the plugin name in the given project. */, +++ /dev/null, +++ /dev/null, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, + * Plugins are packaged as zip files. Each packaged plugin must contain a plugin properties file., + * See {@link PluginInfo}., +    private void verifyPluginName(Path pluginPath, String pluginName) throws UserException, IOException {, +    private PluginInfo loadPluginInfo(Terminal terminal, Path pluginRoot, Environment env) throws Exception {, +        verifyPluginName(env.pluginsFile(), info.getName());, +        final PluginInfo info = loadPluginInfo(terminal, tmpRoot, env);, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/ListPluginsCommand.java, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +, +        if (pluginProject.plugins.hasPlugin(PluginBuildPlugin) == false) {, +                    "[${project.path}] dependencies: the plugin is not an esplugin"), +    /** Find the plugin name in the given project. */, +++ /dev/null, +++ /dev/null, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java, + * Plugins are packaged as zip files. Each packaged plugin must contain a plugin properties file., + * See {@link PluginInfo}., +    private void verifyPluginName(Path pluginPath, String pluginName) throws UserException, IOException {, +    private PluginInfo loadPluginInfo(Terminal terminal, Path pluginRoot, Environment env) throws Exception {, +        verifyPluginName(env.pluginsFile(), info.getName());, +        final PluginInfo info = loadPluginInfo(terminal, tmpRoot, env);, +++ b/distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/ListPluginsCommand.java, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java, +        Path pluginDir = createPluginDir(temp);, +        Path pluginDir = createPluginDir(temp);, +        Path pluginDir = createPluginDir(temp);, +        Path pluginDir = createPluginDir(temp);, +        Path pluginDir = createPluginDir(temp);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +, +        if (pluginProject.plugins.hasPlugin(PluginBuildPlugin) == false) {, +                    "[${project.path}] dependencies: the plugin is not an esplugin"), +    /** Find the plugin name in the given project. */]