[+++ b/docs/reference/indices/flush.asciidoc, +                     "translog_generation" : "2",, +++ b/docs/reference/indices/flush.asciidoc, +                     "translog_generation" : "2",, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.stats/20_translog.yml, +  - set: { indices.test.primaries.translog.size_in_bytes: creation_size }, +  - gt: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +# we can't check this yet as creation size will contain two empty translog generations. A single, +# non empty generation with one op may be smaller or larger than that., +#  - gt: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +  - gt: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +  ## creation translog size has some overhead due to an initial empty generation that will be trimmed later, +  - lt: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +  ## creation translog size has some overhead due to an initial empty generation that will be trimmed later, +  - lte: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +  - lte: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +++ b/docs/reference/indices/flush.asciidoc, +                     "translog_generation" : "2",, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.stats/20_translog.yml, +  - set: { indices.test.primaries.translog.size_in_bytes: creation_size }, +  - gt: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +# we can't check this yet as creation size will contain two empty translog generations. A single, +# non empty generation with one op may be smaller or larger than that., +#  - gt: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +  - gt: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +  ## creation translog size has some overhead due to an initial empty generation that will be trimmed later, +  - lt: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +  ## creation translog size has some overhead due to an initial empty generation that will be trimmed later, +  - lte: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +  - lte: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +        final String translogUUID;, +        switch (openMode) {, +            case CREATE_INDEX_AND_TRANSLOG:, +            case OPEN_INDEX_CREATE_TRANSLOG:, +                translogUUID =, +                    Translog.createEmptyTranslog(translogConfig.getTranslogPath(), globalCheckpointSupplier.getAsLong(), shardId);, +                break;, +            case OPEN_INDEX_AND_TRANSLOG:, +                break;, +            default:, +                throw new AssertionError("Unknown openMode " + openMode);, +++ b/docs/reference/indices/flush.asciidoc, +                     "translog_generation" : "2",, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.stats/20_translog.yml, +  - set: { indices.test.primaries.translog.size_in_bytes: creation_size }, +  - gt: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +# we can't check this yet as creation size will contain two empty translog generations. A single, +# non empty generation with one op may be smaller or larger than that., +#  - gt: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +  - gt: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +  ## creation translog size has some overhead due to an initial empty generation that will be trimmed later, +  - lt: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +  ## creation translog size has some overhead due to an initial empty generation that will be trimmed later, +  - lte: { indices.test.primaries.translog.size_in_bytes: $creation_size }, +  - lte: { indices.test.primaries.translog.uncommitted_size_in_bytes: $creation_size }, +++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +        final String translogUUID;, +        switch (openMode) {, +            case CREATE_INDEX_AND_TRANSLOG:, +            case OPEN_INDEX_CREATE_TRANSLOG:, +                translogUUID =, +                    Translog.createEmptyTranslog(translogConfig.getTranslogPath(), globalCheckpointSupplier.getAsLong(), shardId);, +                break;, +            case OPEN_INDEX_AND_TRANSLOG:, +                break;, +            default:, +                throw new AssertionError("Unknown openMode " + openMode);, +++ b/server/src/main/java/org/elasticsearch/index/translog/Translog.java, +import org.elasticsearch.common.unit.ByteSizeValue;, +import org.elasticsearch.index.shard.ShardId;, +     * @param translogUUID     the translog uuid to open, null for a new translog, +        final TranslogConfig config, final String translogUUID, TranslogDeletionPolicy deletionPolicy,, +        this.translogUUID = translogUUID;, +            assert Files.exists(nextTranslogFile) == false || Files.size(nextTranslogFile) <= TranslogWriter.getHeaderLength(translogUUID) : "unexpected translog file: [" + nextTranslogFile + "]";, +, +    public static String createEmptyTranslog(final Path location, final long initialGlobalCheckpoint, final ShardId shardId), +        throws IOException {, +        final ChannelFactory channelFactory = FileChannel::open;, +        return createEmptyTranslog(location, initialGlobalCheckpoint, shardId, channelFactory);, +    }, +, +    static String createEmptyTranslog(Path location, long initialGlobalCheckpoint, ShardId shardId, ChannelFactory channelFactory) throws IOException {, +        IOUtils.rm(location);, +        Files.createDirectories(location);, +        final Checkpoint checkpoint = Checkpoint.emptyTranslogCheckpoint(0, 1, initialGlobalCheckpoint, 1);, +        final Path checkpointFile = location.resolve(CHECKPOINT_FILE_NAME);, +        Checkpoint.write(channelFactory, checkpointFile, checkpoint, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);, +        IOUtils.fsync(checkpointFile, false);, +        final String translogUUID = UUIDs.randomBase64UUID();, +        TranslogWriter writer = TranslogWriter.create(shardId, translogUUID, 1, location.resolve(getFilename(1)), channelFactory,, +            new ByteSizeValue(10), 1, initialGlobalCheckpoint,, +            () -> { throw new UnsupportedOperationException(); }, () -> { throw new UnsupportedOperationException(); }, +        );, +        writer.close();, +        return translogUUID;, +    }, +++ b/docs/reference/indices/flush.asciidoc, +                     "translog_generation" : "2",, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.stats/20_translog.yml]