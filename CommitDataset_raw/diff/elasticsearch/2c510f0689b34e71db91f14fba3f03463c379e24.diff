[+++ b/src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java, +    @Override, +    public boolean closed() {, +        return this.closed.get();, +    }, +, +++ b/src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java, +    @Override, +    public boolean closed() {, +        return this.closed.get();, +    }, +, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java, +            FsTranslogFile current = this.current;, +            if (current.closed() && this.current == current) {, +                // check if we are closed and if we are still current - then this translog is closed and we can exit, +                throw new TranslogException(shardId, "current translog is already closed");, +            }, +++ b/src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java, +    @Override, +    public boolean closed() {, +        return this.closed.get();, +    }, +, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java, +            FsTranslogFile current = this.current;, +            if (current.closed() && this.current == current) {, +                // check if we are closed and if we are still current - then this translog is closed and we can exit, +                throw new TranslogException(shardId, "current translog is already closed");, +            }, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslogFile.java, +, +    public boolean closed();, +++ b/src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java, +    @Override, +    public boolean closed() {, +        return this.closed.get();, +    }, +, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java, +            FsTranslogFile current = this.current;, +            if (current.closed() && this.current == current) {, +                // check if we are closed and if we are still current - then this translog is closed and we can exit, +                throw new TranslogException(shardId, "current translog is already closed");, +            }, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslogFile.java, +, +    public boolean closed();, +++ b/src/main/java/org/elasticsearch/index/translog/fs/SimpleFsTranslogFile.java, +, +    @Override, +    public boolean closed() {, +        return this.closed.get();, +    }, +, +++ b/src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java, +    @Override, +    public boolean closed() {, +        return this.closed.get();, +    }, +, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java, +            FsTranslogFile current = this.current;, +            if (current.closed() && this.current == current) {, +                // check if we are closed and if we are still current - then this translog is closed and we can exit, +                throw new TranslogException(shardId, "current translog is already closed");, +            }, +++ b/src/main/java/org/elasticsearch/index/translog/fs/FsTranslogFile.java, +, +    public boolean closed();, +++ b/src/main/java/org/elasticsearch/index/translog/fs/SimpleFsTranslogFile.java, +, +    @Override, +    public boolean closed() {, +        return this.closed.get();, +    }, +, +++ b/src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java, +            assertEquals(ex.getMessage(), "current translog is already closed");]