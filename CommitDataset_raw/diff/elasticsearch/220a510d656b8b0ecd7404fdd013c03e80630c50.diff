[+++ b/core/src/main/java/org/elasticsearch/common/Priority.java, +, +public enum Priority {, +, +    IMMEDIATE((byte) -1),, +    URGENT((byte) 0),, +    HIGH((byte) 1),, +    NORMAL((byte) 2),, +    LOW((byte) 3),, +    LANGUID((byte) 4);, +        output.writeByte(priority.value);, +    Priority(byte value) {, +        return this.compareTo(p) > 0;, +        return this.compareTo(p) >= 0;, +++ b/core/src/main/java/org/elasticsearch/common/Priority.java, +, +public enum Priority {, +, +    IMMEDIATE((byte) -1),, +    URGENT((byte) 0),, +    HIGH((byte) 1),, +    NORMAL((byte) 2),, +    LOW((byte) 3),, +    LANGUID((byte) 4);, +        output.writeByte(priority.value);, +    Priority(byte value) {, +        return this.compareTo(p) > 0;, +        return this.compareTo(p) >= 0;, +++ b/core/src/test/java/org/elasticsearch/common/PriorityTests.java, +        assertEquals("No enum constant org.elasticsearch.common.Priority.foobar", exception.getMessage());, +        assertEquals(6, Priority.values().length);, +        assertEquals(6, Priority.values().length);, +        List<Priority> shuffeledAndSorted = Arrays.asList(Priority.values());, +            Arrays.asList(Priority.values()))) { // #values() guarantees order!, +++ b/core/src/main/java/org/elasticsearch/common/Priority.java, +, +public enum Priority {, +, +    IMMEDIATE((byte) -1),, +    URGENT((byte) 0),, +    HIGH((byte) 1),, +    NORMAL((byte) 2),, +    LOW((byte) 3),, +    LANGUID((byte) 4);, +        output.writeByte(priority.value);, +    Priority(byte value) {, +        return this.compareTo(p) > 0;, +        return this.compareTo(p) >= 0;, +++ b/core/src/test/java/org/elasticsearch/common/PriorityTests.java, +        assertEquals("No enum constant org.elasticsearch.common.Priority.foobar", exception.getMessage());, +        assertEquals(6, Priority.values().length);, +        assertEquals(6, Priority.values().length);, +        List<Priority> shuffeledAndSorted = Arrays.asList(Priority.values());, +            Arrays.asList(Priority.values()))) { // #values() guarantees order!, +++ b/core/src/test/java/org/elasticsearch/common/util/concurrent/PrioritizedExecutorsTests.java, +        List<Priority> priorities = Arrays.asList(Priority.values());]