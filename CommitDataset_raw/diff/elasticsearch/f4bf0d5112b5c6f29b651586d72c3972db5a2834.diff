[+++ b/docs/reference/api-conventions.asciidoc, +All multi indices API support the following url query string parameters:, +* `ignore_unavailable` - Controls whether to ignore if any specified indices are unavailable, this includes indices, +   that don't exist or closed indices. Either `true` or `false` can be specified., +* `allow_no_indices` - Controls whether to fail if a wildcard indices expressions results into no concrete indices., +   Either `true` or `false` can be specified. For example if the wildcard expression `foo*` is specified and no indices, +   are available that start with `foo` then depending on this setting the request will fail. This setting is also applicable, +   when `_all`, `*` or no index has been specified., +* `expand_wildcards` - Controls to what kind of concrete indices wildcard indices expression expand to. If `open` is, +  specified then the wildcard expression if expanded to only open indices and if `closed` is specified then the wildcard, +  expression if expanded only to closed indices. Also both values (`open,closed`) can be specified to expand to all indices., +, +The defaults settings for the above parameters dependent on the api being used., +++ b/docs/reference/api-conventions.asciidoc, +All multi indices API support the following url query string parameters:, +* `ignore_unavailable` - Controls whether to ignore if any specified indices are unavailable, this includes indices, +   that don't exist or closed indices. Either `true` or `false` can be specified., +* `allow_no_indices` - Controls whether to fail if a wildcard indices expressions results into no concrete indices., +   Either `true` or `false` can be specified. For example if the wildcard expression `foo*` is specified and no indices, +   are available that start with `foo` then depending on this setting the request will fail. This setting is also applicable, +   when `_all`, `*` or no index has been specified., +* `expand_wildcards` - Controls to what kind of concrete indices wildcard indices expression expand to. If `open` is, +  specified then the wildcard expression if expanded to only open indices and if `closed` is specified then the wildcard, +  expression if expanded only to closed indices. Also both values (`open,closed`) can be specified to expand to all indices., +, +The defaults settings for the above parameters dependent on the api being used., +++ b/docs/reference/indices/aliases.asciidoc, +`ignore_unavailable`::, +    exist. If set to `true` then those indices are ignored., +++ b/docs/reference/api-conventions.asciidoc, +All multi indices API support the following url query string parameters:, +* `ignore_unavailable` - Controls whether to ignore if any specified indices are unavailable, this includes indices, +   that don't exist or closed indices. Either `true` or `false` can be specified., +* `allow_no_indices` - Controls whether to fail if a wildcard indices expressions results into no concrete indices., +   Either `true` or `false` can be specified. For example if the wildcard expression `foo*` is specified and no indices, +   are available that start with `foo` then depending on this setting the request will fail. This setting is also applicable, +   when `_all`, `*` or no index has been specified., +* `expand_wildcards` - Controls to what kind of concrete indices wildcard indices expression expand to. If `open` is, +  specified then the wildcard expression if expanded to only open indices and if `closed` is specified then the wildcard, +  expression if expanded only to closed indices. Also both values (`open,closed`) can be specified to expand to all indices., +, +The defaults settings for the above parameters dependent on the api being used., +++ b/docs/reference/indices/aliases.asciidoc, +`ignore_unavailable`::, +    exist. If set to `true` then those indices are ignored., +++ b/docs/reference/indices/open-close.asciidoc, +disabled using the `ignore_unavailable=true` parameter., +++ b/docs/reference/api-conventions.asciidoc, +All multi indices API support the following url query string parameters:, +* `ignore_unavailable` - Controls whether to ignore if any specified indices are unavailable, this includes indices, +   that don't exist or closed indices. Either `true` or `false` can be specified., +* `allow_no_indices` - Controls whether to fail if a wildcard indices expressions results into no concrete indices., +   Either `true` or `false` can be specified. For example if the wildcard expression `foo*` is specified and no indices, +   are available that start with `foo` then depending on this setting the request will fail. This setting is also applicable, +   when `_all`, `*` or no index has been specified., +* `expand_wildcards` - Controls to what kind of concrete indices wildcard indices expression expand to. If `open` is, +  specified then the wildcard expression if expanded to only open indices and if `closed` is specified then the wildcard, +  expression if expanded only to closed indices. Also both values (`open,closed`) can be specified to expand to all indices., +, +The defaults settings for the above parameters dependent on the api being used., +++ b/docs/reference/indices/aliases.asciidoc, +`ignore_unavailable`::, +    exist. If set to `true` then those indices are ignored., +++ b/docs/reference/indices/open-close.asciidoc, +disabled using the `ignore_unavailable=true` parameter., +++ b/docs/reference/modules/snapshots.asciidoc, +    "ignore_unavailable": "true",, +`ignore_unavailable` option. Setting it to `true` will cause indices that do not exists to be ignored during snapshot, +creation. By default, when `ignore_unavailable` option is not set and an index is missing the snapshot request will fail., +    "ignore_unavailable": "missing",, +++ b/docs/reference/api-conventions.asciidoc, +All multi indices API support the following url query string parameters:, +* `ignore_unavailable` - Controls whether to ignore if any specified indices are unavailable, this includes indices, +   that don't exist or closed indices. Either `true` or `false` can be specified., +* `allow_no_indices` - Controls whether to fail if a wildcard indices expressions results into no concrete indices., +   Either `true` or `false` can be specified. For example if the wildcard expression `foo*` is specified and no indices, +   are available that start with `foo` then depending on this setting the request will fail. This setting is also applicable, +   when `_all`, `*` or no index has been specified., +* `expand_wildcards` - Controls to what kind of concrete indices wildcard indices expression expand to. If `open` is, +  specified then the wildcard expression if expanded to only open indices and if `closed` is specified then the wildcard, +  expression if expanded only to closed indices. Also both values (`open,closed`) can be specified to expand to all indices., +, +The defaults settings for the above parameters dependent on the api being used., +++ b/docs/reference/indices/aliases.asciidoc, +`ignore_unavailable`::, +    exist. If set to `true` then those indices are ignored., +++ b/docs/reference/indices/open-close.asciidoc, +disabled using the `ignore_unavailable=true` parameter., +++ b/docs/reference/modules/snapshots.asciidoc, +    "ignore_unavailable": "true",, +`ignore_unavailable` option. Setting it to `true` will cause indices that do not exists to be ignored during snapshot, +creation. By default, when `ignore_unavailable` option is not set and an index is missing the snapshot request will fail., +    "ignore_unavailable": "missing",, +++ b/docs/reference/search/percolate.asciidoc, +* `ignore_unavailable` - Controls if missing concrete indices should silently be ignored. Same as is in the search api., +++ b/docs/reference/api-conventions.asciidoc, +All multi indices API support the following url query string parameters:, +* `ignore_unavailable` - Controls whether to ignore if any specified indices are unavailable, this includes indices, +   that don't exist or closed indices. Either `true` or `false` can be specified., +* `allow_no_indices` - Controls whether to fail if a wildcard indices expressions results into no concrete indices.]