[+++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    public static final InetSocketTransportAddress PROTO = new InetSocketTransportAddress(new InetSocketAddress("127.0.0.1", 0));, +        final int len = in.readByte();, +        final byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +        if (address == null) {, +            throw new IllegalArgumentException("InetSocketAddress must not be null");, +        }, +        if (address.getAddress() == null) {, +            throw new IllegalArgumentException("Address must be resolved but wasn't - InetSocketAddress#getAddress() returned null");, +        }, +       return getAddress(); // just delegate no resolving, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +++ b/core/src/main/java/org/elasticsearch/common/transport/InetSocketTransportAddress.java, +    public static final InetSocketTransportAddress PROTO = new InetSocketTransportAddress(new InetSocketAddress("127.0.0.1", 0));, +        final int len = in.readByte();, +        final byte[] a = new byte[len]; // 4 bytes (IPv4) or 16 bytes (IPv6), +        if (address == null) {, +            throw new IllegalArgumentException("InetSocketAddress must not be null");, +        }, +        if (address.getAddress() == null) {, +            throw new IllegalArgumentException("Address must be resolved but wasn't - InetSocketAddress#getAddress() returned null");, +        }, +       return getAddress(); // just delegate no resolving, +++ b/core/src/test/java/org/elasticsearch/test/ESIntegTestCase.java]