[+++ b/build.gradle, +    "org.elasticsearch:elasticsearch-geo:${version}": ':libs:elasticsearch-geo',, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-geo:${version}": ':libs:elasticsearch-geo',, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Line.java, +    public double[] getLats() {, +        return lats.clone();, +    }, +, +    public double[] getLons() {, +        return lons.clone();, +    }, +, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-geo:${version}": ':libs:elasticsearch-geo',, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Line.java, +    public double[] getLats() {, +        return lats.clone();, +    }, +, +    public double[] getLons() {, +        return lons.clone();, +    }, +, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Point.java, +    public double getLat() {, +    public double getLon() {, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-geo:${version}": ':libs:elasticsearch-geo',, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Line.java, +    public double[] getLats() {, +        return lats.clone();, +    }, +, +    public double[] getLons() {, +        return lons.clone();, +    }, +, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Point.java, +    public double getLat() {, +    public double getLon() {, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/utils/WellKnownText.java, +                    visitPoint(multiPoint.get(0).getLon(), multiPoint.get(0).getLat());, +                        visitPoint(point.getLon(), point.getLat());, +                        visitPoint(point.getLon(), point.getLat());, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-geo:${version}": ':libs:elasticsearch-geo',, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Line.java, +    public double[] getLats() {, +        return lats.clone();, +    }, +, +    public double[] getLons() {, +        return lons.clone();, +    }, +, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Point.java, +    public double getLat() {, +    public double getLon() {, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/utils/WellKnownText.java, +                    visitPoint(multiPoint.get(0).getLon(), multiPoint.get(0).getLat());, +                        visitPoint(point.getLon(), point.getLat());, +                        visitPoint(point.getLon(), point.getLat());, +++ b/server/build.gradle, +  compile "org.elasticsearch:elasticsearch-geo:${version}", +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-geo:${version}": ':libs:elasticsearch-geo',, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Line.java, +    public double[] getLats() {, +        return lats.clone();, +    }, +, +    public double[] getLons() {, +        return lons.clone();, +    }, +, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Point.java, +    public double getLat() {, +    public double getLon() {, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/utils/WellKnownText.java, +                    visitPoint(multiPoint.get(0).getLon(), multiPoint.get(0).getLat());, +                        visitPoint(point.getLon(), point.getLat());, +                        visitPoint(point.getLon(), point.getLat());, +++ b/server/build.gradle, +  compile "org.elasticsearch:elasticsearch-geo:${version}", +++ b/server/src/main/java/org/elasticsearch/common/geo/GeoShapeType.java, +        public ShapeBuilder<?, ?, ?> getBuilder(CoordinateNode coordinates, DistanceUnit.Distance radius,, +    public abstract ShapeBuilder<?, ?, ?> getBuilder(CoordinateNode coordinates, DistanceUnit.Distance radius,, +++ b/build.gradle, +    "org.elasticsearch:elasticsearch-geo:${version}": ':libs:elasticsearch-geo',, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Line.java, +    public double[] getLats() {, +        return lats.clone();, +    }, +, +    public double[] getLons() {, +        return lons.clone();, +    }, +, +++ b/libs/geo/src/main/java/org/elasticsearch/geo/geometry/Point.java]