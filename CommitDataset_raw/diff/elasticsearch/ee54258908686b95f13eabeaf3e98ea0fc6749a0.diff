[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/action/RevertModelSnapshotAction.java, +        private static final ParseField ACKNOWLEDGED = new ParseField("acknowledged");, +        private static final ParseField MODEL = new ParseField("model");, +        private ModelSnapshot model;, +        Response() {, +, +            model = modelSnapshot;, +        public ModelSnapshot getModel() {, +            return model;, +            model = new ModelSnapshot(in);, +            model.writeTo(out);, +            return RestStatus.OK;, +            builder.field(ACKNOWLEDGED.getPreferredName(), true);, +            builder.field(MODEL.getPreferredName());, +            builder = model.toXContent(builder, params);, +            return builder;, +            return Objects.hash(model);, +            return Objects.equals(model, other.model);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/action/RevertModelSnapshotAction.java, +        private static final ParseField ACKNOWLEDGED = new ParseField("acknowledged");, +        private static final ParseField MODEL = new ParseField("model");, +        private ModelSnapshot model;, +        Response() {, +, +            model = modelSnapshot;, +        public ModelSnapshot getModel() {, +            return model;, +            model = new ModelSnapshot(in);, +            model.writeTo(out);, +            return RestStatus.OK;, +            builder.field(ACKNOWLEDGED.getPreferredName(), true);, +            builder.field(MODEL.getPreferredName());, +            builder = model.toXContent(builder, params);, +            return builder;, +            return Objects.hash(model);, +            return Objects.equals(model, other.model);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/job/manager/JobManager.java, +                    return new RevertModelSnapshotAction.Response(modelSnapshot);, +                throw new IllegalStateException("Could not revert modelSnapshot on job [", +                        + request.getJobId() + "], not acknowledged by master.");, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/action/RevertModelSnapshotAction.java, +        private static final ParseField ACKNOWLEDGED = new ParseField("acknowledged");, +        private static final ParseField MODEL = new ParseField("model");, +        private ModelSnapshot model;, +        Response() {, +, +            model = modelSnapshot;, +        public ModelSnapshot getModel() {, +            return model;, +            model = new ModelSnapshot(in);, +            model.writeTo(out);, +            return RestStatus.OK;, +            builder.field(ACKNOWLEDGED.getPreferredName(), true);, +            builder.field(MODEL.getPreferredName());, +            builder = model.toXContent(builder, params);, +            return builder;, +            return Objects.hash(model);, +            return Objects.equals(model, other.model);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/job/manager/JobManager.java, +                    return new RevertModelSnapshotAction.Response(modelSnapshot);, +                throw new IllegalStateException("Could not revert modelSnapshot on job [", +                        + request.getJobId() + "], not acknowledged by master.");, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/prelert/action/RevertModelSnapshotActionResponseTests.java, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/action/RevertModelSnapshotAction.java, +        private static final ParseField ACKNOWLEDGED = new ParseField("acknowledged");, +        private static final ParseField MODEL = new ParseField("model");, +        private ModelSnapshot model;, +        Response() {, +, +            model = modelSnapshot;, +        public ModelSnapshot getModel() {, +            return model;, +            model = new ModelSnapshot(in);, +            model.writeTo(out);, +            return RestStatus.OK;, +            builder.field(ACKNOWLEDGED.getPreferredName(), true);, +            builder.field(MODEL.getPreferredName());, +            builder = model.toXContent(builder, params);, +            return builder;, +            return Objects.hash(model);, +            return Objects.equals(model, other.model);, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/prelert/job/manager/JobManager.java, +                    return new RevertModelSnapshotAction.Response(modelSnapshot);, +                throw new IllegalStateException("Could not revert modelSnapshot on job [", +                        + request.getJobId() + "], not acknowledged by master.");, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/prelert/action/RevertModelSnapshotActionResponseTests.java, +++ b/elasticsearch/src/test/resources/rest-api-spec/test/revert_model_snapshot.yaml, +  - match: { acknowledged: true }, +  - match: { model.jobId: "foo" }, +  - match: { model.timestamp: 1464825600000 }, +  - match: { model.restorePriority: 1 }, +  - match: { model.snapshotId: "foo1" }, +  - match: { model.snapshotDocCount: 0 }, +  - match: { acknowledged: true }, +  - match: { model.jobId: "foo" }, +  - match: { model.timestamp: 1464739200000 }, +  - match: { model.restorePriority: 2 }, +  - match: { model.snapshotId: "foo2" }, +  - match: { model.snapshotDocCount: 0 }, +  - match: { acknowledged: true }]