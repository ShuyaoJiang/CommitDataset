[+++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java, +import org.elasticsearch.common.Nullable;, +     * @param filterBuilder The filter to apply on the query (Can be null), +    public FilteredQueryBuilder(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +        if (filterBuilder != null) {, +        }, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java, +import org.elasticsearch.common.Nullable;, +     * @param filterBuilder The filter to apply on the query (Can be null), +    public FilteredQueryBuilder(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +        if (filterBuilder != null) {, +        }, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java, +        // we allow for null filter, so it makes compositions on the client side to be simpler, +            return query;, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java, +import org.elasticsearch.common.Nullable;, +     * @param filterBuilder The filter to apply on the query (Can be null), +    public FilteredQueryBuilder(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +        if (filterBuilder != null) {, +        }, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java, +        // we allow for null filter, so it makes compositions on the client side to be simpler, +            return query;, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    public static FilteredQueryBuilder filtered(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +    public static FilteredQueryBuilder filteredQuery(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java, +import org.elasticsearch.common.Nullable;, +     * @param filterBuilder The filter to apply on the query (Can be null), +    public FilteredQueryBuilder(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +        if (filterBuilder != null) {, +        }, +++ b/src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java, +        // we allow for null filter, so it makes compositions on the client side to be simpler, +            return query;, +++ b/src/main/java/org/elasticsearch/index/query/QueryBuilders.java, +    public static FilteredQueryBuilder filtered(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +    public static FilteredQueryBuilder filteredQuery(QueryBuilder queryBuilder, @Nullable FilterBuilder filterBuilder) {, +++ b/src/main/java/org/elasticsearch/index/query/QueryParseContext.java, +            // empty filter, +            if (token == XContentParser.Token.END_OBJECT || token == XContentParser.Token.VALUE_NULL) {, +                return null;, +            }]