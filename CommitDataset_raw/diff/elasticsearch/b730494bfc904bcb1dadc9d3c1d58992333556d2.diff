[+++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStats.java, +        builder.field(Fields.MAX_DOC, maxDoc);, +        builder.field(Fields.DOC_COUNT, docCount);, +        builder.field(Fields.DENSITY, getDensity());, +        builder.field(Fields.SUM_DOC_FREQ, sumDocFreq);, +        builder.field(Fields.SUM_TOTAL_TERM_FREQ, sumTotalTermFreq);, +        builder.field(Fields.SEARCHABLE, isSearchable);, +        builder.field(Fields.AGGREGATABLE, isAggregatable);, +        builder.field(Fields.MIN_VALUE, getMinValue());, +        builder.field(Fields.MIN_VALUE_AS_STRING, getMinValueAsString());, +        builder.field(Fields.MAX_VALUE, getMaxValue());, +        builder.field(Fields.MAX_VALUE_AS_STRING, getMaxValueAsString());, +            builder.field(Fields.MIN_VALUE, getMinValueAsString());, +            builder.field(Fields.MAX_VALUE, getMaxValueAsString());, +    public static String typeName(byte type) {, +        switch (type) {, +            case 0:, +                return "whole-number";, +            case 1:, +                return "floating-point";, +            case 2:, +                return "date";, +            case 3:, +                return "text";, +            case 4:, +                return "ip";, +            default:, +                throw new IllegalArgumentException("Unknown type.");, +        }, +    }, +, +    private static final class Fields {, +        static final String MAX_DOC = new String("max_doc");, +        static final String DOC_COUNT = new String("doc_count");, +        static final String DENSITY = new String("density");, +        static final String SUM_DOC_FREQ = new String("sum_doc_freq");, +        static final String SUM_TOTAL_TERM_FREQ = new String("sum_total_term_freq");, +        static final String SEARCHABLE = new String("searchable");, +        static final String AGGREGATABLE = new String("aggregatable");, +        static final String MIN_VALUE = new String("min_value");, +        static final String MIN_VALUE_AS_STRING = new String("min_value_as_string");, +        static final String MAX_VALUE = new String("max_value");, +        static final String MAX_VALUE_AS_STRING = new String("max_value_as_string");, +    }, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStats.java, +        builder.field(Fields.MAX_DOC, maxDoc);, +        builder.field(Fields.DOC_COUNT, docCount);, +        builder.field(Fields.DENSITY, getDensity());, +        builder.field(Fields.SUM_DOC_FREQ, sumDocFreq);, +        builder.field(Fields.SUM_TOTAL_TERM_FREQ, sumTotalTermFreq);, +        builder.field(Fields.SEARCHABLE, isSearchable);, +        builder.field(Fields.AGGREGATABLE, isAggregatable);, +        builder.field(Fields.MIN_VALUE, getMinValue());, +        builder.field(Fields.MIN_VALUE_AS_STRING, getMinValueAsString());, +        builder.field(Fields.MAX_VALUE, getMaxValue());, +        builder.field(Fields.MAX_VALUE_AS_STRING, getMaxValueAsString());, +            builder.field(Fields.MIN_VALUE, getMinValueAsString());, +            builder.field(Fields.MAX_VALUE, getMaxValueAsString());, +    public static String typeName(byte type) {, +        switch (type) {, +            case 0:, +                return "whole-number";, +            case 1:, +                return "floating-point";, +            case 2:, +                return "date";, +            case 3:, +                return "text";, +            case 4:, +                return "ip";, +            default:, +                throw new IllegalArgumentException("Unknown type.");, +        }, +    }, +, +    private static final class Fields {, +        static final String MAX_DOC = new String("max_doc");, +        static final String DOC_COUNT = new String("doc_count");, +        static final String DENSITY = new String("density");, +        static final String SUM_DOC_FREQ = new String("sum_doc_freq");, +        static final String SUM_TOTAL_TERM_FREQ = new String("sum_total_term_freq");, +        static final String SEARCHABLE = new String("searchable");, +        static final String AGGREGATABLE = new String("aggregatable");, +        static final String MIN_VALUE = new String("min_value");, +        static final String MIN_VALUE_AS_STRING = new String("min_value_as_string");, +        static final String MAX_VALUE = new String("max_value");, +        static final String MAX_VALUE_AS_STRING = new String("max_value_as_string");, +    }, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/TransportFieldStatsAction.java, +                                        FieldStats.typeName(fields[0].getType()) +, +                                        FieldStats.typeName(fields[1].getType()) +, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStats.java, +        builder.field(Fields.MAX_DOC, maxDoc);, +        builder.field(Fields.DOC_COUNT, docCount);, +        builder.field(Fields.DENSITY, getDensity());, +        builder.field(Fields.SUM_DOC_FREQ, sumDocFreq);, +        builder.field(Fields.SUM_TOTAL_TERM_FREQ, sumTotalTermFreq);, +        builder.field(Fields.SEARCHABLE, isSearchable);, +        builder.field(Fields.AGGREGATABLE, isAggregatable);, +        builder.field(Fields.MIN_VALUE, getMinValue());]