[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +            this.analysisLimits = job.getAnalysisLimits();, +            this.modelSnapshotRetentionDays = job.getModelSnapshotRetentionDays();, +            this.resultsIndexName = job.getResultsIndexName();, +            this.deleted = job.isDeleted();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +            this.analysisLimits = job.getAnalysisLimits();, +            this.modelSnapshotRetentionDays = job.getModelSnapshotRetentionDays();, +            this.resultsIndexName = job.getResultsIndexName();, +            this.deleted = job.isDeleted();, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/datafeed/DatafeedConfigTests.java, +    public void testCopyConstructor() {, +        for (int i = 0; i < NUMBER_OF_TESTQUERIES; i++) {, +            DatafeedConfig datafeedConfig = createTestInstance();, +            DatafeedConfig copy = new DatafeedConfig.Builder(datafeedConfig).build();, +            assertEquals(datafeedConfig, copy);, +        }, +    }, +, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/job/config/Job.java, +            this.analysisLimits = job.getAnalysisLimits();, +            this.modelSnapshotRetentionDays = job.getModelSnapshotRetentionDays();, +            this.resultsIndexName = job.getResultsIndexName();, +            this.deleted = job.isDeleted();, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/datafeed/DatafeedConfigTests.java, +    public void testCopyConstructor() {, +        for (int i = 0; i < NUMBER_OF_TESTQUERIES; i++) {, +            DatafeedConfig datafeedConfig = createTestInstance();, +            DatafeedConfig copy = new DatafeedConfig.Builder(datafeedConfig).build();, +            assertEquals(datafeedConfig, copy);, +        }, +    }, +, +++ b/plugin/src/test/java/org/elasticsearch/xpack/ml/job/config/JobTests.java, +    public void testCopyConstructor() {, +        for (int i = 0; i < NUMBER_OF_TESTQUERIES; i++) {, +            Job job = createTestInstance();, +            Job copy = new Job.Builder(job).build();, +            assertEquals(job, copy);, +        }, +    }, +]