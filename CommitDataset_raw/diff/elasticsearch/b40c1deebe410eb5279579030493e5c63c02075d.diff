[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java, +import org.elasticsearch.index.IndexNotFoundException;, +        try {, +        } catch (IndexNotFoundException ex) {, +            logger.debug("failed to put mappings on indices [{}], type [{}]", ex, request.indices(), request.type());, +            listener.onFailure(ex);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java, +import org.elasticsearch.index.IndexNotFoundException;, +        try {, +        } catch (IndexNotFoundException ex) {, +            logger.debug("failed to put mappings on indices [{}], type [{}]", ex, request.indices(), request.type());, +            listener.onFailure(ex);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexNotFoundException;, +    private Version getVersion(MetaData metaData, String concreteIndex) {, +        // this can go away in 3.0 but is here now for easy backporting - since in 2.x we need the version on the timestamp stuff, +        final IndexMetaData indexMetaData = metaData.getIndices().get(concreteIndex);, +        if (indexMetaData == null) {, +            throw new IndexNotFoundException(concreteIndex);, +        }, +        return Version.indexCreated(indexMetaData.getSettings());, +    }, +, +, +                    getVersion(metaData, concreteIndex));, +                            timestamp = MappingMetaData.Timestamp.parseStringTimestamp(timestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +                timestamp = MappingMetaData.Timestamp.parseStringTimestamp(defaultTimestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java, +import org.elasticsearch.index.IndexNotFoundException;, +        try {, +        } catch (IndexNotFoundException ex) {, +            logger.debug("failed to put mappings on indices [{}], type [{}]", ex, request.indices(), request.type());, +            listener.onFailure(ex);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexNotFoundException;, +    private Version getVersion(MetaData metaData, String concreteIndex) {, +        // this can go away in 3.0 but is here now for easy backporting - since in 2.x we need the version on the timestamp stuff, +        final IndexMetaData indexMetaData = metaData.getIndices().get(concreteIndex);, +        if (indexMetaData == null) {, +            throw new IndexNotFoundException(concreteIndex);, +        }, +        return Version.indexCreated(indexMetaData.getSettings());, +    }, +, +, +                    getVersion(metaData, concreteIndex));, +                            timestamp = MappingMetaData.Timestamp.parseStringTimestamp(timestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +                timestamp = MappingMetaData.Timestamp.parseStringTimestamp(defaultTimestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java, +import org.elasticsearch.index.IndexNotFoundException;, +        try {, +        } catch (IndexNotFoundException ex) {, +            logger.debug("failed to put mappings on indices [{}], type [{}]", ex, request.indices(), request.type());, +            listener.onFailure(ex);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexNotFoundException;, +    private Version getVersion(MetaData metaData, String concreteIndex) {, +        // this can go away in 3.0 but is here now for easy backporting - since in 2.x we need the version on the timestamp stuff, +        final IndexMetaData indexMetaData = metaData.getIndices().get(concreteIndex);, +        if (indexMetaData == null) {, +            throw new IndexNotFoundException(concreteIndex);, +        }, +        return Version.indexCreated(indexMetaData.getSettings());, +    }, +, +, +                    getVersion(metaData, concreteIndex));, +                            timestamp = MappingMetaData.Timestamp.parseStringTimestamp(timestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +                timestamp = MappingMetaData.Timestamp.parseStringTimestamp(defaultTimestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +    public MetaDataCreateIndexService(Settings settings, ClusterService clusterService,, +                                      IndicesService indicesService, AllocationService allocationService,, +                                      Set<IndexTemplateFilter> indexTemplateFilters, Environment env) {, +    public void createIndex(final CreateIndexClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java, +import org.elasticsearch.index.IndexNotFoundException;, +        try {, +        } catch (IndexNotFoundException ex) {, +            logger.debug("failed to put mappings on indices [{}], type [{}]", ex, request.indices(), request.type());, +            listener.onFailure(ex);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexNotFoundException;, +    private Version getVersion(MetaData metaData, String concreteIndex) {, +        // this can go away in 3.0 but is here now for easy backporting - since in 2.x we need the version on the timestamp stuff, +        final IndexMetaData indexMetaData = metaData.getIndices().get(concreteIndex);, +        if (indexMetaData == null) {, +            throw new IndexNotFoundException(concreteIndex);, +        }, +        return Version.indexCreated(indexMetaData.getSettings());]