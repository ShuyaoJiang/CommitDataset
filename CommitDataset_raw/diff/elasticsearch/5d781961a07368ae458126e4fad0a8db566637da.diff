[+++ b/.idea/dictionaries/kimchy.xml, +      <w>freqs</w>, +      <w>iter</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>freqs</w>, +      <w>iter</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.terms.TransportTermsAction;, +        bind(TransportCountAction.class).asEagerSingleton();, +        bind(TransportTermsAction.class).asEagerSingleton();, +++ b/.idea/dictionaries/kimchy.xml, +      <w>freqs</w>, +      <w>iter</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.terms.TransportTermsAction;, +        bind(TransportCountAction.class).asEagerSingleton();, +        bind(TransportTermsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +    public static final String TERMS = "indices/terms";, +, +++ b/.idea/dictionaries/kimchy.xml, +      <w>freqs</w>, +      <w>iter</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.terms.TransportTermsAction;, +        bind(TransportCountAction.class).asEagerSingleton();, +        bind(TransportTermsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +    public static final String TERMS = "indices/terms";, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java, +        long numDocs = -1;, +        long maxDoc = -1;, +        long deletedDocs = -1;, +        public long numDocs() {, +        public long maxDoc() {, +        public long deletedDocs() {, +    /**, +     * A shard id to index shard status map (note, index shard status is the replication shard group that maps, +     * to the shard id)., +     */, +++ b/.idea/dictionaries/kimchy.xml, +      <w>freqs</w>, +      <w>iter</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.terms.TransportTermsAction;, +        bind(TransportCountAction.class).asEagerSingleton();, +        bind(TransportTermsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +    public static final String TERMS = "indices/terms";, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java, +        long numDocs = -1;, +        long maxDoc = -1;, +        long deletedDocs = -1;, +        public long numDocs() {, +        public long maxDoc() {, +        public long deletedDocs() {, +    /**, +     * A shard id to index shard status map (note, index shard status is the replication shard group that maps, +     * to the shard id)., +     */, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +                it.advance();, +++ b/.idea/dictionaries/kimchy.xml, +      <w>freqs</w>, +      <w>iter</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java, +import org.elasticsearch.action.terms.TransportTermsAction;, +        bind(TransportCountAction.class).asEagerSingleton();, +        bind(TransportTermsAction.class).asEagerSingleton();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActions.java, +    public static final String TERMS = "indices/terms";, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java, +        long numDocs = -1;, +        long maxDoc = -1;, +        long deletedDocs = -1;, +        public long numDocs() {, +        public long maxDoc() {, +        public long deletedDocs() {, +    /**, +     * A shard id to index shard status map (note, index shard status is the replication shard group that maps, +     * to the shard id)., +     */, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +                it.advance();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java, +                        try {, +                        } catch (Exception e) {, +                            listener.onFailure(e);, +                        }, +                try {, +                } catch (Exception e) {, +                    listener.onFailure(e);, +                }, +++ b/.idea/dictionaries/kimchy.xml, +      <w>freqs</w>, +      <w>iter</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/TransportActionModule.java]