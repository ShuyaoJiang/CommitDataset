[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/java/org/elasticsearch/gradle/precommit/TestingConventionsTasks.java, +            Map<String, Set<Class<?>>> testClassesPerTask =, +                Stream.concat(, +                    classFilesPerGradleTestTask.entrySet().stream(),, +                    classFilesPerRandomizedTestingTask.entrySet().stream(), +                ), +                    .collect(, +                        Collectors.toMap(, +                            Map.Entry::getKey,, +                            entry -> entry.getValue().stream(), +                                .map(classes::get), +                                .filter(implementsNamingConvention), +                                .collect(Collectors.toSet()), +                        ), +                    );, +, +, +                collectProblems(, +                    testClassesPerTask.entrySet().stream(), +                    .map( entry ->, +                        checkAtLeastOneExists(, +                            "test class in " + entry.getKey(),, +                            entry.getValue().stream(), +                        ), +                    ), +                    .collect(Collectors.joining()), +                ),, +    private String checkAtLeastOneExists(String message, Stream<? extends Class<?>> stream) {, +        if (stream.findAny().isPresent()) {, +            return "";, +        } else {, +            return "Expected at least one " + message + ", but found none.\n";, +        }, +    }, +]