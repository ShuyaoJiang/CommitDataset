[+++ b/docs/reference/migration/migrate_7_0/aggregations.asciidoc, +, +==== `missing` option of the `composite` aggregation has been removed, +, +The `missing` option of the `composite` aggregation, deprecated in 6.x,, +has been removed. `missing_bucket` should be used instead., +++ b/docs/reference/migration/migrate_7_0/aggregations.asciidoc, +, +==== `missing` option of the `composite` aggregation has been removed, +, +The `missing` option of the `composite` aggregation, deprecated in 6.x,, +has been removed. `missing_bucket` should be used instead., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/docs/reference/migration/migrate_7_0/aggregations.asciidoc, +, +==== `missing` option of the `composite` aggregation has been removed, +, +The `missing` option of the `composite` aggregation, deprecated in 6.x,, +has been removed. `missing_bucket` should be used instead., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/analysis-nori/src/test/java/org/elasticsearch/index/analysis/NoriAnalysisTests.java, +        tokenizer.setReader(new StringReader(""));, +++ b/docs/reference/migration/migrate_7_0/aggregations.asciidoc, +, +==== `missing` option of the `composite` aggregation has been removed, +, +The `missing` option of the `composite` aggregation, deprecated in 6.x,, +has been removed. `missing_bucket` should be used instead., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/analysis-nori/src/test/java/org/elasticsearch/index/analysis/NoriAnalysisTests.java, +        tokenizer.setReader(new StringReader(""));, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/search.aggregation/230_composite.yml, +      version: " - 6.3.99", +      reason:  starting in 6.4 the composite sources do not allocate arrays eagerly., +++ b/docs/reference/migration/migrate_7_0/aggregations.asciidoc, +, +==== `missing` option of the `composite` aggregation has been removed, +, +The `missing` option of the `composite` aggregation, deprecated in 6.x,, +has been removed. `missing_bucket` should be used instead., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/analysis-nori/src/test/java/org/elasticsearch/index/analysis/NoriAnalysisTests.java, +        tokenizer.setReader(new StringReader(""));, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/search.aggregation/230_composite.yml, +      version: " - 6.3.99", +      reason:  starting in 6.4 the composite sources do not allocate arrays eagerly., +++ b/server/src/main/java/org/elasticsearch/Version.java, +    // The below version is missing from the 7.3 JAR, +    private static final org.apache.lucene.util.Version LUCENE_7_2_1 = org.apache.lucene.util.Version.fromBits(7, 2, 1);, +    public static final Version V_6_2_0 = new Version(V_6_2_0_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_1 = new Version(V_6_2_1_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_2 = new Version(V_6_2_2_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_3 = new Version(V_6_2_3_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_4 = new Version(V_6_2_4_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_5 = new Version(V_6_2_5_ID, LUCENE_7_2_1);, +++ b/docs/reference/migration/migrate_7_0/aggregations.asciidoc, +, +==== `missing` option of the `composite` aggregation has been removed, +, +The `missing` option of the `composite` aggregation, deprecated in 6.x,, +has been removed. `missing_bucket` should be used instead., +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java, +                final BreakIterator breakers[] = new BreakIterator[UScript.CODE_LIMIT];, +    private BreakIterator parseRules(String filename, Environment env) throws IOException {, +++ b/plugins/analysis-nori/src/test/java/org/elasticsearch/index/analysis/NoriAnalysisTests.java, +        tokenizer.setReader(new StringReader(""));, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/search.aggregation/230_composite.yml, +      version: " - 6.3.99", +      reason:  starting in 6.4 the composite sources do not allocate arrays eagerly., +++ b/server/src/main/java/org/elasticsearch/Version.java, +    // The below version is missing from the 7.3 JAR, +    private static final org.apache.lucene.util.Version LUCENE_7_2_1 = org.apache.lucene.util.Version.fromBits(7, 2, 1);, +    public static final Version V_6_2_0 = new Version(V_6_2_0_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_1 = new Version(V_6_2_1_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_2 = new Version(V_6_2_2_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_3 = new Version(V_6_2_3_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_4 = new Version(V_6_2_4_ID, LUCENE_7_2_1);, +    public static final Version V_6_2_5 = new Version(V_6_2_5_ID, LUCENE_7_2_1);, +++ b/server/src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java, +import org.elasticsearch.common.xcontent.ToXContentFragment;, +import org.elasticsearch.common.xcontent.XContentType;, +public class AliasMetaData extends AbstractDiffable<AliasMetaData> implements ToXContentFragment {, +    @Override, +    public String toString() {, +        return Strings.toString(this, true, true);, +    }, +, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        AliasMetaData.Builder.toXContent(this, builder, params);, +        return builder;, +    }]