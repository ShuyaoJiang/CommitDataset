[+++ b/docs/reference/analysis/tokenfilters/shingle-tokenfilter.asciidoc, +|`filler_token` | The string to use as a replacement for each position , +at which there is no actual token in the stream. For instance this string is, +used if the position increment is greater than one when a `stop` filter is used, +together with the `shingle` filter. Defaults to `"_"`, +++ b/docs/reference/analysis/tokenfilters/shingle-tokenfilter.asciidoc, +|`filler_token` | The string to use as a replacement for each position , +at which there is no actual token in the stream. For instance this string is, +used if the position increment is greater than one when a `stop` filter is used, +together with the `shingle` filter. Defaults to `"_"`, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +        String fillerToken = settings.get("filler_token", ShingleFilter.DEFAULT_FILLER_TOKEN);, +        factory = new Factory("shingle", minShingleSize, maxShingleSize, outputUnigrams, outputUnigramsIfNoShingles, tokenSeparator, fillerToken);, +        private final String fillerToken;, +            this(name, ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE, ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE, true, false, ShingleFilter.DEFAULT_TOKEN_SEPARATOR, ShingleFilter.DEFAULT_FILLER_TOKEN);, +        Factory(String name, int minShingleSize, int maxShingleSize, boolean outputUnigrams, boolean outputUnigramsIfNoShingles, String tokenSeparator, String fillerToken) {, +            this.fillerToken = fillerToken;, +            filter.setFillerToken(fillerToken);, +++ b/docs/reference/analysis/tokenfilters/shingle-tokenfilter.asciidoc, +|`filler_token` | The string to use as a replacement for each position , +at which there is no actual token in the stream. For instance this string is, +used if the position increment is greater than one when a `stop` filter is used, +together with the `shingle` filter. Defaults to `"_"`, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +        String fillerToken = settings.get("filler_token", ShingleFilter.DEFAULT_FILLER_TOKEN);, +        factory = new Factory("shingle", minShingleSize, maxShingleSize, outputUnigrams, outputUnigramsIfNoShingles, tokenSeparator, fillerToken);, +        private final String fillerToken;, +            this(name, ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE, ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE, true, false, ShingleFilter.DEFAULT_TOKEN_SEPARATOR, ShingleFilter.DEFAULT_FILLER_TOKEN);, +        Factory(String name, int minShingleSize, int maxShingleSize, boolean outputUnigrams, boolean outputUnigramsIfNoShingles, String tokenSeparator, String fillerToken) {, +            this.fillerToken = fillerToken;, +            filter.setFillerToken(fillerToken);, +++ b/src/test/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactoryTests.java, +        String[] expected = new String[]{"simon FILLER", "simon FILLER sorcerer", "FILLER sorcerer"};]