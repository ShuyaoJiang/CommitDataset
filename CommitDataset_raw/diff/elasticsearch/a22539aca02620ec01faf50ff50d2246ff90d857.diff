[+++ b/elasticsearch/qa/messy-test-xpack-with-mustache/src/test/java/org/elasticsearch/messy/tests/ShieldCachePermissionIT.java, +                + "    'data':\n", +                + "      - read\n";, +++ b/elasticsearch/qa/messy-test-xpack-with-mustache/src/test/java/org/elasticsearch/messy/tests/ShieldCachePermissionIT.java, +                + "    'data':\n", +                + "      - read\n";, +++ b/elasticsearch/qa/shield-reindex-tests/roles.yml, +        - read, +        - read, +      privileges: [ read ], +        - read, +        - read, +        - read, +        - read, +++ b/elasticsearch/qa/messy-test-xpack-with-mustache/src/test/java/org/elasticsearch/messy/tests/ShieldCachePermissionIT.java, +                + "    'data':\n", +                + "      - read\n";, +++ b/elasticsearch/qa/shield-reindex-tests/roles.yml, +        - read, +        - read, +      privileges: [ read ], +        - read, +        - read, +        - read, +        - read, +++ b/elasticsearch/x-pack/shield/config/xpack/roles.yml, +      - transport_client, +      - monitor, +        - all, +    - manage_index_templates, +        - write, +        - read, +# Marvel user role. Assign to marvel users., +    - names:, +        - '.marvel-es-*', +        - '.monitoring-*', +      privileges: [ "read" ], +        - view_index_metadata, +        - read, +# Marvel remote agent role. Assign to the agent user on the remote marvel cluster, +# to which the marvel agent will export all its data, +  cluster: [ "manage_index_templates" ], +    - names:, +        - '.marvel-es-*', +        - '.monitoring-*', +      privileges: [ "all" ], +++ b/elasticsearch/qa/messy-test-xpack-with-mustache/src/test/java/org/elasticsearch/messy/tests/ShieldCachePermissionIT.java, +                + "    'data':\n", +                + "      - read\n";, +++ b/elasticsearch/qa/shield-reindex-tests/roles.yml, +        - read, +        - read, +      privileges: [ read ], +        - read, +        - read, +        - read, +        - read, +++ b/elasticsearch/x-pack/shield/config/xpack/roles.yml, +      - transport_client, +      - monitor, +        - all, +    - manage_index_templates, +        - write, +        - read, +# Marvel user role. Assign to marvel users., +    - names:, +        - '.marvel-es-*', +        - '.monitoring-*', +      privileges: [ "read" ], +        - view_index_metadata, +        - read, +# Marvel remote agent role. Assign to the agent user on the remote marvel cluster, +# to which the marvel agent will export all its data, +  cluster: [ "manage_index_templates" ], +    - names:, +        - '.marvel-es-*', +        - '.monitoring-*', +      privileges: [ "all" ], +++ b/elasticsearch/x-pack/shield/src/main/java/org/elasticsearch/shield/authz/privilege/ClusterPrivilege.java, +import org.elasticsearch.shield.action.realm.ClearRealmCacheAction;, +import org.elasticsearch.shield.action.role.ClearRolesCacheAction;, +import org.elasticsearch.shield.support.Automatons;, +import static org.elasticsearch.shield.support.Automatons.minusAndDeterminize;, +import static org.elasticsearch.shield.support.Automatons.patterns;, +, +    // shared automatons, +    private static final Automaton MANAGE_USER_AUTOMATON = patterns("cluster:admin/shield/user/*", ClearRolesCacheAction.NAME);, +    private static final Automaton MANAGE_ROLE_AUTOMATON = patterns("cluster:admin/shield/role/*", ClearRealmCacheAction.NAME);, +    private static final Automaton MANAGE_SECURITY_AUTOMATON = patterns("cluster:admin/shield/*");, +    private static final Automaton MONITOR_AUTOMATON = patterns("cluster:monitor/*");, +    private static final Automaton ALL_CLUSTER_AUTOMATON = patterns("cluster:*", "indices:admin/template/*");, +    private static final Automaton MANAGE_AUTOMATON = minusAndDeterminize(ALL_CLUSTER_AUTOMATON, MANAGE_SECURITY_AUTOMATON);, +    private static final Automaton TRANSPORT_CLIENT_AUTOMATON = patterns("cluster:monitor/nodes/liveness", "cluster:monitor/state");, +    private static final Automaton MANAGE_IDX_TEMPLATE_AUTOMATON = patterns("indices:admin/template/*");, +, +    public static final ClusterPrivilege NONE =                  new ClusterPrivilege(Name.NONE,                Automatons.EMPTY);, +    public static final ClusterPrivilege ALL =                   new ClusterPrivilege(Name.ALL,                 ALL_CLUSTER_AUTOMATON);, +    public static final ClusterPrivilege MONITOR =               new ClusterPrivilege("monitor",                MONITOR_AUTOMATON);, +    public static final ClusterPrivilege MANAGE =                new ClusterPrivilege("manage",                 MANAGE_AUTOMATON);, +    public static final ClusterPrivilege MANAGE_IDX_TEMPLATES =]