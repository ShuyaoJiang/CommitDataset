[+++ b/docs/java-api/docs/update-by-query.asciidoc, +updateByQuery.source("source_index").abortOnVersionConflict(false);, +available from the `BulkIndexByScrollResponse#getIndexingFailures` method. Any, +successful updates remain and are not rolled back. While the first failure, +causes the abort, the response contains all of the failures generated by the, +failed bulk request., +To prevent version conflicts from causing `updateByQuery` to abort, set, +`abortOnVersionConflict(false)`. The first example does this because it is, +trying to pick up an online mapping change and a version conflict means that, +the conflicting document was updated between the start of the `updateByQuery`, +Back to the API, `UpdateByQueryRequestBuilder` supports filtering the documents, +that are updated, limiting the total number updated, and updating documents, +with a script:, +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +updateByQuery.source("source_index"), +        .filter(termQuery("level", "awesome")), +        .size(1000), +        .script(new Script("ctx._source.awesome = 'absolutely'", ScriptType.INLINE, "painless", emptyMap()));, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +`UpdateByQueryRequestBuilder` also allows you direct access to the query used, +to select the documents which you can use to change the default scroll size or, +otherwise modify the request for matching documents., +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +updateByQuery.source("source_index"), +        .source().setSize(500);, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +You can also combine `size` with sorting to limit the documents updated:, +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +updateByQuery.source("source_index").size(100), +        .source().addSort("cat", SortOrder.DESC);, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +, +In addition to changing the `_source` of the document (see above) the script, +can change the update action similarly to the Update API:, +, +[source,java], +--------------------------------------------------, +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +, +updateByQuery.source("source_index"), +        .script(new Script(, +            "if (ctx._source.awesome == 'absolutely) {", +          + "  ctx.op='noop', +          + "} else if (ctx._source.awesome == 'lame') {", +          + "  ctx.op='delete'", +          + "} else {", +          + "ctx._source.awesome = 'absolutely'}", ScriptType.INLINE, "painless", emptyMap()));, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +--------------------------------------------------, +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +updateByQuery.source("foo", "bar").source().setTypes("a", "b");, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +updateByQuery.source().setRouting("cat");, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +UpdateByQueryRequestBuilder updateByQuery = UpdateByQueryAction.INSTANCE.newRequestBuilder(client);, +updateByQuery.setPipeline("hurray");, +, +BulkIndexByScrollResponse response = updateByQuery.get();, +ListTasksResponse tasksList = client.admin().cluster().prepareListTasks(), +        .setActions(UpdateByQueryAction.NAME).setDetailed(true).get();, +, +for (TaskInfo info: tasksList.getTasks()) {, +    TaskId taskId = info.getTaskId();, +    BulkByScrollTask.Status status = (BulkByScrollTask.Status) info.getStatus();, +    // do stuff, +}, +With the `TaskId` shown above you can look up the task directly:, +GetTaskResponse get = client.admin().cluster().prepareGetTask(taskId).get();, +// Cancel all update-by-query requests, +client.admin().cluster().prepareCancelTasks().setActions(UpdateByQueryAction.NAME).get().getTasks(), +// Cancel a specific update-by-query request, +client.admin().cluster().prepareCancelTasks().setTaskId(taskId).get().getTasks(), +The `taskId` can be found using the list tasks API above., +RethrottleAction.INSTANCE.newRequestBuilder(client).setTaskId(taskId).setRequestsPerSecond(2.0f).get();, +The `taskId` can be found using the tasks API above., +can be either `Float.POSITIVE_INFINITY` to disable throttling or any positive, +float to throttle to that level. Rethrottling that speeds up the query takes]