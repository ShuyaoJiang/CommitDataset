[+++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +import org.elasticsearch.common.component.LifecycleListener;, +        discoveryService.addLifecycleListener(new LifecycleListener() {, +            @Override, +            public void afterStart() {, +                submitStateUpdateTask("update local node", Priority.IMMEDIATE, new ClusterStateUpdateTask() {, +                    @Override, +                    public ClusterState execute(ClusterState currentState) throws Exception {, +                        return ClusterState.builder(currentState), +                                .nodes(DiscoveryNodes.builder(currentState.nodes()).put(localNode()).localNodeId(localNode().id())), +                                .build();, +                    }, +, +                    @Override, +                    public void onFailure(String source, Throwable t) {, +                        logger.warn("failed ot update local node", t);, +                    }, +                });, +            }, +        });, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +import org.elasticsearch.common.component.LifecycleListener;, +        discoveryService.addLifecycleListener(new LifecycleListener() {, +            @Override, +            public void afterStart() {, +                submitStateUpdateTask("update local node", Priority.IMMEDIATE, new ClusterStateUpdateTask() {, +                    @Override, +                    public ClusterState execute(ClusterState currentState) throws Exception {, +                        return ClusterState.builder(currentState), +                                .nodes(DiscoveryNodes.builder(currentState.nodes()).put(localNode()).localNodeId(localNode().id())), +                                .build();, +                    }, +, +                    @Override, +                    public void onFailure(String source, Throwable t) {, +                        logger.warn("failed ot update local node", t);, +                    }, +                });, +            }, +        });, +++ b/src/main/java/org/elasticsearch/common/component/LifecycleListener.java, +public abstract class LifecycleListener {, +    public void beforeStart() {, +    }, +    public void afterStart() {, +    }, +    public void beforeStop() {, +    }, +, +    public void afterStop() {, +, +    }, +, +    public void beforeClose() {, +, +    }, +, +    public void afterClose() {, +, +    }, +++ b/src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java, +import org.elasticsearch.common.component.LifecycleListener;, +        discoveryService.addLifecycleListener(new LifecycleListener() {, +            @Override, +            public void afterStart() {, +                submitStateUpdateTask("update local node", Priority.IMMEDIATE, new ClusterStateUpdateTask() {, +                    @Override, +                    public ClusterState execute(ClusterState currentState) throws Exception {, +                        return ClusterState.builder(currentState), +                                .nodes(DiscoveryNodes.builder(currentState.nodes()).put(localNode()).localNodeId(localNode().id())), +                                .build();, +                    }, +, +                    @Override, +                    public void onFailure(String source, Throwable t) {, +                        logger.warn("failed ot update local node", t);, +                    }, +                });, +            }, +        });, +++ b/src/main/java/org/elasticsearch/common/component/LifecycleListener.java, +public abstract class LifecycleListener {, +    public void beforeStart() {, +    }, +    public void afterStart() {, +    }, +    public void beforeStop() {, +    }, +, +    public void afterStop() {, +, +    }, +, +    public void beforeClose() {, +, +    }, +, +    public void afterClose() {, +, +    }]