[+++ b/plugins/analysis-stempel/src/main/java/org/elasticsearch/index/analysis/pl/PolishStemTokenFilterFactory.java, +        return new StempelFilter(tokenStream, new StempelStemmer(PolishAnalyzer.getDefaultTable()));, +++ b/plugins/analysis-stempel/src/main/java/org/elasticsearch/index/analysis/pl/PolishStemTokenFilterFactory.java, +        return new StempelFilter(tokenStream, new StempelStemmer(PolishAnalyzer.getDefaultTable()));, +++ b/plugins/analysis-stempel/src/test/java/org/elasticsearch/index/analysis/AnalysisPolishFactoryTests.java, +import java.io.IOException;, +import org.apache.lucene.analysis.Analyzer;, +import org.apache.lucene.analysis.BaseTokenStreamTestCase;, +import org.apache.lucene.analysis.MockTokenizer;, +import org.apache.lucene.analysis.TokenFilter;, +import org.apache.lucene.analysis.Tokenizer;, +import org.elasticsearch.AnalysisFactoryTestCase;, +import org.elasticsearch.Version;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.common.UUIDs;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.index.IndexSettings;, +import org.elasticsearch.index.analysis.pl.PolishStemTokenFilterFactory;, +, +    public void testThreadSafety() throws IOException {, +        // TODO: is this the right boilerplate?  I forked this out of TransportAnalyzeAction.java:, +        Settings settings = Settings.builder(), +            // for _na_, +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +            .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0), +            .put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1), +            .put(IndexMetaData.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()), +            .put(Environment.PATH_HOME_SETTING.getKey(), createTempDir().toString()), +            .build();, +        Environment environment = new Environment(settings);, +        IndexMetaData metaData = IndexMetaData.builder(IndexMetaData.INDEX_UUID_NA_VALUE).settings(settings).build();, +        IndexSettings indexSettings = new IndexSettings(metaData, Settings.EMPTY);, +        testThreadSafety(new PolishStemTokenFilterFactory(indexSettings, environment, "stempelpolishstem", settings));, +    }, +, +    // TODO: move to AnalysisFactoryTestCase so we can more easily test thread safety for all factories, +    private void testThreadSafety(TokenFilterFactory factory) throws IOException {, +        final Analyzer analyzer = new Analyzer() {, +            @Override, +            protected TokenStreamComponents createComponents(String fieldName) {, +                Tokenizer tokenizer = new MockTokenizer();, +                return new TokenStreamComponents(tokenizer, factory.create(tokenizer));, +            }, +        };, +        BaseTokenStreamTestCase.checkRandomData(random(), analyzer, 100);, +    }]