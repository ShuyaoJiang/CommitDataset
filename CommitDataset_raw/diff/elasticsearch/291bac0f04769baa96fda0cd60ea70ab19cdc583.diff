[+++ b/.gitignore, +.settings, +++ b/.gitignore, +.settings, +++ b/TESTING.asciidoc, +./run.sh, +++ b/.gitignore, +.settings, +++ b/TESTING.asciidoc, +./run.sh, +++ b/core/pom.xml, +++ b/.gitignore, +.settings, +++ b/TESTING.asciidoc, +./run.sh, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_2 = new Version(V_1_6_2_ID, false, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final int V_1_6_3_ID = 1060399;, +    public static final Version V_1_6_3 = new Version(V_1_6_3_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final Version V_1_7_1 = new Version(V_1_7_1_ID, false, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final int V_1_7_2_ID = 1070299;, +    public static final Version V_1_7_2 = new Version(V_1_7_2_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +, +            case V_1_7_2_ID:, +                return V_1_7_2;, +            case V_1_6_3_ID:, +                return V_1_6_3;, +++ b/.gitignore, +.settings, +++ b/TESTING.asciidoc, +./run.sh, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_2 = new Version(V_1_6_2_ID, false, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final int V_1_6_3_ID = 1060399;, +    public static final Version V_1_6_3 = new Version(V_1_6_3_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final Version V_1_7_1 = new Version(V_1_7_1_ID, false, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final int V_1_7_2_ID = 1070299;, +    public static final Version V_1_7_2 = new Version(V_1_7_2_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +, +            case V_1_7_2_ID:, +                return V_1_7_2;, +            case V_1_6_3_ID:, +                return V_1_6_3;, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +        bind(AutoCreateIndex.class).asEagerSingleton();, +++ b/.gitignore, +.settings, +++ b/TESTING.asciidoc, +./run.sh, +++ b/core/pom.xml, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_1_6_2 = new Version(V_1_6_2_ID, false, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final int V_1_6_3_ID = 1060399;, +    public static final Version V_1_6_3 = new Version(V_1_6_3_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final Version V_1_7_1 = new Version(V_1_7_1_ID, false, org.apache.lucene.util.Version.LUCENE_4_10_4);, +    public static final int V_1_7_2_ID = 1070299;, +    public static final Version V_1_7_2 = new Version(V_1_7_2_ID, true, org.apache.lucene.util.Version.LUCENE_4_10_4);, +, +            case V_1_7_2_ID:, +                return V_1_7_2;, +            case V_1_6_3_ID:, +                return V_1_6_3;, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.support.AutoCreateIndex;, +        bind(AutoCreateIndex.class).asEagerSingleton();, +++ b/core/src/main/java/org/elasticsearch/action/RealtimeRequest.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.action;, +, +/**, + * Indicates that a request can execute in realtime (reads from the translog)., + * All {@link ActionRequest} that are realtime should implement this interface., + */, +public interface RealtimeRequest {, +, +    /**, +     * @param realtime Controls whether this request should be realtime by reading from the translog. If <code>null</code>, +     *                 is specified then whether the operation will be realtime depends on the api of the concrete request, +     *                 subclass.]