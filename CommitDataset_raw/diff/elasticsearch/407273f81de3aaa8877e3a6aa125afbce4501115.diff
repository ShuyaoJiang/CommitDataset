[+++ b/modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java, +                } else if (token == XContentParser.Token.VALUE_NUMBER) {, +                    if ("parent".equals(currentFieldName)) {, +                        parent = context.parser().numberValue().toString();, +                    } else {, +                        throw new IllegalArgumentException("unknown field name [" + currentFieldName + "] in join field [" + name() + "]");, +                    }, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java, +                } else if (token == XContentParser.Token.VALUE_NUMBER) {, +                    if ("parent".equals(currentFieldName)) {, +                        parent = context.parser().numberValue().toString();, +                    } else {, +                        throw new IllegalArgumentException("unknown field name [" + currentFieldName + "] in join field [" + name() + "]");, +                    }, +++ b/modules/parent-join/src/test/java/org/elasticsearch/join/mapper/ParentJoinFieldMapperTests.java, +    public void testParentIdSpecifiedAsNumber() throws Exception {, +        String mapping = XContentFactory.jsonBuilder().startObject(), +            .startObject("properties"), +                .startObject("join_field"), +                    .field("type", "join"), +                        .startObject("relations"), +                            .field("parent", "child"), +                        .endObject(), +                    .endObject(), +                .endObject(), +            .endObject().string();, +        IndexService service = createIndex("test");, +        DocumentMapper docMapper = service.mapperService().merge("type", new CompressedXContent(mapping),, +            MapperService.MergeReason.MAPPING_UPDATE, false);, +        ParsedDocument doc = docMapper.parse(SourceToParse.source("test", "type", "2",, +            XContentFactory.jsonBuilder().startObject(), +                .startObject("join_field"), +                .field("name", "child"), +                .field("parent", 1), +                .endObject(), +                .endObject().bytes(), XContentType.JSON).routing("1"));, +        assertEquals("1", doc.rootDoc().getBinaryValue("join_field#parent").utf8ToString());, +        assertEquals("child", doc.rootDoc().getBinaryValue("join_field").utf8ToString());, +        doc = docMapper.parse(SourceToParse.source("test", "type", "2",, +            XContentFactory.jsonBuilder().startObject(), +                .startObject("join_field"), +                .field("name", "child"), +                .field("parent", 1.0), +                .endObject(), +                .endObject().bytes(), XContentType.JSON).routing("1"));, +        assertEquals("1.0", doc.rootDoc().getBinaryValue("join_field#parent").utf8ToString());, +        assertEquals("child", doc.rootDoc().getBinaryValue("join_field").utf8ToString());, +    }, +]