[+++ b/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +    public static final Pattern VALID_AGG_NAME = Pattern.compile("[^\\[\\]>]+");, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +    public static final Pattern VALID_AGG_NAME = Pattern.compile("[^\\[\\]>]+");, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/OrderPath.java, +            if (i == elements.length - 1) {, +                int index = element.lastIndexOf('[');, +                    continue;, +                }, +                index = element.lastIndexOf('.');, +                if (index < 0) {, +                    tokens[i] = new Token(element, element, null);, +                    continue;, +                }, +                if (index == 0 || index > element.length() - 2) {, +                    throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                }, +                tuple = split(element, index, tuple);, +                tokens[i] = new Token(element, tuple[0], tuple[1]);, +, +            } else {, +                int index = element.lastIndexOf('[');, +                if (index >= 0) {, +                    if (index == 0 || index > element.length() - 3) {, +                        throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                    }, +                    if (element.charAt(element.length() - 1) != ']') {, +                        throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                    }, +                    tokens[i] = new Token(element, element.substring(0, index), element.substring(index + 1, element.length() - 1));, +                    continue;, +                }, +                tokens[i] = new Token(element, element, null);, +            }, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +    public static final Pattern VALID_AGG_NAME = Pattern.compile("[^\\[\\]>]+");, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/OrderPath.java, +            if (i == elements.length - 1) {, +                int index = element.lastIndexOf('[');, +                    continue;, +                }, +                index = element.lastIndexOf('.');, +                if (index < 0) {, +                    tokens[i] = new Token(element, element, null);, +                    continue;, +                }, +                if (index == 0 || index > element.length() - 2) {, +                    throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                }, +                tuple = split(element, index, tuple);, +                tokens[i] = new Token(element, tuple[0], tuple[1]);, +, +            } else {, +                int index = element.lastIndexOf('[');, +                if (index >= 0) {, +                    if (index == 0 || index > element.length() - 3) {, +                        throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                    }, +                    if (element.charAt(element.length() - 1) != ']') {, +                        throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                    }, +                    tokens[i] = new Token(element, element.substring(0, index), element.substring(index + 1, element.length() - 1));, +                    continue;, +                }, +                tokens[i] = new Token(element, element, null);, +            }, +++ b/src/test/java/org/elasticsearch/search/aggregations/ParsingTests.java, +        Matcher matcher = Pattern.compile("[^\\[\\]>]+").matcher("");, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +    public static final Pattern VALID_AGG_NAME = Pattern.compile("[^\\[\\]>]+");, +++ b/src/main/java/org/elasticsearch/search/aggregations/support/OrderPath.java, +            if (i == elements.length - 1) {, +                int index = element.lastIndexOf('[');, +                    continue;, +                }, +                index = element.lastIndexOf('.');, +                if (index < 0) {, +                    tokens[i] = new Token(element, element, null);, +                    continue;, +                }, +                if (index == 0 || index > element.length() - 2) {, +                    throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                }, +                tuple = split(element, index, tuple);, +                tokens[i] = new Token(element, tuple[0], tuple[1]);, +, +            } else {, +                int index = element.lastIndexOf('[');, +                if (index >= 0) {, +                    if (index == 0 || index > element.length() - 3) {, +                        throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                    }, +                    if (element.charAt(element.length() - 1) != ']') {, +                        throw new AggregationExecutionException("Invalid path element [" + element + "] in path [" + path + "]");, +                    }, +                    tokens[i] = new Token(element, element.substring(0, index), element.substring(index + 1, element.length() - 1));, +                    continue;, +                }, +                tokens[i] = new Token(element, element, null);, +            }]