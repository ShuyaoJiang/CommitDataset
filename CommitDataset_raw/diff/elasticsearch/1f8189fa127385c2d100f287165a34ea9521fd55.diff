[+++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnection.java, +    ActiveDirectoryConnection(ESLogger logger, DirContext ctx, String boundName, GroupsResolver resolver, TimeValue timeout) {, +        super(logger, ctx, boundName, resolver, timeout);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnection.java, +    ActiveDirectoryConnection(ESLogger logger, DirContext ctx, String boundName, GroupsResolver resolver, TimeValue timeout) {, +        super(logger, ctx, boundName, resolver, timeout);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnectionFactory.java, +import org.elasticsearch.shield.authc.support.ldap.AbstractLdapConnection;, +, +    public static final String AD_GROUP_SEARCH_BASEDN_SETTING = "group_search.base_dn";, +    public static final String AD_GROUP_SEARCH_SCOPE_SETTING = "group_search.scope";, +    private final AbstractLdapConnection.GroupsResolver groupResolver;, +        String domainDN = buildDnFromDomain(domainName);, +        userSearchDN = settings.get(AD_USER_SEARCH_BASEDN_SETTING, domainDN);, +        userSearchFilter = settings.get(AD_USER_SEARCH_FILTER_SETTING, "(&(objectClass=user)(|(sAMAccountName={0})(userPrincipalName={0}@" + domainName + ")))");, +        groupResolver = new ActiveDirectoryGroupsResolver(settings.getAsSettings("group_search"), domainDN);, +                        return new ActiveDirectoryConnection(connectionLogger, ctx, name, groupResolver, timeout);, +        } catch (Throwable e) {, +            throw new ActiveDirectoryException("unable to authenticate user [" + userName + "] to active directory domain [" + domainName + "]", e);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnection.java, +    ActiveDirectoryConnection(ESLogger logger, DirContext ctx, String boundName, GroupsResolver resolver, TimeValue timeout) {, +        super(logger, ctx, boundName, resolver, timeout);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnectionFactory.java, +import org.elasticsearch.shield.authc.support.ldap.AbstractLdapConnection;, +, +    public static final String AD_GROUP_SEARCH_BASEDN_SETTING = "group_search.base_dn";, +    public static final String AD_GROUP_SEARCH_SCOPE_SETTING = "group_search.scope";, +    private final AbstractLdapConnection.GroupsResolver groupResolver;, +        String domainDN = buildDnFromDomain(domainName);, +        userSearchDN = settings.get(AD_USER_SEARCH_BASEDN_SETTING, domainDN);, +        userSearchFilter = settings.get(AD_USER_SEARCH_FILTER_SETTING, "(&(objectClass=user)(|(sAMAccountName={0})(userPrincipalName={0}@" + domainName + ")))");, +        groupResolver = new ActiveDirectoryGroupsResolver(settings.getAsSettings("group_search"), domainDN);, +                        return new ActiveDirectoryConnection(connectionLogger, ctx, name, groupResolver, timeout);, +        } catch (Throwable e) {, +            throw new ActiveDirectoryException("unable to authenticate user [" + userName + "] to active directory domain [" + domainName + "]", e);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryGroupsResolver.java, +import org.elasticsearch.common.settings.Settings;, +    private final SearchScope scope;, +    public ActiveDirectoryGroupsResolver(Settings settings, String baseDnDefault) {, +        this.baseDn = settings.get("base_dn", baseDnDefault);, +        this.scope = SearchScope.resolve(settings.get("scope"), SearchScope.SUB_TREE);, +    public List<String> resolve(DirContext ctx, String userDn, TimeValue timeout, ESLogger logger) {, +        groupsSearchCtls.setSearchScope(scope.scope());, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnection.java, +    ActiveDirectoryConnection(ESLogger logger, DirContext ctx, String boundName, GroupsResolver resolver, TimeValue timeout) {, +        super(logger, ctx, boundName, resolver, timeout);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnectionFactory.java, +import org.elasticsearch.shield.authc.support.ldap.AbstractLdapConnection;, +, +    public static final String AD_GROUP_SEARCH_BASEDN_SETTING = "group_search.base_dn";, +    public static final String AD_GROUP_SEARCH_SCOPE_SETTING = "group_search.scope";, +    private final AbstractLdapConnection.GroupsResolver groupResolver;, +        String domainDN = buildDnFromDomain(domainName);, +        userSearchDN = settings.get(AD_USER_SEARCH_BASEDN_SETTING, domainDN);, +        userSearchFilter = settings.get(AD_USER_SEARCH_FILTER_SETTING, "(&(objectClass=user)(|(sAMAccountName={0})(userPrincipalName={0}@" + domainName + ")))");, +        groupResolver = new ActiveDirectoryGroupsResolver(settings.getAsSettings("group_search"), domainDN);, +                        return new ActiveDirectoryConnection(connectionLogger, ctx, name, groupResolver, timeout);, +        } catch (Throwable e) {, +            throw new ActiveDirectoryException("unable to authenticate user [" + userName + "] to active directory domain [" + domainName + "]", e);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryGroupsResolver.java, +import org.elasticsearch.common.settings.Settings;, +    private final SearchScope scope;, +    public ActiveDirectoryGroupsResolver(Settings settings, String baseDnDefault) {, +        this.baseDn = settings.get("base_dn", baseDnDefault);, +        this.scope = SearchScope.resolve(settings.get("scope"), SearchScope.SUB_TREE);, +    public List<String> resolve(DirContext ctx, String userDn, TimeValue timeout, ESLogger logger) {, +        groupsSearchCtls.setSearchScope(scope.scope());, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/SearchGroupsResolver.java, +import org.elasticsearch.common.logging.ESLogger;, +    public List<String> resolve(DirContext ctx, String userDn, TimeValue timeout, ESLogger logger) {, +        String userId = userAttribute != null ? readUserAttribute(ctx, userDn) : userDn;, +    String readUserAttribute(DirContext ctx, String userDn) {, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnection.java, +    ActiveDirectoryConnection(ESLogger logger, DirContext ctx, String boundName, GroupsResolver resolver, TimeValue timeout) {, +        super(logger, ctx, boundName, resolver, timeout);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryConnectionFactory.java, +import org.elasticsearch.shield.authc.support.ldap.AbstractLdapConnection;, +, +    public static final String AD_GROUP_SEARCH_BASEDN_SETTING = "group_search.base_dn";, +    public static final String AD_GROUP_SEARCH_SCOPE_SETTING = "group_search.scope";, +    private final AbstractLdapConnection.GroupsResolver groupResolver;, +        String domainDN = buildDnFromDomain(domainName);, +        userSearchDN = settings.get(AD_USER_SEARCH_BASEDN_SETTING, domainDN);, +        userSearchFilter = settings.get(AD_USER_SEARCH_FILTER_SETTING, "(&(objectClass=user)(|(sAMAccountName={0})(userPrincipalName={0}@" + domainName + ")))");, +        groupResolver = new ActiveDirectoryGroupsResolver(settings.getAsSettings("group_search"), domainDN);, +                        return new ActiveDirectoryConnection(connectionLogger, ctx, name, groupResolver, timeout);, +        } catch (Throwable e) {, +            throw new ActiveDirectoryException("unable to authenticate user [" + userName + "] to active directory domain [" + domainName + "]", e);, +++ b/src/main/java/org/elasticsearch/shield/authc/active_directory/ActiveDirectoryGroupsResolver.java, +import org.elasticsearch.common.settings.Settings;, +    private final SearchScope scope;, +    public ActiveDirectoryGroupsResolver(Settings settings, String baseDnDefault) {, +        this.baseDn = settings.get("base_dn", baseDnDefault);, +        this.scope = SearchScope.resolve(settings.get("scope"), SearchScope.SUB_TREE);, +    public List<String> resolve(DirContext ctx, String userDn, TimeValue timeout, ESLogger logger) {, +        groupsSearchCtls.setSearchScope(scope.scope());, +++ b/src/main/java/org/elasticsearch/shield/authc/ldap/SearchGroupsResolver.java, +import org.elasticsearch.common.logging.ESLogger;, +    public List<String> resolve(DirContext ctx, String userDn, TimeValue timeout, ESLogger logger) {, +        String userId = userAttribute != null ? readUserAttribute(ctx, userDn) : userDn;]