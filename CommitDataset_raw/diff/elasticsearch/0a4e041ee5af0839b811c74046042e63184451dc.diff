[+++ b/src/main/java/org/elasticsearch/index/shard/IndexShardClosedException.java, +, +    public IndexShardClosedException(ShardId shardId, String message) {, +        super(shardId, IndexShardState.CLOSED, message);, +    }, +++ b/src/main/java/org/elasticsearch/index/shard/IndexShardClosedException.java, +, +    public IndexShardClosedException(ShardId shardId, String message) {, +        super(shardId, IndexShardState.CLOSED, message);, +    }, +++ b/src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java, +    private final CancelableThreads cancelableThreads = new CancelableThreads() {, +        @Override, +        protected void fail(String reason) {, +            if (shard.state() == IndexShardState.CLOSED) { // check if the shard got closed on us, +                throw new IndexShardClosedException(shard.shardId(), "shard is closed and recovery was canceled reason [" + reason + "]");, +            } else {, +                throw new ElasticsearchException("recovery was canceled reason [" + reason + "]");, +            }, +        }, +    };, +    private static abstract class CancelableThreads {, +                fail(reason);, +, +        protected abstract  void fail(String reason);, +]