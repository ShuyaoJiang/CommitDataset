[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +        for (Map.Entry<String, AutoFollower> entry : autoFollowers.entrySet()) {, +            String remoteCluster = entry.getKey();, +            AutoFollower autoFollower = entry.getValue();, +            } else if (autoFollower.remoteClusterConnectionMissing) {, +                LOGGER.info("Retrying auto follower [{}] after remote cluster connection was missing", remoteCluster);, +                autoFollower.remoteClusterConnectionMissing = false;, +                autoFollower.start();, +        private volatile boolean remoteClusterConnectionMissing = false;, +                    String expectedErrorMessage = "unknown cluster alias [" + remoteCluster + "]";, +                    if (remoteError instanceof IllegalArgumentException &&, +                        expectedErrorMessage.equals(remoteError.getMessage())) {, +                        LOGGER.info("AutoFollower for cluster [{}] has stopped, because remote connection is gone", remoteCluster);, +                        remoteClusterConnectionMissing = true;, +                        return;, +                    }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +        for (Map.Entry<String, AutoFollower> entry : autoFollowers.entrySet()) {, +            String remoteCluster = entry.getKey();, +            AutoFollower autoFollower = entry.getValue();, +            } else if (autoFollower.remoteClusterConnectionMissing) {, +                LOGGER.info("Retrying auto follower [{}] after remote cluster connection was missing", remoteCluster);, +                autoFollower.remoteClusterConnectionMissing = false;, +                autoFollower.start();, +        private volatile boolean remoteClusterConnectionMissing = false;, +                    String expectedErrorMessage = "unknown cluster alias [" + remoteCluster + "]";, +                    if (remoteError instanceof IllegalArgumentException &&, +                        expectedErrorMessage.equals(remoteError.getMessage())) {, +                        LOGGER.info("AutoFollower for cluster [{}] has stopped, because remote connection is gone", remoteCluster);, +                        remoteClusterConnectionMissing = true;, +                        return;, +                    }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +        if (shouldRetry(params.getRemoteCluster(), e) && isStopped() == false) {, +    static boolean shouldRetry(String remoteCluster, Exception e) {, +        String noSuchRemoteClusterMessage = "no such remote cluster: " + remoteCluster;, +            (actual.getMessage() != null && actual.getMessage().contains("TransportService is closed")) ||, +            (actual instanceof IllegalArgumentException && noSuchRemoteClusterMessage.equals(actual.getMessage()));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +        for (Map.Entry<String, AutoFollower> entry : autoFollowers.entrySet()) {, +            String remoteCluster = entry.getKey();, +            AutoFollower autoFollower = entry.getValue();, +            } else if (autoFollower.remoteClusterConnectionMissing) {, +                LOGGER.info("Retrying auto follower [{}] after remote cluster connection was missing", remoteCluster);, +                autoFollower.remoteClusterConnectionMissing = false;, +                autoFollower.start();, +        private volatile boolean remoteClusterConnectionMissing = false;, +                    String expectedErrorMessage = "unknown cluster alias [" + remoteCluster + "]";, +                    if (remoteError instanceof IllegalArgumentException &&, +                        expectedErrorMessage.equals(remoteError.getMessage())) {, +                        LOGGER.info("AutoFollower for cluster [{}] has stopped, because remote connection is gone", remoteCluster);, +                        remoteClusterConnectionMissing = true;, +                        return;, +                    }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +        if (shouldRetry(params.getRemoteCluster(), e) && isStopped() == false) {, +    static boolean shouldRetry(String remoteCluster, Exception e) {, +        String noSuchRemoteClusterMessage = "no such remote cluster: " + remoteCluster;, +            (actual.getMessage() != null && actual.getMessage().contains("TransportService is closed")) ||, +            (actual instanceof IllegalArgumentException && noSuchRemoteClusterMessage.equals(actual.getMessage()));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowTasksExecutor.java, +                try {, +                } catch (Exception e) {, +                    errorHandler.accept(e);, +                }, +            if (ShardFollowNodeTask.shouldRetry(params.getRemoteCluster(), e)) {, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +        for (Map.Entry<String, AutoFollower> entry : autoFollowers.entrySet()) {, +            String remoteCluster = entry.getKey();, +            AutoFollower autoFollower = entry.getValue();, +            } else if (autoFollower.remoteClusterConnectionMissing) {, +                LOGGER.info("Retrying auto follower [{}] after remote cluster connection was missing", remoteCluster);, +                autoFollower.remoteClusterConnectionMissing = false;, +                autoFollower.start();, +        private volatile boolean remoteClusterConnectionMissing = false;, +                    String expectedErrorMessage = "unknown cluster alias [" + remoteCluster + "]";, +                    if (remoteError instanceof IllegalArgumentException &&, +                        expectedErrorMessage.equals(remoteError.getMessage())) {, +                        LOGGER.info("AutoFollower for cluster [{}] has stopped, because remote connection is gone", remoteCluster);, +                        remoteClusterConnectionMissing = true;, +                        return;, +                    }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +        if (shouldRetry(params.getRemoteCluster(), e) && isStopped() == false) {, +    static boolean shouldRetry(String remoteCluster, Exception e) {, +        String noSuchRemoteClusterMessage = "no such remote cluster: " + remoteCluster;, +            (actual.getMessage() != null && actual.getMessage().contains("TransportService is closed")) ||, +            (actual instanceof IllegalArgumentException && noSuchRemoteClusterMessage.equals(actual.getMessage()));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowTasksExecutor.java, +                try {, +                } catch (Exception e) {, +                    errorHandler.accept(e);, +                }, +            if (ShardFollowNodeTask.shouldRetry(params.getRemoteCluster(), e)) {, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/LocalIndexFollowingIT.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;]