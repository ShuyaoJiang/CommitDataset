[+++ b/docs/reference/cluster/nodes-stats.asciidoc, +`os`, `process`, `jvm`, `network`, `transport`, `http`, `fs`, `breaker`, and, +`breaker`::, +	Statistics about the field data circuit breaker, +, +++ b/docs/reference/cluster/nodes-stats.asciidoc, +`os`, `process`, `jvm`, `network`, `transport`, `http`, `fs`, `breaker`, and, +`breaker`::, +	Statistics about the field data circuit breaker, +, +++ b/docs/reference/index-modules/fielddata.asciidoc, +[[field-data-circuit-breaker]], +=== Field data circuit breaker, +The field data circuit breaker allows Elasticsearch to estimate the amount of, +memory a field will required to be loaded into memory. It can then prevent the, +field data loading by raising and exception. By default it is configured with, +no limit (-1 bytes), but is automatically set to `indices.fielddata.cache.size`, +if set. It can be configured with the following parameters:, +, +[cols="<,<",options="header",], +|=======================================================================, +|Setting |Description, +|`indices.fielddata.breaker.limit` |Maximum size of estimated field data, +to allow loading. Defaults to `indices.fielddata.cache.size` if set, unbounded, +if not., +|`indices.fielddata.breaker.overhead` |A constant that all field data, +estimations are multiplied with to determine a final estimation. Defaults to, +1.03, +|=======================================================================, +, +Both the `indices.fielddata.breaker.limit` and, +`indices.fielddata.breaker.overhead` can be changed dynamically using the, +cluster update settings API., +, +[float], +You can monitor memory usage for field data as well as the field data circuit, +breaker using, +++ b/docs/reference/cluster/nodes-stats.asciidoc, +`os`, `process`, `jvm`, `network`, `transport`, `http`, `fs`, `breaker`, and, +`breaker`::, +	Statistics about the field data circuit breaker, +, +++ b/docs/reference/index-modules/fielddata.asciidoc, +[[field-data-circuit-breaker]], +=== Field data circuit breaker, +The field data circuit breaker allows Elasticsearch to estimate the amount of, +memory a field will required to be loaded into memory. It can then prevent the, +field data loading by raising and exception. By default it is configured with, +no limit (-1 bytes), but is automatically set to `indices.fielddata.cache.size`, +if set. It can be configured with the following parameters:, +, +[cols="<,<",options="header",], +|=======================================================================, +|Setting |Description, +|`indices.fielddata.breaker.limit` |Maximum size of estimated field data, +to allow loading. Defaults to `indices.fielddata.cache.size` if set, unbounded, +if not., +|`indices.fielddata.breaker.overhead` |A constant that all field data, +estimations are multiplied with to determine a final estimation. Defaults to, +1.03, +|=======================================================================, +, +Both the `indices.fielddata.breaker.limit` and, +`indices.fielddata.breaker.overhead` can be changed dynamically using the, +cluster update settings API., +, +[float], +You can monitor memory usage for field data as well as the field data circuit, +breaker using, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +import org.elasticsearch.indices.fielddata.breaker.FieldDataBreakerStats;, +    @Nullable, +    private FieldDataBreakerStats breaker;, +, +                     @Nullable OsStats os, @Nullable ProcessStats process, @Nullable JvmStats jvm, @Nullable ThreadPoolStats threadPool,, +                     @Nullable NetworkStats network, @Nullable FsStats fs, @Nullable TransportStats transport, @Nullable HttpStats http,, +                     @Nullable FieldDataBreakerStats breaker) {, +        this.breaker = breaker;, +    @Nullable, +    public FieldDataBreakerStats getBreaker() {, +        return this.breaker;, +    }, +, +        breaker = FieldDataBreakerStats.readOptionalCircuitBreakerStats(in);, +        out.writeOptionalStreamable(breaker);, +        if (getBreaker() != null) {, +            getBreaker().toXContent(builder, params);, +        }, +++ b/docs/reference/cluster/nodes-stats.asciidoc, +`os`, `process`, `jvm`, `network`, `transport`, `http`, `fs`, `breaker`, and, +`breaker`::, +	Statistics about the field data circuit breaker, +, +++ b/docs/reference/index-modules/fielddata.asciidoc, +[[field-data-circuit-breaker]], +=== Field data circuit breaker, +The field data circuit breaker allows Elasticsearch to estimate the amount of, +memory a field will required to be loaded into memory. It can then prevent the, +field data loading by raising and exception. By default it is configured with, +no limit (-1 bytes), but is automatically set to `indices.fielddata.cache.size`]