[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/AggProvider.java, +            // Upstream, we have read the bool already and know for sure that we have parsed aggs in the stream, +            return AggProvider.fromParsedAggs(new AggregatorFactories.Builder(in));, +            // Upstream we already verified that this calling object is not null, no need to write a second boolean to the stream, +            parsedAggs.writeTo(out);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/AggProvider.java, +            // Upstream, we have read the bool already and know for sure that we have parsed aggs in the stream, +            return AggProvider.fromParsedAggs(new AggregatorFactories.Builder(in));, +            // Upstream we already verified that this calling object is not null, no need to write a second boolean to the stream, +            parsedAggs.writeTo(out);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        // This reads a boolean from the stream, if true, it sends the stream to the `fromStream` method, +        // This writes a boolean to the stream, if true, it sends the stream to the `writeTo` method, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/AggProvider.java, +            // Upstream, we have read the bool already and know for sure that we have parsed aggs in the stream, +            return AggProvider.fromParsedAggs(new AggregatorFactories.Builder(in));, +            // Upstream we already verified that this calling object is not null, no need to write a second boolean to the stream, +            parsedAggs.writeTo(out);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        // This reads a boolean from the stream, if true, it sends the stream to the `fromStream` method, +        // This writes a boolean to the stream, if true, it sends the stream to the `writeTo` method, +++ b/x-pack/qa/full-cluster-restart/src/test/java/org/elasticsearch/xpack/restart/MlMigrationFullClusterRestartIT.java, +import org.elasticsearch.search.aggregations.AggregationBuilders;, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.MaxAggregationBuilder;, +        addAggregations(dfBuilder);, +, +    private void addAggregations(DatafeedConfig.Builder dfBuilder) {, +        TermsAggregationBuilder airline = AggregationBuilders.terms("airline");, +        MaxAggregationBuilder maxTime = AggregationBuilders.max("time").field("time").subAggregation(airline);, +        dfBuilder.setParsedAggregations(AggregatorFactories.builder().addAggregator(, +                AggregationBuilders.histogram("time").interval(300000).subAggregation(maxTime).field("time")));, +    }, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/AggProvider.java, +            // Upstream, we have read the bool already and know for sure that we have parsed aggs in the stream, +            return AggProvider.fromParsedAggs(new AggregatorFactories.Builder(in));, +            // Upstream we already verified that this calling object is not null, no need to write a second boolean to the stream, +            parsedAggs.writeTo(out);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        // This reads a boolean from the stream, if true, it sends the stream to the `fromStream` method, +        // This writes a boolean to the stream, if true, it sends the stream to the `writeTo` method, +++ b/x-pack/qa/full-cluster-restart/src/test/java/org/elasticsearch/xpack/restart/MlMigrationFullClusterRestartIT.java, +import org.elasticsearch.search.aggregations.AggregationBuilders;, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.MaxAggregationBuilder;, +        addAggregations(dfBuilder);, +, +    private void addAggregations(DatafeedConfig.Builder dfBuilder) {, +        TermsAggregationBuilder airline = AggregationBuilders.terms("airline");, +        MaxAggregationBuilder maxTime = AggregationBuilders.max("time").field("time").subAggregation(airline);, +        dfBuilder.setParsedAggregations(AggregatorFactories.builder().addAggregator(, +                AggregationBuilders.histogram("time").interval(300000).subAggregation(maxTime).field("time")));, +    }, +++ b/x-pack/qa/rolling-upgrade/build.gradle, +                'mixed_cluster/40_ml_datafeed_crud/Put job and datafeed without aggs in mixed cluster',, +                'mixed_cluster/40_ml_datafeed_crud/Put job and datafeed with aggs in mixed cluster', +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/AggProvider.java, +            // Upstream, we have read the bool already and know for sure that we have parsed aggs in the stream, +            return AggProvider.fromParsedAggs(new AggregatorFactories.Builder(in));, +            // Upstream we already verified that this calling object is not null, no need to write a second boolean to the stream, +            parsedAggs.writeTo(out);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/datafeed/DatafeedConfig.java, +        // This reads a boolean from the stream, if true, it sends the stream to the `fromStream` method, +        // This writes a boolean to the stream, if true, it sends the stream to the `writeTo` method, +++ b/x-pack/qa/full-cluster-restart/src/test/java/org/elasticsearch/xpack/restart/MlMigrationFullClusterRestartIT.java, +import org.elasticsearch.search.aggregations.AggregationBuilders;, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.MaxAggregationBuilder;, +        addAggregations(dfBuilder);, +, +    private void addAggregations(DatafeedConfig.Builder dfBuilder) {, +        TermsAggregationBuilder airline = AggregationBuilders.terms("airline");, +        MaxAggregationBuilder maxTime = AggregationBuilders.max("time").field("time").subAggregation(airline);, +        dfBuilder.setParsedAggregations(AggregatorFactories.builder().addAggregator(, +                AggregationBuilders.histogram("time").interval(300000).subAggregation(maxTime).field("time")));, +    }, +++ b/x-pack/qa/rolling-upgrade/build.gradle, +                'mixed_cluster/40_ml_datafeed_crud/Put job and datafeed without aggs in mixed cluster',, +                'mixed_cluster/40_ml_datafeed_crud/Put job and datafeed with aggs in mixed cluster', +++ b/x-pack/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/mixed_cluster/40_ml_datafeed_crud.yml, +"Test old cluster datafeed without aggs":, +        datafeed_id: old-cluster-datafeed-without-aggs, +  - match: { datafeeds.0.datafeed_id: "old-cluster-datafeed-without-aggs"}, +  - match: { datafeeds.0.script_fields.double_responsetime.script.lang: painless }, +  - is_false: datafeeds.0.aggregations, +        datafeed_id: old-cluster-datafeed-without-aggs, +"Test old cluster datafeed with aggs":, +  - do:, +      ml.get_datafeeds:, +        datafeed_id: old-cluster-datafeed-with-aggs, +  - match: { datafeeds.0.datafeed_id: "old-cluster-datafeed-with-aggs"}, +  - length: { datafeeds.0.indices: 1 }, +  - gte: { datafeeds.0.scroll_size: 2000 }, +  - is_false: datafeeds.0.script_fields, +  - match: { datafeeds.0.aggregations.buckets.date_histogram.field: time }, +  - match: { datafeeds.0.aggregations.buckets.aggregations.time.max.field: time }, +]