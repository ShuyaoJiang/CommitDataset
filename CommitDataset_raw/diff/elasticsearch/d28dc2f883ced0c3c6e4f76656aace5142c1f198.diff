[+++ b/src/main/java/org/elasticsearch/cache/recycler/PageCacheRecycler.java, +        final int maxPageCount = (int) Math.min(Integer.MAX_VALUE, limit / BigArrays.PAGE_SIZE_IN_BYTES);, +        final int maxBytePageCount = (int) (bytesWeight * maxPageCount / totalWeight);, +        bytePage = build(type, maxBytePageCount, searchThreadPoolSize, availableProcessors, new AbstractRecyclerC<byte[]>() {, +, +        final int maxIntPageCount = (int) (intsWeight * maxPageCount / totalWeight);, +        intPage = build(type, maxIntPageCount, searchThreadPoolSize, availableProcessors, new AbstractRecyclerC<int[]>() {, +, +        final int maxLongPageCount = (int) (longsWeight * maxPageCount / totalWeight);, +        longPage = build(type, maxLongPageCount, searchThreadPoolSize, availableProcessors, new AbstractRecyclerC<long[]>() {, +, +        final int maxObjectPageCount = (int) (objectsWeight * maxPageCount / totalWeight);, +        objectPage = build(type, maxObjectPageCount, searchThreadPoolSize, availableProcessors, new AbstractRecyclerC<Object[]>() {, +, +        assert BigArrays.PAGE_SIZE_IN_BYTES * (maxBytePageCount + maxIntPageCount + maxLongPageCount + maxObjectPageCount) <= limit;]