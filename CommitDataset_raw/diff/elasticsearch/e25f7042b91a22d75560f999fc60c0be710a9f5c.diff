[+++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import java.util.Objects;, +    public static final CircleBuilder PROTOTYPE = new CircleBuilder();, +, +     * Get the center of the circle, +     */, +    public Coordinate center() {, +        return center;, +    }, +, +    /**, +    /**, +     * Get the radius of the circle without unit, +     */, +    public double radius() {, +        return this.radius;, +    }, +, +    /**, +     * Get the radius unit of the circle, +     */, +    public DistanceUnit unit() {, +        return this.unit;, +    }, +, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(center, radius, unit.ordinal());, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +        if (this == obj) {, +            return true;, +        }, +        if (obj == null || getClass() != obj.getClass()) {, +            return false;, +        }, +        CircleBuilder other = (CircleBuilder) obj;, +        return Objects.equals(center, other.center) &&, +                Objects.equals(radius, other.radius) &&, +                Objects.equals(unit.ordinal(), other.unit.ordinal());, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        writeCoordinateTo(center, out);, +        out.writeDouble(radius);, +        DistanceUnit.writeDistanceUnit(out, unit);, +    }, +, +    @Override, +    public ShapeBuilder readFrom(StreamInput in) throws IOException {, +        return new CircleBuilder().center(readCoordinateFrom(in)).radius(in.readDouble(), DistanceUnit.readDistanceUnit(in));, +    }, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import java.util.Objects;, +    public static final CircleBuilder PROTOTYPE = new CircleBuilder();, +, +     * Get the center of the circle, +     */, +    public Coordinate center() {, +        return center;, +    }, +, +    /**, +    /**, +     * Get the radius of the circle without unit, +     */, +    public double radius() {, +        return this.radius;, +    }, +, +    /**, +     * Get the radius unit of the circle, +     */, +    public DistanceUnit unit() {, +        return this.unit;, +    }, +, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(center, radius, unit.ordinal());, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +        if (this == obj) {, +            return true;, +        }, +        if (obj == null || getClass() != obj.getClass()) {, +            return false;]