[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +import org.elasticsearch.client.indexlifecycle.GetLifecyclePolicyRequest;, +import org.elasticsearch.client.indexlifecycle.GetLifecyclePolicyResponse;, +     * Retrieve one or more lifecycle policy definition, +     * See <a href="https://fix-me-when-we-have-docs.com">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,, +                                                         RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,, +            GetLifecyclePolicyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously retrieve one or more lifecycle policy definition, +     * See <a href="https://fix-me-when-we-have-docs.com">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,, +                                        ActionListener<GetLifecyclePolicyResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,, +            GetLifecyclePolicyResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +import org.elasticsearch.client.indexlifecycle.GetLifecyclePolicyRequest;, +import org.elasticsearch.client.indexlifecycle.GetLifecyclePolicyResponse;, +     * Retrieve one or more lifecycle policy definition, +     * See <a href="https://fix-me-when-we-have-docs.com">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,, +                                                         RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,, +            GetLifecyclePolicyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously retrieve one or more lifecycle policy definition, +     * See <a href="https://fix-me-when-we-have-docs.com">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,, +                                        ActionListener<GetLifecyclePolicyResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,, +            GetLifecyclePolicyResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.client.indexlifecycle.GetLifecyclePolicyRequest;, +    static Request getLifecyclePolicy(GetLifecyclePolicyRequest getLifecyclePolicyRequest) {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_ilm"), +            .addCommaSeparatedPathParts(getLifecyclePolicyRequest.getPolicyNames()), +            .build();, +        Request request = new Request(HttpGet.METHOD_NAME, endpoint);, +        Params params = new Params(request);, +        params.withMasterTimeout(getLifecyclePolicyRequest.masterNodeTimeout());, +        params.withTimeout(getLifecyclePolicyRequest.timeout());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndexLifecycleClient.java, +import org.elasticsearch.client.indexlifecycle.GetLifecyclePolicyRequest;, +import org.elasticsearch.client.indexlifecycle.GetLifecyclePolicyResponse;, +     * Retrieve one or more lifecycle policy definition, +     * See <a href="https://fix-me-when-we-have-docs.com">, +     * the docs</a> for more., +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,, +                                                         RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,, +            GetLifecyclePolicyResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously retrieve one or more lifecycle policy definition, +     * See <a href="https://fix-me-when-we-have-docs.com">, +     * the docs</a> for more., +     * @param request the request]