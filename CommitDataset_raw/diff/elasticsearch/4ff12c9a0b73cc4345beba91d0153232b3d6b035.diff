[+++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +        if (source != null && source.from() > 0 &&  scroll() != null) {, +            validationException =, +                addValidationError("using [from] is not allowed in a scroll context", validationException);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +        if (source != null && source.from() > 0 &&  scroll() != null) {, +            validationException =, +                addValidationError("using [from] is not allowed in a scroll context", validationException);, +        }, +++ b/core/src/test/java/org/elasticsearch/search/SearchRequestTests.java, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +    public void testValidate() throws IOException {, +, +        {, +            // if scroll isn't set, validate should never add errors, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder());, +            searchRequest.scroll((Scroll) null);, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNull(validationErrors);, +        }, +        {, +        // disabeling `track_total_hits` isn't valid in scroll context, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder());, +            searchRequest.scroll(new TimeValue(1000));, +            searchRequest.source().trackTotalHits(false);, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNotNull(validationErrors);, +            assertEquals(1, validationErrors.validationErrors().size());, +            assertEquals("disabling [track_total_hits] is not allowed in a scroll context", validationErrors.validationErrors().get(0));, +        }, +        {, +            // scroll and `from` isn't valid, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder());, +            searchRequest.scroll(new TimeValue(1000));, +            searchRequest.source().from(10);, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNotNull(validationErrors);, +            assertEquals(1, validationErrors.validationErrors().size());, +            assertEquals("using [from] is not allowed in a scroll context", validationErrors.validationErrors().get(0));, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +        if (source != null && source.from() > 0 &&  scroll() != null) {, +            validationException =, +                addValidationError("using [from] is not allowed in a scroll context", validationException);, +        }, +++ b/core/src/test/java/org/elasticsearch/search/SearchRequestTests.java, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.search.builder.SearchSourceBuilder;, +    public void testValidate() throws IOException {, +, +        {, +            // if scroll isn't set, validate should never add errors, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder());, +            searchRequest.scroll((Scroll) null);, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNull(validationErrors);, +        }, +        {, +        // disabeling `track_total_hits` isn't valid in scroll context, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder());, +            searchRequest.scroll(new TimeValue(1000));, +            searchRequest.source().trackTotalHits(false);, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNotNull(validationErrors);, +            assertEquals(1, validationErrors.validationErrors().size());, +            assertEquals("disabling [track_total_hits] is not allowed in a scroll context", validationErrors.validationErrors().get(0));, +        }, +        {, +            // scroll and `from` isn't valid, +            SearchRequest searchRequest = createSearchRequest().source(new SearchSourceBuilder());, +            searchRequest.scroll(new TimeValue(1000));, +            searchRequest.source().from(10);, +            ActionRequestValidationException validationErrors = searchRequest.validate();, +            assertNotNull(validationErrors);, +            assertEquals(1, validationErrors.validationErrors().size());, +            assertEquals("using [from] is not allowed in a scroll context", validationErrors.validationErrors().get(0));, +        }, +    }, +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/search/30_limits.yml, +        size: 10010]