[+++ b/.idea/modules/plugin-cloud-aws.iml, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/aws-java-sdk/1.1.1/lib/aws-java-sdk-1.1.1-sources.jar!/" />, +        </SOURCES>, +++ b/.idea/modules/plugin-cloud-aws.iml, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/aws-java-sdk/1.1.1/lib/aws-java-sdk-1.1.1-sources.jar!/" />, +        </SOURCES>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        DocumentMapper docMapper = indexService.mapperService().documentMapper(request.type());, +++ b/.idea/modules/plugin-cloud-aws.iml, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/aws-java-sdk/1.1.1/lib/aws-java-sdk-1.1.1-sources.jar!/" />, +        </SOURCES>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        DocumentMapper docMapper = indexService.mapperService().documentMapper(request.type());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public DocumentMapper documentMapperWithAutoCreate(String type) {, +        DocumentMapper mapper = mappers.get(type);, +        if (mapper != null) {, +            return mapper;, +        }, +        if (!dynamic) {, +            return null;, +        }, +        // go ahead and dynamically create it, +        synchronized (mutex) {, +            mapper = mappers.get(type);, +            if (mapper != null) {, +                return mapper;, +            }, +            add(type, null);, +            return mappers.get(type);, +        }, +    }, +, +++ b/.idea/modules/plugin-cloud-aws.iml, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/aws-java-sdk/1.1.1/lib/aws-java-sdk-1.1.1-sources.jar!/" />, +        </SOURCES>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        DocumentMapper docMapper = indexService.mapperService().documentMapper(request.type());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public DocumentMapper documentMapperWithAutoCreate(String type) {, +        DocumentMapper mapper = mappers.get(type);, +        if (mapper != null) {, +            return mapper;, +        }, +        if (!dynamic) {, +            return null;, +        }, +        // go ahead and dynamically create it, +        synchronized (mutex) {, +            mapper = mappers.get(type);, +            if (mapper != null) {, +                return mapper;, +            }, +            add(type, null);, +            return mappers.get(type);, +        }, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.mapper.ParsedDocument;, +import org.elasticsearch.index.mapper.SourceToParse;, +        DocumentMapper docMapper = mapperService.documentMapperWithAutoCreate(source.type());, +        DocumentMapper docMapper = mapperService.documentMapperWithAutoCreate(source.type());, +        DocumentMapper docMapper = mapperService.documentMapperWithAutoCreate(type);, +        DocumentMapper docMapper = mapperService.documentMapperWithAutoCreate(type);, +++ b/.idea/modules/plugin-cloud-aws.iml, +        <SOURCES>, +          <root url="jar://$USER_HOME$/opt/aws-java-sdk/1.1.1/lib/aws-java-sdk-1.1.1-sources.jar!/" />, +        </SOURCES>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +        DocumentMapper docMapper = indexService.mapperService().documentMapper(request.type());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public DocumentMapper documentMapperWithAutoCreate(String type) {, +        DocumentMapper mapper = mappers.get(type);, +        if (mapper != null) {, +            return mapper;, +        }, +        if (!dynamic) {, +            return null;, +        }, +        // go ahead and dynamically create it, +        synchronized (mutex) {, +            mapper = mappers.get(type);, +            if (mapper != null) {, +                return mapper;, +            }, +            add(type, null);, +            return mappers.get(type);, +        }, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.MapperService;]