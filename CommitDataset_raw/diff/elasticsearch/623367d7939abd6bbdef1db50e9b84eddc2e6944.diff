[+++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/client/rest-high-level/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/client/rest-high-level/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationBuilder;, +        assertEquals(3, namedXContents.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +        assertTrue(names.contains(CompositeAggregationBuilder.NAME));, +++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/client/rest-high-level/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationBuilder;, +        assertEquals(3, namedXContents.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +        assertTrue(names.contains(CompositeAggregationBuilder.NAME));, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/client/rest-high-level/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationBuilder;, +        assertEquals(3, namedXContents.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +        assertTrue(names.contains(CompositeAggregationBuilder.NAME));, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationPlugin;, + * {@link CompositeAggregationPlugin}, +                ParentJoinPlugin.class,, +                CompositeAggregationPlugin.class));, +++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/client/rest-high-level/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationBuilder;, +        assertEquals(3, namedXContents.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +        assertTrue(names.contains(CompositeAggregationBuilder.NAME));, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationPlugin;, + * {@link CompositeAggregationPlugin}, +                ParentJoinPlugin.class,, +                CompositeAggregationPlugin.class));, +++ b/client/transport/src/test/java/org/elasticsearch/transport/client/PreBuiltTransportClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationPlugin;, +                Arrays.asList(ParentJoinPlugin.class, ReindexPlugin.class, PercolatorPlugin.class,, +                    MustachePlugin.class, CompositeAggregationPlugin.class)) {, +++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/client/rest-high-level/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationBuilder;, +        assertEquals(3, namedXContents.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +        assertTrue(names.contains(CompositeAggregationBuilder.NAME));, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationPlugin;, + * {@link CompositeAggregationPlugin}, +                ParentJoinPlugin.class,, +                CompositeAggregationPlugin.class));, +++ b/client/transport/src/test/java/org/elasticsearch/transport/client/PreBuiltTransportClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationPlugin;, +                Arrays.asList(ParentJoinPlugin.class, ReindexPlugin.class, PercolatorPlugin.class,, +                    MustachePlugin.class, CompositeAggregationPlugin.class)) {, +++ b/core/src/main/java/org/elasticsearch/index/IndexSortConfig.java, +    public static SortField.Type getSortFieldType(SortField sortField) {, +++ b/build.gradle, +    "org.elasticsearch.plugin:aggs-composite-client:${version}": ':modules:aggs-composite',, +++ b/client/rest-high-level/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationBuilder;, +        assertEquals(3, namedXContents.size());, +        assertEquals(Integer.valueOf(3), categories.get(Aggregation.class));, +        assertTrue(names.contains(CompositeAggregationBuilder.NAME));, +++ b/client/transport/build.gradle, +  compile "org.elasticsearch.plugin:aggs-composite-client:${version}", +++ b/client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java, +import org.elasticsearch.search.aggregations.composite.CompositeAggregationPlugin;, + * {@link CompositeAggregationPlugin}, +                ParentJoinPlugin.class,, +                CompositeAggregationPlugin.class));]