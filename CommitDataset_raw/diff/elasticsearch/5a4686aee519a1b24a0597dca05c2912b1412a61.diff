[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +import org.elasticsearch.index.query.xcontent.XContentFilterBuilder;, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(XContentFilterBuilder filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(String filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(byte[] filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/search/SearchRequestBuilder.java, +import org.elasticsearch.index.query.xcontent.XContentFilterBuilder;, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(XContentFilterBuilder filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(String filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +     * Sets a filter on the query executed that only applies to the search query, +     * (and not facets for example)., +     */, +    public SearchRequestBuilder setFilter(byte[] filter) {, +        sourceBuilder().filter(filter);, +        return this;, +    }, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common.lucene.search;, +, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.search.Collector;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.Scorer;, +import org.elasticsearch.common.lucene.docset.DocSet;, +import org.elasticsearch.common.lucene.docset.DocSets;, +, +import java.io.IOException;, +, +/**, + * @author kimchy (shay.banon), + */, +public class FilteredCollector extends Collector {, +, +    private final Collector collector;, +, +    private final Filter filter;, +, +    private DocSet docSet;, +]