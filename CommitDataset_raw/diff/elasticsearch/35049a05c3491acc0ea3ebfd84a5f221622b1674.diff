[+++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeFilters.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.network.NetworkAddress;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +    private boolean matchByIP(String[] values, @Nullable String hostIp, @Nullable String publishIp) {, +        for (String value : values) {, +            boolean matchIp = Regex.simpleMatch(value, hostIp) || Regex.simpleMatch(value, publishIp);, +            if (matchIp) {, +                return matchIp;, +            }, +        }, +        return false;, +    }, +, +                // We check both the host_ip or the publish_ip, +                String publishAddress = null;, +                if (node.address() instanceof InetSocketTransportAddress) {, +                    publishAddress = NetworkAddress.format(((InetSocketTransportAddress) node.address()).address().getAddress());, +, +                boolean match = matchByIP(values, node.getHostAddress(), publishAddress);, +, +                    if (match) {, +                        // If we match, we can check to the next filter, +                        continue;, +                    }, +, +                if (match && opType == OpType.OR) {, +                    return true;, +            } else if ("_host_ip".equals(attr)) {, +                // We check explicitly only the host_ip, +                boolean match = matchByIP(values, node.getHostAddress(), null);, +                if (opType == OpType.AND) {, +                    if (match) {, +                        // If we match, we can check to the next filter, +                        continue;, +                    }, +                    return false;, +                }, +, +                if (match && opType == OpType.OR) {, +                    return true;, +                }, +            } else if ("_publish_ip".equals(attr)) {, +                // We check explicitly only the publish_ip, +                String address = null;, +                if (node.address() instanceof InetSocketTransportAddress) {, +                    address = NetworkAddress.format(((InetSocketTransportAddress) node.address()).address().getAddress());, +                }, +, +                boolean match = matchByIP(values, address, null);, +                if (opType == OpType.AND) {, +                    if (match) {, +                        // If we match, we can check to the next filter, +                        continue;, +                    }, +                    return false;, +                }, +, +                if (match && opType == OpType.OR) {, +                    return true;, +                    sb.append(" ").append(opType.toString()).append(" ");, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeFilters.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.network.NetworkAddress;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +    private boolean matchByIP(String[] values, @Nullable String hostIp, @Nullable String publishIp) {, +        for (String value : values) {, +            boolean matchIp = Regex.simpleMatch(value, hostIp) || Regex.simpleMatch(value, publishIp);, +            if (matchIp) {, +                return matchIp;, +            }, +        }, +        return false;, +    }, +, +                // We check both the host_ip or the publish_ip, +                String publishAddress = null;, +                if (node.address() instanceof InetSocketTransportAddress) {, +                    publishAddress = NetworkAddress.format(((InetSocketTransportAddress) node.address()).address().getAddress());, +, +                boolean match = matchByIP(values, node.getHostAddress(), publishAddress);, +, +                    if (match) {, +                        // If we match, we can check to the next filter, +                        continue;, +                    }, +, +                if (match && opType == OpType.OR) {, +                    return true;, +            } else if ("_host_ip".equals(attr)) {, +                // We check explicitly only the host_ip, +                boolean match = matchByIP(values, node.getHostAddress(), null);, +                if (opType == OpType.AND) {, +                    if (match) {, +                        // If we match, we can check to the next filter, +                        continue;, +                    }, +                    return false;, +                }, +]