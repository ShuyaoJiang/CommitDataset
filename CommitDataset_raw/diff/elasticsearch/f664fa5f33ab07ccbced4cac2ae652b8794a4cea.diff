[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        if (expected.clazz.isAssignableFrom(actual.clazz) || (explicit && actual.clazz.isAssignableFrom(expected.clazz))) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        if (expected.clazz.isAssignableFrom(actual.clazz) || (explicit && actual.clazz.isAssignableFrom(expected.clazz))) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!rtn.clazz.isAssignableFrom(genrtn.clazz)) {, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!type.clazz.isAssignableFrom(generic.clazz)) {, +            if (!child.clazz.isAssignableFrom(owner.clazz)) {, +            if (!argument.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(argument.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +            if (!owner.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(owner.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        if (expected.clazz.isAssignableFrom(actual.clazz) || (explicit && actual.clazz.isAssignableFrom(expected.clazz))) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!rtn.clazz.isAssignableFrom(genrtn.clazz)) {, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!type.clazz.isAssignableFrom(generic.clazz)) {, +            if (!child.clazz.isAssignableFrom(owner.clazz)) {, +            if (!argument.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(argument.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +            if (!owner.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(owner.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/WriterUtility.java, +                if (!to.clazz.isAssignableFrom(from.clazz)) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        if (expected.clazz.isAssignableFrom(actual.clazz) || (explicit && actual.clazz.isAssignableFrom(expected.clazz))) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!rtn.clazz.isAssignableFrom(genrtn.clazz)) {, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!type.clazz.isAssignableFrom(generic.clazz)) {, +            if (!child.clazz.isAssignableFrom(owner.clazz)) {, +            if (!argument.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(argument.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +            if (!owner.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(owner.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/WriterUtility.java, +                if (!to.clazz.isAssignableFrom(from.clazz)) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/LBrace.java, +        } else if (Map.class.isAssignableFrom(before.clazz)) {, +        } else if (List.class.isAssignableFrom(before.clazz)) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        if (expected.clazz.isAssignableFrom(actual.clazz) || (explicit && actual.clazz.isAssignableFrom(expected.clazz))) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!rtn.clazz.isAssignableFrom(genrtn.clazz)) {, +                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {, +            if (!type.clazz.isAssignableFrom(generic.clazz)) {, +            if (!child.clazz.isAssignableFrom(owner.clazz)) {, +            if (!argument.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(argument.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +            if (!owner.clazz.isAssignableFrom(from.clazz)) {, +                if (from.clazz.isAssignableFrom(owner.clazz)) {, +                } else {, +            if (!to.clazz.isAssignableFrom(rtn.clazz)) {, +                if (rtn.clazz.isAssignableFrom(to.clazz)) {, +                } else {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/WriterUtility.java, +                if (!to.clazz.isAssignableFrom(from.clazz)) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/LBrace.java, +        } else if (Map.class.isAssignableFrom(before.clazz)) {, +        } else if (List.class.isAssignableFrom(before.clazz)) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/node/LField.java, +                if (Map.class.isAssignableFrom(before.clazz)) {, +                if (List.class.isAssignableFrom(before.clazz)) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/AnalyzerCaster.java, +        if (expected.clazz.isAssignableFrom(actual.clazz) || (explicit && actual.clazz.isAssignableFrom(expected.clazz))) {, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java]