[+++ b/build.gradle, +  version = VersionProperties.elasticsearch, +      String artifactsHost = VersionProperties.elasticsearch.endsWith("-SNAPSHOT") ? "https://snapshots.elastic.co" : "https://artifacts.elastic.co", +++ b/build.gradle, +  version = VersionProperties.elasticsearch, +      String artifactsHost = VersionProperties.elasticsearch.endsWith("-SNAPSHOT") ? "https://snapshots.elastic.co" : "https://artifacts.elastic.co", +++ b/buildSrc/build.gradle, +Properties props = VersionPropertiesLoader.loadBuildSrcVersion(project.file('version.properties')), +version = props.getProperty("elasticsearch"), +  doLast {, +    Writer writer = file("$destinationDir/version.properties").newWriter(), +    try {, +      props.store(writer, "Generated version properties"), +    } finally {, +      writer.close(), +  }, +if (JavaVersion.current() < JavaVersion.VERSION_1_10) {, +  throw new GradleException('At least Java 10 is required to build elasticsearch gradle tools'), +}, +, +// Define this here because we need it early., +class VersionPropertiesLoader {, +  static Properties loadBuildSrcVersion(File input) throws IOException {, +    Properties props = new Properties();, +    InputStream is = new FileInputStream(input), +    try {, +      props.load(is), +    } finally {, +      is.close(), +    }, +    loadBuildSrcVersion(props, System.getProperties()), +    return props, +  }, +, +  protected static void loadBuildSrcVersion(Properties loadedProps, Properties systemProperties) {, +    String elasticsearch = loadedProps.getProperty("elasticsearch"), +    if (elasticsearch == null) {, +      throw new IllegalStateException("Elasticsearch version is missing from properties."), +    }, +    if (elasticsearch.matches("[0-9]+\\.[0-9]+\\.[0-9]+") == false) {, +      throw new IllegalStateException(, +              "Expected elasticsearch version to be numbers only of the form  X.Y.Z but it was: " +, +                      elasticsearch, +      ), +    }, +    String qualifier = systemProperties.getProperty("build.version_qualifier", "alpha1");, +    if (qualifier.isEmpty() == false) {, +      if (qualifier.matches("(alpha|beta|rc)\\d+") == false) {, +        throw new IllegalStateException("Invalid qualifier: " + qualifier), +      }, +      elasticsearch += "-" + qualifier, +    }, +    if ("true".equals(systemProperties.getProperty("build.snapshot", "true"))) {, +      elasticsearch += "-SNAPSHOT", +    }, +    loadedProps.put("elasticsearch", elasticsearch), +  }, +}, +++ b/build.gradle, +  version = VersionProperties.elasticsearch, +      String artifactsHost = VersionProperties.elasticsearch.endsWith("-SNAPSHOT") ? "https://snapshots.elastic.co" : "https://artifacts.elastic.co", +++ b/buildSrc/build.gradle, +Properties props = VersionPropertiesLoader.loadBuildSrcVersion(project.file('version.properties')), +version = props.getProperty("elasticsearch"), +  doLast {, +    Writer writer = file("$destinationDir/version.properties").newWriter(), +    try {, +      props.store(writer, "Generated version properties"), +    } finally {, +      writer.close(), +  }, +if (JavaVersion.current() < JavaVersion.VERSION_1_10) {, +  throw new GradleException('At least Java 10 is required to build elasticsearch gradle tools'), +}, +, +// Define this here because we need it early., +class VersionPropertiesLoader {, +  static Properties loadBuildSrcVersion(File input) throws IOException {, +    Properties props = new Properties();, +    InputStream is = new FileInputStream(input), +    try {, +      props.load(is), +    } finally {, +      is.close(), +    }, +    loadBuildSrcVersion(props, System.getProperties()), +    return props, +  }, +, +  protected static void loadBuildSrcVersion(Properties loadedProps, Properties systemProperties) {, +    String elasticsearch = loadedProps.getProperty("elasticsearch"), +    if (elasticsearch == null) {, +      throw new IllegalStateException("Elasticsearch version is missing from properties."), +    }, +    if (elasticsearch.matches("[0-9]+\\.[0-9]+\\.[0-9]+") == false) {, +      throw new IllegalStateException(, +              "Expected elasticsearch version to be numbers only of the form  X.Y.Z but it was: " +, +                      elasticsearch, +      ), +    }]