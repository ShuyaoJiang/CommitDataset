[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +    private static byte[] TRANSLOG_PAYLOAD = new byte[12];, +, +            engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +                    engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +    private static byte[] TRANSLOG_PAYLOAD = new byte[12];, +, +            engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +                    engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +    private static byte[] TRANSLOG_PAYLOAD = new byte[12];, +, +            engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +                    engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +    private static byte[] TRANSLOG_PAYLOAD = new byte[12];, +, +            engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +                    engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +    private static byte[] TRANSLOG_PAYLOAD = new byte[12];, +, +            engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +                    engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.util.Unicode;, +    private byte[] source;, +    public GetResponse(String index, String type, String id, byte[] source) {, +    public byte[] source() {, +    public String sourceAsString() {, +        return Unicode.fromBytes(source);, +    }, +, +        int size = in.readInt();, +        if (size > 0) {, +            source = new byte[size];, +            in.readFully(source);, +            out.writeInt(0);, +            out.writeInt(source.length);, +            out.write(source);, +++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/index/engine/SimpleEngineBenchmark.java, +    private static byte[] TRANSLOG_PAYLOAD = new byte[12];, +, +            engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +                    engine.index(new Engine.Index(new Term("_id", sId), doc, Lucene.STANDARD_ANALYZER, "type", sId, TRANSLOG_PAYLOAD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java, +        return querySource(queryBuilder.buildAsString());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetResponse.java, +import org.elasticsearch.util.Unicode;, +    private byte[] source;, +    public GetResponse(String index, String type, String id, byte[] source) {, +    public byte[] source() {, +    public String sourceAsString() {, +        return Unicode.fromBytes(source);, +    }, +, +        int size = in.readInt();, +        if (size > 0) {, +            source = new byte[size];, +            in.readFully(source);, +            out.writeInt(0);, +            out.writeInt(source.length);, +            out.write(source);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.util.Unicode;, +    private byte[] source;, +    public IndexRequest(String index, String type, String id, byte[] source) {, +    byte[] source() {, +    @Required public IndexRequest source(String source) {, +        this.source = Unicode.fromStringAsBytes(source);, +        return this;, +    }, +, +            jsonBuilder.flush();, +            return source(jsonBuilder.copiedBytes());, +    @Required public IndexRequest source(byte[] source) {, +        source = new byte[in.readInt()];]