[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]snapshots[/\\]SnapshotInfo.java" checks="LineLength" />, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]snapshots[/\\]SnapshotInfo.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = SnapshotInfo.readOptionalSnapshotInfo(in);, +        out.writeOptionalStreamable(snapshotInfo);, +            snapshotInfo.toXContent(builder, params);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]snapshots[/\\]SnapshotInfo.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = SnapshotInfo.readOptionalSnapshotInfo(in);, +        out.writeOptionalStreamable(snapshotInfo);, +            snapshotInfo.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(SnapshotInfo.readSnapshotInfo(in));, +            snapshotInfo.toXContent(builder, params);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]snapshots[/\\]SnapshotInfo.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = SnapshotInfo.readOptionalSnapshotInfo(in);, +        out.writeOptionalStreamable(snapshotInfo);, +            snapshotInfo.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(SnapshotInfo.readSnapshotInfo(in));, +            snapshotInfo.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                List<Snapshot> snapshots = snapshotsService.snapshots(request.repository(), request.ignoreUnavailable());, +                for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshot));, +                }, +                List<Snapshot> snapshots = snapshotsService.currentSnapshots(request.repository());, +                for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshot));, +                }, +                List<Snapshot> snapshots = null;, +                        for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshotsService.snapshot(snapshotId)));, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]snapshots[/\\]SnapshotInfo.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = SnapshotInfo.readOptionalSnapshotInfo(in);, +        out.writeOptionalStreamable(snapshotInfo);, +            snapshotInfo.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(SnapshotInfo.readSnapshotInfo(in));, +            snapshotInfo.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                List<Snapshot> snapshots = snapshotsService.snapshots(request.repository(), request.ignoreUnavailable());, +                for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshot));, +                }, +                List<Snapshot> snapshots = snapshotsService.currentSnapshots(request.repository());, +                for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshot));, +                }, +                List<Snapshot> snapshots = null;, +                        for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshotsService.snapshot(snapshotId)));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                    Snapshot snapshot = snapshotsService.snapshot(snapshotId);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]snapshots[/\\]SnapshotInfo.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = SnapshotInfo.readOptionalSnapshotInfo(in);, +        out.writeOptionalStreamable(snapshotInfo);, +            snapshotInfo.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsResponse.java, +            builder.add(SnapshotInfo.readSnapshotInfo(in));, +            snapshotInfo.toXContent(builder, params);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/TransportGetSnapshotsAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                List<Snapshot> snapshots = snapshotsService.snapshots(request.repository(), request.ignoreUnavailable());, +                for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshot));, +                }, +                List<Snapshot> snapshots = snapshotsService.currentSnapshots(request.repository());, +                for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshot));, +                }, +                List<Snapshot> snapshots = null;, +                        for (Snapshot snapshot : snapshots) {, +                    snapshotInfoBuilder.add(new SnapshotInfo(snapshotsService.snapshot(snapshotId)));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +import org.elasticsearch.snapshots.Snapshot;, +                    Snapshot snapshot = snapshotsService.snapshot(snapshotId);, +++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +import org.elasticsearch.snapshots.Snapshot;, +    Snapshot readSnapshot(SnapshotId snapshotId);, +    MetaData readSnapshotMetaData(SnapshotId snapshotId, Snapshot snapshot, List<String> indices) throws IOException;, +    Snapshot finalizeSnapshot(SnapshotId snapshotId, List<String> indices, long startTime, String failure, int totalShards, List<SnapshotShardFailure> shardFailures);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +  <suppress files="core[/\\]src[/\\]main[/\\]java[/\\]org[/\\]elasticsearch[/\\]snapshots[/\\]SnapshotInfo.java" checks="LineLength" />, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotResponse.java, +        snapshotInfo = SnapshotInfo.readOptionalSnapshotInfo(in);, +        out.writeOptionalStreamable(snapshotInfo);, +            snapshotInfo.toXContent(builder, params);]