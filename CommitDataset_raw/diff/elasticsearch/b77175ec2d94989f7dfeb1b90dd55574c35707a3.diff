[+++ b/dev-tools/build_randomization.rb, +#    This script takes the randomization choices described in RANDOM_CHOICE and generates appropriate JAVA property file 'prop.txt', +#    In hash RANDOM_CHOICES, the key of randomization hash maps to key of java property.  The value of the hash describes the possible value of the randomization, +#       -l, --local   Run in local mode.  In this mode, directory structure will be created under current directory to mimic, +  opts.banner = "Usage: build_randomization.rb [options]", +++ b/dev-tools/build_randomization.rb, +#    This script takes the randomization choices described in RANDOM_CHOICE and generates appropriate JAVA property file 'prop.txt', +#    In hash RANDOM_CHOICES, the key of randomization hash maps to key of java property.  The value of the hash describes the possible value of the randomization, +#       -l, --local   Run in local mode.  In this mode, directory structure will be created under current directory to mimic, +  opts.banner = "Usage: build_randomization.rb [options]", +++ b/dev-tools/prepare_release_candidate.py, +  # by default, we only run mvn install and don't push anything repo, +++ b/dev-tools/build_randomization.rb, +#    This script takes the randomization choices described in RANDOM_CHOICE and generates appropriate JAVA property file 'prop.txt', +#    In hash RANDOM_CHOICES, the key of randomization hash maps to key of java property.  The value of the hash describes the possible value of the randomization, +#       -l, --local   Run in local mode.  In this mode, directory structure will be created under current directory to mimic, +  opts.banner = "Usage: build_randomization.rb [options]", +++ b/dev-tools/prepare_release_candidate.py, +  # by default, we only run mvn install and don't push anything repo, +++ b/dev-tools/smoke_test_rc.py, +                  raise RuntimeError('Unexpected plugin %s' % node_plugin['name']), +++ b/dev-tools/build_randomization.rb, +#    This script takes the randomization choices described in RANDOM_CHOICE and generates appropriate JAVA property file 'prop.txt', +#    In hash RANDOM_CHOICES, the key of randomization hash maps to key of java property.  The value of the hash describes the possible value of the randomization, +#       -l, --local   Run in local mode.  In this mode, directory structure will be created under current directory to mimic, +  opts.banner = "Usage: build_randomization.rb [options]", +++ b/dev-tools/prepare_release_candidate.py, +  # by default, we only run mvn install and don't push anything repo, +++ b/dev-tools/smoke_test_rc.py, +                  raise RuntimeError('Unexpected plugin %s' % node_plugin['name']), +++ b/dev-tools/upgrade-tests.py, +The upgrade test starts 2 or more nodes of an old elasticsearch version, indexes, +++ b/dev-tools/build_randomization.rb, +#    This script takes the randomization choices described in RANDOM_CHOICE and generates appropriate JAVA property file 'prop.txt', +#    In hash RANDOM_CHOICES, the key of randomization hash maps to key of java property.  The value of the hash describes the possible value of the randomization, +#       -l, --local   Run in local mode.  In this mode, directory structure will be created under current directory to mimic, +  opts.banner = "Usage: build_randomization.rb [options]", +++ b/dev-tools/prepare_release_candidate.py, +  # by default, we only run mvn install and don't push anything repo, +++ b/dev-tools/smoke_test_rc.py, +                  raise RuntimeError('Unexpected plugin %s' % node_plugin['name']), +++ b/dev-tools/upgrade-tests.py, +The upgrade test starts 2 or more nodes of an old elasticsearch version, indexes, +++ b/dev-tools/validate-maven-repository.py, +        # no .properties and .repositories files (they don't get uploaded), +      print 'The following errors occurred (%s out of %s files)' % (len(errors), len(filesToCheck))]