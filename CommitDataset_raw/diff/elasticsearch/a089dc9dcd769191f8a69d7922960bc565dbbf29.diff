[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java, +import org.elasticsearch.common.Strings;, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java, +import org.elasticsearch.common.Strings;, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +    DoubleTermsAggregator(String name, AggregatorFactories factories, ValuesSource.Numeric valuesSource, DocValueFormat format,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java, +import org.elasticsearch.common.Strings;, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +    DoubleTermsAggregator(String name, AggregatorFactories factories, ValuesSource.Numeric valuesSource, DocValueFormat format,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.InternalOrder;, +            final StringTerms.Bucket bucket = ordered.pop();, +          final StringTerms.Bucket bucket = list[i];, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java, +import org.elasticsearch.common.Strings;, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +    DoubleTermsAggregator(String name, AggregatorFactories factories, ValuesSource.Numeric valuesSource, DocValueFormat format,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.InternalOrder;, +            final StringTerms.Bucket bucket = ordered.pop();, +          final StringTerms.Bucket bucket = list[i];, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.InternalOrder;, +    TermsAggregatorFactory(String name,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java, +import org.elasticsearch.common.Strings;, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +    DoubleTermsAggregator(String name, AggregatorFactories factories, ValuesSource.Numeric valuesSource, DocValueFormat format,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.InternalOrder;, +            final StringTerms.Bucket bucket = ordered.pop();, +          final StringTerms.Bucket bucket = list[i];, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.InternalOrder;, +    TermsAggregatorFactory(String name,, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java, +import org.elasticsearch.common.Strings;, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +    DoubleTermsAggregator(String name, AggregatorFactories factories, ValuesSource.Numeric valuesSource, DocValueFormat format,, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.InternalOrder;, +            final StringTerms.Bucket bucket = ordered.pop();, +          final StringTerms.Bucket bucket = list[i];, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.InternalOrder;, +    TermsAggregatorFactory(String name,, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/IpTermsIT.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertSearchResponse;, +, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java, +import org.elasticsearch.common.Strings;, +]