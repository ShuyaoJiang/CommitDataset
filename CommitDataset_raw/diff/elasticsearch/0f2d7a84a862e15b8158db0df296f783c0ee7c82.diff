[+++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +            if (positionIncrementGap != POSITION_INCREMENT_GAP_USE_ANALYZER) {, +                if (fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {, +                    throw new IllegalArgumentException("Cannot set position_increment_gap on field [", +                        + name + "] without positions enabled");, +                }, +                fieldType.setIndexAnalyzer(new NamedAnalyzer(fieldType.indexAnalyzer(), positionIncrementGap));, +                fieldType.setSearchAnalyzer(new NamedAnalyzer(fieldType.searchAnalyzer(), positionIncrementGap));, +                fieldType.setSearchQuoteAnalyzer(new NamedAnalyzer(fieldType.searchQuoteAnalyzer(), positionIncrementGap));, +            }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +            if (positionIncrementGap != POSITION_INCREMENT_GAP_USE_ANALYZER) {, +                if (fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {, +                    throw new IllegalArgumentException("Cannot set position_increment_gap on field [", +                        + name + "] without positions enabled");, +                }, +                fieldType.setIndexAnalyzer(new NamedAnalyzer(fieldType.indexAnalyzer(), positionIncrementGap));, +                fieldType.setSearchAnalyzer(new NamedAnalyzer(fieldType.searchAnalyzer(), positionIncrementGap));, +                fieldType.setSearchQuoteAnalyzer(new NamedAnalyzer(fieldType.searchQuoteAnalyzer(), positionIncrementGap));, +            }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/TextFieldMapper.java, +                if (fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {, +                    throw new IllegalArgumentException("Cannot set position_increment_gap on field [", +                        + name + "] without positions enabled");, +                }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +            if (positionIncrementGap != POSITION_INCREMENT_GAP_USE_ANALYZER) {, +                if (fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {, +                    throw new IllegalArgumentException("Cannot set position_increment_gap on field [", +                        + name + "] without positions enabled");, +                }, +                fieldType.setIndexAnalyzer(new NamedAnalyzer(fieldType.indexAnalyzer(), positionIncrementGap));, +                fieldType.setSearchAnalyzer(new NamedAnalyzer(fieldType.searchAnalyzer(), positionIncrementGap));, +                fieldType.setSearchQuoteAnalyzer(new NamedAnalyzer(fieldType.searchQuoteAnalyzer(), positionIncrementGap));, +            }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/TextFieldMapper.java, +                if (fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {, +                    throw new IllegalArgumentException("Cannot set position_increment_gap on field [", +                        + name + "] without positions enabled");, +                }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/core/TextFieldMapperTests.java, +import java.util.Arrays;, +, +    public void testNotIndexedFieldPositionIncrement() throws IOException {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +            .startObject("properties").startObject("field"), +            .field("type", "text"), +            .field("index", false), +            .field("position_increment_gap", 10), +            .endObject().endObject().endObject().endObject().string();, +, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,, +            () -> parser.parse("type", new CompressedXContent(mapping)));, +        assertEquals("Cannot set position_increment_gap on field [field] without positions enabled", e.getMessage());, +    }, +, +    public void testAnalyzedFieldPositionIncrementWithoutPositions() throws IOException {, +        for (String indexOptions : Arrays.asList("docs", "freqs")) {, +            String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +                .startObject("properties").startObject("field"), +                .field("type", "text"), +                .field("index_options", indexOptions), +                .field("position_increment_gap", 10), +                .endObject().endObject().endObject().endObject().string();, +, +            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,, +                () -> parser.parse("type", new CompressedXContent(mapping)));, +            assertEquals("Cannot set position_increment_gap on field [field] without positions enabled", e.getMessage());, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java, +            if (positionIncrementGap != POSITION_INCREMENT_GAP_USE_ANALYZER) {, +                if (fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {, +                    throw new IllegalArgumentException("Cannot set position_increment_gap on field [", +                        + name + "] without positions enabled");, +                }, +                fieldType.setIndexAnalyzer(new NamedAnalyzer(fieldType.indexAnalyzer(), positionIncrementGap));, +                fieldType.setSearchAnalyzer(new NamedAnalyzer(fieldType.searchAnalyzer(), positionIncrementGap));, +                fieldType.setSearchQuoteAnalyzer(new NamedAnalyzer(fieldType.searchQuoteAnalyzer(), positionIncrementGap));, +            }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/core/TextFieldMapper.java, +                if (fieldType.indexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) < 0) {, +                    throw new IllegalArgumentException("Cannot set position_increment_gap on field [", +                        + name + "] without positions enabled");, +                }, +++ b/core/src/test/java/org/elasticsearch/index/mapper/core/TextFieldMapperTests.java, +import java.util.Arrays;, +, +    public void testNotIndexedFieldPositionIncrement() throws IOException {, +        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type"), +            .startObject("properties").startObject("field"), +            .field("type", "text"), +            .field("index", false), +            .field("position_increment_gap", 10), +            .endObject().endObject().endObject().endObject().string();, +, +        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,, +            () -> parser.parse("type", new CompressedXContent(mapping)));, +        assertEquals("Cannot set position_increment_gap on field [field] without positions enabled", e.getMessage());, +    }]