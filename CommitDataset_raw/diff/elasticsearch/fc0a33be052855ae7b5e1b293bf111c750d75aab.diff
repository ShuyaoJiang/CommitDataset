[+++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java, +            return weight(balancer, node, index, 0);, +        }, +, +        public float weightShardAdded(Balancer balancer, ModelNode node, String index) {, +            return weight(balancer, node, index, 1);, +        }, +, +        public float weightShardRemoved(Balancer balancer, ModelNode node, String index) {, +            return weight(balancer, node, index, -1);, +        }, +, +        private float weight(Balancer balancer, ModelNode node, String index, int numAdditionalShards) {, +            final float weightShard = (node.numShards() + numAdditionalShards - balancer.avgShardsPerNode());, +            final float weightIndex = (node.numShards(index) + numAdditionalShards - balancer.avgShardsPerNode(index));, +                                // simulate weight if we would add shard to node, +                                float currentWeight = weight.weightShardAdded(this, node, shard.index());, +                for (ShardRouting shard : index.getAllShards()) {, +                            if (maxNode.containsShard(shard)) {, +                                // simulate moving shard from maxNode to minNode, +                                final float delta = weight.weightShardAdded(this, minNode, idx) - weight.weightShardRemoved(this, maxNode, idx);]