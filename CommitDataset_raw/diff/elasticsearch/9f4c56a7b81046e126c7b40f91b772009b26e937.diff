[+++ b/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java, +public class FilteredCollector implements Collector {, +        final Bits bits = DocIdSets.asSequentialAccessBits(context.reader().maxDoc(), set);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java, +public class FilteredCollector implements Collector {, +        final Bits bits = DocIdSets.asSequentialAccessBits(context.reader().maxDoc(), set);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java, +public class FilteredCollector implements Collector {, +        final Bits bits = DocIdSets.asSequentialAccessBits(context.reader().maxDoc(), set);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +++ b/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java, +public class FilteredCollector implements Collector {, +        final Bits bits = DocIdSets.asSequentialAccessBits(context.reader().maxDoc(), set);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +++ b/src/main/java/org/elasticsearch/percolator/QueryCollector.java, +    final BucketCollector aggregatorCollector;, +++ b/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java, +public class FilteredCollector implements Collector {, +        final Bits bits = DocIdSets.asSequentialAccessBits(context.reader().maxDoc(), set);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +++ b/src/main/java/org/elasticsearch/percolator/QueryCollector.java, +    final BucketCollector aggregatorCollector;, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java, +            BucketCollector collector = BucketCollector.wrap(globals);, +                aggregator.postCollection();, +++ b/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java, +public class FilteredCollector implements Collector {, +        final Bits bits = DocIdSets.asSequentialAccessBits(context.reader().maxDoc(), set);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MatchAllDocsQuery;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.TopDocs;, +import org.elasticsearch.percolator.QueryCollector.Count;, +import org.elasticsearch.percolator.QueryCollector.Match;, +import org.elasticsearch.percolator.QueryCollector.MatchAndScore;, +import org.elasticsearch.percolator.QueryCollector.MatchAndSort;, +import static org.elasticsearch.percolator.QueryCollector.count;, +import static org.elasticsearch.percolator.QueryCollector.match;, +import static org.elasticsearch.percolator.QueryCollector.matchAndScore;, +++ b/src/main/java/org/elasticsearch/percolator/QueryCollector.java, +    final BucketCollector aggregatorCollector;, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java, +            BucketCollector collector = BucketCollector.wrap(globals);, +                aggregator.postCollection();, +++ b/src/main/java/org/elasticsearch/search/aggregations/BucketCollector.java]