[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.inject.internal.Nullable;, +    @Nullable, +    private Boolean includeGlobalState;, +, +    SnapshotStatus(final Snapshot snapshot, final State state, final List<SnapshotIndexShardStatus> shards,, +                   final Boolean includeGlobalState) {, +        this.includeGlobalState = includeGlobalState;, +     * Returns true if global state is included in the snapshot, false otherwise., +     * Can be null if this information is unknown., +     */, +    public Boolean includeGlobalState() {, +        return includeGlobalState;, +    }, +, +    /**, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            includeGlobalState = in.readOptionalBoolean();, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeOptionalBoolean(includeGlobalState);, +        }, +    private static final String INCLUDE_GLOBAL_STATE = "include_global_state";, +        if (includeGlobalState != null) {, +            builder.field(INCLUDE_GLOBAL_STATE, includeGlobalState);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.inject.internal.Nullable;, +    @Nullable, +    private Boolean includeGlobalState;, +, +    SnapshotStatus(final Snapshot snapshot, final State state, final List<SnapshotIndexShardStatus> shards,, +                   final Boolean includeGlobalState) {, +        this.includeGlobalState = includeGlobalState;, +     * Returns true if global state is included in the snapshot, false otherwise., +     * Can be null if this information is unknown., +     */, +    public Boolean includeGlobalState() {, +        return includeGlobalState;, +    }, +, +    /**, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            includeGlobalState = in.readOptionalBoolean();, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeOptionalBoolean(includeGlobalState);, +        }, +    private static final String INCLUDE_GLOBAL_STATE = "include_global_state";, +        if (includeGlobalState != null) {, +            builder.field(INCLUDE_GLOBAL_STATE, includeGlobalState);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +                builder.add(new SnapshotStatus(entry.snapshot(), entry.state(),, +                    Collections.unmodifiableList(shardStatusBuilder), entry.includeGlobalState()));, +                    builder.add(new SnapshotStatus(new Snapshot(repositoryName, snapshotId), state,, +                        Collections.unmodifiableList(shardStatusBuilder), snapshotInfo.includeGlobalState()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.inject.internal.Nullable;, +    @Nullable, +    private Boolean includeGlobalState;, +, +    SnapshotStatus(final Snapshot snapshot, final State state, final List<SnapshotIndexShardStatus> shards,, +                   final Boolean includeGlobalState) {, +        this.includeGlobalState = includeGlobalState;, +     * Returns true if global state is included in the snapshot, false otherwise., +     * Can be null if this information is unknown., +     */, +    public Boolean includeGlobalState() {, +        return includeGlobalState;, +    }, +, +    /**, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            includeGlobalState = in.readOptionalBoolean();, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeOptionalBoolean(includeGlobalState);, +        }, +    private static final String INCLUDE_GLOBAL_STATE = "include_global_state";, +        if (includeGlobalState != null) {, +            builder.field(INCLUDE_GLOBAL_STATE, includeGlobalState);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java, +                builder.add(new SnapshotStatus(entry.snapshot(), entry.state(),, +                    Collections.unmodifiableList(shardStatusBuilder), entry.includeGlobalState()));, +                    builder.add(new SnapshotStatus(new Snapshot(repositoryName, snapshotId), state,, +                        Collections.unmodifiableList(shardStatusBuilder), snapshotInfo.includeGlobalState()));, +++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +     * @param includeGlobalState include cluster global state, +                                  List<SnapshotShardFailure> shardFailures, long repositoryStateId, boolean includeGlobalState);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java, +import org.elasticsearch.Version;, +import org.elasticsearch.common.inject.internal.Nullable;, +    @Nullable, +    private Boolean includeGlobalState;, +]