[+++ b/docs/reference/search/request/highlighting.asciidoc, +, +[[explicit-field-order]], +=== Field Highlight Order, +Elasticsearch highlights the fields in the order that they are sent.  Per the, +json spec objects are unordered but if you need to be explicit about the order, +that fields are highlighted then you can use an array for `fields` like this:, +[source,js], +--------------------------------------------------, +    "highlight": {, +        "fields": [, +            {"title":{ /*params*/ }},, +            {"text":{ /*params*/ }}, +        ], +    }, +--------------------------------------------------, +None of the highlighters built into Elasticsearch care about the order that the, +fields are highlighted but a plugin may., +++ b/docs/reference/search/request/highlighting.asciidoc, +, +[[explicit-field-order]], +=== Field Highlight Order, +Elasticsearch highlights the fields in the order that they are sent.  Per the, +json spec objects are unordered but if you need to be explicit about the order, +that fields are highlighted then you can use an array for `fields` like this:, +[source,js], +--------------------------------------------------, +    "highlight": {, +        "fields": [, +            {"title":{ /*params*/ }},, +            {"text":{ /*params*/ }}, +        ], +    }, +--------------------------------------------------, +None of the highlighters built into Elasticsearch care about the order that the, +fields are highlighted but a plugin may., +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Send the fields to be highlighted using a syntax that is specific about the order in which they should be highlighted., +     * @return this for chaining, +     */, +    public SearchRequestBuilder setHighlighterExplicitFieldOrder(boolean explicitFieldOrder) {, +        highlightBuilder().useExplicitFieldOrder(explicitFieldOrder);, +        return this;, +    }, +, +    /**, +++ b/docs/reference/search/request/highlighting.asciidoc, +, +[[explicit-field-order]], +=== Field Highlight Order, +Elasticsearch highlights the fields in the order that they are sent.  Per the, +json spec objects are unordered but if you need to be explicit about the order, +that fields are highlighted then you can use an array for `fields` like this:, +[source,js], +--------------------------------------------------, +    "highlight": {, +        "fields": [, +            {"title":{ /*params*/ }},, +            {"text":{ /*params*/ }}, +        ], +    }, +--------------------------------------------------, +None of the highlighters built into Elasticsearch care about the order that the, +fields are highlighted but a plugin may., +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +     * Send the fields to be highlighted using a syntax that is specific about the order in which they should be highlighted., +     * @return this for chaining, +     */, +    public SearchRequestBuilder setHighlighterExplicitFieldOrder(boolean explicitFieldOrder) {, +        highlightBuilder().useExplicitFieldOrder(explicitFieldOrder);, +        return this;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +    private boolean useExplicitFieldOrder = false;, +, +    /**, +     * Send the fields to be highlighted using a syntax that is specific about the order in which they should be highlighted., +     * @return this for chaining, +     */, +    public HighlightBuilder useExplicitFieldOrder(boolean useExplicitFieldOrder) {, +        this.useExplicitFieldOrder = useExplicitFieldOrder;, +        return this;, +    }, +, +            if (useExplicitFieldOrder) {, +                builder.startArray("fields");, +            } else {, +            }, +                if (useExplicitFieldOrder) {, +                    builder.startObject();, +                }, +                if (useExplicitFieldOrder) {, +            }, +            if (useExplicitFieldOrder) {, +                builder.endArray();, +            } else {, +                builder.endObject();, +            }]