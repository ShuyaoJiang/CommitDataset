[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    @Nullable, +    private Map<String, String> serviceAttributes;, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable Map<String, String> serviceAttributes, @Nullable Settings settings,, +        this.serviceAttributes = serviceAttributes;, +     * The service attributes of the node., +     */, +    @Nullable, +    public Map<String, String> getServiceAttributes() {, +        return this.serviceAttributes;, +    }, +, +    /**, +            Map<String, String> builder = new HashMap<>();, +            int size = in.readVInt();, +            for (int i = 0; i < size; i++) {, +                builder.put(in.readString(), in.readString());, +            }, +            serviceAttributes = unmodifiableMap(builder);, +        }, +        if (in.readBoolean()) {, +        if (getServiceAttributes() == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeVInt(serviceAttributes.size());, +            for (Map.Entry<String, String> entry : serviceAttributes.entrySet()) {, +                out.writeString(entry.getKey());, +                out.writeString(entry.getValue());, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    @Nullable, +    private Map<String, String> serviceAttributes;, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable Map<String, String> serviceAttributes, @Nullable Settings settings,, +        this.serviceAttributes = serviceAttributes;, +     * The service attributes of the node., +     */, +    @Nullable, +    public Map<String, String> getServiceAttributes() {, +        return this.serviceAttributes;, +    }, +, +    /**, +            Map<String, String> builder = new HashMap<>();, +            int size = in.readVInt();, +            for (int i = 0; i < size; i++) {, +                builder.put(in.readString(), in.readString());, +            }, +            serviceAttributes = unmodifiableMap(builder);, +        }, +        if (in.readBoolean()) {, +        if (getServiceAttributes() == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeVInt(serviceAttributes.size());, +            for (Map.Entry<String, String> entry : serviceAttributes.entrySet()) {, +                out.writeString(entry.getKey());, +                out.writeString(entry.getValue());, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            if (nodeInfo.getServiceAttributes() != null) {, +                for (Map.Entry<String, String> nodeAttribute : nodeInfo.getServiceAttributes().entrySet()) {, +                    builder.field(nodeAttribute.getKey(), nodeAttribute.getValue());, +                }, +            }, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java, +    @Nullable, +    private Map<String, String> serviceAttributes;, +    public NodeInfo(Version version, Build build, DiscoveryNode node, @Nullable Map<String, String> serviceAttributes, @Nullable Settings settings,, +        this.serviceAttributes = serviceAttributes;, +     * The service attributes of the node., +     */, +    @Nullable, +    public Map<String, String> getServiceAttributes() {, +        return this.serviceAttributes;, +    }, +, +    /**, +            Map<String, String> builder = new HashMap<>();, +            int size = in.readVInt();, +            for (int i = 0; i < size; i++) {, +                builder.put(in.readString(), in.readString());, +            }, +            serviceAttributes = unmodifiableMap(builder);, +        }, +        if (in.readBoolean()) {, +        if (getServiceAttributes() == null) {, +            out.writeBoolean(false);, +        } else {, +            out.writeBoolean(true);, +            out.writeVInt(serviceAttributes.size());, +            for (Map.Entry<String, String> entry : serviceAttributes.entrySet()) {, +                out.writeString(entry.getKey());, +                out.writeString(entry.getValue());, +            }, +        }]