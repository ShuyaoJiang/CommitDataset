[+++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    for (DocumentMapper mapper : mapperService.docMappers(true)) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    for (DocumentMapper mapper : mapperService.docMappers(true)) {, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java, +        for (DocumentMapper documentMapper : mapperService.docMappers(false)) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    for (DocumentMapper mapper : mapperService.docMappers(true)) {, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java, +        for (DocumentMapper documentMapper : mapperService.docMappers(false)) {, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import com.google.common.base.Predicate;, +public class MapperService extends AbstractIndexComponent  {, +    /**, +     * returns an immutable iterator over current document mappers., +     *, +     * @param includingDefaultMapping indicates whether the iterator should contain the {@link #DEFAULT_MAPPING} document mapper., +     *                                As is this not really an active type, you would typically set this to false, +     */, +    public Iterable<DocumentMapper> docMappers(final boolean includingDefaultMapping) {, +        return  new Iterable<DocumentMapper>() {, +            public Iterator<DocumentMapper> iterator() {, +                final Iterator<DocumentMapper> iterator;, +                if (includingDefaultMapping) {, +                    iterator = mappers.values().iterator();, +                } else {, +                    iterator = Iterators.filter(mappers.values().iterator(), NOT_A_DEFAULT_DOC_MAPPER);, +                return Iterators.unmodifiableIterator(iterator);, +            }, +        };, +    }, +, +    private static final Predicate<DocumentMapper> NOT_A_DEFAULT_DOC_MAPPER = new Predicate<DocumentMapper>() {, +        @Override, +        public boolean apply(DocumentMapper input) {, +            return !DEFAULT_MAPPING.equals(input.type());, +        }, +    };, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    for (DocumentMapper mapper : mapperService.docMappers(true)) {, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java, +        for (DocumentMapper documentMapper : mapperService.docMappers(false)) {, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import com.google.common.base.Predicate;, +public class MapperService extends AbstractIndexComponent  {, +    /**, +     * returns an immutable iterator over current document mappers., +     *, +     * @param includingDefaultMapping indicates whether the iterator should contain the {@link #DEFAULT_MAPPING} document mapper., +     *                                As is this not really an active type, you would typically set this to false, +     */, +    public Iterable<DocumentMapper> docMappers(final boolean includingDefaultMapping) {, +        return  new Iterable<DocumentMapper>() {, +            public Iterator<DocumentMapper> iterator() {, +                final Iterator<DocumentMapper> iterator;, +                if (includingDefaultMapping) {, +                    iterator = mappers.values().iterator();, +                } else {, +                    iterator = Iterators.filter(mappers.values().iterator(), NOT_A_DEFAULT_DOC_MAPPER);, +                return Iterators.unmodifiableIterator(iterator);, +            }, +        };, +    }, +, +    private static final Predicate<DocumentMapper> NOT_A_DEFAULT_DOC_MAPPER = new Predicate<DocumentMapper>() {, +        @Override, +        public boolean apply(DocumentMapper input) {, +            return !DEFAULT_MAPPING.equals(input.type());, +        }, +    };, +++ b/src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java, +        for (DocumentMapper documentMapper : context.mapperService().docMappers(false)) {, +        for (DocumentMapper documentMapper : context.mapperService().docMappers(false)) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                    for (DocumentMapper mapper : mapperService.docMappers(true)) {, +++ b/src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java, +        for (DocumentMapper documentMapper : mapperService.docMappers(false)) {, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import com.google.common.base.Predicate;, +public class MapperService extends AbstractIndexComponent  {, +    /**, +     * returns an immutable iterator over current document mappers., +     *, +     * @param includingDefaultMapping indicates whether the iterator should contain the {@link #DEFAULT_MAPPING} document mapper., +     *                                As is this not really an active type, you would typically set this to false, +     */, +    public Iterable<DocumentMapper> docMappers(final boolean includingDefaultMapping) {, +        return  new Iterable<DocumentMapper>() {, +            public Iterator<DocumentMapper> iterator() {, +                final Iterator<DocumentMapper> iterator;, +                if (includingDefaultMapping) {, +                    iterator = mappers.values().iterator();, +                } else {, +                    iterator = Iterators.filter(mappers.values().iterator(), NOT_A_DEFAULT_DOC_MAPPER);, +                return Iterators.unmodifiableIterator(iterator);, +            }, +        };, +    }, +, +    private static final Predicate<DocumentMapper> NOT_A_DEFAULT_DOC_MAPPER = new Predicate<DocumentMapper>() {]