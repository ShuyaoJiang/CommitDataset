[+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformStateAndStatsTests.java, +    public static DataFrameTransformStateAndStats randomDataFrameTransformStateAndStats(String id) {, +        return new DataFrameTransformStateAndStats(id,, +                DataFrameTransformStateTests.randomDataFrameTransformState(),, +                DataFrameIndexerTransformStatsTests.randomStats());, +    }, +, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformStateAndStatsTests.java, +    public static DataFrameTransformStateAndStats randomDataFrameTransformStateAndStats(String id) {, +        return new DataFrameTransformStateAndStats(id,, +                DataFrameTransformStateTests.randomDataFrameTransformState(),, +                DataFrameIndexerTransformStatsTests.randomStats());, +    }, +, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/DataFrameFeatureSet.java, +import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformStateAndStats;, +import java.util.List;, +                    client.execute(GetDataFrameTransformsStatsAction.INSTANCE, transformStatsRequest,, +                                listener.onResponse(createUsage(available(), enabled(), transforms.getTransformConfigurations(),, +                                        transformStatsResponse.getTransformsStateAndStats()));, +                            }, listener::onFailure));, +                },, +                listener::onFailure, +        ));, +    }, +, +    static DataFrameFeatureSetUsage createUsage(boolean available, boolean enabled,, +                                                List<DataFrameTransformConfig> transforms,, +                                                List<DataFrameTransformStateAndStats> transformsStateAndStats) {, +, +        Set<String> transformIds = transforms.stream(), +                .map(DataFrameTransformConfig::getId), +                .collect(Collectors.toSet());, +, +        transformsStateAndStats.forEach(singleResult -> {, +        return new DataFrameFeatureSetUsage(available, enabled, transformsCountByState, accumulatedStats);, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/dataframe/transforms/DataFrameTransformStateAndStatsTests.java, +    public static DataFrameTransformStateAndStats randomDataFrameTransformStateAndStats(String id) {, +        return new DataFrameTransformStateAndStats(id,, +                DataFrameTransformStateTests.randomDataFrameTransformState(),, +                DataFrameIndexerTransformStatsTests.randomStats());, +    }, +, +++ b/x-pack/plugin/data-frame/src/main/java/org/elasticsearch/xpack/dataframe/DataFrameFeatureSet.java, +import org.elasticsearch.xpack.core.dataframe.transforms.DataFrameTransformStateAndStats;, +import java.util.List;, +                    client.execute(GetDataFrameTransformsStatsAction.INSTANCE, transformStatsRequest,, +                                listener.onResponse(createUsage(available(), enabled(), transforms.getTransformConfigurations(),, +                                        transformStatsResponse.getTransformsStateAndStats()));, +                            }, listener::onFailure));, +                },, +                listener::onFailure, +        ));, +    }, +, +    static DataFrameFeatureSetUsage createUsage(boolean available, boolean enabled,, +                                                List<DataFrameTransformConfig> transforms,, +                                                List<DataFrameTransformStateAndStats> transformsStateAndStats) {, +, +        Set<String> transformIds = transforms.stream(), +                .map(DataFrameTransformConfig::getId), +                .collect(Collectors.toSet());, +, +        transformsStateAndStats.forEach(singleResult -> {, +        return new DataFrameFeatureSetUsage(available, enabled, transformsCountByState, accumulatedStats);, +++ b/x-pack/plugin/data-frame/src/test/java/org/elasticsearch/xpack/dataframe/DataFrameFeatureSetTests.java, +import org.elasticsearch.xpack.core.dataframe.DataFrameFeatureSetUsage;, +    public void testUsage() throws IOException {, +        int count = randomIntBetween(0, 10);, +        int uniqueId = 0;, +        for (int i = 0; i < count; ++i) {, +            transformsStateAndStats.add(, +                    DataFrameTransformStateAndStatsTests.randomDataFrameTransformStateAndStats("df-" + Integer.toString(uniqueId++)));, +        count = randomIntBetween(0, 10);, +        for (int i = 0; i < count; ++i) {, +            transformConfigWithoutTasks.add(, +                    DataFrameTransformConfigTests.randomDataFrameTransformConfig("df-" + Integer.toString(uniqueId++)));, +        boolean enabled = randomBoolean();, +        boolean available = randomBoolean();, +        DataFrameFeatureSetUsage usage = DataFrameFeatureSet.createUsage(available, enabled, allConfigs, transformsStateAndStats);, +        assertEquals(enabled, usage.enabled());, +            assertEquals(available, (boolean) XContentMapValues.extractValue("available", usageAsMap));, +                // use default constructed stats object for assertions if transformsStateAndStats is empty, +                DataFrameIndexerTransformStats combinedStats = new DataFrameIndexerTransformStats();, +                if (transformsStateAndStats.isEmpty() == false) {, +                    combinedStats = transformsStateAndStats.stream().map(x -> x.getTransformStats()).reduce((l, r) -> l.merge(r)).get();, +                }, +                assertEquals(toIntExact(combinedStats.getIndexTotal()),, +                        XContentMapValues.extractValue("stats.index_total", usageAsMap));]