[+++ b/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        DiscoveryNode masterNode = clusterService.state().nodes().masterNode();, +        if (masterNode == null) {, +            logger.debug("can't send shard failed for {}. no master known.", shardRouting);, +        }, +        shardFailed(shardRouting, indexUUID, reason, masterNode);, +    }, +, +    public void shardFailed(final ShardRouting shardRouting, final String indexUUID, final String reason, final DiscoveryNode masterNode) throws ElasticsearchException {, +        if (clusterService.localNode().equals(masterNode)) {, +                    logger.warn("failed to send failed shard to {}", exp, masterNode);, +        DiscoveryNode masterNode = clusterService.state().nodes().masterNode();, +        if (masterNode == null) {, +            logger.debug("can't send shard started for {}. no master known.", shardRouting);, +        }, +        shardStarted(shardRouting, indexUUID, reason, masterNode);, +    }, +, +    public void shardStarted(final ShardRouting shardRouting, String indexUUID, final String reason, final DiscoveryNode masterNode) throws ElasticsearchException {, +        if (clusterService.localNode().equals(masterNode)) {, +            transportService.sendRequest(masterNode,, +                    logger.warn("failed to send shard started to [{}]", exp, masterNode);, +++ b/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        DiscoveryNode masterNode = clusterService.state().nodes().masterNode();, +        if (masterNode == null) {, +            logger.debug("can't send shard failed for {}. no master known.", shardRouting);, +        }, +        shardFailed(shardRouting, indexUUID, reason, masterNode);, +    }, +, +    public void shardFailed(final ShardRouting shardRouting, final String indexUUID, final String reason, final DiscoveryNode masterNode) throws ElasticsearchException {, +        if (clusterService.localNode().equals(masterNode)) {, +                    logger.warn("failed to send failed shard to {}", exp, masterNode);, +        DiscoveryNode masterNode = clusterService.state().nodes().masterNode();, +        if (masterNode == null) {, +            logger.debug("can't send shard started for {}. no master known.", shardRouting);, +        }, +        shardStarted(shardRouting, indexUUID, reason, masterNode);, +    }, +, +    public void shardStarted(final ShardRouting shardRouting, String indexUUID, final String reason, final DiscoveryNode masterNode) throws ElasticsearchException {, +        if (clusterService.localNode().equals(masterNode)) {, +            transportService.sendRequest(masterNode,, +                    logger.warn("failed to send shard started to [{}]", exp, masterNode);, +++ b/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +                    if (nodes.masterNode() != null) {, +                                "master " + nodes.masterNode() + " marked shard as started, but shard has not been created, mark shard as failed",, +                                nodes.masterNode(), +                        );, +                    }, +                    logger.trace("{} master marked shard as initializing, but shard has state [{}], resending shard started to {}",, +                            indexShard.shardId(), indexShard.state(), nodes.masterNode());, +                if (nodes.masterNode() != null) {, +                            "master " + nodes.masterNode() + " marked shard as initializing, but shard state is [" + indexShard.state() + "], mark shard as started",, +                            nodes.masterNode());, +                }, +                if (nodes.masterNode() != null) {, +                    shardStateAction.shardFailed(shardRouting, indexMetaData.getUUID(), "Failed to create shard, message [" + detailedMessage(e) + "]",, +                            nodes.masterNode(), +                    );, +                } else {, +                    logger.debug("can't send shard failed for {} as there is no current master", shardRouting.shardId());, +                }]