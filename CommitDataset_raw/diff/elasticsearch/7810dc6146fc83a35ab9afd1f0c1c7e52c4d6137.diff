[+++ b/docs/en/rest-api/rollup/rollup-job-config.asciidoc, +  An array of metrics to collect for the field.  At least one metric must be configured.  Acceptable metrics are min/max/sum/avg/value_count., +++ b/docs/en/rest-api/rollup/rollup-job-config.asciidoc, +  An array of metrics to collect for the field.  At least one metric must be configured.  Acceptable metrics are min/max/sum/avg/value_count., +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/RollupField.java, +import org.elasticsearch.search.aggregations.metrics.avg.AvgAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.max.MaxAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.min.MinAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.sum.SumAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCountAggregationBuilder;, +import java.util.Arrays;, +import java.util.List;, +, +    public static final List<String> SUPPORTED_METRICS = Arrays.asList(MaxAggregationBuilder.NAME, MinAggregationBuilder.NAME,, +            SumAggregationBuilder.NAME, AvgAggregationBuilder.NAME, ValueCountAggregationBuilder.NAME);, +++ b/docs/en/rest-api/rollup/rollup-job-config.asciidoc, +  An array of metrics to collect for the field.  At least one metric must be configured.  Acceptable metrics are min/max/sum/avg/value_count., +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/RollupField.java, +import org.elasticsearch.search.aggregations.metrics.avg.AvgAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.max.MaxAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.min.MinAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.sum.SumAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCountAggregationBuilder;, +import java.util.Arrays;, +import java.util.List;, +, +    public static final List<String> SUPPORTED_METRICS = Arrays.asList(MaxAggregationBuilder.NAME, MinAggregationBuilder.NAME,, +            SumAggregationBuilder.NAME, AvgAggregationBuilder.NAME, ValueCountAggregationBuilder.NAME);, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/MetricConfig.java, +    private static final ParseField VALUE_COUNT = new ParseField("value_count");, +            } else if (metric.equals(VALUE_COUNT.getPreferredName())) {, +                // TODO allow non-numeric value_counts., +                // Hardcoding this is fine for now since the job validation guarantees that all metric fields are numerics, +                newBuilder = new ValueCountAggregationBuilder(, +                        RollupField.formatFieldName(field, ValueCountAggregationBuilder.NAME, RollupField.VALUE), ValueType.NUMERIC);, +                if (RollupField.SUPPORTED_METRICS.contains(m) == false) {, +                            "Supported metrics include: " + RollupField.SUPPORTED_METRICS);, +++ b/docs/en/rest-api/rollup/rollup-job-config.asciidoc, +  An array of metrics to collect for the field.  At least one metric must be configured.  Acceptable metrics are min/max/sum/avg/value_count., +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/RollupField.java, +import org.elasticsearch.search.aggregations.metrics.avg.AvgAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.max.MaxAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.min.MinAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.sum.SumAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCountAggregationBuilder;, +import java.util.Arrays;, +import java.util.List;, +, +    public static final List<String> SUPPORTED_METRICS = Arrays.asList(MaxAggregationBuilder.NAME, MinAggregationBuilder.NAME,, +            SumAggregationBuilder.NAME, AvgAggregationBuilder.NAME, ValueCountAggregationBuilder.NAME);, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/MetricConfig.java, +    private static final ParseField VALUE_COUNT = new ParseField("value_count");, +            } else if (metric.equals(VALUE_COUNT.getPreferredName())) {, +                // TODO allow non-numeric value_counts., +                // Hardcoding this is fine for now since the job validation guarantees that all metric fields are numerics, +                newBuilder = new ValueCountAggregationBuilder(, +                        RollupField.formatFieldName(field, ValueCountAggregationBuilder.NAME, RollupField.VALUE), ValueType.NUMERIC);, +                if (RollupField.SUPPORTED_METRICS.contains(m) == false) {, +                            "Supported metrics include: " + RollupField.SUPPORTED_METRICS);, +++ b/plugin/core/src/test/java/org/elasticsearch/xpack/core/rollup/ConfigTestHelpers.java, +        if (ESTestCase.randomBoolean()) {, +            metrics.add("value_count");, +        }, +++ b/docs/en/rest-api/rollup/rollup-job-config.asciidoc, +  An array of metrics to collect for the field.  At least one metric must be configured.  Acceptable metrics are min/max/sum/avg/value_count., +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/RollupField.java, +import org.elasticsearch.search.aggregations.metrics.avg.AvgAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.max.MaxAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.min.MinAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.sum.SumAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCountAggregationBuilder;, +import java.util.Arrays;, +import java.util.List;, +, +    public static final List<String> SUPPORTED_METRICS = Arrays.asList(MaxAggregationBuilder.NAME, MinAggregationBuilder.NAME,, +            SumAggregationBuilder.NAME, AvgAggregationBuilder.NAME, ValueCountAggregationBuilder.NAME);, +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job/MetricConfig.java, +    private static final ParseField VALUE_COUNT = new ParseField("value_count");, +            } else if (metric.equals(VALUE_COUNT.getPreferredName())) {, +                // TODO allow non-numeric value_counts., +                // Hardcoding this is fine for now since the job validation guarantees that all metric fields are numerics, +                newBuilder = new ValueCountAggregationBuilder(, +                        RollupField.formatFieldName(field, ValueCountAggregationBuilder.NAME, RollupField.VALUE), ValueType.NUMERIC);, +                if (RollupField.SUPPORTED_METRICS.contains(m) == false) {, +                            "Supported metrics include: " + RollupField.SUPPORTED_METRICS);, +++ b/plugin/core/src/test/java/org/elasticsearch/xpack/core/rollup/ConfigTestHelpers.java, +        if (ESTestCase.randomBoolean()) {, +            metrics.add("value_count");, +        }, +++ b/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/Rollup.java, +import org.elasticsearch.persistent.PersistentTasksExecutor;, +++ b/docs/en/rest-api/rollup/rollup-job-config.asciidoc, +  An array of metrics to collect for the field.  At least one metric must be configured.  Acceptable metrics are min/max/sum/avg/value_count., +++ b/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/RollupField.java, +import org.elasticsearch.search.aggregations.metrics.avg.AvgAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.max.MaxAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.min.MinAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.sum.SumAggregationBuilder;, +import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCountAggregationBuilder;, +import java.util.Arrays;]