[+++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +++ b/src/main/java/org/elasticsearch/common/text/BytesText.java, +import java.util.Comparator;, +, +, +    @Override, +    public int compareTo(Text text) {, +       return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(text.bytes(), text.bytes());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +++ b/src/main/java/org/elasticsearch/common/text/BytesText.java, +import java.util.Comparator;, +, +, +    @Override, +    public int compareTo(Text text) {, +       return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(text.bytes(), text.bytes());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/text/StringAndBytesText.java, +, +    @Override, +    public int compareTo(Text other) {, +        if (text == null) {, +            return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(bytes, other.bytes());, +        } else {, +            return text.compareTo(other.string());, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +++ b/src/main/java/org/elasticsearch/common/text/BytesText.java, +import java.util.Comparator;, +, +, +    @Override, +    public int compareTo(Text text) {, +       return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(text.bytes(), text.bytes());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/text/StringAndBytesText.java, +, +    @Override, +    public int compareTo(Text other) {, +        if (text == null) {, +            return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(bytes, other.bytes());, +        } else {, +            return text.compareTo(other.string());, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/text/StringText.java, +, +    @Override, +    public int compareTo(Text text) {, +        return this.text.compareTo(text.string());, +    }, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +++ b/src/main/java/org/elasticsearch/common/text/BytesText.java, +import java.util.Comparator;, +, +, +    @Override, +    public int compareTo(Text text) {, +       return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(text.bytes(), text.bytes());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/text/StringAndBytesText.java, +, +    @Override, +    public int compareTo(Text other) {, +        if (text == null) {, +            return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(bytes, other.bytes());, +        } else {, +            return text.compareTo(other.string());, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/text/StringText.java, +, +    @Override, +    public int compareTo(Text text) {, +        return this.text.compareTo(text.string());, +    }, +++ b/src/main/java/org/elasticsearch/common/text/Text.java, +public interface Text extends Comparable<Text> {, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +++ b/src/main/java/org/elasticsearch/common/text/BytesText.java, +import java.util.Comparator;, +, +, +    @Override, +    public int compareTo(Text text) {, +       return UTF8SortedAsUnicodeComparator.utf8SortedAsUnicodeSortOrder.compare(text.bytes(), text.bytes());, +    }, +, +++ b/src/main/java/org/elasticsearch/common/text/StringAndBytesText.java, +, +    @Override, +    public int compareTo(Text other) {, +        if (text == null) {]