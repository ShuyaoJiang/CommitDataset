[+++ b/docs/en/settings/monitoring-settings.asciidoc, +Sets the timeout for collecting the cluster statistics. Defaults to `10s`., +Sets the timeout for collecting index statistics. Defaults to `10s`., +Sets the timeout for collecting total indices statistics. Defaults to `10s`., +Sets the timeout for collecting the recovery information. Defaults to `10s`., +++ b/docs/en/settings/monitoring-settings.asciidoc, +Sets the timeout for collecting the cluster statistics. Defaults to `10s`., +Sets the timeout for collecting index statistics. Defaults to `10s`., +Sets the timeout for collecting total indices statistics. Defaults to `10s`., +Sets the timeout for collecting the recovery information. Defaults to `10s`., +++ b/plugin/src/main/java/org/elasticsearch/license/XPackLicenseState.java, +import org.elasticsearch.xpack.monitoring.Monitoring;, +                                Monitoring.HISTORY_DURATION.getDefault(Settings.EMPTY).days(), newMode), +++ b/docs/en/settings/monitoring-settings.asciidoc, +Sets the timeout for collecting the cluster statistics. Defaults to `10s`., +Sets the timeout for collecting index statistics. Defaults to `10s`., +Sets the timeout for collecting total indices statistics. Defaults to `10s`., +Sets the timeout for collecting the recovery information. Defaults to `10s`., +++ b/plugin/src/main/java/org/elasticsearch/license/XPackLicenseState.java, +import org.elasticsearch.xpack.monitoring.Monitoring;, +                                Monitoring.HISTORY_DURATION.getDefault(Settings.EMPTY).days(), newMode), +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +        settings.addAll(monitoring.getSettings());, +        filters.addAll(monitoring.getSettingsFilter());, +++ b/docs/en/settings/monitoring-settings.asciidoc, +Sets the timeout for collecting the cluster statistics. Defaults to `10s`., +Sets the timeout for collecting index statistics. Defaults to `10s`., +Sets the timeout for collecting total indices statistics. Defaults to `10s`., +Sets the timeout for collecting the recovery information. Defaults to `10s`., +++ b/plugin/src/main/java/org/elasticsearch/license/XPackLicenseState.java, +import org.elasticsearch.xpack.monitoring.Monitoring;, +                                Monitoring.HISTORY_DURATION.getDefault(Settings.EMPTY).days(), newMode), +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +        settings.addAll(monitoring.getSettings());, +        filters.addAll(monitoring.getSettingsFilter());, +++ b/plugin/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java, +import org.elasticsearch.common.settings.Setting;, +import org.elasticsearch.common.unit.TimeValue;, +import static org.elasticsearch.common.settings.Setting.timeSetting;, +    /**, +     * The minimum amount of time allowed for the history duration., +     */, +    public static final TimeValue HISTORY_DURATION_MINIMUM = TimeValue.timeValueHours(24);, +, +    /**, +     * The default retention duration of the monitoring history data., +     * <p>, +     * Expected values:, +     * <ul>, +     * <li>Default: 7 days</li>, +     * <li>Minimum: 1 day</li>, +     * </ul>, +     *, +     * @see #HISTORY_DURATION_MINIMUM, +     */, +    public static final Setting<TimeValue> HISTORY_DURATION = timeSetting("xpack.monitoring.history.duration",, +                                                                          TimeValue.timeValueHours(7 * 24), // default value (7 days), +                                                                          HISTORY_DURATION_MINIMUM,         // minimum value, +                                                                          Setting.Property.Dynamic, Setting.Property.NodeScope);, +, +        collectors.add(new IndexStatsCollector(settings, clusterService, licenseState, client));, +        collectors.add(new ClusterStatsCollector(settings, clusterService, licenseState, client, licenseService));, +        collectors.add(new ShardsCollector(settings, clusterService, licenseState));, +        collectors.add(new NodeStatsCollector(settings, clusterService, licenseState, client));, +        collectors.add(new IndexRecoveryCollector(settings, clusterService, licenseState, client));, +        collectors.add(new JobStatsCollector(settings, clusterService, licenseState, client));, +        return Arrays.asList(monitoringService, exporters, cleanerService);, +, +    public List<Setting<?>> getSettings() {, +        return Collections.unmodifiableList(, +                Arrays.asList(HISTORY_DURATION,, +                              MonitoringService.INTERVAL,, +                              Exporters.EXPORTERS_SETTINGS,, +                              Collector.INDICES,, +                              ClusterStatsCollector.CLUSTER_STATS_TIMEOUT,, +                              IndexRecoveryCollector.INDEX_RECOVERY_TIMEOUT,, +                              IndexRecoveryCollector.INDEX_RECOVERY_ACTIVE_ONLY,, +                              IndexStatsCollector.INDEX_STATS_TIMEOUT,, +                              JobStatsCollector.JOB_STATS_TIMEOUT,, +                              NodeStatsCollector.NODE_STATS_TIMEOUT), +        );, +    }, +, +    public List<String> getSettingsFilter() {, +        final String exportersKey = Exporters.EXPORTERS_SETTINGS.getKey();, +        return Collections.unmodifiableList(Arrays.asList(exportersKey + "*.auth.*", exportersKey + "*.ssl.*"));, +    }, +, +++ b/docs/en/settings/monitoring-settings.asciidoc, +Sets the timeout for collecting the cluster statistics. Defaults to `10s`., +Sets the timeout for collecting index statistics. Defaults to `10s`., +Sets the timeout for collecting total indices statistics. Defaults to `10s`., +Sets the timeout for collecting the recovery information. Defaults to `10s`., +++ b/plugin/src/main/java/org/elasticsearch/license/XPackLicenseState.java, +import org.elasticsearch.xpack.monitoring.Monitoring;, +                                Monitoring.HISTORY_DURATION.getDefault(Settings.EMPTY).days(), newMode), +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +        settings.addAll(monitoring.getSettings());, +        filters.addAll(monitoring.getSettingsFilter());, +++ b/plugin/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java]