[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.UpdateModelSnapshotRequest;, +    static Request updateModelSnapshot(UpdateModelSnapshotRequest updateModelSnapshotRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(updateModelSnapshotRequest.getJobId()), +            .addPathPartAsIs("model_snapshots"), +            .addPathPart(updateModelSnapshotRequest.getSnapshotId()), +            .addPathPartAsIs("_update"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(updateModelSnapshotRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.UpdateModelSnapshotRequest;, +    static Request updateModelSnapshot(UpdateModelSnapshotRequest updateModelSnapshotRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(updateModelSnapshotRequest.getJobId()), +            .addPathPartAsIs("model_snapshots"), +            .addPathPart(updateModelSnapshotRequest.getSnapshotId()), +            .addPathPartAsIs("_update"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(updateModelSnapshotRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.UpdateModelSnapshotRequest;, +import org.elasticsearch.client.ml.UpdateModelSnapshotResponse;, +     * Updates a snapshot for a Machine Learning Job., +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html">, +     * ML UPDATE model snapshots documentation</a>, +     *, +     * @param request The request, +     * @param options Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @throws IOException when there is a serialization issue sending the request or receiving the response, +     */, +    public UpdateModelSnapshotResponse updateModelSnapshot(UpdateModelSnapshotRequest request,, +                                                             RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request,, +            MLRequestConverters::updateModelSnapshot,, +            options,, +            UpdateModelSnapshotResponse::fromXContent,, +            Collections.emptySet());, +    }, +, +    /**, +     * Updates a snapshot for a Machine Learning Job, notifies listener once the requested snapshots are retrieved., +     * <p>, +     * For additional info, +     * see <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html">, +     * ML UPDATE model snapshots documentation</a>, +     *, +     * @param request  The request, +     * @param options  Additional request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener Listener to be notified upon request completion, +     */, +    public void updateModelSnapshotAsync(UpdateModelSnapshotRequest request, RequestOptions options,, +                                       ActionListener<UpdateModelSnapshotResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request,, +            MLRequestConverters::updateModelSnapshot,, +            options,, +            UpdateModelSnapshotResponse::fromXContent,, +            listener,, +            Collections.emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +import org.elasticsearch.client.ml.UpdateModelSnapshotRequest;, +    static Request updateModelSnapshot(UpdateModelSnapshotRequest updateModelSnapshotRequest) throws IOException {, +        String endpoint = new EndpointBuilder(), +            .addPathPartAsIs("_xpack"), +            .addPathPartAsIs("ml"), +            .addPathPartAsIs("anomaly_detectors"), +            .addPathPart(updateModelSnapshotRequest.getJobId()), +            .addPathPartAsIs("model_snapshots"), +            .addPathPart(updateModelSnapshotRequest.getSnapshotId()), +            .addPathPartAsIs("_update"), +            .build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        request.setEntity(createEntity(updateModelSnapshotRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MachineLearningClient.java, +import org.elasticsearch.client.ml.UpdateModelSnapshotRequest;, +import org.elasticsearch.client.ml.UpdateModelSnapshotResponse;, +     * Updates a snapshot for a Machine Learning Job., +     * <p>]