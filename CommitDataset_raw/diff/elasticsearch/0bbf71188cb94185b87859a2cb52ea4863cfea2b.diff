[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/single/SinglePingRequest.java, +    protected String type;, +    protected String id;, +, +        super(index);, +        super(index);, +        this.type = type;, +        this.id = id;, +        type = in.readUTF();, +        id = in.readUTF();, +        out.writeUTF(type);, +        out.writeUTF(id);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/single/SinglePingRequest.java, +    protected String type;, +    protected String id;, +, +        super(index);, +        super(index);, +        this.type = type;, +        this.id = id;, +        type = in.readUTF();, +        id = in.readUTF();, +        out.writeUTF(type);, +        out.writeUTF(id);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/single/TransportSinglePingAction.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.routing.ShardIterator;, +    @Override protected ShardIterator shards(ClusterState clusterState, SinglePingRequest request) throws ElasticSearchException {, +        return clusterService.operationRouting(), +                .indexShards(clusterService.state(), request.index(), request.type, request.id, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/single/SinglePingRequest.java, +    protected String type;, +    protected String id;, +, +        super(index);, +        super(index);, +        this.type = type;, +        this.id = id;, +        type = in.readUTF();, +        id = in.readUTF();, +        out.writeUTF(type);, +        out.writeUTF(id);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/cluster/ping/single/TransportSinglePingAction.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.routing.ShardIterator;, +    @Override protected ShardIterator shards(ClusterState clusterState, SinglePingRequest request) throws ElasticSearchException {, +        return clusterService.operationRouting(), +                .indexShards(clusterService.state(), request.index(), request.type, request.id, null);, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/GetRequest.java, +import org.elasticsearch.action.ActionRequestValidationException;, +import org.elasticsearch.action.Actions;, +    protected String type;, +    protected String id;, +    protected String routing;, +    protected String preference;, +, +        super(index);, +        this.type = "_all";, +        super(index);, +        this.type = type;, +        this.id = id;, +    }, +, +    @Override public ActionRequestValidationException validate() {, +        ActionRequestValidationException validationException = super.validate();, +        if (type == null) {, +            validationException = Actions.addValidationError("type is missing", validationException);, +        }, +        if (id == null) {, +            validationException = Actions.addValidationError("id is missing", validationException);, +        }, +        return validationException;, +    public String type() {, +        return type;, +    }, +, +    public String id() {, +        return id;, +    }, +, +    public String routing() {, +        return this.routing;, +    }, +, +    public String preference() {, +        return this.preference;, +    }, +, +, +        type = in.readUTF();, +        id = in.readUTF();, +        if (in.readBoolean()) {, +            routing = in.readUTF();, +        }, +        if (in.readBoolean()) {, +            preference = in.readUTF();]