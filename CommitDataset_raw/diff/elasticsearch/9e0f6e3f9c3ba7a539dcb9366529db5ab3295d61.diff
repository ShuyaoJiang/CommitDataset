[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +                final SuggestionSearchContext context = suggestPhase.parseElement().parseInternal(parser, indexService.newQueryShardContext());, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +                final SuggestionSearchContext context = suggestPhase.parseElement().parseInternal(parser, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +            super(msg);, +                                        public void onFailure(Throwable t) {, +                                            // TODO: handle catastrophic non-channel failures, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +                final SuggestionSearchContext context = suggestPhase.parseElement().parseInternal(parser, indexService.newQueryShardContext());, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +            super(msg);, +                                        public void onFailure(Throwable t) {, +                                            // TODO: handle catastrophic non-channel failures, +, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +        // handle the wrapper system property, if its a service, don't run as a service, +        if (System.getProperty("wrapper.service", "XXX").equalsIgnoreCase("true")) {, +            foreground = false;, +        }, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/ingest/IngestActionFilter.java, +        executionService.execute(indexRequest, t -> {, +        executionService.execute(() -> bulkRequestModifier, (indexRequest, throwable) -> {, +++ b/core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +     * set a new source using a {@link org.elasticsearch.search.suggest.SuggestionBuilder}, +    public SuggestRequest suggest(SuggestionBuilder suggestionBuilder) {, +++ b/core/src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java, +import org.elasticsearch.search.suggest.SuggestionBuilder;, +    public SuggestRequestBuilder addSuggestion(SuggestionBuilder<?> suggestion) {]