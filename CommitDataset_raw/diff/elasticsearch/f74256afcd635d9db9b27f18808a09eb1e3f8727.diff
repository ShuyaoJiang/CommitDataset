[+++ b/src/main/java/org/elasticsearch/Version.java, +    public static Version fromId(int id) {, +++ b/src/main/java/org/elasticsearch/Version.java, +    public static Version fromId(int id) {, +++ b/src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java, +    private static final byte[] INTERNAL_HEADER = new byte[]{1, 9, 8, 4};, +, +                out.writeBytes(INTERNAL_HEADER);, +                Version.writeVersion(Version.CURRENT, out);, +                    XContentType xContentType = null;, +                            boolean internal = false;, +                            if (datagramPacketReceive.getLength() > 4) {, +                                int counter = 0;, +                                for (; counter < INTERNAL_HEADER.length; counter++) {, +                                    if (datagramPacketReceive.getData()[datagramPacketReceive.getOffset() + counter] != INTERNAL_HEADER[counter]) {, +                                        break;, +                                    }, +                                }, +                                if (counter == INTERNAL_HEADER.length) {, +                                    internal = true;, +                                }, +                            }, +                            if (internal) {, +                                StreamInput input = CachedStreamInput.cachedHandles(new BytesStreamInput(datagramPacketReceive.getData(), datagramPacketReceive.getOffset() + INTERNAL_HEADER.length, datagramPacketReceive.getLength()));, +                                Version version = Version.readVersion(input);, +                                id = input.readInt();, +                                clusterName = ClusterName.readClusterName(input);, +                                requestingNodeX = readNode(input);, +                            } else {, +                                    throw new ElasticSearchIllegalStateException("failed multicast message, probably message from previous version");, +                                }]