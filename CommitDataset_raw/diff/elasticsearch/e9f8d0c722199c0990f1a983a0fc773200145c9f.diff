[+++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.store.Directory;, +    public static final Version VERSION = Version.LUCENE_40;, +        if ("4.0".equals(version)) {, +            return Version.LUCENE_40;, +        }, +    /**, +     * Reads the segments infos, returning null if it doesn't exists, +     */, +    @Nullable, +    public static SegmentInfos readSegmentInfosIfExists(Directory directory) {, +        try {, +            return readSegmentInfos(directory);, +        } catch (IOException e) {, +            return null;, +        }, +    }, +, +    /**, +     * Reads the segments infos, failing if it fails to load, +     */, +    public static SegmentInfos readSegmentInfos(Directory directory) throws IOException {, +        final SegmentInfos sis = new SegmentInfos();, +        sis.read(directory);, +        return sis;, +    }, +, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.store.Directory;, +    public static final Version VERSION = Version.LUCENE_40;, +        if ("4.0".equals(version)) {, +            return Version.LUCENE_40;, +        }, +    /**, +     * Reads the segments infos, returning null if it doesn't exists, +     */, +    @Nullable, +    public static SegmentInfos readSegmentInfosIfExists(Directory directory) {, +        try {, +            return readSegmentInfos(directory);, +        } catch (IOException e) {, +            return null;, +        }, +    }, +, +    /**, +     * Reads the segments infos, failing if it fails to load, +     */, +    public static SegmentInfos readSegmentInfos(Directory directory) throws IOException {, +        final SegmentInfos sis = new SegmentInfos();, +        sis.read(directory);, +        return sis;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +                    Map<String, String> commitUserData = Lucene.readSegmentInfos(store.directory()).getUserData();, +                                Map<String, String> commitUserData = Lucene.readSegmentInfos(store.directory()).getUserData();, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.store.Directory;, +    public static final Version VERSION = Version.LUCENE_40;, +        if ("4.0".equals(version)) {, +            return Version.LUCENE_40;, +        }, +    /**, +     * Reads the segments infos, returning null if it doesn't exists, +     */, +    @Nullable, +    public static SegmentInfos readSegmentInfosIfExists(Directory directory) {, +        try {, +            return readSegmentInfos(directory);, +        } catch (IOException e) {, +            return null;, +        }, +    }, +, +    /**, +     * Reads the segments infos, failing if it fails to load, +     */, +    public static SegmentInfos readSegmentInfos(Directory directory) throws IOException {, +        final SegmentInfos sis = new SegmentInfos();, +        sis.read(directory);, +        return sis;, +    }, +, +++ b/src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java, +                    Map<String, String> commitUserData = Lucene.readSegmentInfos(store.directory()).getUserData();, +                                Map<String, String> commitUserData = Lucene.readSegmentInfos(store.directory()).getUserData();, +++ b/src/main/java/org/elasticsearch/index/gateway/blobstore/BlobStoreIndexShardGateway.java, +import org.apache.lucene.index.DirectoryReader;, +import org.elasticsearch.common.lucene.Lucene;, +            if (DirectoryReader.indexExists(store.directory())) {, +                version = Lucene.readSegmentInfos(store.directory()).getVersion();, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.store.Directory;, +    public static final Version VERSION = Version.LUCENE_40;, +        if ("4.0".equals(version)) {, +            return Version.LUCENE_40;, +        }, +    /**, +     * Reads the segments infos, returning null if it doesn't exists]