[+++ b/src/main/java/org/elasticsearch/index/query/functionscore/gauss/GaussDecayFunctionParser.java, +            return Math.exp(0.5 * Math.pow(value, 2.0) / scale);, +++ b/src/main/java/org/elasticsearch/index/query/functionscore/gauss/GaussDecayFunctionParser.java, +            return Math.exp(0.5 * Math.pow(value, 2.0) / scale);, +++ b/src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java, +    static final String DOUBLE_FIELD = "double_field";, +    static final XContentBuilder MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD;, +        XContentBuilder mappingWithDoubleAndGeoPointAndTestField;, +                    .field(DOUBLE_FIELD, Math.E), +            mappingWithDoubleAndGeoPointAndTestField = jsonBuilder().startObject(), +                    .startObject(DOUBLE_FIELD), +                    .field("type", "double"), +        MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD = mappingWithDoubleAndGeoPointAndTestField;, +                TYPE, MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD, +                                        .add(fieldValueFactorFunction(DOUBLE_FIELD).modifier(FieldValueFactorFunction.Modifier.LN).setWeight(2)), +                equalTo("6.0 = (MATCH) function score, product of:\n  1.0 = (MATCH) ConstantScore(text_field:value), product of:\n    1.0 = boost\n    1.0 = queryNorm\n  6.0 = (MATCH) Math.min of\n    6.0 = (MATCH) function score, score mode [multiply]\n      1.0 = (MATCH) function score, product of:\n        1.0 = match filter: *:*\n        1.0 = (MATCH) Function for field geo_point_field:\n          1.0 = exp(-0.5*pow(MIN of: [Math.max(arcDistance([10.0, 20.0](=doc value),[10.0, 20.0](=origin)) - 0.0(=offset), 0)],2.0)/7.213475204444817E11)\n      2.0 = (MATCH) function score, product of:\n        1.0 = match filter: *:*\n        2.0 = (MATCH) product of:\n          1.0 = field value function: ln(doc['double_field'].value * factor=1.0)\n          2.0 = weight\n      3.0 = (MATCH) function score, product of:\n        1.0 = match filter: *:*\n        3.0 = (MATCH) product of:\n          1.0 = script score function, computed with script:\"_index['text_field']['value'].tf()\n          3.0 = weight\n    3.4028235E38 = maxBoost\n  1.0 = queryBoost\n"), +                TYPE, MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD, +                                        .add(fieldValueFactorFunction(DOUBLE_FIELD).modifier(FieldValueFactorFunction.Modifier.LN)), +                                        .add(fieldValueFactorFunction(DOUBLE_FIELD).modifier(FieldValueFactorFunction.Modifier.LN).setWeight(2)), +        assertThat(response.getHits().getAt(0).getScore(), is(1.0f));, +        assertThat(responseWithWeights.getHits().getAt(0).getScore(), is(8.0f));, +                MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD));, +        XContentBuilder doc = SIMPLE_DOC;, +            withWeights.add(builder.setWeight(weights[weightscounter]));, +        assertThat((float) expectedScore / responseWithWeights.getHits().getAt(0).getScore(), is(1.0f));, +            expectedScore /= weights.length;, +                MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD));, +                .field(DOUBLE_FIELD, 10), +            weights[i] = randomFloat() * (randomBoolean() ? 1.0f : -1.0f) * randomInt(100) + 1.e-6f;, +        builders[0] = gaussDecayFunction(GEO_POINT_FIELD, new GeoPoint(10, 20), "1000km");, +        builders[2] = fieldValueFactorFunction(DOUBLE_FIELD).modifier(FieldValueFactorFunction.Modifier.LN);, +                MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD));]