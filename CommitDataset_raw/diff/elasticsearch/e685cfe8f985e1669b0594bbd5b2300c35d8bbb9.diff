[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/CcrLicenseChecker.java, +            if (indexStats == null) {, +                onFailure.accept(new IllegalArgumentException("no index stats available for the leader index"));, +                return;, +            }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/CcrLicenseChecker.java, +            if (indexStats == null) {, +                onFailure.accept(new IllegalArgumentException("no index stats available for the leader index"));, +                return;, +            }, +, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/IndexFollowingIT.java, +import org.elasticsearch.action.admin.cluster.settings.ClusterUpdateSettingsRequest;, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;, +import org.elasticsearch.action.support.ActiveShardCount;, +    public void testLeaderIndexRed() throws Exception {, +        try {, +            ClusterUpdateSettingsRequest updateSettingsRequest = new ClusterUpdateSettingsRequest();, +            updateSettingsRequest.transientSettings(Settings.builder().put("cluster.routing.allocation.enable", "none"));, +            assertAcked(leaderClient().admin().cluster().updateSettings(updateSettingsRequest).actionGet());, +            assertAcked(leaderClient().admin().indices().prepareCreate("index1"), +                .setWaitForActiveShards(ActiveShardCount.NONE), +                .setSettings(Settings.builder(), +                    .put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(), true), +                    .put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1), +                    .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0), +                    .build()));, +, +            final PutFollowAction.Request followRequest = putFollow("index1", "index2");, +            Exception e = expectThrows(IllegalArgumentException.class,, +                () -> followerClient().execute(PutFollowAction.INSTANCE, followRequest).actionGet());, +            assertThat(e.getMessage(), equalTo("no index stats available for the leader index"));, +, +            IndicesExistsResponse existsResponse = followerClient().admin().indices().exists(new IndicesExistsRequest("index2")), +                .actionGet();, +            assertThat(existsResponse.isExists(), is(false));, +        } finally {, +            // Always unset allocation enable setting to avoid other assertions from failing too when this test fails:, +            ClusterUpdateSettingsRequest updateSettingsRequest = new ClusterUpdateSettingsRequest();, +            updateSettingsRequest.transientSettings(Settings.builder().put("cluster.routing.allocation.enable", (String) null));, +            assertAcked(leaderClient().admin().cluster().updateSettings(updateSettingsRequest).actionGet());, +        }, +    }, +]