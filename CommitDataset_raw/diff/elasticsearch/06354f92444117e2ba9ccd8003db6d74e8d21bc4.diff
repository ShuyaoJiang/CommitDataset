[+++ b/CONTRIBUTING.md, +* Wildcard imports (`improt foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/CONTRIBUTING.md, +* Wildcard imports (`improt foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('wildcard imports', /^\s*import.*\.\*/), +        this.filesFilter.exclude(excludes), +++ b/CONTRIBUTING.md, +* Wildcard imports (`improt foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('wildcard imports', /^\s*import.*\.\*/), +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +++ b/CONTRIBUTING.md, +* Wildcard imports (`improt foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('wildcard imports', /^\s*import.*\.\*/), +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        fieldQueryExtensions.put(MissingFieldQueryExtension.NAME, new MissingFieldQueryExtension());, +++ b/CONTRIBUTING.md, +* Wildcard imports (`improt foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('wildcard imports', /^\s*import.*\.\*/), +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        fieldQueryExtensions.put(MissingFieldQueryExtension.NAME, new MissingFieldQueryExtension());, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.apache.lucene.queryparser.classic;, +, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Query;, +import org.elasticsearch.index.query.MissingQueryBuilder;, +import org.elasticsearch.index.query.QueryShardContext;, +, +/**, + *, + */, +public class MissingFieldQueryExtension implements FieldQueryExtension {, +, +    public static final String NAME = "_missing_";, +, +    @Override, +    public Query query(QueryShardContext context, String queryText) {, +        Query query = MissingQueryBuilder.newFilter(context, queryText, MissingQueryBuilder.DEFAULT_EXISTENCE_VALUE, MissingQueryBuilder.DEFAULT_NULL_VALUE);, +        if (query != null) {, +            return new ConstantScoreQuery(query);, +        }, +        return null;, +    }, +}, +++ b/CONTRIBUTING.md, +* Wildcard imports (`improt foo.bar.baz.*`) are forbidden and will cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them., + * Eclipse: Preferences->Java->Code Style->Organize Imports. There are two boxes labeled "`Number of (static )? imports needed for .*`". Set their values to 99999 or some other absurdly high value., +* Don't worry too much about import order. Try not to change it but don't worry about fighting your IDE to stop it from doing so., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        patterns.put('wildcard imports', /^\s*import.*\.\*/), +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/resources/forbidden/all-signatures.txt, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +        fieldQueryExtensions.put(MissingFieldQueryExtension.NAME, new MissingFieldQueryExtension());, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License.]