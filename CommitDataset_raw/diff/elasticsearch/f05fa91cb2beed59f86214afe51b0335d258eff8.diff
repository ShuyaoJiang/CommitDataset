[+++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                    searchLookup.source().setNextSource(source.source.bytes(), source.source.offset(), source.source.length());, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                    searchLookup.source().setNextSource(source.source.bytes(), source.source.offset(), source.source.length());, +++ b/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +            if (source != null) {, +                context.lookup().source().setNextSource(source, 0, source.length);, +            }, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                                    searchLookup.source().setNextSource(source.source.bytes(), source.source.offset(), source.source.length());, +++ b/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +            if (source != null) {, +                context.lookup().source().setNextSource(source, 0, source.length);, +            }, +++ b/src/main/java/org/elasticsearch/search/lookup/SourceLookup.java, +    private byte[] sourceAsBytes;, +    private int sourceAsBytesOffset;, +    private int sourceAsBytesLength;, +        if (sourceAsBytes != null) {, +            source = sourceAsMap(sourceAsBytes, sourceAsBytesOffset, sourceAsBytesLength);, +            return source;, +        }, +        this.sourceAsBytes = null;, +        this.sourceAsBytes = null;, +    public void setNextSource(byte[] source, int offset, int length) {, +        this.sourceAsBytes = source;, +        this.sourceAsBytesOffset = offset;, +        this.sourceAsBytesLength = length;, +    }, +]