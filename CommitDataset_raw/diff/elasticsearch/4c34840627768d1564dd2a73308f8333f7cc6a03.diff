[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDynamicTemplate.java, +    private final Map<String, Object> conf;, +, +        return new XContentDynamicTemplate(conf, match, unmatch, matchMappingType, MatchType.fromString(matchType), mapping);, +    public XContentDynamicTemplate(Map<String, Object> conf, String match, String unmatch, String matchMappingType, MatchType matchType, Map<String, Object> mapping) {, +        this.conf = conf;, +    public Map<String, Object> conf() {, +        return this.conf;, +    }, +, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +, +        XContentDynamicTemplate that = (XContentDynamicTemplate) o;, +, +        // check if same matching, if so, replace the mapping, +        if (match != null ? !match.equals(that.match) : that.match != null) return false;, +        if (matchMappingType != null ? !matchMappingType.equals(that.matchMappingType) : that.matchMappingType != null), +            return false;, +        if (matchType != that.matchType) return false;, +        if (unmatch != null ? !unmatch.equals(that.unmatch) : that.unmatch != null) return false;, +, +        return true;, +    }, +, +    @Override, +    public int hashCode() {, +        // check if same matching, if so, replace the mapping, +        int result = match != null ? match.hashCode() : 0;, +        result = 31 * result + (unmatch != null ? unmatch.hashCode() : 0);, +        result = 31 * result + (matchType != null ? matchType.hashCode() : 0);, +        result = 31 * result + (matchMappingType != null ? matchMappingType.hashCode() : 0);, +        return result;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDynamicTemplate.java, +    private final Map<String, Object> conf;, +, +        return new XContentDynamicTemplate(conf, match, unmatch, matchMappingType, MatchType.fromString(matchType), mapping);, +    public XContentDynamicTemplate(Map<String, Object> conf, String match, String unmatch, String matchMappingType, MatchType matchType, Map<String, Object> mapping) {, +        this.conf = conf;, +    public Map<String, Object> conf() {, +        return this.conf;, +    }, +, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +, +        XContentDynamicTemplate that = (XContentDynamicTemplate) o;, +, +        // check if same matching, if so, replace the mapping, +        if (match != null ? !match.equals(that.match) : that.match != null) return false;, +        if (matchMappingType != null ? !matchMappingType.equals(that.matchMappingType) : that.matchMappingType != null), +            return false;, +        if (matchType != that.matchType) return false;, +        if (unmatch != null ? !unmatch.equals(that.unmatch) : that.unmatch != null) return false;, +, +        return true;, +    }, +, +    @Override, +    public int hashCode() {, +        // check if same matching, if so, replace the mapping, +        int result = match != null ? match.hashCode() : 0;, +        result = 31 * result + (unmatch != null ? unmatch.hashCode() : 0);, +        result = 31 * result + (matchType != null ? matchType.hashCode() : 0);, +        result = 31 * result + (matchMappingType != null ? matchMappingType.hashCode() : 0);, +        return result;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentObjectMapper.java, +import org.elasticsearch.common.collect.Lists;, +import java.util.Arrays;, +        public Builder add(XContentDynamicTemplate... dynamicTemplate) {, +            for (XContentDynamicTemplate template : dynamicTemplate) {, +                this.dynamicTemplates.add(template);, +            }, +            return this;, +        }, +, +                                    .add(dynamicTemplates), +        if (!mergeContext.mergeFlags().simulate()) {, +            // merge them, +            List<XContentDynamicTemplate> mergedTemplates = Lists.newArrayList(Arrays.asList(this.dynamicTemplates));, +            for (XContentDynamicTemplate template : mergeWithObject.dynamicTemplates) {, +                int index = mergedTemplates.indexOf(template);, +                if (index == -1) {, +                    mergedTemplates.add(template);, +                } else {, +                    mergedTemplates.set(index, template);, +                }, +            }, +            this.dynamicTemplates = mergedTemplates.toArray(new XContentDynamicTemplate[mergedTemplates.size()]);, +        }, +        if (dynamicTemplates != null && dynamicTemplates.length > 0) {, +            builder.startArray("dynamic_templates");]