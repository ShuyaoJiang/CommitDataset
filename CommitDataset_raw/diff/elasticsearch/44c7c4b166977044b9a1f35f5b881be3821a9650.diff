[+++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +            Request statsRequest = new Request("GET", "/_ccr/auto_follow/stats");, +            Map<String, ?> response = toMap(client().performRequest(statsRequest));, +            assertThat(response.get("number_of_successful_follow_indices"), equalTo(1));, +, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +            Request statsRequest = new Request("GET", "/_ccr/auto_follow/stats");, +            Map<String, ?> response = toMap(client().performRequest(statsRequest));, +            assertThat(response.get("number_of_successful_follow_indices"), equalTo(1));, +, +++ b/x-pack/plugin/ccr/qa/rest/src/test/resources/rest-api-spec/test/ccr/auto_follow_stats.yml, +---, +"Test autofollow stats":, +  - do:, +      ccr.auto_follow_stats: {}, +, +  - match: { number_of_successful_follow_indices: 0 }, +  - match: { number_of_failed_follow_indices: 0 }, +  - match: { number_of_failed_remote_cluster_state_requests: 0 }, +  - length: { recent_auto_follow_errors: 0 }, +, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +            Request statsRequest = new Request("GET", "/_ccr/auto_follow/stats");, +            Map<String, ?> response = toMap(client().performRequest(statsRequest));, +            assertThat(response.get("number_of_successful_follow_indices"), equalTo(1));, +, +++ b/x-pack/plugin/ccr/qa/rest/src/test/resources/rest-api-spec/test/ccr/auto_follow_stats.yml, +---, +"Test autofollow stats":, +  - do:, +      ccr.auto_follow_stats: {}, +, +  - match: { number_of_successful_follow_indices: 0 }, +  - match: { number_of_failed_follow_indices: 0 }, +  - match: { number_of_failed_remote_cluster_state_requests: 0 }, +  - length: { recent_auto_follow_errors: 0 }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/Ccr.java, +import org.elasticsearch.xpack.ccr.action.TransportAutoFollowStatsAction;, +import org.elasticsearch.xpack.ccr.rest.RestAutoFollowStatsAction;, +import org.elasticsearch.xpack.core.ccr.action.AutoFollowStatsAction;, +                new ActionHandler<>(AutoFollowStatsAction.INSTANCE, TransportAutoFollowStatsAction.class),, +                new RestAutoFollowStatsAction(settings, restController),, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +            Request statsRequest = new Request("GET", "/_ccr/auto_follow/stats");, +            Map<String, ?> response = toMap(client().performRequest(statsRequest));, +            assertThat(response.get("number_of_successful_follow_indices"), equalTo(1));, +, +++ b/x-pack/plugin/ccr/qa/rest/src/test/resources/rest-api-spec/test/ccr/auto_follow_stats.yml, +---, +"Test autofollow stats":, +  - do:, +      ccr.auto_follow_stats: {}, +, +  - match: { number_of_successful_follow_indices: 0 }, +  - match: { number_of_failed_follow_indices: 0 }, +  - match: { number_of_failed_remote_cluster_state_requests: 0 }, +  - length: { recent_auto_follow_errors: 0 }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/Ccr.java, +import org.elasticsearch.xpack.ccr.action.TransportAutoFollowStatsAction;, +import org.elasticsearch.xpack.ccr.rest.RestAutoFollowStatsAction;, +import org.elasticsearch.xpack.core.ccr.action.AutoFollowStatsAction;, +                new ActionHandler<>(AutoFollowStatsAction.INSTANCE, TransportAutoFollowStatsAction.class),, +                new RestAutoFollowStatsAction(settings, restController),, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +import org.elasticsearch.ExceptionsHelper;, +                            ExceptionsHelper.convertToElastic(entry.getValue()));, +++ b/x-pack/plugin/ccr/qa/multi-cluster/src/test/java/org/elasticsearch/xpack/ccr/FollowIndexIT.java, +            Request statsRequest = new Request("GET", "/_ccr/auto_follow/stats");, +            Map<String, ?> response = toMap(client().performRequest(statsRequest));, +            assertThat(response.get("number_of_successful_follow_indices"), equalTo(1));, +, +++ b/x-pack/plugin/ccr/qa/rest/src/test/resources/rest-api-spec/test/ccr/auto_follow_stats.yml, +---, +"Test autofollow stats":, +  - do:, +      ccr.auto_follow_stats: {}, +, +  - match: { number_of_successful_follow_indices: 0 }, +  - match: { number_of_failed_follow_indices: 0 }, +  - match: { number_of_failed_remote_cluster_state_requests: 0 }, +  - length: { recent_auto_follow_errors: 0 }, +, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/Ccr.java, +import org.elasticsearch.xpack.ccr.action.TransportAutoFollowStatsAction;, +import org.elasticsearch.xpack.ccr.rest.RestAutoFollowStatsAction;, +import org.elasticsearch.xpack.core.ccr.action.AutoFollowStatsAction;, +                new ActionHandler<>(AutoFollowStatsAction.INSTANCE, TransportAutoFollowStatsAction.class),, +                new RestAutoFollowStatsAction(settings, restController),, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/AutoFollowCoordinator.java, +import org.elasticsearch.ExceptionsHelper;, +                            ExceptionsHelper.convertToElastic(entry.getValue()));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/TransportAutoFollowStatsAction.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +]