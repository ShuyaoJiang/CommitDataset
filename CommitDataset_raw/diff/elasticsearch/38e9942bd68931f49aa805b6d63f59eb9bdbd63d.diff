[+++ b/src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java, +            final long version = randomIntBetween(0, Integer.MAX_VALUE);, +            client().prepareIndex("test", "type1", id).setRouting(routingKey).setVersion(version).setVersionType(VersionType.EXTERNAL).setSource("field1", English.intToEnglish(i)).get();, +            assertThat(get.getVersion(), equalTo(version));, +            final long nextVersion = version + randomIntBetween(0, Integer.MAX_VALUE);, +            client().prepareIndex("test", "type1", id).setRouting(routingKey).setVersion(nextVersion).setVersionType(VersionType.EXTERNAL).setSource("field1", English.intToEnglish(i)).get();, +            get = client().prepareGet("test", "type1", id).setRouting(routingKey).setVersion(nextVersion).get();, +            assertThat(get.getVersion(), equalTo(nextVersion));, +            GetResponse get = client().prepareGet("test", "type1", id).setRouting(routingKey).setVersion(1).get();, +            get = client().prepareGet("test", "type1", id).setRouting(routingKey).setVersion(2).get();, +    @Test, +        assumeTrue("this test fails often with 1.0.3 skipping for now....",compatibilityVersion().onOrAfter(Version.V_1_1_0));]