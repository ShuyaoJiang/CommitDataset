[+++ b/docs/reference/modules/scripting/scripting.asciidoc, +|painless   |yes       |built-in (module), +* document fields, e.g. `doc['myfield'].value` , +* variables and methods that the field supports, e.g. `doc['myfield'].empty`, +[float], +=== Expressions API for numeric fields, +[cols="<,<",options="header",], +|=======================================================================, +|Expression |Description, +|`doc['field_name'].value` |The native value of the field. For example,, +if its a short type, it will be short., +, +|`doc['field_name'].empty` |A boolean indicating if the field has no, +values within the doc., +, +|`doc['field_name'].min()` |The minimum value of the field in this document., +, +|`doc['field_name'].max()` |The maximum value of the field in this document., +, +|`doc['field_name'].median()` |The median value of the field in this document., +, +|`doc['field_name'].avg()` |The average of the values in this document., +, +|`doc['field_name'].sum()` |The sum of the values in this document., +, +|`doc['field_name'].count()` |The number of values in this document., +|=======================================================================, +, +You can choose a different value instead, e.g. `doc['myfield'].sum()`., +When a document is missing the field completely, by default the value will be treated as `0`., +[float], +=== Additional methods for date fields, +Date fields are treated as the number of milliseconds since January 1, 1970 and , +support the numeric API above, with these additional methods:, +[cols="<,<",options="header",], +|=======================================================================, +|Expression |Description, +|`doc['field_name'].getYear()` |Year component, e.g. `1970`., +, +|`doc['field_name'].getMonth()` |Month component (0-11), e.g. `0` for January., +, +|`doc['field_name'].getDayOfMonth()` |Day component, e.g. `1` for the first of the month., +, +|`doc['field_name'].getHourOfDay()` |Hour component (0-23), +, +|`doc['field_name'].getMinutes()` |Minutes component (0-59), +, +|`doc['field_name'].getSeconds()` |Seconds component (0-59), +|=======================================================================, +[float], +=== Expressions API for `geo_point` fields, +[cols="<,<",options="header",], +|=======================================================================, +|Expression |Description, +|`doc['field_name'].empty` |A boolean indicating if the field has no, +values within the doc., +, +|`doc['field_name'].lat` |The latitude of the geo point., +, +|`doc['field_name'].lon` |The longitude of the geo point., +|=======================================================================, +, +The following example computes distance in kilometers from Washington, DC:, +, +`haversin(38.9072, 77.0369, doc['field_name'].lat, doc['field_name'].lon)`, +, +In this example the coordinates could have been passed as parameters to the script,, +e.g. based on geolocation of the user., +, +[float], +=== Expressions limitations, +, +* Only numeric, date, and geo_point fields may be accessed, +++ b/docs/reference/modules/scripting/scripting.asciidoc, +|painless   |yes       |built-in (module), +* document fields, e.g. `doc['myfield'].value` , +* variables and methods that the field supports, e.g. `doc['myfield'].empty`, +[float], +=== Expressions API for numeric fields, +[cols="<,<",options="header",], +|=======================================================================, +|Expression |Description, +|`doc['field_name'].value` |The native value of the field. For example,, +if its a short type, it will be short., +, +|`doc['field_name'].empty` |A boolean indicating if the field has no, +values within the doc., +, +|`doc['field_name'].min()` |The minimum value of the field in this document., +, +|`doc['field_name'].max()` |The maximum value of the field in this document., +, +|`doc['field_name'].median()` |The median value of the field in this document., +, +|`doc['field_name'].avg()` |The average of the values in this document., +, +|`doc['field_name'].sum()` |The sum of the values in this document., +, +|`doc['field_name'].count()` |The number of values in this document., +|=======================================================================]