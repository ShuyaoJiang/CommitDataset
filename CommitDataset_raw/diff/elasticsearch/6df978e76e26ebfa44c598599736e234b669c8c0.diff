[+++ b/docs/reference/migration/migrate_2_0.asciidoc, +, +=== Cluster state REST api, +, +The cluster state api doesn't return the `routing_nodes` section anymore when, +`routing_table` is requested. The newly introduced `routing_nodes` flag can, +be used separately to control whether `routing_nodes` should be returned., +++ b/docs/reference/migration/migrate_2_0.asciidoc, +, +=== Cluster state REST api, +, +The cluster state api doesn't return the `routing_nodes` section anymore when, +`routing_table` is requested. The newly introduced `routing_nodes` flag can, +be used separately to control whether `routing_nodes` should be returned., +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +, +=== Cluster state REST api, +, +The cluster state api doesn't return the `routing_nodes` section anymore when, +`routing_table` is requested. The newly introduced `routing_nodes` flag can, +be used separately to control whether `routing_nodes` should be returned., +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +  - is_false: routing_nodes, +, +---, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +, +=== Cluster state REST api, +, +The cluster state api doesn't return the `routing_nodes` section anymore when, +`routing_table` is requested. The newly introduced `routing_nodes` flag can, +be used separately to control whether `routing_nodes` should be returned., +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +  - is_false: routing_nodes, +, +---, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        ROUTING_NODES("routing_nodes"),, +        if (metrics.contains(Metric.ROUTING_NODES)) {, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +, +=== Cluster state REST api, +, +The cluster state api doesn't return the `routing_nodes` section anymore when, +`routing_table` is requested. The newly introduced `routing_nodes` flag can, +be used separately to control whether `routing_nodes` should be returned., +++ b/rest-api-spec/api/cluster.state.json, +          "options" : ["_all", "blocks", "metadata", "nodes", "routing_table", "routing_nodes", "master_node", "version"],, +++ b/rest-api-spec/test/cluster.state/20_filtering.yaml, +  - is_false: routing_nodes, +, +---, +"Filtering the cluster state by routing nodes only should work":, +  - do:, +      cluster.state:, +        metric: [ routing_nodes ], +, +  - is_false: blocks, +  - is_false: nodes, +  - is_false: metadata, +  - is_false: routing_table, +++ b/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        ROUTING_NODES("routing_nodes"),, +        if (metrics.contains(Metric.ROUTING_NODES)) {, +++ b/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java, +            if (params.paramAsBoolean("human", true)) {, +                builder.humanReadable(true);, +            }, +++ b/docs/reference/migration/migrate_2_0.asciidoc, +, +=== Cluster state REST api, +, +The cluster state api doesn't return the `routing_nodes` section anymore when, +`routing_table` is requested. The newly introduced `routing_nodes` flag can, +be used separately to control whether `routing_nodes` should be returned., +++ b/rest-api-spec/api/cluster.state.json]