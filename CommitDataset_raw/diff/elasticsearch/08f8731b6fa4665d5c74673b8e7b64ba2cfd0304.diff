[+++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +            return bytesEquals(a, b);, +        static boolean bytesEquals(BytesReference a, BytesReference b) {, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +            return bytesEquals(a, b);, +        static boolean bytesEquals(BytesReference a, BytesReference b) {, +++ b/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +import org.elasticsearch.common.util.ByteUtils;, +        return ByteUtils.readLongLE(key, blockOffset);, +                long k1 = ByteUtils.readLongLE(key, i);, +                long k2 = ByteUtils.readLongLE(key, i + 8);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +            return bytesEquals(a, b);, +        static boolean bytesEquals(BytesReference a, BytesReference b) {, +++ b/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +import org.elasticsearch.common.util.ByteUtils;, +        return ByteUtils.readLongLE(key, blockOffset);, +                long k1 = ByteUtils.readLongLE(key, i);, +                long k2 = ByteUtils.readLongLE(key, i + 8);, +++ b/src/main/java/org/elasticsearch/common/util/BytesRefHash.java, +            if (id == -1L || key.bytesEquals(get(id, spare))) {, +            } else if (key.bytesEquals(get(curId, spare))) {, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +            return bytesEquals(a, b);, +        static boolean bytesEquals(BytesReference a, BytesReference b) {, +++ b/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +import org.elasticsearch.common.util.ByteUtils;, +        return ByteUtils.readLongLE(key, blockOffset);, +                long k1 = ByteUtils.readLongLE(key, i);, +                long k2 = ByteUtils.readLongLE(key, i + 8);, +++ b/src/main/java/org/elasticsearch/common/util/BytesRefHash.java, +            if (id == -1L || key.bytesEquals(get(id, spare))) {, +            } else if (key.bytesEquals(get(curId, spare))) {, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +            return bytesEquals(a, b);, +        static boolean bytesEquals(BytesReference a, BytesReference b) {, +++ b/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +import org.elasticsearch.common.util.ByteUtils;, +        return ByteUtils.readLongLE(key, blockOffset);, +                long k1 = ByteUtils.readLongLE(key, i);, +                long k2 = ByteUtils.readLongLE(key, i + 8);, +++ b/src/main/java/org/elasticsearch/common/util/BytesRefHash.java, +            if (id == -1L || key.bytesEquals(get(id, spare))) {, +            } else if (key.bytesEquals(get(curId, spare))) {, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java, +import org.elasticsearch.common.util.ByteUtils;, +            return ByteUtils.readIntLE(readSpare.bytes, readSpare.offset);, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +            return bytesEquals(a, b);, +        static boolean bytesEquals(BytesReference a, BytesReference b) {, +++ b/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +import org.elasticsearch.common.util.ByteUtils;, +        return ByteUtils.readLongLE(key, blockOffset);, +                long k1 = ByteUtils.readLongLE(key, i);, +                long k2 = ByteUtils.readLongLE(key, i + 8);, +++ b/src/main/java/org/elasticsearch/common/util/BytesRefHash.java, +            if (id == -1L || key.bytesEquals(get(id, spare))) {, +            } else if (key.bytesEquals(get(curId, spare))) {, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java, +import org.elasticsearch.common.util.ByteUtils;, +            return ByteUtils.readIntLE(readSpare.bytes, readSpare.offset);, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/bytes/BytesReference.java, +            return bytesEquals(a, b);, +        static boolean bytesEquals(BytesReference a, BytesReference b) {, +++ b/src/main/java/org/elasticsearch/common/hash/MurmurHash3.java, +import org.elasticsearch.common.util.ByteUtils;, +        return ByteUtils.readLongLE(key, blockOffset);, +                long k1 = ByteUtils.readLongLE(key, i);, +                long k2 = ByteUtils.readLongLE(key, i + 8);, +++ b/src/main/java/org/elasticsearch/common/util/BytesRefHash.java, +            if (id == -1L || key.bytesEquals(get(id, spare))) {, +            } else if (key.bytesEquals(get(curId, spare))) {, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java, +import org.elasticsearch.common.util.ByteUtils;, +            return ByteUtils.readIntLE(readSpare.bytes, readSpare.offset);, +++ /dev/null, +++ b/src/test/java/org/elasticsearch/common/bytes/BytesReferenceTests.java, +        assertTrue(BytesReference.Helper.bytesEquals(b1, b2));, +        assertTrue(BytesReference.Helper.bytesEquals(b1, b1));, +            assertFalse(BytesReference.Helper.bytesEquals(b1, b2));]