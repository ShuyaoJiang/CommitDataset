[+++ b/docs/reference/search/request/highlighting.asciidoc, +coming[0.90.6], +It is also possible to ask Elasticsearch to return a fragment from the, +beginning of the field in the case where there are no matches by setting, +`no_match_size` to something greater than 0.  The default is 0., +, +[source,js], +--------------------------------------------------, +{, +    "query" : {...},, +    "highlight" : {, +        "fields" : {, +            "content" : {, +                "fragment_size" : 150,, +                "number_of_fragments" : 3,, +                "no_match_size": 150, +            }, +        }, +    }, +}, +--------------------------------------------------, +, +, +++ b/docs/reference/search/request/highlighting.asciidoc, +coming[0.90.6], +It is also possible to ask Elasticsearch to return a fragment from the, +beginning of the field in the case where there are no matches by setting, +`no_match_size` to something greater than 0.  The default is 0., +, +[source,js], +--------------------------------------------------, +{, +    "query" : {...},, +    "highlight" : {, +        "fields" : {, +            "content" : {, +                "fragment_size" : 150,, +                "number_of_fragments" : 3,, +                "no_match_size": 150, +            }, +        }, +    }, +}, +--------------------------------------------------, +, +, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +    /**, +     * Sets the size of the fragment to return from the beginning of the field if there are no matches to, +     * highlight and the field doesn't also define noMatchSize., +     * @param noMatchSize integer to set or null to leave out of request.  default is null., +     * @return this builder for chaining, +     */, +    public SearchRequestBuilder setHighlighterNoMatchSize(Integer noMatchSize) {, +        highlightBuilder().noMatchSize(noMatchSize);, +        return this;, +    }, +, +++ b/docs/reference/search/request/highlighting.asciidoc, +coming[0.90.6], +It is also possible to ask Elasticsearch to return a fragment from the, +beginning of the field in the case where there are no matches by setting, +`no_match_size` to something greater than 0.  The default is 0., +, +[source,js], +--------------------------------------------------, +{, +    "query" : {...},, +    "highlight" : {, +        "fields" : {, +            "content" : {, +                "fragment_size" : 150,, +                "number_of_fragments" : 3,, +                "no_match_size": 150, +            }, +        }, +    }, +}, +--------------------------------------------------, +, +, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +    /**, +     * Sets the size of the fragment to return from the beginning of the field if there are no matches to, +     * highlight and the field doesn't also define noMatchSize., +     * @param noMatchSize integer to set or null to leave out of request.  default is null., +     * @return this builder for chaining, +     */, +    public SearchRequestBuilder setHighlighterNoMatchSize(Integer noMatchSize) {, +        highlightBuilder().noMatchSize(noMatchSize);, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java, +import org.apache.lucene.search.vectorhighlight.FieldPhraseList.WeightedPhraseInfo;, +import java.util.Collections;, +            int noMatchSize = highlighterContext.field.noMatchSize();, +            if (noMatchSize > 0) {, +                // Essentially we just request that a fragment is built from 0 to noMatchSize using the normal fragmentsBuilder, +                FieldFragList fieldFragList = new SimpleFieldFragList(-1 /*ignored*/);]