[+++ b/core/src/main/java/org/elasticsearch/common/util/iterable/Iterables.java, +++ b/core/src/main/java/org/elasticsearch/common/util/iterable/Iterables.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +                    // Could be while we were checking, more bytes arrived:, +                    totalBytes = bytesWrittenSinceCheck.addAndGet(bytes);, +++ b/core/src/main/java/org/elasticsearch/common/util/iterable/Iterables.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +                    // Could be while we were checking, more bytes arrived:, +                    totalBytes = bytesWrittenSinceCheck.addAndGet(bytes);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +        indexingMemoryController = new IndexingMemoryController(settings, threadPool, Iterables.flatten(this));, +++ b/core/src/main/java/org/elasticsearch/common/util/iterable/Iterables.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +                    // Could be while we were checking, more bytes arrived:, +                    totalBytes = bytesWrittenSinceCheck.addAndGet(bytes);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +        indexingMemoryController = new IndexingMemoryController(settings, threadPool, Iterables.flatten(this));, +++ b/core/src/test/java/org/elasticsearch/common/util/iterable/IterablesTests.java, +import org.elasticsearch.test.ESTestCase;, +, +++ b/core/src/main/java/org/elasticsearch/common/util/iterable/Iterables.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +                    // Could be while we were checking, more bytes arrived:, +                    totalBytes = bytesWrittenSinceCheck.addAndGet(bytes);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +        indexingMemoryController = new IndexingMemoryController(settings, threadPool, Iterables.flatten(this));, +++ b/core/src/test/java/org/elasticsearch/common/util/iterable/IterablesTests.java, +import org.elasticsearch.test.ESTestCase;, +, +++ b/docs/plugins/mapper-attachments.asciidoc, +[[mapper-attachments-copy-to]], +==== Copy To feature, +, +If you want to use https://www.elastic.co/guide/en/elasticsearch/reference/current/copy-to.html[copy_to], +feature, you need to define it on each sub-field you want to copy to another field:, +, +[source,js], +--------------------------, +PUT /test/person/_mapping, +{, +  "person": {, +    "properties": {, +      "file": {, +        "type": "attachment",, +        "fields": {, +          "content": {, +            "type": "text",, +            "copy_to": "copy", +          }, +        }, +      },, +      "copy": {, +        "type": "text", +      }, +    }, +  }, +}, +--------------------------, +// CONSOLE, +, +In this example, the extracted content will be copy as well to `copy` field., +, +[[mapper-attachments-querying-metadata]], +++ b/core/src/main/java/org/elasticsearch/common/util/iterable/Iterables.java, +++ b/core/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java, +                    // Could be while we were checking, more bytes arrived:, +                    totalBytes = bytesWrittenSinceCheck.addAndGet(bytes);, +++ b/core/src/main/java/org/elasticsearch/indices/IndicesService.java, +        indexingMemoryController = new IndexingMemoryController(settings, threadPool, Iterables.flatten(this));, +++ b/core/src/test/java/org/elasticsearch/common/util/iterable/IterablesTests.java, +import org.elasticsearch.test.ESTestCase;, +, +++ b/docs/plugins/mapper-attachments.asciidoc, +[[mapper-attachments-copy-to]], +==== Copy To feature, +, +If you want to use https://www.elastic.co/guide/en/elasticsearch/reference/current/copy-to.html[copy_to], +feature, you need to define it on each sub-field you want to copy to another field:, +, +[source,js], +--------------------------, +PUT /test/person/_mapping, +{, +  "person": {, +    "properties": {, +      "file": {, +        "type": "attachment",, +        "fields": {, +          "content": {, +            "type": "text",, +            "copy_to": "copy", +          }, +        }, +      },, +      "copy": {, +        "type": "text", +      }, +    }, +  }, +}]