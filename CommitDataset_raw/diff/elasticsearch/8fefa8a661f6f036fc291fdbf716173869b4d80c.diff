[+++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        BiFunction<Engine.Operation, Long, Engine.Operation> seqNoUpdater = (operation, newSeqNo) -> {, +                Document doc = testDocumentWithTextField(index.docs().get(0).get("value"));, +                ParsedDocument parsedDocument = testParsedDocument(index.id(), index.routing(), doc, index.source(), null);, +                return new Engine.Index(index.uid(), parsedDocument, newSeqNo, index.primaryTerm(), index.version(),, +            allOps.add(seqNoUpdater.apply(next, seqNoGenerator.getAndIncrement()));, +        iter1.forEachRemaining(o -> allOps.add(seqNoUpdater.apply(o, seqNoGenerator.getAndIncrement())));, +        iter2.forEachRemaining(o -> allOps.add(seqNoUpdater.apply(o, seqNoGenerator.getAndIncrement())));, +        randomSubsetOf(allOps).forEach(op -> allOps.add(seqNoUpdater.apply(op, op.seqNo())));, +            randomFrom(VersionType.INTERNAL, VersionType.EXTERNAL), 2, 10, 300, "1");, +            randomFrom(VersionType.INTERNAL, VersionType.EXTERNAL), 2, 10, 300, "2");, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        BiFunction<Engine.Operation, Long, Engine.Operation> seqNoUpdater = (operation, newSeqNo) -> {, +                Document doc = testDocumentWithTextField(index.docs().get(0).get("value"));, +                ParsedDocument parsedDocument = testParsedDocument(index.id(), index.routing(), doc, index.source(), null);, +                return new Engine.Index(index.uid(), parsedDocument, newSeqNo, index.primaryTerm(), index.version(),, +            allOps.add(seqNoUpdater.apply(next, seqNoGenerator.getAndIncrement()));, +        iter1.forEachRemaining(o -> allOps.add(seqNoUpdater.apply(o, seqNoGenerator.getAndIncrement())));, +        iter2.forEachRemaining(o -> allOps.add(seqNoUpdater.apply(o, seqNoGenerator.getAndIncrement())));, +        randomSubsetOf(allOps).forEach(op -> allOps.add(seqNoUpdater.apply(op, op.seqNo())));, +            randomFrom(VersionType.INTERNAL, VersionType.EXTERNAL), 2, 10, 300, "1");, +            randomFrom(VersionType.INTERNAL, VersionType.EXTERNAL), 2, 10, 300, "2");, +++ b/test/framework/src/main/java/org/elasticsearch/index/engine/EngineTestCase.java, +    public static List<Engine.Operation> generateSingleDocHistory(boolean forReplica, VersionType versionType,, +                                                                  long primaryTerm, int minOpCount, int maxOpCount, String docId) {, +        final Term id = newUid(docId);, +        final int startWithSeqNo = 0;, +        final String valuePrefix = (forReplica ? "r_" : "p_" ) + docId + "_";, +                op = new Engine.Index(id, testParsedDocument(docId, null, testDocumentWithTextField(valuePrefix + i), B_1, null),, +                    forReplica && i >= startWithSeqNo ? i * 2 : SequenceNumbers.UNASSIGNED_SEQ_NO,, +                op = new Engine.Delete("test", docId, id,, +                    forReplica && i >= startWithSeqNo ? i * 2 : SequenceNumbers.UNASSIGNED_SEQ_NO,, +++ b/server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +        BiFunction<Engine.Operation, Long, Engine.Operation> seqNoUpdater = (operation, newSeqNo) -> {, +                Document doc = testDocumentWithTextField(index.docs().get(0).get("value"));, +                ParsedDocument parsedDocument = testParsedDocument(index.id(), index.routing(), doc, index.source(), null);, +                return new Engine.Index(index.uid(), parsedDocument, newSeqNo, index.primaryTerm(), index.version(),, +            allOps.add(seqNoUpdater.apply(next, seqNoGenerator.getAndIncrement()));, +        iter1.forEachRemaining(o -> allOps.add(seqNoUpdater.apply(o, seqNoGenerator.getAndIncrement())));, +        iter2.forEachRemaining(o -> allOps.add(seqNoUpdater.apply(o, seqNoGenerator.getAndIncrement())));, +        randomSubsetOf(allOps).forEach(op -> allOps.add(seqNoUpdater.apply(op, op.seqNo())));, +            randomFrom(VersionType.INTERNAL, VersionType.EXTERNAL), 2, 10, 300, "1");, +            randomFrom(VersionType.INTERNAL, VersionType.EXTERNAL), 2, 10, 300, "2");, +++ b/test/framework/src/main/java/org/elasticsearch/index/engine/EngineTestCase.java, +    public static List<Engine.Operation> generateSingleDocHistory(boolean forReplica, VersionType versionType,, +                                                                  long primaryTerm, int minOpCount, int maxOpCount, String docId) {, +        final Term id = newUid(docId);, +        final int startWithSeqNo = 0;, +        final String valuePrefix = (forReplica ? "r_" : "p_" ) + docId + "_";, +                op = new Engine.Index(id, testParsedDocument(docId, null, testDocumentWithTextField(valuePrefix + i), B_1, null),, +                    forReplica && i >= startWithSeqNo ? i * 2 : SequenceNumbers.UNASSIGNED_SEQ_NO,, +                op = new Engine.Delete("test", docId, id,, +                    forReplica && i >= startWithSeqNo ? i * 2 : SequenceNumbers.UNASSIGNED_SEQ_NO,, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/index/engine/FollowingEngineTests.java, +                final List<Engine.Operation> ops = EngineTestCase.generateSingleDocHistory(true, versionType, 2, 2, 20, "id");]