[+++ b/src/main/java/org/elasticsearch/action/count/CountResponse.java, +import java.io.IOException;, +import java.util.List;, +        return RestStatus.status(getSuccessfulShards(), getTotalShards(), getShardFailures());, +++ b/src/main/java/org/elasticsearch/action/count/CountResponse.java, +import java.io.IOException;, +import java.util.List;, +        return RestStatus.status(getSuccessfulShards(), getTotalShards(), getShardFailures());, +++ b/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +        return RestStatus.status(successfulShards, totalShards, shardFailures);, +++ b/src/main/java/org/elasticsearch/action/count/CountResponse.java, +import java.io.IOException;, +import java.util.List;, +        return RestStatus.status(getSuccessfulShards(), getTotalShards(), getShardFailures());, +++ b/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +        return RestStatus.status(successfulShards, totalShards, shardFailures);, +++ b/src/main/java/org/elasticsearch/rest/RestStatus.java, +import org.elasticsearch.action.ShardOperationFailedException;, +, +    public static RestStatus status(int successfulShards, int totalShards, ShardOperationFailedException... failures) {, +        if (failures.length == 0) {, +            if (successfulShards == 0 && totalShards > 0) {, +                return RestStatus.SERVICE_UNAVAILABLE;, +            }, +            return RestStatus.OK;, +        }, +        RestStatus status = RestStatus.OK;, +        if (successfulShards == 0 && totalShards > 0) {, +            for (ShardOperationFailedException failure : failures) {, +                RestStatus shardStatus = failure.status();, +                if (shardStatus.getStatus() >= status.getStatus()) {, +                    status = failure.status();, +                }, +            }, +            return status;, +        }, +        return status;, +    }, +++ b/src/main/java/org/elasticsearch/action/count/CountResponse.java, +import java.io.IOException;, +import java.util.List;, +        return RestStatus.status(getSuccessfulShards(), getTotalShards(), getShardFailures());, +++ b/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +        return RestStatus.status(successfulShards, totalShards, shardFailures);, +++ b/src/main/java/org/elasticsearch/rest/RestStatus.java, +import org.elasticsearch.action.ShardOperationFailedException;, +, +    public static RestStatus status(int successfulShards, int totalShards, ShardOperationFailedException... failures) {, +        if (failures.length == 0) {, +            if (successfulShards == 0 && totalShards > 0) {, +                return RestStatus.SERVICE_UNAVAILABLE;, +            }, +            return RestStatus.OK;, +        }, +        RestStatus status = RestStatus.OK;, +        if (successfulShards == 0 && totalShards > 0) {, +            for (ShardOperationFailedException failure : failures) {, +                RestStatus shardStatus = failure.status();, +                if (shardStatus.getStatus() >= status.getStatus()) {, +                    status = failure.status();, +                }, +            }, +            return status;, +        }, +        return status;, +    }, +++ b/src/main/java/org/elasticsearch/rest/action/suggest/RestSuggestAction.java, +import static org.elasticsearch.rest.RestRequest.Method.GET;, +import static org.elasticsearch.rest.RestRequest.Method.POST;, +import static org.elasticsearch.rest.action.support.RestActions.buildBroadcastShardsHeader;, +import org.elasticsearch.rest.BaseRestHandler;, +import org.elasticsearch.rest.BytesRestResponse;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.RestResponse;, +import org.elasticsearch.rest.RestStatus;, +                RestStatus restStatus = RestStatus.status(response.getSuccessfulShards(), response.getTotalShards(), response.getShardFailures());, +                return new BytesRestResponse(restStatus, builder);, +++ b/src/main/java/org/elasticsearch/action/count/CountResponse.java, +import java.io.IOException;, +import java.util.List;, +        return RestStatus.status(getSuccessfulShards(), getTotalShards(), getShardFailures());, +++ b/src/main/java/org/elasticsearch/action/search/SearchResponse.java, +        return RestStatus.status(successfulShards, totalShards, shardFailures);, +++ b/src/main/java/org/elasticsearch/rest/RestStatus.java, +import org.elasticsearch.action.ShardOperationFailedException;, +, +    public static RestStatus status(int successfulShards, int totalShards, ShardOperationFailedException... failures) {, +        if (failures.length == 0) {, +            if (successfulShards == 0 && totalShards > 0) {, +                return RestStatus.SERVICE_UNAVAILABLE;, +            }, +            return RestStatus.OK;, +        }, +        RestStatus status = RestStatus.OK;, +        if (successfulShards == 0 && totalShards > 0) {, +            for (ShardOperationFailedException failure : failures) {, +                RestStatus shardStatus = failure.status();, +                if (shardStatus.getStatus() >= status.getStatus()) {]