[+++ b/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +                        putDynamicMapper(context, currentFieldName, objectMapper);, +, +            Dynamic dynamic = this.dynamic;, +            if (dynamic == null) {, +                dynamic = context.root().dynamic();, +            }, +            if (dynamic == Dynamic.STRICT) {, +                throw new StrictDynamicMappingException(fullPath, arrayFieldName);, +            } else if (dynamic == Dynamic.TRUE) {, +                // we sync here just so we won't add it twice. Its not the end of the world, +                // to sync here since next operations will get it before, +                synchronized (mutex) {, +                    mapper = mappers.get(arrayFieldName);, +                    if (mapper == null) {, +                        Mapper.Builder builder = context.root().findTemplateBuilder(context, arrayFieldName, "object");, +                        if (builder == null) {, +                            serializeNonDynamicArray(context, lastFieldName, arrayFieldName);, +                            return;, +                        }, +                        BuilderContext builderContext = new BuilderContext(context.indexSettings(), context.path());, +                        mapper = builder.build(builderContext);, +                        if (mapper != null && mapper instanceof ArrayValueMapperParser) {, +                            putDynamicMapper(context, arrayFieldName, mapper);, +                        } else {, +                            serializeNonDynamicArray(context, lastFieldName, arrayFieldName);, +                        }, +                    } else {, +                        , +                        serializeNonDynamicArray(context, lastFieldName, arrayFieldName);, +                    }, +                }, +            } else {, +                , +                serializeNonDynamicArray(context, lastFieldName, arrayFieldName);, +            }, +        }, +    }, +, +    private void putDynamicMapper(ParseContext context, String arrayFieldName, Mapper mapper) throws IOException {, +        // ...now re add it, +        context.path().add(arrayFieldName);, +        context.setMappingsModified();, +, +        if (context.isWithinNewMapper()) {, +            // within a new mapper, no need to traverse,, +            // just parse, +            mapper.parse(context);, +        } else {, +            // create a context of new mapper, so we batch, +            // aggregate all the changes within, +            // this object mapper once, and traverse all of, +            // them to add them in a single go, +            context.setWithinNewMapper();, +            try {, +                mapper.parse(context);, +                FieldMapperListener.Aggregator newFields = new FieldMapperListener.Aggregator();, +                ObjectMapperListener.Aggregator newObjects = new ObjectMapperListener.Aggregator();, +                mapper.traverse(newFields);, +                mapper.traverse(newObjects);, +                // callback on adding those fields!, +                context.docMapper().addFieldMappers(newFields.mappers);, +                context.docMapper().addObjectMappers(newObjects.mappers);, +            } finally {, +                context.clearWithinNewMapper();, +            }, +        }, +, +        // only put after we traversed and did the, +        // callbacks, so other parsing won't see it only, +        // after we, +        // properly traversed it and adding the mappers, +        putMapper(mapper);, +    }, +, +    private void serializeNonDynamicArray(ParseContext context, String lastFieldName, String arrayFieldName) throws IOException {, +++ b/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +                        putDynamicMapper(context, currentFieldName, objectMapper);, +, +            Dynamic dynamic = this.dynamic;, +            if (dynamic == null) {, +                dynamic = context.root().dynamic();, +            }, +            if (dynamic == Dynamic.STRICT) {, +                throw new StrictDynamicMappingException(fullPath, arrayFieldName);, +            } else if (dynamic == Dynamic.TRUE) {, +                // we sync here just so we won't add it twice. Its not the end of the world, +                // to sync here since next operations will get it before, +                synchronized (mutex) {, +                    mapper = mappers.get(arrayFieldName);, +                    if (mapper == null) {, +                        Mapper.Builder builder = context.root().findTemplateBuilder(context, arrayFieldName, "object");, +                        if (builder == null) {, +                            serializeNonDynamicArray(context, lastFieldName, arrayFieldName);, +                            return;, +                        }, +                        BuilderContext builderContext = new BuilderContext(context.indexSettings(), context.path());, +                        mapper = builder.build(builderContext);, +                        if (mapper != null && mapper instanceof ArrayValueMapperParser) {, +                            putDynamicMapper(context, arrayFieldName, mapper);]