[+++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +        this.sandboxed = settings.getAsBoolean(GROOVY_SCRIPT_SANDBOX_ENABLED, false);, +++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +        this.sandboxed = settings.getAsBoolean(GROOVY_SCRIPT_SANDBOX_ENABLED, false);, +++ b/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java, +import org.elasticsearch.script.ScriptService;, +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +        this.sandboxed = settings.getAsBoolean(GROOVY_SCRIPT_SANDBOX_ENABLED, false);, +++ b/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java, +import org.elasticsearch.script.ScriptService;, +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +++ b/src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.TEST, numDataNodes = 0), +    public void testSandboxedGroovyScript() throws Exception {, +        int nodes = randomIntBetween(1, 3);, +        Settings nodeSettings = ImmutableSettings.builder(), +                .put(GroovyScriptEngineService.GROOVY_SCRIPT_SANDBOX_ENABLED, true), +                .build();, +        internalCluster().startNodesAsync(nodes, nodeSettings).get();, +        client().admin().cluster().prepareHealth().setWaitForNodes(nodes + "").get();, +, +        int nodes = randomIntBetween(1, 3);, +        Settings nodeSettings = ImmutableSettings.builder(), +                .put(GroovyScriptEngineService.GROOVY_SCRIPT_SANDBOX_ENABLED, true), +                .build();, +        internalCluster().startNodesAsync(nodes, nodeSettings).get();, +        client().admin().cluster().prepareHealth().setWaitForNodes(nodes + "").get();, +, +++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +        this.sandboxed = settings.getAsBoolean(GROOVY_SCRIPT_SANDBOX_ENABLED, false);, +++ b/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java, +import org.elasticsearch.script.ScriptService;, +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +++ b/src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.TEST, numDataNodes = 0), +    public void testSandboxedGroovyScript() throws Exception {, +        int nodes = randomIntBetween(1, 3);, +        Settings nodeSettings = ImmutableSettings.builder(), +                .put(GroovyScriptEngineService.GROOVY_SCRIPT_SANDBOX_ENABLED, true), +                .build();, +        internalCluster().startNodesAsync(nodes, nodeSettings).get();, +        client().admin().cluster().prepareHealth().setWaitForNodes(nodes + "").get();, +, +        int nodes = randomIntBetween(1, 3);, +        Settings nodeSettings = ImmutableSettings.builder(), +                .put(GroovyScriptEngineService.GROOVY_SCRIPT_SANDBOX_ENABLED, true), +                .build();, +        internalCluster().startNodesAsync(nodes, nodeSettings).get();, +        client().admin().cluster().prepareHealth().setWaitForNodes(nodes + "").get();, +, +++ b/src/test/java/org/elasticsearch/script/GroovyScriptTests.java, +++ b/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java, +        this.sandboxed = settings.getAsBoolean(GROOVY_SCRIPT_SANDBOX_ENABLED, false);, +++ b/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java, +import org.elasticsearch.script.ScriptService;, +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +                .put(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING, false), +++ b/src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java, +@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.TEST, numDataNodes = 0), +    public void testSandboxedGroovyScript() throws Exception {, +        int nodes = randomIntBetween(1, 3);, +        Settings nodeSettings = ImmutableSettings.builder(), +                .put(GroovyScriptEngineService.GROOVY_SCRIPT_SANDBOX_ENABLED, true), +                .build();, +        internalCluster().startNodesAsync(nodes, nodeSettings).get();, +        client().admin().cluster().prepareHealth().setWaitForNodes(nodes + "").get();, +, +        int nodes = randomIntBetween(1, 3);, +        Settings nodeSettings = ImmutableSettings.builder(), +                .put(GroovyScriptEngineService.GROOVY_SCRIPT_SANDBOX_ENABLED, true), +                .build();, +        internalCluster().startNodesAsync(nodes, nodeSettings).get();, +        client().admin().cluster().prepareHealth().setWaitForNodes(nodes + "").get();, +, +++ b/src/test/java/org/elasticsearch/script/GroovyScriptTests.java, +++ b/src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java, +                .put("script.disable_dynamic", false)]