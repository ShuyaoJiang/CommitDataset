[+++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +import org.elasticsearch.common.ParsingException;, +import org.elasticsearch.common.xcontent.XContentLocation;, +, +    protected static void throwParsingExceptionOnMultipleFields(String queryName, XContentLocation contentLocation,, +                                                                String processedFieldName, String currentFieldName) {, +        if (processedFieldName != null) {, +            throw new ParsingException(contentLocation, "[" + queryName + "] query doesn't support multiple fields, found [", +                    + processedFieldName + "] and [" + currentFieldName + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +import org.elasticsearch.common.ParsingException;, +import org.elasticsearch.common.xcontent.XContentLocation;, +, +    protected static void throwParsingExceptionOnMultipleFields(String queryName, XContentLocation contentLocation,, +                                                                String processedFieldName, String currentFieldName) {, +        if (processedFieldName != null) {, +            throw new ParsingException(contentLocation, "[" + queryName + "] query doesn't support multiple fields, found [", +                    + processedFieldName + "] and [" + currentFieldName + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +import org.elasticsearch.common.ParsingException;, +import org.elasticsearch.common.xcontent.XContentLocation;, +, +    protected static void throwParsingExceptionOnMultipleFields(String queryName, XContentLocation contentLocation,, +                                                                String processedFieldName, String currentFieldName) {, +        if (processedFieldName != null) {, +            throw new ParsingException(contentLocation, "[" + queryName + "] query doesn't support multiple fields, found [", +                    + processedFieldName + "] and [" + currentFieldName + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +import org.elasticsearch.common.ParsingException;, +import org.elasticsearch.common.xcontent.XContentLocation;, +, +    protected static void throwParsingExceptionOnMultipleFields(String queryName, XContentLocation contentLocation,, +                                                                String processedFieldName, String currentFieldName) {, +        if (processedFieldName != null) {, +            throw new ParsingException(contentLocation, "[" + queryName + "] query doesn't support multiple fields, found [", +                    + processedFieldName + "] and [" + currentFieldName + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +import org.elasticsearch.common.ParsingException;, +import org.elasticsearch.common.xcontent.XContentLocation;, +, +    protected static void throwParsingExceptionOnMultipleFields(String queryName, XContentLocation contentLocation,, +                                                                String processedFieldName, String currentFieldName) {, +        if (processedFieldName != null) {, +            throw new ParsingException(contentLocation, "[" + queryName + "] query doesn't support multiple fields, found [", +                    + processedFieldName + "] and [" + currentFieldName + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchPhrasePrefixQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +import org.elasticsearch.common.ParsingException;, +import org.elasticsearch.common.xcontent.XContentLocation;, +, +    protected static void throwParsingExceptionOnMultipleFields(String queryName, XContentLocation contentLocation,, +                                                                String processedFieldName, String currentFieldName) {, +        if (processedFieldName != null) {, +            throw new ParsingException(contentLocation, "[" + queryName + "] query doesn't support multiple fields, found [", +                    + processedFieldName + "] and [" + currentFieldName + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());, +++ b/core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, currentFieldName);, +                throwParsingExceptionOnMultipleFields(NAME, parser.getTokenLocation(), fieldName, parser.currentName());]