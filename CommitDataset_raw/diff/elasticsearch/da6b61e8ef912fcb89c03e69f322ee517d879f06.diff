[+++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +For geo context the value of the `path` parameter is now validated against the mapping,, +and the context is only accepted if `path` points to a field with `geo_point` type., +, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +For geo context the value of the `path` parameter is now validated against the mapping,, +and the context is only accepted if `path` points to a field with `geo_point` type., +, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.elasticsearch.search.suggest.completion.context.ContextMapping;, +            ContextMapping.validateContextPaths(indexSettings.getIndexVersionCreated(), fieldMappers, fieldTypes::get);, +, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +For geo context the value of the `path` parameter is now validated against the mapping,, +and the context is only accepted if `path` points to a field with `geo_point` type., +, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.elasticsearch.search.suggest.completion.context.ContextMapping;, +            ContextMapping.validateContextPaths(indexSettings.getIndexVersionCreated(), fieldMappers, fieldTypes::get);, +, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/context/ContextMapping.java, +import org.elasticsearch.Version;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.MappedFieldType;, +import java.util.function.Function;, +    /**, +     * Checks if the current context is consistent with the rest of the fields. For example, the GeoContext, +     * should check that the field that it points to has the correct type., +     */, +    protected void validateReferences(Version indexVersionCreated, Function<String, MappedFieldType> fieldResolver) {, +        // No validation is required by default, +    }, +, +    /**, +     * Verifies that all field paths specified in contexts point to the fields with correct mappings, +     */, +    public static void validateContextPaths(Version indexVersionCreated, List<FieldMapper> fieldMappers,, +                                            Function<String, MappedFieldType> fieldResolver) {, +        for (FieldMapper fieldMapper : fieldMappers) {, +            if (CompletionFieldMapper.CONTENT_TYPE.equals(fieldMapper.typeName())) {, +                CompletionFieldMapper.CompletionFieldType fieldType = ((CompletionFieldMapper) fieldMapper).fieldType();, +                if (fieldType.hasContextMappings()) {, +                    for (ContextMapping context : fieldType.getContextMappings()) {, +                        context.validateReferences(indexVersionCreated, fieldResolver);, +                    }, +                }, +            }, +        }, +    }, +, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +For geo context the value of the `path` parameter is now validated against the mapping,, +and the context is only accepted if `path` points to a field with `geo_point` type., +, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.elasticsearch.search.suggest.completion.context.ContextMapping;, +            ContextMapping.validateContextPaths(indexSettings.getIndexVersionCreated(), fieldMappers, fieldTypes::get);, +, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/context/ContextMapping.java, +import org.elasticsearch.Version;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.MappedFieldType;, +import java.util.function.Function;, +    /**, +     * Checks if the current context is consistent with the rest of the fields. For example, the GeoContext, +     * should check that the field that it points to has the correct type., +     */, +    protected void validateReferences(Version indexVersionCreated, Function<String, MappedFieldType> fieldResolver) {, +        // No validation is required by default, +    }, +, +    /**, +     * Verifies that all field paths specified in contexts point to the fields with correct mappings, +     */, +    public static void validateContextPaths(Version indexVersionCreated, List<FieldMapper> fieldMappers,, +                                            Function<String, MappedFieldType> fieldResolver) {, +        for (FieldMapper fieldMapper : fieldMappers) {, +            if (CompletionFieldMapper.CONTENT_TYPE.equals(fieldMapper.typeName())) {, +                CompletionFieldMapper.CompletionFieldType fieldType = ((CompletionFieldMapper) fieldMapper).fieldType();, +                if (fieldType.hasContextMappings()) {, +                    for (ContextMapping context : fieldType.getContextMappings()) {, +                        context.validateReferences(indexVersionCreated, fieldResolver);, +                    }, +                }, +            }, +        }, +    }, +, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/context/ContextMappings.java, +import java.util.Iterator;, +public class ContextMappings implements ToXContent, Iterable<ContextMapping<?>> {, +    @Override, +    public Iterator<ContextMapping<?>> iterator() {, +        return contextMappings.iterator();, +    }, +, +++ b/docs/reference/migration/migrate_7_0/search.asciidoc, +For geo context the value of the `path` parameter is now validated against the mapping,, +and the context is only accepted if `path` points to a field with `geo_point` type., +]