[+++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public enum FieldCaseConversion {, +        return field(name, fieldCaseConversion);, +        return field(name, fieldCaseConversion);, +        if (name == null) {, +            throw new IllegalArgumentException("field name cannot be null");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java, +    public enum FieldCaseConversion {, +        return field(name, fieldCaseConversion);, +        return field(name, fieldCaseConversion);, +        if (name == null) {, +            throw new IllegalArgumentException("field name cannot be null");, +        }, +++ b/core/src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java, +import java.util.Collections;, +    public void testWriteMapWithNullKeys() throws IOException {, +        XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));, +        try {, +            builder.map(Collections.singletonMap(null, "test"));, +            fail("write map should have failed");, +        } catch(IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("field name cannot be null"));, +        }, +    }, +, +    public void testWriteMapValueWithNullKeys() throws IOException {, +        XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));, +        try {, +            builder.value(Collections.singletonMap(null, "test"));, +            fail("write map should have failed");, +        } catch(IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("field name cannot be null"));, +        }, +    }, +, +    public void testWriteFieldMapWithNullKeys() throws IOException {, +        XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));, +        try {, +            builder.field("map", Collections.singletonMap(null, "test"));, +            fail("write map should have failed");, +        } catch(IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("field name cannot be null"));, +        }, +    }]