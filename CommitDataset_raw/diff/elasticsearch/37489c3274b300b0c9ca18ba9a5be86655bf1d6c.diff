[+++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/test/java/org/elasticsearch/action/main/MainActionTests.java, +        final String clusterUUID = randomAsciiOfLengthBetween(10, 20);, +        final MainResponse mainResponse = new MainResponse(nodeName, version, clusterName, clusterUUID, build, available);, +        String clusterUUID = randomAsciiOfLengthBetween(10, 20);, +        final MainResponse mainResponse = new MainResponse("node1", Version.CURRENT, new ClusterName("cluster1"), clusterUUID,, +                Build.CURRENT, false);, +        final String expected = "{" +, +                "\"name\":\"node1\"," +, +                "\"cluster_name\":\"cluster1\"," +, +                "\"cluster_uuid\":\"" + clusterUUID + "\"," +, +                "\"version\":{" +, +                "\"number\":\"" + Version.CURRENT.toString() + "\"," +, +                "\"build_hash\":\"" + Build.CURRENT.shortHash() + "\"," +, +                "\"build_date\":\"" + Build.CURRENT.date() + "\"," +, +                "\"build_snapshot\":" + Build.CURRENT.isSnapshot() +, +                ",\"lucene_version\":\"" + Version.CURRENT.luceneVersion.toString() +, +                "\"}," +, +                "\"tagline\":\"You Know, for Search\"}";, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;, +    }, +, +        out.writeString(clusterUuid);, +        clusterUuid = in.readString();, +        builder.field("cluster_uuid", clusterUuid);, +++ b/core/src/main/java/org/elasticsearch/action/main/TransportMainAction.java, +            new MainResponse(Node.NODE_NAME_SETTING.get(settings), Version.CURRENT, clusterState.getClusterName(),, +                    clusterState.metaData().clusterUUID(), Build.CURRENT, available));, +++ b/core/src/test/java/org/elasticsearch/action/main/MainActionTests.java, +        final String clusterUUID = randomAsciiOfLengthBetween(10, 20);, +        final MainResponse mainResponse = new MainResponse(nodeName, version, clusterName, clusterUUID, build, available);, +        String clusterUUID = randomAsciiOfLengthBetween(10, 20);, +        final MainResponse mainResponse = new MainResponse("node1", Version.CURRENT, new ClusterName("cluster1"), clusterUUID,, +                Build.CURRENT, false);, +        final String expected = "{" +, +                "\"name\":\"node1\"," +, +                "\"cluster_name\":\"cluster1\"," +, +                "\"cluster_uuid\":\"" + clusterUUID + "\"," +, +                "\"version\":{" +, +                "\"number\":\"" + Version.CURRENT.toString() + "\"," +, +                "\"build_hash\":\"" + Build.CURRENT.shortHash() + "\"," +, +                "\"build_date\":\"" + Build.CURRENT.date() + "\"," +, +                "\"build_snapshot\":" + Build.CURRENT.isSnapshot() +, +                ",\"lucene_version\":\"" + Version.CURRENT.luceneVersion.toString() +, +                "\"}," +, +                "\"tagline\":\"You Know, for Search\"}";, +++ b/core/src/test/java/org/elasticsearch/rest/action/RestMainActionTests.java, +        final String clusterUUID = randomAsciiOfLengthBetween(10, 20);, +        final MainResponse mainResponse = new MainResponse(nodeName, version, clusterName, clusterUUID, build, available);, +        final String clusterUUID = randomAsciiOfLengthBetween(10, 20);, +        final MainResponse mainResponse = new MainResponse(nodeName, version, clusterName, clusterUUID, build, available);, +++ b/core/src/main/java/org/elasticsearch/action/main/MainResponse.java, +    private String clusterUuid;, +    public MainResponse(String nodeName, Version version, ClusterName clusterName, String clusterUuid, Build build, boolean available) {, +        this.clusterUuid = clusterUuid;, +    public String getClusterUuid() {, +        return clusterUuid;]