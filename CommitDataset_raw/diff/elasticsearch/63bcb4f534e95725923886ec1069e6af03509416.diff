[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            final NamedAnalyzer fakeDefault = new NamedAnalyzer("fake_default", AnalyzerScope.INDEX, new Analyzer() {, +                    return new NamedAnalyzer((String)key, AnalyzerScope.INDEX, fakeDefault.analyzer());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            final NamedAnalyzer fakeDefault = new NamedAnalyzer("fake_default", AnalyzerScope.INDEX, new Analyzer() {, +                    return new NamedAnalyzer((String)key, AnalyzerScope.INDEX, fakeDefault.analyzer());, +++ b/core/src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java, +, +    @Override, +    public void close() {, +        super.close();, +        if (scope == AnalyzerScope.INDEX) {, +            analyzer.close();, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            final NamedAnalyzer fakeDefault = new NamedAnalyzer("fake_default", AnalyzerScope.INDEX, new Analyzer() {, +                    return new NamedAnalyzer((String)key, AnalyzerScope.INDEX, fakeDefault.analyzer());, +++ b/core/src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java, +, +    @Override, +    public void close() {, +        super.close();, +        if (scope == AnalyzerScope.INDEX) {, +            analyzer.close();, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +                return new NamedAnalyzer(indexAnalyzer.name(), AnalyzerScope.INDEX,, +                return new NamedAnalyzer(searchAnalyzer.name(), AnalyzerScope.INDEX,, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            final NamedAnalyzer fakeDefault = new NamedAnalyzer("fake_default", AnalyzerScope.INDEX, new Analyzer() {, +                    return new NamedAnalyzer((String)key, AnalyzerScope.INDEX, fakeDefault.analyzer());, +++ b/core/src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java, +, +    @Override, +    public void close() {, +        super.close();, +        if (scope == AnalyzerScope.INDEX) {, +            analyzer.close();, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +                return new NamedAnalyzer(indexAnalyzer.name(), AnalyzerScope.INDEX,, +                return new NamedAnalyzer(searchAnalyzer.name(), AnalyzerScope.INDEX,, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            NamedAnalyzer defaultAnalyzer = new NamedAnalyzer("default", AnalyzerScope.INDEX, new StandardAnalyzer());, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            final NamedAnalyzer fakeDefault = new NamedAnalyzer("fake_default", AnalyzerScope.INDEX, new Analyzer() {, +                    return new NamedAnalyzer((String)key, AnalyzerScope.INDEX, fakeDefault.analyzer());, +++ b/core/src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java, +, +    @Override, +    public void close() {, +        super.close();, +        if (scope == AnalyzerScope.INDEX) {, +            analyzer.close();, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +                return new NamedAnalyzer(indexAnalyzer.name(), AnalyzerScope.INDEX,, +                return new NamedAnalyzer(searchAnalyzer.name(), AnalyzerScope.INDEX,, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            NamedAnalyzer defaultAnalyzer = new NamedAnalyzer("default", AnalyzerScope.INDEX, new StandardAnalyzer());, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DocumentFieldMapperTests.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +        fieldType1.setIndexAnalyzer(new NamedAnalyzer("foo", AnalyzerScope.INDEX, new FakeAnalyzer("index")));, +        fieldType1.setSearchAnalyzer(new NamedAnalyzer("bar", AnalyzerScope.INDEX, new FakeAnalyzer("search")));, +        fieldType1.setSearchQuoteAnalyzer(new NamedAnalyzer("baz", AnalyzerScope.INDEX, new FakeAnalyzer("search_quote")));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            final NamedAnalyzer fakeDefault = new NamedAnalyzer("fake_default", AnalyzerScope.INDEX, new Analyzer() {, +                    return new NamedAnalyzer((String)key, AnalyzerScope.INDEX, fakeDefault.analyzer());, +++ b/core/src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java, +, +    @Override, +    public void close() {, +        super.close();, +        if (scope == AnalyzerScope.INDEX) {, +            analyzer.close();, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +                return new NamedAnalyzer(indexAnalyzer.name(), AnalyzerScope.INDEX,, +                return new NamedAnalyzer(searchAnalyzer.name(), AnalyzerScope.INDEX,, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +import org.elasticsearch.index.analysis.AnalyzerScope;, +            NamedAnalyzer defaultAnalyzer = new NamedAnalyzer("default", AnalyzerScope.INDEX, new StandardAnalyzer());, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DocumentFieldMapperTests.java]