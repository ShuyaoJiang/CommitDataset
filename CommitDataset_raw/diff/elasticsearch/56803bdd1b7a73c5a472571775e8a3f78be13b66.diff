[+++ b/sql/cli/build.gradle, +import org.elasticsearch.gradle.test.RunTask, +, +  testCompile project(":x-pack-elasticsearch:transport-client") // NOCOMMIT probably can remove this, +, +  // Used by the hack to run InternalTestCluster if not running against a gradle-started cluster., +  testCompile project(path: ':modules:lang-painless', configuration: 'runtime'), +, +apply plugin: 'elasticsearch.rest-test', +integTest.mustRunAfter test, +, +integTestCluster {, +  distribution = 'zip' // NOCOMMIT make double sure we want all the modules, +  plugin project(':x-pack-elasticsearch:plugin').path, +  /* Get a "clean" test without the other x-pack features here and check them, +   * all together later on. */, +  setting 'xpack.security.enabled', 'false', +  setting 'xpack.monitoring.enabled', 'false', +  setting 'xpack.ml.enabled', 'false', +  setting 'xpack.watcher.enabled', 'false', +}, +, +task runServer(type: RunTask) {, +  distribution = 'zip' // NOCOMMIT make double sure we want all the modules, +  plugin project(':x-pack-elasticsearch:plugin').path, +  /* Get a "clean" test without the other x-pack features here and check them, +   * all together later on. */, +  setting 'xpack.security.enabled', 'false', +  setting 'xpack.monitoring.enabled', 'false', +  setting 'xpack.ml.enabled', 'false', +  setting 'xpack.watcher.enabled', 'false', +  run.dependsOn this, +}, +++ b/sql/cli/build.gradle, +import org.elasticsearch.gradle.test.RunTask, +, +  testCompile project(":x-pack-elasticsearch:transport-client") // NOCOMMIT probably can remove this, +, +  // Used by the hack to run InternalTestCluster if not running against a gradle-started cluster., +  testCompile project(path: ':modules:lang-painless', configuration: 'runtime'), +, +apply plugin: 'elasticsearch.rest-test', +integTest.mustRunAfter test, +, +integTestCluster {, +  distribution = 'zip' // NOCOMMIT make double sure we want all the modules, +  plugin project(':x-pack-elasticsearch:plugin').path, +  /* Get a "clean" test without the other x-pack features here and check them, +   * all together later on. */, +  setting 'xpack.security.enabled', 'false', +  setting 'xpack.monitoring.enabled', 'false', +  setting 'xpack.ml.enabled', 'false', +  setting 'xpack.watcher.enabled', 'false', +}, +, +task runServer(type: RunTask) {, +  distribution = 'zip' // NOCOMMIT make double sure we want all the modules, +  plugin project(':x-pack-elasticsearch:plugin').path, +  /* Get a "clean" test without the other x-pack features here and check them, +   * all together later on. */, +  setting 'xpack.security.enabled', 'false', +  setting 'xpack.monitoring.enabled', 'false', +  setting 'xpack.ml.enabled', 'false', +  setting 'xpack.watcher.enabled', 'false', +  run.dependsOn this, +}, +++ b/sql/cli/src/main/java/org/elasticsearch/xpack/sql/cli/Cli.java, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.PrintWriter;, +import java.util.Locale;, +import java.util.Properties;, +, +    public static void main(String... args) throws Exception {, +        try (Terminal term = TerminalBuilder.builder().build()) {, +            try {, +                Cli console = new Cli(new CliConfiguration("localhost:9200/_cli", new Properties()), term);, +                console.run();, +            } catch (FatalException e) {, +                new PrintWriter(term.output()).println(e.getMessage());, +                System.exit(1);, +            }, +        }, +    }, +    Cli(CliConfiguration cfg, Terminal terminal) {, +        this.cfg = cfg;, +    void run() throws IOException {, +                    ex.printStackTrace();, +        try (InputStream io = Cli.class.getResourceAsStream("/logo.txt")) {, +            if (io == null) {, +                throw new FatalException("Could not find logo!");, +            }, +        } catch (IOException e) {, +            throw new FatalException("Could not load logo!", e);, +, +    static class FatalException extends RuntimeException {, +        public FatalException(String message, Throwable cause) {, +            super(message, cause);, +        }, +]