[+++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatters.java, +            return of(getLocaldate(accessor), localTime, zoneId);, +        } else if (accessor.isSupported(MONTH_OF_YEAR)) {, +            // missing year, falling back to the epoch and then filling, +            return getLocaldate(accessor).atStartOfDay(zoneId);, +    private static LocalDate getLocaldate(TemporalAccessor accessor) {, +        if (accessor.isSupported(MONTH_OF_YEAR)) {, +            if (accessor.isSupported(DAY_OF_MONTH)) {, +                return LocalDate.of(1970, accessor.get(MONTH_OF_YEAR), accessor.get(DAY_OF_MONTH));, +            } else {, +                return LocalDate.of(1970, accessor.get(MONTH_OF_YEAR), 1);, +            }, +        }, +, +        return LOCALDATE_EPOCH;, +    }, +, +++ b/server/src/main/java/org/elasticsearch/common/time/DateFormatters.java, +            return of(getLocaldate(accessor), localTime, zoneId);, +        } else if (accessor.isSupported(MONTH_OF_YEAR)) {, +            // missing year, falling back to the epoch and then filling, +            return getLocaldate(accessor).atStartOfDay(zoneId);, +    private static LocalDate getLocaldate(TemporalAccessor accessor) {, +        if (accessor.isSupported(MONTH_OF_YEAR)) {, +            if (accessor.isSupported(DAY_OF_MONTH)) {, +                return LocalDate.of(1970, accessor.get(MONTH_OF_YEAR), accessor.get(DAY_OF_MONTH));, +            } else {, +                return LocalDate.of(1970, accessor.get(MONTH_OF_YEAR), 1);, +            }, +        }, +, +        return LOCALDATE_EPOCH;, +    }, +, +++ b/server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java, +    public void testCustomTimeFormats() {, +        assertSameDate("2010 12 06 11:05:15", "yyyy dd MM HH:mm:ss");, +        assertSameDate("12/06", "dd/MM");, +        assertSameDate("Nov 24 01:29:01 -0800", "MMM dd HH:mm:ss Z");, +    }, +, +//    public void testCustomLocales() {]