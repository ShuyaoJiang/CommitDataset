[+++ b/src/test/java/org/apache/lucene/search/vectorhighlight/XFastVectorHighlighterTest.java, +import org.elasticsearch.test.integration.ElasticsearchLuceneTestCase;, +public class XFastVectorHighlighterTest extends ElasticsearchLuceneTestCase {, +++ b/src/test/java/org/apache/lucene/search/vectorhighlight/XFastVectorHighlighterTest.java, +import org.elasticsearch.test.integration.ElasticsearchLuceneTestCase;, +public class XFastVectorHighlighterTest extends ElasticsearchLuceneTestCase {, +++ b/src/test/java/org/elasticsearch/test/integration/ElasticSearchThreadFilter.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.integration;, +, +import com.carrotsearch.randomizedtesting.ThreadFilter;, +, +public class ElasticSearchThreadFilter implements ThreadFilter {, +    @Override, +    public boolean reject(Thread t) {, +        return true;, +    }, +}, +++ b/src/test/java/org/apache/lucene/search/vectorhighlight/XFastVectorHighlighterTest.java, +import org.elasticsearch.test.integration.ElasticsearchLuceneTestCase;, +public class XFastVectorHighlighterTest extends ElasticsearchLuceneTestCase {, +++ b/src/test/java/org/elasticsearch/test/integration/ElasticSearchThreadFilter.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.integration;, +, +import com.carrotsearch.randomizedtesting.ThreadFilter;, +, +public class ElasticSearchThreadFilter implements ThreadFilter {, +    @Override, +    public boolean reject(Thread t) {, +        return true;, +    }, +}, +++ b/src/test/java/org/elasticsearch/test/integration/ElasticSearchTokenStreamTestCase.java, +/*, + * Licensed to ElasticSearch and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. ElasticSearch licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.test.integration;, +, +import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters;, +import com.carrotsearch.randomizedtesting.annotations.ThreadLeakScope;, +import com.carrotsearch.randomizedtesting.annotations.ThreadLeakScope.Scope;, +import com.carrotsearch.randomizedtesting.annotations.TimeoutSuite;, +import org.apache.lucene.analysis.BaseTokenStreamTestCase;, +import org.apache.lucene.util.TimeUnits;, +, +@ThreadLeakFilters(defaultFilters = true, filters = {ElasticSearchThreadFilter.class}), +@ThreadLeakScope(Scope.NONE)]