[+++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +      gradleVersion = gradle.getGradleVersion(), +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        // Temporarily disable the real memory usage circuit breaker. It depends on real memory usage which we have no full control, +        // over and the REST client will not retry on circuit breaking exceptions yet (see #31986 for details). Once the REST client, +        // can retry on circuit breaking exceptions, we can revert again to the default configuration., +        if (node.nodeVersion.major >= 7) {, +            esConfig['indices.breaker.total.use_real_memory'] = false, +        }, +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        // Temporarily disable the real memory usage circuit breaker. It depends on real memory usage which we have no full control, +        // over and the REST client will not retry on circuit breaking exceptions yet (see #31986 for details). Once the REST client, +        // can retry on circuit breaking exceptions, we can revert again to the default configuration., +        if (node.nodeVersion.major >= 7) {, +            esConfig['indices.breaker.total.use_real_memory'] = false, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +    static Task createCopyRestSpecTask(Project project, Provider<Boolean> includePackagedTests) {, +++ b/Vagrantfile, +, +      # https://github.com/elastic/elasticsearch/issues/30295, +      config.vm.provider 'virtualbox' do |vbox|, +        vbox.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on'], +      end, +++ b/build.gradle, +final boolean bwc_tests_enabled = true, +final String bwc_tests_disabled_issue = "" /* place a PR link here when committing bwc changes */, +      gradleVersion = gradle.getGradleVersion(), +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +            oldTestProvider = tasks.named('test'), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        // Temporarily disable the real memory usage circuit breaker. It depends on real memory usage which we have no full control, +        // over and the REST client will not retry on circuit breaking exceptions yet (see #31986 for details). Once the REST client, +        // can retry on circuit breaking exceptions, we can revert again to the default configuration., +        if (node.nodeVersion.major >= 7) {, +            esConfig['indices.breaker.total.use_real_memory'] = false, +        }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +    static Task createCopyRestSpecTask(Project project, Provider<Boolean> includePackagedTests) {, +++ b/client/rest-high-level/build.gradle, +import org.elasticsearch.gradle.test.RestIntegTestTask, +import org.gradle.api.internal.provider.Providers, +//we need to copy the yaml spec so we can check naming (see RestHighlevelClientTests#testApiNamingConventions), +Task copyRestSpec = RestIntegTestTask.createCopyRestSpecTask(project, Providers.FALSE), +test.dependsOn(copyRestSpec), +, +  //this is needed to make RestHighLevelClientTests#testApiNamingConventions work from IDEs, +  testCompile "org.elasticsearch:rest-api-spec:${version}", +++ b/Vagrantfile, +]