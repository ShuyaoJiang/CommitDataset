[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java, +    private transient Docs docs;, +, +        if (docs != null) {, +            return docs;, +        }, +        if (docs.numDocs == -1) {, +            this.docs = Docs.UNKNOWN;, +        } else {, +            this.docs = docs;, +        }, +        return this.docs;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java, +    private transient Docs docs;, +, +        if (docs != null) {, +            return docs;, +        }, +        if (docs.numDocs == -1) {, +            this.docs = Docs.UNKNOWN;, +        } else {, +            this.docs = docs;, +        }, +        return this.docs;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java, +    private transient Docs docs;, +, +        if (docs != null) {, +            return docs;, +        }, +        if (docs.numDocs == -1) {, +            this.docs = Docs.UNKNOWN;, +        } else {, +            this.docs = docs;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java, +    private transient Docs docs;, +, +        if (docs != null) {, +            return docs;, +        }, +        if (docs.numDocs == -1) {, +            this.docs = Docs.UNKNOWN;, +        } else {, +            this.docs = docs;, +        }, +        return this.docs;, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java, +    private transient Docs docs;, +, +        if (docs != null) {, +            return docs;, +        }, +        if (docs.numDocs == -1) {, +            this.docs = Docs.UNKNOWN;, +        } else {, +            this.docs = docs;, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +import org.elasticsearch.common.unit.TimeValue;, +    public static class PeerRecoveryStatus {, +, +        public enum Stage {, +            INIT((byte) 0),, +            RETRY((byte) 1),, +            FILES((byte) 2),, +            TRANSLOG((byte) 3),, +            FINALIZE((byte) 4),, +            DONE((byte) 5);, +, +            private final byte value;, +, +            Stage(byte value) {, +                this.value = value;, +            }, +, +            public byte value() {, +                return value;, +            }, +, +            public static Stage fromValue(byte value) {, +                if (value == 0) {, +                    return INIT;, +                } else if (value == 1) {, +                    return RETRY;, +                } else if (value == 2) {, +                    return FILES;, +                } else if (value == 3) {, +                    return TRANSLOG;, +                } else if (value == 4) {, +                    return FINALIZE;, +                } else if (value == 5) {, +                    return DONE;, +                }, +                throw new ElasticSearchIllegalArgumentException("No stage found for [" + value + ']');, +            }, +        }, +, +        final Stage stage;]