[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        AggregatorFactory[] getFactoryPrototypes();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        AggregatorFactory[] getFactoryPrototypes();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +import org.elasticsearch.search.aggregations.InternalAggregation.Type;, +    protected Type type;, +    public AggregatorFactory(String name, Type type) {, +        builder.field(type.name());, +        return type.stream().toUtf8();, +    }, +, +    public String getType() {, +        return type.name();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        AggregatorFactory[] getFactoryPrototypes();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +import org.elasticsearch.search.aggregations.InternalAggregation.Type;, +    protected Type type;, +    public AggregatorFactory(String name, Type type) {, +        builder.field(type.name());, +        return type.stream().toUtf8();, +    }, +, +    public String getType() {, +        return type.name();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +            AggregatorFactory[] factoryPrototypes = parser.getFactoryPrototypes();, +            if (factoryPrototypes != null) {, +                for (AggregatorFactory factoryPrototype : factoryPrototypes) {, +        }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        AggregatorFactory[] getFactoryPrototypes();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +import org.elasticsearch.search.aggregations.InternalAggregation.Type;, +    protected Type type;, +    public AggregatorFactory(String name, Type type) {, +        builder.field(type.name());, +        return type.stream().toUtf8();, +    }, +, +    public String getType() {, +        return type.name();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +            AggregatorFactory[] factoryPrototypes = parser.getFactoryPrototypes();, +            if (factoryPrototypes != null) {, +                for (AggregatorFactory factoryPrototype : factoryPrototypes) {, +        }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenParser.java, +    public AggregatorFactory[] getFactoryPrototypes() {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        AggregatorFactory[] getFactoryPrototypes();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +import org.elasticsearch.search.aggregations.InternalAggregation.Type;, +    protected Type type;, +    public AggregatorFactory(String name, Type type) {, +        builder.field(type.name());, +        return type.stream().toUtf8();, +    }, +, +    public String getType() {, +        return type.name();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +            AggregatorFactory[] factoryPrototypes = parser.getFactoryPrototypes();, +            if (factoryPrototypes != null) {, +                for (AggregatorFactory factoryPrototype : factoryPrototypes) {, +        }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenParser.java, +    public AggregatorFactory[] getFactoryPrototypes() {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java, +            super(name, InternalChildren.TYPE, new ValuesSourceParser.Input<ValuesSource.Bytes.WithOrdinals.ParentChild>());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        AggregatorFactory[] getFactoryPrototypes();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +import org.elasticsearch.search.aggregations.InternalAggregation.Type;, +    protected Type type;, +    public AggregatorFactory(String name, Type type) {, +        builder.field(type.name());, +        return type.stream().toUtf8();, +    }, +, +    public String getType() {, +        return type.name();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java, +            AggregatorFactory[] factoryPrototypes = parser.getFactoryPrototypes();, +            if (factoryPrototypes != null) {, +                for (AggregatorFactory factoryPrototype : factoryPrototypes) {, +        }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenParser.java, +    public AggregatorFactory[] getFactoryPrototypes() {, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java, +            super(name, InternalChildren.TYPE, new ValuesSourceParser.Input<ValuesSource.Bytes.WithOrdinals.ParentChild>());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregator.java, +            super(name, InternalFilter.TYPE);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        AggregatorFactory[] getFactoryPrototypes();, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java, +import org.elasticsearch.search.aggregations.InternalAggregation.Type;, +    protected Type type;, +    public AggregatorFactory(String name, Type type) {]