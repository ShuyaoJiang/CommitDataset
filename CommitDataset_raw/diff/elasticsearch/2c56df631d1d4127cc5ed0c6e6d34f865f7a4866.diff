[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/FollowIndexAction.java, +import org.elasticsearch.tasks.Task;, +        private final ThreadPool threadPool;, +            super(settings, NAME, transportService, actionFilters, Request::new);, +            this.threadPool = threadPool;, +        protected void doExecute(Task task, Request request, ActionListener<Response> listener) {, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/FollowIndexAction.java, +import org.elasticsearch.tasks.Task;, +        private final ThreadPool threadPool;, +            super(settings, NAME, transportService, actionFilters, Request::new);, +            this.threadPool = threadPool;, +        protected void doExecute(Task task, Request request, ActionListener<Response> listener) {, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowTasksExecutor.java, +                protected <Request extends ActionRequest, Response extends ActionResponse>, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/FollowIndexAction.java, +import org.elasticsearch.tasks.Task;, +        private final ThreadPool threadPool;, +            super(settings, NAME, transportService, actionFilters, Request::new);, +            this.threadPool = threadPool;, +        protected void doExecute(Task task, Request request, ActionListener<Response> listener) {, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowTasksExecutor.java, +                protected <Request extends ActionRequest, Response extends ActionResponse>, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/UnfollowIndexAction.java, +import org.elasticsearch.tasks.Task;, +        public TransportAction(Settings settings, TransportService transportService,, +            super(settings, NAME, transportService, actionFilters, Request::new);, +        protected void doExecute(Task task, Request request, ActionListener<Response> listener) {]