[+++ b/modules/test/integration/src/test/java/org/elasticsearch/test/stress/rollingrestart/RollingRestartStressTest.java, +import org.elasticsearch.action.get.GetResponse;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.search.SearchType;, +import org.elasticsearch.search.SearchHit;, +import static org.elasticsearch.common.settings.ImmutableSettings.*;, +import static org.hamcrest.MatcherAssert.*;, +import static org.hamcrest.Matchers.*;, +    private int numberOfShards = 5;, +    private int numberOfReplicas = 1;, +    public RollingRestartStressTest numberOfShards(int numberOfShards) {, +        this.numberOfShards = numberOfShards;, +        return this;, +    }, +, +    public RollingRestartStressTest numberOfReplicas(int numberOfReplicas) {, +        this.numberOfReplicas = numberOfReplicas;, +        return this;, +    }, +, +        client.client().admin().indices().prepareCreate("test").setSettings(settingsBuilder(), +                .put("index.number_of_shards", numberOfShards), +                .put("index.number_of_replicas", numberOfReplicas), +        ).execute().actionGet();, +, +        // scan all the docs, verify all have the same version based on the number of replicas, +        SearchResponse searchResponse = client.client().prepareSearch(), +                .setSearchType(SearchType.SCAN), +                .setQuery(matchAllQuery()), +                .setSize(50), +                .setScroll(TimeValue.timeValueMinutes(2)), +                .execute().actionGet();, +        logger.info("Verifying versions for {} hits...", searchResponse.hits().totalHits());, +, +        while (true) {, +            searchResponse = client.client().prepareSearchScroll(searchResponse.scrollId()).setScroll(TimeValue.timeValueMinutes(2)).execute().actionGet();, +            assertThat(searchResponse.failedShards(), equalTo(0));, +            for (SearchHit hit : searchResponse.hits()) {, +                long version = -1;, +                for (int i = 0; i < (numberOfReplicas + 1); i++) {, +                    GetResponse getResponse = client.client().prepareGet(hit.index(), hit.type(), hit.id()).execute().actionGet();, +                    if (version == -1) {, +                        version = getResponse.version();, +                    } else {, +                        if (version != getResponse.version()) {, +                            logger.warn("Doc {} has different version numbers {} and {}", hit.id(), version, getResponse.version());, +                        }, +                    }, +                }, +            }, +            if (searchResponse.hits().hits().length == 0) {, +                break;, +            }, +        }, +        logger.info("Done verifying versions");, +, +        Settings settings = settingsBuilder(), +                .numberOfShards(5), +                .numberOfReplicas(1), +                .cleanNodeData(false), +                .period(TimeValue.timeValueMinutes(1));]