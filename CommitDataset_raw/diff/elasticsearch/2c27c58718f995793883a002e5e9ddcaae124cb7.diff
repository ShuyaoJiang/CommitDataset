[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest;, +    /** Initiate a synced flush manually using the synced flush API, +      * <p>, +      * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-synced-flush.html">, +      *     Synced flush API on elastic.co</a>, +      */, +    public SyncedFlushResponse flushSynced(SyncedFlushRequest syncedFlushRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(syncedFlushRequest, RequestConverters::flushSynced,, +                SyncedFlushResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously initiate a synced flush manually using the synced flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-synced-flush.html">, +     *     Synced flush API on elastic.co</a>, +     */, +    public void flushSyncedAsync(SyncedFlushRequest syncedFlushRequest, ActionListener<SyncedFlushResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(syncedFlushRequest, RequestConverters::flushSynced,, +                SyncedFlushResponse::fromXContent, listener, emptySet(), headers);, +    }, +, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest;, +    /** Initiate a synced flush manually using the synced flush API, +      * <p>, +      * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-synced-flush.html">, +      *     Synced flush API on elastic.co</a>, +      */, +    public SyncedFlushResponse flushSynced(SyncedFlushRequest syncedFlushRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(syncedFlushRequest, RequestConverters::flushSynced,, +                SyncedFlushResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously initiate a synced flush manually using the synced flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-synced-flush.html">, +     *     Synced flush API on elastic.co</a>, +     */, +    public void flushSyncedAsync(SyncedFlushRequest syncedFlushRequest, ActionListener<SyncedFlushResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(syncedFlushRequest, RequestConverters::flushSynced,, +                SyncedFlushResponse::fromXContent, listener, emptySet(), headers);, +    }, +, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest;, +    static Request flushSynced(SyncedFlushRequest syncedFlushRequest) {, +        String[] indices = syncedFlushRequest.indices() == null ? Strings.EMPTY_ARRAY : syncedFlushRequest.indices();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint(indices, "_flush/synced"));, +        Params parameters = new Params(request);, +        parameters.withIndicesOptions(syncedFlushRequest.indicesOptions());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest;, +    /** Initiate a synced flush manually using the synced flush API, +      * <p>, +      * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-synced-flush.html">, +      *     Synced flush API on elastic.co</a>, +      */, +    public SyncedFlushResponse flushSynced(SyncedFlushRequest syncedFlushRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(syncedFlushRequest, RequestConverters::flushSynced,, +                SyncedFlushResponse::fromXContent, emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously initiate a synced flush manually using the synced flush API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-synced-flush.html">, +     *     Synced flush API on elastic.co</a>, +     */, +    public void flushSyncedAsync(SyncedFlushRequest syncedFlushRequest, ActionListener<SyncedFlushResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(syncedFlushRequest, RequestConverters::flushSynced,, +                SyncedFlushResponse::fromXContent, listener, emptySet(), headers);, +    }, +, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.admin.indices.flush.SyncedFlushRequest;, +    static Request flushSynced(SyncedFlushRequest syncedFlushRequest) {, +        String[] indices = syncedFlushRequest.indices() == null ? Strings.EMPTY_ARRAY : syncedFlushRequest.indices();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint(indices, "_flush/synced"));, +        Params parameters = new Params(request);, +        parameters.withIndicesOptions(syncedFlushRequest.indicesOptions());, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SyncedFlushResponse.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License.]