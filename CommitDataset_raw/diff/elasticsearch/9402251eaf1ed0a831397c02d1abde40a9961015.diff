[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +     * Read from a stream., +     */, +    public CircleBuilder(StreamInput in) throws IOException {, +        center(readFromStream(in));, +        radius(in.readDouble(), DistanceUnit.readFromStream(in));;, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        writeCoordinateTo(center, out);, +        out.writeDouble(radius);, +        unit.writeTo(out);, +    }, +, +    /**, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +     * Read from a stream., +     */, +    public CircleBuilder(StreamInput in) throws IOException {, +        center(readFromStream(in));, +        radius(in.readDouble(), DistanceUnit.readFromStream(in));;, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        writeCoordinateTo(center, out);, +        out.writeDouble(radius);, +        unit.writeTo(out);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CoordinateCollection.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import java.util.ArrayList;, +    /**, +     * Read from a stream., +     */, +    protected CoordinateCollection(StreamInput in) throws IOException {, +        int size = in.readVInt();, +        coordinates = new ArrayList<>(size);, +        for (int i=0; i < size; i++) {, +            coordinates.add(readFromStream(in));, +        }, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeVInt(coordinates.size());, +        for (Coordinate point : coordinates) {, +            writeCoordinateTo(point, out);, +        }, +    }, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +     * Read from a stream., +     */, +    public CircleBuilder(StreamInput in) throws IOException {, +        center(readFromStream(in));, +        radius(in.readDouble(), DistanceUnit.readFromStream(in));;, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        writeCoordinateTo(center, out);, +        out.writeDouble(radius);, +        unit.writeTo(out);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/CoordinateCollection.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import java.util.ArrayList;, +    /**, +     * Read from a stream., +     */, +    protected CoordinateCollection(StreamInput in) throws IOException {, +        int size = in.readVInt();, +        coordinates = new ArrayList<>(size);, +        for (int i=0; i < size; i++) {, +            coordinates.add(readFromStream(in));, +        }, +    }, +, +    @Override, +    public void writeTo(StreamOutput out) throws IOException {, +        out.writeVInt(coordinates.size());, +        for (Coordinate point : coordinates) {, +            writeCoordinateTo(point, out);, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    private final Coordinate topLeft;]