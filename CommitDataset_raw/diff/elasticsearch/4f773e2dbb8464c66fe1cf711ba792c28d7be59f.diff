[+++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +    // NOTE: public for testing only, +    public BulkItemRequest(int id, DocWriteRequest request) {, +    BulkItemResponse getPrimaryResponse() {, +    void setPrimaryResponse(BulkItemResponse primaryResponse) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +    // NOTE: public for testing only, +    public BulkItemRequest(int id, DocWriteRequest request) {, +    BulkItemResponse getPrimaryResponse() {, +    void setPrimaryResponse(BulkItemResponse primaryResponse) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +import org.elasticsearch.index.seqno.SequenceNumbers;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +        private final long seqNo;, +        /**, +         * For write failures before operation was assigned a sequence number., +         *, +         * use @{link {@link #Failure(String, String, String, Exception, long)}}, +         * to record operation sequence no with failure, +         */, +        public Failure(String index, String type, String id, Exception cause) {, +            this(index, type, id, cause, ExceptionsHelper.status(cause), SequenceNumbersService.UNASSIGNED_SEQ_NO);, +        }, +, +        public Failure(String index, String type, String id, Exception cause, RestStatus status) {, +            this(index, type, id, cause, status, SequenceNumbersService.UNASSIGNED_SEQ_NO);, +        }, +, +        /** For write failures after operation was assigned a sequence number. */, +        public Failure(String index, String type, String id, Exception cause, long seqNo) {, +            this(index, type, id, cause, ExceptionsHelper.status(cause), seqNo);, +        }, +, +        public Failure(String index, String type, String id, Exception cause, RestStatus status, long seqNo) {, +            this.seqNo = seqNo;, +            if (in.getVersion().onOrAfter(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                seqNo = in.readZLong();, +            } else {, +                seqNo = SequenceNumbersService.UNASSIGNED_SEQ_NO;, +            }, +            if (out.getVersion().onOrAfter(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                out.writeZLong(getSeqNo());, +            }, +        /**, +         * The operation sequence number generated by primary, +         * NOTE: {@link SequenceNumbersService#UNASSIGNED_SEQ_NO}, +         * indicates sequence number was not generated by primary, +         */, +        public long getSeqNo() {, +            return seqNo;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java, +    // NOTE: public for testing only, +    public BulkItemRequest(int id, DocWriteRequest request) {, +    BulkItemResponse getPrimaryResponse() {, +    void setPrimaryResponse(BulkItemResponse primaryResponse) {, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +import org.elasticsearch.index.seqno.SequenceNumbers;, +import org.elasticsearch.index.seqno.SequenceNumbersService;, +        private final long seqNo;, +        /**, +         * For write failures before operation was assigned a sequence number., +         *, +         * use @{link {@link #Failure(String, String, String, Exception, long)}}, +         * to record operation sequence no with failure, +         */, +        public Failure(String index, String type, String id, Exception cause) {, +            this(index, type, id, cause, ExceptionsHelper.status(cause), SequenceNumbersService.UNASSIGNED_SEQ_NO);, +        }, +, +        public Failure(String index, String type, String id, Exception cause, RestStatus status) {, +            this(index, type, id, cause, status, SequenceNumbersService.UNASSIGNED_SEQ_NO);, +        }, +, +        /** For write failures after operation was assigned a sequence number. */, +        public Failure(String index, String type, String id, Exception cause, long seqNo) {, +            this(index, type, id, cause, ExceptionsHelper.status(cause), seqNo);, +        }, +, +        public Failure(String index, String type, String id, Exception cause, RestStatus status, long seqNo) {, +            this.seqNo = seqNo;, +            if (in.getVersion().onOrAfter(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                seqNo = in.readZLong();, +            } else {, +                seqNo = SequenceNumbersService.UNASSIGNED_SEQ_NO;, +            }, +            if (out.getVersion().onOrAfter(Version.V_6_0_0_alpha1_UNRELEASED)) {, +                out.writeZLong(getSeqNo());, +            }, +        /**, +         * The operation sequence number generated by primary, +         * NOTE: {@link SequenceNumbersService#UNASSIGNED_SEQ_NO}, +         * indicates sequence number was not generated by primary, +         */, +        public long getSeqNo() {, +            return seqNo;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java]