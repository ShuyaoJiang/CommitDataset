[+++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.script.IngestScript;, +        IngestScript.Factory factory = scriptService.compile(script, IngestScript.CONTEXT);, +        factory.newInstance(script.getParams()).execute(document.getSourceAndMetadata());, +                    scriptService.compile(script, IngestScript.CONTEXT);, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.script.IngestScript;, +        IngestScript.Factory factory = scriptService.compile(script, IngestScript.CONTEXT);, +        factory.newInstance(script.getParams()).execute(document.getSourceAndMetadata());, +                    scriptService.compile(script, IngestScript.CONTEXT);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +            return Collections.singletonMap("my_script", ctx -> {, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.script.IngestScript;, +        IngestScript.Factory factory = scriptService.compile(script, IngestScript.CONTEXT);, +        factory.newInstance(script.getParams()).execute(document.getSourceAndMetadata());, +                    scriptService.compile(script, IngestScript.CONTEXT);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +            return Collections.singletonMap("my_script", ctx -> {, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java, +import java.util.Collections;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.script.MockScriptEngine;, +import org.elasticsearch.script.ScriptModule;, +import org.elasticsearch.script.ScriptType;, +        String scriptName = "script";, +        ScriptService scriptService = new ScriptService(Settings.builder().build(),, +            Collections.singletonMap(, +                Script.DEFAULT_SCRIPT_LANG, new MockScriptEngine(, +                    Script.DEFAULT_SCRIPT_LANG,, +                    Collections.singletonMap(, +                        scriptName, ctx -> {, +                            ctx.put("bytes_total", randomBytesTotal);, +                            return null;, +                        }, +                    ), +                ), +            ),, +            new HashMap<>(ScriptModule.CORE_CONTEXTS), +        );, +        Script script = new Script(ScriptType.INLINE, Script.DEFAULT_SCRIPT_LANG, scriptName, Collections.emptyMap());, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.script.IngestScript;, +        IngestScript.Factory factory = scriptService.compile(script, IngestScript.CONTEXT);, +        factory.newInstance(script.getParams()).execute(document.getSourceAndMetadata());, +                    scriptService.compile(script, IngestScript.CONTEXT);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +            return Collections.singletonMap("my_script", ctx -> {, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java, +import java.util.Collections;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.script.MockScriptEngine;, +import org.elasticsearch.script.ScriptModule;, +import org.elasticsearch.script.ScriptType;, +        String scriptName = "script";, +        ScriptService scriptService = new ScriptService(Settings.builder().build(),, +            Collections.singletonMap(, +                Script.DEFAULT_SCRIPT_LANG, new MockScriptEngine(, +                    Script.DEFAULT_SCRIPT_LANG,, +                    Collections.singletonMap(, +                        scriptName, ctx -> {, +                            ctx.put("bytes_total", randomBytesTotal);, +                            return null;, +                        }, +                    ), +                ), +            ),, +            new HashMap<>(ScriptModule.CORE_CONTEXTS), +        );, +        Script script = new Script(ScriptType.INLINE, Script.DEFAULT_SCRIPT_LANG, scriptName, Collections.emptyMap());, +++ b/server/src/main/java/org/elasticsearch/script/ExecutableScript.java, +++ b/modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java, +import org.elasticsearch.script.IngestScript;, +        IngestScript.Factory factory = scriptService.compile(script, IngestScript.CONTEXT);, +        factory.newInstance(script.getParams()).execute(document.getSourceAndMetadata());, +                    scriptService.compile(script, IngestScript.CONTEXT);, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +            return Collections.singletonMap("my_script", ctx -> {, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java, +import java.util.Collections;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.script.MockScriptEngine;, +import org.elasticsearch.script.ScriptModule;, +import org.elasticsearch.script.ScriptType;, +        String scriptName = "script";, +        ScriptService scriptService = new ScriptService(Settings.builder().build(),, +            Collections.singletonMap(, +                Script.DEFAULT_SCRIPT_LANG, new MockScriptEngine(, +                    Script.DEFAULT_SCRIPT_LANG,, +                    Collections.singletonMap(, +                        scriptName, ctx -> {, +                            ctx.put("bytes_total", randomBytesTotal);, +                            return null;, +                        }, +                    ), +                ), +            ),, +            new HashMap<>(ScriptModule.CORE_CONTEXTS), +        );, +        Script script = new Script(ScriptType.INLINE, Script.DEFAULT_SCRIPT_LANG, scriptName, Collections.emptyMap());]