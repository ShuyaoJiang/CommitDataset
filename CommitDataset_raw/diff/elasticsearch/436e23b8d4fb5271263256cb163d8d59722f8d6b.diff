[+++ b/src/main/java/org/elasticsearch/search/dfs/AggregatedDfs.java, +            out.writeVLong(DfsSearchResult.plusOne(stats.totalTermFreq()));, +++ b/src/main/java/org/elasticsearch/search/dfs/AggregatedDfs.java, +            out.writeVLong(DfsSearchResult.plusOne(stats.totalTermFreq()));, +++ b/src/main/java/org/elasticsearch/search/dfs/DfsSearchResult.java, +            out.writeVLong(addOne(entry.getValue().docCount()));, +            out.writeVLong(addOne(entry.getValue().sumTotalTermFreq()));, +            out.writeVLong(addOne(entry.getValue().sumDocFreq()));, +        out.writeVLong(addOne(termStatistic.totalTermFreq()));        , +            final long docCount = subOne(in.readVLong());, +            final long sumTotalTermFreq = subOne(in.readVLong());, +            final long sumDocFreq = subOne(in.readVLong());, +                final long totalTermFreq = subOne(in.readVLong());, +    public static long addOne(long value) {, +        assert value + 1 >= 0;, +    , +    /*, +     * See #addOne this just subtracting one and asserts that the actual value, +     * is positive., +     */, +    public static long subOne(long value) {, +        assert value >= 0;]