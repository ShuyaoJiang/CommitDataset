[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +    protected PrimaryResult shardOperationOnPrimary(ShardFlushRequest shardRequest, IndexShard primary) {, +        primary.flush(shardRequest.getRequest());, +        logger.trace("{} flush request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(ShardFlushRequest request, IndexShard replica) {, +        replica.flush(request.getRequest());, +        logger.trace("{} flush request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +    protected PrimaryResult shardOperationOnPrimary(ShardFlushRequest shardRequest, IndexShard primary) {, +        primary.flush(shardRequest.getRequest());, +        logger.trace("{} flush request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(ShardFlushRequest request, IndexShard replica) {, +        replica.flush(request.getRequest());, +        logger.trace("{} flush request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +    protected PrimaryResult shardOperationOnPrimary(BasicReplicationRequest shardRequest, IndexShard primary) {, +        primary.refresh("api");, +        logger.trace("{} refresh request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(BasicReplicationRequest request, IndexShard replica) {, +        replica.refresh("api");, +        logger.trace("{} refresh request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +    protected PrimaryResult shardOperationOnPrimary(ShardFlushRequest shardRequest, IndexShard primary) {, +        primary.flush(shardRequest.getRequest());, +        logger.trace("{} flush request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(ShardFlushRequest request, IndexShard replica) {, +        replica.flush(request.getRequest());, +        logger.trace("{} flush request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +    protected PrimaryResult shardOperationOnPrimary(BasicReplicationRequest shardRequest, IndexShard primary) {, +        primary.refresh("api");, +        logger.trace("{} refresh request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(BasicReplicationRequest request, IndexShard replica) {, +        replica.refresh("api");, +        logger.trace("{} refresh request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +    protected WriteResult<BulkShardResponse> onPrimaryShard(BulkShardRequest request, IndexShard primary) throws Exception {, +        final IndexMetaData metaData = primary.indexSettings().getIndexMetaData();, +            location = handleItem(metaData, request, primary, preVersions, preVersionTypes, location, requestIndex, item);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +    protected PrimaryResult shardOperationOnPrimary(ShardFlushRequest shardRequest, IndexShard primary) {, +        primary.flush(shardRequest.getRequest());, +        logger.trace("{} flush request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(ShardFlushRequest request, IndexShard replica) {, +        replica.flush(request.getRequest());, +        logger.trace("{} flush request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +    protected PrimaryResult shardOperationOnPrimary(BasicReplicationRequest shardRequest, IndexShard primary) {, +        primary.refresh("api");, +        logger.trace("{} refresh request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(BasicReplicationRequest request, IndexShard replica) {, +        replica.refresh("api");, +        logger.trace("{} refresh request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +    protected WriteResult<BulkShardResponse> onPrimaryShard(BulkShardRequest request, IndexShard primary) throws Exception {, +        final IndexMetaData metaData = primary.indexSettings().getIndexMetaData();, +            location = handleItem(metaData, request, primary, preVersions, preVersionTypes, location, requestIndex, item);, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +    private final TransportService transportService;, +    private final IndicesService indicesService;, +    private final String transportReplicaAction;, +    private final String transportPrimaryAction;, +     * @param primary      the primary shard to perform the operation on, +    protected abstract PrimaryResult shardOperationOnPrimary(Request shardRequest, IndexShard primary) throws Exception;, +     * {@link IndexShard#acquireReplicaOperationLock(long, ActionListener, String)}, +     *, +     * @param shardRequest the request to the replica shard, +     * @param replica      the replica shard to perform the operation on, +    protected abstract ReplicaResult shardOperationOnReplica(ReplicaRequest shardRequest, IndexShard replica);, +        private final IndexShard replica;, +            final ShardId shardId = request.shardId();, +            assert shardId != null : "request shardId must be set";, +            this.replica = getIndexShard(shardId);, +                ReplicaResult replicaResult = shardOperationOnReplica(request, replica);, +            final String actualAllocationId = this.replica.routingEntry().allocationId().getId();, +            if (actualAllocationId.equals(targetAllocationID) == false) {, +                throw new ShardNotFoundException(this.replica.shardId(), "expected aID [{}] but found [{}]", targetAllocationID,, +                    actualAllocationId);, +            }, +            replica.acquireReplicaOperationLock(request.primaryTerm, this, executor);, +    private IndexShard getIndexShard(ShardId shardId) {, +        IndexService indexService = indicesService.indexServiceSafe(shardId.getIndex());, +        return indexService.getShard(shardId.id());, +    }, +, +    private void acquirePrimaryShardReference(ShardId shardId, String allocationId,, +        IndexShard indexShard = getIndexShard(shardId);, +            PrimaryResult result = shardOperationOnPrimary(request, indexShard);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +    protected PrimaryResult shardOperationOnPrimary(ShardFlushRequest shardRequest, IndexShard primary) {, +        primary.flush(shardRequest.getRequest());, +        logger.trace("{} flush request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(ShardFlushRequest request, IndexShard replica) {, +        replica.flush(request.getRequest());, +        logger.trace("{} flush request executed on replica", replica.shardId());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +    protected PrimaryResult shardOperationOnPrimary(BasicReplicationRequest shardRequest, IndexShard primary) {, +        primary.refresh("api");, +        logger.trace("{} refresh request executed on primary", primary.shardId());, +    protected ReplicaResult shardOperationOnReplica(BasicReplicationRequest request, IndexShard replica) {]