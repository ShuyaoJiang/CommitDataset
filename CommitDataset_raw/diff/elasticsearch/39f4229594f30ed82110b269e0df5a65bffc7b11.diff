[+++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +    protected void beforeIndexDeletion() throws IOException {, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +    protected void beforeIndexDeletion() throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +    protected void beforeIndexDeletion() throws IOException {, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +    protected void beforeIndexDeletion() throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +    protected void beforeIndexDeletion() throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.action.admin.cluster.node.tasks.list.ListTasksResponse;, +import org.elasticsearch.action.support.replication.ReplicationTask;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.tasks.TaskInfo;, +import org.elasticsearch.tasks.TaskManager;, +    public void beforeIndexDeletion() throws IOException {, +    private void assertShardIndexCounter() throws IOException {, +                    int activeOperationsCount = indexShard.getActiveOperationsCount();, +                    if (activeOperationsCount > 0) {, +                        TaskManager taskManager = getInstance(TransportService.class, nodeAndClient.name).getTaskManager();, +                        DiscoveryNode localNode = getInstance(ClusterService.class, nodeAndClient.name).localNode();, +                        List<TaskInfo> taskInfos = taskManager.getTasks().values().stream(), +                            .filter(task -> task instanceof ReplicationTask), +                            .map(task -> task.taskInfo(localNode, true)), +                            .collect(Collectors.toList());, +                        ListTasksResponse response = new ListTasksResponse(taskInfos, Collections.emptyList(), Collections.emptyList());, +                        XContentBuilder builder = XContentFactory.jsonBuilder(), +                            .prettyPrint(), +                            .startObject(), +                            .value(response), +                            .endObject();, +                        throw new AssertionError("expected index shard counter on shard " + indexShard.shardId() + " on node " +, +                            nodeAndClient.name + " to be 0 but was " + activeOperationsCount + ". Current replication tasks on node:\n" +, +                            builder.string());, +                    }, +++ b/core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java, +    protected void beforeIndexDeletion() throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +    protected void beforeIndexDeletion() throws IOException {, +++ b/test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java, +import org.elasticsearch.action.admin.cluster.node.tasks.list.ListTasksResponse;, +import org.elasticsearch.action.support.replication.ReplicationTask;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.tasks.TaskInfo;, +import org.elasticsearch.tasks.TaskManager;, +    public void beforeIndexDeletion() throws IOException {, +    private void assertShardIndexCounter() throws IOException {, +                    int activeOperationsCount = indexShard.getActiveOperationsCount();, +                    if (activeOperationsCount > 0) {, +                        TaskManager taskManager = getInstance(TransportService.class, nodeAndClient.name).getTaskManager();, +                        DiscoveryNode localNode = getInstance(ClusterService.class, nodeAndClient.name).localNode();, +                        List<TaskInfo> taskInfos = taskManager.getTasks().values().stream(), +                            .filter(task -> task instanceof ReplicationTask), +                            .map(task -> task.taskInfo(localNode, true)), +                            .collect(Collectors.toList());, +                        ListTasksResponse response = new ListTasksResponse(taskInfos, Collections.emptyList(), Collections.emptyList());, +                        XContentBuilder builder = XContentFactory.jsonBuilder(), +                            .prettyPrint(), +                            .startObject(), +                            .value(response), +                            .endObject();, +                        throw new AssertionError("expected index shard counter on shard " + indexShard.shardId() + " on node " +, +                            nodeAndClient.name + " to be 0 but was " + activeOperationsCount + ". Current replication tasks on node:\n" +, +                            builder.string());, +                    }, +++ b/test/framework/src/main/java/org/elasticsearch/test/TestCluster.java, +    public void beforeIndexDeletion() throws IOException {]