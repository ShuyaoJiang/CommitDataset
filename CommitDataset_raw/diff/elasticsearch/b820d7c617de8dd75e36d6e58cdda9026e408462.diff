[+++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceAggregationBuilder.java, +            for (Map.Entry<String, MultiValuesSourceFieldConfig> fieldEntry : fields.entrySet()) {, +                builder.field(fieldEntry.getKey(), fieldEntry.getValue());, +            }, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceAggregationBuilder.java, +            for (Map.Entry<String, MultiValuesSourceFieldConfig> fieldEntry : fields.entrySet()) {, +                builder.field(fieldEntry.getKey(), fieldEntry.getValue());, +            }, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceFieldConfig.java, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import java.util.Objects;, +public class MultiValuesSourceFieldConfig implements Writeable, ToXContentObject {, +        builder.startObject();, +            builder.field(ParseField.CommonFields.TIME_ZONE.getPreferredName(), timeZone.getID());, +        builder.endObject();, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +        MultiValuesSourceFieldConfig that = (MultiValuesSourceFieldConfig) o;, +        return Objects.equals(fieldName, that.fieldName), +            && Objects.equals(missing, that.missing), +            && Objects.equals(script, that.script), +            && Objects.equals(timeZone, that.timeZone);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(fieldName, missing, script, timeZone);, +    }, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceAggregationBuilder.java, +            for (Map.Entry<String, MultiValuesSourceFieldConfig> fieldEntry : fields.entrySet()) {, +                builder.field(fieldEntry.getKey(), fieldEntry.getValue());, +            }, +++ b/server/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceFieldConfig.java, +import org.elasticsearch.common.xcontent.ToXContentObject;, +import java.util.Objects;, +public class MultiValuesSourceFieldConfig implements Writeable, ToXContentObject {, +        builder.startObject();, +            builder.field(ParseField.CommonFields.TIME_ZONE.getPreferredName(), timeZone.getID());, +        builder.endObject();, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +        MultiValuesSourceFieldConfig that = (MultiValuesSourceFieldConfig) o;, +        return Objects.equals(fieldName, that.fieldName), +            && Objects.equals(missing, that.missing), +            && Objects.equals(script, that.script), +            && Objects.equals(timeZone, that.timeZone);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(fieldName, missing, script, timeZone);, +    }, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }, +, +++ b/server/src/test/java/org/elasticsearch/search/aggregations/metrics/weighted_avg/WeightedAvgAggregationBuilderTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.aggregations.metrics.weighted_avg;, +, +import org.elasticsearch.common.io.stream.Writeable;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.NamedXContentRegistry;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.search.SearchModule;, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +import org.elasticsearch.search.aggregations.metrics.WeightedAvgAggregationBuilder;, +import org.elasticsearch.search.aggregations.support.MultiValuesSourceFieldConfig;, +import org.elasticsearch.test.AbstractSerializingTestCase;, +import org.junit.Before;]