[+++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public Collection<String> simpleMatchToFullName(String pattern) {, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public Collection<String> simpleMatchToFullName(String pattern) {, +++ b/server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        return mapperService.simpleMatchToFullName(pattern);, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public Collection<String> simpleMatchToFullName(String pattern) {, +++ b/server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        return mapperService.simpleMatchToFullName(pattern);, +++ b/server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +            fieldNames.addAll(indexShard.mapperService().simpleMatchToFullName(pattern));, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public Collection<String> simpleMatchToFullName(String pattern) {, +++ b/server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        return mapperService.simpleMatchToFullName(pattern);, +++ b/server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +            fieldNames.addAll(indexShard.mapperService().simpleMatchToFullName(pattern));, +++ b/server/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightPhase.java, +                fieldNamesToHighlight = context.mapperService().simpleMatchToFullName(field.field());, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public Collection<String> simpleMatchToFullName(String pattern) {, +++ b/server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        return mapperService.simpleMatchToFullName(pattern);, +++ b/server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +            fieldNames.addAll(indexShard.mapperService().simpleMatchToFullName(pattern));, +++ b/server/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightPhase.java, +                fieldNamesToHighlight = context.mapperService().simpleMatchToFullName(field.field());, +++ b/server/src/test/java/org/elasticsearch/index/mapper/FieldNamesFieldTypeTests.java, +        when(mapperService.simpleMatchToFullName("field_name")).thenReturn(Collections.singletonList("field_name"));, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public Collection<String> simpleMatchToFullName(String pattern) {, +++ b/server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        return mapperService.simpleMatchToFullName(pattern);, +++ b/server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +            fieldNames.addAll(indexShard.mapperService().simpleMatchToFullName(pattern));, +++ b/server/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightPhase.java, +                fieldNamesToHighlight = context.mapperService().simpleMatchToFullName(field.field());, +++ b/server/src/test/java/org/elasticsearch/index/mapper/FieldNamesFieldTypeTests.java, +        when(mapperService.simpleMatchToFullName("field_name")).thenReturn(Collections.singletonList("field_name"));, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +import org.elasticsearch.index.mapper.MappedFieldType;, +import org.elasticsearch.index.mapper.MapperService;, +     * Waits until mappings for the provided fields exist on all nodes. Note, this waits for the current, +            MapperService mapperService = indexService.mapperService();, +                MappedFieldType fieldType = mapperService.fullName(fieldName);, +                assertNotNull("field " + fieldName + " doesn't exists on " + node, fieldType);, +++ b/server/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesIndexAction.java, +            fieldNames.addAll(mapperService.simpleMatchToFullName(field));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +++ b/server/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    public Collection<String> simpleMatchToFullName(String pattern) {, +++ b/server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java, +        return mapperService.simpleMatchToFullName(pattern);, +++ b/server/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java, +            fieldNames.addAll(indexShard.mapperService().simpleMatchToFullName(pattern));, +++ b/server/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightPhase.java, +                fieldNamesToHighlight = context.mapperService().simpleMatchToFullName(field.field());, +++ b/server/src/test/java/org/elasticsearch/index/mapper/FieldNamesFieldTypeTests.java, +        when(mapperService.simpleMatchToFullName("field_name")).thenReturn(Collections.singletonList("field_name"));, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java, +import org.elasticsearch.index.mapper.MappedFieldType;, +import org.elasticsearch.index.mapper.MapperService;, +     * Waits until mappings for the provided fields exist on all nodes. Note, this waits for the current, +            MapperService mapperService = indexService.mapperService();, +                MappedFieldType fieldType = mapperService.fullName(fieldName);, +                assertNotNull("field " + fieldName + " doesn't exists on " + node, fieldType);, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/authz/accesscontrol/SecurityIndexSearcherWrapperIntegrationTests.java, +        when(mapperService.simpleMatchToFullName(anyString()))]