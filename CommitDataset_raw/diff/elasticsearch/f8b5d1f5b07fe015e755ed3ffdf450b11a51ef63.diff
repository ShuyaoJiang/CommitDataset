[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java, +        return newState.nodes().getMasterNodeId() != null && newState != previousState;, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java, +        return newState.nodes().getMasterNodeId() != null && newState != previousState;, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return this.masterNodeId;, +                    String masterNodeId = getMasterNodeId();, +            this.masterNodeId = nodes.getMasterNodeId();, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java, +        return newState.nodes().getMasterNodeId() != null && newState != previousState;, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return this.masterNodeId;, +                    String masterNodeId = getMasterNodeId();, +            this.masterNodeId = nodes.getMasterNodeId();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                                logger.debug("got first state from fresh master [{}]", nodeSpecificClusterState.nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java, +        return newState.nodes().getMasterNodeId() != null && newState != previousState;, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return this.masterNodeId;, +                    String masterNodeId = getMasterNodeId();, +            this.masterNodeId = nodes.getMasterNodeId();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                                logger.debug("got first state from fresh master [{}]", nodeSpecificClusterState.nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                if (!masterNode.getId().equals(currentState.nodes().getMasterNodeId())) {, +                    logger.debug("got first state from fresh master [{}]", newClusterState.nodes().getMasterNodeId());, +        if (currentNodes.getMasterNodeId() == null) {, +        if (!currentNodes.getMasterNodeId().equals(newClusterState.nodes().getMasterNodeId())) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java, +        return newState.nodes().getMasterNodeId() != null && newState != previousState;, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return this.masterNodeId;, +                    String masterNodeId = getMasterNodeId();, +            this.masterNodeId = nodes.getMasterNodeId();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                                logger.debug("got first state from fresh master [{}]", nodeSpecificClusterState.nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                if (!masterNode.getId().equals(currentState.nodes().getMasterNodeId())) {, +                    logger.debug("got first state from fresh master [{}]", newClusterState.nodes().getMasterNodeId());, +        if (currentNodes.getMasterNodeId() == null) {, +        if (!currentNodes.getMasterNodeId().equals(newClusterState.nodes().getMasterNodeId())) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PendingClusterStatesQueue.java, +                    state.nodes().getMasterNodeId(), +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java, +        return newState.nodes().getMasterNodeId() != null && newState != previousState;, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return this.masterNodeId;, +                    String masterNodeId = getMasterNodeId();, +            this.masterNodeId = nodes.getMasterNodeId();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                                logger.debug("got first state from fresh master [{}]", nodeSpecificClusterState.nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                if (!masterNode.getId().equals(currentState.nodes().getMasterNodeId())) {, +                    logger.debug("got first state from fresh master [{}]", newClusterState.nodes().getMasterNodeId());, +        if (currentNodes.getMasterNodeId() == null) {, +        if (!currentNodes.getMasterNodeId().equals(newClusterState.nodes().getMasterNodeId())) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PendingClusterStatesQueue.java, +                    state.nodes().getMasterNodeId(), +++ b/core/src/main/java/org/elasticsearch/gateway/GatewayService.java, +        if (state.nodes().getMasterNodeId() == null) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterState.java, +        return this.nodes().getMasterNodeId() != null && this.nodes().getMasterNodeId().equals(other.nodes().getMasterNodeId()) && this.version() > other.version();, +            builder.field("master_node", nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java, +        return newState.nodes().getMasterNodeId() != null && newState != previousState;, +++ b/core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +        return this.masterNodeId;, +                    String masterNodeId = getMasterNodeId();, +            this.masterNodeId = nodes.getMasterNodeId();, +++ b/core/src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java, +                                logger.debug("got first state from fresh master [{}]", nodeSpecificClusterState.nodes().getMasterNodeId());, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java, +                if (!masterNode.getId().equals(currentState.nodes().getMasterNodeId())) {, +                    logger.debug("got first state from fresh master [{}]", newClusterState.nodes().getMasterNodeId());, +        if (currentNodes.getMasterNodeId() == null) {, +        if (!currentNodes.getMasterNodeId().equals(newClusterState.nodes().getMasterNodeId())) {, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/publish/PendingClusterStatesQueue.java, +                    state.nodes().getMasterNodeId()]