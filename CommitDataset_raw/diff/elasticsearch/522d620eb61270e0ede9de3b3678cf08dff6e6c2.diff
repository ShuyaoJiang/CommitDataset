[+++ b/docs/reference/search/request/highlighting.asciidoc, +, +added[0.90.10], +[[matched-fields]], +==== Phrase Limit, +The `fast-vector-highlighter` has a `phrase_limit` parameter that prevents, +it from analyzing too many phrases and eating tons of memory.  It defaults, +to 256 so only the first 256 matching phrases in the document scored, +considered.  You can raise the limit with the `phrase_limit` parameter but, +keep in mind that scoring more phrases consumes more time and memory., +, +If using `matched_fields` keep in mind that `phrase_limit` phrases per, +matched field are considered., +++ b/docs/reference/search/request/highlighting.asciidoc, +, +added[0.90.10], +[[matched-fields]], +==== Phrase Limit, +The `fast-vector-highlighter` has a `phrase_limit` parameter that prevents, +it from analyzing too many phrases and eating tons of memory.  It defaults, +to 256 so only the first 256 matching phrases in the document scored, +considered.  You can raise the limit with the `phrase_limit` parameter but, +keep in mind that scoring more phrases consumes more time and memory., +, +If using `matched_fields` keep in mind that `phrase_limit` phrases per, +matched field are considered., +++ b/src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java, +            cache.fvh.setPhraseLimit(field.phraseLimit());, +++ b/docs/reference/search/request/highlighting.asciidoc, +, +added[0.90.10], +[[matched-fields]], +==== Phrase Limit, +The `fast-vector-highlighter` has a `phrase_limit` parameter that prevents, +it from analyzing too many phrases and eating tons of memory.  It defaults, +to 256 so only the first 256 matching phrases in the document scored, +considered.  You can raise the limit with the `phrase_limit` parameter but, +keep in mind that scoring more phrases consumes more time and memory., +, +If using `matched_fields` keep in mind that `phrase_limit` phrases per, +matched field are considered., +++ b/src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java, +            cache.fvh.setPhraseLimit(field.phraseLimit());, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +    private Integer phraseLimit;, +, +     * Sets the maximum number of phrases the fvh will consider if the field doesn't also define phraseLimit., +     * @param phraseLimit maximum number of phrases the fvh will consider, +     * @return this for chaining, +     */, +    public HighlightBuilder phraseLimit(Integer phraseLimit) {, +        this.phraseLimit = phraseLimit;, +        return this;, +    }, +, +    /**, +        if (phraseLimit != null) {, +            builder.field("phrase_limit", phraseLimit);, +        }, +                if (field.phraseLimit != null) {, +                    builder.field("phrase_limit", field.phraseLimit);, +                }, +        Integer phraseLimit;, +         * Sets the maximum number of phrases the fvh will consider., +         * @param phraseLimit maximum number of phrases the fvh will consider, +         * @return this for chaining, +         */, +        public Field phraseLimit(Integer phraseLimit) {, +            this.phraseLimit = phraseLimit;, +            return this;, +        }, +, +, +        /**, +++ b/docs/reference/search/request/highlighting.asciidoc, +, +added[0.90.10], +[[matched-fields]], +==== Phrase Limit, +The `fast-vector-highlighter` has a `phrase_limit` parameter that prevents, +it from analyzing too many phrases and eating tons of memory.  It defaults, +to 256 so only the first 256 matching phrases in the document scored, +considered.  You can raise the limit with the `phrase_limit` parameter but, +keep in mind that scoring more phrases consumes more time and memory., +, +If using `matched_fields` keep in mind that `phrase_limit` phrases per, +matched field are considered., +++ b/src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java, +            cache.fvh.setPhraseLimit(field.phraseLimit());, +++ b/src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java, +    private Integer phraseLimit;, +, +     * Sets the maximum number of phrases the fvh will consider if the field doesn't also define phraseLimit., +     * @param phraseLimit maximum number of phrases the fvh will consider, +     * @return this for chaining, +     */, +    public HighlightBuilder phraseLimit(Integer phraseLimit) {, +        this.phraseLimit = phraseLimit;, +        return this;, +    }]