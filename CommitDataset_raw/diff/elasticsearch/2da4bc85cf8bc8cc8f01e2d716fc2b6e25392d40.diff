[+++ b/server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1));, +            Map<String, Set<String>> contextsMap = new HashMap<>();, +        public final Map<String, Set<String>> contexts;, +        CompletionInputMetaData(String input, Map<String, Set<String>> contexts, int weight) {, +++ b/server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1));, +            Map<String, Set<String>> contextsMap = new HashMap<>();, +        public final Map<String, Set<String>> contexts;, +        CompletionInputMetaData(String input, Map<String, Set<String>> contexts, int weight) {, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +                Map<String, Set<String>> contexts = Collections.emptyMap();, +++ b/server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1));, +            Map<String, Set<String>> contextsMap = new HashMap<>();, +        public final Map<String, Set<String>> contexts;, +        CompletionInputMetaData(String input, Map<String, Set<String>> contexts, int weight) {, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +                Map<String, Set<String>> contexts = Collections.emptyMap();, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +            private Map<String, Set<String>> contexts = Collections.emptyMap();, +            public Option(int docID, Text text, float score, Map<String, Set<String>> contexts) {, +                    Set<String> contexts = new HashSet<>(nContexts);, +            public Map<String, Set<String>> getContexts() {, +                    for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {, +            private static Map<String, Set<String>> parseContexts(XContentParser parser) throws IOException {, +                Map<String, Set<String>> contexts = new HashMap<>();, +                    Set<String> values = new HashSet<>();, +                Map<String, Set<String>> contexts = (Map<String, Set<String>>) values, +                for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {, +                for (Map.Entry<String, Set<String>> entry: contexts.entrySet()) {, +++ b/server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1));, +            Map<String, Set<String>> contextsMap = new HashMap<>();, +        public final Map<String, Set<String>> contexts;, +        CompletionInputMetaData(String input, Map<String, Set<String>> contexts, int weight) {, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +                Map<String, Set<String>> contexts = Collections.emptyMap();, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +            private Map<String, Set<String>> contexts = Collections.emptyMap();, +            public Option(int docID, Text text, float score, Map<String, Set<String>> contexts) {, +                    Set<String> contexts = new HashSet<>(nContexts);, +            public Map<String, Set<String>> getContexts() {, +                    for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {, +            private static Map<String, Set<String>> parseContexts(XContentParser parser) throws IOException {, +                Map<String, Set<String>> contexts = new HashMap<>();, +                    Set<String> values = new HashSet<>();, +                Map<String, Set<String>> contexts = (Map<String, Set<String>>) values, +                for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {, +                for (Map.Entry<String, Set<String>> entry: contexts.entrySet()) {, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java, +    public Set<String> parseContext(ParseContext parseContext, XContentParser parser), +        final Set<String> contexts = new HashSet<>();, +    public Set<String> parseContext(Document document) {, +        Set<String> values = null;, +++ b/server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1));, +            Map<String, Set<String>> contextsMap = new HashMap<>();, +        public final Map<String, Set<String>> contexts;, +        CompletionInputMetaData(String input, Map<String, Set<String>> contexts, int weight) {, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +                Map<String, Set<String>> contexts = Collections.emptyMap();, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +            private Map<String, Set<String>> contexts = Collections.emptyMap();, +            public Option(int docID, Text text, float score, Map<String, Set<String>> contexts) {, +                    Set<String> contexts = new HashSet<>(nContexts);, +            public Map<String, Set<String>> getContexts() {, +                    for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {, +            private static Map<String, Set<String>> parseContexts(XContentParser parser) throws IOException {, +                Map<String, Set<String>> contexts = new HashMap<>();, +                    Set<String> values = new HashSet<>();, +                Map<String, Set<String>> contexts = (Map<String, Set<String>>) values, +                for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {, +                for (Map.Entry<String, Set<String>> entry: contexts.entrySet()) {, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java, +    public Set<String> parseContext(ParseContext parseContext, XContentParser parser), +        final Set<String> contexts = new HashSet<>();, +    public Set<String> parseContext(Document document) {, +        Set<String> values = null;, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/context/ContextMapping.java, +    public abstract Set<String> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException;, +    protected abstract Set<String> parseContext(ParseContext.Document document);, +++ b/server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java, +            inputMap.put(parser.text(), new CompletionInputMetaData(parser.text(), Collections.<String, Set<String>>emptyMap(), 1));, +            Map<String, Set<String>> contextsMap = new HashMap<>();, +        public final Map<String, Set<String>> contexts;, +        CompletionInputMetaData(String input, Map<String, Set<String>> contexts, int weight) {, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java, +                Map<String, Set<String>> contexts = Collections.emptyMap();, +++ b/server/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java, +            private Map<String, Set<String>> contexts = Collections.emptyMap();, +            public Option(int docID, Text text, float score, Map<String, Set<String>> contexts) {, +                    Set<String> contexts = new HashSet<>(nContexts);, +            public Map<String, Set<String>> getContexts() {, +                    for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {, +            private static Map<String, Set<String>> parseContexts(XContentParser parser) throws IOException {, +                Map<String, Set<String>> contexts = new HashMap<>();, +                    Set<String> values = new HashSet<>();, +                Map<String, Set<String>> contexts = (Map<String, Set<String>>) values, +                for (Map.Entry<String, Set<String>> entry : contexts.entrySet()) {]