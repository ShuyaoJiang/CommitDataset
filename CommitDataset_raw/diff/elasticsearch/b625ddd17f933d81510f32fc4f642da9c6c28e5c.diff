[+++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.fieldType().names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.fieldType().rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.fieldType().names().indexName(), termStr);, +                indexedNameField = currentMapper.fieldType().names().indexName();, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.fieldType().names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.fieldType().rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.fieldType().names().indexName(), termStr);, +                indexedNameField = currentMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.fieldType().indexAnalyzer();, +                field = fieldMapper.fieldType().names().indexName();, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.fieldType().names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.fieldType().rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.fieldType().names().indexName(), termStr);, +                indexedNameField = currentMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.fieldType().indexAnalyzer();, +                field = fieldMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().fullName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().indexName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().shortName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().names().fullName(), builder.bytes()));, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.fieldType().names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.fieldType().rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.fieldType().names().indexName(), termStr);, +                indexedNameField = currentMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.fieldType().indexAnalyzer();, +                field = fieldMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().fullName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().indexName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().shortName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().names().fullName(), builder.bytes()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +                docMapper.timestampFieldMapper().fieldType().dateTimeFormatter().format(), docMapper.timestampFieldMapper().defaultTimestamp(),, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.fieldType().names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.fieldType().rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.fieldType().names().indexName(), termStr);, +                indexedNameField = currentMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.fieldType().indexAnalyzer();, +                field = fieldMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().fullName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().indexName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().shortName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().names().fullName(), builder.bytes()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +                docMapper.timestampFieldMapper().fieldType().dateTimeFormatter().format(), docMapper.timestampFieldMapper().defaultTimestamp(),, +++ b/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +            Orientation requestedOrientation = (shapeMapper == null) ? Orientation.RIGHT : shapeMapper.fieldType().orientation();, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.fieldType().names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.fieldType().rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.fieldType().names().indexName(), termStr);, +                indexedNameField = currentMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.fieldType().indexAnalyzer();, +                field = fieldMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().fullName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().indexName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.fieldType().names().shortName())) {, +                        addFieldMapper(fieldMapper.fieldType().names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.fieldType().names().fullName(), builder.bytes()));, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java, +                docMapper.timestampFieldMapper().fieldType().dateTimeFormatter().format(), docMapper.timestampFieldMapper().defaultTimestamp(),, +++ b/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java, +            Orientation requestedOrientation = (shapeMapper == null) ? Orientation.RIGHT : shapeMapper.fieldType().orientation();, +++ b/src/main/java/org/elasticsearch/index/fielddata/FieldDataType.java, +import org.elasticsearch.index.mapper.MappedFieldType.Loading;, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.fieldType().names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.fieldType().rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.fieldType().names().indexName(), termStr);, +                indexedNameField = currentMapper.fieldType().names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.fieldType().indexAnalyzer();]