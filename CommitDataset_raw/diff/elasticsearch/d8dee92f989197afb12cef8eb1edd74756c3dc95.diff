[+++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java, +            final Set<ModelNode> throttledNodes = new IdentityHashSet<ModelNode>();, +                    if (throttledNodes.size() < nodes.size()) {, +                        /* Don't iterate over an identity hashset here the, +                         * iteration order is different for each run and makes testing hard */, +                        for (ModelNode node : nodes.values()) {, +                            if (throttledNodes.contains(node)) {, +                                continue;, +                            }, +                    }, +                                throttledNodes.add(minNode);, +++ b/src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java, +            final Set<ModelNode> throttledNodes = new IdentityHashSet<ModelNode>();, +                    if (throttledNodes.size() < nodes.size()) {, +                        /* Don't iterate over an identity hashset here the, +                         * iteration order is different for each run and makes testing hard */, +                        for (ModelNode node : nodes.values()) {, +                            if (throttledNodes.contains(node)) {, +                                continue;, +                            }, +                    }, +                                throttledNodes.add(minNode);, +++ b/src/test/java/org/elasticsearch/cluster/routing/allocation/AddIncrementallyTests.java, +import com.google.common.collect.Lists;, +import java.util.ArrayList;, +import java.util.Collections;, +, +            logger.debug("ClusterState: {}", clusterState.getRoutingNodes().prettyPrint());, +            logger.debug("ClusterState: {}", clusterState.getRoutingNodes().prettyPrint());, +        ArrayList<DiscoveryNode> discoveryNodes = Lists.newArrayList(clusterState.nodes());, +        Collections.shuffle(discoveryNodes, getRandom());, +        for (DiscoveryNode node : discoveryNodes) {, +            logger.debug("ClusterState: {}", clusterState.getRoutingNodes().prettyPrint());]