[+++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java, +            return prebuiltAnalysis.tokenizerFactories.get(tokenizer);, +            return prebuiltAnalysis.tokenFilterFactories.get(tokenFilter);, +            return prebuiltAnalysis.charFilterFactories.get(charFilter);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java, +            return prebuiltAnalysis.tokenizerFactories.get(tokenizer);, +            return prebuiltAnalysis.tokenFilterFactories.get(tokenFilter);, +            return prebuiltAnalysis.charFilterFactories.get(charFilter);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java, +            return prebuiltAnalysis.tokenizerFactories.get(tokenizer);, +            return prebuiltAnalysis.tokenFilterFactories.get(tokenFilter);, +            return prebuiltAnalysis.charFilterFactories.get(charFilter);, +++ b/core/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java, +++ b/core/src/test/java/org/elasticsearch/common/xcontent/BaseXContentTestCase.java, +        assertResult("{'path':'"+ path.toString() + "'}", () -> builder().startObject().field("path", path).endObject());, +        objects.put("{'objects':['" + PathUtils.get("a", "b", "c") + "','" + PathUtils.get("d", "e") + "']}",, +            new Object[]{PathUtils.get("a", "b", "c"), PathUtils.get("d", "e")});, +        object.put("{'object':'" + PathUtils.get("a", "b", "c") + "'}", PathUtils.get("a", "b", "c"));, +        maps.put("{'map':{'path':'" + PathUtils.get("path", "to", "file"), +            + "','string':'value','long[]':[1,3],'int':42,'long':42,'object':{'key':'value'}}}", innerMap);, +        iterables.put("{'iter':'" + PathUtils.get("path", "to", "file") +"'}", PathUtils.get("path", "to", "file"));, +        iterables.put("{'iter':['" + PathUtils.get("a", "b", "c") + "','" + PathUtils.get("c", "d") + "']}",, +            Arrays.asList(PathUtils.get("a", "b", "c"), PathUtils.get("c", "d")));]