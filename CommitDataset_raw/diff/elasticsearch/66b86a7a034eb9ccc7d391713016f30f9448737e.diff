[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +    private boolean onlyExpungeDeletes = false;, +, +    private boolean flush = false;, +, +    private boolean refresh = false;, +, +    /**, +     * Should the optimization only expunge deletes from the index, without full optimization., +     * Defaults to full optimization (<tt>false</tt>)., +     */, +    public boolean onlyExpungeDeletes() {, +        return onlyExpungeDeletes;, +    }, +, +    /**, +     * Should the optimization only expunge deletes from the index, without full optimization., +     * Defaults to full optimization (<tt>false</tt>)., +     */, +    public OptimizeRequest onlyExpungeDeletes(boolean onlyExpungeDeletes) {, +        this.onlyExpungeDeletes = onlyExpungeDeletes;, +        return this;, +    }, +, +    /**, +     * Should flush be performed after the optimization. Defaults to <tt>false</tt>., +     */, +    public boolean flush() {, +        return flush;, +    }, +, +    /**, +     * Should flush be performed after the optimization. Defaults to <tt>false</tt>., +     */, +    public OptimizeRequest flush(boolean flush) {, +        this.flush = flush;, +        return this;, +    }, +, +    /**, +     * Should refresh be performed after the optimization. Defaults to <tt>false</tt>., +     */, +    public boolean refresh() {, +        return refresh;, +    }, +, +    /**, +     * Should refresh be performed after the optimization. Defaults to <tt>false</tt>., +     */, +    public OptimizeRequest refresh(boolean refresh) {, +        this.refresh = refresh;, +        return this;, +    }, +, +        onlyExpungeDeletes = in.readBoolean();, +        flush = in.readBoolean();, +        refresh = in.readBoolean();, +        out.writeBoolean(onlyExpungeDeletes);, +        out.writeBoolean(flush);, +        out.writeBoolean(refresh);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java, +    private boolean onlyExpungeDeletes = false;, +, +    private boolean flush = false;, +, +    private boolean refresh = false;, +, +    /**, +     * Should the optimization only expunge deletes from the index, without full optimization., +     * Defaults to full optimization (<tt>false</tt>)., +     */, +    public boolean onlyExpungeDeletes() {, +        return onlyExpungeDeletes;, +    }, +, +    /**, +     * Should the optimization only expunge deletes from the index, without full optimization., +     * Defaults to full optimization (<tt>false</tt>)., +     */, +    public OptimizeRequest onlyExpungeDeletes(boolean onlyExpungeDeletes) {, +        this.onlyExpungeDeletes = onlyExpungeDeletes;, +        return this;, +    }, +, +    /**, +     * Should flush be performed after the optimization. Defaults to <tt>false</tt>., +     */, +    public boolean flush() {, +        return flush;, +    }, +, +    /**, +     * Should flush be performed after the optimization. Defaults to <tt>false</tt>., +     */, +    public OptimizeRequest flush(boolean flush) {, +        this.flush = flush;, +        return this;, +    }, +, +    /**]