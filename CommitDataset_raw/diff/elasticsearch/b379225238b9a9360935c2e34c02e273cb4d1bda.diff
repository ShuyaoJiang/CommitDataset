[+++ b/src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java, +, +        String executor();, +, +++ b/src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java, +, +        String executor();, +, +++ b/src/main/java/org/elasticsearch/indices/warmer/InternalIndicesWarmer.java, +import org.elasticsearch.threadpool.ThreadPool;, +import java.util.concurrent.CountDownLatch;, +    private final ThreadPool threadPool;, +, +    public InternalIndicesWarmer(Settings settings, ThreadPool threadPool, ClusterService clusterService, IndicesService indicesService) {, +        this.threadPool = threadPool;, +    public void warm(final ShardId shardId, final Engine.Searcher searcher) {, +        final IndexMetaData indexMetaData = clusterService.state().metaData().index(shardId.index().name());, +        for (final Listener listener : listeners) {, +            final CountDownLatch latch = new CountDownLatch(1);, +            threadPool.executor(listener.executor()).execute(new Runnable() {, +                @Override, +                public void run() {, +                    } finally {, +                        latch.countDown();, +                    }, +                }, +            });, +            try {, +                latch.await();, +            } catch (InterruptedException e) {, +                return;]