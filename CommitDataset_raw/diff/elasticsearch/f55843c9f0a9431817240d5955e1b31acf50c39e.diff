[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            if (snippet.testTearDown) {, +                testTearDown(snippet), +                previousTest = snippet, +                return, +            }, +                if (previousTest != null && previousTest.testTearDown) {, +                    throw new InvalidUserDataException("// TEST[continued] " +, +                        "cannot immediately follow // TEARDOWN: $test"), +                }, +        private void testTearDown(Snippet snippet) {, +            if (previousTest.testSetup == false && lastDocsPath == snippet.path) {, +                throw new InvalidUserDataException("$snippet must follow test setup or be first"), +            }, +            setupCurrent(snippet), +            current.println('---'), +            current.println('teardown:'), +            body(snippet, true), +        }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            if (snippet.testTearDown) {, +                testTearDown(snippet), +                previousTest = snippet, +                return, +            }, +                if (previousTest != null && previousTest.testTearDown) {, +                    throw new InvalidUserDataException("// TEST[continued] " +, +                        "cannot immediately follow // TEARDOWN: $test"), +                }, +        private void testTearDown(Snippet snippet) {, +            if (previousTest.testSetup == false && lastDocsPath == snippet.path) {, +                throw new InvalidUserDataException("$snippet must follow test setup or be first"), +            }, +            setupCurrent(snippet), +            current.println('---'), +            current.println('teardown:'), +            body(snippet, true), +        }, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/SnippetsTask.groovy, +                if (line ==~ /\/\/\s*TEARDOWN\s*/) {, +                    snippet.testTearDown = true, +                    return, +                }, +        boolean testTearDown = false]