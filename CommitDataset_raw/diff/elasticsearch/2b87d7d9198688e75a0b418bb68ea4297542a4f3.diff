[+++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +    /**, +     * Returns true if the repository supports only read operations, +     * @return true if the repository is read/only, +     */, +    boolean readOnly();, +, +++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +    /**, +     * Returns true if the repository supports only read operations, +     * @return true if the repository is read/only, +     */, +    boolean readOnly();, +, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +    private final boolean readOnly;, +, +        readOnly = repositorySettings.settings().getAsBoolean("readonly", false);, +        if (readOnly()) {, +            throw new RepositoryException(this.repositoryName, "cannot create snapshot in a readonly repository");, +        }, +        if (readOnly()) {, +            throw new RepositoryException(this.repositoryName, "cannot delete snapshot from a readonly repository");, +        }, +            if (readOnly()) {, +                // It's readonly - so there is not much we can do here to verify it, +                return null;, +            } else {, +            }, +        if (readOnly()) {, +            throw new UnsupportedOperationException("shouldn't be called");, +        }, +, +    @Override, +    public boolean readOnly() {, +        return readOnly;, +    }, +++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +    /**, +     * Returns true if the repository supports only read operations, +     * @return true if the repository is read/only, +     */, +    boolean readOnly();, +, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +    private final boolean readOnly;, +, +        readOnly = repositorySettings.settings().getAsBoolean("readonly", false);, +        if (readOnly()) {, +            throw new RepositoryException(this.repositoryName, "cannot create snapshot in a readonly repository");, +        }, +        if (readOnly()) {, +            throw new RepositoryException(this.repositoryName, "cannot delete snapshot from a readonly repository");, +        }, +            if (readOnly()) {, +                // It's readonly - so there is not much we can do here to verify it, +                return null;, +            } else {, +            }, +        if (readOnly()) {, +            throw new UnsupportedOperationException("shouldn't be called");, +        }, +, +    @Override, +    public boolean readOnly() {, +        return readOnly;, +    }, +++ b/core/src/main/java/org/elasticsearch/repositories/uri/URLRepository.java, +    @Override, +    public boolean readOnly() {, +        return true;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/repositories/Repository.java, +    /**, +     * Returns true if the repository supports only read operations, +     * @return true if the repository is read/only, +     */, +    boolean readOnly();, +, +++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java, +    private final boolean readOnly;, +, +        readOnly = repositorySettings.settings().getAsBoolean("readonly", false);, +        if (readOnly()) {, +            throw new RepositoryException(this.repositoryName, "cannot create snapshot in a readonly repository");, +        }, +        if (readOnly()) {, +            throw new RepositoryException(this.repositoryName, "cannot delete snapshot from a readonly repository");, +        }, +            if (readOnly()) {, +                // It's readonly - so there is not much we can do here to verify it, +                return null;, +            } else {, +            }, +        if (readOnly()) {, +            throw new UnsupportedOperationException("shouldn't be called");, +        }, +, +    @Override]