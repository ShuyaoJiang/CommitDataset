[+++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    if (project.path == ':test-framework') {, +      // :test-framework:test cannot run before and after :core:test, +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    if (project.path == ':test-framework') {, +      // :test-framework:test cannot run before and after :core:test, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    if (project.path == ':test-framework') {, +      // :test-framework:test cannot run before and after :core:test, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            testCompile "org.elasticsearch:test-framework:${project.versions.elasticsearch}", +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    if (project.path == ':test-framework') {, +      // :test-framework:test cannot run before and after :core:test, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            testCompile "org.elasticsearch:test-framework:${project.versions.elasticsearch}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +            dependency.group != "org.elasticsearch", +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    if (project.path == ':test-framework') {, +      // :test-framework:test cannot run before and after :core:test, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            testCompile "org.elasticsearch:test-framework:${project.versions.elasticsearch}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +            dependency.group != "org.elasticsearch", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestBasePlugin.groovy, +        project.dependencies.add('testCompile', "org.elasticsearch:test-framework:${VersionProperties.elasticsearch}"), +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    if (project.path == ':test-framework') {, +      // :test-framework:test cannot run before and after :core:test, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            testCompile "org.elasticsearch:test-framework:${project.versions.elasticsearch}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +            dependency.group != "org.elasticsearch", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestBasePlugin.groovy, +        project.dependencies.add('testCompile', "org.elasticsearch:test-framework:${VersionProperties.elasticsearch}"), +++ b/core/build.gradle, +    testCompile("org.elasticsearch:test-framework:${version}") {, +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',, +    if (project.path == ':test-framework') {, +      // :test-framework:test cannot run before and after :core:test, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            if (!(dep instanceof ProjectDependency) && dep.getGroup() != 'org.elasticsearch') {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            testCompile "org.elasticsearch:test-framework:${project.versions.elasticsearch}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +            dependency.group != "org.elasticsearch", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestBasePlugin.groovy, +        project.dependencies.add('testCompile', "org.elasticsearch:test-framework:${VersionProperties.elasticsearch}"), +++ b/core/build.gradle, +    testCompile("org.elasticsearch:test-framework:${version}") {, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_2_0_2 = new Version(V_2_0_2_ID, true, org.apache.lucene.util.Version.LUCENE_5_2_1);, +    public static final Version V_2_1_1 = new Version(V_2_1_1_ID, true, org.apache.lucene.util.Version.LUCENE_5_3_1);, +++ b/TESTING.asciidoc, +gradle :distribution:tar:integTest   \, +gradle :distribution:tar:integTest \, +++ b/build.gradle, +    "org.elasticsearch:test-framework:${version}": ':test-framework',]