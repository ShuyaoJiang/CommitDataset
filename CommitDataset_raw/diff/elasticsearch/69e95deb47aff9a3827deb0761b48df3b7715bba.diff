[+++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Boolean> INDEX_TTL_DISABLE_PURGE_SETTING = Setting.boolSetting("index.ttl.disable_purge", false, true, Setting.Scope.INDEX);, +, +    private volatile boolean TTLPurgeDisabled;, +, +        INDEX_TTL_DISABLE_PURGE_SETTING,, +        TTLPurgeDisabled = scopedSettings.get(INDEX_TTL_DISABLE_PURGE_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TTL_DISABLE_PURGE_SETTING, this::setTTLPurgeDisabled);, +    /**, +     * Returns <code>true</code> if the TTL purge is disabled for this index. Default is <code>false</code>, +     */, +    public boolean isTTLPurgeDisabled() {, +        return TTLPurgeDisabled;, +    }, +, +    private  void setTTLPurgeDisabled(boolean ttlPurgeDisabled) {, +        this.TTLPurgeDisabled = ttlPurgeDisabled;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Boolean> INDEX_TTL_DISABLE_PURGE_SETTING = Setting.boolSetting("index.ttl.disable_purge", false, true, Setting.Scope.INDEX);, +, +    private volatile boolean TTLPurgeDisabled;, +, +        INDEX_TTL_DISABLE_PURGE_SETTING,, +        TTLPurgeDisabled = scopedSettings.get(INDEX_TTL_DISABLE_PURGE_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TTL_DISABLE_PURGE_SETTING, this::setTTLPurgeDisabled);, +    /**, +     * Returns <code>true</code> if the TTL purge is disabled for this index. Default is <code>false</code>, +     */, +    public boolean isTTLPurgeDisabled() {, +        return TTLPurgeDisabled;, +    }, +, +    private  void setTTLPurgeDisabled(boolean ttlPurgeDisabled) {, +        this.TTLPurgeDisabled = ttlPurgeDisabled;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java, +                if (indexService.getIndexSettings().isTTLPurgeDisabled()) {, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterModule.java, +++ b/core/src/main/java/org/elasticsearch/index/IndexSettings.java, +    public static final Setting<Boolean> INDEX_TTL_DISABLE_PURGE_SETTING = Setting.boolSetting("index.ttl.disable_purge", false, true, Setting.Scope.INDEX);, +, +    private volatile boolean TTLPurgeDisabled;, +, +        INDEX_TTL_DISABLE_PURGE_SETTING,, +        TTLPurgeDisabled = scopedSettings.get(INDEX_TTL_DISABLE_PURGE_SETTING);, +        scopedSettings.addSettingsUpdateConsumer(INDEX_TTL_DISABLE_PURGE_SETTING, this::setTTLPurgeDisabled);, +    /**, +     * Returns <code>true</code> if the TTL purge is disabled for this index. Default is <code>false</code>, +     */, +    public boolean isTTLPurgeDisabled() {, +        return TTLPurgeDisabled;, +    }, +, +    private  void setTTLPurgeDisabled(boolean ttlPurgeDisabled) {, +        this.TTLPurgeDisabled = ttlPurgeDisabled;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java, +                if (indexService.getIndexSettings().isTTLPurgeDisabled()) {, +++ b/core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java, +, +    public void testIsTTLPurgeDisabled() {, +        IndexMetaData metaData = newIndexMeta("index", Settings.settingsBuilder(), +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +            .put(IndexSettings.INDEX_TTL_DISABLE_PURGE_SETTING.getKey(), false), +            .build());, +        IndexSettings settings = new IndexSettings(metaData, Settings.EMPTY);, +        assertFalse(settings.isTTLPurgeDisabled());, +        settings.updateIndexMetaData(newIndexMeta("index", Settings.builder().put(IndexSettings.INDEX_TTL_DISABLE_PURGE_SETTING.getKey(), "true").build()));, +        assertTrue(settings.isTTLPurgeDisabled());, +, +        settings.updateIndexMetaData(newIndexMeta("index", Settings.EMPTY));, +        assertFalse("reset to default", settings.isTTLPurgeDisabled());, +, +        metaData = newIndexMeta("index", Settings.settingsBuilder(), +            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT), +            .build());, +        settings = new IndexSettings(metaData, Settings.EMPTY);, +        assertFalse(settings.isTTLPurgeDisabled());, +    }, +]