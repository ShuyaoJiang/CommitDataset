[+++ b/src/main/java/org/elasticsearch/cache/recycler/CacheRecycler.java, +import org.elasticsearch.common.recycler.*;, +import java.util.Locale;, +, +        String type = settings.get("type", Type.SOFT_THREAD_LOCAL.name());, +        try {, +            final Type t = type == null ? Type.SOFT_THREAD_LOCAL : Type.valueOf(type.toUpperCase(Locale.ROOT));, +            switch (t) {, +                case SOFT_THREAD_LOCAL:, +                break;, +                case THREAD_LOCAL:, +                break;, +                case  QUEUE:, +                break;, +                case NONE:, +                recycler = new NoneRecycler<T>(c);, +                break;, +                default:, +        } catch (IllegalArgumentException ex) {, +            throw new ElasticSearchIllegalArgumentException("no type support [" + type + "] for recycler");, +        }, +, +, +    public static enum Type {, +        SOFT_THREAD_LOCAL,, +        THREAD_LOCAL,, +        QUEUE,, +        NONE;, +    }, +++ b/src/main/java/org/elasticsearch/cache/recycler/CacheRecycler.java, +import org.elasticsearch.common.recycler.*;, +import java.util.Locale;, +, +        String type = settings.get("type", Type.SOFT_THREAD_LOCAL.name());, +        try {, +            final Type t = type == null ? Type.SOFT_THREAD_LOCAL : Type.valueOf(type.toUpperCase(Locale.ROOT));, +            switch (t) {, +                case SOFT_THREAD_LOCAL:, +                break;, +                case THREAD_LOCAL:, +                break;, +                case  QUEUE:, +                break;, +                case NONE:, +                recycler = new NoneRecycler<T>(c);, +                break;, +                default:, +        } catch (IllegalArgumentException ex) {, +            throw new ElasticSearchIllegalArgumentException("no type support [" + type + "] for recycler");, +        }, +, +, +    public static enum Type {, +        SOFT_THREAD_LOCAL,, +        THREAD_LOCAL,, +        QUEUE,, +        NONE;, +    }, +++ b/src/test/java/org/elasticsearch/test/TestCluster.java, +import org.elasticsearch.cache.recycler.CacheRecycler;, +        builder.put("type", CacheRecycler.Type.values()[random.nextInt(CacheRecycler.Type.values().length)]);]