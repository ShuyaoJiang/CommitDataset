[+++ b/docs/reference/modules/cluster/disk_allocator.asciidoc, +Elasticsearch considers the available disk space on a node before deciding, +whether to allocate new shards to that node or to actively relocate shards away, +from that node., +    Controls the low watermark for disk usage. It defaults to `85%`, meaning, +    that Elasticsearch will not allocate shards to nodes that have more than, +    85% disk used. It can also be set to an absolute byte value (like `500mb`), +    to prevent Elasticsearch from allocating shards if less than the specified, +    amount of space is available. This setting has no effect on the primary, +    shards of newly-created indices or, specifically, any shards that have, +    never previously been allocated., +    Controls the high watermark. It defaults to `90%`, meaning that, +    Elasticsearch will attempt to relocate shards away from a node whose disk, +    usage is above 90%. It can also be set to an absolute byte value (similarly, +    to the low watermark) to relocate shards away from a node if it has less, +    than the specified amount of free space. This setting affects the, +    allocation of all shards, whether previously allocated or not., +Controls the flood stage watermark. It defaults to 95%, meaning that, +Elasticsearch enforces a read-only index block, +(`index.blocks.read_only_allow_delete`) on every index that has one or more, +shards allocated on the node that has at least one disk exceeding the flood, +stage. This is a last resort to prevent nodes from running out of disk space., +The index block must be released manually once there is enough disk space, +available to allow indexing operations to continue., +    shards that are currently being relocated to the target node when computing, +    a node's disk usage. Taking relocating shards' sizes into account may,, +    however, mean that the disk usage for a node is incorrectly estimated on, +    the high side, since the relocation could be 90% complete and a recently, +    retrieved disk usage would include the total size of the relocating shard, +    as well as the space already used by the running relocation.]