[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +import org.elasticsearch.action.get.GetField;, +import org.elasticsearch.index.mapper.*;, +import java.util.Collections;, +import java.util.Iterator;, +import static com.google.common.collect.Sets.*;, +        Set<String> getFields = newHashSet();, +        if (request.fields() != null) {, +            Collections.addAll(getFields, request.fields());, +        }, +        // add the source, in case we need to parse it to get fields, +        getFields.add(SourceFieldMapper.NAME);, +, +                .fields(getFields.toArray(new String[getFields.size()])), +, +                    final Set<String> fields = newHashSet();, +, +                    if (!fields.isEmpty()) {, +                        // if fields are not empty, see if we got them in the response, +                        for (Iterator<String> it = fields.iterator(); it.hasNext();) {, +                            String field = it.next();, +                            GetField getField = getResponse.field(field);, +                            if (getField != null) {, +                                for (Object value : getField.values()) {, +                                    addMoreLikeThis(request, boolBuilder, getField.name(), value.toString());, +                                it.remove();, +                            }, +                        }, +                        if (!fields.isEmpty()) {, +                            // if we don't get all the fields in the get response, see if we can parse the source, +                            parseSource(getResponse, boolBuilder, docMapper, fields, request);, +                        }, +                    } else {, +                        // we did not ask for any fields, try and get it from the source, +                        parseSource(getResponse, boolBuilder, docMapper, fields, request);, +                    if (boolBuilder.clauses().isEmpty()) {, +                        // no field added, fail, +                        listener.onFailure(new ElasticSearchException("No fields found to fetch the 'likeText' from"));, +                        return;, +    private void parseSource(GetResponse getResponse, final BoolJsonQueryBuilder boolBuilder, DocumentMapper docMapper, final Set<String> fields, final MoreLikeThisRequest request) {, +        if (getResponse.source() == null) {, +            return;, +        }, +        docMapper.parse(request.type(), request.id(), getResponse.source(), new DocumentMapper.ParseListenerAdapter() {, +            @Override public boolean beforeFieldAdded(FieldMapper fieldMapper, Fieldable field, Object parseContext) {, +                if (fieldMapper instanceof InternalMapper) {, +                    return true;, +                }, +                String value = fieldMapper.valueAsString(field);, +                if (value == null) {, +                    return false;, +                }, +, +                if (fields.isEmpty() || fields.contains(field.name())) {, +                    addMoreLikeThis(request, boolBuilder, fieldMapper, field);, +                }, +, +                return false;, +            }, +        });, +    }, +, +        addMoreLikeThis(request, boolBuilder, field.name(), fieldMapper.valueAsString(field));, +    }, +, +    private void addMoreLikeThis(MoreLikeThisRequest request, BoolJsonQueryBuilder boolBuilder, String fieldName, String likeText) {, +        MoreLikeThisFieldJsonQueryBuilder mlt = moreLikeThisFieldQuery(fieldName), +                .likeText(likeText), +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java, +import org.elasticsearch.action.get.GetField;, +import org.elasticsearch.index.mapper.*;, +import java.util.Collections;, +import java.util.Iterator;, +import static com.google.common.collect.Sets.*;, +        Set<String> getFields = newHashSet();, +        if (request.fields() != null) {, +            Collections.addAll(getFields, request.fields());, +        }, +        // add the source, in case we need to parse it to get fields, +        getFields.add(SourceFieldMapper.NAME);, +, +                .fields(getFields.toArray(new String[getFields.size()])), +, +                    final Set<String> fields = newHashSet();, +, +                    if (!fields.isEmpty()) {, +                        // if fields are not empty, see if we got them in the response, +                        for (Iterator<String> it = fields.iterator(); it.hasNext();) {, +                            String field = it.next();, +                            GetField getField = getResponse.field(field);, +                            if (getField != null) {, +                                for (Object value : getField.values()) {, +                                    addMoreLikeThis(request, boolBuilder, getField.name(), value.toString());, +                                it.remove();, +                            }, +                        }, +                        if (!fields.isEmpty()) {, +                            // if we don't get all the fields in the get response, see if we can parse the source, +                            parseSource(getResponse, boolBuilder, docMapper, fields, request);, +                        }]