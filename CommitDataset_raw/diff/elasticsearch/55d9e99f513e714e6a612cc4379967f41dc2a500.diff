[+++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +    /**, +     * Creates a setting which specifies a memory size. This can either be, +     * specified as an absolute bytes value or as a percentage of the heap, +     * memory., +     * , +     * @param key the key for the setting, +     * @param defaultValue the default value for this setting , +     * @param properties properties properties for this setting like scope, filtering..., +     * @return the setting object, +     */, +    public static Setting<ByteSizeValue> memorySizeSetting(String key, ByteSizeValue defaultValue, Property... properties) {, +        return memorySizeSetting(key, (s) -> defaultValue.toString(), properties);, +    }, +, +, +    /**, +     * Creates a setting which specifies a memory size. This can either be, +     * specified as an absolute bytes value or as a percentage of the heap, +     * memory., +     * , +     * @param key the key for the setting, +     * @param defaultValue a function that supplies the default value for this setting , +     * @param properties properties properties for this setting like scope, filtering..., +     * @return the setting object, +     */, +    public static Setting<ByteSizeValue> memorySizeSetting(String key, Function<Settings, String> defaultValue, Property... properties) {, +        return new Setting<>(key, defaultValue, (s) -> MemorySizeValue.parseBytesSizeValueOrHeapRatio(s, key), properties);, +    }, +, +    /**, +     * Creates a setting which specifies a memory size. This can either be, +     * specified as an absolute bytes value or as a percentage of the heap, +     * memory., +     * , +     * @param key the key for the setting, +     * @param defaultPercentage the default value of this setting as a percentage of the heap memory, +     * @param properties properties properties for this setting like scope, filtering..., +     * @return the setting object, +     */, +    public static Setting<ByteSizeValue> memorySizeSetting(String key, String defaultPercentage, Property... properties) {, +        return new Setting<>(key, (s) -> defaultPercentage, (s) -> MemorySizeValue.parseBytesSizeValueOrHeapRatio(s, key), properties);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +    /**, +     * Creates a setting which specifies a memory size. This can either be, +     * specified as an absolute bytes value or as a percentage of the heap, +     * memory., +     * , +     * @param key the key for the setting, +     * @param defaultValue the default value for this setting , +     * @param properties properties properties for this setting like scope, filtering..., +     * @return the setting object, +     */, +    public static Setting<ByteSizeValue> memorySizeSetting(String key, ByteSizeValue defaultValue, Property... properties) {, +        return memorySizeSetting(key, (s) -> defaultValue.toString(), properties);, +    }, +, +, +    /**, +     * Creates a setting which specifies a memory size. This can either be, +     * specified as an absolute bytes value or as a percentage of the heap, +     * memory., +     * , +     * @param key the key for the setting, +     * @param defaultValue a function that supplies the default value for this setting , +     * @param properties properties properties for this setting like scope, filtering..., +     * @return the setting object, +     */, +    public static Setting<ByteSizeValue> memorySizeSetting(String key, Function<Settings, String> defaultValue, Property... properties) {, +        return new Setting<>(key, defaultValue, (s) -> MemorySizeValue.parseBytesSizeValueOrHeapRatio(s, key), properties);, +    }, +, +    /**, +     * Creates a setting which specifies a memory size. This can either be, +     * specified as an absolute bytes value or as a percentage of the heap, +     * memory., +     * , +     * @param key the key for the setting, +     * @param defaultPercentage the default value of this setting as a percentage of the heap memory, +     * @param properties properties properties for this setting like scope, filtering..., +     * @return the setting object, +     */, +    public static Setting<ByteSizeValue> memorySizeSetting(String key, String defaultPercentage, Property... properties) {, +        return new Setting<>(key, (s) -> defaultPercentage, (s) -> MemorySizeValue.parseBytesSizeValueOrHeapRatio(s, key), properties);, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/util/PageCacheRecycler.java, +        Setting.memorySizeSetting("cache.recycler.page.limit.heap", "10%", Property.NodeScope);, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +    /**, +     * Creates a setting which specifies a memory size. This can either be, +     * specified as an absolute bytes value or as a percentage of the heap, +     * memory., +     * , +     * @param key the key for the setting, +     * @param defaultValue the default value for this setting , +     * @param properties properties properties for this setting like scope, filtering..., +     * @return the setting object]