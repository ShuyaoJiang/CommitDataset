[+++ b/server/src/main/java/org/elasticsearch/search/SearchHit.java, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +, +    //These two fields normally get set when setting the shard target, so they hold the same values as the target thus don't get, +    //serialized over the wire. When parsing hits back from xcontent though, in most of the cases (whenever explanation is disabled), +    //we can't rebuild the shard target object so we need to set these manually for users retrieval., +        String index = get(Fields._INDEX, values, null);, +        String clusterAlias = null;, +        if (index != null) {, +            int indexOf = index.indexOf(RemoteClusterAware.REMOTE_CLUSTER_INDEX_SEPARATOR);, +            if (indexOf > 0) {, +                clusterAlias = index.substring(0, indexOf);, +                index = index.substring(indexOf + 1);, +            }, +        }, +        ShardId shardId = get(Fields._SHARD, values, null);, +        String nodeId = get(Fields._NODE, values, null);, +        if (shardId != null && nodeId != null) {, +            assert shardId.getIndexName().equals(index);, +            searchHit.shard(new SearchShardTarget(nodeId, shardId, clusterAlias, OriginalIndices.NONE));, +        } else {, +            //these fields get set anyways when setting the shard target,, +            //but we set them explicitly when we don't have enough info to rebuild the shard target, +            searchHit.index = index;, +            searchHit.clusterAlias = clusterAlias;, +        }, +            searchHit.matchedQueries(matchedQueries.toArray(new String[0]));, +                && Objects.equals(innerHits, other.innerHits), +                && Objects.equals(index, other.index), +                && Objects.equals(clusterAlias, other.clusterAlias);, +                explanation, shard, innerHits, index, clusterAlias);, +++ b/server/src/main/java/org/elasticsearch/search/SearchHit.java, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +, +    //These two fields normally get set when setting the shard target, so they hold the same values as the target thus don't get, +    //serialized over the wire. When parsing hits back from xcontent though, in most of the cases (whenever explanation is disabled), +    //we can't rebuild the shard target object so we need to set these manually for users retrieval., +        String index = get(Fields._INDEX, values, null);, +        String clusterAlias = null;, +        if (index != null) {, +            int indexOf = index.indexOf(RemoteClusterAware.REMOTE_CLUSTER_INDEX_SEPARATOR);, +            if (indexOf > 0) {, +                clusterAlias = index.substring(0, indexOf);, +                index = index.substring(indexOf + 1);, +            }, +        }, +        ShardId shardId = get(Fields._SHARD, values, null);, +        String nodeId = get(Fields._NODE, values, null);, +        if (shardId != null && nodeId != null) {, +            assert shardId.getIndexName().equals(index);, +            searchHit.shard(new SearchShardTarget(nodeId, shardId, clusterAlias, OriginalIndices.NONE));, +        } else {, +            //these fields get set anyways when setting the shard target,, +            //but we set them explicitly when we don't have enough info to rebuild the shard target, +            searchHit.index = index;, +            searchHit.clusterAlias = clusterAlias;, +        }, +            searchHit.matchedQueries(matchedQueries.toArray(new String[0]));, +                && Objects.equals(innerHits, other.innerHits), +                && Objects.equals(index, other.index), +                && Objects.equals(clusterAlias, other.clusterAlias);, +                explanation, shard, innerHits, index, clusterAlias);, +++ b/server/src/main/java/org/elasticsearch/search/SearchShardTarget.java, +import java.io.IOException;, +, +    //original indices are only needed in the coordinating node throughout the search request execution., +++ b/server/src/main/java/org/elasticsearch/search/SearchHit.java, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +import java.util.Objects;, +, +    //These two fields normally get set when setting the shard target, so they hold the same values as the target thus don't get, +    //serialized over the wire. When parsing hits back from xcontent though, in most of the cases (whenever explanation is disabled), +    //we can't rebuild the shard target object so we need to set these manually for users retrieval., +        String index = get(Fields._INDEX, values, null);, +        String clusterAlias = null;, +        if (index != null) {, +            int indexOf = index.indexOf(RemoteClusterAware.REMOTE_CLUSTER_INDEX_SEPARATOR);]