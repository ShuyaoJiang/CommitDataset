[+++ b/src/main/java/org/elasticsearch/index/analysis/IcuAnalysisBinderProcessor.java, + * @author kimchy (shay.banon), +    @Override public void processTokenizers(TokenizersBindings tokenizersBindings) {, +        tokenizersBindings.processTokenizer("icuTokenizer", IcuTokenizerFactory.class);, +        tokenizersBindings.processTokenizer("icu_tokenizer", IcuTokenizerFactory.class);, +    }, +    , +    @Override public void processTokenFilters(TokenFiltersBindings tokenFiltersBindings) {, +, +        tokenFiltersBindings.processTokenFilter("icuTransform", IcuTransformTokenFilterFactory.class);, +        tokenFiltersBindings.processTokenFilter("icu_transform", IcuTransformTokenFilterFactory.class);, +++ b/src/main/java/org/elasticsearch/index/analysis/IcuAnalysisBinderProcessor.java, + * @author kimchy (shay.banon), +    @Override public void processTokenizers(TokenizersBindings tokenizersBindings) {, +        tokenizersBindings.processTokenizer("icuTokenizer", IcuTokenizerFactory.class);, +        tokenizersBindings.processTokenizer("icu_tokenizer", IcuTokenizerFactory.class);, +    }, +    , +    @Override public void processTokenFilters(TokenFiltersBindings tokenFiltersBindings) {, +, +        tokenFiltersBindings.processTokenFilter("icuTransform", IcuTransformTokenFilterFactory.class);, +        tokenFiltersBindings.processTokenFilter("icu_transform", IcuTransformTokenFilterFactory.class);, +++ b/src/test/java/org/elasticsearch/index/analysis/SimpleIcuAnalysisTests.java, +import static org.elasticsearch.common.settings.ImmutableSettings.Builder.*;, +import static org.hamcrest.Matchers.*;, + * @author kimchy (shay.banon), +    @Test public void testDefaultsIcuAnalysis() {, +        TokenizerFactory tokenizerFactory = analysisService.tokenizer("icu_tokenizer");, +        MatcherAssert.assertThat(tokenizerFactory, instanceOf(IcuTokenizerFactory.class));, +        , +        , +        filterFactory = analysisService.tokenFilter("icu_folding");, +        MatcherAssert.assertThat(filterFactory, instanceOf(IcuFoldingTokenFilterFactory.class));, +, +        filterFactory = analysisService.tokenFilter("icu_collation");, +        MatcherAssert.assertThat(filterFactory, instanceOf(IcuCollationTokenFilterFactory.class));, +        , +        filterFactory = analysisService.tokenFilter("icu_transform");, +        MatcherAssert.assertThat(filterFactory, instanceOf(IcuTransformTokenFilterFactory.class));]