[+++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.index.mapper.MapperParsingException;, +        // extract values if needed, +            MappingMetaData.ParseContext parseContext = mappingMd.createParseContext(id, routing, timestamp);, +, +            if (parseContext.shouldParse()) {, +                XContentParser parser = null;, +                try {, +                    parser = XContentHelper.createParser(source);, +                    mappingMd.parse(parser, parseContext);, +                    if (parseContext.shouldParseId()) {, +                        id = parseContext.id();, +                    }, +                    if (parseContext.shouldParseRouting()) {, +                        if (routing != null && !routing.equals(parseContext.routing())) {, +                            throw new MapperParsingException("The provided routing value [" + routing + "] doesn't match the routing key stored in the document: [" + parseContext.routing() + "]");, +                        }, +                        routing = parseContext.routing();, +                    }, +                    if (parseContext.shouldParseTimestamp()) {, +                        timestamp = parseContext.timestamp();, +                        if (timestamp != null) {, +                            timestamp = MappingMetaData.Timestamp.parseStringTimestamp(timestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +                        }, +                    }, +                } catch (MapperParsingException e) {, +                    throw e;, +                } catch (Exception e) {, +                    throw new ElasticsearchParseException("failed to parse doc to extract routing/timestamp/id", e);, +                } finally {, +                    if (parser != null) {, +                        parser.close();, +                    }, +                }, +            }, +, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.index.mapper.MapperParsingException;, +        // extract values if needed, +            MappingMetaData.ParseContext parseContext = mappingMd.createParseContext(id, routing, timestamp);, +, +            if (parseContext.shouldParse()) {, +                XContentParser parser = null;, +                try {, +                    parser = XContentHelper.createParser(source);, +                    mappingMd.parse(parser, parseContext);, +                    if (parseContext.shouldParseId()) {, +                        id = parseContext.id();, +                    }, +                    if (parseContext.shouldParseRouting()) {, +                        if (routing != null && !routing.equals(parseContext.routing())) {, +                            throw new MapperParsingException("The provided routing value [" + routing + "] doesn't match the routing key stored in the document: [" + parseContext.routing() + "]");, +                        }, +                        routing = parseContext.routing();, +                    }, +                    if (parseContext.shouldParseTimestamp()) {, +                        timestamp = parseContext.timestamp();, +                        if (timestamp != null) {, +                            timestamp = MappingMetaData.Timestamp.parseStringTimestamp(timestamp, mappingMd.timestamp().dateTimeFormatter(), getVersion(metaData, concreteIndex));, +                        }, +                    }, +                } catch (MapperParsingException e) {, +                    throw e;, +                } catch (Exception e) {, +                    throw new ElasticsearchParseException("failed to parse doc to extract routing/timestamp/id", e);, +                } finally {, +                    if (parser != null) {, +                        parser.close();, +                    }, +                }, +            }, +, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +                                shardStateAction.shardFailed(clusterService.state(), shard, indexUUID, "failed to perform " + transportReplicaAction + " on replica on node " + node, exp, shardFailedTimeout, new ReplicationFailedShardStateListener(nodeId, exp));, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.index.mapper.MapperParsingException;, +        // extract values if needed, +            MappingMetaData.ParseContext parseContext = mappingMd.createParseContext(id, routing, timestamp);, +, +            if (parseContext.shouldParse()) {, +                XContentParser parser = null;, +                try {, +                    parser = XContentHelper.createParser(source);, +                    mappingMd.parse(parser, parseContext);, +                    if (parseContext.shouldParseId()) {, +                        id = parseContext.id();, +                    }, +                    if (parseContext.shouldParseRouting()) {, +                        if (routing != null && !routing.equals(parseContext.routing())) {, +                            throw new MapperParsingException("The provided routing value [" + routing + "] doesn't match the routing key stored in the document: [" + parseContext.routing() + "]");, +                        }, +                        routing = parseContext.routing();, +                    }, +                    if (parseContext.shouldParseTimestamp()) {]