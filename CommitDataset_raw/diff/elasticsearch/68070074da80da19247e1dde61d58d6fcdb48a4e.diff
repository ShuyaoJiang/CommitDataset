[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.transport.TransportSettings;, +        Map<String, Settings> profiles = TransportSettings.TRANSPORT_PROFILES_SETTING.get(settings).getAsGroups();, +        if (!profiles.containsKey(TransportSettings.DEFAULT_PROFILE)) {, +            profiles.put(TransportSettings.DEFAULT_PROFILE, Settings.EMPTY);, +            String transportRange = profileSettings.get("port", TransportSettings.PORT.get(settings));, +            boolean valid = TransportSettings.DEFAULT_PROFILE.equals(name) || (Strings.hasLength(name) && profileSettings.get("port") != null);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.transport.TransportSettings;, +        Map<String, Settings> profiles = TransportSettings.TRANSPORT_PROFILES_SETTING.get(settings).getAsGroups();, +        if (!profiles.containsKey(TransportSettings.DEFAULT_PROFILE)) {, +            profiles.put(TransportSettings.DEFAULT_PROFILE, Settings.EMPTY);, +            String transportRange = profileSettings.get("port", TransportSettings.PORT.get(settings));, +            boolean valid = TransportSettings.DEFAULT_PROFILE.equals(name) || (Strings.hasLength(name) && profileSettings.get("port") != null);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    .put(NettyTransport.PING_SCHEDULE.getKey(), "5s") // enable by default the transport schedule ping interval, +                    .put(NettyTransport.NETWORK_SERVER.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.transport.TransportSettings;, +        Map<String, Settings> profiles = TransportSettings.TRANSPORT_PROFILES_SETTING.get(settings).getAsGroups();, +        if (!profiles.containsKey(TransportSettings.DEFAULT_PROFILE)) {, +            profiles.put(TransportSettings.DEFAULT_PROFILE, Settings.EMPTY);, +            String transportRange = profileSettings.get("port", TransportSettings.PORT.get(settings));, +            boolean valid = TransportSettings.DEFAULT_PROFILE.equals(name) || (Strings.hasLength(name) && profileSettings.get("port") != null);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    .put(NettyTransport.PING_SCHEDULE.getKey(), "5s") // enable by default the transport schedule ping interval, +                    .put(NettyTransport.NETWORK_SERVER.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +import org.elasticsearch.discovery.DiscoveryModule;, +import org.elasticsearch.discovery.DiscoveryService;, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.gateway.GatewayService;, +import org.elasticsearch.transport.TransportSettings;, +import org.elasticsearch.transport.netty.NettyTransport;, +    public static Set<Setting<?>> BUILT_IN_CLUSTER_SETTINGS = Collections.unmodifiableSet(new HashSet<>(, +            Arrays.asList(AwarenessAllocationDecider.CLUSTER_ROUTING_ALLOCATION_AWARENESS_ATTRIBUTE_SETTING,, +                    TransportSettings.TRANSPORT_PROFILES_SETTING,, +                    TransportSettings.PORT,, +                    NettyTransport.WORKER_COUNT,, +                    NettyTransport.CONNECTIONS_PER_NODE_RECOVERY,, +                    NettyTransport.CONNECTIONS_PER_NODE_BULK,, +                    NettyTransport.CONNECTIONS_PER_NODE_REG,, +                    NettyTransport.CONNECTIONS_PER_NODE_STATE,, +                    NettyTransport.CONNECTIONS_PER_NODE_PING,, +                    NettyTransport.PING_SCHEDULE,, +                    NettyTransport.TCP_BLOCKING_CLIENT,, +                    NettyTransport.TCP_CONNECT_TIMEOUT,, +                    NettyTransport.NETTY_MAX_CUMULATION_BUFFER_CAPACITY,, +                    NettyTransport.NETTY_MAX_COMPOSITE_BUFFER_COMPONENTS,, +                    NettyTransport.NETTY_RECEIVE_PREDICTOR_SIZE,, +                    NettyTransport.NETTY_RECEIVE_PREDICTOR_MIN,, +                    NettyTransport.NETTY_RECEIVE_PREDICTOR_MAX,, +                    NettyTransport.NETWORK_SERVER,, +                    NettyTransport.NETTY_BOSS_COUNT,, +                    EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.transport.TransportSettings;, +        Map<String, Settings> profiles = TransportSettings.TRANSPORT_PROFILES_SETTING.get(settings).getAsGroups();, +        if (!profiles.containsKey(TransportSettings.DEFAULT_PROFILE)) {, +            profiles.put(TransportSettings.DEFAULT_PROFILE, Settings.EMPTY);, +            String transportRange = profileSettings.get("port", TransportSettings.PORT.get(settings));, +            boolean valid = TransportSettings.DEFAULT_PROFILE.equals(name) || (Strings.hasLength(name) && profileSettings.get("port") != null);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +                    .put(NettyTransport.PING_SCHEDULE.getKey(), "5s") // enable by default the transport schedule ping interval, +                    .put(NettyTransport.NETWORK_SERVER.getKey(), false), +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +import org.elasticsearch.discovery.DiscoveryModule;, +import org.elasticsearch.discovery.DiscoveryService;, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.gateway.GatewayService;, +import org.elasticsearch.transport.TransportSettings;, +import org.elasticsearch.transport.netty.NettyTransport;, +    public static Set<Setting<?>> BUILT_IN_CLUSTER_SETTINGS = Collections.unmodifiableSet(new HashSet<>(, +            Arrays.asList(AwarenessAllocationDecider.CLUSTER_ROUTING_ALLOCATION_AWARENESS_ATTRIBUTE_SETTING,, +                    TransportSettings.TRANSPORT_PROFILES_SETTING,, +                    TransportSettings.PORT,, +                    NettyTransport.WORKER_COUNT,, +                    NettyTransport.CONNECTIONS_PER_NODE_RECOVERY,, +                    NettyTransport.CONNECTIONS_PER_NODE_BULK,, +                    NettyTransport.CONNECTIONS_PER_NODE_REG,, +                    NettyTransport.CONNECTIONS_PER_NODE_STATE,, +                    NettyTransport.CONNECTIONS_PER_NODE_PING,, +                    NettyTransport.PING_SCHEDULE,, +                    NettyTransport.TCP_BLOCKING_CLIENT,, +                    NettyTransport.TCP_CONNECT_TIMEOUT,, +                    NettyTransport.NETTY_MAX_CUMULATION_BUFFER_CAPACITY,, +                    NettyTransport.NETTY_MAX_COMPOSITE_BUFFER_COMPONENTS,, +                    NettyTransport.NETTY_RECEIVE_PREDICTOR_SIZE,, +                    NettyTransport.NETTY_RECEIVE_PREDICTOR_MIN,, +                    NettyTransport.NETTY_RECEIVE_PREDICTOR_MAX,, +                    NettyTransport.NETWORK_SERVER,, +                    NettyTransport.NETTY_BOSS_COUNT,, +                    EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/Setting.java, +        return byteSizeSetting(key, (s) -> value.toString(), dynamic, scope);, +    }, +, +    public static Setting<ByteSizeValue> byteSizeSetting(String key, Setting<ByteSizeValue> fallbackSettings, boolean dynamic, Scope scope) {]