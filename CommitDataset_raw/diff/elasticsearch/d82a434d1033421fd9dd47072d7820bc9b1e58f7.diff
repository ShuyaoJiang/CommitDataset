[+++ b/docs/reference/index-modules/store.asciidoc, +Windows 64bit, `simplefs` on Windows 32bit, and `default` , +(hybrid `niofs` and `mmapfs`) for the rest., +[[default_fs]], +[float], +==== Hybrid MMap / NIO FS coming[1.3.0], +, +The `default` type stores the shard index on the file system depending on, +the file type by mapping a file into memory (mmap) or using Java NIO. Currently, +only the Lucene term dictionary and doc values files are memory mapped to reduce, +the impact on the operating system. All other files are opened using Lucene `NIOFSDirectory`., +Address space settings (<<vm-map-map-count>>) might also apply if your term, +dictionaries are large., +, +++ b/docs/reference/index-modules/store.asciidoc, +Windows 64bit, `simplefs` on Windows 32bit, and `default` , +(hybrid `niofs` and `mmapfs`) for the rest., +[[default_fs]], +[float], +==== Hybrid MMap / NIO FS coming[1.3.0], +, +The `default` type stores the shard index on the file system depending on, +the file type by mapping a file into memory (mmap) or using Java NIO. Currently, +only the Lucene term dictionary and doc values files are memory mapped to reduce, +the impact on the operating system. All other files are opened using Lucene `NIOFSDirectory`., +Address space settings (<<vm-map-map-count>>) might also apply if your term, +dictionaries are large., +, +++ b/docs/reference/setup/configuration.asciidoc, +Elasticsearch uses a <<default_fs,`hybrid mmapfs / niofs`>> directory by default to store its indices.  The default, +++ b/docs/reference/index-modules/store.asciidoc, +Windows 64bit, `simplefs` on Windows 32bit, and `default` , +(hybrid `niofs` and `mmapfs`) for the rest., +[[default_fs]], +[float], +==== Hybrid MMap / NIO FS coming[1.3.0], +, +The `default` type stores the shard index on the file system depending on, +the file type by mapping a file into memory (mmap) or using Java NIO. Currently, +only the Lucene term dictionary and doc values files are memory mapped to reduce, +the impact on the operating system. All other files are opened using Lucene `NIOFSDirectory`., +Address space settings (<<vm-map-map-count>>) might also apply if your term, +dictionaries are large., +, +++ b/docs/reference/setup/configuration.asciidoc, +Elasticsearch uses a <<default_fs,`hybrid mmapfs / niofs`>> directory by default to store its indices.  The default, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +    public RateLimitedFSDirectory(Directory wrapped, StoreRateLimiting.Provider rateLimitingProvider,, +++ b/docs/reference/index-modules/store.asciidoc, +Windows 64bit, `simplefs` on Windows 32bit, and `default` , +(hybrid `niofs` and `mmapfs`) for the rest., +[[default_fs]], +[float], +==== Hybrid MMap / NIO FS coming[1.3.0], +, +The `default` type stores the shard index on the file system depending on, +the file type by mapping a file into memory (mmap) or using Java NIO. Currently, +only the Lucene term dictionary and doc values files are memory mapped to reduce, +the impact on the operating system. All other files are opened using Lucene `NIOFSDirectory`., +Address space settings (<<vm-map-map-count>>) might also apply if your term, +dictionaries are large., +, +++ b/docs/reference/setup/configuration.asciidoc, +Elasticsearch uses a <<default_fs,`hybrid mmapfs / niofs`>> directory by default to store its indices.  The default, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +    public RateLimitedFSDirectory(Directory wrapped, StoreRateLimiting.Provider rateLimitingProvider,, +++ b/src/main/java/org/apache/lucene/store/StoreUtils.java, +        if (directory instanceof FileSwitchDirectory) {, +            FileSwitchDirectory fileSwitchDirectory = (FileSwitchDirectory) directory;, +            return "default(" + toString(fileSwitchDirectory.getPrimaryDir()) + "," + toString(fileSwitchDirectory.getSecondaryDir()) + ")";, +        }, +, +++ b/docs/reference/index-modules/store.asciidoc, +Windows 64bit, `simplefs` on Windows 32bit, and `default` , +(hybrid `niofs` and `mmapfs`) for the rest., +[[default_fs]], +[float], +==== Hybrid MMap / NIO FS coming[1.3.0], +, +The `default` type stores the shard index on the file system depending on, +the file type by mapping a file into memory (mmap) or using Java NIO. Currently, +only the Lucene term dictionary and doc values files are memory mapped to reduce, +the impact on the operating system. All other files are opened using Lucene `NIOFSDirectory`., +Address space settings (<<vm-map-map-count>>) might also apply if your term, +dictionaries are large., +, +++ b/docs/reference/setup/configuration.asciidoc, +Elasticsearch uses a <<default_fs,`hybrid mmapfs / niofs`>> directory by default to store its indices.  The default, +++ b/src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java, +    public RateLimitedFSDirectory(Directory wrapped, StoreRateLimiting.Provider rateLimitingProvider,, +++ b/src/main/java/org/apache/lucene/store/StoreUtils.java, +        if (directory instanceof FileSwitchDirectory) {, +            FileSwitchDirectory fileSwitchDirectory = (FileSwitchDirectory) directory;, +            return "default(" + toString(fileSwitchDirectory.getPrimaryDir()) + "," + toString(fileSwitchDirectory.getSecondaryDir()) + ")";, +        }, +, +++ b/src/main/java/org/elasticsearch/index/store/DirectoryUtils.java, +import org.apache.lucene.store.*;, +import org.elasticsearch.Version;, +    static {]