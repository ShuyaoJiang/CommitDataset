[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java, +import org.elasticsearch.common.io.stream.*;, +, +        // serialize the cluster state here, so we won't do it several times per node, +        byte[] clusterStateInBytes;, +        try {, +            HandlesStreamOutput stream = CachedStreamOutput.cachedHandlesLzfBytes();, +            ClusterState.Builder.writeTo(clusterState, stream);, +            stream.flush();, +            BytesStreamOutput wrapped = ((BytesStreamOutput) ((LZFStreamOutput) stream.wrappedOut()).wrappedOut());, +            clusterStateInBytes = wrapped.copiedByteArray();, +        } catch (Exception e) {, +            logger.warn("failed to serialize cluster_state before publishing it to nodes", e);, +            return;, +        }, +, +                    new PublishClusterStateRequest(clusterStateInBytes),, +                    TransportRequestOptions.options().withHighType().withCompress(false), // no need to compress, we already compressed the bytes, +        private byte[] clusterStateInBytes;, +        private PublishClusterStateRequest(byte[] clusterStateInBytes) {, +            this.clusterStateInBytes = clusterStateInBytes;, +            clusterStateInBytes = new byte[in.readVInt()];, +            in.readFully(clusterStateInBytes);, +            out.writeVInt(clusterStateInBytes.length);, +            out.writeBytes(clusterStateInBytes);, +            StreamInput in = CachedStreamInput.cachedHandlesLzf(new BytesStreamInput(request.clusterStateInBytes));, +            ClusterState clusterState = ClusterState.Builder.readFrom(in, nodesProvider.nodes().localNode());, +            listener.onNewClusterState(clusterState);]