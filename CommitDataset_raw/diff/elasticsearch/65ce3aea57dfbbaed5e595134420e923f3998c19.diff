[+++ b/src/main/java/org/elasticsearch/index/field/function/sort/DoubleFieldsFunctionDataComparator.java, +import org.apache.lucene.index.AtomicReaderContext;, +public class DoubleFieldsFunctionDataComparator extends FieldComparator<Double> {, +            return SortField.Type.DOUBLE;, +    public FieldComparator<Double> setNextReader(AtomicReaderContext context) throws IOException {, +        script.setNextReader(context.reader());, +        return this;, +    public int compareDocToValue(int doc, Double val2) throws IOException {, +        script.setNextDocId(doc);, +        double val1 = script.runAsDouble();, +        return Double.compare(val1, val2);, +    }, +, +    @Override, +    public Double value(int slot) {, +        return values[slot];, +++ b/src/main/java/org/elasticsearch/index/field/function/sort/DoubleFieldsFunctionDataComparator.java, +import org.apache.lucene.index.AtomicReaderContext;, +public class DoubleFieldsFunctionDataComparator extends FieldComparator<Double> {, +            return SortField.Type.DOUBLE;, +    public FieldComparator<Double> setNextReader(AtomicReaderContext context) throws IOException {, +        script.setNextReader(context.reader());, +        return this;, +    public int compareDocToValue(int doc, Double val2) throws IOException {, +        script.setNextDocId(doc);, +        double val1 = script.runAsDouble();, +        return Double.compare(val1, val2);, +    }, +, +    @Override, +    public Double value(int slot) {, +        return values[slot];, +++ b/src/main/java/org/elasticsearch/index/field/function/sort/StringFieldsFunctionDataComparator.java, +import org.apache.lucene.index.AtomicReaderContext;, +public class StringFieldsFunctionDataComparator extends FieldComparator<String> {, +            return SortField.Type.STRING;, +    public FieldComparator<String> setNextReader(AtomicReaderContext context) throws IOException {, +        script.setNextReader(context.reader());, +        return this;, +    public int compareDocToValue(int doc, String val2) throws IOException {, +        script.setNextDocId(doc);, +        String val1 = script.run().toString();, +        return val1.compareTo(val2);, +    }, +, +    @Override, +    public String value(int slot) {]