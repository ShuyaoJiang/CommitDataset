[+++ b/x-pack/plugin/ml/build.gradle, +, +// add all sub-projects of the qa sub-project, +gradle.projectsEvaluated {, +    project.subprojects, +            .find { it.path == project.path + ":qa" }, +            .subprojects, +            .findAll { it.path.startsWith(project.path + ":qa") }, +            .each { check.dependsOn it.check }, +}, +, +++ b/x-pack/plugin/ml/build.gradle, +, +// add all sub-projects of the qa sub-project, +gradle.projectsEvaluated {, +    project.subprojects, +            .find { it.path == project.path + ":qa" }, +            .subprojects, +            .findAll { it.path.startsWith(project.path + ":qa") }, +            .each { check.dependsOn it.check }, +}, +, +++ b/x-pack/plugin/ml/qa/basic-multi-node/build.gradle, +apply plugin: 'elasticsearch.standalone-rest-test', +apply plugin: 'elasticsearch.rest-test', +, +dependencies {, +    testCompile project(path: xpackModule('core'), configuration: 'shadow'), +    testCompile project(path: xpackModule('ml'), configuration: 'runtime'), +}, +, +integTestCluster {, +    setting 'xpack.security.enabled', 'false', +    setting 'xpack.monitoring.enabled', 'false', +    setting 'xpack.watcher.enabled', 'false', +    setting 'xpack.ml.enabled', 'true', +    setting 'xpack.license.self_generated.type', 'trial', +    numNodes = 3, +}, +++ b/x-pack/plugin/ml/build.gradle, +, +// add all sub-projects of the qa sub-project, +gradle.projectsEvaluated {, +    project.subprojects, +            .find { it.path == project.path + ":qa" }, +            .subprojects, +            .findAll { it.path.startsWith(project.path + ":qa") }, +            .each { check.dependsOn it.check }, +}, +, +++ b/x-pack/plugin/ml/qa/basic-multi-node/build.gradle, +apply plugin: 'elasticsearch.standalone-rest-test', +apply plugin: 'elasticsearch.rest-test', +, +dependencies {, +    testCompile project(path: xpackModule('core'), configuration: 'shadow'), +    testCompile project(path: xpackModule('ml'), configuration: 'runtime'), +}, +, +integTestCluster {, +    setting 'xpack.security.enabled', 'false', +    setting 'xpack.monitoring.enabled', 'false', +    setting 'xpack.watcher.enabled', 'false', +    setting 'xpack.ml.enabled', 'true', +    setting 'xpack.license.self_generated.type', 'trial', +    numNodes = 3, +}, +++ b/x-pack/plugin/ml/qa/basic-multi-node/src/test/java/org/elasticsearch/xpack/ml/integration/MlBasicMultiNodeIT.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.xpack.ml.integration;, +, +import org.apache.http.entity.ContentType;, +import org.apache.http.entity.StringEntity;, +import org.elasticsearch.client.Response;, +import org.elasticsearch.client.ResponseException;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentHelper;, +import org.elasticsearch.test.rest.ESRestTestCase;, +import org.elasticsearch.xpack.ml.MachineLearning;, +, +import java.io.IOException;, +import java.net.URLEncoder;, +import java.util.Collections;, +import java.util.List;, +import java.util.Map;, +, +import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;, +import static org.elasticsearch.common.xcontent.XContentType.JSON;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.is;, +, +public class MlBasicMultiNodeIT extends ESRestTestCase {, +, +    @SuppressWarnings("unchecked"), +    public void testMachineLearningInstalled() throws Exception {]