[+++ b/src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java, +            logger.info("Build Node [{}] with settings [{}]", id, finalSettings.toDelimitedString(','));, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java, +            logger.info("Build Node [{}] with settings [{}]", id, finalSettings.toDelimitedString(','));, +++ b/src/test/java/org/elasticsearch/test/integration/gateway/fs/IndexGatewayTests.java, +    private Settings defaultSettings;, +    private String storeType;, +      , +        super.setUp();, +        Builder builder = ImmutableSettings.builder();, +        builder.put("cluster.routing.schedule", "100ms");, +        builder.put("gateway.type", "fs");, +        if (between(0, 5) == 0) {, +            builder.put("gateway.fs.buffer_size", between(1, 100) + "kb");    , +        } , +        if (between(0, 5) == 0) {, +            builder.put("gateway.fs.chunk_size", between(1, 100) + "kb");, +        }, +        , +        builder.put("index.number_of_replicas", "1");, +        builder.put("index.number_of_shards", rarely() ? Integer.toString(between(2, 6)) : "1");, +        storeType = rarely() ? "ram" : "fs";, +        builder.put("index.store", storeType);, +        defaultSettings = builder.build();, +    @Override, +    protected final Settings getClassDefaultSettings() {, +      return defaultSettings;, +    }, +    protected boolean isPersistentStorage() {, +        assert storeType != null;, +        return "fs".equals(storeType);, +    }]