[+++ b/src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java, +        client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards", 1)).execute(), +                .actionGet();, +        ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth("test").setWaitForYellowStatus().execute(), +                .actionGet();, +        SearchResponse searchResponse = client(), +                .prepareSearch("test"), +                .setQuery(, +                        customFiltersScoreQuery(matchAllQuery()).add(termFilter("field", "value4"), "2"), +                                .add(termFilter("field", "value2"), "3").scoreMode("first")).setExplain(true).execute().actionGet();, +        logger.info("--> Hit[0] {} Explanation:\n {}", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0), +                .explanation());, +        searchResponse = client(), +                .prepareSearch("test"), +                .setQuery(, +                        customFiltersScoreQuery(matchAllQuery()).add(termFilter("field", "value4"), "2"), +                                .add(termFilter("field", "value2"), "3").boost(2).scoreMode("first")).setExplain(true).execute(), +                .actionGet();, +        logger.info("--> Hit[0] {} Explanation:\n {}", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0), +                .explanation());, +        client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards", 1)).execute(), +                .actionGet();, +        ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth("test").setWaitForYellowStatus().execute(), +                .actionGet();, +        SearchResponse searchResponse = client(), +                .prepareSearch("test"), +                .setQuery(, +                        functionScoreQuery(matchAllQuery()).scoreMode("first"), +                                .add(termFilter("field", "value4"), new ScriptScoreFunctionBuilder().script("2")), +                                .add(termFilter("field", "value2"), new ScriptScoreFunctionBuilder().script("3"))).setExplain(true), +        logger.info("--> Hit[0] {} Explanation:\n {}", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0), +                .explanation());, +        searchResponse = client(), +                .prepareSearch("test"), +                .setQuery(, +                        functionScoreQuery(matchAllQuery()).scoreMode("first"), +                                .add(termFilter("field", "value4"), new ScriptScoreFunctionBuilder().script("2")), +                                .add(termFilter("field", "value2"), new ScriptScoreFunctionBuilder().script("3")).boost(2)), +                .setExplain(true).execute().actionGet();, +        logger.info("--> Hit[0] {} Explanation:\n {}", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0), +                .explanation());, +        client().admin(), +                .indices(), +                .prepareCreate("test"), +                .addMapping(, +                        "type",, +                        jsonBuilder().startObject().startObject("type").startObject("properties").startObject("snum"), +                                .field("type", "string").endObject().startObject("dnum").field("type", "double").endObject(), +                                .startObject("slnum").field("type", "long").endObject().startObject("gp").field("type", "geo_point"), +                                .endObject().endObject().endObject().endObject()).execute().actionGet();, +        client().index(, +                indexRequest("test"), +                        .type("type1"), +                        .id("1"), +                        .source(jsonBuilder().startObject().field("test", "value check").field("snum", values).field("dnum", dValues), +                                .field("lnum", lValues).field("gp", gp).endObject())).actionGet();, +        client().index(, +                indexRequest("test"), +                        .type("type1"), +                        .id("2"), +                        .source(jsonBuilder().startObject().field("test", "value check").field("snum", values).field("dnum", dValues), +                                .field("lnum", lValues).field("gp", gp).endObject())).actionGet();, +        SearchResponse response = client(), +                .search(searchRequest(), +                        .source(searchSource(), +                                .explain(true), +                                .query(customScoreQuery(termQuery("test", "value")), +                                        .script("c_min = 1000; foreach (x : doc['snum'].values) { c_min = min(Integer.parseInt(x), c_min) } return c_min")))), +                .actionGet();, +        response = client().search(, +                searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(, +                        searchSource().explain(true).query(, +                                customScoreQuery(termQuery("test", "value")).script(, +                                        "c_min = 1000; foreach (x : doc['lnum'].values) { c_min = min(x, c_min) } return c_min")))), +                .actionGet();, +        response = client().search(, +                searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(, +                        searchSource().explain(true).query(, +                                customScoreQuery(termQuery("test", "value")).script(, +                                        "c_min = 1000; foreach (x : doc['dnum'].values) { c_min = min(x, c_min) } return c_min")))), +                .actionGet();, +        response = client().search(, +                searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(, +                        searchSource().explain(true).query(, +                                customScoreQuery(termQuery("test", "value")).script(, +                                        "c_min = 1000; foreach (x : doc['gp'].values) { c_min = min(x.lat, c_min) } return c_min")))), +                .actionGet();, +        client().admin(), +                .indices(), +                .prepareCreate("test"), +                .addMapping(, +                        "type",, +                        jsonBuilder().startObject().startObject("type").startObject("properties").startObject("snum"), +                                .field("type", "string").endObject().startObject("dnum").field("type", "double").endObject(), +                                .startObject("slnum").field("type", "long").endObject().startObject("gp").field("type", "geo_point"), +                                .endObject().endObject().endObject().endObject()).execute().actionGet();, +        client().index(, +                indexRequest("test"), +                        .type("type1"), +                        .id("1")]