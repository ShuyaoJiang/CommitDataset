[+++ b/plugins/discovery-ec2/build.gradle, +  // this could be needed by AwsEc2ServiceImplTests#testAWSCredentialsWithSystemProviders(), +  // As it's marked as Ignored for now, we can comment those, +  // systemProperty 'aws.accessKeyId', 'DUMMY_ACCESS_KEY', +  // systemProperty 'aws.secretKey', 'DUMMY_SECRET_KEY', +++ b/plugins/discovery-ec2/build.gradle, +  // this could be needed by AwsEc2ServiceImplTests#testAWSCredentialsWithSystemProviders(), +  // As it's marked as Ignored for now, we can comment those, +  // systemProperty 'aws.accessKeyId', 'DUMMY_ACCESS_KEY', +  // systemProperty 'aws.secretKey', 'DUMMY_SECRET_KEY', +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/AwsEc2ServiceImpl.java, +import org.elasticsearch.common.logging.ESLogger;, +        this.client = new AmazonEC2Client(buildCredentials(logger, settings), buildConfiguration(logger, settings));, +        String endpoint = findEndpoint(logger, settings);, +        if (endpoint != null) {, +            client.setEndpoint(endpoint);, +        }, +, +        return this.client;, +    }, +, +    protected static AWSCredentialsProvider buildCredentials(ESLogger logger, Settings settings) {, +        AWSCredentialsProvider credentials;, +, +        String key = CLOUD_EC2.KEY_SETTING.get(settings);, +        String secret = CLOUD_EC2.SECRET_SETTING.get(settings);, +        if (key.isEmpty() && secret.isEmpty()) {, +            logger.debug("Using either environment variables, system properties or instance profile credentials");, +            credentials = new AWSCredentialsProviderChain(, +                new EnvironmentVariableCredentialsProvider(),, +                new SystemPropertiesCredentialsProvider(),, +                new InstanceProfileCredentialsProvider(), +            );, +        } else {, +            logger.debug("Using basic key/secret credentials");, +            credentials = new AWSCredentialsProviderChain(, +                new StaticCredentialsProvider(new BasicAWSCredentials(key, secret)), +            );, +        }, +, +        return credentials;, +    }, +, +    protected static ClientConfiguration buildConfiguration(ESLogger logger, Settings settings) {, +        if (PROXY_HOST_SETTING.exists(settings) || CLOUD_EC2.PROXY_HOST_SETTING.exists(settings)) {, +        return clientConfiguration;, +    protected static String findEndpoint(ESLogger logger, Settings settings) {, +        String endpoint = null;, +            endpoint = CLOUD_EC2.ENDPOINT_SETTING.get(settings);, +        } else if (REGION_SETTING.exists(settings) || CLOUD_EC2.REGION_SETTING.exists(settings)) {, +            switch (region) {, +                case "us-east-1":, +                case "us-east":, +                    break;, +                case "us-west":, +                case "us-west-1":, +                    break;, +                case "us-west-2":, +                    break;, +                case "ap-southeast":, +                case "ap-southeast-1":, +                    break;, +                case "ap-south-1":, +                    break;, +                case "us-gov-west":, +                case "us-gov-west-1":, +                    endpoint = "ec2.us-gov-west-1.amazonaws.com";, +                    break;, +                case "ap-southeast-2":, +                    break;, +                case "ap-northeast":, +                case "ap-northeast-1":, +                    break;, +                case "ap-northeast-2":, +                    break;, +                case "eu-west":, +                case "eu-west-1":, +                    break;, +                case "eu-central":, +                case "eu-central-1":, +                    break;, +                case "sa-east":, +                case "sa-east-1":, +                    break;, +                case "cn-north":, +                case "cn-north-1":, +                    break;, +                default:, +        return endpoint;, +++ b/plugins/discovery-ec2/build.gradle, +  // this could be needed by AwsEc2ServiceImplTests#testAWSCredentialsWithSystemProviders(), +  // As it's marked as Ignored for now, we can comment those, +  // systemProperty 'aws.accessKeyId', 'DUMMY_ACCESS_KEY', +  // systemProperty 'aws.secretKey', 'DUMMY_SECRET_KEY', +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/AwsEc2ServiceImpl.java, +import org.elasticsearch.common.logging.ESLogger;, +        this.client = new AmazonEC2Client(buildCredentials(logger, settings), buildConfiguration(logger, settings));, +        String endpoint = findEndpoint(logger, settings);, +        if (endpoint != null) {, +            client.setEndpoint(endpoint);]