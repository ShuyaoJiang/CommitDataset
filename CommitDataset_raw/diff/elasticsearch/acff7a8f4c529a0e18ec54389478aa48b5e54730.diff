[+++ b/qa/smoke-test-plugins-ssl/build.gradle, +File ca = new File(project.buildDir, 'ca'), +File caConfig = new File(ca, 'conf/caconfig.cnf'), +File cert = new File(project.buildDir, 'cert/test-node.csr'), +File signedCert = new File(project.buildDir, 'cert/test-node-signed.csr'), +String caConfigData = """, +[ ca ], +default_ca = CA_default, +[ CA_default ], +copy_extensions = copy, +serial = ${ca}/serial, +database = ${ca}/index.txt, +new_certs_dir = ${ca}/certs, +certificate = ${ca}/certs/cacert.pem, +private_key = ${ca}/private/cakey.pem, +default_days = 712, +default_md = sha256, +preserve = no, +email_in_dn = no, +x509_extensions = v3_ca, +name_opt = ca_default, +cert_opt = ca_default, +policy = policy_anything, +[ policy_anything ], +countryName             = optional, +stateOrProvinceName     = optional, +localityName            = optional, +organizationName        = optional, +organizationalUnitName  = optional, +commonName              = supplied, +emailAddress            = optional, +[ req ], +default_bits = 2048 # Size of keys, +default_keyfile = key.pem # name of generated keys, +default_md = sha256 # message digest algorithm, +string_mask = nombstr # permitted characters, +distinguished_name = req_distinguished_name, +req_extensions = v3_req, +[ req_distinguished_name ], +# Variable name Prompt string, +#------------------------- ----------------------------------, +0.organizationName = Organization Name (company), +organizationalUnitName = Organizational Unit Name (department, division), +emailAddress = Email Address, +emailAddress_max = 40, +localityName = Locality Name (city, district), +stateOrProvinceName = State or Province Name (full name), +countryName = Country Name (2 letter code), +countryName_min = 2, +countryName_max = 2, +commonName = Common Name (hostname, IP, or your name), +commonName_max = 64, +# Default values for the above, for consistency and less typing., +# Variable name Value, +#------------------------ ------------------------------, +0.organizationName_default = Elasticsearch Test Org, +localityName_default = Amsterdam, +stateOrProvinceName_default = Amsterdam, +countryName_default = NL, +emailAddress_default = cacerttest@YOUR.COMPANY.TLD, +[ v3_ca ], +basicConstraints = CA:TRUE, +subjectKeyIdentifier = hash, +authorityKeyIdentifier = keyid:always,issuer:always, +[ v3_req ], +basicConstraints = CA:FALSE, +subjectKeyIdentifier = hash, +""", +, +task createCertificate(type: LoggedExec, dependsOn: createKey) {, +  doFirst {, +    project.delete(cert.parentFile), +    cert.parentFile.mkdirs(), +  }, +  executable = 'keytool', +  standardInput = new ByteArrayInputStream('keypass\n'.getBytes('UTF-8')), +  args '-certreq',, +       '-alias', 'test-node',, +       '-keystore', keystore,, +       '-file', cert,, +       '-keyalg', 'RSA',, +       '-ext', 'san=dns:localhost,ip:127.0.0.1', +}, +, +task createCertificateAuthority(type: LoggedExec) {, +  doFirst {, +    project.delete(ca), +    ca.mkdirs(), +    for (String dir : ['private', 'certs', 'conf']) {, +      new File(ca, dir).mkdirs(), +    }, +    caConfig.setText(caConfigData, 'UTF-8'), +    new File(ca, 'serial').setText('01', 'UTF-8'), +    new File(ca, 'index.txt').setText('', 'UTF-8'), +  }, +  executable = 'openssl', +  args 'req', '-new', '-x509', '-extensions', 'v3_ca',, +      '-keyout', new File(ca, 'private/cakey.pem'),, +      '-out', new File(ca, 'certs/cacert.pem'),, +      '-days', '1460',]