[+++ b/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/upgraded_cluster/10_basic.yml, +  - skip:, +      features: headers, +, +++ b/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/upgraded_cluster/10_basic.yml, +  - skip:, +      features: headers, +, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuite.java, +        errors = Stream.concat(errors, sections.stream().filter(section -> section instanceof DoSection), +            .map(section -> (DoSection) section), +            .filter(section -> false == section.getApiCallSection().getHeaders().isEmpty()), +            .filter(section -> false == hasSkipFeature("headers", testSection, setupSection, teardownSection)), +            .map(section -> "attempted to add a [do] with a [headers] section without a corresponding ", +                + "[\"skip\": \"features\": \"headers\"] so runners that do not support the [headers] section can skip the test at " +, +                "line [" + section.getLocation().lineNumber + "]"));, +, +++ b/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/upgraded_cluster/10_basic.yml, +  - skip:, +      features: headers, +, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuite.java, +        errors = Stream.concat(errors, sections.stream().filter(section -> section instanceof DoSection), +            .map(section -> (DoSection) section), +            .filter(section -> false == section.getApiCallSection().getHeaders().isEmpty()), +            .filter(section -> false == hasSkipFeature("headers", testSection, setupSection, teardownSection)), +            .map(section -> "attempted to add a [do] with a [headers] section without a corresponding ", +                + "[\"skip\": \"features\": \"headers\"] so runners that do not support the [headers] section can skip the test at " +, +                "line [" + section.getLocation().lineNumber + "]"));, +, +++ b/test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuiteTests.java, +import static java.util.Collections.singletonMap;, +        ClientYamlTestSuite testSuite = createTestSuite(SkipSection.EMPTY, doSection);, +        assertThat(e.getMessage(), containsString("api/name:\nattempted to add a [do] with a [warnings] section without a corresponding " +, +            "at line [" + lineNumber + "]"));, +    }, +, +    public void testAddingDoWithHeaderWithoutSkipHeaders() {, +        int lineNumber = between(1, 10000);, +        DoSection doSection = new DoSection(new XContentLocation(lineNumber, 0));, +        ApiCallSection apiCallSection = new ApiCallSection("test");, +        apiCallSection.addHeaders(Collections.singletonMap("header", "value"));, +        doSection.setApiCallSection(apiCallSection);, +        ClientYamlTestSuite testSuite = createTestSuite(SkipSection.EMPTY, doSection);, +        Exception e = expectThrows(IllegalArgumentException.class, testSuite::validate);, +        assertThat(e.getMessage(), containsString("api/name:\nattempted to add a [do] with a [headers] section without a corresponding " +, +            "[\"skip\": \"features\": \"headers\"] so runners that do not support the [headers] section can skip the test at line [", +            + lineNumber + "]"));, +        ClientYamlTestSuite testSuite = createTestSuite(SkipSection.EMPTY, doSection);, +        assertThat(e.getMessage(), containsString("api/name:\nattempted to add a [do] with a [node_selector] section without a " +, +            "corresponding [\"skip\": \"features\": \"node_selector\"] so runners that do not support the [node_selector] section can " +, +            "skip the test at line [" + lineNumber + "]"));, +        ClientYamlTestSuite testSuite = createTestSuite(SkipSection.EMPTY, containsAssertion);, +        assertThat(e.getMessage(), containsString("api/name:\nattempted to add a [contains] assertion without a corresponding " +, +            "can skip the test at line [" + lineNumber + "]"));, +        createTestSuite(skipSection, doSection).validate();, +        createTestSuite(skipSection, doSection).validate();, +    }, +, +    public void testAddingDoWithHeadersWithSkip() {, +        int lineNumber = between(1, 10000);, +        SkipSection skipSection = new SkipSection(null, singletonList("headers"), null);, +        DoSection doSection = new DoSection(new XContentLocation(lineNumber, 0));, +        ApiCallSection apiCallSection = new ApiCallSection("test");, +        apiCallSection.addHeaders(singletonMap("foo", "bar"));, +        doSection.setApiCallSection(apiCallSection);, +        createTestSuite(skipSection, doSection).validate();, +        createTestSuite(skipSection, containsAssertion).validate();, +    private static ClientYamlTestSuite createTestSuite(SkipSection skipSection, ExecutableSection executableSection) {, +        return new ClientYamlTestSuite("api", "name", setupSection, teardownSection,, +++ b/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/upgraded_cluster/10_basic.yml, +  - skip:, +      features: headers, +, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuite.java, +        errors = Stream.concat(errors, sections.stream().filter(section -> section instanceof DoSection), +            .map(section -> (DoSection) section), +            .filter(section -> false == section.getApiCallSection().getHeaders().isEmpty()), +            .filter(section -> false == hasSkipFeature("headers", testSection, setupSection, teardownSection)), +            .map(section -> "attempted to add a [do] with a [headers] section without a corresponding ", +                + "[\"skip\": \"features\": \"headers\"] so runners that do not support the [headers] section can skip the test at " +, +                "line [" + section.getLocation().lineNumber + "]"));, +, +++ b/test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuiteTests.java, +import static java.util.Collections.singletonMap;, +        ClientYamlTestSuite testSuite = createTestSuite(SkipSection.EMPTY, doSection);, +        assertThat(e.getMessage(), containsString("api/name:\nattempted to add a [do] with a [warnings] section without a corresponding " +, +            "at line [" + lineNumber + "]"));, +    }, +, +    public void testAddingDoWithHeaderWithoutSkipHeaders() {, +        int lineNumber = between(1, 10000);, +        DoSection doSection = new DoSection(new XContentLocation(lineNumber, 0));, +        ApiCallSection apiCallSection = new ApiCallSection("test");, +        apiCallSection.addHeaders(Collections.singletonMap("header", "value"));, +        doSection.setApiCallSection(apiCallSection);, +        ClientYamlTestSuite testSuite = createTestSuite(SkipSection.EMPTY, doSection);, +        Exception e = expectThrows(IllegalArgumentException.class, testSuite::validate);, +        assertThat(e.getMessage(), containsString("api/name:\nattempted to add a [do] with a [headers] section without a corresponding " +, +            "[\"skip\": \"features\": \"headers\"] so runners that do not support the [headers] section can skip the test at line ["]