[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java, +import java.util.concurrent.atomic.AtomicLong;, +, +    RecoveryStatus recoveryStatus();, +, +        public static enum Stage {, +            NONE,, +            INDEX,, +            TRANSLOG,, +            DONE, +        }, +        private Stage stage = Stage.NONE;, +        private Index index = new Index();, +, +        private Translog translog = new Translog();, +, +        public Stage stage() {, +            return this.stage;, +        }, +, +        public RecoveryStatus updateStage(Stage stage) {, +            this.stage = stage;, +            return this;, +            volatile long currentTranslogOperations = 0;, +            private long startTime = -1;, +            private long took;, +            public long startTime() {, +                return this.startTime;, +            public void startTime(long startTime) {, +                this.startTime = startTime;, +                return new TimeValue(this.took);, +            }, +, +            public void took(long took) {, +                this.took = took;, +            }, +, +            public void addTranslogOperations(long count) {, +                this.currentTranslogOperations += count;, +            }, +, +            public long currentTranslogOperations() {, +                return this.currentTranslogOperations;, +            private long startTime = -1;, +            private long took = -1;, +            private long version = -1;, +            private int numberOfFiles = 0;, +            private long totalSize = 0;, +            private int numberOfExistingFiles = 0;, +            private long existingTotalSize = 0;, +            private AtomicLong throttlingWaitTime = new AtomicLong();, +            private AtomicLong currentFilesSize = new AtomicLong();, +            public long startTime() {, +                return this.startTime;, +            }, +, +            public void startTime(long startTime) {, +                this.startTime = startTime;, +            }, +, +            public TimeValue took() {, +                return new TimeValue(this.took);, +            }, +, +            public void took(long took) {, +            public void files(int numberOfFiles, long totalSize, int numberOfExistingFiles, long existingTotalSize) {, +                this.numberOfFiles = numberOfFiles;, +                this.totalSize = totalSize;, +                this.numberOfExistingFiles = numberOfExistingFiles;, +                this.existingTotalSize = existingTotalSize;, +            }, +, +                return new ByteSizeValue(totalSize);, +                return new ByteSizeValue(existingTotalSize);, +            }, +, +            public void addThrottlingTime(long delta) {, +                throttlingWaitTime.addAndGet(delta);, +                return new TimeValue(throttlingWaitTime.get());, +            public void updateVersion(long version) {, +                this.version = version;, +            }, +, +            public long currentFilesSize() {, +                return this.currentFilesSize.get();, +            }, +, +            public void addCurrentFilesSize(long updatedSize) {, +                this.currentFilesSize.addAndGet(updatedSize);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java, +import java.util.concurrent.atomic.AtomicLong;, +, +    RecoveryStatus recoveryStatus();, +, +        public static enum Stage {, +            NONE,, +            INDEX,, +            TRANSLOG,, +            DONE, +        }]