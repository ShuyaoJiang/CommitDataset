[+++ b/pom.xml, +, +        <elasticsearch.integ.antfile>${project.basedir}/src/test/resources/integ-tests-183.xml</elasticsearch.integ.antfile>, +++ b/pom.xml, +, +        <elasticsearch.integ.antfile>${project.basedir}/src/test/resources/integ-tests-183.xml</elasticsearch.integ.antfile>, +++ b/src/test/resources/integ-tests-183.xml, +<?xml version="1.0"?>, +<project name="elasticsearch-integration-tests">, +    <!-- our pid file for easy cleanup -->, +    <property name="integ.pidfile" location="${integ.scratch}/es.pid"/>, +, +    <!-- if this exists, ES is running (maybe) -->, +    <available property="integ.pidfile.exists" file="${integ.pidfile}"/>, +, +    <!-- name of our cluster, maybe needs changing -->, +    <property name="integ.cluster.name" value="prepare_release"/>, +, +    <!-- runs an OS script -->, +    <macrodef name="run-script">, +        <attribute name="script"/>, +        <attribute name="spawn" default="false"/>, +        <element name="nested" optional="true"/>, +        <sequential>, +            <local name="failonerror"/>, +            <condition property="failonerror">, +                <isfalse value="@{spawn}"/>, +            </condition>, +, +            <!-- create a temp CWD, to enforce that commands don't rely on CWD -->, +            <local name="temp.cwd"/>, +            <tempfile property="temp.cwd" destDir="${integ.temp}"/>, +            <mkdir dir="${temp.cwd}"/>, +, +            <!-- print commands we run -->, +            <local name="script.base"/>, +            <basename file="@{script}" property="script.base"/>, +            <!-- crappy way to output, but we need it. make it nice later -->, +            <echoxml><exec script="${script.base}"><nested/></exec></echoxml>, +            <exec executable="cmd" osfamily="winnt" dir="${temp.cwd}" failonerror="${failonerror}" spawn="@{spawn}" taskname="${script.base}">, +                <arg value="/c"/>, +                <arg value="&quot;"/>, +                <arg value="@{script}.bat"/>, +                <nested/>, +                <arg value="&quot;"/>, +            </exec>, +, +            <exec executable="sh" osfamily="unix" dir="${temp.cwd}" failonerror="${failonerror}" spawn="@{spawn}" taskname="${script.base}">, +                <arg value="@{script}"/>, +                <nested/>, +            </exec>, +        </sequential>, +    </macrodef>, +, +    <!-- extracts PID from file -->, +    <macrodef name="extract-pid">, +        <attribute name="file"/>, +        <attribute name="property"/>, +        <sequential>, +            <loadfile srcFile="@{file}" property="@{property}">, +                <filterchain>, +                    <striplinebreaks/>, +                </filterchain>, +            </loadfile>, +        </sequential>, +    </macrodef>, +, +    <!-- applies transformations to src and stores in dst -->, +    <macrodef name="filter-property">, +        <attribute name="src"/>, +        <attribute name="dest"/>, +        <element name="chain"/>, +        <sequential>, +            <loadresource property="@{dest}">, +                <propertyresource name="@{src}"/>, +                <filterchain>, +                    <tokenfilter>, +                        <chain/>, +                    </tokenfilter>, +                </filterchain>, +            </loadresource>, +        </sequential>, +    </macrodef>, +, +    <!-- installs a plugin into elasticsearch -->, +    <macrodef name="install-plugin">, +        <attribute name="home" default="${integ.scratch}/elasticsearch-${elasticsearch.version}"/>, +        <attribute name="name"/>, +        <attribute name="file"/>, +        <sequential>, +            <local name="url"/>, +            <makeurl property="url" file="@{file}"/>, +, +            <!-- install plugin -->, +            <echo>Installing plugin @{name}...</echo>, +            <run-script script="@{home}/bin/plugin">, +                <nested>, +                    <arg value="install"/>, +                    <arg value="${url}"/>, +                </nested>]