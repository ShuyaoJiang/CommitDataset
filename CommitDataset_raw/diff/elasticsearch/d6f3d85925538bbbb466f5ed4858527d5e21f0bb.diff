[+++ b/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                configurePomGeneration(project), +    private static void configurePomGeneration(Project project) {, +        project.plugins.apply(MavenManifestPlugin.class), +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +import org.gradle.api.publish.maven.plugins.MavenPublishPlugin, +    private static void configurePomGeneration(Project project) {, +        project.plugins.withType(MavenPublishPlugin.class).whenPluginAdded {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +                configurePomGeneration(project), +    private static void configurePomGeneration(Project project) {, +        project.plugins.apply(MavenManifestPlugin.class), +++ b/distribution/build.gradle, +task run(type: RunTask) {, +  distribution = 'zip', +}]