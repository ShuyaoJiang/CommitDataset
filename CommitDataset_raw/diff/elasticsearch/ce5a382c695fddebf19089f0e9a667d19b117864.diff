[+++ b/.github/ISSUE_TEMPLATE.md, +in your new issue. Note that whether you're filing a bug report or a, +feature request, ensure that your submission is for an, +[OS that we support](https://www.elastic.co/support/matrix#show_os)., +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/.github/ISSUE_TEMPLATE.md, +in your new issue. Note that whether you're filing a bug report or a, +feature request, ensure that your submission is for an, +[OS that we support](https://www.elastic.co/support/matrix#show_os)., +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/Vagrantfile, +    deb_common config, 'echo deb http://cloudfront.debian.net/debian jessie-backports main > /etc/apt/sources.list.d/backports.list', 'backports', +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/.github/ISSUE_TEMPLATE.md, +in your new issue. Note that whether you're filing a bug report or a, +feature request, ensure that your submission is for an, +[OS that we support](https://www.elastic.co/support/matrix#show_os)., +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/Vagrantfile, +    deb_common config, 'echo deb http://cloudfront.debian.net/debian jessie-backports main > /etc/apt/sources.list.d/backports.list', 'backports', +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.common.transport.LocalTransportAddress;, +        return new DiscoveryNode("", nodeId, LocalTransportAddress.buildUnique(), attributes, Sets.newHashSet(DiscoveryNode.Role.MASTER,, +++ b/.github/ISSUE_TEMPLATE.md, +in your new issue. Note that whether you're filing a bug report or a, +feature request, ensure that your submission is for an, +[OS that we support](https://www.elastic.co/support/matrix#show_os)., +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/Vagrantfile, +    deb_common config, 'echo deb http://cloudfront.debian.net/debian jessie-backports main > /etc/apt/sources.list.d/backports.list', 'backports', +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.common.transport.LocalTransportAddress;, +        return new DiscoveryNode("", nodeId, LocalTransportAddress.buildUnique(), attributes, Sets.newHashSet(DiscoveryNode.Role.MASTER,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/.github/ISSUE_TEMPLATE.md, +in your new issue. Note that whether you're filing a bug report or a, +feature request, ensure that your submission is for an, +[OS that we support](https://www.elastic.co/support/matrix#show_os)., +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/Vagrantfile, +    deb_common config, 'echo deb http://cloudfront.debian.net/debian jessie-backports main > /etc/apt/sources.list.d/backports.list', 'backports', +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.common.transport.LocalTransportAddress;, +        return new DiscoveryNode("", nodeId, LocalTransportAddress.buildUnique(), attributes, Sets.newHashSet(DiscoveryNode.Role.MASTER,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Checks that the order of modifiers conforms to the suggestions in the, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +    The correct order is:, +            public, +            protected, +            private, +            abstract, +            static, +            final, +            transient, +            volatile, +            synchronized, +            native, +            strictfp, +    -->, +    <module name="ModifierOrder" />, +, +    <module name="RedundantModifier" />, +, +++ b/.github/ISSUE_TEMPLATE.md, +in your new issue. Note that whether you're filing a bug report or a, +feature request, ensure that your submission is for an, +[OS that we support](https://www.elastic.co/support/matrix#show_os)., +Bug reports on an OS that we do not support or feature requests, +specific to an OS that we do not support will be closed., +++ b/Vagrantfile, +    deb_common config, 'echo deb http://cloudfront.debian.net/debian jessie-backports main > /etc/apt/sources.list.d/backports.list', 'backports', +  config.vm.define "fedora-24" do |config|, +    config.vm.box = "elastic/fedora-24-x86_64", +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.common.transport.LocalTransportAddress;, +        return new DiscoveryNode("", nodeId, LocalTransportAddress.buildUnique(), attributes, Sets.newHashSet(DiscoveryNode.Role.MASTER,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/buildSrc/src/main/resources/checkstyle.xml]