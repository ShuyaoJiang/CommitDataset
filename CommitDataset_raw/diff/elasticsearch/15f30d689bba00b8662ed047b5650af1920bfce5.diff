[+++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +import org.elasticsearch.ExceptionsHelper;, +                        fetchExceptions.put(from, Tuple.tuple(retryCounter, ExceptionsHelper.convertToElastic(e)));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +import org.elasticsearch.ExceptionsHelper;, +                        fetchExceptions.put(from, Tuple.tuple(retryCounter, ExceptionsHelper.convertToElastic(e)));, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTaskTests.java, +                assertThat(entry.getValue().v2(), instanceOf(ShardNotFoundException.class));, +                final ShardNotFoundException shardNotFoundException = (ShardNotFoundException) entry.getValue().v2();, +                assertThat(shardNotFoundException.getShardId().getIndexName(), equalTo("leader_index"));, +                assertThat(shardNotFoundException.getShardId().getId(), equalTo(0));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +import org.elasticsearch.ExceptionsHelper;, +                        fetchExceptions.put(from, Tuple.tuple(retryCounter, ExceptionsHelper.convertToElastic(e)));, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTaskTests.java, +                assertThat(entry.getValue().v2(), instanceOf(ShardNotFoundException.class));, +                final ShardNotFoundException shardNotFoundException = (ShardNotFoundException) entry.getValue().v2();, +                assertThat(shardNotFoundException.getShardId().getIndexName(), equalTo("leader_index"));, +                assertThat(shardNotFoundException.getShardId().getId(), equalTo(0));, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/CcrStatsMonitoringDocTests.java, +                    assertThat(fieldType, equalTo("nested"));, +                    assertThat(XContentMapValues.extractValue("properties.exception.type", fieldMapping), equalTo("object"));, +, +                    Map<?, ?> exceptionFieldMapping =, +                        (Map<?, ?>) XContentMapValues.extractValue("properties.exception.properties", fieldMapping);, +                    assertThat(exceptionFieldMapping.size(), equalTo(2));, +                    assertThat(XContentMapValues.extractValue("type.type", exceptionFieldMapping), equalTo("keyword"));, +                    assertThat(XContentMapValues.extractValue("reason.type", exceptionFieldMapping), equalTo("text"));, +++ b/x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTask.java, +import org.elasticsearch.ExceptionsHelper;, +                        fetchExceptions.put(from, Tuple.tuple(retryCounter, ExceptionsHelper.convertToElastic(e)));, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/ccr/action/ShardFollowNodeTaskTests.java, +                assertThat(entry.getValue().v2(), instanceOf(ShardNotFoundException.class));, +                final ShardNotFoundException shardNotFoundException = (ShardNotFoundException) entry.getValue().v2();, +                assertThat(shardNotFoundException.getShardId().getIndexName(), equalTo("leader_index"));, +                assertThat(shardNotFoundException.getShardId().getId(), equalTo(0));, +++ b/x-pack/plugin/ccr/src/test/java/org/elasticsearch/xpack/monitoring/collector/ccr/CcrStatsMonitoringDocTests.java, +                    assertThat(fieldType, equalTo("nested"));, +                    assertThat(XContentMapValues.extractValue("properties.exception.type", fieldMapping), equalTo("object"));, +, +                    Map<?, ?> exceptionFieldMapping =, +                        (Map<?, ?>) XContentMapValues.extractValue("properties.exception.properties", fieldMapping);, +                    assertThat(exceptionFieldMapping.size(), equalTo(2));, +                    assertThat(XContentMapValues.extractValue("type.type", exceptionFieldMapping), equalTo("keyword"));, +                    assertThat(XContentMapValues.extractValue("reason.type", exceptionFieldMapping), equalTo("text"));, +++ b/x-pack/plugin/core/src/main/resources/monitoring-es.json, +              "type": "nested",, +                  "type": "object",, +                  "properties": {, +                    "type" : {, +                      "type": "keyword", +                    },, +                    "reason": {, +                }, +              }]