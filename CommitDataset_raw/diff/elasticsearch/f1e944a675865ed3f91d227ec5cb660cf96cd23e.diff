[+++ b/docs/reference/mapping/types/parent-join.asciidoc, +==== Parent-join and performance., +, +The join field shouldn't be used like joins in a relation database. In Elasticsearch the key to good performance, +is to de-normalize your data into documents. Each join field, `has_child` or `has_parent` query adds a, +significant tax to your query performance., +, +The only case where the join field makes sense is if your data contains a one-to-many relationship where, +one entity significantly outnumbers the other entity. An example of such case is a use case with products, +and offers for these products. In the case that offers significantly outnumbers the number of products then, +it makes sense to model the product as parent document and the offer as child document., +, +==== Multiple children per parent, +++ b/docs/reference/mapping/types/parent-join.asciidoc, +==== Parent-join and performance., +, +The join field shouldn't be used like joins in a relation database. In Elasticsearch the key to good performance, +is to de-normalize your data into documents. Each join field, `has_child` or `has_parent` query adds a, +significant tax to your query performance., +, +The only case where the join field makes sense is if your data contains a one-to-many relationship where, +one entity significantly outnumbers the other entity. An example of such case is a use case with products, +and offers for these products. In the case that offers significantly outnumbers the number of products then, +it makes sense to model the product as parent document and the offer as child document., +, +==== Multiple children per parent, +++ b/docs/reference/query-dsl/has-child-query.asciidoc, +Note that the `has_child` is a slow query compared to other queries in the, +query dsl due to the fact that it performs a join. The performance degrades, +as the number of matching child documents pointing to unique parent documents, +increases. If you care about query performance you should not use this query., +However if you do happen to use this query then use it as less as possible. Each, +`has_child` query that gets added to a search request can increase query time, +significantly., +, +++ b/docs/reference/mapping/types/parent-join.asciidoc, +==== Parent-join and performance., +, +The join field shouldn't be used like joins in a relation database. In Elasticsearch the key to good performance, +is to de-normalize your data into documents. Each join field, `has_child` or `has_parent` query adds a, +significant tax to your query performance., +, +The only case where the join field makes sense is if your data contains a one-to-many relationship where, +one entity significantly outnumbers the other entity. An example of such case is a use case with products, +and offers for these products. In the case that offers significantly outnumbers the number of products then, +it makes sense to model the product as parent document and the offer as child document., +, +==== Multiple children per parent, +++ b/docs/reference/query-dsl/has-child-query.asciidoc, +Note that the `has_child` is a slow query compared to other queries in the, +query dsl due to the fact that it performs a join. The performance degrades, +as the number of matching child documents pointing to unique parent documents, +increases. If you care about query performance you should not use this query., +However if you do happen to use this query then use it as less as possible. Each, +`has_child` query that gets added to a search request can increase query time, +significantly., +, +++ b/docs/reference/query-dsl/has-parent-query.asciidoc, +Note that the `has_parent` is a slow query compared to other queries in the, +query dsl due to the fact that it performs a join. The performance degrades, +as the number of matching parent documents increases. If you care about query, +performance you should not use this query. However if you do happen to use, +this query then use it as less as possible. Each `has_parent` query that gets, +added to a search request can increase query time significantly., +]