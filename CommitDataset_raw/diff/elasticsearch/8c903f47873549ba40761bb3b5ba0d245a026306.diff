[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java, +import org.elasticsearch.common.xcontent.XContentFactory;, +    @Override, +    public String toString() {, +        try {, +            XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();, +            builder.startObject();, +            toXContent(builder, EMPTY_PARAMS);, +            builder.endObject();, +            return builder.string();, +        } catch (IOException e) {, +            return "{ \"error\" : \"" + e.getMessage() + "\"}";, +        }, +    }, +, +, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java, +import org.elasticsearch.common.xcontent.XContentFactory;, +    @Override, +    public String toString() {, +        try {, +            XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();, +            builder.startObject();, +            toXContent(builder, EMPTY_PARAMS);, +            builder.endObject();, +            return builder.string();, +        } catch (IOException e) {, +            return "{ \"error\" : \"" + e.getMessage() + "\"}";, +        }, +    }, +, +, +++ b/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java, +import com.google.common.base.Predicate;, +import com.google.common.collect.ImmutableList;, +        if (randomBoolean()) {, +            logger.info("checking snapshot completion using status");, +            client().admin().cluster().prepareCreateSnapshot("test-repo", "test-snap-2").setWaitForCompletion(false).setPartial(true).execute().actionGet();, +            awaitBusy(new Predicate<Object>() {, +                @Override, +                public boolean apply(Object o) {, +                    SnapshotsStatusResponse snapshotsStatusResponse = client().admin().cluster().prepareSnapshotStatus("test-repo").setSnapshots("test-snap-2").get();, +                    ImmutableList<SnapshotStatus> snapshotStatuses = snapshotsStatusResponse.getSnapshots();, +                    if(snapshotStatuses.size() == 1) {, +                        logger.trace("current snapshot status [{}]", snapshotStatuses.get(0));, +                        return snapshotStatuses.get(0).getState().completed();, +                    }, +                    return false;, +                }, +            });, +            SnapshotsStatusResponse snapshotsStatusResponse = client().admin().cluster().prepareSnapshotStatus("test-repo").setSnapshots("test-snap-2").get();, +            ImmutableList<SnapshotStatus> snapshotStatuses = snapshotsStatusResponse.getSnapshots();, +            assertThat(snapshotStatuses.size(), equalTo(1));, +            SnapshotStatus snapshotStatus = snapshotStatuses.get(0);, +            logger.info("State: [{}], Reason: [{}]", createSnapshotResponse.getSnapshotInfo().state(), createSnapshotResponse.getSnapshotInfo().reason());, +            assertThat(snapshotStatus.getShardsStats().getTotalShards(), equalTo(12));, +            assertThat(snapshotStatus.getShardsStats().getDoneShards(), lessThan(12));, +            assertThat(snapshotStatus.getShardsStats().getDoneShards(), greaterThan(6));, +        } else {, +            logger.info("checking snapshot completion using wait_for_completion flag");, +        }]