[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.binFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.libFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.modulesFile(), "read,readlink");, +        addPath(policy, Environment.PATH_PLUGINS_SETTING.getKey(), environment.pluginsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_CONF_SETTING.getKey(), environment.configFile(), "read,readlink");, +        addPath(policy, Environment.PATH_SCRIPTS_SETTING.getKey(), environment.scriptsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_LOGS_SETTING.getKey(), environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_SHARED_DATA_SETTING.getKey(), environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_REPO_SETTING.getKey(), path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.binFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.libFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.modulesFile(), "read,readlink");, +        addPath(policy, Environment.PATH_PLUGINS_SETTING.getKey(), environment.pluginsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_CONF_SETTING.getKey(), environment.configFile(), "read,readlink");, +        addPath(policy, Environment.PATH_SCRIPTS_SETTING.getKey(), environment.scriptsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_LOGS_SETTING.getKey(), environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_SHARED_DATA_SETTING.getKey(), environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_REPO_SETTING.getKey(), path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        this.nodesSamplerInterval = this.settings.getAsTime("client.transport.nodes_sampler_interval", timeValueSeconds(5));, +        this.pingTimeout = this.settings.getAsTime("client.transport.ping_timeout", timeValueSeconds(5)).millis();, +        this.ignoreClusterName = this.settings.getAsBoolean("client.transport.ignore_cluster_name", false);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.binFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.libFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.modulesFile(), "read,readlink");, +        addPath(policy, Environment.PATH_PLUGINS_SETTING.getKey(), environment.pluginsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_CONF_SETTING.getKey(), environment.configFile(), "read,readlink");, +        addPath(policy, Environment.PATH_SCRIPTS_SETTING.getKey(), environment.scriptsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_LOGS_SETTING.getKey(), environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_SHARED_DATA_SETTING.getKey(), environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_REPO_SETTING.getKey(), path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        this.nodesSamplerInterval = this.settings.getAsTime("client.transport.nodes_sampler_interval", timeValueSeconds(5));, +        this.pingTimeout = this.settings.getAsTime("client.transport.ping_timeout", timeValueSeconds(5)).millis();, +        this.ignoreClusterName = this.settings.getAsBoolean("client.transport.ignore_cluster_name", false);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.indices.analysis.HunspellService;, +import org.elasticsearch.indices.cache.request.IndicesRequestCache;, +import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;, +import org.elasticsearch.indices.store.IndicesStore;, +        ScriptService.SCRIPT_CACHE_SIZE_SETTING,, +        IndicesFieldDataCache.INDICES_FIELDDATA_CLEAN_INTERVAL_SETTING,, +        IndicesFieldDataCache.INDICES_FIELDDATA_CACHE_SIZE_KEY,, +        IndicesRequestCache.INDICES_CACHE_QUERY_SIZE,, +        IndicesRequestCache.INDICES_CACHE_QUERY_EXPIRE,, +        HunspellService.HUNSPELL_LAZY_LOAD,, +        HunspellService.HUNSPELL_IGNORE_CASE,, +        HunspellService.HUNSPELL_DICTIONARY_OPTIONS,, +        IndicesStore.INDICES_STORE_DELETE_SHARD_TIMEOUT,, +        Environment.PATH_CONF_SETTING,, +        Environment.PATH_DATA_SETTING,, +        Environment.PATH_HOME_SETTING,, +        Environment.PATH_LOGS_SETTING,, +        Environment.PATH_PLUGINS_SETTING,, +        Environment.PATH_REPO_SETTING,, +        Environment.PATH_SCRIPTS_SETTING,, +        Environment.PATH_SHARED_DATA_SETTING,, +        Environment.PIDFILE_SETTING, +    )));, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.binFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.libFile(), "read,readlink");, +        addPath(policy, Environment.PATH_HOME_SETTING.getKey(), environment.modulesFile(), "read,readlink");, +        addPath(policy, Environment.PATH_PLUGINS_SETTING.getKey(), environment.pluginsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_CONF_SETTING.getKey(), environment.configFile(), "read,readlink");, +        addPath(policy, Environment.PATH_SCRIPTS_SETTING.getKey(), environment.scriptsFile(), "read,readlink");, +        addPath(policy, Environment.PATH_LOGS_SETTING.getKey(), environment.logsFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_SHARED_DATA_SETTING.getKey(), environment.sharedDataFile(), "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_DATA_SETTING.getKey(), path, "read,readlink,write,delete");, +            addPath(policy, Environment.PATH_REPO_SETTING.getKey(), path, "read,readlink,write,delete");, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +        this.nodesSamplerInterval = this.settings.getAsTime("client.transport.nodes_sampler_interval", timeValueSeconds(5));, +        this.pingTimeout = this.settings.getAsTime("client.transport.ping_timeout", timeValueSeconds(5)).millis();, +        this.ignoreClusterName = this.settings.getAsBoolean("client.transport.ignore_cluster_name", false);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.env.Environment;, +import org.elasticsearch.indices.analysis.HunspellService;, +import org.elasticsearch.indices.cache.request.IndicesRequestCache;, +import org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache;, +import org.elasticsearch.indices.store.IndicesStore;, +        ScriptService.SCRIPT_CACHE_SIZE_SETTING,, +        IndicesFieldDataCache.INDICES_FIELDDATA_CLEAN_INTERVAL_SETTING,, +        IndicesFieldDataCache.INDICES_FIELDDATA_CACHE_SIZE_KEY,, +        IndicesRequestCache.INDICES_CACHE_QUERY_SIZE,, +        IndicesRequestCache.INDICES_CACHE_QUERY_EXPIRE,, +        HunspellService.HUNSPELL_LAZY_LOAD,, +        HunspellService.HUNSPELL_IGNORE_CASE,, +        HunspellService.HUNSPELL_DICTIONARY_OPTIONS,, +        IndicesStore.INDICES_STORE_DELETE_SHARD_TIMEOUT,]