[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IngestClient.java, +import org.elasticsearch.action.ingest.SimulatePipelineRequest;, +import org.elasticsearch.action.ingest.SimulatePipelineResponse;, +, +    /**, +     * Simulate a pipeline on a set of documents provided in the request, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">, +     *     Simulate Pipeline API on elastic.co</a>, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public SimulatePipelineResponse simulatePipeline(SimulatePipelineRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::simulatePipeline, options,, +            SimulatePipelineResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously simulate a pipeline on a set of documents provided in the request, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">, +     *     Simulate Pipeline API on elastic.co</a>, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void simulatePipelineAsync(SimulatePipelineRequest request,, +                                      RequestOptions options,, +                                      ActionListener<SimulatePipelineResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::simulatePipeline, options,, +            SimulatePipelineResponse::fromXContent, listener, emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IngestClient.java, +import org.elasticsearch.action.ingest.SimulatePipelineRequest;, +import org.elasticsearch.action.ingest.SimulatePipelineResponse;, +, +    /**, +     * Simulate a pipeline on a set of documents provided in the request, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">, +     *     Simulate Pipeline API on elastic.co</a>, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public SimulatePipelineResponse simulatePipeline(SimulatePipelineRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::simulatePipeline, options,, +            SimulatePipelineResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously simulate a pipeline on a set of documents provided in the request, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">, +     *     Simulate Pipeline API on elastic.co</a>, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void simulatePipelineAsync(SimulatePipelineRequest request,, +                                      RequestOptions options,, +                                      ActionListener<SimulatePipelineResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::simulatePipeline, options,, +            SimulatePipelineResponse::fromXContent, listener, emptySet());, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +import org.elasticsearch.action.ingest.SimulatePipelineRequest;, +    static Request simulatePipeline(SimulatePipelineRequest simulatePipelineRequest) throws IOException {, +        EndpointBuilder builder = new EndpointBuilder().addPathPartAsIs("_ingest/pipeline");, +        if (simulatePipelineRequest.getId() != null && !simulatePipelineRequest.getId().isEmpty()) {, +            builder.addPathPart(simulatePipelineRequest.getId());, +        }, +        builder.addPathPartAsIs("_simulate");, +        String endpoint = builder.build();, +        Request request = new Request(HttpPost.METHOD_NAME, endpoint);, +        Params params = new Params(request);, +        params.putParam("verbose", Boolean.toString(simulatePipelineRequest.isVerbose()));, +        request.setEntity(createEntity(simulatePipelineRequest, REQUEST_BODY_CONTENT_TYPE));, +        return request;, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IngestClient.java, +import org.elasticsearch.action.ingest.SimulatePipelineRequest;, +import org.elasticsearch.action.ingest.SimulatePipelineResponse;, +, +    /**, +     * Simulate a pipeline on a set of documents provided in the request, +     * <p>, +     * See, +     * <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">, +     *     Simulate Pipeline API on elastic.co</a>, +     * @param request the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized]