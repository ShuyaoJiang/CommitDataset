[+++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +import static org.elasticsearch.common.xcontent.XContentParser.NumberType;, +, +                        NumberType numberType = parser.numberType();, +                        if (NumberType.LONG != numberType && NumberType.INT != numberType) {, +                            throw new ElasticSearchIllegalArgumentException("Weight must be an integer, but was [" + parser.numberValue() + "]");, +                        }, +                            throw new ElasticSearchIllegalArgumentException("Weight must be in the interval [0..2147483647], but was [" + weight + "]");, +++ b/src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java, +import static org.elasticsearch.common.xcontent.XContentParser.NumberType;, +, +                        NumberType numberType = parser.numberType();, +                        if (NumberType.LONG != numberType && NumberType.INT != numberType) {, +                            throw new ElasticSearchIllegalArgumentException("Weight must be an integer, but was [" + parser.numberValue() + "]");, +                        }, +                            throw new ElasticSearchIllegalArgumentException("Weight must be in the interval [0..2147483647], but was [" + weight + "]");, +++ b/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java, +import org.elasticsearch.ExceptionsHelper;, +    public void testThatWeightMustBeAnInteger() throws Exception {, +        createIndexAndMapping();, +, +        try {, +            client().prepareIndex(INDEX, TYPE, "1").setSource(jsonBuilder(), +                    .startObject().startObject(FIELD), +                    .startArray("input").value("sth").endArray(), +                    .field("weight", 2.5), +                    .endObject().endObject(), +            ).get();, +            fail("Indexing with a float weight was successful, but should not be");, +        } catch (MapperParsingException e) {, +            assertThat(ExceptionsHelper.detailedMessage(e), containsString("2.5"));, +        }, +    }, +, +    @Test]