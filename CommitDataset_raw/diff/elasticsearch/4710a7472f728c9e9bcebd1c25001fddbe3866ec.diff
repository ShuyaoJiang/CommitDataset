[+++ b/docs/reference/sql/functions/aggs.asciidoc, +[[sql-functions-aggs-first]], +===== `FIRST/FIRST_VALUE`, +, +.Synopsis:, +[source, sql], +----------------------------------------------, +FIRST(field_name<1>[, ordering_field_name]<2>), +----------------------------------------------, +, +*Input*:, +, +<1> target field for the aggregation, +<2> optional field used for ordering, +, +*Output*: same type as the input, +, +.Description:, +, +Returns the first **non-NULL** value (if such exists) of the `field_name` input column sorted by, +the `ordering_field_name` column. If `ordering_field_name` is not provided, only the `field_name`, +column is used for the sorting. E.g.:, +, +[cols="<,<"], +|===, +s| a    | b, +, + | 100  | 1, + | 200  | 1, + | 1    | 2, + | 2    | 2, + | 10   | null, + | 20   | null, + | null | null, +|===, +, +[source, sql], +----------------------, +SELECT FIRST(a) FROM t, +----------------------, +, +will result in:, +[cols="<"], +|===, +s| FIRST(a), + | 1, +|===, +, +and, +, +[source, sql], +-------------------------, +SELECT FIRST(a, b) FROM t, +-------------------------, +, +will result in:, +[cols="<"], +|===, +s| FIRST(a, b), + | 100, +|===, +, +, +["source","sql",subs="attributes,macros"], +-----------------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[firstWithOneArg], +-----------------------------------------------------------, +, +["source","sql",subs="attributes,macros"], +--------------------------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[firstWithOneArgAndGroupBy], +--------------------------------------------------------------------, +, +["source","sql",subs="attributes,macros"], +-----------------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[firstWithTwoArgs], +-----------------------------------------------------------, +, +["source","sql",subs="attributes,macros"], +---------------------------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[firstWithTwoArgsAndGroupBy], +---------------------------------------------------------------------, +, +`FIRST_VALUE` is a name alias and can be used instead of `FIRST`, e.g.:, +, +["source","sql",subs="attributes,macros"], +--------------------------------------------------------------------------, +include-tagged::{sql-specs}/docs.csv-spec[firstValueWithTwoArgsAndGroupBy], +--------------------------------------------------------------------------, +, +[NOTE], +`FIRST` cannot be used in a HAVING clause., +[NOTE], +`FIRST` cannot be used with columns of type <<text, `text`>> unless, +the field is also <<before-enabling-fielddata,saved as a keyword>>., +, +[[sql-functions-aggs-last]], +===== `LAST/LAST_VALUE`, +, +.Synopsis:]