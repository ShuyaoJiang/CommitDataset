[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +import org.elasticsearch.common.collect.Sets;, +import java.util.Set;, +        final Set<DiscoveryNode> nodesToDisconnect1 = sendPings(id, timeout, false);, +                final Set<DiscoveryNode> nodesToDisconnect = Sets.newHashSet(nodesToDisconnect1);, +                nodesToDisconnect.addAll(sendPings(id, timeout, true));, +                for (DiscoveryNode node : nodesToDisconnect) {, +                    transportService.disconnectFromNode(node);, +                }, +    Set<DiscoveryNode> sendPings(final int id, final TimeValue timeout, boolean wait) {, +        Set<DiscoveryNode> nodesToDisconnect = Sets.newHashSet();, +, +            boolean nodeFoundByAddressX;, +                nodeFoundByAddressX = false;, +                nodeFoundByAddressX = true;, +            final boolean nodeFoundByAddress = nodeFoundByAddressX;, +                nodesToDisconnect.add(nodeToSend);, +                threadPool.executor(ThreadPool.Names.MANAGEMENT).execute(new Runnable() {, +                            if (!nodeFoundByAddress) {, +                            sendPingRequestToNode(id, timeout, pingRequest, latch, node, nodeToSend);, +                sendPingRequestToNode(id, timeout, pingRequest, latch, node, nodeToSend);, +, +        return nodesToDisconnect;, +    private void sendPingRequestToNode(final int id, TimeValue timeout, UnicastPingRequest pingRequest, final CountDownLatch latch, final DiscoveryNode node, final DiscoveryNode nodeToSend) {, +        logger.trace("[{}] connecting to {}", id, nodeToSend);]