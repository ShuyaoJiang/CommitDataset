[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +import javax.annotation.Nullable;, +        ShardId sId = new ShardId(index, shardId);, +, +        indicesLifecycle.beforeIndexShardClosed(sId, indexShard, delete);, +            try {, +            } catch (Exception e) {, +                logger.debug("failed to clean plugin shard service [{}]", e, closeable);, +            }, +        if (indexShard != null) {, +        }, +        if (indexShard != null) {, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        indicesLifecycle.afterIndexShardClosed(sId, delete);, +        @Override public void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, boolean delete) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +import javax.annotation.Nullable;, +        ShardId sId = new ShardId(index, shardId);, +, +        indicesLifecycle.beforeIndexShardClosed(sId, indexShard, delete);, +            try {, +            } catch (Exception e) {, +                logger.debug("failed to clean plugin shard service [{}]", e, closeable);, +            }, +        if (indexShard != null) {, +        }, +        if (indexShard != null) {, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        indicesLifecycle.afterIndexShardClosed(sId, delete);, +        @Override public void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, boolean delete) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +import javax.annotation.Nullable;, +, +        public void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, boolean delete) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +import javax.annotation.Nullable;, +        ShardId sId = new ShardId(index, shardId);, +, +        indicesLifecycle.beforeIndexShardClosed(sId, indexShard, delete);, +            try {, +            } catch (Exception e) {, +                logger.debug("failed to clean plugin shard service [{}]", e, closeable);, +            }, +        if (indexShard != null) {, +        }, +        if (indexShard != null) {, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        try {, +        } catch (Exception e) {, +            // ignore, +        }, +        indicesLifecycle.afterIndexShardClosed(sId, delete);, +        @Override public void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, boolean delete) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/IndicesLifecycle.java, +import javax.annotation.Nullable;, +, +        public void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, boolean delete) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java, +import javax.annotation.Nullable;, +    public void beforeIndexShardClosed(ShardId shardId, @Nullable IndexShard indexShard, boolean delete) {, +            listener.beforeIndexShardClosed(shardId, indexShard, delete);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/service/InternalIndexService.java, +import javax.annotation.Nullable;, +        ShardId sId = new ShardId(index, shardId);, +, +        indicesLifecycle.beforeIndexShardClosed(sId, indexShard, delete);, +            try {, +            } catch (Exception e) {]