[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.node.NodeBuilder;, +        NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().settings(nodeSettings);, +        node = nodeBuilder.build();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.node.NodeBuilder;, +        NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().settings(nodeSettings);, +        node = nodeBuilder.build();, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, + * <p>In order to create a node, the {@link NodeBuilder} can be used. When done with it, make sure to, + * call {@link #close()} on it., +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +import org.elasticsearch.node.NodeBuilder;, +        NodeBuilder nodeBuilder = NodeBuilder.nodeBuilder().settings(nodeSettings);, +        node = nodeBuilder.build();, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, + * <p>In order to create a node, the {@link NodeBuilder} can be used. When done with it, make sure to, + * call {@link #close()} on it., +++ b/core/src/main/java/org/elasticsearch/node/NodeBuilder.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.node;, +, +import org.elasticsearch.common.settings.Settings;, +, +/**, + * A node builder is used to construct a {@link Node} instance., + * <p>, + * Settings will be loaded relative to the ES home (with or without <tt>config/</tt> prefix) and if not found,, + * within the classpath (with or without <tt>config/</tt> prefix). The settings file loaded can either be named, + * <tt>elasticsearch.yml</tt> or <tt>elasticsearch.json</tt>)., + * <p>, + * Explicit settings can be passed by using the {@link #settings(org.elasticsearch.common.settings.Settings)} method., + * <p>, + * In any case, settings will be resolved from system properties as well that are either prefixed with <tt>es.</tt>, + * or <tt>elasticsearch.</tt>., + * <p>, + * An example for creating a simple node with optional settings loaded from the classpath:, + * <pre>, + * Node node = NodeBuilder.nodeBuilder().node();, + * </pre>, + * <p>, + * An example for creating a node with explicit settings (in this case, a node in the cluster that does not hold, + * data):, + * <pre>, + * Node node = NodeBuilder.nodeBuilder(), + *                      .settings(Settings.settingsBuilder().put("node.data", false), + *                      .node();, + * </pre>, + * <p>, + * When done with the node, make sure you call {@link Node#close()} on it., + *, + *, + */, +public class NodeBuilder {, +, +    private final Settings.Builder settings = Settings.settingsBuilder();, +, +    /**, +     * A convenient factory method to create a {@link NodeBuilder}., +     */, +    public static NodeBuilder nodeBuilder() {, +        return new NodeBuilder();, +    }, +, +    /**, +     * Set addition settings simply by working directly against the settings builder., +     */, +    public Settings.Builder settings() {, +        return settings;, +    }, +, +    /**, +     * Set addition settings simply by working directly against the settings builder., +     */, +    public Settings.Builder getSettings() {, +        return settings;, +    }, +]