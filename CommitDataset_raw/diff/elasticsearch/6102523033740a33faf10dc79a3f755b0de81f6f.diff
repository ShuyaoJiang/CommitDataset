[+++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>("script", Builder::new);, +     * Convenience method to call {@link Script#parse(XContentParser, String)}, +    public static Script parse(XContentParser parser) throws IOException {, +        return parse(parser, DEFAULT_SCRIPT_LANG);, +    public static Script parse(XContentParser parser, String defaultLang) throws IOException {, +        return PARSER.apply(parser, null).build(defaultLang);, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>("script", Builder::new);, +     * Convenience method to call {@link Script#parse(XContentParser, String)}, +    public static Script parse(XContentParser parser) throws IOException {, +        return parse(parser, DEFAULT_SCRIPT_LANG);, +    public static Script parse(XContentParser parser, String defaultLang) throws IOException {, +        return PARSER.apply(parser, null).build(defaultLang);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java, +                    script = Script.parse(parser, context.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>("script", Builder::new);, +     * Convenience method to call {@link Script#parse(XContentParser, String)}, +    public static Script parse(XContentParser parser) throws IOException {, +        return parse(parser, DEFAULT_SCRIPT_LANG);, +    public static Script parse(XContentParser parser, String defaultLang) throws IOException {, +        return PARSER.apply(parser, null).build(defaultLang);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java, +                    script = Script.parse(parser, context.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java, +                    initScript = Script.parse(parser, context.getDefaultScriptLanguage());, +                    mapScript = Script.parse(parser, context.getDefaultScriptLanguage());, +                    combineScript = Script.parse(parser, context.getDefaultScriptLanguage());, +                    reduceScript = Script.parse(parser, context.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>("script", Builder::new);, +     * Convenience method to call {@link Script#parse(XContentParser, String)}, +    public static Script parse(XContentParser parser) throws IOException {, +        return parse(parser, DEFAULT_SCRIPT_LANG);, +    public static Script parse(XContentParser parser, String defaultLang) throws IOException {, +        return PARSER.apply(parser, null).build(defaultLang);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java, +                    script = Script.parse(parser, context.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java, +                    initScript = Script.parse(parser, context.getDefaultScriptLanguage());, +                    mapScript = Script.parse(parser, context.getDefaultScriptLanguage());, +                    combineScript = Script.parse(parser, context.getDefaultScriptLanguage());, +                    reduceScript = Script.parse(parser, context.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java, +                                        script = Script.parse(parser, context.getDefaultScriptLanguage());, +                                        script = Script.parse(parser, context.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +                script = Script.parse(parser);, +++ b/core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java, +                    script = Script.parse(parser, parseContext.getDefaultScriptLanguage());, +++ b/core/src/main/java/org/elasticsearch/script/Script.java, +    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>("script", Builder::new);, +     * Convenience method to call {@link Script#parse(XContentParser, String)}, +    public static Script parse(XContentParser parser) throws IOException {]