[+++ b/src/main/java/org/elasticsearch/common/Table.java, +import org.elasticsearch.ElasticsearchIllegalStateException;, +        if (currentCells == null || currentCells.isEmpty()) {, +            throw new ElasticsearchIllegalStateException("no headers added...");, +        }, +            throw new ElasticsearchIllegalStateException("no headers added...");, +        if (currentCells == null) {, +            throw new ElasticsearchIllegalStateException("no row started...");, +        }, +            throw new ElasticsearchIllegalStateException(s.toString());, +        if (currentCells == null) {, +            throw new ElasticsearchIllegalStateException("no block started...");, +        }, +                throw new ElasticsearchIllegalStateException("can't add more cells to a row than the header");, +++ b/src/main/java/org/elasticsearch/common/Table.java, +import org.elasticsearch.ElasticsearchIllegalStateException;, +        if (currentCells == null || currentCells.isEmpty()) {, +            throw new ElasticsearchIllegalStateException("no headers added...");, +        }, +            throw new ElasticsearchIllegalStateException("no headers added...");, +        if (currentCells == null) {, +            throw new ElasticsearchIllegalStateException("no row started...");, +        }, +            throw new ElasticsearchIllegalStateException(s.toString());, +        if (currentCells == null) {, +            throw new ElasticsearchIllegalStateException("no block started...");, +        }, +                throw new ElasticsearchIllegalStateException("can't add more cells to a row than the header");, +++ b/src/test/java/org/elasticsearch/common/TableTests.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.common;, +, +import org.elasticsearch.ElasticsearchIllegalStateException;, +import org.elasticsearch.test.ElasticsearchTestCase;, +import org.junit.Test;, +, +import java.util.List;, +import java.util.Map;, +, +public class TableTests extends ElasticsearchTestCase {, +, +    @Test(expected = ElasticsearchIllegalStateException.class), +    public void testFailOnStartRowWithoutHeader() {, +        Table table = new Table();, +        table.startRow();, +    }, +, +    @Test(expected = ElasticsearchIllegalStateException.class), +    public void testFailOnEndHeadersWithoutStart() {, +        Table table = new Table();, +        table.endHeaders();, +    }, +, +    @Test(expected = ElasticsearchIllegalStateException.class), +    public void testFailOnAddCellWithoutHeader() {, +        Table table = new Table();, +        table.addCell("error");, +    }, +, +    @Test(expected = ElasticsearchIllegalStateException.class), +    public void testFailOnAddCellWithoutRow() {, +        Table table = this.getTableWithHeaders();, +        table.addCell("error");, +    }, +, +    @Test(expected = ElasticsearchIllegalStateException.class), +    public void testFailOnEndRowWithoutStart() {, +        Table table = this.getTableWithHeaders();, +        table.endRow();, +    }, +, +    @Test(expected = ElasticsearchIllegalStateException.class), +    public void testFailOnLessCellsThanDeclared() {, +        Table table = this.getTableWithHeaders();, +        table.startRow();, +        table.addCell("foo");, +        table.endRow(true);, +    }, +, +    @Test, +    public void testOnLessCellsThanDeclaredUnchecked() {, +        Table table = this.getTableWithHeaders();]