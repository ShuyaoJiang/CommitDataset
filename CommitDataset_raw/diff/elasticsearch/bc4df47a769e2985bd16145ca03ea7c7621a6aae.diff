[+++ b/build.gradle, +  if (indexCompatVersions[-1].snapshot) {, +    /* The last and second to last versions can be snapshots. Rather than use, +     * snapshots built by CI we connect these versions to projects that build, +     * those those versions from the HEAD of the appropriate branch. */, +    if (indexCompatVersions[-1].bugfix == 0) {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +    } else {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +    }, +++ b/build.gradle, +  if (indexCompatVersions[-1].snapshot) {, +    /* The last and second to last versions can be snapshots. Rather than use, +     * snapshots built by CI we connect these versions to projects that build, +     * those those versions from the HEAD of the appropriate branch. */, +    if (indexCompatVersions[-1].bugfix == 0) {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +    } else {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +    }, +++ b/distribution/build.gradle, +   it.path.contains(':tools') == false && it.path.contains(':bwc') == false }, +++ b/build.gradle, +  if (indexCompatVersions[-1].snapshot) {, +    /* The last and second to last versions can be snapshots. Rather than use, +     * snapshots built by CI we connect these versions to projects that build, +     * those those versions from the HEAD of the appropriate branch. */, +    if (indexCompatVersions[-1].bugfix == 0) {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +    } else {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +    }, +++ b/distribution/build.gradle, +   it.path.contains(':tools') == false && it.path.contains(':bwc') == false }, +++ b/distribution/bwc/build.gradle, +String bwcVersion, +boolean enabled = true, +if (project.name == 'bwc-stable-snapshot') {, +  /* bwc-stable is only used if the last version is on a stable branch instead, +   * of a bugfix branch */, +  enabled = indexCompatVersions[-1].bugfix == 0, +  bwcVersion = indexCompatVersions[-1], +} else if (project.name == 'bwc-release-snapshot') {, +  if (indexCompatVersions[-1].bugfix == 0) {, +    /* The last version is on a stable branch so it is handled by the bwc-stable, +     * project. This project will instead handle the version before that which, +     * *should* be on a stable branch. */, +    bwcVersion = indexCompatVersions[-2], +  } else {, +    // The last version is on a release branch so it is handled by this project, +    bwcVersion = indexCompatVersions[-1], +  }, +} else {, +  throw new InvalidUserDataException("Unsupport project name ${project.name}"), +}, +if (enabled) {, +  String bwcBranch =, +      project.name == 'bwc-stable-snapshot' ? "${major}.x" : "${major}.${minor}", +, +++ b/build.gradle, +  if (indexCompatVersions[-1].snapshot) {, +    /* The last and second to last versions can be snapshots. Rather than use, +     * snapshots built by CI we connect these versions to projects that build, +     * those those versions from the HEAD of the appropriate branch. */, +    if (indexCompatVersions[-1].bugfix == 0) {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-stable-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-2]}"] = ':distribution:bwc-release-snapshot', +    } else {, +      ext.projectSubstitutions["org.elasticsearch.distribution.deb:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.rpm:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +      ext.projectSubstitutions["org.elasticsearch.distribution.zip:elasticsearch:${indexCompatVersions[-1]}"] = ':distribution:bwc-release-snapshot', +    }, +++ b/distribution/build.gradle, +   it.path.contains(':tools') == false && it.path.contains(':bwc') == false }, +++ b/distribution/bwc/build.gradle]