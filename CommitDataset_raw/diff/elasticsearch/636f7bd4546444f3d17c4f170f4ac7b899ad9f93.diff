[+++ b/src/main/java/org/elasticsearch/action/TransportActions.java, +++ b/src/main/java/org/elasticsearch/action/TransportActions.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    boolean updatedReadOnly = metaData.persistentSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false) || metaData.transientSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    } else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/action/TransportActions.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    boolean updatedReadOnly = metaData.persistentSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false) || metaData.transientSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    } else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +import org.elasticsearch.index.IndexShardMissingException;, +        if (actual instanceof IndexShardMissingException) {, +            return true;, +        }, +++ b/src/main/java/org/elasticsearch/action/TransportActions.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    boolean updatedReadOnly = metaData.persistentSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false) || metaData.transientSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    } else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +import org.elasticsearch.index.IndexShardMissingException;, +        if (actual instanceof IndexShardMissingException) {, +            return true;, +        }, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/action/TransportActions.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    boolean updatedReadOnly = metaData.persistentSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false) || metaData.transientSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    } else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +import org.elasticsearch.index.IndexShardMissingException;, +        if (actual instanceof IndexShardMissingException) {, +            return true;, +        }, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/action/TransportActions.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    boolean updatedReadOnly = metaData.persistentSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false) || metaData.transientSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    } else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +import org.elasticsearch.index.IndexShardMissingException;, +        if (actual instanceof IndexShardMissingException) {, +            return true;, +        }, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/action/TransportActions.java, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java, +import org.elasticsearch.cluster.block.ClusterBlocks;, +                    ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks());, +                    boolean updatedReadOnly = metaData.persistentSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false) || metaData.transientSettings().getAsBoolean(MetaData.SETTING_READ_ONLY, false);, +                    if (updatedReadOnly) {, +                        blocks.addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    } else {, +                        blocks.removeGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK);, +                    }, +                    return ClusterState.builder().state(currentState).metaData(metaData).blocks(blocks).build();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +import org.elasticsearch.index.IndexShardMissingException;, +        if (actual instanceof IndexShardMissingException) {, +            return true;, +        }, +++ /dev/null, +++ /dev/null]