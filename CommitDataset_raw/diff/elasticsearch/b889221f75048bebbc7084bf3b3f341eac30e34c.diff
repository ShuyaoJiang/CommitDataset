[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.client.indices.GetIndexTemplatesResponse;, +import org.elasticsearch.client.indices.PutIndexTemplateRequest;, +    , +    /**, +     * Puts an index template using the Index Templates API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     * @param putIndexTemplateRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     * @deprecated This old form of request allows types in mappings. Use {@link #putTemplate(PutIndexTemplateRequest, RequestOptions)} , +     * instead which introduces a new request object without types., +     */, +    @Deprecated, +    public AcknowledgedResponse putTemplate(, +            org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest putIndexTemplateRequest,, +            RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(putIndexTemplateRequest, IndicesRequestConverters::putTemplate, options,, +            AcknowledgedResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Asynchronously puts an index template using the Index Templates API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     * @param putIndexTemplateRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     * @deprecated This old form of request allows types in mappings. , +     * Use {@link #putTemplateAsync(PutIndexTemplateRequest, RequestOptions, ActionListener)} , +     * instead which introduces a new request object without types., +     */, +    @Deprecated, +    public void putTemplateAsync(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest putIndexTemplateRequest, , +            RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(putIndexTemplateRequest, IndicesRequestConverters::putTemplate, options,, +            AcknowledgedResponse::fromXContent, listener, emptySet());, +    }, +    , +    , +    public AcknowledgedResponse putTemplate(, +            PutIndexTemplateRequest putIndexTemplateRequest,, +    public void putTemplateAsync(PutIndexTemplateRequest putIndexTemplateRequest, , +            RequestOptions options, ActionListener<AcknowledgedResponse> listener) {, +     * Gets index templates using the Index Templates API. The mappings will be returned in a legacy deprecated format, where the, +     * mapping definition is nested under the type name., +     * @deprecated This method uses an old response object which still refers to types, a deprecated feature. Use , +     * {@link #getIndexTemplate(GetIndexTemplatesRequest, RequestOptions)} instead which returns a new response object, +    @Deprecated, +    public org.elasticsearch.action.admin.indices.template.get.GetIndexTemplatesResponse getTemplate(, +            GetIndexTemplatesRequest getIndexTemplatesRequest, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(getIndexTemplatesRequest,, +            IndicesRequestConverters::getTemplatesWithDocumentTypes,, +            options, org.elasticsearch.action.admin.indices.template.get.GetIndexTemplatesResponse::fromXContent, emptySet());, +    }, +    , +    /**, +     * Gets index templates using the Index Templates API, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param getIndexTemplatesRequest the request, +     * @return the response, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetIndexTemplatesResponse getIndexTemplate(GetIndexTemplatesRequest getIndexTemplatesRequest, RequestOptions options), +                                                  throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(getIndexTemplatesRequest,, +            IndicesRequestConverters::getTemplates,, +     * Asynchronously gets index templates using the Index Templates API. The mappings will be returned in a legacy deprecated format, , +     * where the mapping definition is nested under the type name., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API, +     * on elastic.co</a>, +     * @param getIndexTemplatesRequest the request, +     * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     * @deprecated This method uses an old response object which still refers to types, a deprecated feature. Use , +     * {@link #getIndexTemplateAsync(GetIndexTemplatesRequest, RequestOptions, ActionListener)} instead which returns a new response object, +     */, +    @Deprecated, +    public void getTemplateAsync(GetIndexTemplatesRequest getIndexTemplatesRequest, RequestOptions options,, +                                 ActionListener<org.elasticsearch.action.admin.indices.template.get.GetIndexTemplatesResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(getIndexTemplatesRequest,, +            IndicesRequestConverters::getTemplatesWithDocumentTypes,, +            options, org.elasticsearch.action.admin.indices.template.get.GetIndexTemplatesResponse::fromXContent, listener, emptySet());, +    }, +    , +    /**, +    public void getIndexTemplateAsync(GetIndexTemplatesRequest getIndexTemplatesRequest, RequestOptions options, , +        restHighLevelClient.performRequestAsyncAndParseEntity(getIndexTemplatesRequest,, +            IndicesRequestConverters::getTemplates,, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.client.indices.GetIndexTemplatesResponse;, +import org.elasticsearch.client.indices.PutIndexTemplateRequest;, +    , +    /**, +     * Puts an index template using the Index Templates API., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html"> Index Templates API]