[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        esConfig['node.max_local_storage_nodes'] = node.config.numNodes, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        esConfig['node.max_local_storage_nodes'] = node.config.numNodes, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    AnalysisModule.AnalysisProvider<CharFilterFactory> charFilterFactoryFactory;, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name);, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name, analysisService.getIndexSettings());, +                        if (charFilterFactoryFactory == null) {, +                        charFilterFactories[i] = charFilterFactoryFactory.get(analysisService.getIndexSettings(), environment, charFilter.name,, +                            AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                                AnalysisRegistry.INDEX_ANALYSIS_CHAR_FILTER + "." + charFilter.name));, +                    AnalysisModule.AnalysisProvider<TokenFilterFactory> tokenFilterFactoryFactory;, +                        tokenFilterFactoryFactory = analysisRegistry.getTokenFilterProvider(tokenFilter.name);, +                        tokenFilterFactoryFactory = analysisRegistry.getTokenFilterProvider(tokenFilter.name, analysisService.getIndexSettings());, +                       if (tokenFilterFactoryFactory == null) {, +                        tokenFilterFactories[i] = tokenFilterFactoryFactory.get(analysisService.getIndexSettings(), environment, tokenFilter.name,, +                            AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                                AnalysisRegistry.INDEX_ANALYSIS_FILTER + "." + tokenFilter.name));, +            AnalysisModule.AnalysisProvider<TokenizerFactory> tokenizerFactoryFactory;, +                tokenizerFactoryFactory = analysisRegistry.getTokenizerProvider(tokenizer.name);, +                tokenizerFactoryFactory = analysisRegistry.getTokenizerProvider(tokenizer.name, analysisService.getIndexSettings());, +                if (tokenizerFactoryFactory == null) {, +                tokenizerFactory = tokenizerFactoryFactory.get(analysisService.getIndexSettings(), environment, tokenizer.name,, +                    AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                        AnalysisRegistry.INDEX_ANALYSIS_TOKENIZER + "." + tokenizer.name));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        esConfig['node.max_local_storage_nodes'] = node.config.numNodes, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    AnalysisModule.AnalysisProvider<CharFilterFactory> charFilterFactoryFactory;, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name);, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name, analysisService.getIndexSettings());, +                        if (charFilterFactoryFactory == null) {, +                        charFilterFactories[i] = charFilterFactoryFactory.get(analysisService.getIndexSettings(), environment, charFilter.name,, +                            AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                                AnalysisRegistry.INDEX_ANALYSIS_CHAR_FILTER + "." + charFilter.name));, +                    AnalysisModule.AnalysisProvider<TokenFilterFactory> tokenFilterFactoryFactory;, +                        tokenFilterFactoryFactory = analysisRegistry.getTokenFilterProvider(tokenFilter.name);, +                        tokenFilterFactoryFactory = analysisRegistry.getTokenFilterProvider(tokenFilter.name, analysisService.getIndexSettings());, +                       if (tokenFilterFactoryFactory == null) {, +                        tokenFilterFactories[i] = tokenFilterFactoryFactory.get(analysisService.getIndexSettings(), environment, tokenFilter.name,, +                            AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                                AnalysisRegistry.INDEX_ANALYSIS_FILTER + "." + tokenFilter.name));, +            AnalysisModule.AnalysisProvider<TokenizerFactory> tokenizerFactoryFactory;, +                tokenizerFactoryFactory = analysisRegistry.getTokenizerProvider(tokenizer.name);, +                tokenizerFactoryFactory = analysisRegistry.getTokenizerProvider(tokenizer.name, analysisService.getIndexSettings());, +                if (tokenizerFactoryFactory == null) {, +                tokenizerFactory = tokenizerFactoryFactory.get(analysisService.getIndexSettings(), environment, tokenizer.name,, +                    AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                        AnalysisRegistry.INDEX_ANALYSIS_TOKENIZER + "." + tokenizer.name));, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsRequest.java, +                            parseIndexConstraints(indexConstraints, parser);, +    private static void parseIndexConstraints(List<IndexConstraint> indexConstraints,, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        esConfig['node.max_local_storage_nodes'] = node.config.numNodes, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    AnalysisModule.AnalysisProvider<CharFilterFactory> charFilterFactoryFactory;, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name);, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name, analysisService.getIndexSettings());, +                        if (charFilterFactoryFactory == null) {, +                        charFilterFactories[i] = charFilterFactoryFactory.get(analysisService.getIndexSettings(), environment, charFilter.name,, +                            AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                                AnalysisRegistry.INDEX_ANALYSIS_CHAR_FILTER + "." + charFilter.name));, +                    AnalysisModule.AnalysisProvider<TokenFilterFactory> tokenFilterFactoryFactory;, +                        tokenFilterFactoryFactory = analysisRegistry.getTokenFilterProvider(tokenFilter.name);, +                        tokenFilterFactoryFactory = analysisRegistry.getTokenFilterProvider(tokenFilter.name, analysisService.getIndexSettings());, +                       if (tokenFilterFactoryFactory == null) {, +                        tokenFilterFactories[i] = tokenFilterFactoryFactory.get(analysisService.getIndexSettings(), environment, tokenFilter.name,, +                            AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                                AnalysisRegistry.INDEX_ANALYSIS_FILTER + "." + tokenFilter.name));, +            AnalysisModule.AnalysisProvider<TokenizerFactory> tokenizerFactoryFactory;, +                tokenizerFactoryFactory = analysisRegistry.getTokenizerProvider(tokenizer.name);, +                tokenizerFactoryFactory = analysisRegistry.getTokenizerProvider(tokenizer.name, analysisService.getIndexSettings());, +                if (tokenizerFactoryFactory == null) {, +                tokenizerFactory = tokenizerFactoryFactory.get(analysisService.getIndexSettings(), environment, tokenizer.name,, +                    AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                        AnalysisRegistry.INDEX_ANALYSIS_TOKENIZER + "." + tokenizer.name));, +++ b/core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsRequest.java, +                            parseIndexConstraints(indexConstraints, parser);, +    private static void parseIndexConstraints(List<IndexConstraint> indexConstraints,, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java, +                ShardRouting activeReplica = activeReplica(failedShard.shardId());, +                if (activeReplica == null) {, +                    // if the activeReplica was relocating before this call to failShard, its relocation was cancelled above when we, +                    // failed initializing replica shards (and moved replica relocation source back to started), +                    assert activeReplica.started() : "replica relocation should have been cancelled: " + activeReplica;, +                    ShardRouting primarySwappedCandidate = promoteActiveReplicaShardToPrimary(activeReplica);, +    private ShardRouting promoteActiveReplicaShardToPrimary(ShardRouting replicaShard) {, +        assert replicaShard.active() : "non-active shard cannot be promoted to primary: " + replicaShard;, +     * Used in conjunction with {@link #promoteActiveReplicaShardToPrimary} when an active replica is promoted to primary., +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +        esConfig['node.max_local_storage_nodes'] = node.config.numNodes, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    AnalysisModule.AnalysisProvider<CharFilterFactory> charFilterFactoryFactory;, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name);, +                        charFilterFactoryFactory = analysisRegistry.getCharFilterProvider(charFilter.name, analysisService.getIndexSettings());, +                        if (charFilterFactoryFactory == null) {, +                        charFilterFactories[i] = charFilterFactoryFactory.get(analysisService.getIndexSettings(), environment, charFilter.name,, +                            AnalysisRegistry.getSettingsFromIndexSettings(analysisService.getIndexSettings(),, +                                AnalysisRegistry.INDEX_ANALYSIS_CHAR_FILTER + "." + charFilter.name));]