[+++ b/src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java, +        indexTemplateService.removeTemplates(new MetaDataIndexTemplateService.RemoveRequest(request.name()), new MetaDataIndexTemplateService.RemoveListener() {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java, +        indexTemplateService.removeTemplates(new MetaDataIndexTemplateService.RemoveRequest(request.name()), new MetaDataIndexTemplateService.RemoveListener() {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import com.google.common.collect.Sets;, +import org.elasticsearch.common.regex.Regex;, +import java.util.Set;, +    public void removeTemplates(final RemoveRequest request, final RemoveListener listener) {, +                Set<String> templateNames = Sets.newHashSet();, +                for (String templateName : currentState.metaData().templates().keySet()) {, +                    if (Regex.simpleMatch(request.name, templateName)) {, +                        templateNames.add(templateName);, +                    }, +                }, +                if (templateNames.isEmpty()) {, +                MetaData.Builder metaData = MetaData.builder().metaData(currentState.metaData());, +                for (String templateName : templateNames) {, +                    metaData.removeTemplate(templateName);, +                }, +++ b/src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java, +        indexTemplateService.removeTemplates(new MetaDataIndexTemplateService.RemoveRequest(request.name()), new MetaDataIndexTemplateService.RemoveListener() {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import com.google.common.collect.Sets;, +import org.elasticsearch.common.regex.Regex;, +import java.util.Set;, +    public void removeTemplates(final RemoveRequest request, final RemoveListener listener) {, +                Set<String> templateNames = Sets.newHashSet();, +                for (String templateName : currentState.metaData().templates().keySet()) {, +                    if (Regex.simpleMatch(request.name, templateName)) {, +                        templateNames.add(templateName);, +                    }, +                }, +                if (templateNames.isEmpty()) {, +                MetaData.Builder metaData = MetaData.builder().metaData(currentState.metaData());, +                for (String templateName : templateNames) {, +                    metaData.removeTemplate(templateName);, +                }, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +import org.elasticsearch.indices.IndexTemplateMissingException;, + * <p/>, + * <p/>, +            wipeTemplates();, +    /**, +     * Deletes index templates, support wildcard notation., +     */, +    public static void wipeTemplates(String... templates) {, +        // if nothing is provided, delete all, +        if (templates.length == 0) {, +            templates = new String[]{"*"};, +        }, +        for (String template : templates) {, +            try {, +                client().admin().indices().prepareDeleteTemplate(template).execute().actionGet();, +            } catch (IndexTemplateMissingException e) {, +                // ignore, +            }, +        }, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java, +        indexTemplateService.removeTemplates(new MetaDataIndexTemplateService.RemoveRequest(request.name()), new MetaDataIndexTemplateService.RemoveListener() {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java, +import com.google.common.collect.Sets;, +import org.elasticsearch.common.regex.Regex;, +import java.util.Set;, +    public void removeTemplates(final RemoveRequest request, final RemoveListener listener) {, +                Set<String> templateNames = Sets.newHashSet();, +                for (String templateName : currentState.metaData().templates().keySet()) {, +                    if (Regex.simpleMatch(request.name, templateName)) {, +                        templateNames.add(templateName);, +                    }, +                }, +                if (templateNames.isEmpty()) {, +                MetaData.Builder metaData = MetaData.builder().metaData(currentState.metaData());, +                for (String templateName : templateNames) {, +                    metaData.removeTemplate(templateName);, +                }, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +import org.elasticsearch.indices.IndexTemplateMissingException;, + * <p/>, + * <p/>, +            wipeTemplates();, +    /**, +     * Deletes index templates, support wildcard notation., +     */, +    public static void wipeTemplates(String... templates) {, +        // if nothing is provided, delete all, +        if (templates.length == 0) {, +            templates = new String[]{"*"};, +        }, +        for (String template : templates) {, +            try {, +                client().admin().indices().prepareDeleteTemplate(template).execute().actionGet();, +            } catch (IndexTemplateMissingException e) {, +                // ignore, +            }, +        }, +    }, +]