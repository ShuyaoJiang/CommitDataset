[+++ b/.gitignore, +html_docs, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +                    numberOfPendingTasks, numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState),, +                numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState), pendingTaskTimeInQueue);, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +                    numberOfPendingTasks, numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState),, +                numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState), pendingTaskTimeInQueue);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +            sb.append("Java version: ").append(fullVersion());, +            Loggers.getLogger(JVMCheck.class).warn("bypassing jvm version check for version [{}], this can result in data corruption!", fullVersion());, +                sb.append("Your version: " + fullVersion());, +    , +    /** , +     * Returns java + jvm version, looks like this:, +     * {@code Oracle Corporation 1.8.0_45 [Java HotSpot(TM) 64-Bit Server VM 25.45-b02]}, +     */, +    static String fullVersion() {, +        StringBuilder sb = new StringBuilder();, +        sb.append(Constants.JAVA_VENDOR);, +        sb.append(" ");, +        sb.append(Constants.JAVA_VERSION);, +        sb.append(" [");, +        sb.append(Constants.JVM_NAME);, +        sb.append(" ");, +        sb.append(Constants.JVM_VERSION);, +        sb.append("]");, +        return sb.toString();, +    }, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +                    numberOfPendingTasks, numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState),, +                numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState), pendingTaskTimeInQueue);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +            sb.append("Java version: ").append(fullVersion());, +            Loggers.getLogger(JVMCheck.class).warn("bypassing jvm version check for version [{}], this can result in data corruption!", fullVersion());, +                sb.append("Your version: " + fullVersion());, +    , +    /** , +     * Returns java + jvm version, looks like this:, +     * {@code Oracle Corporation 1.8.0_45 [Java HotSpot(TM) 64-Bit Server VM 25.45-b02]}, +     */, +    static String fullVersion() {, +        StringBuilder sb = new StringBuilder();, +        sb.append(Constants.JAVA_VENDOR);, +        sb.append(" ");, +        sb.append(Constants.JAVA_VERSION);, +        sb.append(" [");, +        sb.append(Constants.JVM_NAME);, +        sb.append(" ");, +        sb.append(Constants.JVM_VERSION);, +        sb.append("]");, +        return sb.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/.gitignore, +html_docs, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +                    numberOfPendingTasks, numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState),, +                numberOfInFlightFetch, UnassignedInfo.getNumberOfDelayedUnassigned(System.currentTimeMillis(), settings, clusterState), pendingTaskTimeInQueue);, +++ b/core/src/main/java/org/elasticsearch/bootstrap/JVMCheck.java, +            sb.append("Java version: ").append(fullVersion());, +            Loggers.getLogger(JVMCheck.class).warn("bypassing jvm version check for version [{}], this can result in data corruption!", fullVersion());, +                sb.append("Your version: " + fullVersion());, +    , +    /** , +     * Returns java + jvm version, looks like this:, +     * {@code Oracle Corporation 1.8.0_45 [Java HotSpot(TM) 64-Bit Server VM 25.45-b02]}, +     */, +    static String fullVersion() {, +        StringBuilder sb = new StringBuilder();, +        sb.append(Constants.JAVA_VENDOR);, +        sb.append(" ");, +        sb.append(Constants.JAVA_VERSION);, +        sb.append(" [");, +        sb.append(Constants.JVM_NAME);, +        sb.append(" ");, +        sb.append(Constants.JVM_VERSION);, +        sb.append("]");, +        return sb.toString();, +    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Security.java, +        addPath(policy, environment.scriptsFile(), "read,readlink");, +++ b/core/src/main/java/org/elasticsearch/cluster/ClusterInfo.java, +import java.util.Collections;, +public final class ClusterInfo {, +    public static final ClusterInfo EMPTY = new ClusterInfo();, +, +    private ClusterInfo() {, +        this.usages = Collections.emptyMap();, +        this.shardSizes = Collections.emptyMap();, +    }, +++ b/.gitignore, +html_docs]