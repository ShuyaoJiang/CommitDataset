[+++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +                if (persistentTasks.getTask(datafeedTaskId(datafeedId)) != null) {, +    /**, +     * Namespaces the task ids for jobs., +     * A datafeed id can be used as a job id, because they are stored separately in cluster state., +     */, +    public static String jobTaskId(String jobId) {, +        return "job-" + jobId;, +    }, +, +        if (tasks == null) {, +        return tasks.getTask(jobTaskId(jobId));, +    }, +, +    /**, +     * Namespaces the task ids for datafeeds., +     * A job id can be used as a datafeed id, because they are stored separately in cluster state., +     */, +    public static String datafeedTaskId(String datafeedId) {, +        return "datafeed-" + datafeedId;, +    }, +        if (tasks == null) {, +        return tasks.getTask(datafeedTaskId(datafeedId));, +    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +                if (persistentTasks.getTask(datafeedTaskId(datafeedId)) != null) {, +    /**, +     * Namespaces the task ids for jobs., +     * A datafeed id can be used as a job id, because they are stored separately in cluster state., +     */, +    public static String jobTaskId(String jobId) {, +        return "job-" + jobId;, +    }, +, +        if (tasks == null) {, +        return tasks.getTask(jobTaskId(jobId));, +    }, +, +    /**, +     * Namespaces the task ids for datafeeds., +     * A job id can be used as a datafeed id, because they are stored separately in cluster state., +     */, +    public static String datafeedTaskId(String datafeedId) {, +        return "datafeed-" + datafeedId;, +    }, +        if (tasks == null) {, +        return tasks.getTask(datafeedTaskId(datafeedId));, +    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.ResourceAlreadyExistsException;, +                        if (e instanceof ResourceAlreadyExistsException) {, +                            e = new ElasticsearchStatusException("Cannot open job [" + request.getJobId() +, +                                    "] because it has already been opened", RestStatus.CONFLICT, e);, +                        }, +                persistentTasksService.startPersistentTask(MlMetadata.jobTaskId(request.jobId), NAME, request, finalListener);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +                if (persistentTasks.getTask(datafeedTaskId(datafeedId)) != null) {, +    /**, +     * Namespaces the task ids for jobs., +     * A datafeed id can be used as a job id, because they are stored separately in cluster state., +     */, +    public static String jobTaskId(String jobId) {, +        return "job-" + jobId;, +    }, +, +        if (tasks == null) {, +        return tasks.getTask(jobTaskId(jobId));, +    }, +, +    /**, +     * Namespaces the task ids for datafeeds., +     * A job id can be used as a datafeed id, because they are stored separately in cluster state., +     */, +    public static String datafeedTaskId(String datafeedId) {, +        return "datafeed-" + datafeedId;, +    }, +        if (tasks == null) {, +        return tasks.getTask(datafeedTaskId(datafeedId));, +    }, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/OpenJobAction.java, +import org.elasticsearch.ResourceAlreadyExistsException;, +                        if (e instanceof ResourceAlreadyExistsException) {, +                            e = new ElasticsearchStatusException("Cannot open job [" + request.getJobId() +, +                                    "] because it has already been opened", RestStatus.CONFLICT, e);, +                        }, +                persistentTasksService.startPersistentTask(MlMetadata.jobTaskId(request.jobId), NAME, request, finalListener);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/StartDatafeedAction.java, +import org.elasticsearch.ElasticsearchStatusException;, +import org.elasticsearch.ResourceAlreadyExistsException;, +import org.elasticsearch.rest.RestStatus;, +                        if (e instanceof ResourceAlreadyExistsException) {, +                            e = new ElasticsearchStatusException("cannot start datafeed [" + request.getDatafeedId() +, +                                    "] because it has already been started", RestStatus.CONFLICT, e);, +                        }, +                persistentTasksService.startPersistentTask(MlMetadata.datafeedTaskId(request.datafeedId), NAME, request, finalListener);, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +                if (persistentTasks.getTask(datafeedTaskId(datafeedId)) != null) {, +    /**, +     * Namespaces the task ids for jobs., +     * A datafeed id can be used as a job id, because they are stored separately in cluster state.]