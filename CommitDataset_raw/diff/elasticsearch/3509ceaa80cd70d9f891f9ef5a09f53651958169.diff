[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +     * Returns a NodeInfo object for the first node in the cluster., +    static NodeInfo setup(Project project, Task task, ClusterConfiguration config) {, +        return nodes[0], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +     * Returns a NodeInfo object for the first node in the cluster., +    static NodeInfo setup(Project project, Task task, ClusterConfiguration config) {, +        return nodes[0], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +        args.add("-Des.node.portsfile=true"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +     * Returns a NodeInfo object for the first node in the cluster., +    static NodeInfo setup(Project project, Task task, ClusterConfiguration config) {, +        return nodes[0], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +        args.add("-Des.node.portsfile=true"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +            NodeInfo node = ClusterFormationTasks.setup(project, this, clusterConfig), +            systemProperty('tests.rest.cluster', "${-> node.httpUri()}"), +            // TODO: our "client" qa tests currently use the rest-test plugin. instead they should have their own plugin, +            // that sets up the test cluster and passes this transport uri instead of http uri. Until then, we pass, +            // both as separate sysprops, +            systemProperty('tests.cluster', "${-> node.transportUri()}"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +     * Returns a NodeInfo object for the first node in the cluster., +    static NodeInfo setup(Project project, Task task, ClusterConfiguration config) {, +        return nodes[0], +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +        args.add("-Des.node.portsfile=true"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +            NodeInfo node = ClusterFormationTasks.setup(project, this, clusterConfig), +            systemProperty('tests.rest.cluster', "${-> node.httpUri()}"), +            // TODO: our "client" qa tests currently use the rest-test plugin. instead they should have their own plugin, +            // that sets up the test cluster and passes this transport uri instead of http uri. Until then, we pass, +            // both as separate sysprops, +            systemProperty('tests.cluster', "${-> node.transportUri()}"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +        BuildPlugin.configureCompile(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {]