[+++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +++ b/plugins/analysis-icu/pom.xml, +        <tests.rest.suite>analysis_icu</tests.rest.suite>, +        <tests.rest.load_packaged>false</tests.rest.load_packaged>, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +++ b/plugins/analysis-icu/pom.xml, +        <tests.rest.suite>analysis_icu</tests.rest.suite>, +        <tests.rest.load_packaged>false</tests.rest.load_packaged>, +++ b/plugins/analysis-icu/rest-api-spec/test/analysis_icu/10_basic.yaml, +# Integration tests for ICU analysis components, +#, +"Tokenizer":, +    - do:, +        indices.analyze:, +          text:         Foo Bar, +          tokenizer:    icu_tokenizer, +    - length: { tokens: 2 }, +    - match:  { tokens.0.token: Foo }, +    - match:  { tokens.1.token: Bar }, +---, +"Normalization filter":, +    - do:, +        indices.analyze:, +          filters:      icu_normalizer, +          text:         Foo Bar Ruß, +          tokenizer:    keyword, +    - length: { tokens: 1 }, +    - match:  { tokens.0.token: foo bar russ }, +---, +"Normalization charfilter":, +    - do:, +        indices.analyze:, +          char_filters: icu_normalizer, +          text:         Foo Bar Ruß, +          tokenizer:    keyword, +    - length: { tokens: 1 }, +    - match:  { tokens.0.token: foo bar russ }, +---, +"Folding filter":, +    - do:, +        indices.analyze:, +          filters:      icu_folding, +          text:         Foo Bar résumé, +          tokenizer:    keyword, +    - length: { tokens: 1 }, +    - match:  { tokens.0.token: foo bar resume }, +++ b/core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java, +++ b/plugins/analysis-icu/pom.xml, +        <tests.rest.suite>analysis_icu</tests.rest.suite>, +        <tests.rest.load_packaged>false</tests.rest.load_packaged>, +++ b/plugins/analysis-icu/rest-api-spec/test/analysis_icu/10_basic.yaml, +# Integration tests for ICU analysis components, +#, +"Tokenizer":, +    - do:, +        indices.analyze:, +          text:         Foo Bar, +          tokenizer:    icu_tokenizer, +    - length: { tokens: 2 }, +    - match:  { tokens.0.token: Foo }, +    - match:  { tokens.1.token: Bar }, +---, +"Normalization filter":, +    - do:, +        indices.analyze:, +          filters:      icu_normalizer, +          text:         Foo Bar Ruß, +          tokenizer:    keyword, +    - length: { tokens: 1 }, +    - match:  { tokens.0.token: foo bar russ }, +---, +"Normalization charfilter":, +    - do:, +        indices.analyze:, +          char_filters: icu_normalizer, +          text:         Foo Bar Ruß, +          tokenizer:    keyword, +    - length: { tokens: 1 }, +    - match:  { tokens.0.token: foo bar russ }, +---, +"Folding filter":, +    - do:, +        indices.analyze:, +          filters:      icu_folding, +          text:         Foo Bar résumé, +          tokenizer:    keyword, +    - length: { tokens: 1 }, +    - match:  { tokens.0.token: foo bar resume }, +++ b/plugins/analysis-icu/src/main/java/org/elasticsearch/indices/analysis/IcuIndicesAnalysis.java, +, +import org.apache.lucene.analysis.icu.ICUNormalizer2CharFilter;, +import org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactory;, +import org.elasticsearch.index.analysis.CharFilterFactory;, +import java.io.Reader;, +, +        , +        indicesAnalysisService.charFilterFactories().put("icu_normalizer", new PreBuiltCharFilterFactoryFactory(new CharFilterFactory() {, +            @Override, +            public String name() {]