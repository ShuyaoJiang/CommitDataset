[+++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }, +++ b/src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java, +                    if (propNode == null) {, +                        throw new MapperParsingException("Property [null_value] cannot be null.");, +                    }]