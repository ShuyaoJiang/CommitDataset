[+++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class IndexMetaData implements Diffable<IndexMetaData> {, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class IndexMetaData implements Diffable<IndexMetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +public class MetaData implements Iterable<IndexMetaData>, Diffable<MetaData> {, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class IndexMetaData implements Diffable<IndexMetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +public class MetaData implements Iterable<IndexMetaData>, Diffable<MetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +        if (!primaryAsList.isEmpty() && !primaryAsList.get(0).active() && !primaryAsList.get(0).initializing()) {, +            List<ShardRouting> primaryList = ImmutableList.of();, +            return new PlainShardIterator(shardId, primaryList);, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class IndexMetaData implements Diffable<IndexMetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +public class MetaData implements Iterable<IndexMetaData>, Diffable<MetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +        if (!primaryAsList.isEmpty() && !primaryAsList.get(0).active() && !primaryAsList.get(0).initializing()) {, +            List<ShardRouting> primaryList = ImmutableList.of();, +            return new PlainShardIterator(shardId, primaryList);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class IndexMetaData implements Diffable<IndexMetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +public class MetaData implements Iterable<IndexMetaData>, Diffable<MetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +        if (!primaryAsList.isEmpty() && !primaryAsList.get(0).active() && !primaryAsList.get(0).initializing()) {, +            List<ShardRouting> primaryList = ImmutableList.of();, +            return new PlainShardIterator(shardId, primaryList);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/Preference.java, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;, +public class IndexMetaData implements Diffable<IndexMetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java, +public class MetaData implements Iterable<IndexMetaData>, Diffable<MetaData> {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java, +        if (!primaryAsList.isEmpty() && !primaryAsList.get(0).active() && !primaryAsList.get(0).initializing()) {, +            List<ShardRouting> primaryList = ImmutableList.of();, +            return new PlainShardIterator(shardId, primaryList);, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/Preference.java, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/RestoreSource.java, +    public RestoreSource(SnapshotId snapshotId, String index) {, +++ b/core/licenses/groovy-all-2.4.0-indy.jar.sha1, +b8056886c1067b096c5ef05a024f1c5e9008e293, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import org.elasticsearch.common.xcontent.XContentParser;]