[+++ /dev/null, +++ /dev/null, +++ b/x-pack/docs/en/security/authentication/active-directory-realm.asciidoc, +=== Active Directory user authentication, +==== Load balancing and failover, +==== Active Directory realm settings, +==== Mapping Active Directory users and groups to roles, +==== User metadata in Active Directory realms, +==== Setting up SSL between Elasticsearch and Active Directory, +++ /dev/null, +++ b/x-pack/docs/en/security/authentication/active-directory-realm.asciidoc, +=== Active Directory user authentication, +==== Load balancing and failover, +==== Active Directory realm settings, +==== Mapping Active Directory users and groups to roles, +==== User metadata in Active Directory realms, +==== Setting up SSL between Elasticsearch and Active Directory, +++ b/x-pack/docs/en/security/authentication/built-in-users.asciidoc, +[[built-in-users]], +=== Built-in users, +, +{security} provides built-in user credentials to help you get up and running., +These users have a fixed set of privileges and cannot be authenticated until their, +passwords have been set. The `elastic` user can be used to, +<<set-built-in-user-passwords,set all of the built-in user passwords>>., +, +`elastic`:: A built-in _superuser_. See <<built-in-roles>>., +`kibana`:: The user Kibana uses to connect and communicate with Elasticsearch., +`logstash_system`:: The user Logstash uses when storing monitoring information in Elasticsearch., +`beats_system`:: The user the Beats use when storing monitoring information in Elasticsearch., +, +, +[float], +[[built-in-user-explanation]], +==== How the built-in users work, +These built-in users are stored within a special `.security` index managed by, +{security}., +This means that, if the password is changed, or a user is disabled, then that, +change is automatically reflected on each node in the cluster. It also means, +that if your `.security` index is deleted, or restored from a snapshot, then, +any changes you have applied will be lost., +, +Although they share the same API, the built-in users are separate and distinct, +from users managed by the <<native-realm, native realm>>. Disabling the native, +realm will not have any effect on the built-in users. The built-in users can, +be disabled individually, using the, +{ref}/security-api-users.html[user management API]., +, +[float], +[[bootstrap-elastic-passwords]], +==== The Elastic bootstrap password, +, +When you install {es}, if the `elastic` user does not already have a password,, +it uses a default bootstrap password. The bootstrap password is a transient, +password that enables you to run the tools that set all the built-in user passwords., +, +By default, the bootstrap password is derived from a randomized `keystore.seed`, +setting, which is added to the keystore during installation. You do not need, +to know or change this bootstrap password. If you have defined a, +`bootstrap.password` setting in the keystore, however, that value is used instead., +For more information about interacting with the keystore, see, +{ref}/secure-settings.html[Secure Settings]., +, +NOTE: After you <<set-built-in-user-passwords,set passwords for the built-in users>>,, +in particular for the `elastic` user, there is no further use for the bootstrap, +password., +, +[float], +[[set-built-in-user-passwords]], +==== Setting built-in user passwords, +, +You must set the passwords for all built-in users., +, +The +elasticsearch-setup-passwords+ tool is the simplest method to set the, +built-in users' passwords for the first time. It uses the `elastic` user's, +bootstrap password to run user management API requests. For example, you can run, +the command in an "interactive" mode, which prompts you to enter new passwords, +for the `elastic`, `kibana`, `logstash_system`, and `beats_system` users:, +, +[source,shell], +--------------------------------------------------, +bin/elasticsearch-setup-passwords interactive, +--------------------------------------------------, +, +For more information about the command options, see, +{ref}/setup-passwords.html[elasticsearch-setup-passwords]., +, +IMPORTANT: After you set a password for the `elastic` user, the bootstrap, +password is no longer valid; you cannot run the `elasticsearch-setup-passwords`, +command a second time., +, +Alternatively, you can set the initial passwords for the built-in users by using, +the *Management > Users* page in {kib} or the, +{ref}/security-api-change-password.html[Change Password API]. These methods are, +more complex. You must supply the `elastic` user and its bootstrap password to, +log into {kib} or run the API. This requirement means that you cannot use the, +default bootstrap password that is derived from the `keystore.seed` setting., +Instead, you must explicitly set a `bootstrap.password` setting in the keystore, +before you start {es}. For example, the following command prompts you to enter a, +new bootstrap password:]