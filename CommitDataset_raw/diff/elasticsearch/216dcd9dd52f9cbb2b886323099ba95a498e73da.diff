[+++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/Ec2Module.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.discovery.ec2.Ec2Discovery;, +, +    /**, +     * Check if discovery is meant to start, +     * @return true if we can start discovery features, +     */, +    public static boolean isEc2DiscoveryActive(Settings settings, ESLogger logger) {, +        // User set discovery.type: ec2, +        if (!Ec2Discovery.EC2.equalsIgnoreCase(settings.get("discovery.type"))) {, +            logger.trace("discovery.type not set to {}", Ec2Discovery.EC2);, +            return false;, +        }, +, +        return true;, +    }, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/Ec2Module.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.discovery.ec2.Ec2Discovery;, +, +    /**, +     * Check if discovery is meant to start, +     * @return true if we can start discovery features, +     */, +    public static boolean isEc2DiscoveryActive(Settings settings, ESLogger logger) {, +        // User set discovery.type: ec2, +        if (!Ec2Discovery.EC2.equalsIgnoreCase(settings.get("discovery.type"))) {, +            logger.trace("discovery.type not set to {}", Ec2Discovery.EC2);, +            return false;, +        }, +, +        return true;, +    }, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java, +    public static final String EC2 = "ec2";, +, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/Ec2Module.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.discovery.ec2.Ec2Discovery;, +, +    /**, +     * Check if discovery is meant to start, +     * @return true if we can start discovery features, +     */, +    public static boolean isEc2DiscoveryActive(Settings settings, ESLogger logger) {, +        // User set discovery.type: ec2, +        if (!Ec2Discovery.EC2.equalsIgnoreCase(settings.get("discovery.type"))) {, +            logger.trace("discovery.type not set to {}", Ec2Discovery.EC2);, +            return false;, +        }, +, +        return true;, +    }, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java, +    public static final String EC2 = "ec2";, +, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/plugin/discovery/ec2/Ec2DiscoveryPlugin.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.common.settings.Settings;, +    private final Settings settings;, +    protected final ESLogger logger = Loggers.getLogger(Ec2DiscoveryPlugin.class);, +, +    public Ec2DiscoveryPlugin(Settings settings) {, +        this.settings = settings;, +    }, +, +        if (Ec2Module.isEc2DiscoveryActive(settings, logger)) {, +}, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/Ec2Module.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.discovery.ec2.Ec2Discovery;, +, +    /**, +     * Check if discovery is meant to start, +     * @return true if we can start discovery features, +     */, +    public static boolean isEc2DiscoveryActive(Settings settings, ESLogger logger) {, +        // User set discovery.type: ec2, +        if (!Ec2Discovery.EC2.equalsIgnoreCase(settings.get("discovery.type"))) {, +            logger.trace("discovery.type not set to {}", Ec2Discovery.EC2);, +            return false;, +        }, +, +        return true;, +    }, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java, +    public static final String EC2 = "ec2";, +, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/plugin/discovery/ec2/Ec2DiscoveryPlugin.java, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.Loggers;, +import org.elasticsearch.common.settings.Settings;, +    private final Settings settings;, +    protected final ESLogger logger = Loggers.getLogger(Ec2DiscoveryPlugin.class);]