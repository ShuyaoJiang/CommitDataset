[+++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shards.IndicesShardStoresAction;, +import org.elasticsearch.action.admin.indices.shards.TransportIndicesShardStoresAction;, +        registerAction(IndicesShardStoresAction.INSTANCE, TransportIndicesShardStoresAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shards.IndicesShardStoresAction;, +import org.elasticsearch.action.admin.indices.shards.TransportIndicesShardStoresAction;, +        registerAction(IndicesShardStoresAction.INSTANCE, TransportIndicesShardStoresAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +            activePrimaryShards += indexHealth.getActivePrimaryShards();, +            activeShards += indexHealth.getActiveShards();, +            relocatingShards += indexHealth.getRelocatingShards();, +            initializingShards += indexHealth.getInitializingShards();, +            unassignedShards += indexHealth.getUnassignedShards();, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shards.IndicesShardStoresAction;, +import org.elasticsearch.action.admin.indices.shards.TransportIndicesShardStoresAction;, +        registerAction(IndicesShardStoresAction.INSTANCE, TransportIndicesShardStoresAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +            activePrimaryShards += indexHealth.getActivePrimaryShards();, +            activeShards += indexHealth.getActiveShards();, +            relocatingShards += indexHealth.getRelocatingShards();, +            initializingShards += indexHealth.getInitializingShards();, +            unassignedShards += indexHealth.getUnassignedShards();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthStatus.java, +, +    public static ClusterHealthStatus fromString(String status) {, +        if (status.equalsIgnoreCase("green")) {, +            return GREEN;, +        } else if (status.equalsIgnoreCase("yellow")) {, +            return YELLOW;, +        } else if (status.equalsIgnoreCase("red")) {, +            return RED;, +        } else {, +            throw new IllegalArgumentException("unknown cluster health status [" + status + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shards.IndicesShardStoresAction;, +import org.elasticsearch.action.admin.indices.shards.TransportIndicesShardStoresAction;, +        registerAction(IndicesShardStoresAction.INSTANCE, TransportIndicesShardStoresAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +            activePrimaryShards += indexHealth.getActivePrimaryShards();, +            activeShards += indexHealth.getActiveShards();, +            relocatingShards += indexHealth.getRelocatingShards();, +            initializingShards += indexHealth.getInitializingShards();, +            unassignedShards += indexHealth.getUnassignedShards();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthStatus.java, +, +    public static ClusterHealthStatus fromString(String status) {, +        if (status.equalsIgnoreCase("green")) {, +            return GREEN;, +        } else if (status.equalsIgnoreCase("yellow")) {, +            return YELLOW;, +        } else if (status.equalsIgnoreCase("red")) {, +            return RED;, +        } else {, +            throw new IllegalArgumentException("unknown cluster health status [" + status + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +    private int activeShards = 0;, +    private int relocatingShards = 0;, +    private int initializingShards = 0;, +    private int unassignedShards = 0;, +    private int activePrimaryShards = 0;, +    private ClusterHealthStatus status = ClusterHealthStatus.RED;, +    private final Map<Integer, ClusterShardHealth> shards = Maps.newHashMap();, +    private List<String> validationFailures;, +            int shardId = shardRoutingTable.shardId().id();, +            shards.put(shardId, new ClusterShardHealth(shardId, shardRoutingTable));, +            activeShards += shardHealth.getActiveShards();, +            relocatingShards += shardHealth.getRelocatingShards();, +            initializingShards += shardHealth.getInitializingShards();, +            unassignedShards += shardHealth.getUnassignedShards();, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.indices.shards.IndicesShardStoresAction;, +import org.elasticsearch.action.admin.indices.shards.TransportIndicesShardStoresAction;, +        registerAction(IndicesShardStoresAction.INSTANCE, TransportIndicesShardStoresAction.class);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java, +            activePrimaryShards += indexHealth.getActivePrimaryShards();, +            activeShards += indexHealth.getActiveShards();, +            relocatingShards += indexHealth.getRelocatingShards();, +            initializingShards += indexHealth.getInitializingShards();, +            unassignedShards += indexHealth.getUnassignedShards();, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthStatus.java, +, +    public static ClusterHealthStatus fromString(String status) {, +        if (status.equalsIgnoreCase("green")) {, +            return GREEN;, +        } else if (status.equalsIgnoreCase("yellow")) {, +            return YELLOW;, +        } else if (status.equalsIgnoreCase("red")) {, +            return RED;, +        } else {, +            throw new IllegalArgumentException("unknown cluster health status [" + status + "]");, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java, +    private int activeShards = 0;]