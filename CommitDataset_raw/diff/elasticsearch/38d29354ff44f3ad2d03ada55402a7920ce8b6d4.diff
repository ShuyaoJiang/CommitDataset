[+++ b/plugins/examples/rescore/src/main/java/org/elasticsearch/example/rescore/ExampleRescoreBuilder.java, +++ b/plugins/examples/rescore/src/main/java/org/elasticsearch/example/rescore/ExampleRescoreBuilder.java, +++ b/server/src/main/java/org/elasticsearch/search/dfs/DfsPhase.java, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.Query;, +import java.util.HashMap;, +import java.util.Map;, +            Map<Term, TermStatistics> stats = new HashMap<>();, +            IndexSearcher searcher = new IndexSearcher(context.searcher().getIndexReader()) {, +                @Override, +                public TermStatistics termStatistics(Term term, TermStates states) throws IOException {, +                    TermStatistics ts = super.termStatistics(term, states);, +                    if (ts != null) {, +                        stats.put(term, ts);, +                    return ts;, +                }, +, +                @Override, +                public CollectionStatistics collectionStatistics(String field) throws IOException {, +                    if (context.isCancelled()) {, +                        throw new TaskCancelledException("cancelled");, +                    }, +                    CollectionStatistics cs = super.collectionStatistics(field);, +                    if (cs != null) {, +                        fieldStatistics.put(field, cs);, +                    }, +                    return cs;, +                }, +            };, +, +            searcher.createWeight(context.searcher().rewrite(context.query()), ScoreMode.COMPLETE, 1);, +            for (RescoreContext rescoreContext : context.rescore()) {, +                for (Query query : rescoreContext.getQueries()) {, +                    searcher.createWeight(context.searcher().rewrite(query), ScoreMode.COMPLETE, 1);, +                }, +            }, +, +            Term[] terms = stats.keySet().toArray(new Term[0]);, +            TermStatistics[] termStatistics = new TermStatistics[terms.length];, +            for (int i = 0; i < terms.length; i++) {, +                termStatistics[i] = stats.get(terms[i]);, +++ b/plugins/examples/rescore/src/main/java/org/elasticsearch/example/rescore/ExampleRescoreBuilder.java, +++ b/server/src/main/java/org/elasticsearch/search/dfs/DfsPhase.java, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.Query;, +import java.util.HashMap;, +import java.util.Map;, +            Map<Term, TermStatistics> stats = new HashMap<>();, +            IndexSearcher searcher = new IndexSearcher(context.searcher().getIndexReader()) {, +                @Override, +                public TermStatistics termStatistics(Term term, TermStates states) throws IOException {, +                    TermStatistics ts = super.termStatistics(term, states);, +                    if (ts != null) {, +                        stats.put(term, ts);, +                    return ts;, +                }, +, +                @Override, +                public CollectionStatistics collectionStatistics(String field) throws IOException {, +                    if (context.isCancelled()) {, +                        throw new TaskCancelledException("cancelled");, +                    }, +                    CollectionStatistics cs = super.collectionStatistics(field);, +                    if (cs != null) {, +                        fieldStatistics.put(field, cs);, +                    }, +                    return cs;, +                }, +            };, +, +            searcher.createWeight(context.searcher().rewrite(context.query()), ScoreMode.COMPLETE, 1);, +            for (RescoreContext rescoreContext : context.rescore()) {, +                for (Query query : rescoreContext.getQueries()) {, +                    searcher.createWeight(context.searcher().rewrite(query), ScoreMode.COMPLETE, 1);, +                }, +            }, +, +            Term[] terms = stats.keySet().toArray(new Term[0]);, +            TermStatistics[] termStatistics = new TermStatistics[terms.length];, +            for (int i = 0; i < terms.length; i++) {, +                termStatistics[i] = stats.get(terms[i]);, +++ b/server/src/main/java/org/elasticsearch/search/rescore/QueryRescorer.java, +import java.util.Comparator;, +import java.util.List;, +import java.util.Set;, +, +        @Override, +        public List<Query> getQueries() {, +            return Collections.singletonList(query);, +        }, +, +++ b/plugins/examples/rescore/src/main/java/org/elasticsearch/example/rescore/ExampleRescoreBuilder.java, +++ b/server/src/main/java/org/elasticsearch/search/dfs/DfsPhase.java, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.Query;, +import java.util.HashMap;, +import java.util.Map;, +            Map<Term, TermStatistics> stats = new HashMap<>();, +            IndexSearcher searcher = new IndexSearcher(context.searcher().getIndexReader()) {, +                @Override]