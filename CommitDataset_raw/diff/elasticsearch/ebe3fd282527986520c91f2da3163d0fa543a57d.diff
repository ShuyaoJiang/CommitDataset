[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +        BuildPlugin.configureCompile(project), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +        BuildPlugin.configureCompile(project), +++ b/buildSrc/version.properties, +lucene            = 5.5.0-snapshot-1725675, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +        BuildPlugin.configureCompile(project), +++ b/buildSrc/version.properties, +lucene            = 5.5.0-snapshot-1725675, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        private Settings providedSettings = Settings.EMPTY;, +            this.providedSettings = settings;, +        private PluginsService newPluginService(final Settings settings) {, +            final Settings.Builder settingsBuilder = settingsBuilder(), +                .put(NettyTransport.PING_SCHEDULE, "5s") // enable by default the transport schedule ping interval, +                .put( InternalSettingsPreparer.prepareSettings(settings)), +                .put("network.server", false), +                .put("node.client", true), +                .put(CLIENT_TYPE_SETTING, CLIENT_TYPE);, +            return new PluginsService(settingsBuilder.build(), null, null, pluginClasses);, +        };, +, +            final PluginsService pluginsService = newPluginService(providedSettings);, +            final Settings settings = pluginsService.updatedSettings();, +                modules.add(new SettingsModule(settings, settingsFilter ));, +                modules.add(new NetworkModule(networkService, settings, true, namedWriteableRegistry));, +                modules.add(new ClusterNameModule(settings));, +                modules.add(new CircuitBreakerModule(settings));, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +        BuildPlugin.configureCompile(project), +++ b/buildSrc/version.properties, +lucene            = 5.5.0-snapshot-1725675, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        private Settings providedSettings = Settings.EMPTY;, +            this.providedSettings = settings;, +        private PluginsService newPluginService(final Settings settings) {, +            final Settings.Builder settingsBuilder = settingsBuilder(), +                .put(NettyTransport.PING_SCHEDULE, "5s") // enable by default the transport schedule ping interval, +                .put( InternalSettingsPreparer.prepareSettings(settings)), +                .put("network.server", false), +                .put("node.client", true), +                .put(CLIENT_TYPE_SETTING, CLIENT_TYPE);, +            return new PluginsService(settingsBuilder.build(), null, null, pluginClasses);, +        };, +, +            final PluginsService pluginsService = newPluginService(providedSettings);, +            final Settings settings = pluginsService.updatedSettings();, +                modules.add(new SettingsModule(settings, settingsFilter ));, +                modules.add(new NetworkModule(networkService, settings, true, namedWriteableRegistry));, +                modules.add(new ClusterNameModule(settings));, +                modules.add(new CircuitBreakerModule(settings));, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +            logger.debug("{} sending [{}] to [{}] for shard [{}]", shardRoutingEntry.getShardRouting().getId(), actionName, masterNode.getId(), shardRoutingEntry);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +        BuildPlugin.configureCompile(project), +++ b/buildSrc/version.properties, +lucene            = 5.5.0-snapshot-1725675, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        private Settings providedSettings = Settings.EMPTY;, +            this.providedSettings = settings;, +        private PluginsService newPluginService(final Settings settings) {, +            final Settings.Builder settingsBuilder = settingsBuilder(), +                .put(NettyTransport.PING_SCHEDULE, "5s") // enable by default the transport schedule ping interval, +                .put( InternalSettingsPreparer.prepareSettings(settings)), +                .put("network.server", false), +                .put("node.client", true), +                .put(CLIENT_TYPE_SETTING, CLIENT_TYPE);, +            return new PluginsService(settingsBuilder.build(), null, null, pluginClasses);, +        };, +, +            final PluginsService pluginsService = newPluginService(providedSettings);, +            final Settings settings = pluginsService.updatedSettings();, +                modules.add(new SettingsModule(settings, settingsFilter ));, +                modules.add(new NetworkModule(networkService, settings, true, namedWriteableRegistry));, +                modules.add(new ClusterNameModule(settings));, +                modules.add(new CircuitBreakerModule(settings));, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +            logger.debug("{} sending [{}] to [{}] for shard [{}]", shardRoutingEntry.getShardRouting().getId(), actionName, masterNode.getId(), shardRoutingEntry);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AutoExpandReplicas.java, +        // TODO change the following back to be final, https://github.com/elastic/elasticsearch/issues/16097, +        int min;, +        int max;, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/StandaloneTestPlugin.groovy, +        BuildPlugin.configureCompile(project), +++ b/buildSrc/version.properties]