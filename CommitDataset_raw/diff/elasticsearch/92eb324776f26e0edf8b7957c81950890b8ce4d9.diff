[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorRetryIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorRetryIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ClusterClientIT.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorRetryIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ClusterClientIT.java, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            DeleteResponse deleteResponse = execute(deleteRequest, highLevelClient()::delete, highLevelClient()::deleteAsync);, +            DeleteResponse deleteResponse = execute(deleteRequest, highLevelClient()::delete, highLevelClient()::deleteAsync);, +                () -> execute(deleteRequest, highLevelClient()::delete, highLevelClient()::deleteAsync));, +            DeleteResponse deleteResponse = execute(deleteRequest, highLevelClient()::delete, highLevelClient()::deleteAsync);, +                execute(deleteRequest, highLevelClient()::delete, highLevelClient()::deleteAsync);, +            DeleteResponse deleteResponse = execute(deleteRequest, highLevelClient()::delete, highLevelClient()::deleteAsync);, +            assertFalse(execute(getRequest, highLevelClient()::exists, highLevelClient()::existsAsync));, +            assertTrue(execute(getRequest, highLevelClient()::exists, highLevelClient()::existsAsync));, +            assertFalse(execute(getRequest, highLevelClient()::exists, highLevelClient()::existsAsync));, +            assertFalse(execute(getRequest, highLevelClient()::exists, highLevelClient()::existsAsync));, +                    () -> execute(getRequest, highLevelClient()::get, highLevelClient()::getAsync));, +                    () -> execute(getRequest, highLevelClient()::get, highLevelClient()::getAsync));, +            GetResponse getResponse = execute(getRequest, highLevelClient()::get, highLevelClient()::getAsync);, +            GetResponse getResponse = execute(getRequest, highLevelClient()::get, highLevelClient()::getAsync);, +            GetResponse getResponse = execute(getRequest, highLevelClient()::get, highLevelClient()::getAsync);, +            GetResponse getResponse = execute(getRequest, highLevelClient()::get, highLevelClient()::getAsync);, +            MultiGetResponse response = execute(multiGetRequest, highLevelClient()::multiGet, highLevelClient()::multiGetAsync);, +            MultiGetResponse response = execute(multiGetRequest, highLevelClient()::multiGet, highLevelClient()::multiGetAsync);, +            IndexResponse indexResponse = execute(indexRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +            IndexResponse indexResponse = execute(indexRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +            indexResponse = execute(indexRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +                execute(wrongRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +                execute(indexRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +            IndexResponse indexResponse = execute(indexRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +            IndexResponse indexResponse = execute(indexRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +                execute(indexRequest, highLevelClient()::index, highLevelClient()::indexAsync);, +                    execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync));, +                    execute(updateRequestConflict, highLevelClient()::update, highLevelClient()::updateAsync));, +            UpdateResponse updateResponse = execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync);, +            UpdateResponse updateResponse = execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync);, +            UpdateResponse updateResponse = execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync);, +            UpdateResponse updateResponse = execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync);, +            UpdateResponse updateResponse = execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync);, +            UpdateResponse updateResponse = execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync);, +                execute(updateRequest, highLevelClient()::update, highLevelClient()::updateAsync);, +        BulkResponse bulkResponse = execute(bulkRequest, highLevelClient()::bulk, highLevelClient()::bulkAsync);, +        try (BulkProcessor processor = BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener), +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java]