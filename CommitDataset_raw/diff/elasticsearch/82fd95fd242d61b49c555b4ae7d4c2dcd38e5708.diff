[+++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java, +            if (query instanceof FiltersFunctionScoreQuery) {, +            } else if (query instanceof FunctionScoreQuery) {, +                super.extract(((FunctionScoreQuery) query).getSubQuery(), boost, terms);, +            } else {, +}, +++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java, +            if (query instanceof FiltersFunctionScoreQuery) {, +            } else if (query instanceof FunctionScoreQuery) {, +                super.extract(((FunctionScoreQuery) query).getSubQuery(), boost, terms);, +            } else {, +}, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +import org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder;, +, +    public void testFunctionScoreQueryHighlight() throws Exception {, +        client().prepareIndex("test", "type", "1"), +            .setSource(jsonBuilder().startObject().field("text", "brown").endObject()), +            .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE), +            .get();, +, +        SearchResponse searchResponse = client().prepareSearch(), +            .setQuery(new FunctionScoreQueryBuilder(QueryBuilders.prefixQuery("text", "bro"))), +            .highlighter(new HighlightBuilder(), +                .field(new Field("text"))), +            .get();, +        assertHitCount(searchResponse, 1);, +        HighlightField field = searchResponse.getHits().getAt(0).highlightFields().get("text");, +        assertThat(field.getFragments().length, equalTo(1));, +        assertThat(field.getFragments()[0].string(), equalTo("<em>brown</em>"));, +    }, +++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java, +            if (query instanceof FiltersFunctionScoreQuery) {, +            } else if (query instanceof FunctionScoreQuery) {, +                super.extract(((FunctionScoreQuery) query).getSubQuery(), boost, terms);, +            } else {, +}, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +import org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder;, +, +    public void testFunctionScoreQueryHighlight() throws Exception {, +        client().prepareIndex("test", "type", "1"), +            .setSource(jsonBuilder().startObject().field("text", "brown").endObject()), +            .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE), +            .get();, +, +        SearchResponse searchResponse = client().prepareSearch(), +            .setQuery(new FunctionScoreQueryBuilder(QueryBuilders.prefixQuery("text", "bro"))), +            .highlighter(new HighlightBuilder(), +                .field(new Field("text"))), +            .get();, +        assertHitCount(searchResponse, 1);, +        HighlightField field = searchResponse.getHits().getAt(0).highlightFields().get("text");, +        assertThat(field.getFragments().length, equalTo(1));, +        assertThat(field.getFragments()[0].string(), equalTo("<em>brown</em>"));, +    }, +++ b/docs/plugins/analysis-icu.asciidoc, +++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java, +            if (query instanceof FiltersFunctionScoreQuery) {, +            } else if (query instanceof FunctionScoreQuery) {, +                super.extract(((FunctionScoreQuery) query).getSubQuery(), boost, terms);, +            } else {, +}, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +import org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder;, +, +    public void testFunctionScoreQueryHighlight() throws Exception {, +        client().prepareIndex("test", "type", "1"), +            .setSource(jsonBuilder().startObject().field("text", "brown").endObject()), +            .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE), +            .get();, +, +        SearchResponse searchResponse = client().prepareSearch(), +            .setQuery(new FunctionScoreQueryBuilder(QueryBuilders.prefixQuery("text", "bro"))), +            .highlighter(new HighlightBuilder(), +                .field(new Field("text"))), +            .get();, +        assertHitCount(searchResponse, 1);, +        HighlightField field = searchResponse.getHits().getAt(0).highlightFields().get("text");, +        assertThat(field.getFragments().length, equalTo(1));, +        assertThat(field.getFragments()[0].string(), equalTo("<em>brown</em>"));, +    }, +++ b/docs/plugins/analysis-icu.asciidoc, +++ b/docs/plugins/analysis-kuromoji.asciidoc, +++ b/core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java, +            if (query instanceof FiltersFunctionScoreQuery) {, +            } else if (query instanceof FunctionScoreQuery) {, +                super.extract(((FunctionScoreQuery) query).getSubQuery(), boost, terms);, +            } else {, +}, +++ b/core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java, +import org.elasticsearch.index.query.functionscore.FunctionScoreQueryBuilder;, +, +    public void testFunctionScoreQueryHighlight() throws Exception {, +        client().prepareIndex("test", "type", "1"), +            .setSource(jsonBuilder().startObject().field("text", "brown").endObject()), +            .setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE), +            .get();, +, +        SearchResponse searchResponse = client().prepareSearch()]