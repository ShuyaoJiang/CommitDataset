[+++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private static void addBooleanClauses(QueryShardContext context, BooleanQuery booleanQuery, List<QueryBuilder> clauses, Occur occurs) throws IOException {, +            Query luceneQuery = query.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private static void addBooleanClauses(QueryShardContext context, BooleanQuery booleanQuery, List<QueryBuilder> clauses, Occur occurs) throws IOException {, +            Query luceneQuery = query.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +                    // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                    if (query != EmptyQueryBuilder.PROTOTYPE) {, +                        if (parseContext.isFilter() && minimumShouldMatch == null) {, +                            minimumShouldMatch = "1";, +                        }, +                    }, +                        // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                        if (query != EmptyQueryBuilder.PROTOTYPE) {, +                            if (parseContext.isFilter() && minimumShouldMatch == null) {, +                                minimumShouldMatch = "1";, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private static void addBooleanClauses(QueryShardContext context, BooleanQuery booleanQuery, List<QueryBuilder> clauses, Occur occurs) throws IOException {, +            Query luceneQuery = query.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +                    // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                    if (query != EmptyQueryBuilder.PROTOTYPE) {, +                        if (parseContext.isFilter() && minimumShouldMatch == null) {, +                            minimumShouldMatch = "1";, +                        }, +                    }, +                        // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                        if (query != EmptyQueryBuilder.PROTOTYPE) {, +                            if (parseContext.isFilter() && minimumShouldMatch == null) {, +                                minimumShouldMatch = "1";, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +        Query innerFilter = filterBuilder.toQuery(context);, +        return new ConstantScoreQuery(filterBuilder.toQuery(context));, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private static void addBooleanClauses(QueryShardContext context, BooleanQuery booleanQuery, List<QueryBuilder> clauses, Occur occurs) throws IOException {, +            Query luceneQuery = query.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +                    // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                    if (query != EmptyQueryBuilder.PROTOTYPE) {, +                        if (parseContext.isFilter() && minimumShouldMatch == null) {, +                            minimumShouldMatch = "1";, +                        }, +                    }, +                        // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                        if (query != EmptyQueryBuilder.PROTOTYPE) {, +                            if (parseContext.isFilter() && minimumShouldMatch == null) {, +                                minimumShouldMatch = "1";, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +        Query innerFilter = filterBuilder.toQuery(context);, +        return new ConstantScoreQuery(filterBuilder.toQuery(context));, +++ b/core/src/main/java/org/elasticsearch/index/query/EmptyQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/AndQueryBuilder.java, +            Query innerQuery = f.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +    private static void addBooleanClauses(QueryShardContext context, BooleanQuery booleanQuery, List<QueryBuilder> clauses, Occur occurs) throws IOException {, +            Query luceneQuery = query.toQuery(context);, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryParser.java, +                    // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                    if (query != EmptyQueryBuilder.PROTOTYPE) {, +                        if (parseContext.isFilter() && minimumShouldMatch == null) {, +                            minimumShouldMatch = "1";, +                        }, +                    }, +                        // EmptyQueryBuilder does not add lucene query later, skip setting minuminShouldMatch, +                        if (query != EmptyQueryBuilder.PROTOTYPE) {, +                            if (parseContext.isFilter() && minimumShouldMatch == null) {, +                                minimumShouldMatch = "1";, +                            }, +                        }, +++ b/core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java, +        Query innerFilter = filterBuilder.toQuery(context);, +        return new ConstantScoreQuery(filterBuilder.toQuery(context));, +++ b/core/src/main/java/org/elasticsearch/index/query/EmptyQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/FQueryFilterBuilder.java, +        // inner query builder can potentially be `null`, in that case we ignore it, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java]