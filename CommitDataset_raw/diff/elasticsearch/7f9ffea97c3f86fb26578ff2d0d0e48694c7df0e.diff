[+++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +import org.elasticsearch.rest.action.admin.indices.upgrade.UpgradeTest;, +import org.elasticsearch.test.rest.client.http.HttpRequestBuilder;, +        Settings settings = ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true) // for _upgrade, +            .build();, +        loadIndex(index, settings);, +        assertUpgradeWorks();, +                .put("master.node", false), +                .put(InternalNode.HTTP_ENABLED, true) // for _upgrade, +                .build());, +    void assertUpgradeWorks() throws Exception {, +        HttpRequestBuilder httpClient = httpClient();, +, +        UpgradeTest.assertNotUpgraded(httpClient, "test");, +        UpgradeTest.runUpgrade(httpClient, "test", "wait_for_completion", "true");, +        UpgradeTest.assertUpgraded(httpClient, "test");, +    }, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +import org.elasticsearch.rest.action.admin.indices.upgrade.UpgradeTest;, +import org.elasticsearch.test.rest.client.http.HttpRequestBuilder;, +        Settings settings = ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true) // for _upgrade, +            .build();, +        loadIndex(index, settings);, +        assertUpgradeWorks();, +                .put("master.node", false), +                .put(InternalNode.HTTP_ENABLED, true) // for _upgrade, +                .build());, +    void assertUpgradeWorks() throws Exception {, +        HttpRequestBuilder httpClient = httpClient();, +, +        UpgradeTest.assertNotUpgraded(httpClient, "test");, +        UpgradeTest.runUpgrade(httpClient, "test", "wait_for_completion", "true");, +        UpgradeTest.assertUpgraded(httpClient, "test");, +    }, +++ b/src/test/java/org/elasticsearch/bwcompat/StaticIndexBackwardCompatibilityTest.java, +        assertTrue(nodes.length > 0);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.node.internal.InternalNode;, +import org.elasticsearch.rest.action.admin.indices.upgrade.UpgradeTest;, +import org.elasticsearch.test.rest.client.http.HttpRequestBuilder;, +        Settings settings = ImmutableSettings.builder(), +            .put(InternalNode.HTTP_ENABLED, true) // for _upgrade, +            .build();, +        loadIndex(index, settings);, +        assertUpgradeWorks();, +                .put("master.node", false), +                .put(InternalNode.HTTP_ENABLED, true) // for _upgrade, +                .build());, +    void assertUpgradeWorks() throws Exception {, +        HttpRequestBuilder httpClient = httpClient();, +, +        UpgradeTest.assertNotUpgraded(httpClient, "test");, +        UpgradeTest.runUpgrade(httpClient, "test", "wait_for_completion", "true");, +        UpgradeTest.assertUpgraded(httpClient, "test");, +    }, +++ b/src/test/java/org/elasticsearch/bwcompat/StaticIndexBackwardCompatibilityTest.java, +        assertTrue(nodes.length > 0);, +++ b/src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java, +    public static void assertNotUpgraded(HttpRequestBuilder httpClient, String index) throws Exception {, +    public static void assertUpgraded(HttpRequestBuilder httpClient, String index) throws Exception {, +    public static void runUpgrade(HttpRequestBuilder httpClient, String index, String... params) throws Exception {]