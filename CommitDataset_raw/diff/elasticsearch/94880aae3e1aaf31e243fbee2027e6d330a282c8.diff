[+++ b/pom.xml, +                                <exclude>**/*StandaloneTest*.class</exclude>, +++ b/pom.xml, +                                <exclude>**/*StandaloneTest*.class</exclude>, +++ b/src/test/java/org/elasticsearch/index/mapper/xcontent/MapperTestUtils.java, +    public static MapperService newMapperService(ThreadPool testingThreadPool) {, +                .build(), testingThreadPool);, +    public static MapperService newMapperService(Index index, Settings indexSettings, ThreadPool testingThreadPool) {, +                new IndicesFieldDataCache(ImmutableSettings.Builder.EMPTY_SETTINGS, new IndicesFieldDataCacheListener(circuitBreakerService), testingThreadPool),, +++ b/pom.xml, +                                <exclude>**/*StandaloneTest*.class</exclude>, +++ b/src/test/java/org/elasticsearch/index/mapper/xcontent/MapperTestUtils.java, +    public static MapperService newMapperService(ThreadPool testingThreadPool) {, +                .build(), testingThreadPool);, +    public static MapperService newMapperService(Index index, Settings indexSettings, ThreadPool testingThreadPool) {, +                new IndicesFieldDataCache(ImmutableSettings.Builder.EMPTY_SETTINGS, new IndicesFieldDataCacheListener(circuitBreakerService), testingThreadPool),, +++ b/src/test/java/org/elasticsearch/index/mapper/xcontent/MultifieldAttachmentMapperTests.java, +import org.elasticsearch.threadpool.ThreadPool;, +import org.junit.After;, +    private ThreadPool threadPool;, +, +    }, +, +    @After, +    public void cleanup() throws InterruptedException {, +        terminate(threadPool);, +        threadPool = new ThreadPool("testing-only");, +        MapperService mapperService = MapperTestUtils.newMapperService(threadPool);]