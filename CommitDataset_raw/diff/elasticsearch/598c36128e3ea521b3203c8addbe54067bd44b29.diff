[+++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ /dev/null, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +        try {, +        } catch (FileNotFoundException ok) {, +            // behaves like Files.deleteIfExists, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ /dev/null, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +        try {, +        } catch (FileNotFoundException ok) {, +            // behaves like Files.deleteIfExists, +        }, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ /dev/null, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +        try {, +        } catch (FileNotFoundException ok) {, +            // behaves like Files.deleteIfExists, +        }, +++ /dev/null, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ /dev/null, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +        try {, +        } catch (FileNotFoundException ok) {, +            // behaves like Files.deleteIfExists, +        }, +++ /dev/null, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ /dev/null, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +        try {, +        } catch (FileNotFoundException ok) {, +            // behaves like Files.deleteIfExists, +        }, +++ /dev/null, +++ b/plugins/repository-s3/src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +        Files.deleteIfExists(blobPath);, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +++ b/plugins/repository-azure/src/test/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceMock.java, +            if (keyPath != null) {, +            if (startsWithIgnoreCase(checkBlob, prefix)) {, +++ /dev/null, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +        try {, +        } catch (FileNotFoundException ok) {, +            // behaves like Files.deleteIfExists, +        }]