[+++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +    // NOCOMMIT loggers instead, I think - CL: what if the user wants to output to system.err/out like in an embedded app?, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +    // NOCOMMIT loggers instead, I think - CL: what if the user wants to output to system.err/out like in an embedded app?, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcDriver.java, +import java.io.PrintWriter;, +    private static final JdbcDriver INSTANCE = new JdbcDriver();, +, +        register();, +    public static JdbcDriver register() {, +        try {, +            DriverManager.registerDriver(INSTANCE, INSTANCE::close);, +        } catch (SQLException ex) {, +            // the SQLException is bogus as there's no source for it, +            PrintWriter writer = DriverManager.getLogWriter();, +            if (writer != null) {, +                ex.printStackTrace(writer);, +            }, +        }, +        return INSTANCE;, +    }, +, +    public static void deregister() {, +        try {, +            DriverManager.deregisterDriver(INSTANCE);, +        } catch (SQLException ex) {, +            // the SQLException is bogus as there's no source for it, +            PrintWriter writer = DriverManager.getLogWriter();, +            if (writer != null) {, +                ex.printStackTrace(writer);, +            }, +        }, +    }, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +    // NOCOMMIT loggers instead, I think - CL: what if the user wants to output to system.err/out like in an embedded app?, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcDriver.java, +import java.io.PrintWriter;, +    private static final JdbcDriver INSTANCE = new JdbcDriver();, +, +        register();, +    public static JdbcDriver register() {, +        try {, +            DriverManager.registerDriver(INSTANCE, INSTANCE::close);, +        } catch (SQLException ex) {, +            // the SQLException is bogus as there's no source for it, +            PrintWriter writer = DriverManager.getLogWriter();, +            if (writer != null) {, +                ex.printStackTrace(writer);, +            }, +        }, +        return INSTANCE;, +    }, +, +    public static void deregister() {, +        try {, +            DriverManager.deregisterDriver(INSTANCE);, +        } catch (SQLException ex) {, +            // the SQLException is bogus as there's no source for it, +            PrintWriter writer = DriverManager.getLogWriter();, +            if (writer != null) {, +                ex.printStackTrace(writer);, +            }, +        }, +    }, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcParameterMetaData.java, +import org.elasticsearch.xpack.sql.jdbc.jdbc.PreparedQuery.ParamInfo;, +, +        return JdbcUtils.classOf(paramInfo(param).type.getVendorTypeNumber()).getName();, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/debug/Debug.java, +    // NOCOMMIT loggers instead, I think - CL: what if the user wants to output to system.err/out like in an embedded app?, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcDriver.java, +import java.io.PrintWriter;, +    private static final JdbcDriver INSTANCE = new JdbcDriver();, +, +        register();, +    public static JdbcDriver register() {, +        try {, +            DriverManager.registerDriver(INSTANCE, INSTANCE::close);, +        } catch (SQLException ex) {, +            // the SQLException is bogus as there's no source for it, +            PrintWriter writer = DriverManager.getLogWriter();, +            if (writer != null) {, +                ex.printStackTrace(writer);, +            }, +        }, +        return INSTANCE;, +    }, +, +    public static void deregister() {, +        try {, +            DriverManager.deregisterDriver(INSTANCE);, +        } catch (SQLException ex) {, +            // the SQLException is bogus as there's no source for it, +            PrintWriter writer = DriverManager.getLogWriter();, +            if (writer != null) {, +                ex.printStackTrace(writer);, +            }, +        }, +    }, +++ b/sql/jdbc/src/main/java/org/elasticsearch/xpack/sql/jdbc/jdbc/JdbcParameterMetaData.java]