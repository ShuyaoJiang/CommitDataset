[+++ b/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +     * Returns the listed nodes in the transport client (ones added to it)., +     */, +    public ImmutableList<DiscoveryNode> listedNodes() {, +        return nodesService.listedNodes();, +    }, +, +    /**, +    public TransportClient addTransportAddress(TransportAddress... transportAddress) {, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +     * Returns the listed nodes in the transport client (ones added to it)., +     */, +    public ImmutableList<DiscoveryNode> listedNodes() {, +        return nodesService.listedNodes();, +    }, +, +    /**, +    public TransportClient addTransportAddress(TransportAddress... transportAddress) {, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import com.google.common.collect.Lists;, +import java.util.List;, +    public ImmutableList<DiscoveryNode> listedNodes() {, +        return this.listedNodes;, +    }, +, +    public TransportClientNodesService addTransportAddress(TransportAddress... transportAddresses) {, +            List<TransportAddress> filtered = Lists.newArrayListWithExpectedSize(transportAddresses.length);, +            for (TransportAddress transportAddress : transportAddresses) {, +                boolean found = false;, +                for (DiscoveryNode otherNode : listedNodes) {, +                    if (otherNode.address().equals(transportAddress)) {, +                        found = true;, +                        logger.debug("address [{}] already exists with [{}], ignoring...", transportAddress, otherNode);, +                        break;, +                    }, +                }, +                if (!found) {, +                    filtered.add(transportAddress);, +                }, +            }, +            if (filtered.isEmpty()) {, +                return this;, +            }, +            builder.addAll(listedNodes());, +            for (TransportAddress transportAddress : filtered) {, +                logger.debug("adding address [{}]", node);, +                builder.add(node);, +            }, +            listedNodes = builder.build();, +                    logger.debug("removing address [{}]", otherNode);, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +     * Returns the listed nodes in the transport client (ones added to it)., +     */, +    public ImmutableList<DiscoveryNode> listedNodes() {, +        return nodesService.listedNodes();, +    }, +, +    /**, +    public TransportClient addTransportAddress(TransportAddress... transportAddress) {, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import com.google.common.collect.Lists;, +import java.util.List;, +    public ImmutableList<DiscoveryNode> listedNodes() {, +        return this.listedNodes;, +    }, +, +    public TransportClientNodesService addTransportAddress(TransportAddress... transportAddresses) {, +            List<TransportAddress> filtered = Lists.newArrayListWithExpectedSize(transportAddresses.length);, +            for (TransportAddress transportAddress : transportAddresses) {, +                boolean found = false;, +                for (DiscoveryNode otherNode : listedNodes) {, +                    if (otherNode.address().equals(transportAddress)) {, +                        found = true;, +                        logger.debug("address [{}] already exists with [{}], ignoring...", transportAddress, otherNode);, +                        break;, +                    }, +                }, +                if (!found) {, +                    filtered.add(transportAddress);, +                }, +            }, +            if (filtered.isEmpty()) {, +                return this;, +            }, +            builder.addAll(listedNodes());, +            for (TransportAddress transportAddress : filtered) {, +                logger.debug("adding address [{}]", node);, +                builder.add(node);, +            }, +            listedNodes = builder.build();, +                    logger.debug("removing address [{}]", otherNode);, +++ b/src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +     * Returns the listed nodes in the transport client (ones added to it)., +     */, +    public ImmutableList<DiscoveryNode> listedNodes() {, +        return nodesService.listedNodes();, +    }, +, +    /**]