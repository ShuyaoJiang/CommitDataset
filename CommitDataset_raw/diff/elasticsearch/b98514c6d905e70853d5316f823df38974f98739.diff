[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.close.CloseIndexRequest;, +import org.elasticsearch.action.admin.indices.close.CloseIndexResponse;, +    public void deleteIndexAsync(DeleteIndexRequest deleteIndexRequest, ActionListener<DeleteIndexResponse> listener, Header... headers) {, +    public void createIndexAsync(CreateIndexRequest createIndexRequest, ActionListener<CreateIndexResponse> listener, Header... headers) {, +    /**, +     * Closes an index using the Close Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-open-close.html">, +     * Close Index API on elastic.co</a>, +     */, +    public CloseIndexResponse closeIndex(CloseIndexRequest closeIndexRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(closeIndexRequest, Request::closeIndex, CloseIndexResponse::fromXContent,, +                Collections.emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously closes an index using the Close Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-open-close.html">, +     * Close Index API on elastic.co</a>, +     */, +    public void closeIndexAsync(CloseIndexRequest closeIndexRequest, ActionListener<CloseIndexResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(closeIndexRequest, Request::closeIndex, CloseIndexResponse::fromXContent,, +                listener, Collections.emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.close.CloseIndexRequest;, +import org.elasticsearch.action.admin.indices.close.CloseIndexResponse;, +    public void deleteIndexAsync(DeleteIndexRequest deleteIndexRequest, ActionListener<DeleteIndexResponse> listener, Header... headers) {, +    public void createIndexAsync(CreateIndexRequest createIndexRequest, ActionListener<CreateIndexResponse> listener, Header... headers) {, +    /**, +     * Closes an index using the Close Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-open-close.html">, +     * Close Index API on elastic.co</a>, +     */, +    public CloseIndexResponse closeIndex(CloseIndexRequest closeIndexRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(closeIndexRequest, Request::closeIndex, CloseIndexResponse::fromXContent,, +                Collections.emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously closes an index using the Close Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-open-close.html">, +     * Close Index API on elastic.co</a>, +     */, +    public void closeIndexAsync(CloseIndexRequest closeIndexRequest, ActionListener<CloseIndexResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(closeIndexRequest, Request::closeIndex, CloseIndexResponse::fromXContent,, +                listener, Collections.emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.action.admin.indices.close.CloseIndexRequest;, +    static Request closeIndex(CloseIndexRequest closeIndexRequest) {, +        String endpoint = endpoint(closeIndexRequest.indices(), Strings.EMPTY_ARRAY, "_close");, +, +        Params parameters = Params.builder();, +, +        parameters.withTimeout(closeIndexRequest.timeout());, +        parameters.withMasterTimeout(closeIndexRequest.masterNodeTimeout());, +        parameters.withIndicesOptions(closeIndexRequest.indicesOptions());, +, +        return new Request(HttpPost.METHOD_NAME, endpoint, parameters.getParams(), null);, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +import org.elasticsearch.action.admin.indices.close.CloseIndexRequest;, +import org.elasticsearch.action.admin.indices.close.CloseIndexResponse;, +    public void deleteIndexAsync(DeleteIndexRequest deleteIndexRequest, ActionListener<DeleteIndexResponse> listener, Header... headers) {, +    public void createIndexAsync(CreateIndexRequest createIndexRequest, ActionListener<CreateIndexResponse> listener, Header... headers) {, +    /**, +     * Closes an index using the Close Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-open-close.html">, +     * Close Index API on elastic.co</a>, +     */, +    public CloseIndexResponse closeIndex(CloseIndexRequest closeIndexRequest, Header... headers) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(closeIndexRequest, Request::closeIndex, CloseIndexResponse::fromXContent,, +                Collections.emptySet(), headers);, +    }, +, +    /**, +     * Asynchronously closes an index using the Close Index API, +     * <p>, +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-open-close.html">, +     * Close Index API on elastic.co</a>, +     */, +    public void closeIndexAsync(CloseIndexRequest closeIndexRequest, ActionListener<CloseIndexResponse> listener, Header... headers) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(closeIndexRequest, Request::closeIndex, CloseIndexResponse::fromXContent,, +                listener, Collections.emptySet(), headers);, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +import org.elasticsearch.action.admin.indices.close.CloseIndexRequest;, +    static Request closeIndex(CloseIndexRequest closeIndexRequest) {, +        String endpoint = endpoint(closeIndexRequest.indices(), Strings.EMPTY_ARRAY, "_close");, +, +        Params parameters = Params.builder();, +, +        parameters.withTimeout(closeIndexRequest.timeout());]