[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.ObjectParser;, +    private static ObjectParser<ClusterAllocationExplainRequest, Void> PARSER = new ObjectParser("cluster/allocation/explain");, +    static {, +        PARSER.declareString(ClusterAllocationExplainRequest::setIndex, new ParseField("index"));, +        PARSER.declareInt(ClusterAllocationExplainRequest::setShard, new ParseField("shard"));, +        PARSER.declareBoolean(ClusterAllocationExplainRequest::setPrimary, new ParseField("primary"));, +    }, +, +    public Integer getShard() {, +    public Boolean isPrimary() {, +        ClusterAllocationExplainRequest req = PARSER.parse(parser, new ClusterAllocationExplainRequest());, +        Exception e = req.validate();, +        if (e != null) {, +            throw new ElasticsearchParseException("'index', 'shard', and 'primary' must be specified in allocation explain request", e);, +        return req;, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.ObjectParser;, +    private static ObjectParser<ClusterAllocationExplainRequest, Void> PARSER = new ObjectParser("cluster/allocation/explain");, +    static {, +        PARSER.declareString(ClusterAllocationExplainRequest::setIndex, new ParseField("index"));, +        PARSER.declareInt(ClusterAllocationExplainRequest::setShard, new ParseField("shard"));, +        PARSER.declareBoolean(ClusterAllocationExplainRequest::setPrimary, new ParseField("primary"));, +    }, +, +    public Integer getShard() {, +    public Boolean isPrimary() {, +        ClusterAllocationExplainRequest req = PARSER.parse(parser, new ClusterAllocationExplainRequest());, +        Exception e = req.validate();, +        if (e != null) {, +            throw new ElasticsearchParseException("'index', 'shard', and 'primary' must be specified in allocation explain request", e);, +        return req;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.startObject(nodeInfo.getNode().getId(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("name", nodeInfo.getNode().getName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("transport_address", nodeInfo.getNode().getAddress().toString());, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.ObjectParser;, +    private static ObjectParser<ClusterAllocationExplainRequest, Void> PARSER = new ObjectParser("cluster/allocation/explain");, +    static {, +        PARSER.declareString(ClusterAllocationExplainRequest::setIndex, new ParseField("index"));, +        PARSER.declareInt(ClusterAllocationExplainRequest::setShard, new ParseField("shard"));, +        PARSER.declareBoolean(ClusterAllocationExplainRequest::setPrimary, new ParseField("primary"));, +    }, +, +    public Integer getShard() {, +    public Boolean isPrimary() {, +        ClusterAllocationExplainRequest req = PARSER.parse(parser, new ClusterAllocationExplainRequest());, +        Exception e = req.validate();, +        if (e != null) {, +            throw new ElasticsearchParseException("'index', 'shard', and 'primary' must be specified in allocation explain request", e);, +        return req;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.startObject(nodeInfo.getNode().getId(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("name", nodeInfo.getNode().getName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("transport_address", nodeInfo.getNode().getAddress().toString());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +            builder.field("name", getNode().getName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("transport_address", getNode().getAddress().toString(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.ObjectParser;, +    private static ObjectParser<ClusterAllocationExplainRequest, Void> PARSER = new ObjectParser("cluster/allocation/explain");, +    static {, +        PARSER.declareString(ClusterAllocationExplainRequest::setIndex, new ParseField("index"));, +        PARSER.declareInt(ClusterAllocationExplainRequest::setShard, new ParseField("shard"));, +        PARSER.declareBoolean(ClusterAllocationExplainRequest::setPrimary, new ParseField("primary"));, +    }, +, +    public Integer getShard() {, +    public Boolean isPrimary() {, +        ClusterAllocationExplainRequest req = PARSER.parse(parser, new ClusterAllocationExplainRequest());, +        Exception e = req.validate();, +        if (e != null) {, +            throw new ElasticsearchParseException("'index', 'shard', and 'primary' must be specified in allocation explain request", e);, +        return req;, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java, +            builder.startObject(nodeInfo.getNode().getId(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("name", nodeInfo.getNode().getName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("transport_address", nodeInfo.getNode().getAddress().toString());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java, +            builder.field("name", getNode().getName(), XContentBuilder.FieldCaseConversion.NONE);, +            builder.field("transport_address", getNode().getAddress().toString(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsResponse.java, +            builder.startObject(nodeStats.getNode().getId(), XContentBuilder.FieldCaseConversion.NONE);, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.ObjectParser;, +    private static ObjectParser<ClusterAllocationExplainRequest, Void> PARSER = new ObjectParser("cluster/allocation/explain");, +    static {, +        PARSER.declareString(ClusterAllocationExplainRequest::setIndex, new ParseField("index"));]