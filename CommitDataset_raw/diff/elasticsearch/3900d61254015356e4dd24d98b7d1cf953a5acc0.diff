[+++ b/src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class IndexAliasesServiceTests extends ElasticsearchSingleNodeTest {, +    public IndexAliasesService newIndexAliasesService() {, +        IndexService indexService = createIndex("test", settings);, +        return indexService.aliasesService();, +++ b/src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class IndexAliasesServiceTests extends ElasticsearchSingleNodeTest {, +    public IndexAliasesService newIndexAliasesService() {, +        IndexService indexService = createIndex("test", settings);, +        return indexService.aliasesService();, +++ b/src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +import org.junit.Before;, +public class IndexQueryParserFilterCachingTests extends ElasticsearchSingleNodeTest {, +    private Injector injector;, +    private IndexQueryParserService queryParser;, +    @Before, +    public void setup() throws IOException {, +        injector = createIndex("test", settings).injector();, +++ b/src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class IndexAliasesServiceTests extends ElasticsearchSingleNodeTest {, +    public IndexAliasesService newIndexAliasesService() {, +        IndexService indexService = createIndex("test", settings);, +        return indexService.aliasesService();, +++ b/src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +import org.junit.Before;, +public class IndexQueryParserFilterCachingTests extends ElasticsearchSingleNodeTest {, +    private Injector injector;, +    private IndexQueryParserService queryParser;, +    @Before, +    public void setup() throws IOException {, +        injector = createIndex("test", settings).injector();, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +import org.junit.Before;, +public class SimpleIndexQueryParserTests extends ElasticsearchSingleNodeTest {, +    private Injector injector;, +    private IndexQueryParserService queryParser;, +    @Before, +    public void setup() throws IOException {, +        injector = createIndex("test", settings).injector();, +++ b/src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class IndexAliasesServiceTests extends ElasticsearchSingleNodeTest {, +    public IndexAliasesService newIndexAliasesService() {, +        IndexService indexService = createIndex("test", settings);, +        return indexService.aliasesService();, +++ b/src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +import org.junit.Before;, +public class IndexQueryParserFilterCachingTests extends ElasticsearchSingleNodeTest {, +    private Injector injector;, +    private IndexQueryParserService queryParser;, +    @Before, +    public void setup() throws IOException {, +        injector = createIndex("test", settings).injector();, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +import org.junit.Before;, +public class SimpleIndexQueryParserTests extends ElasticsearchSingleNodeTest {, +    private Injector injector;, +    private IndexQueryParserService queryParser;, +    @Before, +    public void setup() throws IOException {, +        injector = createIndex("test", settings).injector();, +++ b/src/test/java/org/elasticsearch/index/similarity/SimilarityTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class SimilarityTests extends ElasticsearchSingleNodeTest {, +        SimilarityLookupService similarityLookupService = createIndex("foo").similarityService().similarityLookupService();, +        SimilarityService similarityService = createIndex("foo", indexSettings).similarityService();, +        SimilarityService similarityService = createIndex("foo", indexSettings).similarityService();, +        SimilarityService similarityService = createIndex("foo", indexSettings).similarityService();, +        SimilarityService similarityService = createIndex("foo", indexSettings).similarityService();, +        SimilarityService similarityService = createIndex("foo", indexSettings).similarityService();, +        SimilarityService similarityService = createIndex("foo", indexSettings).similarityService();, +++ b/src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class IndexAliasesServiceTests extends ElasticsearchSingleNodeTest {, +    public IndexAliasesService newIndexAliasesService() {, +        IndexService indexService = createIndex("test", settings);, +        return indexService.aliasesService();, +++ b/src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +import org.junit.Before;, +public class IndexQueryParserFilterCachingTests extends ElasticsearchSingleNodeTest {, +    private Injector injector;, +    private IndexQueryParserService queryParser;, +    @Before, +    public void setup() throws IOException {, +        injector = createIndex("test", settings).injector();, +++ b/src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java]