[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +                        "DEU");                                  // <2>, +            qb.relation(ShapeRelation.WITHIN)                            // <3>, +                .indexedShapeIndex("shapes")                             // <4>, +                .indexedShapePath("location");                           // <5>, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +                        "DEU");                                  // <2>, +            qb.relation(ShapeRelation.WITHIN)                            // <3>, +                .indexedShapeIndex("shapes")                             // <4>, +                .indexedShapePath("location");                           // <5>, +++ b/docs/java-api/query-dsl/geo-shape-query.asciidoc, +<3> relation, +<4> Name of the index where the pre-indexed shape is. Defaults to 'shapes'., +<5> The field specified as path containing the pre-indexed shape. Defaults to 'shape'., +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +                        "DEU");                                  // <2>, +            qb.relation(ShapeRelation.WITHIN)                            // <3>, +                .indexedShapeIndex("shapes")                             // <4>, +                .indexedShapePath("location");                           // <5>, +++ b/docs/java-api/query-dsl/geo-shape-query.asciidoc, +<3> relation, +<4> Name of the index where the pre-indexed shape is. Defaults to 'shapes'., +<5> The field specified as path containing the pre-indexed shape. Defaults to 'shape'., +++ b/docs/java-api/query-dsl/ids-query.asciidoc, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +                        "DEU");                                  // <2>, +            qb.relation(ShapeRelation.WITHIN)                            // <3>, +                .indexedShapeIndex("shapes")                             // <4>, +                .indexedShapePath("location");                           // <5>, +++ b/docs/java-api/query-dsl/geo-shape-query.asciidoc, +<3> relation, +<4> Name of the index where the pre-indexed shape is. Defaults to 'shapes'., +<5> The field specified as path containing the pre-indexed shape. Defaults to 'shape'., +++ b/docs/java-api/query-dsl/ids-query.asciidoc, +++ b/docs/reference/query-dsl/geo-shape-query.asciidoc, +another index. This is particularly useful for when, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +                        "DEU");                                  // <2>, +            qb.relation(ShapeRelation.WITHIN)                            // <3>, +                .indexedShapeIndex("shapes")                             // <4>, +                .indexedShapePath("location");                           // <5>, +++ b/docs/java-api/query-dsl/geo-shape-query.asciidoc, +<3> relation, +<4> Name of the index where the pre-indexed shape is. Defaults to 'shapes'., +<5> The field specified as path containing the pre-indexed shape. Defaults to 'shape'., +++ b/docs/java-api/query-dsl/ids-query.asciidoc, +++ b/docs/reference/query-dsl/geo-shape-query.asciidoc, +another index. This is particularly useful for when, +++ b/docs/reference/query-dsl/ids-query.asciidoc, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));, +            deleteByQueryRequest.setQuery(new IdsQueryBuilder().addIds("2", "3"));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java, +                        "DEU");                                  // <2>, +            qb.relation(ShapeRelation.WITHIN)                            // <3>, +                .indexedShapeIndex("shapes")                             // <4>, +                .indexedShapePath("location");                           // <5>, +++ b/docs/java-api/query-dsl/geo-shape-query.asciidoc, +<3> relation, +<4> Name of the index where the pre-indexed shape is. Defaults to 'shapes'., +<5> The field specified as path containing the pre-indexed shape. Defaults to 'shape'., +++ b/docs/java-api/query-dsl/ids-query.asciidoc, +++ b/docs/reference/query-dsl/geo-shape-query.asciidoc, +another index. This is particularly useful for when, +++ b/docs/reference/query-dsl/ids-query.asciidoc, +++ b/docs/reference/query-dsl/mlt-query.asciidoc, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            updateByQueryRequest.setQuery(new IdsQueryBuilder().addIds("1"));]