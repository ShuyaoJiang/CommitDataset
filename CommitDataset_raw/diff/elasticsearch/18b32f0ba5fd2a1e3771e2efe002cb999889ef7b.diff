[+++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.QueryWrapperFilter;, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), reader, flatQueries, boost);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), reader, flatQueries);, +    , +    void flatten(Filter sourceFilter, IndexReader reader, Collection<Query> flatQueries) throws IOException {, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +        if (sourceFilter instanceof QueryWrapperFilter) {, +            flatten(((QueryWrapperFilter) sourceFilter).getQuery(), reader, flatQueries, 1.0F);, +        }, +    }, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.QueryWrapperFilter;, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), reader, flatQueries, boost);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), reader, flatQueries);, +    , +    void flatten(Filter sourceFilter, IndexReader reader, Collection<Query> flatQueries) throws IOException {, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +        if (sourceFilter instanceof QueryWrapperFilter) {, +            flatten(((QueryWrapperFilter) sourceFilter).getQuery(), reader, flatQueries, 1.0F);, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchCorruptionException.java, +        super(ex);, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.QueryWrapperFilter;, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), reader, flatQueries, boost);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), reader, flatQueries);, +    , +    void flatten(Filter sourceFilter, IndexReader reader, Collection<Query> flatQueries) throws IOException {, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +        if (sourceFilter instanceof QueryWrapperFilter) {, +            flatten(((QueryWrapperFilter) sourceFilter).getQuery(), reader, flatQueries, 1.0F);, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchCorruptionException.java, +        super(ex);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public ElasticsearchException(Throwable cause) {, +        super(cause);, +    }, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.QueryWrapperFilter;, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), reader, flatQueries, boost);, +            flatten(((FilteredQuery) sourceQuery).getFilter(), reader, flatQueries);, +    , +    void flatten(Filter sourceFilter, IndexReader reader, Collection<Query> flatQueries) throws IOException {, +        Boolean highlight = highlightFilters.get();, +        if (highlight == null || highlight.equals(Boolean.FALSE)) {, +            return;, +        }, +        if (sourceFilter instanceof QueryWrapperFilter) {, +            flatten(((QueryWrapperFilter) sourceFilter).getQuery(), reader, flatQueries, 1.0F);, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchCorruptionException.java, +        super(ex);, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +    public ElasticsearchException(Throwable cause) {, +        super(cause);, +    }, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchTimeoutException.java, +    public ElasticsearchTimeoutException(Throwable cause) {, +        super(cause);, +    }, +, +        super(message, args);, +++ /dev/null, +++ b/core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.QueryWrapperFilter;, +        } else if (sourceQuery instanceof FilteredQuery) {, +            flatten(((FilteredQuery) sourceQuery).getQuery(), reader, flatQueries, boost);]