[+++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Class.forName("org.apache.log4j.Logger");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Class.forName("org.apache.log4j.Logger");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.ElasticsearchException;, +            final Class<? extends HashFunction> hashFunctionClass;, +            try {, +                hashFunctionClass = Class.forName(hashFunction).asSubclass(HashFunction.class);, +            } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                throw new ElasticsearchException("failed to load custom hash function [" + hashFunction + "]", e);, +            }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Class.forName("org.apache.log4j.Logger");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.ElasticsearchException;, +            final Class<? extends HashFunction> hashFunctionClass;, +            try {, +                hashFunctionClass = Class.forName(hashFunction).asSubclass(HashFunction.class);, +            } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                throw new ElasticsearchException("failed to load custom hash function [" + hashFunction + "]", e);, +            }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.ElasticsearchException;, +                    try {, +                        pre20HashFunction = Class.forName(pre20HashFunctionName).asSubclass(HashFunction.class);, +                    } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                        throw new ElasticsearchException("failed to load custom hash function [" + pre20HashFunctionName + "]", e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Class.forName("org.apache.log4j.Logger");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.ElasticsearchException;, +            final Class<? extends HashFunction> hashFunctionClass;, +            try {, +                hashFunctionClass = Class.forName(hashFunction).asSubclass(HashFunction.class);, +            } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                throw new ElasticsearchException("failed to load custom hash function [" + hashFunction + "]", e);, +            }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.ElasticsearchException;, +                    try {, +                        pre20HashFunction = Class.forName(pre20HashFunctionName).asSubclass(HashFunction.class);, +                    } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                        throw new ElasticsearchException("failed to load custom hash function [" + pre20HashFunctionName + "]", e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/Classes.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Class.forName("org.apache.log4j.Logger");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.ElasticsearchException;, +            final Class<? extends HashFunction> hashFunctionClass;, +            try {, +                hashFunctionClass = Class.forName(hashFunction).asSubclass(HashFunction.class);, +            } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                throw new ElasticsearchException("failed to load custom hash function [" + hashFunction + "]", e);, +            }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.ElasticsearchException;, +                    try {, +                        pre20HashFunction = Class.forName(pre20HashFunctionName).asSubclass(HashFunction.class);, +                    } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                        throw new ElasticsearchException("failed to load custom hash function [" + pre20HashFunctionName + "]", e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/Classes.java, +++ b/core/src/main/java/org/elasticsearch/common/geo/ShapesAvailability.java, +            Class.forName("com.spatial4j.core.shape.impl.PointImpl");, +            Class.forName("com.vividsolutions.jts.geom.GeometryFactory");, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Class.forName("org.apache.log4j.Logger");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.ElasticsearchException;, +            final Class<? extends HashFunction> hashFunctionClass;, +            try {, +                hashFunctionClass = Class.forName(hashFunction).asSubclass(HashFunction.class);, +            } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                throw new ElasticsearchException("failed to load custom hash function [" + hashFunction + "]", e);, +            }, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexUpgradeService.java, +import org.elasticsearch.ElasticsearchException;, +                    try {, +                        pre20HashFunction = Class.forName(pre20HashFunctionName).asSubclass(HashFunction.class);, +                    } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                        throw new ElasticsearchException("failed to load custom hash function [" + pre20HashFunctionName + "]", e);, +                    }, +++ b/core/src/main/java/org/elasticsearch/common/Classes.java, +++ b/core/src/main/java/org/elasticsearch/common/geo/ShapesAvailability.java, +            Class.forName("com.spatial4j.core.shape.impl.PointImpl");, +            Class.forName("com.vividsolutions.jts.geom.GeometryFactory");, +++ b/core/src/main/java/org/elasticsearch/common/inject/Modules.java, +++ b/core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            Class.forName("org.apache.log4j.Logger");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java, +import org.elasticsearch.ElasticsearchException;, +            final Class<? extends HashFunction> hashFunctionClass;, +            try {, +                hashFunctionClass = Class.forName(hashFunction).asSubclass(HashFunction.class);, +            } catch (ClassNotFoundException|NoClassDefFoundError e) {, +                throw new ElasticsearchException("failed to load custom hash function [" + hashFunction + "]", e);, +            }]