[+++ b/src/main/java/org/elasticsearch/alerts/AlertingModule.java, +import org.elasticsearch.alerts.client.AlertsClientInterface;, +import org.elasticsearch.alerts.transport.actions.delete.TransportDeleteAlertAction;, +import org.elasticsearch.alerts.transport.actions.get.TransportGetAlertAction;, +import org.elasticsearch.alerts.transport.actions.index.TransportIndexAlertAction;, +import org.elasticsearch.alerts.transport.actions.stats.TransportAlertStatsAction;, +        // Core components, +, +        // Transport and client layer, +        bind(TransportIndexAlertAction.class).asEagerSingleton();, +        bind(TransportDeleteAlertAction.class).asEagerSingleton();, +        bind(TransportGetAlertAction.class).asEagerSingleton();, +        bind(TransportAlertStatsAction.class).asEagerSingleton();, +        bind(AlertsClientInterface.class).to(AlertsClient.class).asEagerSingleton();, +, +        // Rest layer, +++ b/src/main/java/org/elasticsearch/alerts/AlertingModule.java, +import org.elasticsearch.alerts.client.AlertsClientInterface;, +import org.elasticsearch.alerts.transport.actions.delete.TransportDeleteAlertAction;, +import org.elasticsearch.alerts.transport.actions.get.TransportGetAlertAction;, +import org.elasticsearch.alerts.transport.actions.index.TransportIndexAlertAction;, +import org.elasticsearch.alerts.transport.actions.stats.TransportAlertStatsAction;, +        // Core components, +, +        // Transport and client layer, +        bind(TransportIndexAlertAction.class).asEagerSingleton();, +        bind(TransportDeleteAlertAction.class).asEagerSingleton();, +        bind(TransportGetAlertAction.class).asEagerSingleton();, +        bind(TransportAlertStatsAction.class).asEagerSingleton();, +        bind(AlertsClientInterface.class).to(AlertsClient.class).asEagerSingleton();, +, +        // Rest layer, +++ b/src/main/java/org/elasticsearch/alerts/client/AlertsClient.java, +import org.elasticsearch.alerts.transport.actions.index.*;, +import org.elasticsearch.common.collect.ImmutableMap;, +    private final ImmutableMap<GenericAction, TransportAction> internalActions;, +    public AlertsClient(ThreadPool threadPool, Headers headers, TransportIndexAlertAction transportIndexAlertAction,, +                        TransportGetAlertAction transportGetAlertAction, TransportDeleteAlertAction transportDeleteAlertAction,, +                        TransportAlertStatsAction transportAlertStatsAction) {, +        internalActions = ImmutableMap.<GenericAction, TransportAction>builder(), +                .put(IndexAlertAction.INSTANCE, transportIndexAlertAction), +                .put(GetAlertAction.INSTANCE, transportGetAlertAction), +                .put(DeleteAlertAction.INSTANCE, transportDeleteAlertAction), +                .put(AlertsStatsAction.INSTANCE, transportAlertStatsAction), +                .build();, +++ b/src/main/java/org/elasticsearch/alerts/AlertingModule.java, +import org.elasticsearch.alerts.client.AlertsClientInterface;, +import org.elasticsearch.alerts.transport.actions.delete.TransportDeleteAlertAction;, +import org.elasticsearch.alerts.transport.actions.get.TransportGetAlertAction;, +import org.elasticsearch.alerts.transport.actions.index.TransportIndexAlertAction;, +import org.elasticsearch.alerts.transport.actions.stats.TransportAlertStatsAction;, +        // Core components, +, +        // Transport and client layer, +        bind(TransportIndexAlertAction.class).asEagerSingleton();, +        bind(TransportDeleteAlertAction.class).asEagerSingleton();, +        bind(TransportGetAlertAction.class).asEagerSingleton();, +        bind(TransportAlertStatsAction.class).asEagerSingleton();, +        bind(AlertsClientInterface.class).to(AlertsClient.class).asEagerSingleton();, +, +        // Rest layer, +++ b/src/main/java/org/elasticsearch/alerts/client/AlertsClient.java, +import org.elasticsearch.alerts.transport.actions.index.*;, +import org.elasticsearch.common.collect.ImmutableMap;, +    private final ImmutableMap<GenericAction, TransportAction> internalActions;, +    public AlertsClient(ThreadPool threadPool, Headers headers, TransportIndexAlertAction transportIndexAlertAction,, +                        TransportGetAlertAction transportGetAlertAction, TransportDeleteAlertAction transportDeleteAlertAction,, +                        TransportAlertStatsAction transportAlertStatsAction) {, +        internalActions = ImmutableMap.<GenericAction, TransportAction>builder(), +                .put(IndexAlertAction.INSTANCE, transportIndexAlertAction), +                .put(GetAlertAction.INSTANCE, transportGetAlertAction), +                .put(DeleteAlertAction.INSTANCE, transportDeleteAlertAction), +                .put(AlertsStatsAction.INSTANCE, transportAlertStatsAction), +                .build();, +++ b/src/main/java/org/elasticsearch/alerts/client/AlertsClientAction.java, +import org.elasticsearch.action.Action;, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.ActionRequestBuilder;, +import org.elasticsearch.action.ActionResponse;, + * Base alert action class., +public abstract class AlertsClientAction<Request extends ActionRequest, Response extends ActionResponse, RequestBuilder extends ActionRequestBuilder<Request, Response, RequestBuilder, AlertsClientInterface>> extends Action<Request, Response, RequestBuilder, AlertsClientInterface> {, +++ b/src/main/java/org/elasticsearch/alerts/AlertingModule.java, +import org.elasticsearch.alerts.client.AlertsClientInterface;, +import org.elasticsearch.alerts.transport.actions.delete.TransportDeleteAlertAction;, +import org.elasticsearch.alerts.transport.actions.get.TransportGetAlertAction;, +import org.elasticsearch.alerts.transport.actions.index.TransportIndexAlertAction;, +import org.elasticsearch.alerts.transport.actions.stats.TransportAlertStatsAction;, +        // Core components, +, +        // Transport and client layer, +        bind(TransportIndexAlertAction.class).asEagerSingleton();, +        bind(TransportDeleteAlertAction.class).asEagerSingleton();, +        bind(TransportGetAlertAction.class).asEagerSingleton();, +        bind(TransportAlertStatsAction.class).asEagerSingleton();, +        bind(AlertsClientInterface.class).to(AlertsClient.class).asEagerSingleton();, +, +        // Rest layer, +++ b/src/main/java/org/elasticsearch/alerts/client/AlertsClient.java, +import org.elasticsearch.alerts.transport.actions.index.*;, +import org.elasticsearch.common.collect.ImmutableMap;]