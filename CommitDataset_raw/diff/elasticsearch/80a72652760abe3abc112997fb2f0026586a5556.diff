[+++ b/CONTRIBUTING.md, +IntelliJ users can automatically configure their IDE: `gradle idea`, +++ b/CONTRIBUTING.md, +IntelliJ users can automatically configure their IDE: `gradle idea`, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, false, transportService, clusterService, threadPool, actionFilters,, +            indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/CONTRIBUTING.md, +IntelliJ users can automatically configure their IDE: `gradle idea`, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, false, transportService, clusterService, threadPool, actionFilters,, +            indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, false, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/CONTRIBUTING.md, +IntelliJ users can automatically configure their IDE: `gradle idea`, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, false, transportService, clusterService, threadPool, actionFilters,, +            indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, false, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService,, +                                     ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver,, +                                     Supplier<Request> request) {, +        this(settings, actionName, true, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +    }, +, +    protected HandledTransportAction(Settings settings, String actionName, boolean canTripCircuitBreaker, ThreadPool threadPool,, +                                     TransportService transportService, ActionFilters actionFilters,, +                                     IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, false, canTripCircuitBreaker,, +            new TransportHandler());, +++ b/CONTRIBUTING.md, +IntelliJ users can automatically configure their IDE: `gradle idea`, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, false, transportService, clusterService, threadPool, actionFilters,, +            indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, false, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService,, +                                     ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver,, +                                     Supplier<Request> request) {, +        this(settings, actionName, true, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +    }, +, +    protected HandledTransportAction(Settings settings, String actionName, boolean canTripCircuitBreaker, ThreadPool threadPool,, +                                     TransportService transportService, ActionFilters actionFilters,, +                                     IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, false, canTripCircuitBreaker,, +            new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        this(settings, actionName, true, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, request);, +    }, +, +    protected TransportMasterNodeAction(Settings settings, String actionName, boolean canTripCircuitBreaker,, +                                        TransportService transportService, ClusterService clusterService, ThreadPool threadPool,, +                                        ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver,, +                                        Supplier<Request> request) {, +        super(settings, actionName, canTripCircuitBreaker, threadPool, transportService, actionFilters, indexNameExpressionResolver,, +            request);, +++ b/CONTRIBUTING.md, +IntelliJ users can automatically configure their IDE: `gradle idea`, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +        super(settings, ClusterHealthAction.NAME, false, transportService, clusterService, threadPool, actionFilters,, +            indexNameExpressionResolver, ClusterHealthRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        super(settings, ClusterStateAction.NAME, false, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterStateRequest::new);, +++ b/core/src/main/java/org/elasticsearch/action/support/HandledTransportAction.java, +    protected HandledTransportAction(Settings settings, String actionName, ThreadPool threadPool, TransportService transportService,, +                                     ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver,, +                                     Supplier<Request> request) {, +        this(settings, actionName, true, threadPool, transportService, actionFilters, indexNameExpressionResolver, request);, +    }, +, +    protected HandledTransportAction(Settings settings, String actionName, boolean canTripCircuitBreaker, ThreadPool threadPool,, +                                     TransportService transportService, ActionFilters actionFilters,, +                                     IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        transportService.registerRequestHandler(actionName, request, ThreadPool.Names.SAME, false, canTripCircuitBreaker,, +            new TransportHandler());, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeAction.java, +        this(settings, actionName, true, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, request);, +    }, +, +    protected TransportMasterNodeAction(Settings settings, String actionName, boolean canTripCircuitBreaker,, +                                        TransportService transportService, ClusterService clusterService, ThreadPool threadPool,, +                                        ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver,, +                                        Supplier<Request> request) {, +        super(settings, actionName, canTripCircuitBreaker, threadPool, transportService, actionFilters, indexNameExpressionResolver,, +            request);, +++ b/core/src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeReadAction.java, +        this(settings, actionName, true, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver,request);, +    }, +, +    protected TransportMasterNodeReadAction(Settings settings, String actionName, boolean checkSizeLimit, TransportService transportService,, +                                            ClusterService clusterService, ThreadPool threadPool, ActionFilters actionFilters,, +                                            IndexNameExpressionResolver indexNameExpressionResolver, Supplier<Request> request) {, +        super(settings, actionName, checkSizeLimit, transportService, clusterService, threadPool, actionFilters,, +            indexNameExpressionResolver,request);]