[+++ b/docs/en/security/getting-started.asciidoc, +            text!, +++ b/docs/en/security/getting-started.asciidoc, +            text!, +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes with the procedures below helps to, +reduce risk from network-based attacks., +++ b/docs/en/security/getting-started.asciidoc, +            text!, +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes with the procedures below helps to, +reduce risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +The TCP transport profiles also allow for enabling SSL on a per profile basis., +This is useful if you have a secured network for the node-to-node communication,, +but the client is on an unsecured network. To enable SSL on a client profile when, +SSL is disabled for node-to-node communication, add the following to, +`elasticsearch.yml`:, +, +[source, yaml], +--------------------------------------------------, +transport.profiles.client.xpack.security.ssl.enabled: true <1>, +--------------------------------------------------, +<1> This enables SSL on the client profile. The default value for this setting, +    is the value of `xpack.security.transport.ssl.enabled`., +, +++ b/docs/en/security/getting-started.asciidoc, +            text!, +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes with the procedures below helps to, +reduce risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +The TCP transport profiles also allow for enabling SSL on a per profile basis., +This is useful if you have a secured network for the node-to-node communication,, +but the client is on an unsecured network. To enable SSL on a client profile when, +SSL is disabled for node-to-node communication, add the following to, +`elasticsearch.yml`:, +, +[source, yaml], +--------------------------------------------------, +transport.profiles.client.xpack.security.ssl.enabled: true <1>, +--------------------------------------------------, +<1> This enables SSL on the client profile. The default value for this setting, +    is the value of `xpack.security.transport.ssl.enabled`., +, +++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +including passwords., +++ b/docs/en/security/getting-started.asciidoc, +            text!, +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes with the procedures below helps to, +reduce risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +The TCP transport profiles also allow for enabling SSL on a per profile basis., +This is useful if you have a secured network for the node-to-node communication,, +but the client is on an unsecured network. To enable SSL on a client profile when, +SSL is disabled for node-to-node communication, add the following to, +`elasticsearch.yml`:, +, +[source, yaml], +--------------------------------------------------, +transport.profiles.client.xpack.security.ssl.enabled: true <1>, +--------------------------------------------------, +<1> This enables SSL on the client profile. The default value for this setting, +    is the value of `xpack.security.transport.ssl.enabled`., +, +++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +including passwords., +++ b/docs/en/settings/security-settings.asciidoc, +As an example, lets look at the enabled setting. For the default transport, +this is `xpack.security.transport.ssl.enabled`. In order to use this setting in a, +append the portion of the setting after `xpack.security.transport.`. For the enabled, +setting, this would be `transport.profiles.$PROFILE.xpack.security.ssl.enabled`., +++ b/docs/en/security/getting-started.asciidoc, +            text!, +++ b/docs/en/security/securing-communications.asciidoc, +files storing the data. Securing your nodes with the procedures below helps to, +reduce risk from network-based attacks., +++ b/docs/en/security/securing-communications/separating-node-client-traffic.asciidoc, +The TCP transport profiles also allow for enabling SSL on a per profile basis., +This is useful if you have a secured network for the node-to-node communication,, +but the client is on an unsecured network. To enable SSL on a client profile when, +SSL is disabled for node-to-node communication, add the following to, +`elasticsearch.yml`:, +, +[source, yaml], +--------------------------------------------------, +transport.profiles.client.xpack.security.ssl.enabled: true <1>, +--------------------------------------------------, +<1> This enables SSL on the client profile. The default value for this setting, +    is the value of `xpack.security.transport.ssl.enabled`., +, +++ b/docs/en/security/securing-communications/setting-up-ssl.asciidoc, +including passwords., +++ b/docs/en/settings/security-settings.asciidoc, +As an example, lets look at the enabled setting. For the default transport, +this is `xpack.security.transport.ssl.enabled`. In order to use this setting in a, +append the portion of the setting after `xpack.security.transport.`. For the enabled, +setting, this would be `transport.profiles.$PROFILE.xpack.security.ssl.enabled`., +++ b/plugin/build.gradle]