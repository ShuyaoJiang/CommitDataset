[+++ b/src/main/java/org/elasticsearch/search/suggest/phrase/StupidBackoffScorer.java, +        SuggestUtils.join(separator, spare, w_1.term, word.term);, +            SuggestUtils.join(separator, spare, w_1.term, w.term);, +            final int count = frequency(spare);, +            if (count < 1) {, +                return discount * scoreUnigram(w);, +            }, +            return discount * (count / (w_1.frequency + 0.00000000001d));, +++ b/src/main/java/org/elasticsearch/search/suggest/phrase/StupidBackoffScorer.java, +        SuggestUtils.join(separator, spare, w_1.term, word.term);, +            SuggestUtils.join(separator, spare, w_1.term, w.term);, +            final int count = frequency(spare);, +            if (count < 1) {, +                return discount * scoreUnigram(w);, +            }, +            return discount * (count / (w_1.frequency + 0.00000000001d));, +++ b/src/test/java/org/elasticsearch/test/integration/search/suggest/SuggestSearchTests.java, +                .size(1)), +        assertThat(search.getSuggest().getSuggestion("simple_phrase").getEntries().get(0).getOptions().size(), equalTo(1));, +                .smoothingModel(new PhraseSuggestionBuilder.StupidBackoff(0.1))]