[+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequest.java, +import org.elasticsearch.action.support.IndicesOptions;, +public class UpdateByQueryRequest extends AbstractBulkIndexByScrollRequest<UpdateByQueryRequest> implements IndicesRequest.Replaceable {, +    //update by query updates all documents that match a query. The indices and indices options that affect how, +    //indices are resolved depend entirely on the inner search request. That's why the following methods delegate to it., +    public IndicesRequest indices(String... indices) {, +        getSearchRequest().indices(indices);, +        return this;, +, +    @Override, +    public String[] indices() {, +        assert getSearchRequest() != null;, +        return getSearchRequest().indices();, +    }, +, +    @Override, +    public IndicesOptions indicesOptions() {, +        assert getSearchRequest() != null;, +        return getSearchRequest().indicesOptions();, +    }, +++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/UpdateByQueryRequest.java, +import org.elasticsearch.action.support.IndicesOptions;, +public class UpdateByQueryRequest extends AbstractBulkIndexByScrollRequest<UpdateByQueryRequest> implements IndicesRequest.Replaceable {, +    //update by query updates all documents that match a query. The indices and indices options that affect how, +    //indices are resolved depend entirely on the inner search request. That's why the following methods delegate to it., +    public IndicesRequest indices(String... indices) {, +        getSearchRequest().indices(indices);, +        return this;, +, +    @Override, +    public String[] indices() {, +        assert getSearchRequest() != null;, +        return getSearchRequest().indices();, +    }, +, +    @Override, +    public IndicesOptions indicesOptions() {, +        assert getSearchRequest() != null;, +        return getSearchRequest().indicesOptions();, +    }, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryRequestTests.java, +import org.elasticsearch.action.support.IndicesOptions;, +    public void testUpdateByQueryRequestImplementsIndicesRequestReplaceable() {, +, +        SearchRequest searchRequest = new SearchRequest(indices);, +        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());, +        searchRequest.indicesOptions(indicesOptions);, +, +        UpdateByQueryRequest request = new UpdateByQueryRequest(searchRequest);, +            assertEquals(indices[i], request.indices()[i]);, +, +        assertSame(indicesOptions, request.indicesOptions());, +        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());, +, +        int numNewIndices = between(1, 100);, +        String[] newIndices = new String[numNewIndices];, +        for (int i = 0; i < numNewIndices; i++) {, +            newIndices[i] = randomSimpleString(random(), 1, 30);, +        }, +        request.indices(newIndices);, +        for (int i = 0; i < numNewIndices; i++) {;, +            assertEquals(newIndices[i], request.indices()[i]);, +        }, +        for (int i = 0; i < numNewIndices; i++) {;, +            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);, +        }]