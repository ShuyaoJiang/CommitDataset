[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +, +        logger.debug("Serving cluster state request using version {}", currentState.version());, +, +        builder.version(currentState.version());, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +, +        logger.debug("Serving cluster state request using version {}", currentState.version());, +, +        builder.version(currentState.version());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                    logger.debug("Expecting {} mapping created responses for other nodes", counter - 1);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +, +        logger.debug("Serving cluster state request using version {}", currentState.version());, +, +        builder.version(currentState.version());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                    logger.debug("Expecting {} mapping created responses for other nodes", counter - 1);, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +        logger.info("Cleaning up after test.");, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +, +        logger.debug("Serving cluster state request using version {}", currentState.version());, +, +        builder.version(currentState.version());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                    logger.debug("Expecting {} mapping created responses for other nodes", counter - 1);, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +        logger.info("Cleaning up after test.");, +++ b/src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java, +        // This is important. The test assumes all nodes are aware of all indices. Due to initializing shard throttling, +        // not all shards are allocated with the initial create index. Wait for it.., +        ensureYellow();, +]