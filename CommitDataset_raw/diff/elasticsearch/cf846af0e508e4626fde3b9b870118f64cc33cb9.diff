[+++ b/core/src/main/java/org/elasticsearch/action/OriginalIndices.java, +import java.util.Arrays;, +, +    @Override, +    public String toString() {, +        return "OriginalIndices{" +, +            "indices=" + Arrays.toString(indices) +, +            ", indicesOptions=" + indicesOptions +, +            '}';, +    }, +++ b/core/src/main/java/org/elasticsearch/action/OriginalIndices.java, +import java.util.Arrays;, +, +    @Override, +    public String toString() {, +        return "OriginalIndices{" +, +            "indices=" + Arrays.toString(indices) +, +            ", indicesOptions=" + indicesOptions +, +            '}';, +    }, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +import java.util.Objects;, +            indices = in.readStringArray();, +            indicesOptions = IndicesOptions.readIndicesOptions(in);, +            out.writeStringArray(indices);, +            indicesOptions.writeIndicesOptions(out);, +        this.indices = Objects.requireNonNull(indices, "indices must not be null");, +        this.indicesOptions = Objects.requireNonNull(indicesOptions, "indices options must not be null");, +++ b/core/src/main/java/org/elasticsearch/action/OriginalIndices.java, +import java.util.Arrays;, +, +    @Override, +    public String toString() {, +        return "OriginalIndices{" +, +            "indices=" + Arrays.toString(indices) +, +            ", indicesOptions=" + indicesOptions +, +            '}';, +    }, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +import java.util.Objects;, +            indices = in.readStringArray();, +            indicesOptions = IndicesOptions.readIndicesOptions(in);, +            out.writeStringArray(indices);, +            indicesOptions.writeIndicesOptions(out);, +        this.indices = Objects.requireNonNull(indices, "indices must not be null");, +        this.indicesOptions = Objects.requireNonNull(indicesOptions, "indices options must not be null");, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java, +import org.elasticsearch.common.Strings;, +        final String[] concreteIndices;, +        if (remoteClusterIndices.isEmpty() == false && localIndices.indices().length == 0) {, +            // in the case we have one or more remote indices but no local we don't expand to all local indices and just do remote, +            // indices, +            concreteIndices = Strings.EMPTY_ARRAY;, +        } else {, +            concreteIndices = indexNameExpressionResolver.concreteIndexNames(clusterState, localIndices);, +        }, +++ b/core/src/main/java/org/elasticsearch/action/OriginalIndices.java, +import java.util.Arrays;, +, +    @Override, +    public String toString() {, +        return "OriginalIndices{" +, +            "indices=" + Arrays.toString(indices) +, +            ", indicesOptions=" + indicesOptions +, +            '}';, +    }, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java, +import java.util.Objects;, +            indices = in.readStringArray();, +            indicesOptions = IndicesOptions.readIndicesOptions(in);, +            out.writeStringArray(indices);, +            indicesOptions.writeIndicesOptions(out);, +        this.indices = Objects.requireNonNull(indices, "indices must not be null");, +        this.indicesOptions = Objects.requireNonNull(indicesOptions, "indices options must not be null");, +++ b/core/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java, +import org.elasticsearch.common.Strings;, +        final String[] concreteIndices;, +        if (remoteClusterIndices.isEmpty() == false && localIndices.indices().length == 0) {, +            // in the case we have one or more remote indices but no local we don't expand to all local indices and just do remote, +            // indices, +            concreteIndices = Strings.EMPTY_ARRAY;, +        } else {, +            concreteIndices = indexNameExpressionResolver.concreteIndexNames(clusterState, localIndices);, +        }, +++ b/core/src/test/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequestTests.java, +import org.elasticsearch.action.support.IndicesOptions;, +, +        size = randomIntBetween(0, 20);, +        String[] randomIndices = new String[size];, +        for (int i = 0; i < size; i++) {, +            randomIndices[i] = randomAlphaOfLengthBetween(5, 10);, +        }, +        request.indices(randomIndices);, +        if (randomBoolean()) {, +            request.indicesOptions(randomBoolean() ? IndicesOptions.strictExpand() : IndicesOptions.lenientExpandOpen());, +        }, +    public void testEqualsAndHashcode() {, +        FieldCapabilitiesRequest request = new FieldCapabilitiesRequest();, +        request.indices("foo");, +        request.indicesOptions(IndicesOptions.lenientExpandOpen());]