[+++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +public interface DocumentRequest<T> extends IndicesRequest {, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +public interface DocumentRequest<T> extends IndicesRequest {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +    public TransportClusterHealthAction(Settings settings, TransportService transportService, ClusterService clusterService,, +                                        ThreadPool threadPool, ClusterName clusterName, ActionFilters actionFilters,, +                                        IndexNameExpressionResolver indexNameExpressionResolver, GatewayAllocator gatewayAllocator) {, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest.class);, +                indexNameExpressionResolver.concreteIndices(clusterState, IndicesOptions.strictExpand(), request.indices());, +            concreteIndices = indexNameExpressionResolver.concreteIndices(clusterState, request);, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +public interface DocumentRequest<T> extends IndicesRequest {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +    public TransportClusterHealthAction(Settings settings, TransportService transportService, ClusterService clusterService,, +                                        ThreadPool threadPool, ClusterName clusterName, ActionFilters actionFilters,, +                                        IndexNameExpressionResolver indexNameExpressionResolver, GatewayAllocator gatewayAllocator) {, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest.class);, +                indexNameExpressionResolver.concreteIndices(clusterState, IndicesOptions.strictExpand(), request.indices());, +            concreteIndices = indexNameExpressionResolver.concreteIndices(clusterState, request);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                          ClusterService clusterService, TransportService transportService,, +                                          ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +                indexNameExpressionResolver, NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +public interface DocumentRequest<T> extends IndicesRequest {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +    public TransportClusterHealthAction(Settings settings, TransportService transportService, ClusterService clusterService,, +                                        ThreadPool threadPool, ClusterName clusterName, ActionFilters actionFilters,, +                                        IndexNameExpressionResolver indexNameExpressionResolver, GatewayAllocator gatewayAllocator) {, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest.class);, +                indexNameExpressionResolver.concreteIndices(clusterState, IndicesOptions.strictExpand(), request.indices());, +            concreteIndices = indexNameExpressionResolver.concreteIndices(clusterState, request);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                          ClusterService clusterService, TransportService transportService,, +                                          ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +                indexNameExpressionResolver, NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                    NodeService nodeService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +                indexNameExpressionResolver, NodesInfoRequest.class, NodeInfoRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +public interface DocumentRequest<T> extends IndicesRequest {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +    public TransportClusterHealthAction(Settings settings, TransportService transportService, ClusterService clusterService,, +                                        ThreadPool threadPool, ClusterName clusterName, ActionFilters actionFilters,, +                                        IndexNameExpressionResolver indexNameExpressionResolver, GatewayAllocator gatewayAllocator) {, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest.class);, +                indexNameExpressionResolver.concreteIndices(clusterState, IndicesOptions.strictExpand(), request.indices());, +            concreteIndices = indexNameExpressionResolver.concreteIndices(clusterState, request);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                          ClusterService clusterService, TransportService transportService,, +                                          ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +                indexNameExpressionResolver, NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                    NodeService nodeService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +                indexNameExpressionResolver, NodesInfoRequest.class, NodeInfoRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                     NodeService nodeService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +        super(settings, NodesStatsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters, indexNameExpressionResolver,, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +public interface DocumentRequest<T> extends IndicesRequest {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +    public TransportClusterHealthAction(Settings settings, TransportService transportService, ClusterService clusterService,, +                                        ThreadPool threadPool, ClusterName clusterName, ActionFilters actionFilters,, +                                        IndexNameExpressionResolver indexNameExpressionResolver, GatewayAllocator gatewayAllocator) {, +        super(settings, ClusterHealthAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, ClusterHealthRequest.class);, +                indexNameExpressionResolver.concreteIndices(clusterState, IndicesOptions.strictExpand(), request.indices());, +            concreteIndices = indexNameExpressionResolver.concreteIndices(clusterState, request);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                          ClusterService clusterService, TransportService transportService,, +                                          ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +                indexNameExpressionResolver, NodesHotThreadsRequest.class, NodeRequest.class, ThreadPool.Names.GENERIC);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                    NodeService nodeService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +                indexNameExpressionResolver, NodesInfoRequest.class, NodeInfoRequest.class, ThreadPool.Names.MANAGEMENT);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                     NodeService nodeService, ActionFilters actionFilters, IndexNameExpressionResolver indexNameExpressionResolver) {, +        super(settings, NodesStatsAction.NAME, clusterName, threadPool, clusterService, transportService, actionFilters, indexNameExpressionResolver,, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/TransportDeleteRepositoryAction.java, +import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;, +                                           RepositoriesService repositoriesService, ThreadPool threadPool, ActionFilters actionFilters,, +                                           IndexNameExpressionResolver indexNameExpressionResolver) {, +        super(settings, DeleteRepositoryAction.NAME, transportService, clusterService, threadPool, actionFilters, indexNameExpressionResolver, DeleteRepositoryRequest.class);, +++ b/core/src/main/java/org/elasticsearch/action/DocumentRequest.java, +public interface DocumentRequest<T> extends IndicesRequest {, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java]