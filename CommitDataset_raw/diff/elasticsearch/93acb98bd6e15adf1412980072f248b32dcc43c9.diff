[+++ b/core/src/main/java/org/elasticsearch/common/io/stream/NotSerializableExceptionWrapper.java, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.rest.RestStatus;, +    private final RestStatus status;, +        this.status = ExceptionsHelper.status(other);, +        status = RestStatus.readFrom(in);, +        RestStatus.writeTo(out, status);, +, +    @Override, +    public RestStatus status() {, +        return status;, +    }, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/NotSerializableExceptionWrapper.java, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.rest.RestStatus;, +    private final RestStatus status;, +        this.status = ExceptionsHelper.status(other);, +        status = RestStatus.readFrom(in);, +        RestStatus.writeTo(out, status);, +, +    @Override, +    public RestStatus status() {, +        return status;, +    }, +++ b/core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java, +import org.elasticsearch.rest.RestStatus;, +        RestStatus status = randomFrom(RestStatus.values());, +        ElasticsearchException serialize = serialize((ElasticsearchException) new UnknownHeaderException("msg", status, new Tuple("foo", new String[]{"foo", "bar"})));, +        assertTrue(serialize instanceof NotSerializableExceptionWrapper);, +        NotSerializableExceptionWrapper e = (NotSerializableExceptionWrapper) serialize;, +        assertEquals("msg", e.getMessage());, +        assertEquals(2, e.getHeaders().get("foo").size());, +        assertEquals("foo", e.getHeaders().get("foo").get(0));, +        assertEquals("bar", e.getHeaders().get("foo").get(1));, +        assertSame(status, e.status());, +, +        private final RestStatus status;, +, +        public UnknownHeaderException(String msg, RestStatus status, Tuple<String, String[]>... headers) {, +            this.status = status;, +        }, +, +        @Override, +        public RestStatus status() {, +            return status;]