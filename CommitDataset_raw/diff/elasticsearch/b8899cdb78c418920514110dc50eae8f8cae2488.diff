[+++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContent.java, +    public final static String JSON_ALLOW_UNQUOTED_FIELD_NAMES = "elasticsearch.json.allow_unquoted_field_names";, +    public final static boolean unquotedFieldNamesSet;, +        // TODO: Remove the system property configuration for this in Elasticsearch 6.0.0, +        String jsonUnquoteProp = System.getProperty(JSON_ALLOW_UNQUOTED_FIELD_NAMES);, +        if (jsonUnquoteProp == null) {, +            unquotedFieldNamesSet = false;, +        } else {, +            unquotedFieldNamesSet = true;, +            switch (jsonUnquoteProp) {, +                case "true":, +                    jsonFactory.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);, +                    break;, +                case "false":, +                    jsonFactory.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, false);, +                    break;, +                default:, +                    throw new IllegalArgumentException("invalid value for [" + JSON_ALLOW_UNQUOTED_FIELD_NAMES + "]: " + jsonUnquoteProp);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContent.java, +    public final static String JSON_ALLOW_UNQUOTED_FIELD_NAMES = "elasticsearch.json.allow_unquoted_field_names";, +    public final static boolean unquotedFieldNamesSet;, +        // TODO: Remove the system property configuration for this in Elasticsearch 6.0.0, +        String jsonUnquoteProp = System.getProperty(JSON_ALLOW_UNQUOTED_FIELD_NAMES);, +        if (jsonUnquoteProp == null) {, +            unquotedFieldNamesSet = false;, +        } else {, +            unquotedFieldNamesSet = true;, +            switch (jsonUnquoteProp) {, +                case "true":, +                    jsonFactory.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);, +                    break;, +                case "false":, +                    jsonFactory.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, false);, +                    break;, +                default:, +                    throw new IllegalArgumentException("invalid value for [" + JSON_ALLOW_UNQUOTED_FIELD_NAMES + "]: " + jsonUnquoteProp);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.xcontent.json.JsonXContent;, +        // TODO: Remove this in Elasticsearch 6.0.0, +        if (JsonXContent.unquotedFieldNamesSet) {, +            DeprecationLogger dLogger = new DeprecationLogger(logger);, +            dLogger.deprecated("[{}] has been set, but will be removed in Elasticsearch 6.0.0",, +                    JsonXContent.JSON_ALLOW_UNQUOTED_FIELD_NAMES);, +        }, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContent.java, +    public final static String JSON_ALLOW_UNQUOTED_FIELD_NAMES = "elasticsearch.json.allow_unquoted_field_names";, +    public final static boolean unquotedFieldNamesSet;, +        // TODO: Remove the system property configuration for this in Elasticsearch 6.0.0, +        String jsonUnquoteProp = System.getProperty(JSON_ALLOW_UNQUOTED_FIELD_NAMES);, +        if (jsonUnquoteProp == null) {, +            unquotedFieldNamesSet = false;, +        } else {, +            unquotedFieldNamesSet = true;, +            switch (jsonUnquoteProp) {, +                case "true":, +                    jsonFactory.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);, +                    break;, +                case "false":, +                    jsonFactory.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, false);, +                    break;, +                default:, +                    throw new IllegalArgumentException("invalid value for [" + JSON_ALLOW_UNQUOTED_FIELD_NAMES + "]: " + jsonUnquoteProp);, +            }, +        }, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.common.xcontent.json.JsonXContent;, +        // TODO: Remove this in Elasticsearch 6.0.0, +        if (JsonXContent.unquotedFieldNamesSet) {, +            DeprecationLogger dLogger = new DeprecationLogger(logger);, +            dLogger.deprecated("[{}] has been set, but will be removed in Elasticsearch 6.0.0",, +                    JsonXContent.JSON_ALLOW_UNQUOTED_FIELD_NAMES);, +        }, +++ b/distribution/src/main/resources/config/jvm.options, +, +# Elasticsearch 5.0.0 will throw an exception on unquoted field names in JSON., +# If documents were already indexed with unquoted fields in a previous version, +# of Elasticsearch, some operations may throw errors., +#, +# WARNING: This option will be removed in Elasticsearch 6.0.0 and is provided, +# only for migration purposes., +#-Delasticsearch.json.allow_unquoted_field_names=true, +++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContent.java, +    public final static String JSON_ALLOW_UNQUOTED_FIELD_NAMES = "elasticsearch.json.allow_unquoted_field_names";, +    public final static boolean unquotedFieldNamesSet;, +        // TODO: Remove the system property configuration for this in Elasticsearch 6.0.0, +        String jsonUnquoteProp = System.getProperty(JSON_ALLOW_UNQUOTED_FIELD_NAMES);, +        if (jsonUnquoteProp == null) {, +            unquotedFieldNamesSet = false;, +        } else {, +            unquotedFieldNamesSet = true;, +            switch (jsonUnquoteProp) {, +                case "true":, +                    jsonFactory.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);, +                    break;]