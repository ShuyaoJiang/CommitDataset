[+++ b/docs/build.gradle, +    setting 'script.stored', 'true', +    Closure configFile = {, +      extraConfigFile it, "src/test/cluster/config/$it", +    }, +    configFile 'scripts/my_script.js', +    configFile 'scripts/my_script.py', +    configFile 'userdict_ja.txt', +    configFile 'KeywordTokenizer.rbbi', +  }, +}, +, +// Build the cluser with all plugins, +project.rootProject.subprojects.findAll { it.parent.path == ':plugins' }.each { subproj ->, +  /* Skip repositories. We just aren't going to be able to test them so it, +   * doesn't make sense to waste time installing them. */, +  if (subproj.path.startsWith(':plugins:repository-')) {, +    return, +  }, +  integTest {, +    cluster {, +      // We need a non-decorated project object, so we lookup the project by path, +      plugin subproj.name, project(subproj.path), +    }, +++ b/docs/build.gradle, +    setting 'script.stored', 'true', +    Closure configFile = {, +      extraConfigFile it, "src/test/cluster/config/$it", +    }, +    configFile 'scripts/my_script.js', +    configFile 'scripts/my_script.py', +    configFile 'userdict_ja.txt', +    configFile 'KeywordTokenizer.rbbi', +  }, +}, +, +// Build the cluser with all plugins, +project.rootProject.subprojects.findAll { it.parent.path == ':plugins' }.each { subproj ->, +  /* Skip repositories. We just aren't going to be able to test them so it, +   * doesn't make sense to waste time installing them. */, +  if (subproj.path.startsWith(':plugins:repository-')) {, +    return, +  }, +  integTest {, +    cluster {, +      // We need a non-decorated project object, so we lookup the project by path, +      plugin subproj.name, project(subproj.path), +    }, +++ b/docs/plugins/analysis-icu.asciidoc, +GET _cluster/health?wait_for_status=yellow, +, +// TESTRESPONSE, +            "tokenizer": "icu_tokenizer",, +GET _cluster/health?wait_for_status=yellow, +, +GET _cluster/health?wait_for_status=yellow, +, +++ b/docs/build.gradle, +    setting 'script.stored', 'true', +    Closure configFile = {, +      extraConfigFile it, "src/test/cluster/config/$it", +    }, +    configFile 'scripts/my_script.js', +    configFile 'scripts/my_script.py', +    configFile 'userdict_ja.txt', +    configFile 'KeywordTokenizer.rbbi', +  }, +}, +, +// Build the cluser with all plugins, +project.rootProject.subprojects.findAll { it.parent.path == ':plugins' }.each { subproj ->, +  /* Skip repositories. We just aren't going to be able to test them so it, +   * doesn't make sense to waste time installing them. */, +  if (subproj.path.startsWith(':plugins:repository-')) {, +    return, +  }, +  integTest {, +    cluster {, +      // We need a non-decorated project object, so we lookup the project by path, +      plugin subproj.name, project(subproj.path), +    }, +++ b/docs/plugins/analysis-icu.asciidoc, +GET _cluster/health?wait_for_status=yellow, +, +// TESTRESPONSE, +            "tokenizer": "icu_tokenizer",, +GET _cluster/health?wait_for_status=yellow, +, +GET _cluster/health?wait_for_status=yellow, +, +++ b/docs/plugins/analysis-kuromoji.asciidoc, +GET _cluster/health?wait_for_status=yellow, +, +GET _cluster/health?wait_for_status=yellow, +, +GET _cluster/health?wait_for_status=yellow, +, +GET _cluster/health?wait_for_status=yellow, +, +GET _cluster/health?wait_for_status=yellow]