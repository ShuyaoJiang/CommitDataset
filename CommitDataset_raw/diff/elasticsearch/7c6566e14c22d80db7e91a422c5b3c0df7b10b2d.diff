[+++ b/server/src/test/java/org/elasticsearch/cluster/SpecificMasterNodesIT.java, +import org.elasticsearch.action.admin.cluster.configuration.AddVotingConfigExclusionsAction;, +import org.elasticsearch.action.admin.cluster.configuration.AddVotingConfigExclusionsRequest;, +import org.elasticsearch.cluster.coordination.ClusterBootstrapService;, +import java.util.Collections;, +import java.util.List;, +import java.util.concurrent.ExecutionException;, +    @Override, +    protected List<Settings> addExtraClusterBootstrapSettings(List<Settings> allNodesSettings) {, +        // if it's the first master in the cluster bootstrap the cluster with this node name, +        Settings settings = allNodesSettings.get(0);, +        if (internalCluster().numMasterNodes() == 0 && settings.getAsBoolean(Node.NODE_MASTER_SETTING.getKey(), false)) {, +            return Collections.singletonList(Settings.builder(), +                    .put(settings), +                    .put(ClusterBootstrapService.INITIAL_MASTER_NODES_SETTING.getKey(), settings.get(Node.NODE_NAME_SETTING.getKey())), +                    .build());, +        }, +        return allNodesSettings;, +    }, +, +    public void testElectOnlyBetweenMasterNodes() throws IOException, ExecutionException, InterruptedException {, +        client().execute(AddVotingConfigExclusionsAction.INSTANCE,, +                new AddVotingConfigExclusionsRequest(new String[]{masterNodeName})).get();, +    public void testAliasFilterValidation() {]