[+++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/transport/TransportClientBenchmark.java, +import org.elasticsearch.common.xcontent.XContentType;, +                builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON));, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/transport/TransportClientBenchmark.java, +import org.elasticsearch.common.xcontent.XContentType;, +                builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON));, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkRequestBuilder.java, +import org.elasticsearch.common.xcontent.XContentType;, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, XContentType xContentType) throws Exception {, +        request.add(data, from, length, null, null, xContentType);, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, @Nullable String defaultIndex, @Nullable String defaultType,, +                                      XContentType xContentType) throws Exception {, +        request.add(data, from, length, defaultIndex, defaultType, xContentType);, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/transport/TransportClientBenchmark.java, +import org.elasticsearch.common.xcontent.XContentType;, +                builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON));, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkRequestBuilder.java, +import org.elasticsearch.common.xcontent.XContentType;, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, XContentType xContentType) throws Exception {, +        request.add(data, from, length, null, null, xContentType);, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, @Nullable String defaultIndex, @Nullable String defaultType,, +                                      XContentType xContentType) throws Exception {, +        request.add(data, from, length, defaultIndex, defaultType, xContentType);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true,, +            request.getXContentType());, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/transport/TransportClientBenchmark.java, +import org.elasticsearch.common.xcontent.XContentType;, +                builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON));, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkRequestBuilder.java, +import org.elasticsearch.common.xcontent.XContentType;, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, XContentType xContentType) throws Exception {, +        request.add(data, from, length, null, null, xContentType);, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, @Nullable String defaultIndex, @Nullable String defaultType,, +                                      XContentType xContentType) throws Exception {, +        request.add(data, from, length, defaultIndex, defaultType, xContentType);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true,, +            request.getXContentType());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequest.java, +     * @param source repository settings in json or yaml format, +     * @deprecated use {@link #settings(String, XContentType)} to avoid content type auto-detection, +    @Deprecated, +     * @param source repository settings in json or yaml format, +     * @param xContentType the content type of the source, +     * @return this request, +     */, +    public PutRepositoryRequest settings(String source, XContentType xContentType) {, +        this.settings = Settings.builder().loadFromSource(source, xContentType).build();, +        return this;, +    }, +, +    /**, +     * Sets the repository settings., +     *, +            settings(builder.string(), builder.contentType());, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/transport/TransportClientBenchmark.java, +import org.elasticsearch.common.xcontent.XContentType;, +                builder.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON));, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/NoopBulkRequestBuilder.java, +import org.elasticsearch.common.xcontent.XContentType;, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, XContentType xContentType) throws Exception {, +        request.add(data, from, length, null, null, xContentType);, +    public NoopBulkRequestBuilder add(byte[] data, int from, int length, @Nullable String defaultIndex, @Nullable String defaultType,, +                                      XContentType xContentType) throws Exception {, +        request.add(data, from, length, defaultIndex, defaultType, xContentType);, +++ b/client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java, +        bulkRequest.add(request.content(), defaultIndex, defaultType, defaultRouting, defaultFields, null, defaultPipeline, null, true,, +            request.getXContentType());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequest.java, +     * @param source repository settings in json or yaml format, +     * @deprecated use {@link #settings(String, XContentType)} to avoid content type auto-detection, +    @Deprecated, +     * @param source repository settings in json or yaml format, +     * @param xContentType the content type of the source, +     * @return this request, +     */, +    public PutRepositoryRequest settings(String source, XContentType xContentType) {, +        this.settings = Settings.builder().loadFromSource(source, xContentType).build();, +        return this;, +    }, +, +    /**, +     * Sets the repository settings., +     *, +            settings(builder.string(), builder.contentType());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequestBuilder.java, +import org.elasticsearch.common.xcontent.XContentType;, +     * Sets the repository settings in Json or Yaml format, +     * @deprecated use {@link #setSettings(String, XContentType)} instead to avoid content type auto detection, +    @Deprecated, +     * Sets the repository settings in Json or Yaml format, +     *, +     * @param source repository settings, +     * @param xContentType the contenty type of the source, +     * @return this builder, +     */, +    public PutRepositoryRequestBuilder setSettings(String source, XContentType xContentType) {, +        request.settings(source, xContentType);, +        return this;]