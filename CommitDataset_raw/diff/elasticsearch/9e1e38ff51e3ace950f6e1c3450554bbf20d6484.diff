[+++ b/CONTRIBUTING.md, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +, +> Warning: do not use `sdkman` for Java installations which do not have proper, +`jrunscript` for jdk distributions., +, +++ b/CONTRIBUTING.md, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +, +> Warning: do not use `sdkman` for Java installations which do not have proper, +`jrunscript` for jdk distributions., +, +++ b/Vagrantfile, +++ b/CONTRIBUTING.md, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +, +> Warning: do not use `sdkman` for Java installations which do not have proper, +`jrunscript` for jdk distributions., +, +++ b/Vagrantfile, +++ b/benchmarks/README.md, +Just run `gradlew -p benchmarks run` from the project root, +directory. It will build all microbenchmarks, execute them and print, +the result., +Running via an IDE is not supported as the results are meaningless, +because we have no control over the JVM running the benchmarks., +If you want to run a specific benchmark class like, say,, +`MemoryStatsBenchmark`, you can use `--args`:, +gradlew -p benchmarks run --args ' MemoryStatsBenchmark', +Everything in the `'` gets sent on the command line to JMH. The leading ` `, +inside the `'`s is important. Without it parameters are sometimes sent to, +gradle., +++ b/CONTRIBUTING.md, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +, +> Warning: do not use `sdkman` for Java installations which do not have proper, +`jrunscript` for jdk distributions., +, +++ b/Vagrantfile, +++ b/benchmarks/README.md, +Just run `gradlew -p benchmarks run` from the project root, +directory. It will build all microbenchmarks, execute them and print, +the result., +Running via an IDE is not supported as the results are meaningless, +because we have no control over the JVM running the benchmarks., +If you want to run a specific benchmark class like, say,, +`MemoryStatsBenchmark`, you can use `--args`:, +gradlew -p benchmarks run --args ' MemoryStatsBenchmark', +Everything in the `'` gets sent on the command line to JMH. The leading ` `, +inside the `'`s is important. Without it parameters are sometimes sent to, +gradle., +++ b/benchmarks/build.gradle, +apply plugin: 'application', +forbiddenApisMain.enabled = false, +++ b/CONTRIBUTING.md, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +, +> Warning: do not use `sdkman` for Java installations which do not have proper, +`jrunscript` for jdk distributions., +, +++ b/Vagrantfile, +++ b/benchmarks/README.md, +Just run `gradlew -p benchmarks run` from the project root, +directory. It will build all microbenchmarks, execute them and print, +the result., +Running via an IDE is not supported as the results are meaningless, +because we have no control over the JVM running the benchmarks., +If you want to run a specific benchmark class like, say,, +`MemoryStatsBenchmark`, you can use `--args`:, +gradlew -p benchmarks run --args ' MemoryStatsBenchmark', +Everything in the `'` gets sent on the command line to JMH. The leading ` `, +inside the `'`s is important. Without it parameters are sometimes sent to, +gradle., +++ b/benchmarks/build.gradle, +apply plugin: 'application', +forbiddenApisMain.enabled = false, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +        repos.maven {, +            name "elastic", +            url "https://artifacts.elastic.co/maven", +        }, +, +            // TODO: remove this once joda time is removed from scriptin in 7.0, +            systemProperty 'es.scripting.use_java_time', 'true', +, +, +++ b/CONTRIBUTING.md, +> Note: It is also required to have `JAVA7_HOME`, `JAVA8_HOME` and, +`JAVA10_HOME` available so that the tests can pass., +, +> Warning: do not use `sdkman` for Java installations which do not have proper, +`jrunscript` for jdk distributions., +, +++ b/Vagrantfile, +++ b/benchmarks/README.md]