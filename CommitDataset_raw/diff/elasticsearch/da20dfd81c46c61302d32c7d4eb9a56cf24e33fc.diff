[+++ b/docs/reference/migration/migrate_7_0/cluster.asciidoc, +, +[float], +==== Cluster-wide shard soft limit, +Clusters now have soft limits on the total number of open shards in the cluster, +based on the number of nodes and the `cluster.max_shards_per_node` cluster, +setting, to prevent accidental operations that would destabilize the cluster., +More information can be found in the <<misc-cluster,documentation for that setting>>., +++ b/docs/reference/migration/migrate_7_0/cluster.asciidoc, +, +[float], +==== Cluster-wide shard soft limit, +Clusters now have soft limits on the total number of open shards in the cluster, +based on the number of nodes and the `cluster.max_shards_per_node` cluster, +setting, to prevent accidental operations that would destabilize the cluster., +More information can be found in the <<misc-cluster,documentation for that setting>>., +++ b/docs/reference/modules/cluster/misc.asciidoc, +[[cluster-shard-limit]], +, +==== Cluster Shard Limit, +, +In a Elasticsearch 7.0 and later, there will be a soft limit on the number of, +shards in a cluster, based on the number of nodes in the cluster.  This is, +intended to prevent operations which may unintentionally destabilize the, +cluster. Prior to 7.0, actions which would result in the cluster going over the, +limit will issue a deprecation warning., +, +NOTE: You can set the system property `es.enforce_max_shards_per_node` to `true`, +to opt in to strict enforcement of the shard limit. If this system property is, +set, actions which would result in the cluster going over the limit will result, +in an error, rather than a deprecation warning. This property will be removed in, +Elasticsearch 7.0, as strict enforcement of the limit will be the default and, +only behavior., +, +If an operation, such as creating a new index, restoring a snapshot of an index,, +or opening a closed index would lead to the number of shards in the cluster, +going over this limit, the operation will issue a deprecation warning., +, +If the cluster is already over the limit, due to changes in node membership or, +setting changes, all operations that create or open indices will issue warnings, +until either the limit is increased as described below, or some indices are, +<<indices-open-close,closed>> or <<indices-delete-index,deleted>> to bring the, +number of shards below the limit., +, +Replicas count towards this limit, but closed indexes do not. An index with 5, +primary shards and 2 replicas will be counted as 15 shards.  Any closed index, +is counted as 0, no matter how many shards and replicas it contains., +, +The limit defaults to 1,000 shards per node, and be dynamically adjusted using, +the following property:, +, +`cluster.max_shards_per_node`::, +, +     Controls the number of shards allowed in the cluster per node., +, +For example, a 3-node cluster with the default setting would allow 3,000 shards, +total, across all open indexes.  If the above setting is changed to 1,500, then, +the cluster would allow 4,500 shards total., +, +++ b/docs/reference/migration/migrate_7_0/cluster.asciidoc, +, +[float], +==== Cluster-wide shard soft limit, +Clusters now have soft limits on the total number of open shards in the cluster, +based on the number of nodes and the `cluster.max_shards_per_node` cluster, +setting, to prevent accidental operations that would destabilize the cluster., +More information can be found in the <<misc-cluster,documentation for that setting>>., +++ b/docs/reference/modules/cluster/misc.asciidoc, +[[cluster-shard-limit]], +, +==== Cluster Shard Limit, +, +In a Elasticsearch 7.0 and later, there will be a soft limit on the number of, +shards in a cluster, based on the number of nodes in the cluster.  This is, +intended to prevent operations which may unintentionally destabilize the, +cluster. Prior to 7.0, actions which would result in the cluster going over the, +limit will issue a deprecation warning., +, +NOTE: You can set the system property `es.enforce_max_shards_per_node` to `true`, +to opt in to strict enforcement of the shard limit. If this system property is, +set, actions which would result in the cluster going over the limit will result, +in an error, rather than a deprecation warning. This property will be removed in, +Elasticsearch 7.0, as strict enforcement of the limit will be the default and, +only behavior., +, +If an operation, such as creating a new index, restoring a snapshot of an index,, +or opening a closed index would lead to the number of shards in the cluster, +going over this limit, the operation will issue a deprecation warning., +, +If the cluster is already over the limit, due to changes in node membership or, +setting changes, all operations that create or open indices will issue warnings, +until either the limit is increased as described below, or some indices are, +<<indices-open-close,closed>> or <<indices-delete-index,deleted>> to bring the, +number of shards below the limit., +, +Replicas count towards this limit, but closed indexes do not. An index with 5, +primary shards and 2 replicas will be counted as 15 shards.  Any closed index, +is counted as 0, no matter how many shards and replicas it contains., +, +The limit defaults to 1,000 shards per node, and be dynamically adjusted using]