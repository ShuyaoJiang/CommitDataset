[+++ b/CONTRIBUTING.md, +**Repository:** [https://github.com/elastic/elasticsearch](https://github.com/elastic/elasticsearch), +++ b/CONTRIBUTING.md, +**Repository:** [https://github.com/elastic/elasticsearch](https://github.com/elastic/elasticsearch), +++ b/Vagrantfile, +    ubuntu_common config, extra: <<-SHELL, +      # Install Jayatana so we can work around it being present., +      [ -f /usr/share/java/jayatanaag.jar ] || install jayatana, +    SHELL, +def ubuntu_common(config, extra: ''), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', extra: extra, +def deb_common(config, add_openjdk_repository_command, openjdk_list, extra: ''), +      #{extra}, +++ b/CONTRIBUTING.md, +**Repository:** [https://github.com/elastic/elasticsearch](https://github.com/elastic/elasticsearch), +++ b/Vagrantfile, +    ubuntu_common config, extra: <<-SHELL, +      # Install Jayatana so we can work around it being present., +      [ -f /usr/share/java/jayatanaag.jar ] || install jayatana, +    SHELL, +def ubuntu_common(config, extra: ''), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', extra: extra, +def deb_common(config, add_openjdk_repository_command, openjdk_list, extra: ''), +      #{extra}, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +                        <!-- Forks of Lucene classes -->, +                        <!-- Guava -->, +                        <exclude>src/main/java/org/elasticsearch/common/network/InetAddresses.java</exclude>, +                        <exclude>src/test/java/org/elasticsearch/common/network/InetAddressesTests.java</exclude>, +                        <exclude>src/test/java/org/elasticsearch/common/collect/EvictingQueueTests.java</exclude>, +                        <!-- Joda -->, +                        <exclude>src/main/java/org/joda/time/base/BaseDateTime.java</exclude>, +                        <exclude>src/main/java/org/joda/time/format/StrictISODateTimeFormat.java</exclude>, +++ b/CONTRIBUTING.md, +**Repository:** [https://github.com/elastic/elasticsearch](https://github.com/elastic/elasticsearch), +++ b/Vagrantfile, +    ubuntu_common config, extra: <<-SHELL, +      # Install Jayatana so we can work around it being present., +      [ -f /usr/share/java/jayatanaag.jar ] || install jayatana, +    SHELL, +def ubuntu_common(config, extra: ''), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', extra: extra, +def deb_common(config, add_openjdk_repository_command, openjdk_list, extra: ''), +      #{extra}, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +                        <!-- Forks of Lucene classes -->, +                        <!-- Guava -->, +                        <exclude>src/main/java/org/elasticsearch/common/network/InetAddresses.java</exclude>, +                        <exclude>src/test/java/org/elasticsearch/common/network/InetAddressesTests.java</exclude>, +                        <exclude>src/test/java/org/elasticsearch/common/collect/EvictingQueueTests.java</exclude>, +                        <!-- Joda -->, +                        <exclude>src/main/java/org/joda/time/base/BaseDateTime.java</exclude>, +                        <exclude>src/main/java/org/joda/time/format/StrictISODateTimeFormat.java</exclude>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {, +                }, +++ b/CONTRIBUTING.md, +**Repository:** [https://github.com/elastic/elasticsearch](https://github.com/elastic/elasticsearch), +++ b/Vagrantfile, +    ubuntu_common config, extra: <<-SHELL, +      # Install Jayatana so we can work around it being present., +      [ -f /usr/share/java/jayatanaag.jar ] || install jayatana, +    SHELL, +def ubuntu_common(config, extra: ''), +  deb_common config, 'apt-add-repository -y ppa:openjdk-r/ppa > /dev/null 2>&1', 'openjdk-r-*', extra: extra, +def deb_common(config, add_openjdk_repository_command, openjdk_list, extra: ''), +      #{extra}, +++ b/core/pom.xml, +                                <include>org/elasticsearch/index/MockEngineFactoryPlugin.class</include>, +                        <!-- Forks of Lucene classes -->, +                        <!-- Guava -->, +                        <exclude>src/main/java/org/elasticsearch/common/network/InetAddresses.java</exclude>, +                        <exclude>src/test/java/org/elasticsearch/common/network/InetAddressesTests.java</exclude>, +                        <exclude>src/test/java/org/elasticsearch/common/collect/EvictingQueueTests.java</exclude>, +                        <!-- Joda -->, +                        <exclude>src/main/java/org/joda/time/base/BaseDateTime.java</exclude>, +                        <exclude>src/main/java/org/joda/time/format/StrictISODateTimeFormat.java</exclude>, +++ b/core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +import org.apache.lucene.util.IOUtils;, +        List<String> tlist;, +        TokenStream source = null;, +        try {, +            tlist = new ArrayList<>();, +        } finally {, +            if (source != null) {, +                IOUtils.closeWhileHandlingException(source);, +            }, +                    try (TokenStream source = getAnalyzer().tokenStream(field, tmp.toString())) {]