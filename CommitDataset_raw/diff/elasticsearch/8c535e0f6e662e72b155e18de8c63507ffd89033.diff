[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.GeoHashUtils;, +import org.apache.lucene.util.GeoUtils;, +        lon = GeoUtils.mortonUnhashLon(hash);, +        lat = GeoUtils.mortonUnhashLat(hash);, +        final long hash = GeoHashUtils.mortonEncode(geohash);, +        return this.reset(GeoUtils.mortonUnhashLat(hash), GeoUtils.mortonUnhashLon(hash));, +        return GeoHashUtils.stringEncode(lon, lat);, +        return GeoHashUtils.stringEncode(lon, lat);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.GeoHashUtils;, +import org.apache.lucene.util.GeoUtils;, +        lon = GeoUtils.mortonUnhashLon(hash);, +        lat = GeoUtils.mortonUnhashLat(hash);, +        final long hash = GeoHashUtils.mortonEncode(geohash);, +        return this.reset(GeoUtils.mortonUnhashLat(hash), GeoUtils.mortonUnhashLon(hash));, +        return GeoHashUtils.stringEncode(lon, lat);, +        return GeoHashUtils.stringEncode(lon, lat);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java, +import org.apache.lucene.util.GeoHashUtils;, +        public static final int GEO_HASH_PRECISION = GeoHashUtils.PRECISION;, +                geohash = GeoHashUtils.stringEncode(point.lon(), point.lat());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.GeoHashUtils;, +import org.apache.lucene.util.GeoUtils;, +        lon = GeoUtils.mortonUnhashLon(hash);, +        lat = GeoUtils.mortonUnhashLat(hash);, +        final long hash = GeoHashUtils.mortonEncode(geohash);, +        return this.reset(GeoUtils.mortonUnhashLat(hash), GeoUtils.mortonUnhashLon(hash));, +        return GeoHashUtils.stringEncode(lon, lat);, +        return GeoHashUtils.stringEncode(lon, lat);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java, +import org.apache.lucene.util.GeoHashUtils;, +        public static final int GEO_HASH_PRECISION = GeoHashUtils.PRECISION;, +                geohash = GeoHashUtils.stringEncode(point.lon(), point.lat());, +++ b/core/src/main/java/org/elasticsearch/index/query/GeohashCellQuery.java, +import org.apache.lucene.util.GeoHashUtils;, +            this.geohash = GeoHashUtils.stringEncode(lon, lat);, +                query = create(context, geoFieldType, geohash, GeoHashUtils.addNeighbors(geohash, new ArrayList<CharSequence>(8)));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.GeoHashUtils;, +import org.apache.lucene.util.GeoUtils;, +        lon = GeoUtils.mortonUnhashLon(hash);, +        lat = GeoUtils.mortonUnhashLat(hash);, +        final long hash = GeoHashUtils.mortonEncode(geohash);, +        return this.reset(GeoUtils.mortonUnhashLat(hash), GeoUtils.mortonUnhashLon(hash));, +        return GeoHashUtils.stringEncode(lon, lat);, +        return GeoHashUtils.stringEncode(lon, lat);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java, +import org.apache.lucene.util.GeoHashUtils;, +        public static final int GEO_HASH_PRECISION = GeoHashUtils.PRECISION;, +                geohash = GeoHashUtils.stringEncode(point.lon(), point.lat());, +++ b/core/src/main/java/org/elasticsearch/index/query/GeohashCellQuery.java, +import org.apache.lucene.util.GeoHashUtils;, +            this.geohash = GeoHashUtils.stringEncode(lon, lat);, +                query = create(context, geoFieldType, geohash, GeoHashUtils.addNeighbors(geohash, new ArrayList<CharSequence>(8)));, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +import org.apache.lucene.util.GeoHashUtils;, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoPoint.java, +import org.apache.lucene.util.GeoHashUtils;, +import org.apache.lucene.util.GeoUtils;, +        lon = GeoUtils.mortonUnhashLon(hash);, +        lat = GeoUtils.mortonUnhashLat(hash);, +        final long hash = GeoHashUtils.mortonEncode(geohash);, +        return this.reset(GeoUtils.mortonUnhashLat(hash), GeoUtils.mortonUnhashLon(hash));, +        return GeoHashUtils.stringEncode(lon, lat);, +        return GeoHashUtils.stringEncode(lon, lat);, +++ b/core/src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java, +import org.apache.lucene.util.GeoHashUtils;, +        public static final int GEO_HASH_PRECISION = GeoHashUtils.PRECISION;, +                geohash = GeoHashUtils.stringEncode(point.lon(), point.lat());, +++ b/core/src/main/java/org/elasticsearch/index/query/GeohashCellQuery.java, +import org.apache.lucene.util.GeoHashUtils;, +            this.geohash = GeoHashUtils.stringEncode(lon, lat);, +                query = create(context, geoFieldType, geohash, GeoHashUtils.addNeighbors(geohash, new ArrayList<CharSequence>(8)));, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java, +import org.apache.lucene.util.GeoHashUtils;, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParser.java, +import org.apache.lucene.util.GeoHashUtils;]