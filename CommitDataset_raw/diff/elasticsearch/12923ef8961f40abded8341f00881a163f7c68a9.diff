[+++ b/core/src/main/java/org/elasticsearch/index/refresh/RefreshStats.java, +import org.elasticsearch.Version;, +import java.util.Objects;, +    /**, +     * Number of waiting refresh listeners., +     */, +    private int listeners;, +, +    public RefreshStats(long total, long totalTimeInMillis, int listeners) {, +        this.listeners = listeners;, +        this.listeners += refreshStats.listeners;, +    /**, +     * The number of waiting refresh listeners., +     */, +    public int getListeners() {, +        return listeners;, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject("refresh");, +        builder.field("total", total);, +        builder.timeValueField("total_time_in_millis", "total_time", totalTimeInMillis);, +        builder.field("listeners", listeners);, +        builder.endObject();, +        return builder;, +        if (in.getVersion().onOrAfter(Version.V_5_2_0_UNRELEASED)) {, +            listeners = in.readVInt();, +        } else {, +            listeners = 0;, +        }, +        if (out.getVersion().onOrAfter(Version.V_5_2_0_UNRELEASED)) {, +            out.writeVInt(listeners);, +        }, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +        if (obj == null || obj.getClass() != RefreshStats.class) {, +            return false;, +        }, +        RefreshStats rhs = (RefreshStats) obj;, +        return total == rhs.total, +                && totalTimeInMillis == rhs.totalTimeInMillis, +                && listeners == rhs.listeners;, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(total, totalTimeInMillis, listeners);, +++ b/core/src/main/java/org/elasticsearch/index/refresh/RefreshStats.java, +import org.elasticsearch.Version;, +import java.util.Objects;, +    /**, +     * Number of waiting refresh listeners., +     */, +    private int listeners;, +, +    public RefreshStats(long total, long totalTimeInMillis, int listeners) {, +        this.listeners = listeners;, +        this.listeners += refreshStats.listeners;, +    /**, +     * The number of waiting refresh listeners., +     */, +    public int getListeners() {, +        return listeners;, +    @Override, +    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {, +        builder.startObject("refresh");, +        builder.field("total", total);, +        builder.timeValueField("total_time_in_millis", "total_time", totalTimeInMillis);, +        builder.field("listeners", listeners);, +        builder.endObject();, +        return builder;, +        if (in.getVersion().onOrAfter(Version.V_5_2_0_UNRELEASED)) {, +            listeners = in.readVInt();, +        } else {, +            listeners = 0;, +        }, +        if (out.getVersion().onOrAfter(Version.V_5_2_0_UNRELEASED)) {, +            out.writeVInt(listeners);, +        }, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +        if (obj == null || obj.getClass() != RefreshStats.class) {, +            return false;, +        }, +        RefreshStats rhs = (RefreshStats) obj;, +        return total == rhs.total, +                && totalTimeInMillis == rhs.totalTimeInMillis, +                && listeners == rhs.listeners;, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(total, totalTimeInMillis, listeners);, +++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java, +        // Null refreshListeners means this shard doesn't support them so there can't be any., +        int listeners = refreshListeners == null ? 0 : refreshListeners.pendingCount();, +        return new RefreshStats(refreshMetric.count(), TimeUnit.NANOSECONDS.toMillis(refreshMetric.sum()), listeners);]