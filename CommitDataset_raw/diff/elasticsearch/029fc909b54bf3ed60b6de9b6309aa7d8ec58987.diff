[+++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +        public void applyStartedShard(ShardRouting shardRouting) {, +        public void applyFailedShard(ShardRouting shardRouting) {, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +        public void applyStartedShard(ShardRouting shardRouting) {, +        public void applyFailedShard(ShardRouting shardRouting) {, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.FailedShard;, +import org.elasticsearch.cluster.routing.allocation.StaleShard;, +            List<FailedShard> failedShardsToBeApplied = new ArrayList<>();, +            List<StaleShard> staleShardsToBeApplied = new ArrayList<>();, +                            staleShardsToBeApplied.add(new StaleShard(task.shardId, task.allocationId));, +                        failedShardsToBeApplied.add(new FailedShard(matched, task.message, task.failure));, +            assert tasksToBeApplied.size() == failedShardsToBeApplied.size() + staleShardsToBeApplied.size();, +                maybeUpdatedState = applyFailedShards(currentState, failedShardsToBeApplied, staleShardsToBeApplied);, +                logger.warn((Supplier<?>) () -> new ParameterizedMessage("failed to apply failed shards {}", failedShardsToBeApplied), e);, +        ClusterState applyFailedShards(ClusterState currentState, List<FailedShard> failedShards, List<StaleShard> staleShards) {, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +        public void applyStartedShard(ShardRouting shardRouting) {, +        public void applyFailedShard(ShardRouting shardRouting) {, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.FailedShard;, +import org.elasticsearch.cluster.routing.allocation.StaleShard;, +            List<FailedShard> failedShardsToBeApplied = new ArrayList<>();, +            List<StaleShard> staleShardsToBeApplied = new ArrayList<>();, +                            staleShardsToBeApplied.add(new StaleShard(task.shardId, task.allocationId));, +                        failedShardsToBeApplied.add(new FailedShard(matched, task.message, task.failure));, +            assert tasksToBeApplied.size() == failedShardsToBeApplied.size() + staleShardsToBeApplied.size();, +                maybeUpdatedState = applyFailedShards(currentState, failedShardsToBeApplied, staleShardsToBeApplied);, +                logger.warn((Supplier<?>) () -> new ParameterizedMessage("failed to apply failed shards {}", failedShardsToBeApplied), e);, +        ClusterState applyFailedShards(ClusterState currentState, List<FailedShard> failedShards, List<StaleShard> staleShards) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState,, +            clusterInfoService.getClusterInfo(), currentNanoTime(), false);, +        for (ShardRouting startedShard : startedShards) {, +            gatewayAllocator.applyStartedShard(startedShard);, +        }, +        return applyFailedShards(clusterState, Collections.singletonList(new FailedShard(failedShard, null, null)),, +    public ClusterState applyFailedShards(ClusterState clusterState, List<FailedShard> failedShards) {, +    public ClusterState applyFailedShards(final ClusterState clusterState, final List<FailedShard> failedShards,, +                                          final List<StaleShard> staleShards) {, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, tmpState,, +            clusterInfoService.getClusterInfo(), currentNanoTime, false);, +        for (FailedShard failedShardEntry : failedShards) {, +            ShardRouting shardToFail = failedShardEntry.getRoutingEntry();, +                UnassignedInfo unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.ALLOCATION_FAILED, failedShardEntry.getMessage(),, +                    failedShardEntry.getFailure(), failedAllocations + 1, currentNanoTime, System.currentTimeMillis(), false,, +        for (FailedShard failedShard : failedShards) {, +            gatewayAllocator.applyFailedShard(failedShard.getRoutingEntry());, +        }, +        String failedShardsAsString = firstListElementsToCommaDelimitedString(failedShards, s -> s.getRoutingEntry().shardId().toString());, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +        public void applyStartedShard(ShardRouting shardRouting) {, +        public void applyFailedShard(ShardRouting shardRouting) {, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.FailedShard;, +import org.elasticsearch.cluster.routing.allocation.StaleShard;, +            List<FailedShard> failedShardsToBeApplied = new ArrayList<>();, +            List<StaleShard> staleShardsToBeApplied = new ArrayList<>();, +                            staleShardsToBeApplied.add(new StaleShard(task.shardId, task.allocationId));, +                        failedShardsToBeApplied.add(new FailedShard(matched, task.message, task.failure));, +            assert tasksToBeApplied.size() == failedShardsToBeApplied.size() + staleShardsToBeApplied.size();, +                maybeUpdatedState = applyFailedShards(currentState, failedShardsToBeApplied, staleShardsToBeApplied);, +                logger.warn((Supplier<?>) () -> new ParameterizedMessage("failed to apply failed shards {}", failedShardsToBeApplied), e);, +        ClusterState applyFailedShards(ClusterState currentState, List<FailedShard> failedShards, List<StaleShard> staleShards) {, +++ b/core/src/main/java/org/elasticsearch/cluster/routing/allocation/AllocationService.java, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, clusterState,, +            clusterInfoService.getClusterInfo(), currentNanoTime(), false);, +        for (ShardRouting startedShard : startedShards) {, +            gatewayAllocator.applyStartedShard(startedShard);, +        }, +        return applyFailedShards(clusterState, Collections.singletonList(new FailedShard(failedShard, null, null)),, +    public ClusterState applyFailedShards(ClusterState clusterState, List<FailedShard> failedShards) {, +    public ClusterState applyFailedShards(final ClusterState clusterState, final List<FailedShard> failedShards,, +                                          final List<StaleShard> staleShards) {, +        RoutingAllocation allocation = new RoutingAllocation(allocationDeciders, routingNodes, tmpState,, +            clusterInfoService.getClusterInfo(), currentNanoTime, false);, +        for (FailedShard failedShardEntry : failedShards) {, +            ShardRouting shardToFail = failedShardEntry.getRoutingEntry();, +                UnassignedInfo unassignedInfo = new UnassignedInfo(UnassignedInfo.Reason.ALLOCATION_FAILED, failedShardEntry.getMessage(),, +                    failedShardEntry.getFailure(), failedAllocations + 1, currentNanoTime, System.currentTimeMillis(), false,, +        for (FailedShard failedShard : failedShards) {, +            gatewayAllocator.applyFailedShard(failedShard.getRoutingEntry());, +        }, +        String failedShardsAsString = firstListElementsToCommaDelimitedString(failedShards, s -> s.getRoutingEntry().shardId().toString());, +++ /dev/null, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +import org.elasticsearch.cluster.routing.ShardRouting;, +        public void applyStartedShard(ShardRouting shardRouting) {, +        public void applyFailedShard(ShardRouting shardRouting) {, +++ b/core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java, +import org.elasticsearch.cluster.routing.allocation.FailedShard;, +import org.elasticsearch.cluster.routing.allocation.StaleShard;, +            List<FailedShard> failedShardsToBeApplied = new ArrayList<>();, +            List<StaleShard> staleShardsToBeApplied = new ArrayList<>();, +                            staleShardsToBeApplied.add(new StaleShard(task.shardId, task.allocationId));]