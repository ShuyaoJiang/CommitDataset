[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        if (request.searchRequest().source() != null) {, +//                            source = request.searchRequest().source(); // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        if (request.searchRequest().source() != null) {, +//                            source = request.searchRequest().source(); // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        // searchRequest.source(source()); NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        if (request.searchRequest().source() != null) {, +//                            source = request.searchRequest().source(); // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        // searchRequest.source(source()); NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringArrayValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringValue;, +                // searchRequest.source(data.slice(from, nextMarker - from));, +                // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        if (request.searchRequest().source() != null) {, +//                            source = request.searchRequest().source(); // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        // searchRequest.source(source()); NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringArrayValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringValue;, +                // searchRequest.source(data.slice(from, nextMarker - from));, +                // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private SearchSourceBuilder source;, +    public SearchRequest(String[] indices, SearchSourceBuilder source) {, +        this.source = source;, +        this.source = sourceBuilder;, +    public SearchSourceBuilder source() {, +        source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +        source.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        if (request.searchRequest().source() != null) {, +//                            source = request.searchRequest().source(); // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        // searchRequest.source(source()); NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringArrayValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringValue;, +                // searchRequest.source(data.slice(from, nextMarker - from));, +                // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private SearchSourceBuilder source;, +    public SearchRequest(String[] indices, SearchSourceBuilder source) {, +        this.source = source;, +        this.source = sourceBuilder;, +    public SearchSourceBuilder source() {, +        source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +        source.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +                return XContentHelper.toString(request.source());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        if (request.searchRequest().source() != null) {, +//                            source = request.searchRequest().source(); // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        // searchRequest.source(source()); NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringArrayValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringValue;, +                // searchRequest.source(data.slice(from, nextMarker - from));, +                // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private SearchSourceBuilder source;, +    public SearchRequest(String[] indices, SearchSourceBuilder source) {, +        this.source = source;, +        this.source = sourceBuilder;, +    public SearchSourceBuilder source() {, +        source = SearchSourceBuilder.PROTOTYPE.readFrom(in);, +        source.writeTo(out);, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java, +                return XContentHelper.toString(request.source());, +++ b/core/src/main/java/org/elasticsearch/action/termvectors/dfs/DfsOnlyRequest.java, +        String sSource = searchRequest.source().toString();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java, +                        if (request.searchRequest().source() != null) {, +//                            source = request.searchRequest().source(); // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/count/CountRequest.java, +        // searchRequest.source(source()); NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringArrayValue;, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeStringValue;, +                // searchRequest.source(data.slice(from, nextMarker - from));, +                // NOCOMMIT fix this, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +    private SearchSourceBuilder source;, +    public SearchRequest(String[] indices, SearchSourceBuilder source) {, +        this.source = source;, +        this.source = sourceBuilder;, +    public SearchSourceBuilder source() {, +        source = SearchSourceBuilder.PROTOTYPE.readFrom(in);]