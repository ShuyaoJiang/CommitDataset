[+++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_3_0_0 = new Version(V_3_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_4_0);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_3_0_0 = new Version(V_3_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_4_0);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.Terms;, +import org.apache.lucene.index.TermsEnum;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.List;, +import java.util.ListIterator;, +            position = positions.get(positions.size() - 1).intValue() + 1;, +     * @param terms, +     * @param position, +        positions.add(Integer.valueOf(position));, +    }, +, +    /**, +     * Returns a List of the terms in the multiphrase., +     * Do not modify the List or its contents., +     */, +    public List<Term[]> getTermArrays() {, +        return Collections.unmodifiableList(termArrays);, +            result[i] = positions.get(i).intValue();, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_3_0_0 = new Version(V_3_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_4_0);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.Terms;, +import org.apache.lucene.index.TermsEnum;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.List;, +import java.util.ListIterator;, +            position = positions.get(positions.size() - 1).intValue() + 1;, +     * @param terms, +     * @param position, +        positions.add(Integer.valueOf(position));, +    }, +, +    /**, +     * Returns a List of the terms in the multiphrase., +     * Do not modify the List or its contents., +     */, +    public List<Term[]> getTermArrays() {, +        return Collections.unmodifiableList(termArrays);, +            result[i] = positions.get(i).intValue();, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +            tokenFiltersBindings.processTokenFilter("decimal_digit", DecimalDigitFilterFactory.class);, +++ b/core/src/main/java/org/elasticsearch/Version.java, +    public static final Version V_3_0_0 = new Version(V_3_0_0_ID, true, org.apache.lucene.util.Version.LUCENE_5_4_0);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java, +, +import org.apache.lucene.index.IndexReader;, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.index.Term;, +import org.apache.lucene.index.Terms;, +import org.apache.lucene.index.TermsEnum;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.List;, +import java.util.ListIterator;, +            position = positions.get(positions.size() - 1).intValue() + 1;, +     * @param terms, +     * @param position, +        positions.add(Integer.valueOf(position));, +    }, +, +    /**, +     * Returns a List of the terms in the multiphrase., +     * Do not modify the List or its contents., +     */, +    public List<Term[]> getTermArrays() {, +        return Collections.unmodifiableList(termArrays);, +            result[i] = positions.get(i).intValue();, +++ b/core/src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java, +            tokenFiltersBindings.processTokenFilter("decimal_digit", DecimalDigitFilterFactory.class);, +++ b/core/src/main/java/org/elasticsearch/index/analysis/DecimalDigitFilterFactory.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *]