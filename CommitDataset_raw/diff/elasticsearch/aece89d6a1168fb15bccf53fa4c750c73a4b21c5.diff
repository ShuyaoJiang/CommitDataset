[+++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +                includeAliases = nodeBooleanValue(entry.getValue(), "include_aliases");, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +                includeAliases = nodeBooleanValue(entry.getValue(), "include_aliases");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +                includeAliases = nodeBooleanValue(entry.getValue(), "include_aliases");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +                includeAliases = nodeBooleanValue(entry.getValue(), "include_aliases");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +                        // check lenient to avoid interpreting the value as string but parse strict in order to provoke an error early on., +                        if (parser.isBooleanValueLenient()) {, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +                includeAliases = nodeBooleanValue(entry.getValue(), "include_aliases");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +                        // check lenient to avoid interpreting the value as string but parse strict in order to provoke an error early on., +                        if (parser.isBooleanValueLenient()) {, +++ b/core/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +                indexMeta.isIndexUsingShadowReplicas()) { // and the index uses shadow replicas, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java, +import static org.elasticsearch.common.xcontent.support.XContentMapValues.nodeBooleanValue;, +                partial(nodeBooleanValue(entry.getValue(), "partial"));, +                includeGlobalState = nodeBooleanValue(entry.getValue(), "include_global_state");, +                includeAliases = nodeBooleanValue(entry.getValue(), "include_aliases");, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/flush/TransportShardFlushAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +    protected boolean shouldExecuteReplication(IndexMetaData indexMetaData) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportShardRefreshAction.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;]