[+++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.names().indexName(), termStr);, +                indexedNameField = currentMapper.names().indexName();, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.names().indexName(), termStr);, +                indexedNameField = currentMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.indexAnalyzer();, +                field = fieldMapper.names().indexName();, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.names().indexName(), termStr);, +                indexedNameField = currentMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.indexAnalyzer();, +                field = fieldMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().fullName())) {, +                        addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().indexName())) {, +                        addFieldMapper(fieldMapper.names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().shortName())) {, +                        addFieldMapper(fieldMapper.names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.names().fullName(), builder.bytes()));, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.names().indexName(), termStr);, +                indexedNameField = currentMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.indexAnalyzer();, +                field = fieldMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().fullName())) {, +                        addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().indexName())) {, +                        addFieldMapper(fieldMapper.names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().shortName())) {, +                        addFieldMapper(fieldMapper.names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.names().fullName(), builder.bytes()));, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.names().indexName(), termStr);, +                indexedNameField = currentMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.indexAnalyzer();, +                field = fieldMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().fullName())) {, +                        addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().indexName())) {, +                        addFieldMapper(fieldMapper.names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().shortName())) {, +                        addFieldMapper(fieldMapper.names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.names().fullName(), builder.bytes()));, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +, +import org.elasticsearch.action.Action;, +import org.elasticsearch.action.ActionListener;, +import org.elasticsearch.action.ActionModule;, +import org.elasticsearch.action.ActionRequest;, +import org.elasticsearch.action.ActionRequestBuilder;, +import org.elasticsearch.action.ActionResponse;, +++ b/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java, +                        query = super.getFieldQuery(currentMapper.names().indexName(), queryText, quoted);, +                    rangeQuery = dateFieldMapper.rangeQuery(part1, part2, startInclusive, endInclusive, settings.timeZone(), null, parseContext);, +                    query = getPossiblyAnalyzedPrefixQuery(currentMapper.names().indexName(), termStr);, +                indexedNameField = currentMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                analyzer = fieldMapper.indexAnalyzer();, +                field = fieldMapper.names().indexName();, +++ b/src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java, +                    addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().fullName())) {, +                        addFieldMapper(fieldMapper.names().fullName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().indexName())) {, +                        addFieldMapper(fieldMapper.names().indexName(), fieldMapper, fieldMappings, request.includeDefaults());, +                    if (Regex.simpleMatch(field, fieldMapper.names().shortName())) {, +                        addFieldMapper(fieldMapper.names().shortName(), fieldMapper, fieldMappings, request.includeDefaults());, +            fieldMappings.put(field, new FieldMappingMetaData(fieldMapper.names().fullName(), builder.bytes()));, +++ b/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java, +import org.elasticsearch.common.compress.CompressedXContent;, +                mapperService.merge(request.type(), new CompressedXContent(update.toBytes()), true);, +++ b/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +]