[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/en/security/authorization.asciidoc, +up and applies any changes to it., +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/en/security/authorization.asciidoc, +up and applies any changes to it., +++ b/plugin/build.gradle, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/en/security/authorization.asciidoc, +up and applies any changes to it., +++ b/plugin/build.gradle, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/en/security/authorization.asciidoc, +up and applies any changes to it., +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/en/security/authorization.asciidoc, +up and applies any changes to it., +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/en/security/authorization.asciidoc, +up and applies any changes to it., +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/dev-tools/ci, +    pick_clone_target, +++ b/docs/en/security/authorization.asciidoc, +up and applies any changes to it., +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/security/authz/AuthorizationService.java, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +import java.util.function.Predicate;, +, +import org.elasticsearch.action.admin.cluster.health.ClusterHealthAction;, +import org.elasticsearch.xpack.security.user.ElasticUser;, +, +        final ResolvedIndices resolvedIndices = resolveIndexNames(authentication, action, request, metaData, authorizedIndices);, +        IndicesAccessControl indicesAccessControl = permission.authorize(action, localIndices, metaData, fieldPermissionsCache);, +        if (!indicesAccessControl.isGranted()) {, +            throw denial(authentication, action, request);, +        } else if (indicesAccessControl.getIndexPermissions(SecurityLifecycleService.SECURITY_INDEX_NAME) != null, +                && indicesAccessControl.getIndexPermissions(SecurityLifecycleService.SECURITY_INDEX_NAME).isGranted(), +                && XPackUser.is(authentication.getUser()) == false, +                && MONITOR_INDEX_PREDICATE.test(action) == false]