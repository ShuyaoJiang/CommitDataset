[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +            boolean shardsAcknowledged = createIndexResponse.isShardsAcknowledged(); // <2>, +            assertTrue(shardsAcknowledged);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +            boolean shardsAcknowledged = createIndexResponse.isShardsAcknowledged(); // <2>, +            assertTrue(shardsAcknowledged);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +            boolean shardsAcknowledged = createIndexResponse.isShardsAcknowledged(); // <2>, +            assertTrue(shardsAcknowledged);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +            boolean shardsAcknowledged = createIndexResponse.isShardsAcknowledged(); // <2>, +            assertTrue(shardsAcknowledged);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponse.java, +    private boolean shardsAcknowledged;, +    protected CreateIndexResponse(boolean acknowledged, boolean shardsAcknowledged, String index) {, +        assert acknowledged || shardsAcknowledged == false; // if its not acknowledged, then shardsAcknowledged should be false too, +        this.shardsAcknowledged = shardsAcknowledged;, +        shardsAcknowledged = in.readBoolean();, +        out.writeBoolean(shardsAcknowledged);, +     * , +     * @deprecated use {@link #isShardsAcknowledged()}, +    @Deprecated, +        return shardsAcknowledged;, +    }, +, +    /**, +     * Returns true if the requisite number of shards were started before, +     * returning from the index creation operation. If {@link #isAcknowledged()}, +     * is false, then this also returns false., +     */, +    public boolean isShardsAcknowledged() {, +        return shardsAcknowledged;, +        builder.field(SHARDS_ACKNOWLEDGED.getPreferredName(), isShardsAcknowledged());, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +            boolean shardsAcknowledged = createIndexResponse.isShardsAcknowledged(); // <2>, +            assertTrue(shardsAcknowledged);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponse.java, +    private boolean shardsAcknowledged;, +    protected CreateIndexResponse(boolean acknowledged, boolean shardsAcknowledged, String index) {, +        assert acknowledged || shardsAcknowledged == false; // if its not acknowledged, then shardsAcknowledged should be false too, +        this.shardsAcknowledged = shardsAcknowledged;, +        shardsAcknowledged = in.readBoolean();, +        out.writeBoolean(shardsAcknowledged);, +     * , +     * @deprecated use {@link #isShardsAcknowledged()}, +    @Deprecated, +        return shardsAcknowledged;, +    }, +, +    /**, +     * Returns true if the requisite number of shards were started before, +     * returning from the index creation operation. If {@link #isAcknowledged()}, +     * is false, then this also returns false., +     */, +    public boolean isShardsAcknowledged() {, +        return shardsAcknowledged;, +        builder.field(SHARDS_ACKNOWLEDGED.getPreferredName(), isShardsAcknowledged());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java, +            listener.onResponse(new CreateIndexResponse(response.isAcknowledged(), response.isShardsAcknowledged(), indexName)),, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java, +            boolean shardsAcknowledged = createIndexResponse.isShardsAcknowledged(); // <2>, +            assertTrue(shardsAcknowledged);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java, +     * to be active before returning.  Check {@link CreateIndexResponse#isShardsAcknowledged()} to, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponse.java, +    private boolean shardsAcknowledged;, +    protected CreateIndexResponse(boolean acknowledged, boolean shardsAcknowledged, String index) {, +        assert acknowledged || shardsAcknowledged == false; // if its not acknowledged, then shardsAcknowledged should be false too, +        this.shardsAcknowledged = shardsAcknowledged;, +        shardsAcknowledged = in.readBoolean();, +        out.writeBoolean(shardsAcknowledged);, +     * , +     * @deprecated use {@link #isShardsAcknowledged()}, +    @Deprecated, +        return shardsAcknowledged;, +    }, +, +    /**, +     * Returns true if the requisite number of shards were started before, +     * returning from the index creation operation. If {@link #isAcknowledged()}, +     * is false, then this also returns false., +     */, +    public boolean isShardsAcknowledged() {, +        return shardsAcknowledged;]