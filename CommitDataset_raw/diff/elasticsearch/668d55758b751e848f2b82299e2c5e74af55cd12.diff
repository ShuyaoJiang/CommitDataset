[+++ b/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.search.fetch.source.FetchSourceContext;, +    private String[] fields;, +    private FetchSourceContext fetchSourceContext;, +    /**, +     * Allows setting the {@link FetchSourceContext} for this request, controlling if and how _source should be returned., +     */, +    public ExplainRequest fetchSourceContext(FetchSourceContext context) {, +        this.fetchSourceContext = context;, +        return this;, +    }, +, +    public FetchSourceContext fetchSourceContext() {, +        return fetchSourceContext;, +    }, +, +, +, +        fetchSourceContext = FetchSourceContext.optionalReadFromStream(in);, +, +        FetchSourceContext.optionalWriteToStream(fetchSourceContext, out);, +++ b/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.search.fetch.source.FetchSourceContext;, +    private String[] fields;, +    private FetchSourceContext fetchSourceContext;, +    /**, +     * Allows setting the {@link FetchSourceContext} for this request, controlling if and how _source should be returned., +     */, +    public ExplainRequest fetchSourceContext(FetchSourceContext context) {, +        this.fetchSourceContext = context;, +        return this;, +    }, +, +    public FetchSourceContext fetchSourceContext() {, +        return fetchSourceContext;, +    }, +, +, +, +        fetchSourceContext = FetchSourceContext.optionalReadFromStream(in);, +, +        FetchSourceContext.optionalWriteToStream(fetchSourceContext, out);, +++ b/src/main/java/org/elasticsearch/action/explain/ExplainRequestBuilder.java, +import org.elasticsearch.common.Nullable;, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.search.fetch.source.FetchSourceContext;, +     * Indicates whether the response should contain the stored _source, +     *, +     *, +     * @param fetch, +     * @return, +     */, +    public ExplainRequestBuilder setFetchSource(boolean fetch) {, +        FetchSourceContext context = request.fetchSourceContext();, +        if (context == null) {, +            request.fetchSourceContext(new FetchSourceContext(fetch));, +        }, +        else {, +            context.fetchSource(fetch);, +        }, +        return this;, +    }, +, +    /**, +     * Indicate that _source should be returned, with an "include" and/or "exclude" set which can include simple wildcard, +     * elements., +     *, +     * @param include An optional include (optionally wildcarded) pattern to filter the returned _source, +     * @param exclude An optional exclude (optionally wildcarded) pattern to filter the returned _source, +     */, +    public ExplainRequestBuilder setFetchSource(@Nullable String include, @Nullable String exclude) {, +        return setFetchSource(, +                include == null? Strings.EMPTY_ARRAY : new String[] {include},, +                exclude == null? Strings.EMPTY_ARRAY : new String[] {exclude});, +    }, +, +    /**, +     * Indicate that _source should be returned, with an "include" and/or "exclude" set which can include simple wildcard, +     * elements., +     *, +     * @param includes An optional list of include (optionally wildcarded) pattern to filter the returned _source, +     * @param excludes An optional list of exclude (optionally wildcarded) pattern to filter the returned _source, +     */, +    public ExplainRequestBuilder setFetchSource(@Nullable String[] includes, @Nullable String[] excludes) {, +        FetchSourceContext context = request.fetchSourceContext();, +        if (context == null) {, +            request.fetchSourceContext(new FetchSourceContext(includes, excludes));, +        }, +        else {, +            context.fetchSource(true);, +            context.includes(includes);, +            context.excludes(excludes);, +        }, +        return this;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/action/explain/ExplainRequest.java]