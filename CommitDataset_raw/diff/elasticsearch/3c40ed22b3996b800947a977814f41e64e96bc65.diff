[+++ b/.gitignore, +**/.local*, +/bin/, +++ b/.gitignore, +**/.local*, +/bin/, +++ b/build.gradle, +  classname 'org.elasticsearch.mapper.attachments.MapperAttachmentsPlugin', +  compile('org.apache.tika:tika-parsers:1.11') {, +++ b/.gitignore, +**/.local*, +/bin/, +++ b/build.gradle, +  classname 'org.elasticsearch.mapper.attachments.MapperAttachmentsPlugin', +  compile('org.apache.tika:tika-parsers:1.11') {, +++ /dev/null, +++ b/.gitignore, +**/.local*, +/bin/, +++ b/build.gradle, +  classname 'org.elasticsearch.mapper.attachments.MapperAttachmentsPlugin', +  compile('org.apache.tika:tika-parsers:1.11') {, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/mapper/attachments/AttachmentMapper.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.mapper.attachments;, +, +import org.apache.lucene.document.Field;, +import org.apache.lucene.index.IndexOptions;, +import org.apache.tika.Tika;, +import org.apache.tika.exception.TikaException;, +import org.apache.tika.language.LanguageIdentifier;, +import org.apache.tika.metadata.Metadata;, +import org.elasticsearch.SpecialPermission;, +import org.elasticsearch.Version;, +import org.elasticsearch.common.collect.Iterators;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.logging.ESLoggerFactory;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.index.mapper.*;, +, +import java.io.IOException;, +import java.security.AccessController;, +import java.security.PrivilegedActionException;, +import java.security.PrivilegedExceptionAction;, +import java.util.*;, +, +import static org.elasticsearch.index.mapper.MapperBuilders.*;, +import static org.elasticsearch.index.mapper.core.TypeParsers.parseMultiField;, +import static org.elasticsearch.index.mapper.core.TypeParsers.parsePathType;, +, +/**, + * <pre>, + *      "field1" : "...", + * </pre>, + * <p>Or:, + * <pre>, + * {, + *      "file1" : {, + *          "_content_type" : "application/pdf",, + *          "_content_length" : "500000000",, + *          "_name" : "..../something.pdf",, + *          "_content" : "", + *      }, + * }, + * </pre>, + * <p>, + * _content_length = Specify the maximum amount of characters to extract from the attachment. If not specified, then the default for, + * tika is 100,000 characters. Caution is required when setting large values as this can cause memory issues., + */, +public class AttachmentMapper extends FieldMapper {, +, +    private static ESLogger logger = ESLoggerFactory.getLogger("mapper.attachment");, +, +    public static final String CONTENT_TYPE = "attachment";, +, +    public static class Defaults {, +        public static final ContentPath.Type PATH_TYPE = ContentPath.Type.FULL;, +]