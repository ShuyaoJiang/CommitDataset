[+++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +import org.apache.lucene.util.BytesRef;, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (unsafe) {, +            return super.readBytesRef(length);, +        }, +        BytesRef bytes = new BytesRef(buf, pos, length);, +        pos += length;, +        return bytes;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +import org.apache.lucene.util.BytesRef;, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (unsafe) {, +            return super.readBytesRef(length);, +        }, +        BytesRef bytes = new BytesRef(buf, pos, length);, +        pos += length;, +        return bytes;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        return readBytesRef(length);, +    }, +, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (length == 0) {, +            return new BytesRef();, +        }, +        readBytes(bytes, 0, length);, +        return new BytesRef(bytes, 0, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +import org.apache.lucene.util.BytesRef;, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (unsafe) {, +            return super.readBytesRef(length);, +        }, +        BytesRef bytes = new BytesRef(buf, pos, length);, +        pos += length;, +        return bytes;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        return readBytesRef(length);, +    }, +, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (length == 0) {, +            return new BytesRef();, +        }, +        readBytes(bytes, 0, length);, +        return new BytesRef(bytes, 0, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/src/main/java/org/elasticsearch/common/io/stream/BytesStreamInput.java, +import org.apache.lucene.util.BytesRef;, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (unsafe) {, +            return super.readBytesRef(length);, +        }, +        BytesRef bytes = new BytesRef(buf, pos, length);, +        pos += length;, +        return bytes;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +        return readBytesRef(length);, +    }, +, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (length == 0) {, +            return new BytesRef();, +        }, +        readBytes(bytes, 0, length);, +        return new BytesRef(bytes, 0, length);, +++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +++ b/src/main/java/org/elasticsearch/transport/netty/ChannelBufferStreamInput.java, +import org.apache.lucene.util.BytesRef;, +    public BytesRef readBytesRef(int length) throws IOException {, +        if (!buffer.hasArray()) {, +            return super.readBytesRef(length);, +        }, +        BytesRef bytesRef = new BytesRef(buffer.array(), buffer.arrayOffset() + buffer.readerIndex(), length);, +        buffer.skipBytes(length);, +        return bytesRef;, +    }, +, +    @Override]