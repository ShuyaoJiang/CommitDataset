[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +        String endpoint;, +        if (tvrequest.getType() != null) {, +            endpoint = new EndpointBuilder().addPathPart(tvrequest.getIndex(), tvrequest.getType(), tvrequest.getId()), +                .addPathPartAsIs("_termvectors"), +                .build();, +        } else {, +            endpoint = new EndpointBuilder().addPathPart(tvrequest.getIndex()), +                .addPathPartAsIs("_termvectors"), +                .addPathPart(tvrequest.getId()), +                .build();, +        }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +        String endpoint;, +        if (tvrequest.getType() != null) {, +            endpoint = new EndpointBuilder().addPathPart(tvrequest.getIndex(), tvrequest.getType(), tvrequest.getId()), +                .addPathPartAsIs("_termvectors"), +                .build();, +        } else {, +            endpoint = new EndpointBuilder().addPathPart(tvrequest.getIndex()), +                .addPathPartAsIs("_termvectors"), +                .addPathPart(tvrequest.getId()), +                .build();, +        }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/TermVectorsRequest.java, +import org.elasticsearch.common.Nullable;, +    @Nullable private final String type;, +    /**, +     * Constructs TermVectorRequest for the given document, +     *, +     * @param index - index of the document, +     * @param docId - id of the document, +     */, +    public TermVectorsRequest(String index, String docId) {, +        this.index = index;, +        this.type = null;, +        this.id = docId;, +    }, +     *, +     *, +     * @deprecated Types are in the process of being removed, use, +     * {@link #TermVectorsRequest(String, String)} instead., +    @Deprecated, +     *, +     * @param index - index of the document, +     * @param docBuilder - an artificial document, +     */, +    public TermVectorsRequest(String index, XContentBuilder docBuilder) {, +        this.index = index;, +        this.type = null;, +        this.docBuilder = docBuilder;, +    }, +, +    /**, +     * Constructs TermVectorRequest for an artificial document, +     *, +     * @deprecated Types are in the process of being removed, use, +     * {@link TermVectorsRequest(String, XContentBuilder)} instead., +    @Deprecated, +     *, +     * @deprecated Types are in the process of being removed., +    @Deprecated, +        if (type != null) {, +        }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +        String endpoint;, +        if (tvrequest.getType() != null) {, +            endpoint = new EndpointBuilder().addPathPart(tvrequest.getIndex(), tvrequest.getType(), tvrequest.getId()), +                .addPathPartAsIs("_termvectors"), +                .build();, +        } else {, +            endpoint = new EndpointBuilder().addPathPart(tvrequest.getIndex()), +                .addPathPartAsIs("_termvectors"), +                .addPathPart(tvrequest.getId()), +                .build();, +        }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/TermVectorsRequest.java, +import org.elasticsearch.common.Nullable;, +    @Nullable private final String type;, +    /**, +     * Constructs TermVectorRequest for the given document, +     *, +     * @param index - index of the document, +     * @param docId - id of the document, +     */, +    public TermVectorsRequest(String index, String docId) {, +        this.index = index;, +        this.type = null;, +        this.id = docId;, +    }, +     *, +     *, +     * @deprecated Types are in the process of being removed, use, +     * {@link #TermVectorsRequest(String, String)} instead., +    @Deprecated, +     *, +     * @param index - index of the document]