[+++ b/docs/reference/mapping/date-format.asciidoc, +(rounding). The units supported are `y` (year), `M` (month), `w` (week), `h` (hour),, +++ b/docs/reference/mapping/date-format.asciidoc, +(rounding). The units supported are `y` (year), `M` (month), `w` (week), `h` (hour),, +++ b/src/main/java/org/elasticsearch/common/joda/DateMathParser.java, +                    case 'y':, +                        if (type == 0) {, +                            if (roundUp) {, +                                dateTime.yearOfCentury().roundCeiling();, +                            } else {, +                                dateTime.yearOfCentury().roundFloor();, +                            }, +                        } else if (type == 1) {, +                            dateTime.addYears(num);, +                        } else if (type == 2) {, +                            dateTime.addYears(-num);, +                        }, +                        break;, +++ b/docs/reference/mapping/date-format.asciidoc, +(rounding). The units supported are `y` (year), `M` (month), `w` (week), `h` (hour),, +++ b/src/main/java/org/elasticsearch/common/joda/DateMathParser.java, +                    case 'y':, +                        if (type == 0) {, +                            if (roundUp) {, +                                dateTime.yearOfCentury().roundCeiling();, +                            } else {, +                                dateTime.yearOfCentury().roundFloor();, +                            }, +                        } else if (type == 1) {, +                            dateTime.addYears(num);, +                        } else if (type == 2) {, +                            dateTime.addYears(-num);, +                        }, +                        break;, +++ b/src/test/java/org/elasticsearch/common/joda/DateMathParserTests.java, +        , +        assertThat(parser.parse("now+4y", 0), equalTo(TimeUnit.DAYS.toMillis(4*365 + 1)));, +        , +        assertThat(parser.parse("2013-01-01||+1y", 0), equalTo(parser.parse("2013-01-01", 0) + TimeUnit.DAYS.toMillis(365)));, +        assertThat(parser.parse("2013-03-03||/y", 0), equalTo(parser.parse("2013-01-01", 0)));, +        assertThat(parser.parseUpperInclusive("2013-03-03||/y", 0), equalTo(parser.parse("2014-01-01", 0)));]