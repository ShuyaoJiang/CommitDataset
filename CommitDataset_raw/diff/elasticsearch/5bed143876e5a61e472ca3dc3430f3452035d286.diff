[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            configureCheckstyle(project),, +, +    private static Task configureCheckstyle(Project project) {, +        Task checkstyleTask = project.tasks.create('checkstyle'), +        // Apply the checkstyle plugin to create `checkstyleMain` and `checkstyleTest`. It only, +        // creates them if there is main or test code to check and it makes `check` depend, +        // on them. But we want `precommit` to depend on `checkstyle` which depends on them so, +        // we have to swap them., +        project.pluginManager.apply('checkstyle'), +        project.checkstyle {, +            config = project.resources.text.fromFile(, +                PrecommitTasks.getResource('/checkstyle.xml'), 'UTF-8'), +        }, +        for (String taskName : ['checkstyleMain', 'checkstyleTest']) {, +            Task task = project.tasks.findByName(taskName), +            if (task != null) {, +                project.tasks['check'].dependsOn.remove(task), +                checkstyleTask.dependsOn(task), +            }, +        }, +        return checkstyleTask, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesTask.groovy, +            if (extension.classname == null) {, +                throw new InvalidUserDataException('classname is a required setting for esplugin'), +                if (extension.isolated == false) {, +            'classname': extension.classname, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            configureCheckstyle(project),, +, +    private static Task configureCheckstyle(Project project) {, +        Task checkstyleTask = project.tasks.create('checkstyle'), +        // Apply the checkstyle plugin to create `checkstyleMain` and `checkstyleTest`. It only, +        // creates them if there is main or test code to check and it makes `check` depend, +        // on them. But we want `precommit` to depend on `checkstyle` which depends on them so, +        // we have to swap them., +        project.pluginManager.apply('checkstyle'), +        project.checkstyle {, +            config = project.resources.text.fromFile(, +                PrecommitTasks.getResource('/checkstyle.xml'), 'UTF-8'), +        }, +        for (String taskName : ['checkstyleMain', 'checkstyleTest']) {, +            Task task = project.tasks.findByName(taskName), +            if (task != null) {, +                project.tasks['check'].dependsOn.remove(task), +                checkstyleTask.dependsOn(task), +            }, +        }, +        return checkstyleTask, +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +        args.add("-Des.node.portsfile=true"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            systemProperty 'jna.nosys', 'true', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginPropertiesExtension.groovy]