[+++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +import org.elasticsearch.index.get.GetField;, +import org.elasticsearch.search.lookup.SourceLookup;, +import java.util.ArrayList;, +import static com.google.common.collect.Maps.newHashMapWithExpectedSize;, +, +    protected Map<String, GetField> extractFieldsFromSource(final UpdateRequest request, final Map<String, Object> source) {, +        Map<String, GetField> fields = null;, +        if (request.fields() != null && request.fields().length > 0) {, +            SourceLookup sourceLookup = new SourceLookup();, +            sourceLookup.setNextSource(source);, +            for (String field : request.fields()) {, +                Object value = null;, +                if (field.equals("_source")) {, +                    value = source;, +                } else {, +                    value = sourceLookup.extractValue(field);, +                }, +                if (value != null) {, +                    if (fields == null) {, +                        fields = newHashMapWithExpectedSize(2);, +                    }, +                    GetField getField = fields.get(field);, +                    if (getField == null) {, +                        getField = new GetField(field, new ArrayList<Object>(2));, +                        fields.put(field, getField);, +                    }, +                    getField.values().add(value);, +                }, +            }, +        }, +, +        return fields;, +    }, +, +        // Extract fields from updated source if necessary, +        final Map<String, GetField> fields = extractFieldsFromSource(request, source);, +, +                    update.fields(fields);, +                    update.fields(fields);, +            UpdateResponse update = new UpdateResponse(getResult.index(), getResult.type(), getResult.id(), getResult.version());, +            update.fields(fields);, +            listener.onResponse(update);, +++ b/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java, +import org.elasticsearch.index.get.GetField;, +import org.elasticsearch.search.lookup.SourceLookup;, +import java.util.ArrayList;, +import static com.google.common.collect.Maps.newHashMapWithExpectedSize;, +, +    protected Map<String, GetField> extractFieldsFromSource(final UpdateRequest request, final Map<String, Object> source) {, +        Map<String, GetField> fields = null;, +        if (request.fields() != null && request.fields().length > 0) {, +            SourceLookup sourceLookup = new SourceLookup();, +            sourceLookup.setNextSource(source);, +            for (String field : request.fields()) {, +                Object value = null;, +                if (field.equals("_source")) {, +                    value = source;, +                } else {, +                    value = sourceLookup.extractValue(field);, +                }, +                if (value != null) {, +                    if (fields == null) {, +                        fields = newHashMapWithExpectedSize(2);, +                    }, +                    GetField getField = fields.get(field);, +                    if (getField == null) {, +                        getField = new GetField(field, new ArrayList<Object>(2));, +                        fields.put(field, getField);, +                    }, +                    getField.values().add(value);, +                }, +            }, +        }, +, +        return fields;, +    }, +, +        // Extract fields from updated source if necessary, +        final Map<String, GetField> fields = extractFieldsFromSource(request, source);, +, +                    update.fields(fields);, +                    update.fields(fields);, +            UpdateResponse update = new UpdateResponse(getResult.index(), getResult.type(), getResult.id(), getResult.version());, +            update.fields(fields);, +            listener.onResponse(update);, +++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +    private String[] fields;, +, +     * Explicitly specify the fields that will be returned. By default, nothing is returned., +     */, +    public UpdateRequest fields(String... fields) {, +        this.fields = fields;, +        return this;, +    }, +, +    /**, +     * Get the fields to be returned., +     */, +    public String[] fields() {]