[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequest.java, +    private String alias;, +    public RolloverRequest(String alias) {, +        this.alias = alias;, +        if (alias == null) {, +            validationException = addValidationError("index alias is missing", validationException);, +        alias = in.readString();, +        out.writeString(alias);, +        return new String[] {alias};, +    public void setAlias(String alias) {, +        this.alias = alias;, +    public String getAlias() {, +        return alias;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequest.java, +    private String alias;, +    public RolloverRequest(String alias) {, +        this.alias = alias;, +        if (alias == null) {, +            validationException = addValidationError("index alias is missing", validationException);, +        alias = in.readString();, +        out.writeString(alias);, +        return new String[] {alias};, +    public void setAlias(String alias) {, +        this.alias = alias;, +    public String getAlias() {, +        return alias;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequestBuilder.java, +    public RolloverRequestBuilder setAlias(String sourceAlias) {, +        this.request.setAlias(sourceAlias);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequest.java, +    private String alias;, +    public RolloverRequest(String alias) {, +        this.alias = alias;, +        if (alias == null) {, +            validationException = addValidationError("index alias is missing", validationException);, +        alias = in.readString();, +        out.writeString(alias);, +        return new String[] {alias};, +    public void setAlias(String alias) {, +        this.alias = alias;, +    public String getAlias() {, +        return alias;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequestBuilder.java, +    public RolloverRequestBuilder setAlias(String sourceAlias) {, +        this.request.setAlias(sourceAlias);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(rolloverRequest.getAlias());, +        actions[0] = new AliasAction(AliasAction.Type.ADD, newIndex, request.getAlias());, +        actions[1] = new AliasAction(AliasAction.Type.REMOVE, oldIndex, request.getAlias());, +        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(request.getAlias());, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequest.java, +    private String alias;, +    public RolloverRequest(String alias) {, +        this.alias = alias;, +        if (alias == null) {, +            validationException = addValidationError("index alias is missing", validationException);, +        alias = in.readString();, +        out.writeString(alias);, +        return new String[] {alias};, +    public void setAlias(String alias) {, +        this.alias = alias;, +    public String getAlias() {, +        return alias;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequestBuilder.java, +    public RolloverRequestBuilder setAlias(String sourceAlias) {, +        this.request.setAlias(sourceAlias);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(rolloverRequest.getAlias());, +        actions[0] = new AliasAction(AliasAction.Type.ADD, newIndex, request.getAlias());, +        actions[1] = new AliasAction(AliasAction.Type.REMOVE, oldIndex, request.getAlias());, +        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(request.getAlias());, +++ b/core/src/main/java/org/elasticsearch/client/support/AbstractClient.java, +        public RolloverRequestBuilder prepareRolloverIndex(String alias) {, +            return new RolloverRequestBuilder(this, RolloverAction.INSTANCE).setAlias(alias);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequest.java, +    private String alias;, +    public RolloverRequest(String alias) {, +        this.alias = alias;, +        if (alias == null) {, +            validationException = addValidationError("index alias is missing", validationException);, +        alias = in.readString();, +        out.writeString(alias);, +        return new String[] {alias};, +    public void setAlias(String alias) {, +        this.alias = alias;, +    public String getAlias() {, +        return alias;, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/RolloverRequestBuilder.java, +    public RolloverRequestBuilder setAlias(String sourceAlias) {, +        this.request.setAlias(sourceAlias);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java, +        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(rolloverRequest.getAlias());, +        actions[0] = new AliasAction(AliasAction.Type.ADD, newIndex, request.getAlias());, +        actions[1] = new AliasAction(AliasAction.Type.REMOVE, oldIndex, request.getAlias());, +        final AliasOrIndex aliasOrIndex = metaData.getAliasAndIndexLookup().get(request.getAlias());, +++ b/core/src/main/java/org/elasticsearch/client/support/AbstractClient.java, +        public RolloverRequestBuilder prepareRolloverIndex(String alias) {, +            return new RolloverRequestBuilder(this, RolloverAction.INSTANCE).setAlias(alias);, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestRolloverIndexAction.java, +        controller.registerHandler(RestRequest.Method.POST, "/{index}/_rollover", this);]