[+++ b/dev-tools/forbidden/all-signatures.txt, +, +@defaultMessage Specify a location for the temp file/directory instead., +java.nio.file.Files#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]), +java.nio.file.Files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]), +++ b/dev-tools/forbidden/all-signatures.txt, +, +@defaultMessage Specify a location for the temp file/directory instead., +java.nio.file.Files#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]), +java.nio.file.Files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]), +++ b/dev-tools/forbidden/core-signatures.txt, +, +@defaultMessage Don't try reading from paths that are not configured in Environment, resolve from Environment instead, +org.elasticsearch.common.io.PathUtils#get(java.lang.String, java.lang.String[]), +org.elasticsearch.common.io.PathUtils#get(java.net.URI), +++ b/dev-tools/forbidden/all-signatures.txt, +, +@defaultMessage Specify a location for the temp file/directory instead., +java.nio.file.Files#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]), +java.nio.file.Files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]), +++ b/dev-tools/forbidden/core-signatures.txt, +, +@defaultMessage Don't try reading from paths that are not configured in Environment, resolve from Environment instead, +org.elasticsearch.common.io.PathUtils#get(java.lang.String, java.lang.String[]), +org.elasticsearch.common.io.PathUtils#get(java.net.URI), +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/dev-tools/forbidden/all-signatures.txt, +, +@defaultMessage Specify a location for the temp file/directory instead., +java.nio.file.Files#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]), +java.nio.file.Files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]), +++ b/dev-tools/forbidden/core-signatures.txt, +, +@defaultMessage Don't try reading from paths that are not configured in Environment, resolve from Environment instead, +org.elasticsearch.common.io.PathUtils#get(java.lang.String, java.lang.String[]), +org.elasticsearch.common.io.PathUtils#get(java.net.URI), +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.common.SuppressForbidden;, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +    @SuppressForbidden(reason = "accesses jvm default tempdir as a self-test"), +++ b/dev-tools/forbidden/all-signatures.txt, +, +@defaultMessage Specify a location for the temp file/directory instead., +java.nio.file.Files#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]), +java.nio.file.Files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]), +++ b/dev-tools/forbidden/core-signatures.txt, +, +@defaultMessage Don't try reading from paths that are not configured in Environment, resolve from Environment instead, +org.elasticsearch.common.io.PathUtils#get(java.lang.String, java.lang.String[]), +org.elasticsearch.common.io.PathUtils#get(java.net.URI), +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.common.SuppressForbidden;, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +    @SuppressForbidden(reason = "accesses jvm default tempdir as a self-test"), +++ b/src/main/java/org/elasticsearch/common/io/PathUtils.java, +// TODO: can we move this to the .env package and make it package-private?, +++ b/dev-tools/forbidden/all-signatures.txt, +, +@defaultMessage Specify a location for the temp file/directory instead., +java.nio.file.Files#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]), +java.nio.file.Files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]), +++ b/dev-tools/forbidden/core-signatures.txt, +, +@defaultMessage Don't try reading from paths that are not configured in Environment, resolve from Environment instead, +org.elasticsearch.common.io.PathUtils#get(java.lang.String, java.lang.String[]), +org.elasticsearch.common.io.PathUtils#get(java.net.URI), +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.common.SuppressForbidden;, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +    @SuppressForbidden(reason = "accesses jvm default tempdir as a self-test"), +++ b/src/main/java/org/elasticsearch/common/io/PathUtils.java, +// TODO: can we move this to the .env package and make it package-private?, +++ b/src/main/java/org/elasticsearch/env/ESFileStore.java, +import org.elasticsearch.common.SuppressForbidden;, +    @SuppressForbidden(reason = "tries to determine if disk is spinning"), +    // TODO: move PathUtils to be package-private here instead of , +    // public+forbidden api!, +++ b/dev-tools/forbidden/all-signatures.txt, +, +@defaultMessage Specify a location for the temp file/directory instead., +java.nio.file.Files#createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]), +java.nio.file.Files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]), +++ b/dev-tools/forbidden/core-signatures.txt, +, +@defaultMessage Don't try reading from paths that are not configured in Environment, resolve from Environment instead, +org.elasticsearch.common.io.PathUtils#get(java.lang.String, java.lang.String[]), +org.elasticsearch.common.io.PathUtils#get(java.net.URI), +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +++ b/src/main/java/org/elasticsearch/bootstrap/Security.java, +import org.elasticsearch.common.SuppressForbidden;, +        addPath(policy, environment.tmpFile(), "read,readlink,write,delete");, +    @SuppressForbidden(reason = "accesses jvm default tempdir as a self-test"), +++ b/src/main/java/org/elasticsearch/common/io/PathUtils.java, +// TODO: can we move this to the .env package and make it package-private?, +++ b/src/main/java/org/elasticsearch/env/ESFileStore.java, +import org.elasticsearch.common.SuppressForbidden;, +    @SuppressForbidden(reason = "tries to determine if disk is spinning")]