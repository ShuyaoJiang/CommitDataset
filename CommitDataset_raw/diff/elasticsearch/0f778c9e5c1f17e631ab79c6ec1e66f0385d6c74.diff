[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/TapLoggerOutputStream.groovy, +class TapLoggerOutputStream extends LoggingOutputStream {, +  ProgressLogger progressLogger, +  Logger logger, +  int testsCompleted = 0, +  int testsFailed = 0, +  int testsSkipped = 0, +  Integer testCount, +  String countsFormat, +    progressLogger.setDescription("TAP output for `$args.command`"), +    progressLogger.started(), +    progressLogger.progress("Starting `$args.command`..."), +  void flush() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/TapLoggerOutputStream.groovy, +class TapLoggerOutputStream extends LoggingOutputStream {, +  ProgressLogger progressLogger, +  Logger logger, +  int testsCompleted = 0, +  int testsFailed = 0, +  int testsSkipped = 0, +  Integer testCount, +  String countsFormat, +    progressLogger.setDescription("TAP output for `$args.command`"), +    progressLogger.started(), +    progressLogger.progress("Starting `$args.command`..."), +  void flush() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantLoggerOutputStream.groovy, +    ProgressLoggerFactory progressLoggerFactory, +, +, +    private ProgressLogger progressLogger, +    String squashedPrefix, +    String lastLine = '', +    boolean inProgressReport = false, +    String heading = '', +        progressLogger.started(), +        progressLogger.progress("Starting `$args.command`..."), +    void flush() {, +        // debugPrintLine(line) // Uncomment me to log every incoming line, +        // debugLogLine(line) // Uncomment me to log every line we add to the logger, +, +    void debugPrintLine(line) {, +        System.out.print '----------> ', +        for (int i = start; i < end; i++) {, +            switch (buffer[i] as char) {, +                case ' '..'~':, +                    System.out.print buffer[i] as char, +                    break, +                default:, +                    System.out.print '%', +                    System.out.print Integer.toHexString(buffer[i]), +            }, +        }, +        System.out.print '\n', +    }, +, +    void debugLogLine(line) {, +        System.out.print '>>>>>>>>>>> ', +        System.out.print line, +        System.out.print '\n', +    }, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/TapLoggerOutputStream.groovy, +class TapLoggerOutputStream extends LoggingOutputStream {, +  ProgressLogger progressLogger, +  Logger logger, +  int testsCompleted = 0, +  int testsFailed = 0, +  int testsSkipped = 0, +  Integer testCount, +  String countsFormat, +    progressLogger.setDescription("TAP output for `$args.command`"), +    progressLogger.started(), +    progressLogger.progress("Starting `$args.command`..."), +  void flush() {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/vagrant/VagrantLoggerOutputStream.groovy, +    ProgressLoggerFactory progressLoggerFactory, +, +, +    private ProgressLogger progressLogger, +    String squashedPrefix, +    String lastLine = '', +    boolean inProgressReport = false, +    String heading = '', +        progressLogger.started(), +        progressLogger.progress("Starting `$args.command`..."), +    void flush() {, +        // debugPrintLine(line) // Uncomment me to log every incoming line, +        // debugLogLine(line) // Uncomment me to log every line we add to the logger, +, +    void debugPrintLine(line) {, +        System.out.print '----------> ', +        for (int i = start; i < end; i++) {, +            switch (buffer[i] as char) {, +                case ' '..'~':, +                    System.out.print buffer[i] as char, +                    break, +                default:, +                    System.out.print '%', +                    System.out.print Integer.toHexString(buffer[i]), +            }]