[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +    private final TimeValue mergeInterval;, +    private volatile ScheduledFuture mergeScheduleFuture;, +        mergeInterval = indexSettings.getAsTime("index.merge.async_interval", TimeValue.timeValueSeconds(1));, +                if (mergeScheduleFuture != null) {, +                    mergeScheduleFuture.cancel(true);, +                    mergeScheduleFuture = null;, +        if (mergeInterval.millis() > 0) {, +            mergeScheduleFuture = threadPool.schedule(mergeInterval, ThreadPool.Names.MERGE, new EngineMerger());, +            logger.debug("scheduling optimizer / merger every {}", mergeInterval);, +    private class EngineMerger implements Runnable {, +                mergeScheduleFuture = threadPool.schedule(mergeInterval, ThreadPool.Names.MERGE, this);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +    private final TimeValue mergeInterval;, +    private volatile ScheduledFuture mergeScheduleFuture;, +        mergeInterval = indexSettings.getAsTime("index.merge.async_interval", TimeValue.timeValueSeconds(1));, +                if (mergeScheduleFuture != null) {, +                    mergeScheduleFuture.cancel(true);, +                    mergeScheduleFuture = null;, +        if (mergeInterval.millis() > 0) {, +            mergeScheduleFuture = threadPool.schedule(mergeInterval, ThreadPool.Names.MERGE, new EngineMerger());, +            logger.debug("scheduling optimizer / merger every {}", mergeInterval);, +    private class EngineMerger implements Runnable {, +                mergeScheduleFuture = threadPool.schedule(mergeInterval, ThreadPool.Names.MERGE, this);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/threadpool/ThreadPool.java, +        public static final String MERGE = "merge";, +        executors.put(Names.MERGE, build(Names.MERGE, "scaling", groupSettings.get(Names.MERGE), settingsBuilder().put("keep_alive", "30s").put("size", 20).build()));]