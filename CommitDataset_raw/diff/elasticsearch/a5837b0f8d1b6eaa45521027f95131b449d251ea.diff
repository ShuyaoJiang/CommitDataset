[+++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.routing.GroupShardsIterator;, +    , +    protected int numAssignedShards(String... indices) {, +        ClusterState state = client().admin().cluster().prepareState().execute().actionGet().getState();, +        GroupShardsIterator allAssignedShardsGrouped = state.routingTable().allAssignedShardsGrouped(indices, true);, +        return allAssignedShardsGrouped.size();, +    }, +, +++ b/src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.routing.GroupShardsIterator;, +    , +    protected int numAssignedShards(String... indices) {, +        ClusterState state = client().admin().cluster().prepareState().execute().actionGet().getState();, +        GroupShardsIterator allAssignedShardsGrouped = state.routingTable().allAssignedShardsGrouped(indices, true);, +        return allAssignedShardsGrouped.size();, +    }, +, +++ b/src/test/java/org/elasticsearch/test/integration/search/stats/SearchStatsTests.java, +import static org.elasticsearch.index.query.QueryBuilders.matchAllQuery;, +import static org.hamcrest.MatcherAssert.assertThat;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.greaterThan;, +import static org.hamcrest.Matchers.notNullValue;, +import static org.hamcrest.Matchers.nullValue;, +, +                refresh();, +                refresh();, +        cluster().ensureAtMostNumNodes(numAssignedShards("test1", "test2"));, +        assertThat(indicesStats.getTotal().getSearch().getOpenContexts(), equalTo((long)numAssignedShards("test1")));]