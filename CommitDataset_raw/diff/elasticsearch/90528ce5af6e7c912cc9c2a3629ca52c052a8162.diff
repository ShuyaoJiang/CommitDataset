[+++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final String LATEST_DOC_VALUES_FORMAT = "Lucene54";, +    public static final String LATEST_CODEC = "Lucene54";, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final String LATEST_DOC_VALUES_FORMAT = "Lucene54";, +    public static final String LATEST_CODEC = "Lucene54";, +++ b/core/src/main/java/org/elasticsearch/index/codec/CodecService.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +            codecs.put(DEFAULT_CODEC, new Lucene54Codec());, +            codecs.put(BEST_COMPRESSION_CODEC, new Lucene54Codec(Mode.BEST_COMPRESSION));, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final String LATEST_DOC_VALUES_FORMAT = "Lucene54";, +    public static final String LATEST_CODEC = "Lucene54";, +++ b/core/src/main/java/org/elasticsearch/index/codec/CodecService.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +            codecs.put(DEFAULT_CODEC, new Lucene54Codec());, +            codecs.put(BEST_COMPRESSION_CODEC, new Lucene54Codec(Mode.BEST_COMPRESSION));, +++ b/core/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +public class PerFieldMappingPostingFormatCodec extends Lucene54Codec {, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final String LATEST_DOC_VALUES_FORMAT = "Lucene54";, +    public static final String LATEST_CODEC = "Lucene54";, +++ b/core/src/main/java/org/elasticsearch/index/codec/CodecService.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +            codecs.put(DEFAULT_CODEC, new Lucene54Codec());, +            codecs.put(BEST_COMPRESSION_CODEC, new Lucene54Codec(Mode.BEST_COMPRESSION));, +++ b/core/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +public class PerFieldMappingPostingFormatCodec extends Lucene54Codec {, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        if (query instanceof BooleanQuery) {, +                // special case for one term query and more than one field: (f1:t1 f2:t1 f3:t1), +                // we need to wrap this in additional BooleanQuery so minimum_should_match is applied correctly, +            if (minimumShouldMatch != null) {, +                booleanQuery = Queries.applyMinimumShouldMatch(booleanQuery, minimumShouldMatch);, +            }, +            query = booleanQuery;, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final String LATEST_DOC_VALUES_FORMAT = "Lucene54";, +    public static final String LATEST_CODEC = "Lucene54";, +++ b/core/src/main/java/org/elasticsearch/index/codec/CodecService.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +            codecs.put(DEFAULT_CODEC, new Lucene54Codec());, +            codecs.put(BEST_COMPRESSION_CODEC, new Lucene54Codec(Mode.BEST_COMPRESSION));, +++ b/core/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +public class PerFieldMappingPostingFormatCodec extends Lucene54Codec {, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        if (query instanceof BooleanQuery) {, +                // special case for one term query and more than one field: (f1:t1 f2:t1 f3:t1), +                // we need to wrap this in additional BooleanQuery so minimum_should_match is applied correctly, +            if (minimumShouldMatch != null) {, +                booleanQuery = Queries.applyMinimumShouldMatch(booleanQuery, minimumShouldMatch);, +            }, +            query = booleanQuery;, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1710880.jar}" {, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final String LATEST_DOC_VALUES_FORMAT = "Lucene54";, +    public static final String LATEST_CODEC = "Lucene54";, +++ b/core/src/main/java/org/elasticsearch/index/codec/CodecService.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +            codecs.put(DEFAULT_CODEC, new Lucene54Codec());, +            codecs.put(BEST_COMPRESSION_CODEC, new Lucene54Codec(Mode.BEST_COMPRESSION));, +++ b/core/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +public class PerFieldMappingPostingFormatCodec extends Lucene54Codec {, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        if (query instanceof BooleanQuery) {, +                // special case for one term query and more than one field: (f1:t1 f2:t1 f3:t1), +                // we need to wrap this in additional BooleanQuery so minimum_should_match is applied correctly, +            if (minimumShouldMatch != null) {, +                booleanQuery = Queries.applyMinimumShouldMatch(booleanQuery, minimumShouldMatch);, +            }, +            query = booleanQuery;, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1710880.jar}" {, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/test-framework.policy, +grant codeBase "${codebase.lucene-test-framework-5.4.0-snapshot-1710880.jar}" {, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    public static final String LATEST_DOC_VALUES_FORMAT = "Lucene54";, +    public static final String LATEST_CODEC = "Lucene54";, +++ b/core/src/main/java/org/elasticsearch/index/codec/CodecService.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +            codecs.put(DEFAULT_CODEC, new Lucene54Codec());, +            codecs.put(BEST_COMPRESSION_CODEC, new Lucene54Codec(Mode.BEST_COMPRESSION));, +++ b/core/src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java, +import org.apache.lucene.codecs.lucene54.Lucene54Codec;, +public class PerFieldMappingPostingFormatCodec extends Lucene54Codec {, +++ b/core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java, +        if (query instanceof BooleanQuery) {, +                // special case for one term query and more than one field: (f1:t1 f2:t1 f3:t1), +                // we need to wrap this in additional BooleanQuery so minimum_should_match is applied correctly, +            if (minimumShouldMatch != null) {, +                booleanQuery = Queries.applyMinimumShouldMatch(booleanQuery, minimumShouldMatch);, +            }, +            query = booleanQuery;, +++ b/core/src/main/resources/org/elasticsearch/bootstrap/security.policy, +grant codeBase "${codebase.lucene-core-5.4.0-snapshot-1710880.jar}" {]