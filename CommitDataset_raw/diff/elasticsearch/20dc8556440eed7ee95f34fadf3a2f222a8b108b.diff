[+++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java, +    // This needs to be a Set to avoid duplicate reader context entries via (#setNextReader(...), it can get invoked multiple times with the same reader context), +    private Set<LeafReaderContext> replay = new LinkedHashSet<>();, +, +        if (replay == null) {, +            throw new IllegalStateException();, +        }, +        if (childFilter.scorer(ctx) != null) {, +            replay.add(ctx);, +        }, +        final Set<LeafReaderContext> replay = this.replay;, +        this.replay = null;, +, +        for (LeafReaderContext ctx : replay) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java, +    // This needs to be a Set to avoid duplicate reader context entries via (#setNextReader(...), it can get invoked multiple times with the same reader context), +    private Set<LeafReaderContext> replay = new LinkedHashSet<>();, +, +        if (replay == null) {, +            throw new IllegalStateException();, +        }, +        if (childFilter.scorer(ctx) != null) {, +            replay.add(ctx);, +        }, +        final Set<LeafReaderContext> replay = this.replay;, +        this.replay = null;, +, +        for (LeafReaderContext ctx : replay) {, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java, +    // This needs to be a Set to avoid duplicate reader context entries via (#setNextReader(...), it can get invoked multiple times with the same reader context), +    private Set<LeafReaderContext> replay = new LinkedHashSet<>();, +, +        if (replay == null) {, +            throw new IllegalStateException();, +        }, +        if (childFilter.scorer(ctx) != null) {, +            replay.add(ctx);, +        }, +        final Set<LeafReaderContext> replay = this.replay;, +        this.replay = null;, +, +        for (LeafReaderContext ctx : replay) {, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java, +        int numEngineSettings = randomIntBetween(0, ScriptType.values().length * scriptContexts.length);, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/monitor/os/OsInfo.java, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java, +    // This needs to be a Set to avoid duplicate reader context entries via (#setNextReader(...), it can get invoked multiple times with the same reader context), +    private Set<LeafReaderContext> replay = new LinkedHashSet<>();, +, +        if (replay == null) {, +            throw new IllegalStateException();, +        }, +        if (childFilter.scorer(ctx) != null) {, +            replay.add(ctx);, +        }, +        final Set<LeafReaderContext> replay = this.replay;, +        this.replay = null;, +, +        for (LeafReaderContext ctx : replay) {, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java, +        int numEngineSettings = randomIntBetween(0, ScriptType.values().length * scriptContexts.length);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenIT.java]