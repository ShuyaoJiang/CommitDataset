[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +                        metadata.field("routing", request.routing());, +                        metadata.field("parent", request.parent());, +                        metadata.field("version", request.version());, +                            metadata.field("version_type", "external");, +                            metadata.field("version_type", "external_gte");, +                            metadata.field("version_type", "force");, +                            metadata.field("retry_on_conflict", updateRequest.retryOnConflict());, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +                        metadata.field("routing", request.routing());, +                        metadata.field("parent", request.parent());, +                        metadata.field("version", request.version());, +                            metadata.field("version_type", "external");, +                            metadata.field("version_type", "external_gte");, +                            metadata.field("version_type", "force");, +                            metadata.field("retry_on_conflict", updateRequest.retryOnConflict());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.ParseField;, +    private static final ParseField INDEX = new ParseField("_index");, +    private static final ParseField TYPE = new ParseField("_type");, +    private static final ParseField ID = new ParseField("_id");, +    private static final ParseField ROUTING = new ParseField("routing");, +    private static final ParseField PARENT = new ParseField("parent");, +    private static final ParseField OP_TYPE = new ParseField("op_type");, +    private static final ParseField VERSION = new ParseField("version");, +    private static final ParseField VERSION_TYPE = new ParseField("version_type");, +    private static final ParseField RETRY_ON_CONFLICT = new ParseField("retry_on_conflict");, +    private static final ParseField PIPELINE = new ParseField("pipeline");, +    private static final ParseField FIELDS = new ParseField("fields");, +    private static final ParseField SOURCE = new ParseField("_source");, +, +                            if (INDEX.match(currentFieldName)){, +                            } else if (TYPE.match(currentFieldName)) {, +                            } else if (ID.match(currentFieldName)) {, +                            } else if (ROUTING.match(currentFieldName)) {, +                            } else if (PARENT.match(currentFieldName)) {, +                            } else if (OP_TYPE.match(currentFieldName)) {, +                            } else if (VERSION.match(currentFieldName)) {, +                            } else if (VERSION_TYPE.match(currentFieldName)) {, +                            } else if (RETRY_ON_CONFLICT.match(currentFieldName)) {, +                            } else if (PIPELINE.match(currentFieldName)) {, +                            } else if (FIELDS.match(currentFieldName)) {, +                            } else if (SOURCE.match(currentFieldName)) {, +                            if (FIELDS.match(currentFieldName)) {, +                        } else if (token == XContentParser.Token.START_OBJECT && SOURCE.match(currentFieldName)) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java, +                        metadata.field("routing", request.routing());, +                        metadata.field("parent", request.parent());, +                        metadata.field("version", request.version());, +                            metadata.field("version_type", "external");, +                            metadata.field("version_type", "external_gte");, +                            metadata.field("version_type", "force");, +                            metadata.field("retry_on_conflict", updateRequest.retryOnConflict());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.ParseField;, +    private static final ParseField INDEX = new ParseField("_index");, +    private static final ParseField TYPE = new ParseField("_type");, +    private static final ParseField ID = new ParseField("_id");, +    private static final ParseField ROUTING = new ParseField("routing");, +    private static final ParseField PARENT = new ParseField("parent");, +    private static final ParseField OP_TYPE = new ParseField("op_type");, +    private static final ParseField VERSION = new ParseField("version");, +    private static final ParseField VERSION_TYPE = new ParseField("version_type");, +    private static final ParseField RETRY_ON_CONFLICT = new ParseField("retry_on_conflict");, +    private static final ParseField PIPELINE = new ParseField("pipeline");, +    private static final ParseField FIELDS = new ParseField("fields");, +    private static final ParseField SOURCE = new ParseField("_source");, +, +                            if (INDEX.match(currentFieldName)){, +                            } else if (TYPE.match(currentFieldName)) {, +                            } else if (ID.match(currentFieldName)) {, +                            } else if (ROUTING.match(currentFieldName)) {, +                            } else if (PARENT.match(currentFieldName)) {, +                            } else if (OP_TYPE.match(currentFieldName)) {, +                            } else if (VERSION.match(currentFieldName)) {, +                            } else if (VERSION_TYPE.match(currentFieldName)) {, +                            } else if (RETRY_ON_CONFLICT.match(currentFieldName)) {, +                            } else if (PIPELINE.match(currentFieldName)) {, +                            } else if (FIELDS.match(currentFieldName)) {, +                            } else if (SOURCE.match(currentFieldName)) {, +                            if (FIELDS.match(currentFieldName)) {, +                        } else if (token == XContentParser.Token.START_OBJECT && SOURCE.match(currentFieldName)) {, +++ b/core/src/main/java/org/elasticsearch/action/get/MultiGetRequest.java, +import org.elasticsearch.common.ParseField;, +    private static final ParseField INDEX = new ParseField("_index");, +    private static final ParseField TYPE = new ParseField("_type");, +    private static final ParseField ID = new ParseField("_id");, +    private static final ParseField ROUTING = new ParseField("routing");, +    private static final ParseField PARENT = new ParseField("parent");, +    private static final ParseField VERSION = new ParseField("version");, +    private static final ParseField VERSION_TYPE = new ParseField("version_type");, +    private static final ParseField FIELDS = new ParseField("fields");, +    private static final ParseField STORED_FIELDS = new ParseField("stored_fields");, +    private static final ParseField SOURCE = new ParseField("_source");, +, +                    if (INDEX.match(currentFieldName)) {, +                    } else if (TYPE.match(currentFieldName)) {, +                    } else if (ID.match(currentFieldName)) {, +                    } else if (ROUTING.match(currentFieldName)) {, +                    } else if (PARENT.match(currentFieldName)) {]