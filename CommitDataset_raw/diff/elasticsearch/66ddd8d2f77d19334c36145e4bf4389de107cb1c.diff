[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SecurityDocumentationIT.java, +            // 24 system roles plus the three we created, +            assertThat(roles.size(), equalTo(27));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SecurityDocumentationIT.java, +            // 24 system roles plus the three we created, +            assertThat(roles.size(), equalTo(27));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilege.java, +import org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction;, +import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotAction;, +import org.elasticsearch.action.admin.cluster.snapshots.get.GetSnapshotsAction;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusAction;, +    private static final Automaton CREATE_SNAPSHOT_AUTOMATON = patterns(CreateSnapshotAction.NAME, SnapshotsStatusAction.NAME + "*",, +            GetSnapshotsAction.NAME, SnapshotsStatusAction.NAME, GetRepositoriesAction.NAME);, +    public static final ClusterPrivilege CREATE_SNAPSHOT =       new ClusterPrivilege("create_snapshot", CREATE_SNAPSHOT_AUTOMATON);, +            .put("create_snapshot", CREATE_SNAPSHOT), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SecurityDocumentationIT.java, +            // 24 system roles plus the three we created, +            assertThat(roles.size(), equalTo(27));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilege.java, +import org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction;, +import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotAction;, +import org.elasticsearch.action.admin.cluster.snapshots.get.GetSnapshotsAction;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusAction;, +    private static final Automaton CREATE_SNAPSHOT_AUTOMATON = patterns(CreateSnapshotAction.NAME, SnapshotsStatusAction.NAME + "*",, +            GetSnapshotsAction.NAME, SnapshotsStatusAction.NAME, GetRepositoriesAction.NAME);, +    public static final ClusterPrivilege CREATE_SNAPSHOT =       new ClusterPrivilege("create_snapshot", CREATE_SNAPSHOT_AUTOMATON);, +            .put("create_snapshot", CREATE_SNAPSHOT), +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SecurityDocumentationIT.java, +            // 24 system roles plus the three we created, +            assertThat(roles.size(), equalTo(27));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilege.java, +import org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction;, +import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotAction;, +import org.elasticsearch.action.admin.cluster.snapshots.get.GetSnapshotsAction;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusAction;, +    private static final Automaton CREATE_SNAPSHOT_AUTOMATON = patterns(CreateSnapshotAction.NAME, SnapshotsStatusAction.NAME + "*",, +            GetSnapshotsAction.NAME, SnapshotsStatusAction.NAME, GetRepositoriesAction.NAME);, +    public static final ClusterPrivilege CREATE_SNAPSHOT =       new ClusterPrivilege("create_snapshot", CREATE_SNAPSHOT_AUTOMATON);, +            .put("create_snapshot", CREATE_SNAPSHOT), +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java, +import org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction;, +                .put("snapshot_user", new RoleDescriptor("snapshot_user", new String[] { "create_snapshot", GetRepositoriesAction.NAME },, +                        new RoleDescriptor.IndicesPrivileges[] { RoleDescriptor.IndicesPrivileges.builder(), +                                .indices("*"), +                                .privileges("view_index_metadata"), +                                .allowRestrictedIndices(true), +                                .build() }, null, null, null, MetadataUtils.DEFAULT_RESERVED_METADATA, null)), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SecurityDocumentationIT.java, +            // 24 system roles plus the three we created, +            assertThat(roles.size(), equalTo(27));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/ClusterPrivilege.java, +import org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction;, +import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotAction;, +import org.elasticsearch.action.admin.cluster.snapshots.get.GetSnapshotsAction;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusAction;, +    private static final Automaton CREATE_SNAPSHOT_AUTOMATON = patterns(CreateSnapshotAction.NAME, SnapshotsStatusAction.NAME + "*",, +            GetSnapshotsAction.NAME, SnapshotsStatusAction.NAME, GetRepositoriesAction.NAME);, +    public static final ClusterPrivilege CREATE_SNAPSHOT =       new ClusterPrivilege("create_snapshot", CREATE_SNAPSHOT_AUTOMATON);, +            .put("create_snapshot", CREATE_SNAPSHOT), +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/privilege/IndexPrivilege.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStore.java, +import org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction;, +                .put("snapshot_user", new RoleDescriptor("snapshot_user", new String[] { "create_snapshot", GetRepositoriesAction.NAME },, +                        new RoleDescriptor.IndicesPrivileges[] { RoleDescriptor.IndicesPrivileges.builder(), +                                .indices("*"), +                                .privileges("view_index_metadata"), +                                .allowRestrictedIndices(true), +                                .build() }, null, null, null, MetadataUtils.DEFAULT_RESERVED_METADATA, null)), +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/authz/store/ReservedRolesStoreTests.java, +import org.elasticsearch.action.admin.cluster.repositories.get.GetRepositoriesAction;, +import org.elasticsearch.action.admin.cluster.repositories.put.PutRepositoryAction;, +import org.elasticsearch.action.admin.cluster.snapshots.create.CreateSnapshotAction;, +import org.elasticsearch.action.admin.cluster.snapshots.get.GetSnapshotsAction;, +import org.elasticsearch.action.admin.cluster.snapshots.status.SnapshotsStatusAction;, +        assertThat(ReservedRolesStore.isReserved("snapshot_user"), is(true));, +    }, +    public void testSnapshotUserRole() {, +        final TransportRequest request = mock(TransportRequest.class);, +, +        RoleDescriptor roleDescriptor = new ReservedRolesStore().roleDescriptor("snapshot_user");, +        assertNotNull(roleDescriptor);, +        assertThat(roleDescriptor.getMetadata(), hasEntry("_reserved", true));, +, +        Role snapshotUserRole = Role.builder(roleDescriptor, null).build();, +        assertThat(snapshotUserRole.cluster().check(GetRepositoriesAction.NAME, request), is(true));, +        assertThat(snapshotUserRole.cluster().check(CreateSnapshotAction.NAME, request), is(true));, +        assertThat(snapshotUserRole.cluster().check(SnapshotsStatusAction.NAME, request), is(true));, +        assertThat(snapshotUserRole.cluster().check(GetSnapshotsAction.NAME, request), is(true));, +, +        assertThat(snapshotUserRole.cluster().check(PutRepositoryAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(GetIndexTemplatesAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(DeleteIndexTemplateAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(PutPipelineAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(GetPipelineAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(DeletePipelineAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(ClusterRerouteAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(ClusterUpdateSettingsAction.NAME, request), is(false));, +        assertThat(snapshotUserRole.cluster().check(MonitoringBulkAction.NAME, request), is(false));]