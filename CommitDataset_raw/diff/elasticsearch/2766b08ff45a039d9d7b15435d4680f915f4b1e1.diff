[+++ b/plugins/discovery-azure-classic/src/main/java/org/elasticsearch/cloud/azure/classic/management/AzureComputeServiceImpl.java, +import java.net.URISyntaxException;, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +import java.security.PrivilegedActionException;, +import java.security.PrivilegedExceptionAction;, +import com.microsoft.windowsazure.exception.ServiceException;, +import org.elasticsearch.SpecialPermission;, +import org.xml.sax.SAXException;, +, +import javax.xml.parsers.ParserConfigurationException;, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(new SpecialPermission());, +        }, +            return AccessController.doPrivileged((PrivilegedExceptionAction<HostedServiceGetDetailedResponse>), +                () -> client.getHostedServicesOperations().getDetailed(serviceName));, +        } catch (PrivilegedActionException e) {, +            throw new AzureServiceRemoteException("can not get list of azure nodes", e.getCause());, +++ b/plugins/discovery-azure-classic/src/main/java/org/elasticsearch/cloud/azure/classic/management/AzureComputeServiceImpl.java, +import java.net.URISyntaxException;, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +import java.security.PrivilegedActionException;, +import java.security.PrivilegedExceptionAction;, +import com.microsoft.windowsazure.exception.ServiceException;, +import org.elasticsearch.SpecialPermission;, +import org.xml.sax.SAXException;, +, +import javax.xml.parsers.ParserConfigurationException;, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(new SpecialPermission());, +        }, +            return AccessController.doPrivileged((PrivilegedExceptionAction<HostedServiceGetDetailedResponse>), +                () -> client.getHostedServicesOperations().getDetailed(serviceName));, +        } catch (PrivilegedActionException e) {, +            throw new AzureServiceRemoteException("can not get list of azure nodes", e.getCause());, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/network/Ec2NameResolver.java, +import org.elasticsearch.cloud.aws.util.SocketAccess;, +            URLConnection urlConnection = SocketAccess.doPrivilegedIOException(url::openConnection);, +            in = SocketAccess.doPrivilegedIOException(urlConnection::getInputStream);, +++ b/plugins/discovery-azure-classic/src/main/java/org/elasticsearch/cloud/azure/classic/management/AzureComputeServiceImpl.java, +import java.net.URISyntaxException;, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +import java.security.PrivilegedActionException;, +import java.security.PrivilegedExceptionAction;, +import com.microsoft.windowsazure.exception.ServiceException;, +import org.elasticsearch.SpecialPermission;, +import org.xml.sax.SAXException;, +, +import javax.xml.parsers.ParserConfigurationException;, +        SecurityManager sm = System.getSecurityManager();, +        if (sm != null) {, +            sm.checkPermission(new SpecialPermission());, +        }, +            return AccessController.doPrivileged((PrivilegedExceptionAction<HostedServiceGetDetailedResponse>), +                () -> client.getHostedServicesOperations().getDetailed(serviceName));, +        } catch (PrivilegedActionException e) {, +            throw new AzureServiceRemoteException("can not get list of azure nodes", e.getCause());, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/network/Ec2NameResolver.java, +import org.elasticsearch.cloud.aws.util.SocketAccess;, +            URLConnection urlConnection = SocketAccess.doPrivilegedIOException(url::openConnection);, +            in = SocketAccess.doPrivilegedIOException(urlConnection::getInputStream);, +++ b/plugins/discovery-ec2/src/main/java/org/elasticsearch/cloud/aws/util/SocketAccess.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.cloud.aws.util;, +, +import org.elasticsearch.SpecialPermission;, +, +import java.io.IOException;, +import java.net.SocketPermission;, +import java.security.AccessController;, +import java.security.PrivilegedAction;, +import java.security.PrivilegedActionException;, +import java.security.PrivilegedExceptionAction;, +, +/**, + * This plugin uses aws libraries to connect to aws services. For these remote calls the plugin needs, + * {@link SocketPermission} 'connect' to establish connections. This class wraps the operations requiring access in, + * {@link AccessController#doPrivileged(PrivilegedAction)} blocks.]