[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.cluster.*;, +public class MetaDataUpdateSettingsService extends AbstractComponent implements ClusterStateListener {, +        this.clusterService.add(this);, +    }, +, +    @Override public void clusterChanged(ClusterChangedEvent event) {, +        // update an index with number of replicas based on data nodes if possible, +        if (!event.state().nodes().localNodeMaster()) {, +            return;, +        }, +        if (!event.nodesChanged()) {, +            return;, +        }, +        for (final IndexMetaData indexMetaData : event.state().metaData()) {, +            String autoExpandReplicas = indexMetaData.settings().get("index.auto_expand_replicas");, +            if (autoExpandReplicas != null) {, +                try {, +                    final int numberOfReplicas = event.state().nodes().dataNodes().size() - 1;, +, +                    int min = Integer.parseInt(autoExpandReplicas.substring(0, autoExpandReplicas.indexOf('-')));, +                    int max;, +                    String sMax = autoExpandReplicas.substring(autoExpandReplicas.indexOf('-') + 1);, +                    if (sMax.equals("all")) {, +                        max = event.state().nodes().dataNodes().size() - 1;, +                    } else {, +                        max = Integer.parseInt(sMax);, +                    }, +, +                    if (numberOfReplicas >= min && numberOfReplicas <= max) {, +                        Settings settings = ImmutableSettings.settingsBuilder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, numberOfReplicas).build();, +                        updateSettings(settings, new String[]{indexMetaData.index()}, new Listener() {, +                            @Override public void onSuccess() {, +                                logger.info("[{}] auto expanded replicas to [{}]", indexMetaData.index(), numberOfReplicas);, +                            }, +, +                            @Override public void onFailure(Throwable t) {, +                                logger.warn("[{}] fail to auto expand replicas to [{}]", indexMetaData.index(), numberOfReplicas);, +                            }, +                        });, +                    }, +                } catch (Exception e) {, +                    logger.warn("[{}] failed to parse auto expand replicas", e, indexMetaData.index());, +                }, +            }, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java, +import org.elasticsearch.cluster.*;, +public class MetaDataUpdateSettingsService extends AbstractComponent implements ClusterStateListener {, +        this.clusterService.add(this);, +    }, +, +    @Override public void clusterChanged(ClusterChangedEvent event) {, +        // update an index with number of replicas based on data nodes if possible, +        if (!event.state().nodes().localNodeMaster()) {, +            return;, +        }, +        if (!event.nodesChanged()) {, +            return;, +        }, +        for (final IndexMetaData indexMetaData : event.state().metaData()) {, +            String autoExpandReplicas = indexMetaData.settings().get("index.auto_expand_replicas");, +            if (autoExpandReplicas != null) {, +                try {, +                    final int numberOfReplicas = event.state().nodes().dataNodes().size() - 1;, +, +                    int min = Integer.parseInt(autoExpandReplicas.substring(0, autoExpandReplicas.indexOf('-')));, +                    int max;, +                    String sMax = autoExpandReplicas.substring(autoExpandReplicas.indexOf('-') + 1);, +                    if (sMax.equals("all")) {, +                        max = event.state().nodes().dataNodes().size() - 1;, +                    } else {, +                        max = Integer.parseInt(sMax);, +                    }, +, +                    if (numberOfReplicas >= min && numberOfReplicas <= max) {, +                        Settings settings = ImmutableSettings.settingsBuilder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, numberOfReplicas).build();, +                        updateSettings(settings, new String[]{indexMetaData.index()}, new Listener() {, +                            @Override public void onSuccess() {, +                                logger.info("[{}] auto expanded replicas to [{}]", indexMetaData.index(), numberOfReplicas);, +                            }, +, +                            @Override public void onFailure(Throwable t) {, +                                logger.warn("[{}] fail to auto expand replicas to [{}]", indexMetaData.index(), numberOfReplicas);, +                            }, +                        });, +                    }, +                } catch (Exception e) {, +                    logger.warn("[{}] failed to parse auto expand replicas", e, indexMetaData.index());, +                }, +            }, +        }, +++ b/modules/test/integration/src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateNumberOfReplicasTests.java, +        logger.info("Creating index test");, +        client1.admin().indices().create(createIndexRequest("test")).actionGet();, +, +, +    @Test public void testAutoExpandNumberOfReplicas0ToData() {, +        logger.info("--> creating index test with auto expand replicas");, +        client1.admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("number_of_shards", 2).put("auto_expand_replicas", "0-all")).execute().actionGet();]