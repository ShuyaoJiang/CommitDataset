[+++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, +    private boolean force = true;, +    public boolean force() {, +        return force;, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequest force(boolean force) {, +        this.force = force;, +        force = in.readBoolean();, +        out.writeBoolean(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, +    private boolean force = true;, +    public boolean force() {, +        return force;, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequest force(boolean force) {, +        this.force = force;, +        force = in.readBoolean();, +        out.writeBoolean(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequestBuilder setForce(boolean force) {, +        request.force(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, +    private boolean force = true;, +    public boolean force() {, +        return force;, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequest force(boolean force) {, +        this.force = force;, +        force = in.readBoolean();, +        out.writeBoolean(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequestBuilder setForce(boolean force) {, +        request.force(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/ShardRefreshRequest.java, +    private boolean force = true;, +        force = request.force();, +    public boolean force() {, +        return force;, +        force = in.readBoolean();, +        out.writeBoolean(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, +    private boolean force = true;, +    public boolean force() {, +        return force;, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequest force(boolean force) {, +        this.force = force;, +        force = in.readBoolean();, +        out.writeBoolean(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequestBuilder setForce(boolean force) {, +        request.force(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/ShardRefreshRequest.java, +    private boolean force = true;, +        force = request.force();, +    public boolean force() {, +        return force;, +        force = in.readBoolean();, +        out.writeBoolean(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java, +        indexShard.refresh(new Engine.Refresh().force(request.force()));, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java, +    private boolean force = true;, +    public boolean force() {, +        return force;, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults, +     * to true (note, still lightweight if no refresh is needed)., +     */, +    public RefreshRequest force(boolean force) {, +        this.force = force;, +        force = in.readBoolean();, +        out.writeBoolean(force);, +++ b/src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java, +    /**, +     * Forces calling refresh, overriding the check that dirty operations even happened. Defaults]