[+++ b/plugins/river/couchdb/src/main/java/org/elasticsearch/river/couchdb/CouchdbRiver.java, +import org.elasticsearch.river.AbstractRiverComponent;, +import org.elasticsearch.river.River;, +import org.elasticsearch.river.RiverIndexName;, +import org.elasticsearch.river.RiverName;, +import org.elasticsearch.river.RiverSettings;, +import java.io.BufferedReader;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.InputStreamReader;, +import java.io.UnsupportedEncodingException;, +            String index = extractIndex(ctx);, +            String type = extractType(ctx);, +                logger.trace("processing [delete]: [{}]/[{}]/[{}]", index, type, id);, +            bulk.add(deleteRequest(index).type(type).id(id).routing(extractRouting(ctx)));, +            String index = extractIndex(ctx);, +            String type = extractType(ctx);, +                logger.trace("processing [index ]: [{}]/[{}]/[{}], source {}", index, type, id, doc);, +            bulk.add(indexRequest(index).type(type).id(id).source(doc).routing(extractRouting(ctx)));, +    private String extractRouting(Map<String, Object> ctx) {, +        return (String) ctx.get("_routing");, +    }, +, +    private String extractType(Map<String, Object> ctx) {, +        String type = (String) ctx.get("_type");, +        if (type == null) {, +            type = typeName;, +        }, +        return type;, +    }, +, +    private String extractIndex(Map<String, Object> ctx) {, +        String index = (String) ctx.get("_index");, +        if (index == null) {, +            index = indexName;, +        }, +        return index;, +    }, +]