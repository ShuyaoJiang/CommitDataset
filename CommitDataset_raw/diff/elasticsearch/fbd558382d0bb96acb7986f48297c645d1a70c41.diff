[+++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +import java.io.IOException;, +import java.util.Arrays;, +, +            QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, XContentHelper.createParser(querySource),, +                    parseFieldMatcher);, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +import java.io.IOException;, +import java.util.Arrays;, +, +            QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, XContentHelper.createParser(querySource),, +                    parseFieldMatcher);, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +import java.io.IOException;, +import java.util.Arrays;, +, +            QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, XContentHelper.createParser(querySource),, +                    parseFieldMatcher);, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +import java.io.IOException;, +import java.util.Arrays;, +, +            QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, XContentHelper.createParser(querySource),, +                    parseFieldMatcher);, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/SegmentsStats.java, +import org.elasticsearch.Version;, +        if (in.getVersion().onOrAfter(Version.V_5_0_0_alpha1)) {, +        } else {, +            fileSizes = ImmutableOpenMap.of();, +        }, +        if (out.getVersion().onOrAfter(Version.V_5_0_0_alpha1)) {, +}, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +import java.io.IOException;, +import java.util.Arrays;, +, +            QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, XContentHelper.createParser(querySource),, +                    parseFieldMatcher);, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/SegmentsStats.java, +import org.elasticsearch.Version;, +        if (in.getVersion().onOrAfter(Version.V_5_0_0_alpha1)) {, +        } else {, +            fileSizes = ImmutableOpenMap.of();, +        }, +        if (out.getVersion().onOrAfter(Version.V_5_0_0_alpha1)) {, +}, +++ b/core/src/main/java/org/elasticsearch/index/percolator/PercolatorFieldMapper.java, +import org.elasticsearch.common.xcontent.XContentLocation;, +        XContentParser parser = context.parser();, +        QueryBuilder<?> queryBuilder = parseQueryBuilder(queryShardContext.newParseContext(parser), parser.getTokenLocation());, +        return toQuery(context, mapUnmappedFieldsAsString, parseQueryBuilder(context.newParseContext(parser), parser.getTokenLocation()));, +    static QueryBuilder<?> parseQueryBuilder(QueryParseContext context, XContentLocation location) {, +            throw new ParsingException(location, "Failed to parse", e);, +++ b/core/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +import java.io.IOException;, +import java.util.Arrays;, +, +            QueryParseContext queryParseContext = new QueryParseContext(queryRegistry, XContentHelper.createParser(querySource),, +                    parseFieldMatcher);, +            QueryParseContext context = new QueryParseContext(queryRegistry, parser, parseFieldMatcher);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +            queryShardContext.reset();, +            QueryParseContext queryParseContext = queryShardContext.newParseContext(parser);, +            queryShardContext.reset();, +++ b/core/src/main/java/org/elasticsearch/index/engine/Engine.java, +++ b/core/src/main/java/org/elasticsearch/index/engine/SegmentsStats.java, +import org.elasticsearch.Version;, +        if (in.getVersion().onOrAfter(Version.V_5_0_0_alpha1)) {, +        } else {, +            fileSizes = ImmutableOpenMap.of();, +        }, +        if (out.getVersion().onOrAfter(Version.V_5_0_0_alpha1)) {, +}, +++ b/core/src/main/java/org/elasticsearch/index/percolator/PercolatorFieldMapper.java, +import org.elasticsearch.common.xcontent.XContentLocation;, +        XContentParser parser = context.parser();]