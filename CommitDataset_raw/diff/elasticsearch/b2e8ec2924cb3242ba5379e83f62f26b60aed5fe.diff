[+++ b/src/main/java/org/elasticsearch/rest/action/cat/RestRecoveryAction.java, +import org.elasticsearch.action.admin.cluster.state.ClusterStateRequest;, +import org.elasticsearch.action.admin.cluster.state.ClusterStateResponse;, +import org.elasticsearch.cluster.node.DiscoveryNode;, +import org.elasticsearch.common.transport.InetSocketTransportAddress;, +        final String[] indices = Strings.splitStringByCommaToArray(request.param("index"));, +        final ClusterStateRequest clusterStateRequest = new ClusterStateRequest();, +        clusterStateRequest.filterMetaData(true);, +        clusterStateRequest.local(request.paramAsBoolean("local", clusterStateRequest.local()));, +        clusterStateRequest.masterNodeTimeout(request.paramAsTime("master_timeout", clusterStateRequest.masterNodeTimeout()));, +, +        client.admin().cluster().state(clusterStateRequest, new ActionListener<ClusterStateResponse>() {, +            @Override, +            public void onResponse(final ClusterStateResponse clusterStateResponse) {, +                            channel.sendResponse(RestTable.buildResponse(buildRecoveryTable(clusterStateResponse, primarySizes, replicas), request, channel));, +            }, +, +            @Override, +            public void onFailure(Throwable e) {, +                try {, +                    channel.sendResponse(new XContentThrowableRestResponse(request, e));, +                } catch (IOException e1) {, +                    logger.error("Failed to send failure response", e1);, +                }, +            }, +        });, +     * @param state Current cluster state., +    public static Table buildRecoveryTable(ClusterStateResponse state, Map<String, Long> primarySizes, Set<ShardStatus> recoveringReplicas) {, +                .addCell("ip"), +                .addCell("node"), +            DiscoveryNode node = state.getState().nodes().get(status.getShardRouting().currentNodeId());, +, +            t.addCell(primarySize == null ? null : String.format(Locale.ROOT, "%1.1f%%", 100.0 * (float)replicaSize / primarySize));, +            t.addCell(node == null ? null : ((InetSocketTransportAddress) node.address()).address().getAddress().getHostAddress());, +            t.addCell(node == null ? null : node.name());]