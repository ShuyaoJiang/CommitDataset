[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +                    if (!resolved && context.root().numericDetection()) {, +                        try {, +                            Long.parseLong(text);, +                            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "long");, +                            if (builder == null) {, +                                builder = longField(currentFieldName);, +                            }, +                            mapper = builder.build(builderContext);, +                            resolved = true;, +                        } catch (Exception e) {, +                            // not a long number, +                        }, +                        if (!resolved) {, +                            try {, +                                Double.parseDouble(text);, +                                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "double");, +                                if (builder == null) {, +                                    builder = doubleField(currentFieldName);, +                                }, +                                mapper = builder.build(builderContext);, +                                resolved = true;, +                            } catch (Exception e) {, +                                // not a long number, +                            }, +                        }, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +                    if (!resolved && context.root().numericDetection()) {, +                        try {, +                            Long.parseLong(text);, +                            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "long");, +                            if (builder == null) {, +                                builder = longField(currentFieldName);, +                            }, +                            mapper = builder.build(builderContext);, +                            resolved = true;, +                        } catch (Exception e) {, +                            // not a long number, +                        }, +                        if (!resolved) {, +                            try {, +                                Double.parseDouble(text);, +                                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "double");, +                                if (builder == null) {, +                                    builder = doubleField(currentFieldName);, +                                }, +                                mapper = builder.build(builderContext);, +                                resolved = true;, +                            } catch (Exception e) {, +                                // not a long number, +                            }, +                        }, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/RootObjectMapper.java, +        public static final boolean NUMERIC_DETECTION = false;, +        protected boolean numericDetection = Defaults.NUMERIC_DETECTION;, +                    dateDetection, numericDetection);, +            } else if (fieldName.equals("numeric_detection")) {, +                ((Builder) builder).numericDetection = nodeBooleanValue(fieldNode);, +    private final boolean numericDetection;, +                     FormatDateTimeFormatter[] dynamicDateTimeFormatters, DynamicTemplate dynamicTemplates[], boolean dateDetection, boolean numericDetection) {, +        this.numericDetection = numericDetection;, +    public boolean numericDetection() {, +        return this.numericDetection;, +    }, +, +        if (numericDetection != Defaults.NUMERIC_DETECTION) {, +            builder.field("numeric_detection", numericDetection);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java, +                    if (!resolved && context.root().numericDetection()) {, +                        try {, +                            Long.parseLong(text);, +                            Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "long");, +                            if (builder == null) {, +                                builder = longField(currentFieldName);, +                            }, +                            mapper = builder.build(builderContext);, +                            resolved = true;, +                        } catch (Exception e) {, +                            // not a long number, +                        }, +                        if (!resolved) {, +                            try {, +                                Double.parseDouble(text);, +                                Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "double");, +                                if (builder == null) {, +                                    builder = doubleField(currentFieldName);, +                                }, +                                mapper = builder.build(builderContext);, +                                resolved = true;, +                            } catch (Exception e) {, +                                // not a long number, +                            }, +                        }, +                    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/object/RootObjectMapper.java, +        public static final boolean NUMERIC_DETECTION = false;, +        protected boolean numericDetection = Defaults.NUMERIC_DETECTION;]