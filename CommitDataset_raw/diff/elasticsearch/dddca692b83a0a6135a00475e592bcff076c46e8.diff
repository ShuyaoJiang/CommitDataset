[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.explain.ExplainSearchHitPhase;, +import org.elasticsearch.search.fetch.matchedfilters.MatchedFiltersSearchHitPhase;, +import org.elasticsearch.search.fetch.script.ScriptFieldsSearchHitPhase;, +        bind(FetchPhase.class).asEagerSingleton();, +        bind(ExplainSearchHitPhase.class).asEagerSingleton();, +        bind(ScriptFieldsSearchHitPhase.class).asEagerSingleton();, +        bind(MatchedFiltersSearchHitPhase.class).asEagerSingleton();, +        bind(HighlightPhase.class).asEagerSingleton();, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.explain.ExplainSearchHitPhase;, +import org.elasticsearch.search.fetch.matchedfilters.MatchedFiltersSearchHitPhase;, +import org.elasticsearch.search.fetch.script.ScriptFieldsSearchHitPhase;, +        bind(FetchPhase.class).asEagerSingleton();, +        bind(ExplainSearchHitPhase.class).asEagerSingleton();, +        bind(ScriptFieldsSearchHitPhase.class).asEagerSingleton();, +        bind(MatchedFiltersSearchHitPhase.class).asEagerSingleton();, +        bind(HighlightPhase.class).asEagerSingleton();, +, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.explain.ExplainSearchHitPhase;, +import org.elasticsearch.search.fetch.matchedfilters.MatchedFiltersSearchHitPhase;, +import org.elasticsearch.search.fetch.script.ScriptFieldsSearchHitPhase;, +        bind(FetchPhase.class).asEagerSingleton();, +        bind(ExplainSearchHitPhase.class).asEagerSingleton();, +        bind(ScriptFieldsSearchHitPhase.class).asEagerSingleton();, +        bind(MatchedFiltersSearchHitPhase.class).asEagerSingleton();, +        bind(HighlightPhase.class).asEagerSingleton();, +, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +import org.elasticsearch.search.fetch.explain.ExplainSearchHitPhase;, +import org.elasticsearch.search.fetch.matchedfilters.MatchedFiltersSearchHitPhase;, +import org.elasticsearch.search.fetch.script.ScriptFieldsSearchHitPhase;, +    private final SearchHitPhase[] hitPhases;, +, +    @Inject public FetchPhase(HighlightPhase highlightPhase, ScriptFieldsSearchHitPhase scriptFieldsPhase,, +                              MatchedFiltersSearchHitPhase matchFiltersPhase, ExplainSearchHitPhase explainPhase) {, +        this.hitPhases = new SearchHitPhase[]{scriptFieldsPhase, matchFiltersPhase, explainPhase, highlightPhase};, +        parseElements.put("fields", new FieldsParseElement());, +        for (SearchHitPhase hitPhase : hitPhases) {, +            parseElements.putAll(hitPhase.parseElements());, +        }, +            boolean hitPhaseExecutionRequired = false;, +            for (SearchHitPhase hitPhase : hitPhases) {, +                if (hitPhase.executionNeeded(context)) {, +                    hitPhaseExecutionRequired = true;, +                    break;, +                }, +            }, +, +            if (hitPhaseExecutionRequired) {, +                for (SearchHitPhase hitPhase : hitPhases) {, +                    if (hitPhase.executionNeeded(context)) {, +                        hitPhase.execute(context, searchHit, uid, subReader, subDoc);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.fetch.explain.ExplainSearchHitPhase;, +import org.elasticsearch.search.fetch.matchedfilters.MatchedFiltersSearchHitPhase;, +import org.elasticsearch.search.fetch.script.ScriptFieldsSearchHitPhase;, +        bind(FetchPhase.class).asEagerSingleton();, +        bind(ExplainSearchHitPhase.class).asEagerSingleton();, +        bind(ScriptFieldsSearchHitPhase.class).asEagerSingleton();, +        bind(MatchedFiltersSearchHitPhase.class).asEagerSingleton();, +        bind(HighlightPhase.class).asEagerSingleton();, +, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +import org.elasticsearch.search.fetch.explain.ExplainSearchHitPhase;, +import org.elasticsearch.search.fetch.matchedfilters.MatchedFiltersSearchHitPhase;, +import org.elasticsearch.search.fetch.script.ScriptFieldsSearchHitPhase;, +    private final SearchHitPhase[] hitPhases;, +, +    @Inject public FetchPhase(HighlightPhase highlightPhase, ScriptFieldsSearchHitPhase scriptFieldsPhase,, +                              MatchedFiltersSearchHitPhase matchFiltersPhase, ExplainSearchHitPhase explainPhase) {, +        this.hitPhases = new SearchHitPhase[]{scriptFieldsPhase, matchFiltersPhase, explainPhase, highlightPhase};, +        parseElements.put("fields", new FieldsParseElement());, +        for (SearchHitPhase hitPhase : hitPhases) {, +            parseElements.putAll(hitPhase.parseElements());, +        }, +            boolean hitPhaseExecutionRequired = false;, +            for (SearchHitPhase hitPhase : hitPhases) {, +                if (hitPhase.executionNeeded(context)) {, +                    hitPhaseExecutionRequired = true;, +                    break;, +                }, +            }, +, +            if (hitPhaseExecutionRequired) {, +                for (SearchHitPhase hitPhase : hitPhases) {, +                    if (hitPhase.executionNeeded(context)) {, +                        hitPhase.execute(context, searchHit, uid, subReader, subDoc);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/SearchHitPhase.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the]