[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.FieldMappers;, +import org.elasticsearch.index.mapper.FieldMappersFieldSelector;, +import org.elasticsearch.indices.TypeMissingException;, +            throw new TypeMissingException(new Index(request.index()), request.type());, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.FieldMappers;, +import org.elasticsearch.index.mapper.FieldMappersFieldSelector;, +import org.elasticsearch.indices.TypeMissingException;, +            throw new TypeMissingException(new Index(request.index()), request.type());, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/get/TransportGetAction.java, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.mapper.DocumentMapper;, +import org.elasticsearch.index.mapper.FieldMapper;, +import org.elasticsearch.index.mapper.FieldMappers;, +import org.elasticsearch.index.mapper.FieldMappersFieldSelector;, +import org.elasticsearch.indices.TypeMissingException;, +            throw new TypeMissingException(new Index(request.index()), request.type());, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +import org.elasticsearch.indices.TypeMissingException;, +            DocumentMapper docMapper = documentMapper(types[0]);, +            if (docMapper == null) {, +                throw new TypeMissingException(index, types[0]);, +            }, +            return docMapper.typeFilter();, +            if (!hasMapping(type)) {, +                throw new TypeMissingException(index, type);, +            }]