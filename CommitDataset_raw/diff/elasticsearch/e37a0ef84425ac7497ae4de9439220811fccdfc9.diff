[+++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-67cdd21996, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-67cdd21996, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ASCIIFoldingTokenFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +        implements NormalizingTokenFilterFactory {, +, +    public TokenStream normalize(TokenStream tokenStream) {, +        // Normalization should only emit a single token, so always turn off preserveOriginal, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-67cdd21996, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ASCIIFoldingTokenFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +        implements NormalizingTokenFilterFactory {, +, +    public TokenStream normalize(TokenStream tokenStream) {, +        // Normalization should only emit a single token, so always turn off preserveOriginal, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ArabicNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class ArabicNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-67cdd21996, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ASCIIFoldingTokenFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +        implements NormalizingTokenFilterFactory {, +, +    public TokenStream normalize(TokenStream tokenStream) {, +        // Normalization should only emit a single token, so always turn off preserveOriginal, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ArabicNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class ArabicNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/BengaliNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class BengaliNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-67cdd21996, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ASCIIFoldingTokenFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +        implements NormalizingTokenFilterFactory {, +, +    public TokenStream normalize(TokenStream tokenStream) {, +        // Normalization should only emit a single token, so always turn off preserveOriginal, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ArabicNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class ArabicNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/BengaliNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class BengaliNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CJKWidthFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public final class CJKWidthFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-67cdd21996, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ASCIIFoldingTokenFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +        implements NormalizingTokenFilterFactory {, +, +    public TokenStream normalize(TokenStream tokenStream) {, +        // Normalization should only emit a single token, so always turn off preserveOriginal, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ArabicNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class ArabicNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/BengaliNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class BengaliNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CJKWidthFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public final class CJKWidthFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java, +        tokenizers.add(PreConfiguredTokenizer.singleton("keyword", KeywordTokenizer::new));, +        tokenizers.add(PreConfiguredTokenizer.singleton("classic", ClassicTokenizer::new));, +        tokenizers.add(PreConfiguredTokenizer.singleton("uax_url_email", UAX29URLEmailTokenizer::new));, +        tokenizers.add(PreConfiguredTokenizer.singleton("path_hierarchy", PathHierarchyTokenizer::new));, +        tokenizers.add(PreConfiguredTokenizer.singleton("letter", LetterTokenizer::new));, +        tokenizers.add(PreConfiguredTokenizer.singleton("whitespace", WhitespaceTokenizer::new));, +        tokenizers.add(PreConfiguredTokenizer.singleton("ngram", NGramTokenizer::new));, +            () -> new EdgeNGramTokenizer(EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE, EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE)));, +        tokenizers.add(PreConfiguredTokenizer.singleton("pattern", () -> new PatternTokenizer(Regex.compile("\\W+", null), -1)));, +        tokenizers.add(PreConfiguredTokenizer.singleton("thai", ThaiTokenizer::new));, +        // This is already broken with normalization, so backwards compat isn't necessary?, +        tokenizers.add(PreConfiguredTokenizer.singleton("lowercase", XLowerCaseTokenizer::new));, +        tokenizers.add(PreConfiguredTokenizer.singleton("nGram", NGramTokenizer::new));, +            () -> new EdgeNGramTokenizer(EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE, EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE)));, +        tokenizers.add(PreConfiguredTokenizer.singleton("PathHierarchy", PathHierarchyTokenizer::new));, +++ b/buildSrc/version.properties, +lucene            = 8.0.0-snapshot-67cdd21996, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ASCIIFoldingTokenFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +        implements NormalizingTokenFilterFactory {, +, +    public TokenStream normalize(TokenStream tokenStream) {, +        // Normalization should only emit a single token, so always turn off preserveOriginal, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ArabicNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class ArabicNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/BengaliNormalizationFilterFactory.java, +import org.elasticsearch.index.analysis.NormalizingTokenFilterFactory;, +public class BengaliNormalizationFilterFactory extends AbstractTokenFilterFactory implements NormalizingTokenFilterFactory {, +++ b/modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CJKWidthFilterFactory.java]