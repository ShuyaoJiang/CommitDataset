[+++ b/distribution/archives/build.gradle, +        with configFiles(distributionType, oss, jdk), +        with binFiles(distributionType, oss, jdk), +++ b/distribution/archives/build.gradle, +        with configFiles(distributionType, oss, jdk), +        with binFiles(distributionType, oss, jdk), +++ b/distribution/build.gradle, +    configFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +    binFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +            MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +  ext.expansionsForDistribution = { distributionType, oss, jdk ->, +      'es.bundled_jdk': [, +        'def': jdk ? 'true' : 'false', +      ],, +, +++ b/distribution/archives/build.gradle, +        with configFiles(distributionType, oss, jdk), +        with binFiles(distributionType, oss, jdk), +++ b/distribution/build.gradle, +    configFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +    binFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +            MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +  ext.expansionsForDistribution = { distributionType, oss, jdk ->, +      'es.bundled_jdk': [, +        'def': jdk ? 'true' : 'false', +      ],, +, +++ b/distribution/packages/build.gradle, +void addProcessFilesTask(String type, boolean oss, boolean jdk) {, +  String packagingFiles = "build/packaging/${oss ? 'oss-' : ''}${jdk ? '' : 'no-jdk-'}${type}", +  String taskName = "process${oss ? 'Oss' : ''}${jdk ? '' : 'NoJdk'}${type.capitalize()}Files", +      MavenFilteringHack.filter(it, expansionsForDistribution(type, oss, jdk)), +      with configFiles(type, oss, jdk), +    MavenFilteringHack.filter(it, expansionsForDistribution(type, oss, jdk)), +addProcessFilesTask('deb', true, true), +addProcessFilesTask('deb', true, false), +addProcessFilesTask('deb', false, true), +addProcessFilesTask('deb', false, false), +addProcessFilesTask('rpm', true, true), +addProcessFilesTask('rpm', true, false), +addProcessFilesTask('rpm', false, true), +addProcessFilesTask('rpm', false, false), +    dependsOn "process${oss ? 'Oss' : ''}${jdk ? '' : 'NoJdk'}${type.capitalize()}Files", +    String packagingFiles = "build/packaging/${oss ? 'oss-' : ''}${jdk ? '' : 'no-jdk-'}${type}", +        with binFiles(type, oss, jdk), +    String envFile = expansionsForDistribution(type, oss, jdk)['path.env'], +++ b/distribution/archives/build.gradle, +        with configFiles(distributionType, oss, jdk), +        with binFiles(distributionType, oss, jdk), +++ b/distribution/build.gradle, +    configFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +    binFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +            MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +  ext.expansionsForDistribution = { distributionType, oss, jdk ->, +      'es.bundled_jdk': [, +        'def': jdk ? 'true' : 'false', +      ],, +, +++ b/distribution/packages/build.gradle, +void addProcessFilesTask(String type, boolean oss, boolean jdk) {, +  String packagingFiles = "build/packaging/${oss ? 'oss-' : ''}${jdk ? '' : 'no-jdk-'}${type}", +  String taskName = "process${oss ? 'Oss' : ''}${jdk ? '' : 'NoJdk'}${type.capitalize()}Files", +      MavenFilteringHack.filter(it, expansionsForDistribution(type, oss, jdk)), +      with configFiles(type, oss, jdk), +    MavenFilteringHack.filter(it, expansionsForDistribution(type, oss, jdk)), +addProcessFilesTask('deb', true, true), +addProcessFilesTask('deb', true, false), +addProcessFilesTask('deb', false, true), +addProcessFilesTask('deb', false, false), +addProcessFilesTask('rpm', true, true), +addProcessFilesTask('rpm', true, false), +addProcessFilesTask('rpm', false, true), +addProcessFilesTask('rpm', false, false), +    dependsOn "process${oss ? 'Oss' : ''}${jdk ? '' : 'NoJdk'}${type.capitalize()}Files", +    String packagingFiles = "build/packaging/${oss ? 'oss-' : ''}${jdk ? '' : 'no-jdk-'}${type}", +        with binFiles(type, oss, jdk), +    String envFile = expansionsForDistribution(type, oss, jdk)['path.env'], +++ b/distribution/src/bin/elasticsearch, +    -Des.bundled_jdk="$ES_BUNDLED_JDK" \, +    -Des.bundled_jdk="$ES_BUNDLED_JDK" \, +++ b/distribution/archives/build.gradle, +        with configFiles(distributionType, oss, jdk), +        with binFiles(distributionType, oss, jdk), +++ b/distribution/build.gradle, +    configFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +    binFiles = { distributionType, oss, jdk ->, +          MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +            MavenFilteringHack.filter(it, expansionsForDistribution(distributionType, oss, jdk)), +  ext.expansionsForDistribution = { distributionType, oss, jdk ->, +      'es.bundled_jdk': [, +        'def': jdk ? 'true' : 'false', +      ],, +]