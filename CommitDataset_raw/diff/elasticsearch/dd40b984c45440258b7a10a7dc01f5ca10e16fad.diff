[+++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsAggregationBuilder.java, +import org.elasticsearch.search.aggregations.AggregationBuilder;, +    protected MatrixStatsAggregationBuilder(MatrixStatsAggregationBuilder clone,, +                                            AggregatorFactories.Builder factoriesBuilder, Map<String, Object> metaData) {, +        super(clone, factoriesBuilder, metaData);, +        this.multiValueMode = clone.multiValueMode;, +    }, +, +    @Override, +    protected AggregationBuilder shallowCopy(AggregatorFactories.Builder factoriesBuilder, Map<String, Object> metaData) {, +        return new MatrixStatsAggregationBuilder(this, factoriesBuilder, metaData);, +    }, +, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsAggregationBuilder.java, +import org.elasticsearch.search.aggregations.AggregationBuilder;, +    protected MatrixStatsAggregationBuilder(MatrixStatsAggregationBuilder clone,, +                                            AggregatorFactories.Builder factoriesBuilder, Map<String, Object> metaData) {, +        super(clone, factoriesBuilder, metaData);, +        this.multiValueMode = clone.multiValueMode;, +    }, +, +    @Override, +    protected AggregationBuilder shallowCopy(AggregatorFactories.Builder factoriesBuilder, Map<String, Object> metaData) {, +        return new MatrixStatsAggregationBuilder(this, factoriesBuilder, metaData);, +    }, +, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceAggregationBuilder.java, +        protected LeafOnly(LeafOnly<VS, AB> clone, Builder factoriesBuilder, Map<String, Object> metaData) {, +            super(clone, factoriesBuilder, metaData);, +            if (factoriesBuilder.count() > 0) {, +                throw new AggregationInitializationException("Aggregator [" + name + "] of type [", +                    + getType() + "] cannot accept sub-aggregations");, +            }, +        }, +, +    protected MultiValuesSourceAggregationBuilder(MultiValuesSourceAggregationBuilder<VS, AB> clone,, +                                                  Builder factoriesBuilder, Map<String, Object> metaData) {, +        super(clone, factoriesBuilder, metaData);, +        this.valuesSourceType = clone.valuesSourceType;, +        this.targetValueType = clone.targetValueType;, +        this.fields = new ArrayList<>(clone.fields);, +        this.valueType = clone.valueType;, +        this.format = clone.format;, +        this.missingMap = new HashMap<>(clone.missingMap);, +        this.missing = clone.missing;, +    }, +, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsAggregationBuilder.java, +import org.elasticsearch.search.aggregations.AggregationBuilder;, +    protected MatrixStatsAggregationBuilder(MatrixStatsAggregationBuilder clone,, +                                            AggregatorFactories.Builder factoriesBuilder, Map<String, Object> metaData) {, +        super(clone, factoriesBuilder, metaData);, +        this.multiValueMode = clone.multiValueMode;, +    }, +, +    @Override, +    protected AggregationBuilder shallowCopy(AggregatorFactories.Builder factoriesBuilder, Map<String, Object> metaData) {, +        return new MatrixStatsAggregationBuilder(this, factoriesBuilder, metaData);, +    }, +, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceAggregationBuilder.java, +        protected LeafOnly(LeafOnly<VS, AB> clone, Builder factoriesBuilder, Map<String, Object> metaData) {, +            super(clone, factoriesBuilder, metaData);, +            if (factoriesBuilder.count() > 0) {, +                throw new AggregationInitializationException("Aggregator [" + name + "] of type [", +                    + getType() + "] cannot accept sub-aggregations");, +            }, +        }, +, +    protected MultiValuesSourceAggregationBuilder(MultiValuesSourceAggregationBuilder<VS, AB> clone,, +                                                  Builder factoriesBuilder, Map<String, Object> metaData) {, +        super(clone, factoriesBuilder, metaData);, +        this.valuesSourceType = clone.valuesSourceType;, +        this.targetValueType = clone.targetValueType;, +        this.fields = new ArrayList<>(clone.fields);, +        this.valueType = clone.valueType;, +        this.format = clone.format;, +        this.missingMap = new HashMap<>(clone.missingMap);, +        this.missing = clone.missing;, +    }, +, +++ b/modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregationBuilder.java, +import org.elasticsearch.search.aggregations.AggregationBuilder;, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +import java.util.Map;, +    protected ChildrenAggregationBuilder(ChildrenAggregationBuilder clone,, +                                         Builder factoriesBuilder, Map<String, Object> metaData) {, +        super(clone, factoriesBuilder, metaData);, +        this.childType = clone.childType;, +        this.childFilter = clone.childFilter;, +        this.parentFilter = clone.parentFilter;, +    }, +, +    @Override, +    protected AggregationBuilder shallowCopy(Builder factoriesBuilder, Map<String, Object> metaData) {, +        return new ChildrenAggregationBuilder(this, factoriesBuilder, metaData);, +    }, +, +++ b/modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsAggregationBuilder.java, +import org.elasticsearch.search.aggregations.AggregationBuilder;]