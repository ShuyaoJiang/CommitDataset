[+++ b/pom.xml, +        <tests.rest>false</tests.rest>, +        <dependency>, +            <groupId>org.apache.httpcomponents</groupId>, +            <artifactId>httpclient</artifactId>, +            <version>4.3.5</version>, +            <scope>test</scope>, +        </dependency>, +        <dependency>, +            <groupId>org.codehaus.groovy</groupId>, +            <artifactId>groovy-all</artifactId>, +            <version>2.3.2</version>, +            <scope>test</scope>, +        </dependency>, +++ b/pom.xml, +        <tests.rest>false</tests.rest>, +        <dependency>, +            <groupId>org.apache.httpcomponents</groupId>, +            <artifactId>httpclient</artifactId>, +            <version>4.3.5</version>, +            <scope>test</scope>, +        </dependency>, +        <dependency>, +            <groupId>org.codehaus.groovy</groupId>, +            <artifactId>groovy-all</artifactId>, +            <version>2.3.2</version>, +            <scope>test</scope>, +        </dependency>, +++ b/src/test/java/org/elasticsearch/test/ShieldRestTests.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.test;, +, +import com.carrotsearch.randomizedtesting.SysGlobals;, +import com.carrotsearch.randomizedtesting.annotations.Name;, +import com.google.common.base.Charsets;, +import com.google.common.io.Files;, +import org.elasticsearch.ElasticsearchException;, +import org.elasticsearch.common.os.OsUtils;, +import org.elasticsearch.common.settings.ImmutableSettings;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.plugins.PluginsService;, +import org.elasticsearch.shield.plugin.ShieldPlugin;, +import org.elasticsearch.shield.transport.netty.NettySecuredTransport;, +import org.elasticsearch.test.rest.ElasticsearchRestTests;, +import org.elasticsearch.test.rest.RestTestCandidate;, +import org.elasticsearch.transport.TransportModule;, +import org.junit.AfterClass;, +import org.junit.ClassRule;, +import org.junit.rules.TemporaryFolder;, +, +import java.io.File;, +import java.io.IOException;, +import java.nio.file.Path;, +, +import static org.elasticsearch.shield.authc.support.UsernamePasswordToken.basicAuthHeaderValue;, +import static org.hamcrest.Matchers.is;, +, +/**, + *, + */, +public class ShieldRestTests extends ElasticsearchRestTests {, +, +    public static final int CHILD_JVM_ID = Integer.parseInt(System.getProperty(SysGlobals.CHILDVM_SYSPROP_JVM_ID, "0"));, +    public static final int BASE_PORT = 33000 + CHILD_JVM_ID * 100;, +    public static final String BASE_PORT_RANGE = BASE_PORT + "-" + (BASE_PORT+10) ;, +, +    protected static final boolean ENABLE_TRANSPORT_SSL = true;, +    protected static final boolean SHIELD_AUDIT_ENABLED = false;, +, +    protected static final String DEFAULT_USER_NAME = "test_user";, +    protected static final String DEFAULT_PASSWORD = "changeme";, +    protected static final String DEFAULT_ROLE = "user";, +, +    public static final String CONFIG_IPFILTER_ALLOW_ALL = "allow: all\n";, +    public static final String CONFIG_STANDARD_USER = DEFAULT_USER_NAME + ":{plain}" + DEFAULT_PASSWORD + "\n";, +    public static final String CONFIG_STANDARD_USER_ROLES = DEFAULT_USER_NAME + ":" + DEFAULT_ROLE + "\n";, +    public static final String CONFIG_ROLE_ALLOW_ALL = "user:\n" +, +            "  cluster: ALL\n" +, +            "  indices:\n" +, +            "    '.*': ALL\n";, +, +    static {, +        InternalTestCluster.DEFAULT_SETTINGS_SOURCE = new SettingsSource() {, +, +            @Override, +            public Settings node(int nodeOrdinal) {, +                File store;, +                try {, +                    store = new File(getClass().getResource("/org/elasticsearch/shield/transport/ssl/certs/simple/testnode.jks").toURI());, +                    assertThat(store.exists(), is(true));, +                } catch (Exception e) {, +                    throw new ElasticsearchException("Error reading test node cert", e);, +                }, +                String password = "testnode";, +, +                File folder = createFolder();]