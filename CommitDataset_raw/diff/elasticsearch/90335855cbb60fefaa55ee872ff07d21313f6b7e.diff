[+++ b/marvel/src/test/java/org/elasticsearch/marvel/agent/collector/shards/ShardsCollectorTests.java, +import static org.hamcrest.Matchers.*;, +, +        securedEnsureGreen();, +        securedRefresh();, +            String index = indexPrefix + String.valueOf(i);, +            assertAcked(prepareCreate(index));, +                client().prepareIndex(index, "test").setSource("num", i).get();, +        securedRefresh();, +        int totalShards = 0;, +            String index = indexPrefix + String.valueOf(i);, +, +            assertHitCount(client().prepareSearch(index).setSize(0).get(), nbDocsPerIndex[i]);, +            disableAllocation(index);, +            totalShards += getNumShards(index).totalNumShards;, +            String index = indexPrefix + String.valueOf(i);, +            int total = getNumShards(index).totalNumShards;, +            assertThat("expecting " + total + " shards marvel documents for index [" + index + "]", shards[i], equalTo(total));, +++ b/marvel/src/test/java/org/elasticsearch/marvel/agent/collector/shards/ShardsCollectorTests.java, +import static org.hamcrest.Matchers.*;, +, +        securedEnsureGreen();, +        securedRefresh();, +            String index = indexPrefix + String.valueOf(i);, +            assertAcked(prepareCreate(index));, +                client().prepareIndex(index, "test").setSource("num", i).get();, +        securedRefresh();, +        int totalShards = 0;, +            String index = indexPrefix + String.valueOf(i);, +, +            assertHitCount(client().prepareSearch(index).setSize(0).get(), nbDocsPerIndex[i]);, +            disableAllocation(index);, +            totalShards += getNumShards(index).totalNumShards;, +            String index = indexPrefix + String.valueOf(i);, +            int total = getNumShards(index).totalNumShards;, +            assertThat("expecting " + total + " shards marvel documents for index [" + index + "]", shards[i], equalTo(total));, +++ b/marvel/src/test/java/org/elasticsearch/marvel/agent/exporter/local/LocalExporterTests.java, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                assertThat(exporter.openBulk(), notNullValue());, +            }, +        });]