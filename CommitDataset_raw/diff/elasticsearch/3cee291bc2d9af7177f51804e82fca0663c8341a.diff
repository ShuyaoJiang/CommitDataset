[+++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +    /**, +     * A timeout value in case the master has not been discovered yet or disconnected., +     */, +    @Override, +    public CreateIndexRequest masterNodeTimeout(TimeValue timeout) {, +        this.masterNodeTimeout = timeout;, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +    /**, +     * A timeout value in case the master has not been discovered yet or disconnected., +     */, +    @Override, +    public CreateIndexRequest masterNodeTimeout(TimeValue timeout) {, +        this.masterNodeTimeout = timeout;, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +            createIndexAction.execute(new CreateIndexRequest(request.index()).cause("auto(delete api)").masterNodeTimeout(request.timeout()), new ActionListener<CreateIndexResponse>() {, +++ b/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java, +    /**, +     * A timeout value in case the master has not been discovered yet or disconnected., +     */, +    @Override, +    public CreateIndexRequest masterNodeTimeout(TimeValue timeout) {, +        this.masterNodeTimeout = timeout;, +        return this;, +    }, +, +++ b/src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java, +            createIndexAction.execute(new CreateIndexRequest(request.index()).cause("auto(delete api)").masterNodeTimeout(request.timeout()), new ActionListener<CreateIndexResponse>() {, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +            createIndexAction.execute(new CreateIndexRequest(request.index()).cause("auto(index api)").masterNodeTimeout(request.timeout()), new ActionListener<CreateIndexResponse>() {]