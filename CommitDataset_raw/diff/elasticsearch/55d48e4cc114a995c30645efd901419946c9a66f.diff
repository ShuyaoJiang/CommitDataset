[+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Querier.java, +            ConstantExtractor totalCount = new ConstantExtractor(response.getHits().getTotalHits());, +                exts.add(createExtractor(ref, totalCount));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Querier.java, +            ConstantExtractor totalCount = new ConstantExtractor(response.getHits().getTotalHits());, +                exts.add(createExtractor(ref, totalCount));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/extractor/MetricAggExtractor.java, +import org.elasticsearch.search.aggregations.matrix.stats.MatrixStats;, +import org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation.SingleValue;, +import org.elasticsearch.search.aggregations.metrics.InternalStats;, +import org.elasticsearch.search.aggregations.metrics.PercentileRanks;, +import org.elasticsearch.search.aggregations.metrics.Percentiles;, +, +        if (!containsValues(agg)) {, +            return null;, +        }, +, +    /**, +     * Check if the given aggregate has been executed and has computed values, +     * or not (the bucket is null)., +     * , +     * Waiting on https://github.com/elastic/elasticsearch/issues/34903, +     */, +    private static boolean containsValues(InternalAggregation agg) {, +        // Stats & ExtendedStats, +        if (agg instanceof InternalStats) {, +            return ((InternalStats) agg).getCount() != 0;, +        }, +        if (agg instanceof MatrixStats) {, +            return ((MatrixStats) agg).getDocCount() != 0;, +        }, +        // sum returns 0 even for null; since that's a common case, we return it as such, +        if (agg instanceof SingleValue) {, +            return Double.isFinite(((SingleValue) agg).value());, +        }, +        if (agg instanceof PercentileRanks) {, +            return Double.isFinite(((PercentileRanks) agg).percent(0));, +        }, +        if (agg instanceof Percentiles) {, +            return Double.isFinite(((Percentiles) agg).percentile(0));, +        }, +        return true;, +    }, +, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Querier.java, +            ConstantExtractor totalCount = new ConstantExtractor(response.getHits().getTotalHits());, +                exts.add(createExtractor(ref, totalCount));, +++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/extractor/MetricAggExtractor.java, +import org.elasticsearch.search.aggregations.matrix.stats.MatrixStats;, +import org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation.SingleValue;, +import org.elasticsearch.search.aggregations.metrics.InternalStats;, +import org.elasticsearch.search.aggregations.metrics.PercentileRanks;, +import org.elasticsearch.search.aggregations.metrics.Percentiles;, +, +        if (!containsValues(agg)) {, +            return null;, +        }, +, +    /**, +     * Check if the given aggregate has been executed and has computed values, +     * or not (the bucket is null)., +     * , +     * Waiting on https://github.com/elastic/elasticsearch/issues/34903, +     */, +    private static boolean containsValues(InternalAggregation agg) {, +        // Stats & ExtendedStats, +        if (agg instanceof InternalStats) {, +            return ((InternalStats) agg).getCount() != 0;, +        }, +        if (agg instanceof MatrixStats) {, +            return ((MatrixStats) agg).getDocCount() != 0;, +        }, +        // sum returns 0 even for null; since that's a common case, we return it as such, +        if (agg instanceof SingleValue) {, +            return Double.isFinite(((SingleValue) agg).value());, +        }, +        if (agg instanceof PercentileRanks) {, +            return Double.isFinite(((PercentileRanks) agg).percent(0));, +        }, +        if (agg instanceof Percentiles) {, +            return Double.isFinite(((Percentiles) agg).percentile(0));, +        }, +        return true;, +    }, +, +++ b/x-pack/qa/sql/src/main/resources/agg.csv-spec, +, +nullAggs, +SELECT MAX(languages) max, MIN(languages) min, SUM(languages) sum, AVG(languages) avg,, +       PERCENTILE(languages, 80) percent, PERCENTILE_RANK(languages, 3) percent_rank, , +       KURTOSIS(languages) kurtosis, SKEWNESS(languages) skewness  , +       FROM test_emp GROUP BY languages ORDER BY languages ASC LIMIT 5;, +, +      max:bt   |      min:bt   |      sum:bt   |      avg:bt   |    percent:d  | percent_rank:d|   kurtosis:d  |   skewness:d    , +---------------+---------------+---------------+---------------+---------------+---------------+---------------+---------------, +null           |null           |null           |null           |null           |null           |null           |null           , +1              |1              |15             |1              |1.0            |100.0          |NaN            |NaN            , +2              |2              |38             |2              |2.0            |100.0          |NaN            |NaN            , +3              |3              |51             |3              |3.0            |100.0          |NaN            |NaN            , +4              |4              |72             |4              |4.0            |0.0            |NaN            |NaN   ]