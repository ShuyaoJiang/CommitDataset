[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +            ActionListener<Response> listener, ActionFilterChain<Request, Response> chain);, +    <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +            ActionFilterChain<?, Response> chain);, +        public final <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +                ActionListener<Response> listener, ActionFilterChain<Request, Response> chain) {, +        public final <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +                ActionFilterChain<?, Response> chain) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +            ActionListener<Response> listener, ActionFilterChain<Request, Response> chain);, +    <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +            ActionFilterChain<?, Response> chain);, +        public final <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +                ActionListener<Response> listener, ActionFilterChain<Request, Response> chain) {, +        public final <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +                ActionFilterChain<?, Response> chain) {, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilterChain.java, +public interface ActionFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse> {, +    void proceed(Task task, final String action, final Request request, final ActionListener<Response> listener);, +    void proceed(final String action, final Response response, final ActionListener<Response> listener);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +            ActionListener<Response> listener, ActionFilterChain<Request, Response> chain);, +    <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +            ActionFilterChain<?, Response> chain);, +        public final <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +                ActionListener<Response> listener, ActionFilterChain<Request, Response> chain) {, +        public final <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +                ActionFilterChain<?, Response> chain) {, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilterChain.java, +public interface ActionFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse> {, +    void proceed(Task task, final String action, final Request request, final ActionListener<Response> listener);, +    void proceed(final String action, final Response response, final ActionListener<Response> listener);, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportAction.java, +            RequestFilterChain<Request, Response> requestFilterChain = new RequestFilterChain<>(this, logger);, +    private static class RequestFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse>, +            implements ActionFilterChain<Request, Response> {, +        @Override, +        public void proceed(Task task, String actionName, Request request, ActionListener<Response> listener) {, +                    this.action.doExecute(task, request, new FilteredActionListener<Response>(actionName, listener,, +                            new ResponseFilterChain<>(this.action.filters, logger)));, +        public void proceed(String action, Response response, ActionListener<Response> listener) {, +    private static class ResponseFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse>, +            implements ActionFilterChain<Request, Response> {, +        public void proceed(Task task, String action, Request request, ActionListener<Response> listener) {, +        @Override, +        public void proceed(String action, Response response, ActionListener<Response> listener) {, +        private final ActionListener<Response> listener;, +        private final ResponseFilterChain<?, Response> chain;, +        private FilteredActionListener(String actionName, ActionListener<Response> listener, ResponseFilterChain<?, Response> chain) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilter.java, +    <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +            ActionListener<Response> listener, ActionFilterChain<Request, Response> chain);, +    <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +            ActionFilterChain<?, Response> chain);, +        public final <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +                ActionListener<Response> listener, ActionFilterChain<Request, Response> chain) {, +        public final <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +                ActionFilterChain<?, Response> chain) {, +++ b/core/src/main/java/org/elasticsearch/action/support/ActionFilterChain.java, +public interface ActionFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse> {, +    void proceed(Task task, final String action, final Request request, final ActionListener<Response> listener);, +    void proceed(final String action, final Response response, final ActionListener<Response> listener);, +++ b/core/src/main/java/org/elasticsearch/action/support/TransportAction.java, +            RequestFilterChain<Request, Response> requestFilterChain = new RequestFilterChain<>(this, logger);, +    private static class RequestFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse>, +            implements ActionFilterChain<Request, Response> {, +        @Override, +        public void proceed(Task task, String actionName, Request request, ActionListener<Response> listener) {, +                    this.action.doExecute(task, request, new FilteredActionListener<Response>(actionName, listener,, +                            new ResponseFilterChain<>(this.action.filters, logger)));, +        public void proceed(String action, Response response, ActionListener<Response> listener) {, +    private static class ResponseFilterChain<Request extends ActionRequest<Request>, Response extends ActionResponse>, +            implements ActionFilterChain<Request, Response> {, +        public void proceed(Task task, String action, Request request, ActionListener<Response> listener) {, +        @Override, +        public void proceed(String action, Response response, ActionListener<Response> listener) {, +        private final ActionListener<Response> listener;, +        private final ResponseFilterChain<?, Response> chain;, +        private FilteredActionListener(String actionName, ActionListener<Response> listener, ResponseFilterChain<?, Response> chain) {, +++ b/core/src/test/java/org/elasticsearch/action/support/TransportActionFilterChainTests.java, +            public <Request extends ActionRequest<Request>, Response extends ActionResponse> void execute(Task task, String action, Request request,, +                    ActionListener<Response> listener, ActionFilterChain<Request, Response> actionFilterChain) {, +                    actionFilterChain.proceed(task, action, request, listener);, +            public <Response extends ActionResponse> void execute(String action, Response response, ActionListener<Response> listener,, +                    ActionFilterChain<?, Response> chain) {, +        public <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +                ActionListener<Response> listener, ActionFilterChain<Request, Response> chain) {, +            this.callback.execute(task, action, request, listener, chain);, +        public <Response extends ActionResponse> void apply(String action, Response response, ActionListener<Response> listener,, +                ActionFilterChain<?, Response> chain) {, +        public <Request extends ActionRequest<Request>, Response extends ActionResponse> void apply(Task task, String action, Request request,, +                ActionListener<Response> listener, ActionFilterChain<Request, Response> chain) {]