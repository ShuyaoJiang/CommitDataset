[+++ b/x-pack/plugin/security/src/main/config/role_mapping.yml, +# Role mapping configuration file which has elasticsearch roles as keys, +# that map to one or more user or group distinguished names, +, +#roleA:   this is an elasticsearch role, +#  - groupA-DN  this is a group distinguished name, +#  - groupB-DN, +#  - user1-DN   this is the full user distinguished name, +, +#power_user:, +#  - "cn=admins,dc=example,dc=com", +#user:, +#  - "cn=users,dc=example,dc=com", +#  - "cn=admins,dc=example,dc=com", +#  - "cn=John Doe,cn=other users,dc=example,dc=com", +++ b/x-pack/plugin/security/src/main/config/role_mapping.yml, +# Role mapping configuration file which has elasticsearch roles as keys, +# that map to one or more user or group distinguished names, +, +#roleA:   this is an elasticsearch role, +#  - groupA-DN  this is a group distinguished name, +#  - groupB-DN, +#  - user1-DN   this is the full user distinguished name, +, +#power_user:, +#  - "cn=admins,dc=example,dc=com", +#user:, +#  - "cn=users,dc=example,dc=com", +#  - "cn=admins,dc=example,dc=com", +#  - "cn=John Doe,cn=other users,dc=example,dc=com", +++ b/x-pack/plugin/security/src/main/config/roles.yml, +# The default roles file is empty as the preferred method of defining roles is, +# through the API/UI. File based roles are useful in error scenarios when the, +# API based roles may not be available., +++ b/x-pack/plugin/security/src/main/config/role_mapping.yml, +# Role mapping configuration file which has elasticsearch roles as keys, +# that map to one or more user or group distinguished names, +, +#roleA:   this is an elasticsearch role, +#  - groupA-DN  this is a group distinguished name, +#  - groupB-DN, +#  - user1-DN   this is the full user distinguished name, +, +#power_user:, +#  - "cn=admins,dc=example,dc=com", +#user:, +#  - "cn=users,dc=example,dc=com", +#  - "cn=admins,dc=example,dc=com", +#  - "cn=John Doe,cn=other users,dc=example,dc=com", +++ b/x-pack/plugin/security/src/main/config/roles.yml, +# The default roles file is empty as the preferred method of defining roles is, +# through the API/UI. File based roles are useful in error scenarios when the, +# API based roles may not be available., +++ b/x-pack/plugin/security/src/test/resources/org/elasticsearch/xpack/security/authc/ldap/role_mapping.yml, +# AD Realm Role Mapping, +++ b/x-pack/plugin/security/src/main/config/role_mapping.yml, +# Role mapping configuration file which has elasticsearch roles as keys, +# that map to one or more user or group distinguished names, +, +#roleA:   this is an elasticsearch role, +#  - groupA-DN  this is a group distinguished name, +#  - groupB-DN, +#  - user1-DN   this is the full user distinguished name, +, +#power_user:, +#  - "cn=admins,dc=example,dc=com", +#user:, +#  - "cn=users,dc=example,dc=com", +#  - "cn=admins,dc=example,dc=com", +#  - "cn=John Doe,cn=other users,dc=example,dc=com", +++ b/x-pack/plugin/security/src/main/config/roles.yml, +# The default roles file is empty as the preferred method of defining roles is, +# through the API/UI. File based roles are useful in error scenarios when the, +# API based roles may not be available., +++ b/x-pack/plugin/security/src/test/resources/org/elasticsearch/xpack/security/authc/ldap/role_mapping.yml, +# AD Realm Role Mapping, +++ b/x-pack/plugin/security/src/test/resources/org/elasticsearch/xpack/security/authc/ldap/support/ldapWithGroupSearch.yml, +# This LDAP connection does group lookup by a subtree search, no role mapping, +++ b/x-pack/plugin/security/src/main/config/role_mapping.yml, +# Role mapping configuration file which has elasticsearch roles as keys, +# that map to one or more user or group distinguished names, +, +#roleA:   this is an elasticsearch role, +#  - groupA-DN  this is a group distinguished name, +#  - groupB-DN, +#  - user1-DN   this is the full user distinguished name, +, +#power_user:, +#  - "cn=admins,dc=example,dc=com", +#user:, +#  - "cn=users,dc=example,dc=com", +#  - "cn=admins,dc=example,dc=com", +#  - "cn=John Doe,cn=other users,dc=example,dc=com", +++ b/x-pack/plugin/security/src/main/config/roles.yml, +# The default roles file is empty as the preferred method of defining roles is, +# through the API/UI. File based roles are useful in error scenarios when the, +# API based roles may not be available., +++ b/x-pack/plugin/security/src/test/resources/org/elasticsearch/xpack/security/authc/ldap/role_mapping.yml, +# AD Realm Role Mapping, +++ b/x-pack/plugin/security/src/test/resources/org/elasticsearch/xpack/security/authc/ldap/support/ldapWithGroupSearch.yml]