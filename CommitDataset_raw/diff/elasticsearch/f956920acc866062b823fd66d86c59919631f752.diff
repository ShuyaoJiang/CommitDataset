[+++ b/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +     * Copy constructor that creates a new search request that is a copy of the one provided as an argument., +     * The new request will inherit though headers and context from the original request that caused it., +     */, +    public SearchRequest(SearchRequest searchRequest, ActionRequest originalRequest) {, +        super(originalRequest);, +        this.searchType = searchRequest.searchType;, +        this.indices = searchRequest.indices;, +        this.routing = searchRequest.routing;, +        this.preference = searchRequest.preference;, +        this.templateSource = searchRequest.templateSource;, +        this.templateSourceUnsafe = searchRequest.templateSourceUnsafe;, +        this.templateName = searchRequest.templateName;, +        this.templateType = searchRequest.templateType;, +        this.templateParams = searchRequest.templateParams;, +        this.source = searchRequest.source;, +        this.sourceUnsafe = searchRequest.sourceUnsafe;, +        this.extraSource = searchRequest.extraSource;, +        this.extraSourceUnsafe = searchRequest.extraSourceUnsafe;, +        this.queryCache = searchRequest.queryCache;, +        this.scroll = searchRequest.scroll;, +        this.types = searchRequest.types;, +        this.indicesOptions = searchRequest.indicesOptions;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +     * Copy constructor that creates a new search request that is a copy of the one provided as an argument., +     * The new request will inherit though headers and context from the original request that caused it., +     */, +    public SearchRequest(SearchRequest searchRequest, ActionRequest originalRequest) {, +        super(originalRequest);, +        this.searchType = searchRequest.searchType;, +        this.indices = searchRequest.indices;, +        this.routing = searchRequest.routing;, +        this.preference = searchRequest.preference;, +        this.templateSource = searchRequest.templateSource;, +        this.templateSourceUnsafe = searchRequest.templateSourceUnsafe;, +        this.templateName = searchRequest.templateName;, +        this.templateType = searchRequest.templateType;, +        this.templateParams = searchRequest.templateParams;, +        this.source = searchRequest.source;, +        this.sourceUnsafe = searchRequest.sourceUnsafe;, +        this.extraSource = searchRequest.extraSource;, +        this.extraSourceUnsafe = searchRequest.extraSourceUnsafe;, +        this.queryCache = searchRequest.queryCache;, +        this.scroll = searchRequest.scroll;, +        this.types = searchRequest.types;, +        this.indicesOptions = searchRequest.indicesOptions;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/action/search/TransportMultiSearchAction.java, +            SearchRequest searchRequest = new SearchRequest(request.requests().get(i), request);, +            searchAction.execute(searchRequest, new ActionListener<SearchResponse>() {]