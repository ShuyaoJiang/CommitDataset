[+++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/core/build.gradle, +  compile "net.java.dev.jna:jna:${versions.jna}", optional, +++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/core/build.gradle, +  compile "net.java.dev.jna:jna:${versions.jna}", optional, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/core/build.gradle, +  compile "net.java.dev.jna:jna:${versions.jna}", optional, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version) {, +, +, +++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/core/build.gradle, +  compile "net.java.dev.jna:jna:${versions.jna}", optional, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version) {, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/core/build.gradle, +  compile "net.java.dev.jna:jna:${versions.jna}", optional, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version) {, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStatsFlags.java, +, +++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/core/build.gradle, +  compile "net.java.dev.jna:jna:${versions.jna}", optional, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version) {, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStatsFlags.java, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/buildSrc/version.properties, +jna               = 4.1.0, +, +++ b/core/build.gradle, +  compile "net.java.dev.jna:jna:${versions.jna}", optional, +++ b/core/src/main/java/org/elasticsearch/action/ActionListenerResponseHandler.java, +    private final ActionListener<Response> listener;, +    public ActionListenerResponseHandler(ActionListener<Response> listener, Supplier<Response> responseSupplier) {, +++ b/core/src/main/java/org/elasticsearch/action/DocWriteResponse.java, +import org.elasticsearch.action.support.WriteRequest.RefreshPolicy;, +    public DocWriteResponse(ShardId shardId, String type, String id, long version) {, +, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java, +                    shardsStats.add(new ShardStats(indexShard.routingEntry(), indexShard.shardPath(), new CommonStats(indicesService.getIndicesQueryCache(), indexShard, SHARD_STATS_FLAGS), indexShard.commitStats()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStatsFlags.java, +, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java, +    public ShardStats(ShardRouting routing, ShardPath shardPath, CommonStats commonStats, CommitStats commitStats) {, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java]