[+++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +            // Throw a more meaningful message if the document is empty., +            if (source.source() != null && source.source().length() == 0) {, +                throw new MapperParsingException("failed to parse, document is empty");, +            }, +, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +            // Throw a more meaningful message if the document is empty., +            if (source.source() != null && source.source().length() == 0) {, +                throw new MapperParsingException("failed to parse, document is empty");, +            }, +, +++ b/src/test/java/org/elasticsearch/test/unit/index/mapper/simple/SimpleMapperTests.java, +import org.elasticsearch.index.mapper.MapperParsingException;, +, +    @Test, +    public void testNoDocumentSent() throws Exception {, +        DocumentMapperParser mapperParser = MapperTests.newParser();, +        DocumentMapper docMapper = doc("test",, +                rootObject("person"), +                        .add(object("name").add(stringField("first").store(true).index(false))), +        ).build(mapperParser);, +, +        BytesReference json = new BytesArray("".getBytes());, +        try {, +            docMapper.parse("person", "1", json).rootDoc();, +            assertThat("this point is never reached", false);, +        } catch (MapperParsingException e) {, +            assertThat(e.getMessage(), equalTo("failed to parse, document is empty"));, +        }, +    }]