[+++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'type' field");, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'type' field");, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'type' field");, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter requires 'parent_type' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter configured 'parent_type' [" + parentType + "] is not a valid type");, +        // In case of delete by query api, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_parent] Can't execute, search context not set");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'type' field");, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter requires 'parent_type' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter configured 'parent_type' [" + parentType + "] is not a valid type");, +        // In case of delete by query api, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_parent] Can't execute, search context not set");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_parent] query requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] query requires 'parent_type' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] query configured 'parent_type' [" + parentType + "] is not a valid type");, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_parent] Can't execute, search context not set.");, +        }, +, +++ b/src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_child] filter requires 'type' field");, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_child] Can't execute, search context not set.");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter requires 'parent_type' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] filter configured 'parent_type' [" + parentType + "] is not a valid type");, +        // In case of delete by query api, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_parent] Can't execute, search context not set");, +        }, +++ b/src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java, +import org.elasticsearch.ElasticSearchIllegalStateException;, +            throw new QueryParsingException(parseContext.index(), "[has_parent] query requires 'query' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] query requires 'parent_type' field");, +            throw new QueryParsingException(parseContext.index(), "[has_parent] query configured 'parent_type' [" + parentType + "] is not a valid type");, +        if (searchContext == null) {, +            throw new ElasticSearchIllegalStateException("[has_parent] Can't execute, search context not set.");, +        }, +]