[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacetProcessor.java, +    private final TObjectIntHashMap<String> rounding = new TObjectIntHashMap<String>(Constants.DEFAULT_CAPACITY, Constants.DEFAULT_LOAD_FACTOR, -1);, +                DateFieldParser fieldParser = dateFieldParsers.get(sInterval.substring(0, index));, +                if (fieldParser == null) {, +                    throw new FacetPhaseExecutionException(facetName, "failed to parse interval [" + sInterval + "] with custom rounding using built in intervals (year/month/...)");, +                }, +                DateTimeField field = fieldParser.parse(dateTime.getChronology());, +                int rounding = this.rounding.get(sInterval.substring(index + 1));, +                if (rounding == -1) {, +                    throw new FacetPhaseExecutionException(facetName, "failed to parse interval [" + sInterval + "], rounding type [" + (sInterval.substring(index + 1)) + "] not found");, +                }, +                dateTime.setRounding(field, rounding);, +                DateFieldParser fieldParser = dateFieldParsers.get(sInterval);, +                if (fieldParser != null) {, +                    DateTimeField field = fieldParser.parse(dateTime.getChronology());, +                    try {, +                    } catch (Exception e) {, +                        throw new FacetPhaseExecutionException(facetName, "failed to parse interval [" + sInterval + "], tried both as built in intervals (year/month/...) and as a time format");, +                    }]