[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Checks that the order of modifiers conforms to the suggestions in the, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +    The correct order is:, +            public, +            protected, +            private, +            abstract, +            static, +            final, +            transient, +            volatile, +            synchronized, +            native, +            strictfp, +    -->, +    <module name="ModifierOrder" />, +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Checks that the order of modifiers conforms to the suggestions in the, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +    The correct order is:, +            public, +            protected, +            private, +            abstract, +            static, +            final, +            transient, +            volatile, +            synchronized, +            native, +            strictfp, +    -->, +    <module name="ModifierOrder" />, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Checks that the order of modifiers conforms to the suggestions in the, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +    The correct order is:, +            public, +            protected, +            private, +            abstract, +            static, +            final, +            transient, +            volatile, +            synchronized, +            native, +            strictfp, +    -->, +    <module name="ModifierOrder" />, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml, +++ b/buildSrc/src/test/java/org/elasticsearch/test/NamingConventionsCheckBadClasses.java, +    public abstract static class DummyAbstractTests extends UnitTestCase {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +            current.println("  - match: "), +            current.println("      \$body: "), +++ b/buildSrc/src/main/resources/checkstyle.xml, +    <!-- Checks that the order of modifiers conforms to the suggestions in the, +    Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. It is not that, +    the standard is perfect, but having a consistent order makes the code more, +    readable and no other order is compellingly better than the standard., +    The correct order is:, +            public, +            protected, +            private, +            abstract, +            static, +            final, +            transient, +            volatile, +            synchronized, +            native, +            strictfp, +    -->, +    <module name="ModifierOrder" />, +, +++ b/buildSrc/src/main/resources/checkstyle_suppressions.xml]