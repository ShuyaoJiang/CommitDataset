[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +            // tag::reindex-request-query, +            request.setSourceQuery(new TermQueryBuilder("user", "kimchy")); // <1>, +            // end::reindex-request-query, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +            // tag::reindex-request-query, +            request.setSourceQuery(new TermQueryBuilder("user", "kimchy")); // <1>, +            // end::reindex-request-query, +++ b/docs/java-rest/high-level/document/reindex.asciidoc, +You can limit the documents by adding a query., +include-tagged::{doc-tests-file}[{api}-request-query], +<1> Only copy documents which have field `user` set to `kimchy`, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +            // tag::reindex-request-query, +            request.setSourceQuery(new TermQueryBuilder("user", "kimchy")); // <1>, +            // end::reindex-request-query, +++ b/docs/java-rest/high-level/document/reindex.asciidoc, +You can limit the documents by adding a query., +include-tagged::{doc-tests-file}[{api}-request-query], +<1> Only copy documents which have field `user` set to `kimchy`, +++ b/qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java, +import org.elasticsearch.index.mapper.TypeFieldMapper;, +        explainRequest.setOptions(, +            expectWarnings(RestExplainAction.TYPES_DEPRECATION_MESSAGE, TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +            // tag::reindex-request-query, +            request.setSourceQuery(new TermQueryBuilder("user", "kimchy")); // <1>, +            // end::reindex-request-query, +++ b/docs/java-rest/high-level/document/reindex.asciidoc, +You can limit the documents by adding a query., +include-tagged::{doc-tests-file}[{api}-request-query], +<1> Only copy documents which have field `user` set to `kimchy`, +++ b/qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java, +import org.elasticsearch.index.mapper.TypeFieldMapper;, +        explainRequest.setOptions(, +            expectWarnings(RestExplainAction.TYPES_DEPRECATION_MESSAGE, TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +    public static final class TypeFieldType extends StringFieldType {, +        public static final String TYPES_DEPRECATION_MESSAGE =, +            "[types removal] Referring to types within search queries is deprecated, filter on a field instead.";, +            deprecationLogger.deprecatedAndMaybeLog("exists_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +            deprecationLogger.deprecatedAndMaybeLog("term_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +            deprecationLogger.deprecatedAndMaybeLog("range_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +            // tag::reindex-request-query, +            request.setSourceQuery(new TermQueryBuilder("user", "kimchy")); // <1>, +            // end::reindex-request-query, +++ b/docs/java-rest/high-level/document/reindex.asciidoc, +You can limit the documents by adding a query., +include-tagged::{doc-tests-file}[{api}-request-query], +<1> Only copy documents which have field `user` set to `kimchy`, +++ b/qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java, +import org.elasticsearch.index.mapper.TypeFieldMapper;, +        explainRequest.setOptions(, +            expectWarnings(RestExplainAction.TYPES_DEPRECATION_MESSAGE, TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +    public static final class TypeFieldType extends StringFieldType {, +        public static final String TYPES_DEPRECATION_MESSAGE =, +            "[types removal] Referring to types within search queries is deprecated, filter on a field instead.";, +            deprecationLogger.deprecatedAndMaybeLog("exists_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +            deprecationLogger.deprecatedAndMaybeLog("term_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +            deprecationLogger.deprecatedAndMaybeLog("range_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +++ b/server/src/main/java/org/elasticsearch/index/query/TypeQueryBuilder.java, +import org.elasticsearch.index.mapper.TypeFieldMapper;, +        deprecationLogger.deprecatedAndMaybeLog("type_query", TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java, +            // tag::reindex-request-query, +            request.setSourceQuery(new TermQueryBuilder("user", "kimchy")); // <1>, +            // end::reindex-request-query, +++ b/docs/java-rest/high-level/document/reindex.asciidoc, +You can limit the documents by adding a query., +include-tagged::{doc-tests-file}[{api}-request-query], +<1> Only copy documents which have field `user` set to `kimchy`, +++ b/qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java, +import org.elasticsearch.index.mapper.TypeFieldMapper;, +        explainRequest.setOptions(, +            expectWarnings(RestExplainAction.TYPES_DEPRECATION_MESSAGE, TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE));, +++ b/server/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java, +    public static final class TypeFieldType extends StringFieldType {, +        public static final String TYPES_DEPRECATION_MESSAGE =, +            "[types removal] Referring to types within search queries is deprecated, filter on a field instead.";, +            deprecationLogger.deprecatedAndMaybeLog("exists_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +            deprecationLogger.deprecatedAndMaybeLog("term_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +            deprecationLogger.deprecatedAndMaybeLog("range_query_with_type_field", TYPES_DEPRECATION_MESSAGE);, +++ b/server/src/main/java/org/elasticsearch/index/query/TypeQueryBuilder.java, +import org.elasticsearch.index.mapper.TypeFieldMapper;, +        deprecationLogger.deprecatedAndMaybeLog("type_query", TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE);, +++ b/server/src/test/java/org/elasticsearch/index/mapper/TypeFieldTypeTests.java, +        assertWarnings(TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE);, +    }, +, +    public void testExistsQuery() {, +        QueryShardContext context = Mockito.mock(QueryShardContext.class);, +        TypeFieldMapper.TypeFieldType ft = new TypeFieldMapper.TypeFieldType();, +        ft.setName(TypeFieldMapper.NAME);, +        ft.existsQuery(context);, +        assertWarnings(TypeFieldMapper.TypeFieldType.TYPES_DEPRECATION_MESSAGE);, +    }, +, +    public void testRangeQuery() {]