[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java, +++ b/core/src/test/java/org/elasticsearch/search/child/ChildQuerySearchIT.java, +    public void testAddParentFieldAfterIndexingParentDocButBeforeIndexingChildDoc() throws Exception {, +        assertAcked(prepareCreate("test"), +                .setSettings(Settings.builder(), +                        .put(indexSettings()), +                        .put("index.refresh_interval", -1)));, +        ensureGreen();, +, +        String parentId = "p1";, +        client().prepareIndex("test", "parent", parentId).setSource("p_field", "1").get();, +        refresh();, +, +        try {, +            assertAcked(client().admin(), +                    .indices(), +                    .preparePutMapping("test"), +                    .setType("child"), +                    .setSource("_parent", "type=parent"));, +            fail("Shouldn't be able the add the _parent field pointing to an already existing parent type");, +        } catch (IllegalArgumentException e) {, +            assertThat(e.getMessage(), equalTo("can't add a _parent field that points to an already existing type"));, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +                                if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) {, +                                    throw new IllegalArgumentException("can't add a _parent field that points to an already existing type");, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +                    ResourceWatcherService.RELOAD_INTERVAL_LOW, +++ b/core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java, +        Settings indexSettings = settings.filter((s) -> s.startsWith("index.") && clusterSettings.get(s) == null);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +        BooleanQuery.setMaxClauseCount(settings.getAsInt("index.query.bool.max_clause_count",, +                settings.getAsInt("indices.query.bool.max_clause_count", BooleanQuery.getMaxClauseCount())));, +++ /dev/null, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java, +++ b/core/src/test/java/org/elasticsearch/search/child/ChildQuerySearchIT.java, +    public void testAddParentFieldAfterIndexingParentDocButBeforeIndexingChildDoc() throws Exception {, +        assertAcked(prepareCreate("test"), +                .setSettings(Settings.builder()]