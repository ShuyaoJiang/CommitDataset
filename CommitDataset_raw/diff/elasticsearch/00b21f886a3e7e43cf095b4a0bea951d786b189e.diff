[+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/validate/query/QueryExplanation.java, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            index = in.readOptionalString();, +        } else {, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeOptionalString(index);, +        } else {, +        }, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/validate/query/QueryExplanation.java, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            index = in.readOptionalString();, +        } else {, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeOptionalString(index);, +        } else {, +        }, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.IndexNotFoundException;, +import org.elasticsearch.index.query.Rewriteable;, +import org.elasticsearch.indices.IndexClosedException;, +import java.util.function.LongSupplier;, +        LongSupplier timeProvider = () -> request.nowInMillis;, +        ActionListener<org.elasticsearch.index.query.QueryBuilder> rewriteListener = ActionListener.wrap(rewrittenQuery -> {, +            request.query(rewrittenQuery);, +        },, +            ex -> {, +            if (ex instanceof IndexNotFoundException ||, +                ex instanceof IndexClosedException) {, +                listener.onFailure(ex);, +            }, +            List<QueryExplanation> explanations = new ArrayList<>();, +            explanations.add(new QueryExplanation(null,, +                QueryExplanation.RANDOM_SHARD,, +                false,, +                null,, +                ex.getMessage()));, +            listener.onResponse(, +                new ValidateQueryResponse(, +                    false,, +                    explanations,, +                    // totalShards is documented as "the total shards this request ran against",, +                    // which is 0 since the failure is happening on the coordinating node., +                    0,, +                    0 ,, +                    0,, +                    null));, +        });, +        if (request.query() == null) {, +            rewriteListener.onResponse(request.query());, +        } else {, +            Rewriteable.rewriteAndFetch(request.query(), searchService.getRewriteContext(timeProvider),, +                rewriteListener);, +        }, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/validate/query/QueryExplanation.java, +        if (in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            index = in.readOptionalString();, +        } else {, +        }, +        if (out.getVersion().onOrAfter(Version.V_7_0_0_alpha1)) {, +            out.writeOptionalString(index);, +        } else {, +        }, +++ b/server/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.IndexNotFoundException;, +import org.elasticsearch.index.query.Rewriteable;, +import org.elasticsearch.indices.IndexClosedException;, +import java.util.function.LongSupplier;, +        LongSupplier timeProvider = () -> request.nowInMillis;, +        ActionListener<org.elasticsearch.index.query.QueryBuilder> rewriteListener = ActionListener.wrap(rewrittenQuery -> {, +            request.query(rewrittenQuery);, +        },, +            ex -> {, +            if (ex instanceof IndexNotFoundException ||, +                ex instanceof IndexClosedException) {, +                listener.onFailure(ex);, +            }, +            List<QueryExplanation> explanations = new ArrayList<>();, +            explanations.add(new QueryExplanation(null,, +                QueryExplanation.RANDOM_SHARD,, +                false,, +                null,, +                ex.getMessage()));, +            listener.onResponse(, +                new ValidateQueryResponse(, +                    false,, +                    explanations,, +                    // totalShards is documented as "the total shards this request ran against",, +                    // which is 0 since the failure is happening on the coordinating node., +                    0,, +                    0 ,, +                    0,, +                    null));, +        });, +        if (request.query() == null) {, +            rewriteListener.onResponse(request.query());, +        } else {, +            Rewriteable.rewriteAndFetch(request.query(), searchService.getRewriteContext(timeProvider),, +                rewriteListener);]