[+++ b/src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java, +     * Default constructor. Only useful for constructing as a placeholder, but should not be used for actual scoring., +     */, +    public RandomScoreFunction() {, +        super(CombineFunction.MULT);, +        uidFieldData = null;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java, +     * Default constructor. Only useful for constructing as a placeholder, but should not be used for actual scoring., +     */, +    public RandomScoreFunction() {, +        super(CombineFunction.MULT);, +        uidFieldData = null;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionParser.java, +        final FieldMapper<?> mapper = SearchContext.current().mapperService().smartNameFieldMapper("_uid");, +        if (mapper == null) {, +            // mapper could be null if we are on a shard with no docs yet, so this won't actually be used, +            return new RandomScoreFunction();, +        }, +, +        final ShardId shardId = SearchContext.current().indexShard().shardId();, +        final int salt = (shardId.index().name().hashCode() << 10) | shardId.id();, +        final IndexFieldData<?> uidFieldData = SearchContext.current().fieldData().getForField(mapper);, +++ b/src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java, +     * Default constructor. Only useful for constructing as a placeholder, but should not be used for actual scoring., +     */, +    public RandomScoreFunction() {, +        super(CombineFunction.MULT);, +        uidFieldData = null;, +    }, +, +    /**, +++ b/src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionParser.java, +        final FieldMapper<?> mapper = SearchContext.current().mapperService().smartNameFieldMapper("_uid");, +        if (mapper == null) {, +            // mapper could be null if we are on a shard with no docs yet, so this won't actually be used, +            return new RandomScoreFunction();, +        }, +, +        final ShardId shardId = SearchContext.current().indexShard().shardId();, +        final int salt = (shardId.index().name().hashCode() << 10) | shardId.id();, +        final IndexFieldData<?> uidFieldData = SearchContext.current().fieldData().getForField(mapper);, +++ b/src/test/java/org/elasticsearch/search/functionscore/RandomScoreFunctionTests.java, +, +    public void testNoDocs() throws Exception {, +        createIndex("test");, +        ensureGreen();, +, +        SearchResponse resp = client().prepareSearch("test"), +            .setQuery(functionScoreQuery(matchAllQuery(), randomFunction(1234))), +            .get();, +        assertNoFailures(resp);, +        assertEquals(0, resp.getHits().totalHits());, +    }, +]