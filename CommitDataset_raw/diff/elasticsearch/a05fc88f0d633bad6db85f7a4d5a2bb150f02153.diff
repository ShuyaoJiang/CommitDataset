[+++ b/src/main/java/org/elasticsearch/alerts/AlertManager.java, +    public boolean updateAlert(Alert alert) {, +        if (!alertsStore.hasAlert(alert.alertName())) {, +            return false;, +        }, +        return alertsStore.updateAlert(alert);, +, +    }, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertManager.java, +    public boolean updateAlert(Alert alert) {, +        if (!alertsStore.hasAlert(alert.alertName())) {, +            return false;, +        }, +        return alertsStore.updateAlert(alert);, +, +    }, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +    public boolean updateAlert(Alert alert) {, +        return updateAlert(alert, false);, +    }, +, +    public boolean updateAlert(Alert alert, boolean updateMap) {, +        if (updateMap) {, +            alertMap.put(alert.alertName(), alert);, +        } else {, +            // Don'<></> need to update the alertMap, since we are working on an instance from it., +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/alerts/AlertManager.java, +    public boolean updateAlert(Alert alert) {, +        if (!alertsStore.hasAlert(alert.alertName())) {, +            return false;, +        }, +        return alertsStore.updateAlert(alert);, +, +    }, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +    public boolean updateAlert(Alert alert) {, +        return updateAlert(alert, false);, +    }, +, +    public boolean updateAlert(Alert alert, boolean updateMap) {, +        if (updateMap) {, +            alertMap.put(alert.alertName(), alert);, +        } else {, +            // Don'<></> need to update the alertMap, since we are working on an instance from it., +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/alerts/transport/actions/update/TransportUpdateAlertAction.java, +        try {, +            boolean success = alertManager.updateAlert(request.alert());, +            listener.onResponse(new UpdateAlertResponse(success));, +        } catch (Exception e) {, +            listener.onFailure(e);, +        }, +++ b/src/main/java/org/elasticsearch/alerts/AlertManager.java, +    public boolean updateAlert(Alert alert) {, +        if (!alertsStore.hasAlert(alert.alertName())) {, +            return false;, +        }, +        return alertsStore.updateAlert(alert);, +, +    }, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertsStore.java, +    public boolean updateAlert(Alert alert) {, +        return updateAlert(alert, false);, +    }, +, +    public boolean updateAlert(Alert alert, boolean updateMap) {, +        if (updateMap) {, +            alertMap.put(alert.alertName(), alert);, +        } else {, +            // Don'<></> need to update the alertMap, since we are working on an instance from it., +        return true;, +    }, +++ b/src/main/java/org/elasticsearch/alerts/transport/actions/update/TransportUpdateAlertAction.java, +        try {, +            boolean success = alertManager.updateAlert(request.alert());, +            listener.onResponse(new UpdateAlertResponse(success));, +        } catch (Exception e) {, +            listener.onFailure(e);, +        }, +++ b/src/main/java/org/elasticsearch/alerts/transport/actions/update/UpdateAlertResponse.java, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +, +import java.io.IOException;, +    boolean success = false;, +, +    public UpdateAlertResponse() {, +, +    }, +, +    public UpdateAlertResponse(boolean success) {, +        this.success = success;, +    }]