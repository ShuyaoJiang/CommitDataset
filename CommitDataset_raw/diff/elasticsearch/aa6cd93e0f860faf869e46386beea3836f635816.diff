[+++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                            // timestamp, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                            // timestamp, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                        // timestamp, +                        aliasValidator.validateAliasFilter(alias, filter, indexService.newQueryShardContext(0, null, () -> 0L));, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                            // timestamp, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                        // timestamp, +                        aliasValidator.validateAliasFilter(alias, filter, indexService.newQueryShardContext(0, null, () -> 0L));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            // we parse all percolator queries as they would be parsed on shard 0, +            () -> newQueryShardContext(0, null, () -> {, +                throw new IllegalArgumentException("Percolator queries are not allowed to use the curent timestamp");, +            }));, +     * {@link QueryShardContext#setTypes(String...)}., +     *, +     * Passing a {@code null} {@link IndexReader} will return a valid context, however it won't be able to make, +     * {@link IndexReader}-specific optimizations, such as rewriting containing range queries., +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                            // timestamp, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                        // timestamp, +                        aliasValidator.validateAliasFilter(alias, filter, indexService.newQueryShardContext(0, null, () -> 0L));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            // we parse all percolator queries as they would be parsed on shard 0, +            () -> newQueryShardContext(0, null, () -> {, +                throw new IllegalArgumentException("Percolator queries are not allowed to use the curent timestamp");, +            }));, +     * {@link QueryShardContext#setTypes(String...)}., +     *, +     * Passing a {@code null} {@link IndexReader} will return a valid context, however it won't be able to make, +     * {@link IndexReader}-specific optimizations, such as rewriting containing range queries., +++ b/core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java, +    /** Return the current {@link IndexReader}, or {@code null} if no index reader is available, for, +     *  instance if we are on the coordinating node or if this rewrite context is used to index, +     *  queries (percolation). */, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                            // timestamp, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                        // timestamp, +                        aliasValidator.validateAliasFilter(alias, filter, indexService.newQueryShardContext(0, null, () -> 0L));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            // we parse all percolator queries as they would be parsed on shard 0, +            () -> newQueryShardContext(0, null, () -> {, +                throw new IllegalArgumentException("Percolator queries are not allowed to use the curent timestamp");, +            }));, +     * {@link QueryShardContext#setTypes(String...)}., +     *, +     * Passing a {@code null} {@link IndexReader} will return a valid context, however it won't be able to make, +     * {@link IndexReader}-specific optimizations, such as rewriting containing range queries., +++ b/core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java, +    /** Return the current {@link IndexReader}, or {@code null} if no index reader is available, for, +     *  instance if we are on the coordinating node or if this rewrite context is used to index, +     *  queries (percolation). */, +++ b/core/src/test/java/org/elasticsearch/index/mapper/CustomBoostMappingTests.java, +            QueryShardContext context = indexService.newQueryShardContext(0, null, () -> 0L);, +            QueryShardContext context = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java, +                            // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                            // timestamp, +                            final QueryShardContext queryShardContext = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java, +                        // the context is only used for validation so it's fine to pass fake values for the shard id and the current, +                        // timestamp, +                        aliasValidator.validateAliasFilter(alias, filter, indexService.newQueryShardContext(0, null, () -> 0L));, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +            // we parse all percolator queries as they would be parsed on shard 0, +            () -> newQueryShardContext(0, null, () -> {, +                throw new IllegalArgumentException("Percolator queries are not allowed to use the curent timestamp");, +            }));, +     * {@link QueryShardContext#setTypes(String...)}., +     *, +     * Passing a {@code null} {@link IndexReader} will return a valid context, however it won't be able to make, +     * {@link IndexReader}-specific optimizations, such as rewriting containing range queries., +++ b/core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java, +    /** Return the current {@link IndexReader}, or {@code null} if no index reader is available, for, +     *  instance if we are on the coordinating node or if this rewrite context is used to index, +     *  queries (percolation). */, +++ b/core/src/test/java/org/elasticsearch/index/mapper/CustomBoostMappingTests.java, +            QueryShardContext context = indexService.newQueryShardContext(0, null, () -> 0L);, +            QueryShardContext context = indexService.newQueryShardContext(0, null, () -> 0L);, +++ b/core/src/test/java/org/elasticsearch/index/mapper/DoubleIndexingDocTests.java, +        QueryShardContext context = index.newQueryShardContext(0, null, () -> 0L);]