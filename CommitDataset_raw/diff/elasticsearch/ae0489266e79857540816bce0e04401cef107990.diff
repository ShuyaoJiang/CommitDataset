[+++ b/pom.xml, +                                <es.node.mode>${es.node.mode}</es.node.mode>, +++ b/pom.xml, +                                <es.node.mode>${es.node.mode}</es.node.mode>, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +    public static boolean localNode(Settings settings) {, +        if (settings.get("node.local") != null) {, +            return settings.getAsBoolean("node.local", false);, +        }, +        if (settings.get("node.mode") != null) {, +            String nodeMode = settings.get("node.mode");, +            if ("local".equals(nodeMode)) {, +                return true;, +            } else if ("network".equals(nodeMode)) {, +                return false;, +            } else {, +                throw new ElasticSearchIllegalArgumentException("unsupported node.mode [" + nodeMode + "]");, +            }, +        }, +        return false;, +    }, +, +++ b/pom.xml, +                                <es.node.mode>${es.node.mode}</es.node.mode>, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +    public static boolean localNode(Settings settings) {, +        if (settings.get("node.local") != null) {, +            return settings.getAsBoolean("node.local", false);, +        }, +        if (settings.get("node.mode") != null) {, +            String nodeMode = settings.get("node.mode");, +            if ("local".equals(nodeMode)) {, +                return true;, +            } else if ("network".equals(nodeMode)) {, +                return false;, +            } else {, +                throw new ElasticSearchIllegalArgumentException("unsupported node.mode [" + nodeMode + "]");, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        if (DiscoveryNode.localNode(settings)) {, +++ b/pom.xml, +                                <es.node.mode>${es.node.mode}</es.node.mode>, +++ b/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java, +import org.elasticsearch.ElasticSearchIllegalArgumentException;, +    public static boolean localNode(Settings settings) {, +        if (settings.get("node.local") != null) {, +            return settings.getAsBoolean("node.local", false);, +        }, +        if (settings.get("node.mode") != null) {, +            String nodeMode = settings.get("node.mode");, +            if ("local".equals(nodeMode)) {, +                return true;, +            } else if ("network".equals(nodeMode)) {, +                return false;, +            } else {, +                throw new ElasticSearchIllegalArgumentException("unsupported node.mode [" + nodeMode + "]");, +            }, +        }, +        return false;, +    }, +, +++ b/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        if (DiscoveryNode.localNode(settings)) {, +++ b/src/main/java/org/elasticsearch/transport/TransportModule.java, +import org.elasticsearch.cluster.node.DiscoveryNode;, +        if (DiscoveryNode.localNode(settings)) {]