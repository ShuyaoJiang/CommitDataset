[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(healthRequest.waitForActiveShards(), ActiveShardCount.NONE), +            return withWaitForActiveShards(activeShardCount, ActiveShardCount.DEFAULT);, +        }, +, +        Params withWaitForActiveShards(ActiveShardCount activeShardCount, ActiveShardCount defaultActiveShardCount) {, +            if (activeShardCount != null && activeShardCount != defaultActiveShardCount) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(healthRequest.waitForActiveShards(), ActiveShardCount.NONE), +            return withWaitForActiveShards(activeShardCount, ActiveShardCount.DEFAULT);, +        }, +, +        Params withWaitForActiveShards(ActiveShardCount activeShardCount, ActiveShardCount defaultActiveShardCount) {, +            if (activeShardCount != null && activeShardCount != defaultActiveShardCount) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(healthRequest.waitForActiveShards(), ActiveShardCount.NONE), +            return withWaitForActiveShards(activeShardCount, ActiveShardCount.DEFAULT);, +        }, +, +        Params withWaitForActiveShards(ActiveShardCount activeShardCount, ActiveShardCount defaultActiveShardCount) {, +            if (activeShardCount != null && activeShardCount != defaultActiveShardCount) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(healthRequest.waitForActiveShards(), ActiveShardCount.NONE), +            return withWaitForActiveShards(activeShardCount, ActiveShardCount.DEFAULT);, +        }, +, +        Params withWaitForActiveShards(ActiveShardCount activeShardCount, ActiveShardCount defaultActiveShardCount) {, +            if (activeShardCount != null && activeShardCount != defaultActiveShardCount) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(healthRequest.waitForActiveShards(), ActiveShardCount.NONE), +            return withWaitForActiveShards(activeShardCount, ActiveShardCount.DEFAULT);, +        }, +, +        Params withWaitForActiveShards(ActiveShardCount activeShardCount, ActiveShardCount defaultActiveShardCount) {, +            if (activeShardCount != null && activeShardCount != defaultActiveShardCount) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorRetryIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(healthRequest.waitForActiveShards(), ActiveShardCount.NONE), +            return withWaitForActiveShards(activeShardCount, ActiveShardCount.DEFAULT);, +        }, +, +        Params withWaitForActiveShards(ActiveShardCount activeShardCount, ActiveShardCount defaultActiveShardCount) {, +            if (activeShardCount != null && activeShardCount != defaultActiveShardCount) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/TasksClient.java, +            CancelTasksResponse::fromXContent,, +            CancelTasksResponse::fromXContent,, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/BulkProcessorRetryIT.java, +        return BulkProcessor.builder(, +                (request, bulkListener) -> highLevelClient().bulkAsync(request, RequestOptions.DEFAULT, bulkListener), listener);, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/ClusterClientIT.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/ClusterClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/IndicesClient.java, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java, +            .withWaitForActiveShards(healthRequest.waitForActiveShards(), ActiveShardCount.NONE), +            return withWaitForActiveShards(activeShardCount, ActiveShardCount.DEFAULT);, +        }, +, +        Params withWaitForActiveShards(ActiveShardCount activeShardCount, ActiveShardCount defaultActiveShardCount) {, +            if (activeShardCount != null && activeShardCount != defaultActiveShardCount) {, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java]