[+++ b/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +import org.elasticsearch.index.fielddata.FieldData;, +import org.elasticsearch.index.fielddata.GeoPointValues;, +import org.elasticsearch.index.fielddata.MultiGeoPointValues;, +import org.elasticsearch.index.fielddata.NumericDoubleValues;, +import org.elasticsearch.index.fielddata.SortedNumericDoubleValues;, +import org.elasticsearch.index.fielddata.SortingNumericDoubleValues;, +                    resize(geoPointValues.count() * distances.length);, +++ b/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +import org.elasticsearch.index.fielddata.FieldData;, +import org.elasticsearch.index.fielddata.GeoPointValues;, +import org.elasticsearch.index.fielddata.MultiGeoPointValues;, +import org.elasticsearch.index.fielddata.NumericDoubleValues;, +import org.elasticsearch.index.fielddata.SortedNumericDoubleValues;, +import org.elasticsearch.index.fielddata.SortingNumericDoubleValues;, +                    resize(geoPointValues.count() * distances.length);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.index.CorruptIndexException;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexCommit;, +import org.apache.lucene.index.IndexFormatTooNewException;, +import org.apache.lucene.index.IndexFormatTooOldException;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.index.SegmentInfos;, +import org.apache.lucene.search.Collector;, +import org.apache.lucene.search.ComplexExplanation;, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Explanation;, +import org.apache.lucene.search.FieldDoc;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.IndexSearcher;, +import org.apache.lucene.search.LeafCollector;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.ScoreDoc;, +import org.apache.lucene.search.Scorer;, +import org.apache.lucene.search.SimpleCollector;, +import org.apache.lucene.search.SortField;, +import org.apache.lucene.search.TimeLimitingCollector;, +import org.apache.lucene.search.TopDocs;, +import org.apache.lucene.search.TopFieldDocs;, +import org.apache.lucene.search.TotalHitCountCollector;, +import org.elasticsearch.ElasticsearchIllegalStateException;, +, +    /**, +     * Return a Scorer that throws an ElasticsearchIllegalStateException, +     * on all operations with the given message., +     */, +    public static Scorer illegalScorer(final String message) {, +        return new Scorer(null) {, +            @Override, +            public float score() throws IOException {, +                throw new ElasticsearchIllegalStateException(message);, +            }, +            @Override, +            public int freq() throws IOException {, +                throw new ElasticsearchIllegalStateException(message);, +            }, +            @Override, +            public int advance(int arg0) throws IOException {, +                throw new ElasticsearchIllegalStateException(message);, +            }, +            @Override, +            public long cost() {, +                throw new ElasticsearchIllegalStateException(message);, +            }, +            @Override, +            public int docID() {, +                throw new ElasticsearchIllegalStateException(message);, +            }, +            @Override, +            public int nextDoc() throws IOException {, +                throw new ElasticsearchIllegalStateException(message);, +            }, +        };, +    }, +++ b/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +import org.elasticsearch.index.fielddata.FieldData;, +import org.elasticsearch.index.fielddata.GeoPointValues;, +import org.elasticsearch.index.fielddata.MultiGeoPointValues;, +import org.elasticsearch.index.fielddata.NumericDoubleValues;, +import org.elasticsearch.index.fielddata.SortedNumericDoubleValues;, +import org.elasticsearch.index.fielddata.SortingNumericDoubleValues;, +                    resize(geoPointValues.count() * distances.length);, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import org.apache.lucene.index.CorruptIndexException;, +import org.apache.lucene.index.DirectoryReader;, +import org.apache.lucene.index.IndexCommit;, +import org.apache.lucene.index.IndexFormatTooNewException;, +import org.apache.lucene.index.IndexFormatTooOldException;, +import org.apache.lucene.index.IndexWriter;, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.index.SegmentInfos;, +import org.apache.lucene.search.Collector;, +import org.apache.lucene.search.ComplexExplanation;, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.Explanation;, +import org.apache.lucene.search.FieldDoc;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.IndexSearcher;]