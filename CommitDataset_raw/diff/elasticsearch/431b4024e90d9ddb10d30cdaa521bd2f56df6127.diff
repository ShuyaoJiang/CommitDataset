[+++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +    public enum ExecutionMode {, +        MAP(new ParseField("map")) {, +, +            @Override, +            Aggregator create(String name, AggregatorFactories factories, ValuesSource valuesSource, long estimatedBucketCount,, +                    InternalOrder order, int requiredSize, int shardSize, long minDocCount, IncludeExclude includeExclude,, +                    AggregationContext aggregationContext, Aggregator parent) {, +                return new StringTermsAggregator(name, factories, valuesSource, estimatedBucketCount, order, requiredSize, shardSize, minDocCount, includeExclude, aggregationContext, parent);, +            }, +, +        },, +        ORDINALS(new ParseField("ordinals")) {, +, +            @Override, +            Aggregator create(String name, AggregatorFactories factories, ValuesSource valuesSource, long estimatedBucketCount,, +                    InternalOrder order, int requiredSize, int shardSize, long minDocCount, IncludeExclude includeExclude,, +                    AggregationContext aggregationContext, Aggregator parent) {, +                if (includeExclude != null) {, +                    throw new ElasticsearchIllegalArgumentException("The `" + this + "` execution mode cannot filter terms.");, +                }, +                return new StringTermsAggregator.WithOrdinals(name, factories, (BytesValuesSource.WithOrdinals) valuesSource, estimatedBucketCount, order, requiredSize, shardSize, minDocCount, aggregationContext, parent);, +            }, +, +        };, +, +        public static ExecutionMode fromString(String value) {, +            for (ExecutionMode mode : values()) {, +                if (mode.parseField.match(value)) {, +                    return mode;, +                }, +            }, +            throw new ElasticsearchIllegalArgumentException("Unknown `execution_hint`: [" + value + "], expected any of " + values());, +        }, +, +        private final ParseField parseField;, +, +        ExecutionMode(ParseField parseField) {, +            this.parseField = parseField;, +        }, +, +        abstract Aggregator create(String name, AggregatorFactories factories, ValuesSource valuesSource, long estimatedBucketCount,, +                InternalOrder order, int requiredSize, int shardSize, long minDocCount,, +                IncludeExclude includeExclude, AggregationContext aggregationContext, Aggregator parent);, +, +        @Override, +        public String toString() {, +            return parseField.getPreferredName();, +        }, +    }, +            ExecutionMode execution = null;, +            if (executionHint != null) {, +                execution = ExecutionMode.fromString(executionHint);, +, +            // In some cases, using ordinals is just not supported: override it, +                execution = ExecutionMode.MAP;, +                execution = ExecutionMode.MAP;, +, +                // Let's try to use a good default, +                    execution = ExecutionMode.ORDINALS;, +                    execution = ExecutionMode.MAP;, +            return execution.create(name, factories, valuesSource, estimatedBucketCount, order, requiredSize, shardSize, minDocCount, includeExclude, aggregationContext, parent);, +++ b/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.search.aggregations.AggregatorFactories;, +    public enum ExecutionMode {, +        MAP(new ParseField("map")) {, +, +            @Override, +            Aggregator create(String name, AggregatorFactories factories, ValuesSource valuesSource, long estimatedBucketCount,, +                    InternalOrder order, int requiredSize, int shardSize, long minDocCount, IncludeExclude includeExclude,, +                    AggregationContext aggregationContext, Aggregator parent) {, +                return new StringTermsAggregator(name, factories, valuesSource, estimatedBucketCount, order, requiredSize, shardSize, minDocCount, includeExclude, aggregationContext, parent);, +            }, +, +        },, +        ORDINALS(new ParseField("ordinals")) {, +, +            @Override, +            Aggregator create(String name, AggregatorFactories factories, ValuesSource valuesSource, long estimatedBucketCount,, +                    InternalOrder order, int requiredSize, int shardSize, long minDocCount, IncludeExclude includeExclude,, +                    AggregationContext aggregationContext, Aggregator parent) {, +                if (includeExclude != null) {, +                    throw new ElasticsearchIllegalArgumentException("The `" + this + "` execution mode cannot filter terms.");, +                }, +                return new StringTermsAggregator.WithOrdinals(name, factories, (BytesValuesSource.WithOrdinals) valuesSource, estimatedBucketCount, order, requiredSize, shardSize, minDocCount, aggregationContext, parent);, +            }, +, +        };, +, +        public static ExecutionMode fromString(String value) {, +            for (ExecutionMode mode : values()) {, +                if (mode.parseField.match(value)) {, +                    return mode;, +                }, +            }, +            throw new ElasticsearchIllegalArgumentException("Unknown `execution_hint`: [" + value + "], expected any of " + values());, +        }]