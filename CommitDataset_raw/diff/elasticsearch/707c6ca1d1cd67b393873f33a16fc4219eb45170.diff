[+++ b/core/src/main/java/org/elasticsearch/http/HttpServer.java, +import com.google.common.io.ByteStreams;, +import java.io.InputStream;, +        String rawPath = request.rawPath();, +        if (rawPath.startsWith("/_plugin/")) {, +        } else if (rawPath.equals("/favicon.ico")) {, +            handleFavicon(request, channel);, +            return;, +    void handleFavicon(HttpRequest request, HttpChannel channel) {, +        if (request.method() == RestRequest.Method.GET) {, +            try {, +                try (InputStream stream = getClass().getResourceAsStream("/config/favicon.ico")) {, +                    byte[] content = ByteStreams.toByteArray(stream);, +                    BytesRestResponse restResponse = new BytesRestResponse(RestStatus.OK, "image/x-icon", content);, +                    channel.sendResponse(restResponse);, +                }, +            } catch (IOException e) {, +                channel.sendResponse(new BytesRestResponse(INTERNAL_SERVER_ERROR));, +            }, +        } else {, +            channel.sendResponse(new BytesRestResponse(FORBIDDEN));, +        }, +    }, +, +++ b/core/src/main/java/org/elasticsearch/http/HttpServer.java, +import com.google.common.io.ByteStreams;, +import java.io.InputStream;, +        String rawPath = request.rawPath();, +        if (rawPath.startsWith("/_plugin/")) {, +        } else if (rawPath.equals("/favicon.ico")) {, +            handleFavicon(request, channel);, +            return;, +    void handleFavicon(HttpRequest request, HttpChannel channel) {, +        if (request.method() == RestRequest.Method.GET) {, +            try {, +                try (InputStream stream = getClass().getResourceAsStream("/config/favicon.ico")) {, +                    byte[] content = ByteStreams.toByteArray(stream);, +                    BytesRestResponse restResponse = new BytesRestResponse(RestStatus.OK, "image/x-icon", content);, +                    channel.sendResponse(restResponse);, +                }, +            } catch (IOException e) {, +                channel.sendResponse(new BytesRestResponse(INTERNAL_SERVER_ERROR));, +            }, +        } else {, +            channel.sendResponse(new BytesRestResponse(FORBIDDEN));, +        }, +    }, +, +++ b/core/src/main/resources/config/favicon.ico, +++ b/core/src/main/java/org/elasticsearch/http/HttpServer.java, +import com.google.common.io.ByteStreams;, +import java.io.InputStream;, +        String rawPath = request.rawPath();, +        if (rawPath.startsWith("/_plugin/")) {, +        } else if (rawPath.equals("/favicon.ico")) {, +            handleFavicon(request, channel);, +            return;, +    void handleFavicon(HttpRequest request, HttpChannel channel) {, +        if (request.method() == RestRequest.Method.GET) {, +            try {, +                try (InputStream stream = getClass().getResourceAsStream("/config/favicon.ico")) {, +                    byte[] content = ByteStreams.toByteArray(stream);, +                    BytesRestResponse restResponse = new BytesRestResponse(RestStatus.OK, "image/x-icon", content);, +                    channel.sendResponse(restResponse);, +                }, +            } catch (IOException e) {, +                channel.sendResponse(new BytesRestResponse(INTERNAL_SERVER_ERROR));, +            }, +        } else {, +            channel.sendResponse(new BytesRestResponse(FORBIDDEN));, +        }, +    }, +, +++ b/core/src/main/resources/config/favicon.ico, +++ b/pom.xml, +                    <!-- add some additonal binary types to prevent maven from , +                         screwing them up with resource filtering  -->, +                    <configuration>, +                        <nonFilteredFileExtensions>, +                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>, +                        </nonFilteredFileExtensions>, +                    </configuration>]