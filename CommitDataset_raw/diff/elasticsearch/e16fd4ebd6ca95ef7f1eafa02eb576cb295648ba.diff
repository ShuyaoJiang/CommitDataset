[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/DefaultAuthenticationFailureHandler.java, +        return createAuthenticationError("missing authentication credentials for REST request [{}]", null, request.uri());, +        return createAuthenticationError("missing authentication credentials for action [{}]", null, action);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/DefaultAuthenticationFailureHandler.java, +        return createAuthenticationError("missing authentication credentials for REST request [{}]", null, request.uri());, +        return createAuthenticationError("missing authentication credentials for action [{}]", null, action);, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/authc/DefaultAuthenticationFailureHandlerTests.java, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.when;, +        final DefaultAuthenticationFailureHandler failureHandler;, +            failureHandler = new DefaultAuthenticationFailureHandler(Collections.emptyMap());, +            final Map<String, List<String>> failureResponseHeaders = new HashMap<>();, +            failureResponseHeaders.put("WWW-Authenticate", Arrays.asList(basicAuthScheme, bearerAuthScheme));, +            failureHandler = new DefaultAuthenticationFailureHandler(failureResponseHeaders);, +        assertThat(failureHandler, is(notNullValue()));, +                failureHandler.authenticationRequired("someaction", new ThreadContext(Settings.builder().build()));, +    public void testMissingToken() {, +        final DefaultAuthenticationFailureHandler handler = new DefaultAuthenticationFailureHandler(Collections.emptyMap());, +        final RestRequest request = mock(RestRequest.class);, +        when(request.uri()).thenReturn("https://secret.es.shield.gov/");, +        final ThreadContext threadContext = new ThreadContext(Settings.EMPTY);, +        final ElasticsearchSecurityException ese = handler.missingToken(request, threadContext);, +        assertThat(ese, is(notNullValue()));, +        assertThat(ese.getMessage(), equalTo("missing authentication credentials for REST request [https://secret.es.shield.gov/]"));, +    }, +, +        final Map<String, List<String>> failureResponseHeaders = new HashMap<>();, +        failureResponseHeaders.put("WWW-Authenticate", Arrays.asList(basicAuthScheme, bearerAuthScheme, negotiateAuthScheme));, +        final DefaultAuthenticationFailureHandler failureHandler = new DefaultAuthenticationFailureHandler(failureResponseHeaders);, +        assertThat(failureHandler, is(notNullValue()));, +                final ElasticsearchSecurityException ese = failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +                expectThrows(AssertionError.class, () -> failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +            final ElasticsearchSecurityException ese = failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +        final ElasticsearchSecurityException ese = failuerHandler.exceptionProcessingRequest(mock(RestRequest.class), null,, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/DefaultAuthenticationFailureHandler.java, +        return createAuthenticationError("missing authentication credentials for REST request [{}]", null, request.uri());, +        return createAuthenticationError("missing authentication credentials for action [{}]", null, action);, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/authc/DefaultAuthenticationFailureHandlerTests.java, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.when;, +        final DefaultAuthenticationFailureHandler failureHandler;, +            failureHandler = new DefaultAuthenticationFailureHandler(Collections.emptyMap());, +            final Map<String, List<String>> failureResponseHeaders = new HashMap<>();, +            failureResponseHeaders.put("WWW-Authenticate", Arrays.asList(basicAuthScheme, bearerAuthScheme));, +            failureHandler = new DefaultAuthenticationFailureHandler(failureResponseHeaders);, +        assertThat(failureHandler, is(notNullValue()));, +                failureHandler.authenticationRequired("someaction", new ThreadContext(Settings.builder().build()));, +    public void testMissingToken() {, +        final DefaultAuthenticationFailureHandler handler = new DefaultAuthenticationFailureHandler(Collections.emptyMap());, +        final RestRequest request = mock(RestRequest.class);, +        when(request.uri()).thenReturn("https://secret.es.shield.gov/");, +        final ThreadContext threadContext = new ThreadContext(Settings.EMPTY);, +        final ElasticsearchSecurityException ese = handler.missingToken(request, threadContext);, +        assertThat(ese, is(notNullValue()));, +        assertThat(ese.getMessage(), equalTo("missing authentication credentials for REST request [https://secret.es.shield.gov/]"));, +    }, +, +        final Map<String, List<String>> failureResponseHeaders = new HashMap<>();, +        failureResponseHeaders.put("WWW-Authenticate", Arrays.asList(basicAuthScheme, bearerAuthScheme, negotiateAuthScheme));, +        final DefaultAuthenticationFailureHandler failureHandler = new DefaultAuthenticationFailureHandler(failureResponseHeaders);, +        assertThat(failureHandler, is(notNullValue()));, +                final ElasticsearchSecurityException ese = failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +                expectThrows(AssertionError.class, () -> failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +            final ElasticsearchSecurityException ese = failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +        final ElasticsearchSecurityException ese = failuerHandler.exceptionProcessingRequest(mock(RestRequest.class), null,, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/AuthenticationServiceTests.java, +        assertThat(e.getMessage(), containsString("missing authentication credentials"));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/DefaultAuthenticationFailureHandler.java, +        return createAuthenticationError("missing authentication credentials for REST request [{}]", null, request.uri());, +        return createAuthenticationError("missing authentication credentials for action [{}]", null, action);, +++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/authc/DefaultAuthenticationFailureHandlerTests.java, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.when;, +        final DefaultAuthenticationFailureHandler failureHandler;, +            failureHandler = new DefaultAuthenticationFailureHandler(Collections.emptyMap());, +            final Map<String, List<String>> failureResponseHeaders = new HashMap<>();, +            failureResponseHeaders.put("WWW-Authenticate", Arrays.asList(basicAuthScheme, bearerAuthScheme));, +            failureHandler = new DefaultAuthenticationFailureHandler(failureResponseHeaders);, +        assertThat(failureHandler, is(notNullValue()));, +                failureHandler.authenticationRequired("someaction", new ThreadContext(Settings.builder().build()));, +    public void testMissingToken() {, +        final DefaultAuthenticationFailureHandler handler = new DefaultAuthenticationFailureHandler(Collections.emptyMap());, +        final RestRequest request = mock(RestRequest.class);, +        when(request.uri()).thenReturn("https://secret.es.shield.gov/");, +        final ThreadContext threadContext = new ThreadContext(Settings.EMPTY);, +        final ElasticsearchSecurityException ese = handler.missingToken(request, threadContext);, +        assertThat(ese, is(notNullValue()));, +        assertThat(ese.getMessage(), equalTo("missing authentication credentials for REST request [https://secret.es.shield.gov/]"));, +    }, +, +        final Map<String, List<String>> failureResponseHeaders = new HashMap<>();, +        failureResponseHeaders.put("WWW-Authenticate", Arrays.asList(basicAuthScheme, bearerAuthScheme, negotiateAuthScheme));, +        final DefaultAuthenticationFailureHandler failureHandler = new DefaultAuthenticationFailureHandler(failureResponseHeaders);, +        assertThat(failureHandler, is(notNullValue()));, +                final ElasticsearchSecurityException ese = failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +                expectThrows(AssertionError.class, () -> failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +            final ElasticsearchSecurityException ese = failureHandler.exceptionProcessingRequest(mock(RestRequest.class), cause,, +        final ElasticsearchSecurityException ese = failuerHandler.exceptionProcessingRequest(mock(RestRequest.class), null,, +++ b/x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/AuthenticationServiceTests.java, +        assertThat(e.getMessage(), containsString("missing authentication credentials"));]