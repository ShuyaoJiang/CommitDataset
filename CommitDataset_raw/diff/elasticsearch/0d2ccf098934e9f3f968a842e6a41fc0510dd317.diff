[+++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings, Collections.emptyList());, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings, Collections.emptyList());, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient,, +                         NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings, Collections.emptyList());, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient,, +                         NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +    private final List<CustomNameResolver> customNameResolvers;, +    public NetworkService(Settings settings, List<CustomNameResolver> customNameResolvers) {, +        this.customNameResolvers = customNameResolvers;, +                // next check any registered custom resolvers if any, +                if (customNameResolvers != null) {, +                }, +                // next check any registered custom resolvers if any, +                if (customNameResolvers != null) {, +                }, +            // next check any registered custom resolvers if any, +            if (customNameResolvers != null) {, +            }, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings, Collections.emptyList());, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient,, +                         NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +    private final List<CustomNameResolver> customNameResolvers;, +    public NetworkService(Settings settings, List<CustomNameResolver> customNameResolvers) {, +        this.customNameResolvers = customNameResolvers;, +                // next check any registered custom resolvers if any, +                if (customNameResolvers != null) {, +                }, +                // next check any registered custom resolvers if any, +                if (customNameResolvers != null) {, +                }, +            // next check any registered custom resolvers if any, +            if (customNameResolvers != null) {, +            }, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.plugins.DiscoveryPlugin;, +            final NetworkService networkService = new NetworkService(settings,, +                getCustomNameResolvers(pluginsService.filterPlugins(DiscoveryPlugin.class)));, +, +    /**, +     * Get Custom Name Resolvers list based on a Discovery Plugins list, +     * @param discoveryPlugins Discovery plugins list, +     */, +    private List<NetworkService.CustomNameResolver> getCustomNameResolvers(List<DiscoveryPlugin> discoveryPlugins) {, +        List<NetworkService.CustomNameResolver> customNameResolvers = new ArrayList<>();, +        for (DiscoveryPlugin discoveryPlugin : discoveryPlugins) {, +            NetworkService.CustomNameResolver customNameResolver = discoveryPlugin.getCustomNameResolver(settings);, +            if (customNameResolver != null) {, +                customNameResolvers.add(customNameResolver);, +            }, +        }, +        return customNameResolvers;, +    }, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClient.java, +        final NetworkService networkService = new NetworkService(settings, Collections.emptyList());, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkModule.java, +    public NetworkModule(NetworkService networkService, Settings settings, boolean transportClient,, +                         NamedWriteableRegistry namedWriteableRegistry) {, +++ b/core/src/main/java/org/elasticsearch/common/network/NetworkService.java, +    private final List<CustomNameResolver> customNameResolvers;, +    public NetworkService(Settings settings, List<CustomNameResolver> customNameResolvers) {, +        this.customNameResolvers = customNameResolvers;, +                // next check any registered custom resolvers if any, +                if (customNameResolvers != null) {, +                }, +                // next check any registered custom resolvers if any, +                if (customNameResolvers != null) {, +                }, +            // next check any registered custom resolvers if any, +            if (customNameResolvers != null) {, +            }, +++ b/core/src/main/java/org/elasticsearch/node/Node.java, +import org.elasticsearch.plugins.DiscoveryPlugin;, +            final NetworkService networkService = new NetworkService(settings,, +                getCustomNameResolvers(pluginsService.filterPlugins(DiscoveryPlugin.class)));, +, +    /**, +     * Get Custom Name Resolvers list based on a Discovery Plugins list, +     * @param discoveryPlugins Discovery plugins list, +     */, +    private List<NetworkService.CustomNameResolver> getCustomNameResolvers(List<DiscoveryPlugin> discoveryPlugins) {, +        List<NetworkService.CustomNameResolver> customNameResolvers = new ArrayList<>();, +        for (DiscoveryPlugin discoveryPlugin : discoveryPlugins) {, +            NetworkService.CustomNameResolver customNameResolver = discoveryPlugin.getCustomNameResolver(settings);, +            if (customNameResolver != null) {, +                customNameResolvers.add(customNameResolver);, +            }, +        }, +        return customNameResolvers;, +    }, +++ b/core/src/main/java/org/elasticsearch/plugins/DiscoveryPlugin.java]