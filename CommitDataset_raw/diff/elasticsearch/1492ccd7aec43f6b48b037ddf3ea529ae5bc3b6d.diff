[+++ b/core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java, +        execute(terminal, options, createEnv(terminal, settings));, +    /** Create an {@link Environment} for the command to use. Overrideable for tests. */, +    protected Environment createEnv(final Terminal terminal, final Map<String, String> settings) throws UserException {, +        final String esPathConf = System.getProperty("es.path.conf");, +        if (esPathConf == null) {, +            throw new UserException(ExitCodes.CONFIG, "the system property es.path.conf must be set");, +        }, +        return InternalSettingsPreparer.prepareEnvironment(Settings.EMPTY, terminal, settings, getConfigPath(esPathConf));, +    private static void putSystemPropertyIfSettingIsMissing(final Map<String, String> settings, final String setting, final String key) {, +++ b/core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java, +        execute(terminal, options, createEnv(terminal, settings));, +    /** Create an {@link Environment} for the command to use. Overrideable for tests. */, +    protected Environment createEnv(final Terminal terminal, final Map<String, String> settings) throws UserException {, +        final String esPathConf = System.getProperty("es.path.conf");, +        if (esPathConf == null) {, +            throw new UserException(ExitCodes.CONFIG, "the system property es.path.conf must be set");, +        }, +        return InternalSettingsPreparer.prepareEnvironment(Settings.EMPTY, terminal, settings, getConfigPath(esPathConf));, +    private static void putSystemPropertyIfSettingIsMissing(final Map<String, String> settings, final String setting, final String key) {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddFileKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java, +        execute(terminal, options, createEnv(terminal, settings));, +    /** Create an {@link Environment} for the command to use. Overrideable for tests. */, +    protected Environment createEnv(final Terminal terminal, final Map<String, String> settings) throws UserException {, +        final String esPathConf = System.getProperty("es.path.conf");, +        if (esPathConf == null) {, +            throw new UserException(ExitCodes.CONFIG, "the system property es.path.conf must be set");, +        }, +        return InternalSettingsPreparer.prepareEnvironment(Settings.EMPTY, terminal, settings, getConfigPath(esPathConf));, +    private static void putSystemPropertyIfSettingIsMissing(final Map<String, String> settings, final String setting, final String key) {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddFileKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddStringKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java, +        execute(terminal, options, createEnv(terminal, settings));, +    /** Create an {@link Environment} for the command to use. Overrideable for tests. */, +    protected Environment createEnv(final Terminal terminal, final Map<String, String> settings) throws UserException {, +        final String esPathConf = System.getProperty("es.path.conf");, +        if (esPathConf == null) {, +            throw new UserException(ExitCodes.CONFIG, "the system property es.path.conf must be set");, +        }, +        return InternalSettingsPreparer.prepareEnvironment(Settings.EMPTY, terminal, settings, getConfigPath(esPathConf));, +    private static void putSystemPropertyIfSettingIsMissing(final Map<String, String> settings, final String setting, final String key) {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddFileKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddStringKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java, +import org.elasticsearch.cli.UserException;, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java, +        execute(terminal, options, createEnv(terminal, settings));, +    /** Create an {@link Environment} for the command to use. Overrideable for tests. */, +    protected Environment createEnv(final Terminal terminal, final Map<String, String> settings) throws UserException {, +        final String esPathConf = System.getProperty("es.path.conf");, +        if (esPathConf == null) {, +            throw new UserException(ExitCodes.CONFIG, "the system property es.path.conf must be set");, +        }, +        return InternalSettingsPreparer.prepareEnvironment(Settings.EMPTY, terminal, settings, getConfigPath(esPathConf));, +    private static void putSystemPropertyIfSettingIsMissing(final Map<String, String> settings, final String setting, final String key) {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddFileKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddStringKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java, +import org.elasticsearch.cli.UserException;, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/ListKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java, +        execute(terminal, options, createEnv(terminal, settings));, +    /** Create an {@link Environment} for the command to use. Overrideable for tests. */, +    protected Environment createEnv(final Terminal terminal, final Map<String, String> settings) throws UserException {, +        final String esPathConf = System.getProperty("es.path.conf");, +        if (esPathConf == null) {, +            throw new UserException(ExitCodes.CONFIG, "the system property es.path.conf must be set");, +        }, +        return InternalSettingsPreparer.prepareEnvironment(Settings.EMPTY, terminal, settings, getConfigPath(esPathConf));, +    private static void putSystemPropertyIfSettingIsMissing(final Map<String, String> settings, final String setting, final String key) {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddFileKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/AddStringKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java, +import org.elasticsearch.cli.UserException;, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/ListKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/test/java/org/elasticsearch/common/settings/RemoveSettingKeyStoreCommandTests.java, +            protected Environment createEnv(Terminal terminal, Map<String, String> settings) throws UserException {, +++ b/core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java, +        execute(terminal, options, createEnv(terminal, settings));, +    /** Create an {@link Environment} for the command to use. Overrideable for tests. */, +    protected Environment createEnv(final Terminal terminal, final Map<String, String> settings) throws UserException {, +        final String esPathConf = System.getProperty("es.path.conf");, +        if (esPathConf == null) {, +            throw new UserException(ExitCodes.CONFIG, "the system property es.path.conf must be set");]