[+++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ /dev/null, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cluster.state/10_basic.yml, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cluster.state/10_basic.yml, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +import org.elasticsearch.Version;, +    public ClusterStateResponse(ClusterName clusterName, ClusterState clusterState, boolean waitForTimedOut) {, +        if (in.getVersion().before(Version.V_7_0_0)) {, +            new ByteSizeValue(in);, +        }, +        if (out.getVersion().before(Version.V_7_0_0)) {, +            ByteSizeValue.ZERO.writeTo(out);, +        }, +            Objects.equals(getMasterNodeId(clusterState), getMasterNodeId(response.clusterState));, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cluster.state/10_basic.yml, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +import org.elasticsearch.Version;, +    public ClusterStateResponse(ClusterName clusterName, ClusterState clusterState, boolean waitForTimedOut) {, +        if (in.getVersion().before(Version.V_7_0_0)) {, +            new ByteSizeValue(in);, +        }, +        if (out.getVersion().before(Version.V_7_0_0)) {, +            ByteSizeValue.ZERO.writeTo(out);, +        }, +            Objects.equals(getMasterNodeId(clusterState), getMasterNodeId(response.clusterState));, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java, +        if (property != null) {, +                throw new IllegalArgumentException("es.cluster_state.size is no longer respected but was [" + property + "]");, +                            listener.onResponse(new ClusterStateResponse(clusterState.getClusterName(), null, true));, +        listener.onResponse(new ClusterStateResponse(currentState.getClusterName(), builder.build(), false));, +++ b/build.gradle, +boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/pull/40061" /* place a PR link here when committing bwc changes */, +++ b/qa/ccs-unavailable-clusters/src/test/java/org/elasticsearch/search/CrossClusterSearchUnavailableClusterIT.java, +                        channel.sendResponse(new ClusterStateResponse(clusterName, build, false));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cluster.state/10_basic.yml, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java, +import org.elasticsearch.Version;, +    public ClusterStateResponse(ClusterName clusterName, ClusterState clusterState, boolean waitForTimedOut) {, +        if (in.getVersion().before(Version.V_7_0_0)) {, +            new ByteSizeValue(in);, +        }, +        if (out.getVersion().before(Version.V_7_0_0)) {, +            ByteSizeValue.ZERO.writeTo(out);, +        }, +            Objects.equals(getMasterNodeId(clusterState), getMasterNodeId(response.clusterState));]