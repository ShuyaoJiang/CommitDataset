[+++ b/src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java, +import java.io.Reader;, +    private String[] likeText;, +    private int minTermFrequency = XMoreLikeThis.DEFAULT_MIN_TERM_FREQ;, +    private int maxQueryTerms = XMoreLikeThis.DEFAULT_MAX_QUERY_TERMS;, +    private Set<?> stopWords = XMoreLikeThis.DEFAULT_STOP_WORDS;, +    private int minDocFreq = XMoreLikeThis.DEFAULT_MIN_DOC_FREQ;, +    private int maxDocFreq = XMoreLikeThis.DEFAULT_MAX_DOC_FREQ;, +    private int minWordLen = XMoreLikeThis.DEFAULT_MIN_WORD_LENGTH;, +    private int maxWordLen = XMoreLikeThis.DEFAULT_MAX_WORD_LENGTH;, +    private boolean boostTerms = XMoreLikeThis.DEFAULT_BOOST;, +        this.likeText = new String[]{likeText};, +        result = 31 * result + Arrays.hashCode(likeText);, +        if (!(Arrays.equals(likeText, other.likeText))), +        XMoreLikeThis mlt = new XMoreLikeThis(reader, similarity == null ? new DefaultSimilarity() : similarity);, +        Reader[] readers = new Reader[likeText.length];, +        for (int i = 0; i < readers.length; i++) {, +            readers[i] = new FastStringReader(likeText[i]);, +        }, +        //LUCENE 4 UPGRADE this mapps the 3.6 behavior (only use the first field), +        BooleanQuery bq = (BooleanQuery) mlt.like(moreLikeFields[0], readers);, +, +        BooleanClause[] clauses = bq.getClauses();, +        return "like:" + Arrays.toString(likeText);, +        return (likeText == null ? null : likeText[0]);, +    }, +, +    public String[] getLikeTexts() {, +        this.likeText = new String[]{likeText};, +    }, +, +    public void setLikeText(String... likeText) {, +++ b/src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java, +import java.io.Reader;, +    private String[] likeText;, +    private int minTermFrequency = XMoreLikeThis.DEFAULT_MIN_TERM_FREQ;, +    private int maxQueryTerms = XMoreLikeThis.DEFAULT_MAX_QUERY_TERMS;, +    private Set<?> stopWords = XMoreLikeThis.DEFAULT_STOP_WORDS;, +    private int minDocFreq = XMoreLikeThis.DEFAULT_MIN_DOC_FREQ;, +    private int maxDocFreq = XMoreLikeThis.DEFAULT_MAX_DOC_FREQ;, +    private int minWordLen = XMoreLikeThis.DEFAULT_MIN_WORD_LENGTH;, +    private int maxWordLen = XMoreLikeThis.DEFAULT_MAX_WORD_LENGTH;, +    private boolean boostTerms = XMoreLikeThis.DEFAULT_BOOST;, +        this.likeText = new String[]{likeText};, +        result = 31 * result + Arrays.hashCode(likeText);, +        if (!(Arrays.equals(likeText, other.likeText))), +        XMoreLikeThis mlt = new XMoreLikeThis(reader, similarity == null ? new DefaultSimilarity() : similarity);, +        Reader[] readers = new Reader[likeText.length];, +        for (int i = 0; i < readers.length; i++) {, +            readers[i] = new FastStringReader(likeText[i]);, +        }, +        //LUCENE 4 UPGRADE this mapps the 3.6 behavior (only use the first field), +        BooleanQuery bq = (BooleanQuery) mlt.like(moreLikeFields[0], readers);, +, +        BooleanClause[] clauses = bq.getClauses();, +        return "like:" + Arrays.toString(likeText);, +        return (likeText == null ? null : likeText[0]);, +    }, +, +    public String[] getLikeTexts() {, +        this.likeText = new String[]{likeText};, +    }, +, +    public void setLikeText(String... likeText) {, +++ b/src/main/java/org/elasticsearch/common/lucene/search/XMoreLikeThis.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +/**, + * Copyright 2004-2005 The Apache Software Foundation., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *     http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +]