[+++ b/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import org.elasticsearch.ElasticSearchParseException;, +import java.util.ArrayList;, +                            } else if (token == XContentParser.Token.START_ARRAY) {, +                                if ("index".equals(currentFieldName) || "indices".equals(currentFieldName)) {, +                                    searchRequest.indices(parseArray(parser));, +                                } else if ("type".equals(currentFieldName) || "type".equals(currentFieldName)) {, +                                    searchRequest.types(parseArray(parser));, +                                } else {, +                                    throw new ElasticSearchParseException(currentFieldName + " doesn't support arrays");, +                                }, +    private String[] parseArray(XContentParser parser) throws IOException {, +        final List<String> list = new ArrayList<String>();, +        assert parser.currentToken() == XContentParser.Token.START_ARRAY;, +        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {, +            list.add(parser.text());, +        }, +        return list.toArray(new String[list.size()]);, +    }, +++ b/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import org.elasticsearch.ElasticSearchParseException;, +import java.util.ArrayList;, +                            } else if (token == XContentParser.Token.START_ARRAY) {, +                                if ("index".equals(currentFieldName) || "indices".equals(currentFieldName)) {, +                                    searchRequest.indices(parseArray(parser));, +                                } else if ("type".equals(currentFieldName) || "type".equals(currentFieldName)) {, +                                    searchRequest.types(parseArray(parser));, +                                } else {, +                                    throw new ElasticSearchParseException(currentFieldName + " doesn't support arrays");, +                                }, +    private String[] parseArray(XContentParser parser) throws IOException {, +        final List<String> list = new ArrayList<String>();, +        assert parser.currentToken() == XContentParser.Token.START_ARRAY;, +        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {, +            list.add(parser.text());, +        }, +        return list.toArray(new String[list.size()]);, +    }, +++ b/src/test/java/org/elasticsearch/test/unit/action/search/MultiSearchRequestTests.java, +    , +    @Test, +    public void simpleAdd3() throws Exception {, +        byte[] data = Streams.copyToBytesFromClasspath("/org/elasticsearch/test/unit/action/search/simple-msearch3.json");, +        MultiSearchRequest request = new MultiSearchRequest().add(data, 0, data.length, false, null, null, null);, +        assertThat(request.requests().size(), equalTo(4));, +        assertThat(request.requests().get(0).indices()[0], equalTo("test0"));, +        assertThat(request.requests().get(0).indices()[1], equalTo("test1"));, +        assertThat(request.requests().get(1).indices()[0], equalTo("test2"));, +        assertThat(request.requests().get(1).indices()[1], equalTo("test3"));, +        assertThat(request.requests().get(1).types()[0], equalTo("type1"));, +        assertThat(request.requests().get(2).indices()[0], equalTo("test4"));, +        assertThat(request.requests().get(2).indices()[1], equalTo("test1"));, +        assertThat(request.requests().get(2).types()[0], equalTo("type2"));, +        assertThat(request.requests().get(2).types()[1], equalTo("type1"));, +        assertThat(request.requests().get(3).indices(), nullValue());, +        assertThat(request.requests().get(3).types().length, equalTo(0));, +        assertThat(request.requests().get(3).searchType(), equalTo(SearchType.COUNT));, +    }, +++ b/src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java, +import org.elasticsearch.ElasticSearchParseException;, +import java.util.ArrayList;, +                            } else if (token == XContentParser.Token.START_ARRAY) {, +                                if ("index".equals(currentFieldName) || "indices".equals(currentFieldName)) {, +                                    searchRequest.indices(parseArray(parser));, +                                } else if ("type".equals(currentFieldName) || "type".equals(currentFieldName)) {, +                                    searchRequest.types(parseArray(parser));, +                                } else {, +                                    throw new ElasticSearchParseException(currentFieldName + " doesn't support arrays");, +                                }, +    private String[] parseArray(XContentParser parser) throws IOException {, +        final List<String> list = new ArrayList<String>();, +        assert parser.currentToken() == XContentParser.Token.START_ARRAY;, +        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {, +            list.add(parser.text());, +        }, +        return list.toArray(new String[list.size()]);, +    }, +++ b/src/test/java/org/elasticsearch/test/unit/action/search/MultiSearchRequestTests.java, +    , +    @Test, +    public void simpleAdd3() throws Exception {, +        byte[] data = Streams.copyToBytesFromClasspath("/org/elasticsearch/test/unit/action/search/simple-msearch3.json");, +        MultiSearchRequest request = new MultiSearchRequest().add(data, 0, data.length, false, null, null, null);, +        assertThat(request.requests().size(), equalTo(4));, +        assertThat(request.requests().get(0).indices()[0], equalTo("test0"));, +        assertThat(request.requests().get(0).indices()[1], equalTo("test1"));, +        assertThat(request.requests().get(1).indices()[0], equalTo("test2"));, +        assertThat(request.requests().get(1).indices()[1], equalTo("test3"));, +        assertThat(request.requests().get(1).types()[0], equalTo("type1"));, +        assertThat(request.requests().get(2).indices()[0], equalTo("test4"));, +        assertThat(request.requests().get(2).indices()[1], equalTo("test1"));, +        assertThat(request.requests().get(2).types()[0], equalTo("type2"));, +        assertThat(request.requests().get(2).types()[1], equalTo("type1"));, +        assertThat(request.requests().get(3).indices(), nullValue());, +        assertThat(request.requests().get(3).types().length, equalTo(0));, +        assertThat(request.requests().get(3).searchType(), equalTo(SearchType.COUNT));, +    }, +++ b/src/test/java/org/elasticsearch/test/unit/action/search/simple-msearch3.json, +{"index":["test0", "test1"]}, +{"query" : {"match_all" {}}}]