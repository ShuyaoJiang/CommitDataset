[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +        String key = PainlessLookupUtility.buildPainlessMethodKey(name, arity);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +        String key = PainlessLookupUtility.buildPainlessMethodKey(name, arity);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/FunctionRef.java, +            impl = struct.constructors.get(PainlessLookupUtility.buildPainlessMethodKey("<init>", method.arguments.size()));, +            PainlessMethod staticImpl =, +                    struct.staticMethods.get(PainlessLookupUtility.buildPainlessMethodKey(call, method.arguments.size()));, +                impl = struct.methods.get(PainlessLookupUtility.buildPainlessMethodKey(call, arity));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +        String key = PainlessLookupUtility.buildPainlessMethodKey(name, arity);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/FunctionRef.java, +            impl = struct.constructors.get(PainlessLookupUtility.buildPainlessMethodKey("<init>", method.arguments.size()));, +            PainlessMethod staticImpl =, +                    struct.staticMethods.get(PainlessLookupUtility.buildPainlessMethodKey(call, method.arguments.size()));, +                impl = struct.methods.get(PainlessLookupUtility.buildPainlessMethodKey(call, arity));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Locals.java, +    public PainlessMethod getMethod(String key) {, +    private Map<String,PainlessMethod> methods;, +    private PainlessMethod lookupMethod(String key) {, +        methods.put(PainlessLookupUtility.buildPainlessMethodKey(method.name, method.arguments.size()), method);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +        String key = PainlessLookupUtility.buildPainlessMethodKey(name, arity);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/FunctionRef.java, +            impl = struct.constructors.get(PainlessLookupUtility.buildPainlessMethodKey("<init>", method.arguments.size()));, +            PainlessMethod staticImpl =, +                    struct.staticMethods.get(PainlessLookupUtility.buildPainlessMethodKey(call, method.arguments.size()));, +                impl = struct.methods.get(PainlessLookupUtility.buildPainlessMethodKey(call, arity));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Locals.java, +    public PainlessMethod getMethod(String key) {, +    private Map<String,PainlessMethod> methods;, +    private PainlessMethod lookupMethod(String key) {, +        methods.put(PainlessLookupUtility.buildPainlessMethodKey(method.name, method.arguments.size()), method);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/lookup/PainlessClass.java, +import org.objectweb.asm.Type;, +, +    public final Type type;, +    public final Map<String, PainlessMethod> constructors;, +    public final Map<String, PainlessMethod> staticMethods;, +    public final Map<String, PainlessMethod> methods;, +    PainlessClass(String name, Class<?> clazz, Type type,, +                  Map<String, PainlessMethod> constructors, Map<String, PainlessMethod> staticMethods, Map<String, PainlessMethod> methods,, +                  Map<String, PainlessField> staticMembers, Map<String, PainlessField> members,, +                  Map<String, MethodHandle> getters, Map<String, MethodHandle> setters,, +                  PainlessMethod functionalMethod) {, +        this.constructors = Collections.unmodifiableMap(constructors);, +        this.staticMethods = Collections.unmodifiableMap(staticMethods);, +        this.methods = Collections.unmodifiableMap(methods);, +        this.staticMembers = Collections.unmodifiableMap(staticMembers);, +        this.members = Collections.unmodifiableMap(members);, +        this.getters = Collections.unmodifiableMap(getters);, +        this.setters = Collections.unmodifiableMap(setters);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java, +        String key = PainlessLookupUtility.buildPainlessMethodKey(name, arity);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/FunctionRef.java, +            impl = struct.constructors.get(PainlessLookupUtility.buildPainlessMethodKey("<init>", method.arguments.size()));, +            PainlessMethod staticImpl =, +                    struct.staticMethods.get(PainlessLookupUtility.buildPainlessMethodKey(call, method.arguments.size()));, +                impl = struct.methods.get(PainlessLookupUtility.buildPainlessMethodKey(call, arity));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/Locals.java, +    public PainlessMethod getMethod(String key) {, +    private Map<String,PainlessMethod> methods;, +    private PainlessMethod lookupMethod(String key) {, +        methods.put(PainlessLookupUtility.buildPainlessMethodKey(method.name, method.arguments.size()), method);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/lookup/PainlessClass.java, +import org.objectweb.asm.Type;, +, +    public final Type type;, +    public final Map<String, PainlessMethod> constructors;, +    public final Map<String, PainlessMethod> staticMethods;, +    public final Map<String, PainlessMethod> methods;, +    PainlessClass(String name, Class<?> clazz, Type type,, +                  Map<String, PainlessMethod> constructors, Map<String, PainlessMethod> staticMethods, Map<String, PainlessMethod> methods,, +                  Map<String, PainlessField> staticMembers, Map<String, PainlessField> members,, +                  Map<String, MethodHandle> getters, Map<String, MethodHandle> setters,, +                  PainlessMethod functionalMethod) {, +        this.constructors = Collections.unmodifiableMap(constructors);, +        this.staticMethods = Collections.unmodifiableMap(staticMethods);, +        this.methods = Collections.unmodifiableMap(methods);, +        this.staticMembers = Collections.unmodifiableMap(staticMembers);, +        this.members = Collections.unmodifiableMap(members);, +        this.getters = Collections.unmodifiableMap(getters);, +        this.setters = Collections.unmodifiableMap(setters);, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/lookup/PainlessClassBuilder.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations]