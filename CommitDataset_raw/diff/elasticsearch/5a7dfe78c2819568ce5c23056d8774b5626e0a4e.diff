[+++ b/rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc, +* an optional `teardown` section, followed by, +    teardown:, +      - do: ...., +, +    ---, +A `teardown` section contains a list of commands to run after each test, +section in order to setup the same environment for each test section. This, +may be needed for modifications made by the testthat are not cleared by the, +deletion of indices and templates., +, +3. run `teardown` (if any), +4. delete all indices and all templates, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc, +* an optional `teardown` section, followed by, +    teardown:, +      - do: ...., +, +    ---, +A `teardown` section contains a list of commands to run after each test, +section in order to setup the same environment for each test section. This, +may be needed for modifications made by the testthat are not cleared by the, +deletion of indices and templates., +, +3. run `teardown` (if any), +4. delete all indices and all templates, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +        //skip test if the whole suite (yaml file) is disabled, +        assumeFalse(buildSkipMessage(testCandidate.getSuitePath(), testCandidate.getTeardownSection().getSkipSection()),, +            testCandidate.getTeardownSection().getSkipSection().skip(restTestExecutionContext.esVersion()));, +        try {, +        } finally {, +            logger.debug("start teardown test [{}]", testCandidate.getTestPath());, +            for (DoSection doSection : testCandidate.getTeardownSection().getDoSections()) {, +                doSection.execute(restTestExecutionContext);, +            }, +            logger.debug("end teardown test [{}]", testCandidate.getTestPath());, +        }, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc, +* an optional `teardown` section, followed by, +    teardown:, +      - do: ...., +, +    ---, +A `teardown` section contains a list of commands to run after each test, +section in order to setup the same environment for each test section. This, +may be needed for modifications made by the testthat are not cleared by the, +deletion of indices and templates., +, +3. run `teardown` (if any), +4. delete all indices and all templates, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +        //skip test if the whole suite (yaml file) is disabled, +        assumeFalse(buildSkipMessage(testCandidate.getSuitePath(), testCandidate.getTeardownSection().getSkipSection()),, +            testCandidate.getTeardownSection().getSkipSection().skip(restTestExecutionContext.esVersion()));, +        try {, +        } finally {, +            logger.debug("start teardown test [{}]", testCandidate.getTestPath());, +            for (DoSection doSection : testCandidate.getTeardownSection().getDoSections()) {, +                doSection.execute(restTestExecutionContext);, +            }, +            logger.debug("end teardown test [{}]", testCandidate.getTestPath());, +        }, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/RestTestCandidate.java, +import org.elasticsearch.test.rest.section.TeardownSection;, +    public TeardownSection getTeardownSection() {, +        return restTestSuite.getTeardownSection();, +    }, +, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc, +* an optional `teardown` section, followed by, +    teardown:, +      - do: ...., +, +    ---, +A `teardown` section contains a list of commands to run after each test, +section in order to setup the same environment for each test section. This, +may be needed for modifications made by the testthat are not cleared by the, +deletion of indices and templates., +, +3. run `teardown` (if any), +4. delete all indices and all templates, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +        //skip test if the whole suite (yaml file) is disabled, +        assumeFalse(buildSkipMessage(testCandidate.getSuitePath(), testCandidate.getTeardownSection().getSkipSection()),, +            testCandidate.getTeardownSection().getSkipSection().skip(restTestExecutionContext.esVersion()));, +        try {, +        } finally {, +            logger.debug("start teardown test [{}]", testCandidate.getTestPath());, +            for (DoSection doSection : testCandidate.getTeardownSection().getDoSections()) {, +                doSection.execute(restTestExecutionContext);, +            }, +            logger.debug("end teardown test [{}]", testCandidate.getTestPath());, +        }, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/RestTestCandidate.java, +import org.elasticsearch.test.rest.section.TeardownSection;, +    public TeardownSection getTeardownSection() {, +        return restTestSuite.getTeardownSection();, +    }, +]