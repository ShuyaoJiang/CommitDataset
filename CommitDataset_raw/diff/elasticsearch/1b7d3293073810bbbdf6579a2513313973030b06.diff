[+++ b/src/test/java/org/elasticsearch/test/integration/gateway/local/SimpleRecoveryLocalGatewayTests.java, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.common.xcontent.XContentFactory;, +import static org.hamcrest.Matchers.*;, +        logger.info("--> add some metadata, additional type and template");, +        node2.client().admin().indices().preparePutMapping("test").setType("type2"), +                .setSource(jsonBuilder().startObject().startObject("type1").startObject("_source").field("enabled", false).endObject().endObject().endObject()), +                .execute().actionGet();, +        node2.client().admin().indices().preparePutTemplate("template_1"), +                .setTemplate("te*"), +                .setOrder(0), +                .addMapping("type1", XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties"), +                        .startObject("field1").field("type", "string").field("store", "yes").endObject(), +                        .startObject("field2").field("type", "string").field("store", "yes").field("index", "not_analyzed").endObject(), +                        .endObject().endObject().endObject()), +                .execute().actionGet();, +, +, +, +        ClusterState state = node1.client().admin().cluster().prepareState().execute().actionGet().state();, +        assertThat(state.metaData().index("test").mapping("type2"), notNullValue());, +        assertThat(state.metaData().templates().get("template_1").template(), equalTo("te*"));]