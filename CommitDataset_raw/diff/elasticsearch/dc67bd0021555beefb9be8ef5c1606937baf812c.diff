[+++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequest.java, +import org.elasticsearch.common.xcontent.XContentParser;, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition).createParser(repositoryDefinition)) {, +            return source(parser.mapOrdered());, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition, offset, length).createParser(repositoryDefinition, offset, length)) {, +            return source(parser.mapOrdered());, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition).createParser(repositoryDefinition)) {, +            return source(parser.mapOrdered());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequest.java, +import org.elasticsearch.common.xcontent.XContentParser;, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition).createParser(repositoryDefinition)) {, +            return source(parser.mapOrdered());, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition, offset, length).createParser(repositoryDefinition, offset, length)) {, +            return source(parser.mapOrdered());, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition).createParser(repositoryDefinition)) {, +            return source(parser.mapOrdered());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsGroup.java, +            shards[i] = ShardRouting.readShardRoutingEntry(in, index, shardId);, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>, +                                        <exclude>${project.build.finalName}-shaded.jar</exclude>, +                                        <exclude>${project.build.finalName}-sources.jar</exclude>, +                                        <exclude>${project.build.finalName}-tests.jar</exclude>, +                                        <exclude>${project.build.finalName}-test-sources.jar</exclude>, +                                        <exclude>slf4j-api-*.jar</exclude>, +                                        <exclude>sigar-*.jar</exclude>, +                                    </excludes>, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequest.java, +import org.elasticsearch.common.xcontent.XContentParser;, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition).createParser(repositoryDefinition)) {, +            return source(parser.mapOrdered());, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition, offset, length).createParser(repositoryDefinition, offset, length)) {, +            return source(parser.mapOrdered());, +        try (XContentParser parser = XContentFactory.xContent(repositoryDefinition).createParser(repositoryDefinition)) {, +            return source(parser.mapOrdered());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsGroup.java, +            shards[i] = ShardRouting.readShardRoutingEntry(in, index, shardId);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java, +import org.elasticsearch.common.xcontent.XContentParser;, +            try (XContentParser parser = XContentFactory.xContent(source).createParser(source)) {, +                return source(parser.mapOrdered());, +            try (XContentParser parser = XContentFactory.xContent(source, offset, length).createParser(source, offset, length)) {, +                return source(parser.mapOrdered());, +        try (XContentParser parser = XContentFactory.xContent(source).createParser(source)) {, +            return source(parser.mapOrdered());, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/pom.xml, +                                    <excludes>${project.build.finalName}-shaded.jar,${project.build.finalName}-sources.jar,${project.build.finalName}-tests.jar,${project.build.finalName}-test-sources.jar,slf4j-api-*.jar,sigar-*.jar</excludes>, +                                    <excludes>]