[+++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +import java.util.Locale;, +                /*, +                 * Check for the existence of a marker file that indicates the plugin is in a garbage state from a failed attempt to remove, +                 * the plugin., +                 */, +                final Path removing = plugin.resolve(".removing-" + info.getName());, +                if (Files.exists(removing)) {, +                    final String message = String.format(, +                            Locale.ROOT,, +                            "found file [%s] from a failed attempt to remove the plugin [%s]; execute [elasticsearch-plugin remove %2$s]",, +                            removing,, +                            info.getName());, +                    throw new IllegalStateException(message);, +                }, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +import java.util.Locale;, +                /*, +                 * Check for the existence of a marker file that indicates the plugin is in a garbage state from a failed attempt to remove, +                 * the plugin., +                 */, +                final Path removing = plugin.resolve(".removing-" + info.getName());, +                if (Files.exists(removing)) {, +                    final String message = String.format(, +                            Locale.ROOT,, +                            "found file [%s] from a failed attempt to remove the plugin [%s]; execute [elasticsearch-plugin remove %2$s]",, +                            removing,, +                            info.getName());, +                    throw new IllegalStateException(message);, +                }, +++ b/core/src/test/java/org/elasticsearch/plugins/PluginsServiceTests.java, +import org.elasticsearch.Version;, +import java.util.Locale;, +    public void testStartupWithRemovingMarker() throws IOException {, +        final Path home = createTempDir();, +        final Settings settings =, +                Settings.builder(), +                        .put(Environment.PATH_HOME_SETTING.getKey(), home), +                        .build();, +        final Path fake = home.resolve("plugins").resolve("fake");, +        Files.createDirectories(fake);, +        Files.createFile(fake.resolve("plugin.jar"));, +        final Path removing = fake.resolve(".removing-fake");, +        Files.createFile(fake.resolve(".removing-fake"));, +        PluginTestUtil.writeProperties(, +                fake,, +                "description", "fake",, +                "name", "fake",, +                "version", "1.0.0",, +                "elasticsearch.version", Version.CURRENT.toString(),, +                "java.version", System.getProperty("java.specification.version"),, +                "classname", "Fake",, +                "has.native.controller", "false");, +        final IllegalStateException e = expectThrows(IllegalStateException.class, () -> newPluginsService(settings));, +        final String expected = String.format(, +                Locale.ROOT,, +                "found file [%s] from a failed attempt to remove the plugin [fake]; execute [elasticsearch-plugin remove fake]",, +                removing);, +        assertThat(e, hasToString(containsString(expected)));, +    }, +, +++ b/core/src/main/java/org/elasticsearch/plugins/PluginsService.java, +import java.util.Locale;, +                /*, +                 * Check for the existence of a marker file that indicates the plugin is in a garbage state from a failed attempt to remove, +                 * the plugin., +                 */, +                final Path removing = plugin.resolve(".removing-" + info.getName());, +                if (Files.exists(removing)) {, +                    final String message = String.format(, +                            Locale.ROOT,, +                            "found file [%s] from a failed attempt to remove the plugin [%s]; execute [elasticsearch-plugin remove %2$s]",, +                            removing,, +                            info.getName());, +                    throw new IllegalStateException(message);, +                }, +++ b/core/src/test/java/org/elasticsearch/plugins/PluginsServiceTests.java, +import org.elasticsearch.Version;, +import java.util.Locale;, +    public void testStartupWithRemovingMarker() throws IOException {, +        final Path home = createTempDir();, +        final Settings settings =, +                Settings.builder(), +                        .put(Environment.PATH_HOME_SETTING.getKey(), home), +                        .build();, +        final Path fake = home.resolve("plugins").resolve("fake");, +        Files.createDirectories(fake);, +        Files.createFile(fake.resolve("plugin.jar"));, +        final Path removing = fake.resolve(".removing-fake");, +        Files.createFile(fake.resolve(".removing-fake"));, +        PluginTestUtil.writeProperties(, +                fake,, +                "description", "fake",, +                "name", "fake",, +                "version", "1.0.0",, +                "elasticsearch.version", Version.CURRENT.toString(),, +                "java.version", System.getProperty("java.specification.version"),, +                "classname", "Fake",, +                "has.native.controller", "false");, +        final IllegalStateException e = expectThrows(IllegalStateException.class, () -> newPluginsService(settings));]