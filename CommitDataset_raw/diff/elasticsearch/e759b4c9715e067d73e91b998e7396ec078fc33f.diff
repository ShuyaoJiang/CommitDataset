[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/resident/ResidentFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import java.util.concurrent.TimeUnit;, +    private final TimeValue expire;, +, +        this.expire = componentSettings.getAsTime("expire", null);, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/resident/ResidentFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import java.util.concurrent.TimeUnit;, +    private final TimeValue expire;, +, +        this.expire = componentSettings.getAsTime("expire", null);, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/soft/SoftFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import java.util.concurrent.TimeUnit;, +    private final TimeValue expire;, +, +        this.expire = componentSettings.getAsTime("expire", null);, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/resident/ResidentFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import java.util.concurrent.TimeUnit;, +    private final TimeValue expire;, +, +        this.expire = componentSettings.getAsTime("expire", null);, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/soft/SoftFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import java.util.concurrent.TimeUnit;, +    private final TimeValue expire;, +, +        this.expire = componentSettings.getAsTime("expire", null);, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/weak/WeakFilterCache.java, +import org.elasticsearch.common.unit.TimeValue;, +import java.util.concurrent.TimeUnit;, +    private final TimeValue expire;, +, +        this.expire = componentSettings.getAsTime("expire", null);, +        if (expire != null) {, +            mapMaker.expireAfterAccess(expire.nanos(), TimeUnit.NANOSECONDS);, +        }]