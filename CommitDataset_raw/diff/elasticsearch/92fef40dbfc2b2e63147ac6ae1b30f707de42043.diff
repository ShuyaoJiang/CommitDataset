[+++ b/docs/reference/ccr/getting-started.asciidoc, +== Getting Started with {ccr}, +, +This getting-started guide for {ccr} shows you how to:, +, +* <<ccr-getting-started-remote-cluster,Connect a local cluster to a remote, +  cluster>>, +* <<ccr-getting-started-leader-index,Create a leader index>> in a remote cluster, +* <<ccr-getting-started-follower-index,Create a follower index>> that replicates, +  a leader index, +* <<ccr-getting-started-auto-follow,Automatically create follower indices>>, +, +[float], +[[ccr-getting-started-before-you-begin]], +=== Before you begin, +. {stack-gs}/get-started-elastic-stack.html#install-elasticsearch[Install {es}], +  on your local and remote clusters., +, +. Obtain a license that includes the {ccr} features. See, +  https://www.elastic.co/subscriptions[subscriptions] and, +  <<license-management>>., +, +. If the Elastic {security-features} are enabled in your local and remote , +  clusters, you need a user that has appropriate authority to perform the steps, +  in this tutorial., ++, +--, +[[ccr-getting-started-security]], +The {ccr} features use cluster privileges and built-in roles to make it easier, +to control which users have authority to manage {ccr}., +, +By default, you can perform all of the steps in this tutorial by, +using the built-in `elastic` user. However, a password must be set for this user, +before the user can do anything. For information about how to set that password,, +see <<security-getting-started>>., +, +If you are performing these steps in a production environment, take extra care, +because the `elastic` user has the `superuser` role and you could inadvertently, +make significant changes. , +, +Alternatively, you can assign the appropriate privileges to a user ID of your, +choice. On the remote cluster that contains the leader index, a user will need, +the `read_ccr` cluster privilege and `monitor` and `read` privileges on the, +leader index., +, +[source,yml], +--------------------------------------------------, +ccr_user:, +  cluster:, +    - read_ccr, +  indices:, +    - names: [ 'leader-index' ], +      privileges:, +        - monitor, +        - read, +--------------------------------------------------, +, +On the local cluster that contains the follower index, the same user will need, +the `manage_ccr` cluster privilege and `monitor`, `read`, `write` and, +`manage_follow_index` privileges on the follower index., +, +[source,yml], +--------------------------------------------------, +ccr_user:, +  cluster:, +    - manage_ccr, +  indices:, +    - names: [ 'follower-index' ], +      privileges:, +        - monitor, +        - read, +        - write, +        - manage_follow_index, +--------------------------------------------------, +, +If you are managing, +<<ccr-getting-started-remote-cluster,connecting to the remote cluster>> via the, +cluster update settings API, you will also need a user with the `all` cluster, +privilege., +--, +, +[float], +[[ccr-getting-started-remote-cluster]], +=== Connecting to a remote cluster, +, +The {ccr} features require that you , +{ref}/modules-remote-clusters.html[connect your local cluster to a remote, +cluster]. In this tutorial, we will connect our local cluster to a remote, +cluster with the cluster alias `leader`., +, +[source,js], +--------------------------------------------------, +PUT /_cluster/settings, +{, +  "persistent" : {, +    "cluster" : {, +      "remote" : {, +        "leader" : {, +          "seeds" : [, +            "127.0.0.1:9300" <1>]