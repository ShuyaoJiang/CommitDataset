[+++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Return a Scorer that throws an ElasticsearchIllegalStateException, +     * on all operations with the given message., +     */, +    public static Scorer illegalScorer(final String message) {, +        return new Scorer(null) {, +            @Override, +            public float score() throws IOException {, +                throw new IllegalStateException(message);, +            }, +            @Override, +            public int freq() throws IOException {, +                throw new IllegalStateException(message);, +            }, +            @Override, +            public int docID() {, +                throw new IllegalStateException(message);, +            }, +            @Override, +            public DocIdSetIterator iterator() {, +                throw new IllegalStateException(message);, +            }, +        };, +    }, +, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Return a Scorer that throws an ElasticsearchIllegalStateException, +     * on all operations with the given message., +     */, +    public static Scorer illegalScorer(final String message) {, +        return new Scorer(null) {, +            @Override, +            public float score() throws IOException {, +                throw new IllegalStateException(message);, +            }, +            @Override, +            public int freq() throws IOException {, +                throw new IllegalStateException(message);, +            }, +            @Override, +            public int docID() {, +                throw new IllegalStateException(message);, +            }, +            @Override, +            public DocIdSetIterator iterator() {, +                throw new IllegalStateException(message);, +            }, +        };, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/path/PathTrie.java, +    private static final String SEPARATOR = "/";, +    private static final String WILDCARD = "*";, +    public PathTrie(Decoder decoder) {, +        root = new TrieNode(SEPARATOR, null, WILDCARD);, +        String[] strings = path.split(SEPARATOR);, +        String[] strings = path.split(SEPARATOR);, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java, +        String[] elements = spare.get().toString().split(";");, +++ b/core/src/main/java/org/elasticsearch/common/Strings.java, +        if (s == null || s.isEmpty()) return Strings.EMPTY_ARRAY;, +        else return s.split(",");, +++ b/core/src/main/java/org/elasticsearch/common/Table.java, +            String[] sAttrs = attributes.split(";");, +++ b/core/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +    /**, +     * Return a Scorer that throws an ElasticsearchIllegalStateException, +     * on all operations with the given message., +     */, +    public static Scorer illegalScorer(final String message) {]