[+++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +import org.elasticsearch.index.mapper.MergeResult;, +                                MergeResult mergeResult = existingMapper.merge(newMapper.mapping(), true);, +                                    throw new MergeMappingException(mergeResult.buildConflicts());, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +import org.elasticsearch.index.mapper.MergeResult;, +                                MergeResult mergeResult = existingMapper.merge(newMapper.mapping(), true);, +                                    throw new MergeMappingException(mergeResult.buildConflicts());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +    public DocumentFieldMappers copyAndAllAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +import org.elasticsearch.index.mapper.MergeResult;, +                                MergeResult mergeResult = existingMapper.merge(newMapper.mapping(), true);, +                                    throw new MergeMappingException(mergeResult.buildConflicts());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +    public DocumentFieldMappers copyAndAllAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +    private MergeResult newMergeContext(boolean simulate) {, +        return new MergeResult(simulate) {, +            public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +                assert simulate() == false;, +                assert simulate() == false;, +    public synchronized MergeResult merge(Mapping mapping, boolean simulate) {, +        final MergeResult mergeResult = newMergeContext(simulate);, +        this.mapping.merge(mapping, mergeResult);, +        if (simulate == false) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +import org.elasticsearch.index.mapper.MergeResult;, +                                MergeResult mergeResult = existingMapper.merge(newMapper.mapping(), true);, +                                    throw new MergeMappingException(mergeResult.buildConflicts());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +    public DocumentFieldMappers copyAndAllAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +    private MergeResult newMergeContext(boolean simulate) {, +        return new MergeResult(simulate) {, +            public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +                assert simulate() == false;, +                assert simulate() == false;, +    public synchronized MergeResult merge(Mapping mapping, boolean simulate) {, +        final MergeResult mergeResult = newMergeContext(simulate);, +        this.mapping.merge(mapping, mergeResult);, +        if (simulate == false) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapperListener.java, +import java.util.Collection;, +    public void fieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +import org.elasticsearch.index.mapper.MergeResult;, +                                MergeResult mergeResult = existingMapper.merge(newMapper.mapping(), true);, +                                    throw new MergeMappingException(mergeResult.buildConflicts());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +    public DocumentFieldMappers copyAndAllAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +    private MergeResult newMergeContext(boolean simulate) {, +        return new MergeResult(simulate) {, +            public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +                assert simulate() == false;, +                assert simulate() == false;, +    public synchronized MergeResult merge(Mapping mapping, boolean simulate) {, +        final MergeResult mergeResult = newMergeContext(simulate);, +        this.mapping.merge(mapping, mergeResult);, +        if (simulate == false) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapperListener.java, +import java.util.Collection;, +    public void fieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMappersLookup.java, +    public FieldMappersLookup copyAndAddAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +import org.elasticsearch.index.mapper.MergeResult;, +                                MergeResult mergeResult = existingMapper.merge(newMapper.mapping(), true);, +                                    throw new MergeMappingException(mergeResult.buildConflicts());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +    public DocumentFieldMappers copyAndAllAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +    public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +    private MergeResult newMergeContext(boolean simulate) {, +        return new MergeResult(simulate) {, +            public void addFieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +                assert simulate() == false;, +                assert simulate() == false;, +    public synchronized MergeResult merge(Mapping mapping, boolean simulate) {, +        final MergeResult mergeResult = newMergeContext(simulate);, +        this.mapping.merge(mapping, mergeResult);, +        if (simulate == false) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapperListener.java, +import java.util.Collection;, +    public void fieldMappers(Collection<FieldMapper<?>> fieldMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMappersLookup.java, +    public FieldMappersLookup copyAndAddAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/Mapper.java, +    void merge(Mapper mergeWith, MergeResult mergeResult) throws MergeMappingException;, +++ b/src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java, +import org.elasticsearch.index.mapper.MergeResult;, +                                MergeResult mergeResult = existingMapper.merge(newMapper.mapping(), true);, +                                    throw new MergeMappingException(mergeResult.buildConflicts());, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java, +    public DocumentFieldMappers copyAndAllAll(Collection<FieldMapper<?>> newMappers) {, +++ b/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java]