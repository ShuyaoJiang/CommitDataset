[+++ b/.idea/dictionaries/kimchy.xml, +      <w>startup</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>startup</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java, +        applyNewOrUpdatedShards(event);, +                    logger.debug("[{}] deleting index", index);, +                            logger.debug("[{}][{}] deleting shard", index, existingShardId);, +                    logger.debug("[{}] creating index", indexMetaData.index());, +                            logger.debug("[{}] adding mapping [{}], source [{}]", index, mappingType, mappingSource);, +                                logger.debug("[{}] updating mapping [{}], source [{}]", index, mappingType, mappingSource);, +                    logger.warn("[{}] failed to add mapping [{}], source [{}]", index, mappingType, mappingSource);, +    private void applyNewOrUpdatedShards(final ClusterChangedEvent event) throws ElasticSearchException {, +                logger.warn("[{}][{}] master [{}] marked shard as started, but shard have not been created, mark shard as failed");, +                shardStateAction.shardFailed(shardRouting, "master " + nodes.masterNode() + " marked shard as started, but shard have not been created, mark shard as failed");, +                    logger.trace("[{}][{}] master [{}] marked shard as initializing, but shard already created, mark shard as started");, +                shardStateAction.shardStarted(shardRouting, "master " + nodes.masterNode() + " marked shard as initializing, but shard already started, mark shard as started");, +                    logger.debug("[{}][{}] creating shard", shardRouting.index(), shardId);, +                logger.warn("[{}][{}] failed to create shard", e, shardRouting.index(), shardRouting.id());, +                    logger.warn("[{}][{}] failed to delete shard after failed creation", e1, shardRouting.index(), shardRouting.id());, +                    logger.warn("[{}][{}] failed to start shard", e, indexService.index().name(), shardRouting.id());, +                            logger.warn("[{}][{}] failed to delete shard after failed startup", e, indexService.index().name(), shardRouting.id());, +                        logger.warn("[{}][{}] failed to mark shard as failed after a failed start", e1, indexService.index().name(), shardRouting.id());]