[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +            if (context.hasScriptFields()) {, +        if (context.hasScriptFields() && !context.hasFieldNames()) {, +        if (!context.hasFieldNames()) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +            if (context.hasScriptFields()) {, +        if (context.hasScriptFields() && !context.hasFieldNames()) {, +        if (!context.hasFieldNames()) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FieldsParseElement.java, +import org.elasticsearch.index.field.function.script.ScriptFieldsFunction;, +import org.elasticsearch.search.fetch.script.ScriptFieldsContext;, +            boolean added = false;, +                added = true;, +                String name = parser.text();, +                if (name.contains("_source.") || name.contains("doc[")) {, +                    // script field to load from source, +                    context.scriptFields().add(new ScriptFieldsContext.ScriptField(name, new ScriptFieldsFunction(name, context.scriptService(), context.mapperService(), context.fieldDataCache()), null));, +                    context.fieldNames().add(name);, +                }, +            }, +            if (!added) {, +                context.emptyFieldNames();, +            String name = parser.text();, +            if (name.contains("_source.") || name.contains("doc[")) {, +                // script field to load from source, +                context.scriptFields().add(new ScriptFieldsContext.ScriptField(name, new ScriptFieldsFunction(name, context.scriptService(), context.mapperService(), context.fieldDataCache()), null));, +            } else {, +                context.fieldNames().add(name);, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +            if (context.hasScriptFields()) {, +        if (context.hasScriptFields() && !context.hasFieldNames()) {, +        if (!context.hasFieldNames()) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FieldsParseElement.java, +import org.elasticsearch.index.field.function.script.ScriptFieldsFunction;, +import org.elasticsearch.search.fetch.script.ScriptFieldsContext;, +            boolean added = false;, +                added = true;, +                String name = parser.text();, +                if (name.contains("_source.") || name.contains("doc[")) {, +                    // script field to load from source, +                    context.scriptFields().add(new ScriptFieldsContext.ScriptField(name, new ScriptFieldsFunction(name, context.scriptService(), context.mapperService(), context.fieldDataCache()), null));, +                    context.fieldNames().add(name);, +                }, +            }, +            if (!added) {, +                context.emptyFieldNames();, +            String name = parser.text();, +            if (name.contains("_source.") || name.contains("doc[")) {, +                // script field to load from source, +                context.scriptFields().add(new ScriptFieldsContext.ScriptField(name, new ScriptFieldsFunction(name, context.scriptService(), context.mapperService(), context.fieldDataCache()), null));, +            } else {, +                context.fieldNames().add(name);, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/script/ScriptFieldsContext.java, +import org.elasticsearch.common.collect.Lists;, +    private List<ScriptField> fields = Lists.newArrayList();, +    public ScriptFieldsContext() {, +    }, +, +    public void add(ScriptField field) {, +        this.fields.add(field);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +            if (context.hasScriptFields()) {, +        if (context.hasScriptFields() && !context.hasFieldNames()) {, +        if (!context.hasFieldNames()) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FieldsParseElement.java, +import org.elasticsearch.index.field.function.script.ScriptFieldsFunction;, +import org.elasticsearch.search.fetch.script.ScriptFieldsContext;, +            boolean added = false;, +                added = true;, +                String name = parser.text();, +                if (name.contains("_source.") || name.contains("doc[")) {, +                    // script field to load from source, +                    context.scriptFields().add(new ScriptFieldsContext.ScriptField(name, new ScriptFieldsFunction(name, context.scriptService(), context.mapperService(), context.fieldDataCache()), null));, +                    context.fieldNames().add(name);, +                }, +            }, +            if (!added) {, +                context.emptyFieldNames();, +            String name = parser.text();, +            if (name.contains("_source.") || name.contains("doc[")) {, +                // script field to load from source, +                context.scriptFields().add(new ScriptFieldsContext.ScriptField(name, new ScriptFieldsFunction(name, context.scriptService(), context.mapperService(), context.fieldDataCache()), null));, +            } else {, +                context.fieldNames().add(name);, +            }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/script/ScriptFieldsContext.java, +import org.elasticsearch.common.collect.Lists;, +    private List<ScriptField> fields = Lists.newArrayList();, +    public ScriptFieldsContext() {, +    }, +, +    public void add(ScriptField field) {, +        this.fields.add(field);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/script/ScriptFieldsParseElement.java, +                context.scriptFields().add(new ScriptFieldsContext.ScriptField(fieldName, new ScriptFieldsFunction(script, context.scriptService(), context.mapperService(), context.fieldDataCache()), params));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java, +            if (context.hasScriptFields()) {, +        if (context.hasScriptFields() && !context.hasFieldNames()) {]