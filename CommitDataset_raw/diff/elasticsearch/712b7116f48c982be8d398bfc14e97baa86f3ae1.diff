[+++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorFactory;, +     * Reads a {@link AggregatorFactory} from the current stream, +     */, +    public AggregatorFactory readAggregatorFactory() throws IOException {, +        return readNamedWriteable(AggregatorFactory.class);, +    }, +, +    /**, +     * Reads a {@link PipelineAggregatorFactory} from the current stream, +     */, +    public PipelineAggregatorFactory readPipelineAggregatorFactory() throws IOException {, +        return readNamedWriteable(PipelineAggregatorFactory.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorFactory;, +     * Reads a {@link AggregatorFactory} from the current stream, +     */, +    public AggregatorFactory readAggregatorFactory() throws IOException {, +        return readNamedWriteable(AggregatorFactory.class);, +    }, +, +    /**, +     * Reads a {@link PipelineAggregatorFactory} from the current stream, +     */, +    public PipelineAggregatorFactory readPipelineAggregatorFactory() throws IOException {, +        return readNamedWriteable(PipelineAggregatorFactory.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorFactory;, +     * Writes a {@link AggregatorFactory} to the current stream, +     */, +    public void writeAggregatorFactory(AggregatorFactory factory) throws IOException {, +        writeNamedWriteable(factory);, +    }, +, +    /**, +     * Writes a {@link PipelineAggregatorFactory} to the current stream, +     */, +    public void writePipelineAggregatorFactory(PipelineAggregatorFactory factory) throws IOException {, +        writeNamedWriteable(factory);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorFactory;, +     * Reads a {@link AggregatorFactory} from the current stream, +     */, +    public AggregatorFactory readAggregatorFactory() throws IOException {, +        return readNamedWriteable(AggregatorFactory.class);, +    }, +, +    /**, +     * Reads a {@link PipelineAggregatorFactory} from the current stream, +     */, +    public PipelineAggregatorFactory readPipelineAggregatorFactory() throws IOException {, +        return readNamedWriteable(PipelineAggregatorFactory.class);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorFactory;, +     * Writes a {@link AggregatorFactory} to the current stream, +     */, +    public void writeAggregatorFactory(AggregatorFactory factory) throws IOException {, +        writeNamedWriteable(factory);, +    }, +, +    /**, +     * Writes a {@link PipelineAggregatorFactory} to the current stream, +     */, +    public void writePipelineAggregatorFactory(PipelineAggregatorFactory factory) throws IOException {, +        writeNamedWriteable(factory);, +    }, +, +    /**, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java, +        /**, +         * @return an empty {@link AggregatorFactory} instance for this parser, +         *         that can be used for deserialization, +         */, +        AggregatorFactory getFactoryPrototype();, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorFactory;, +     * Reads a {@link AggregatorFactory} from the current stream, +     */, +    public AggregatorFactory readAggregatorFactory() throws IOException {, +        return readNamedWriteable(AggregatorFactory.class);, +    }, +]