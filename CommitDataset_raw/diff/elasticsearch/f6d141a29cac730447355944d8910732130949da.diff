[+++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanksAggregatorBuilder;, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesAggregatorBuilder;, +        registerAggregation(PercentilesAggregatorBuilder::new, new PercentilesParser(),, +                PercentilesAggregatorBuilder.AGGREGATION_NAME_FIELD);, +        registerAggregation(PercentileRanksAggregatorBuilder::new, new PercentileRanksParser(),, +                PercentileRanksAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanksAggregatorBuilder;, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesAggregatorBuilder;, +        registerAggregation(PercentilesAggregatorBuilder::new, new PercentilesParser(),, +                PercentilesAggregatorBuilder.AGGREGATION_NAME_FIELD);, +        registerAggregation(PercentileRanksAggregatorBuilder::new, new PercentileRanksParser(),, +                PercentileRanksAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksAggregatorBuilder.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.support.ValuesSource.Numeric;, +import org.elasticsearch.search.aggregations.support.ValuesSourceAggregatorBuilder.LeafOnly;, +    public static final String NAME = InternalTDigestPercentileRanks.TYPE.name();, +    public static final ParseField AGGREGATION_NAME_FIELD = new ParseField(NAME);, +     * Read from a stream., +     */, +    public PercentileRanksAggregatorBuilder(StreamInput in) throws IOException {, +        super(in, InternalTDigestPercentileRanks.TYPE, ValuesSourceType.NUMERIC, ValueType.NUMERIC);, +        values = in.readDoubleArray();, +        keyed = in.readBoolean();, +        numberOfSignificantValueDigits = in.readVInt();, +        compression = in.readDouble();, +        method = PercentilesMethod.TDIGEST.readFrom(in);, +    }, +, +    @Override, +    protected void innerWriteTo(StreamOutput out) throws IOException {, +        out.writeDoubleArray(values);, +        out.writeBoolean(keyed);, +        out.writeVInt(numberOfSignificantValueDigits);, +        out.writeDouble(compression);, +        method.writeTo(out);, +    }, +, +    @Override, +    protected boolean usesNewStyleSerialization() {, +        return true;, +    }, +, +    /**, +, +    @Override, +    public String getWriteableName() {, +        return NAME;, +    }, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanksAggregatorBuilder;, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentilesAggregatorBuilder;, +        registerAggregation(PercentilesAggregatorBuilder::new, new PercentilesParser(),, +                PercentilesAggregatorBuilder.AGGREGATION_NAME_FIELD);, +        registerAggregation(PercentileRanksAggregatorBuilder::new, new PercentileRanksParser(),, +                PercentileRanksAggregatorBuilder.AGGREGATION_NAME_FIELD);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksAggregatorBuilder.java, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.search.aggregations.AggregatorFactory;, +import org.elasticsearch.search.aggregations.support.ValuesSource.Numeric;, +import org.elasticsearch.search.aggregations.support.ValuesSourceAggregatorBuilder.LeafOnly;, +    public static final String NAME = InternalTDigestPercentileRanks.TYPE.name();, +    public static final ParseField AGGREGATION_NAME_FIELD = new ParseField(NAME);, +     * Read from a stream., +     */, +    public PercentileRanksAggregatorBuilder(StreamInput in) throws IOException {, +        super(in, InternalTDigestPercentileRanks.TYPE, ValuesSourceType.NUMERIC, ValueType.NUMERIC);, +        values = in.readDoubleArray();, +        keyed = in.readBoolean();, +        numberOfSignificantValueDigits = in.readVInt();, +        compression = in.readDouble();, +        method = PercentilesMethod.TDIGEST.readFrom(in);, +    }, +, +    @Override, +    protected void innerWriteTo(StreamOutput out) throws IOException {, +        out.writeDoubleArray(values);, +        out.writeBoolean(keyed);, +        out.writeVInt(numberOfSignificantValueDigits);, +        out.writeDouble(compression);, +        method.writeTo(out);, +    }, +, +    @Override, +    protected boolean usesNewStyleSerialization() {, +        return true;, +    }, +, +    /**, +, +    @Override, +    public String getWriteableName() {, +        return NAME;, +    }, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksParser.java, +++ b/core/src/main/java/org/elasticsearch/search/SearchModule.java, +import org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanksAggregatorBuilder;]