[+++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/.gitignore, +build-idea/, +build-eclipse/, +eclipse-build, +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/.gitignore, +build-idea/, +build-eclipse/, +eclipse-build, +++ b/build.gradle, +    // for ide hacks..., +    isIdea = System.getProperty("idea.active") != null || gradle.startParameter.taskNames.contains('idea') || gradle.startParameter.taskNames.contains('cleanIdea'), +  if (isIdea) {, +    project.buildDir = file('build-idea'), +  }, +      outputDir = file('build-idea/classes/main'), +      testOutputDir = file('build-idea/classes/test'), +    File eclipseBuild = project.file('build-eclipse'), +    eclipse.classpath.defaultOutputDir = eclipseBuild, +    if (isEclipse) {, +      // set this so generated dirs will be relative to eclipse build, +      project.buildDir = eclipseBuild, +    }, +        folder.output = "build-eclipse/" + i, +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/.gitignore, +build-idea/, +build-eclipse/, +eclipse-build, +++ b/build.gradle, +    // for ide hacks..., +    isIdea = System.getProperty("idea.active") != null || gradle.startParameter.taskNames.contains('idea') || gradle.startParameter.taskNames.contains('cleanIdea'), +  if (isIdea) {, +    project.buildDir = file('build-idea'), +  }, +      outputDir = file('build-idea/classes/main'), +      testOutputDir = file('build-idea/classes/test'), +    File eclipseBuild = project.file('build-eclipse'), +    eclipse.classpath.defaultOutputDir = eclipseBuild, +    if (isEclipse) {, +      // set this so generated dirs will be relative to eclipse build, +      project.buildDir = eclipseBuild, +    }, +        folder.output = "build-eclipse/" + i, +++ b/buildSrc/build.gradle, +idea {, +  module {, +    inheritOutputDirs = false, +    outputDir = file('build-idea/classes/main'), +    testOutputDir = file('build-idea/classes/test'), +  }, +}, +, +    defaultOutputDir = file('build-eclipse'), +++ b/.dir-locals.el, +   (c-comment-only-line-offset . (0 . 0)), +   (fill-column . 140), +   (fci-rule-column . 140), +   (compile-command . "gradle compileTestJava")))), +++ b/.gitignore, +build-idea/, +build-eclipse/, +eclipse-build, +++ b/build.gradle, +    // for ide hacks..., +    isIdea = System.getProperty("idea.active") != null || gradle.startParameter.taskNames.contains('idea') || gradle.startParameter.taskNames.contains('cleanIdea'), +  if (isIdea) {, +    project.buildDir = file('build-idea'), +  }, +      outputDir = file('build-idea/classes/main'), +      testOutputDir = file('build-idea/classes/test'), +    File eclipseBuild = project.file('build-eclipse'), +    eclipse.classpath.defaultOutputDir = eclipseBuild, +    if (isEclipse) {, +      // set this so generated dirs will be relative to eclipse build, +      project.buildDir = eclipseBuild, +    }, +        folder.output = "build-eclipse/" + i, +++ b/buildSrc/build.gradle, +idea {, +  module {, +    inheritOutputDirs = false]