[+++ b/src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java, +            ParsedQuery parsedQuery = null;, +                        parsedQuery = parse(parser);, +                        parsedQuery = parse(qSourceParser);, +            if (parsedQuery != null) {, +                return parsedQuery;, +            }, +++ b/src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java, +            ParsedQuery parsedQuery = null;, +                        parsedQuery = parse(parser);, +                        parsedQuery = parse(qSourceParser);, +            if (parsedQuery != null) {, +                return parsedQuery;, +            }, +++ b/src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java, +import org.elasticsearch.common.bytes.BytesArray;, +    @Test, +    public void irrelevantPropertiesBeforeQuery() throws IOException {, +        createIndex("test");, +        ensureGreen();, +        refresh();, +, +        assertThat(client().admin().indices().prepareValidateQuery("test").setSource(new BytesArray("{\"foo\": \"bar\", \"query\": {\"term\" : { \"user\" : \"kimchy\" }}}")).get().isValid(), equalTo(false));, +    }, +, +    @Test, +    public void irrelevantPropertiesAfterQuery() throws IOException {, +        createIndex("test");, +        ensureGreen();, +        refresh();, +, +        assertThat(client().admin().indices().prepareValidateQuery("test").setSource(new BytesArray("{\"query\": {\"term\" : { \"user\" : \"kimchy\" }}, \"foo\": \"bar\"}")).get().isValid(), equalTo(false));, +    }, +]