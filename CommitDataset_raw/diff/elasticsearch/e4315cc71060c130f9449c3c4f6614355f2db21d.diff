[+++ b/benchmarks/build.gradle, +// order of this seciont matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/benchmarks/build.gradle, +// order of this seciont matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/build.gradle, +++ b/benchmarks/build.gradle, +// order of this seciont matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/build.gradle, +++ b/buildSrc/build.gradle, +import org.gradle.util.GradleVersion, +, +apply plugin: 'groovy', +  compile gradleApi(), +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.2.0' // Gradle 2.14 requires a version > 1.0.1, +, +  test.exclude 'org/elasticsearch/test/NamingConventionsCheckBadClasses*', +  // test for elasticsearch.build tries to run with ES..., +  test.enabled = false, +, +    testClass = 'org.elasticsearch.test.NamingConventionsCheckBadClasses$UnitTestCase', +    integTestClass = 'org.elasticsearch.test.NamingConventionsCheckBadClasses$IntegTestCase', +, +  task namingConventionsMain(type: org.elasticsearch.gradle.precommit.NamingConventionsTask) {, +    checkForTestsInMain = true, +    testClass = namingConventions.testClass, +    integTestClass = namingConventions.integTestClass, +  }, +  precommit.dependsOn namingConventionsMain, +++ b/benchmarks/build.gradle, +// order of this seciont matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/build.gradle, +++ b/buildSrc/build.gradle, +import org.gradle.util.GradleVersion, +, +apply plugin: 'groovy', +  compile gradleApi(), +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.2.0' // Gradle 2.14 requires a version > 1.0.1, +, +  test.exclude 'org/elasticsearch/test/NamingConventionsCheckBadClasses*', +  // test for elasticsearch.build tries to run with ES..., +  test.enabled = false, +, +    testClass = 'org.elasticsearch.test.NamingConventionsCheckBadClasses$UnitTestCase', +    integTestClass = 'org.elasticsearch.test.NamingConventionsCheckBadClasses$IntegTestCase', +, +  task namingConventionsMain(type: org.elasticsearch.gradle.precommit.NamingConventionsTask) {, +    checkForTestsInMain = true, +    testClass = namingConventions.testClass, +    integTestClass = namingConventions.integTestClass, +  }, +  precommit.dependsOn namingConventionsMain, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +import org.gradle.api.AntBuilder, +        Test oldTestTask = tasks.findByPath('test'), +        if (oldTestTask == null) {, +        tasks.remove(oldTestTask), +        Map properties = [, +            name: 'test',, +            type: RandomizedTestingTask,, +            dependsOn: oldTestTask.dependsOn,, +            group: JavaBasePlugin.VERIFICATION_GROUP,, +            description: 'Runs unit tests with the randomized testing framework', +        ], +        RandomizedTestingTask newTestTask = tasks.create(properties), +        newTestTask.classpath = oldTestTask.classpath, +        newTestTask.testClassesDir = oldTestTask.project.sourceSets.test.output.classesDir, +        // since gradle 4.5, tasks immutable dependencies are "hidden" (do not show up in dependsOn), +        // so we must explicitly add a dependency on generating the test classpath, +        newTestTask.dependsOn('testClasses'), +        Task checkTask = tasks.findByPath('check'), +++ b/benchmarks/build.gradle, +// order of this seciont matters, see: https://github.com/johnrengelman/shadow/issues/336, +++ b/build.gradle, +++ b/buildSrc/build.gradle, +import org.gradle.util.GradleVersion, +, +apply plugin: 'groovy', +  compile gradleApi(), +  compile 'ru.vyarus:gradle-animalsniffer-plugin:1.2.0' // Gradle 2.14 requires a version > 1.0.1, +, +  test.exclude 'org/elasticsearch/test/NamingConventionsCheckBadClasses*', +  // test for elasticsearch.build tries to run with ES..., +  test.enabled = false, +, +    testClass = 'org.elasticsearch.test.NamingConventionsCheckBadClasses$UnitTestCase', +    integTestClass = 'org.elasticsearch.test.NamingConventionsCheckBadClasses$IntegTestCase', +, +  task namingConventionsMain(type: org.elasticsearch.gradle.precommit.NamingConventionsTask) {, +    checkForTestsInMain = true, +    testClass = namingConventions.testClass, +    integTestClass = namingConventions.integTestClass, +  }, +  precommit.dependsOn namingConventionsMain, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingPlugin.groovy, +import org.gradle.api.AntBuilder, +        Test oldTestTask = tasks.findByPath('test'), +        if (oldTestTask == null) {, +        tasks.remove(oldTestTask), +        Map properties = [, +            name: 'test',]