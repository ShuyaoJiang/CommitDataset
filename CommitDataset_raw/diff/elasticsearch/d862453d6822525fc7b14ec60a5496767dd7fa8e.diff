[+++ b/server/src/main/java/org/elasticsearch/action/ingest/GetPipelineResponse.java, +import org.elasticsearch.common.Strings;, +            try (XContentBuilder contentBuilder = XContentBuilder.builder(parser.contentType().xContent())) {, +                    new PipelineConfiguration(pipelineId, BytesReference.bytes(contentBuilder), contentBuilder.contentType());, +        }, +    public String toString() {, +        return Strings.toString(this);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/action/ingest/GetPipelineResponse.java, +import org.elasticsearch.common.Strings;, +            try (XContentBuilder contentBuilder = XContentBuilder.builder(parser.contentType().xContent())) {, +                    new PipelineConfiguration(pipelineId, BytesReference.bytes(contentBuilder), contentBuilder.contentType());, +        }, +    public String toString() {, +        return Strings.toString(this);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/ingest/PipelineConfiguration.java, +import org.elasticsearch.common.Strings;, +    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>("pipeline_config", true, Builder::new);, +    public String toString() {, +        return Strings.toString(this);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/action/ingest/GetPipelineResponse.java, +import org.elasticsearch.common.Strings;, +            try (XContentBuilder contentBuilder = XContentBuilder.builder(parser.contentType().xContent())) {, +                    new PipelineConfiguration(pipelineId, BytesReference.bytes(contentBuilder), contentBuilder.contentType());, +        }, +    public String toString() {, +        return Strings.toString(this);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/ingest/PipelineConfiguration.java, +import org.elasticsearch.common.Strings;, +    private static final ObjectParser<Builder, Void> PARSER = new ObjectParser<>("pipeline_config", true, Builder::new);, +    public String toString() {, +        return Strings.toString(this);, +    }, +, +    @Override, +++ b/server/src/test/java/org/elasticsearch/ingest/PipelineConfigurationTests.java, +import org.elasticsearch.test.AbstractXContentTestCase;, +import java.util.function.Predicate;, +public class PipelineConfigurationTests extends AbstractXContentTestCase<PipelineConfiguration> {, +, +    @Override, +    protected PipelineConfiguration createTestInstance() {, +        BytesArray config;, +        if (randomBoolean()) {, +            config = new BytesArray("{}".getBytes(StandardCharsets.UTF_8));, +        } else {, +            config = new BytesArray("{\"foo\": \"bar\"}".getBytes(StandardCharsets.UTF_8));, +        }, +        return new PipelineConfiguration(randomAlphaOfLength(4), config, XContentType.JSON);, +    }, +, +    @Override, +    protected PipelineConfiguration doParseInstance(XContentParser parser) throws IOException {, +        return PipelineConfiguration.getParser().parse(parser, null);, +    }, +, +    @Override, +    protected boolean supportsUnknownFields() {, +        return true;, +    }, +, +    @Override, +    protected Predicate<String> getRandomFieldsExcludeFilter() {, +        return field -> field.equals("config");, +    }]