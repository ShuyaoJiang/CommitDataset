[+++ b/core/src/main/java/org/elasticsearch/plugins/ListPluginsCommand.java, +            terminal.println(plugin.getFileName().toString());, +++ b/core/src/main/java/org/elasticsearch/plugins/ListPluginsCommand.java, +            terminal.println(plugin.getFileName().toString());, +++ b/qa/evil-tests/src/test/java/org/elasticsearch/plugins/ListPluginsCommandTests.java, +    static void buildFakePlugin(Environment env, String description, String name, String classname) throws IOException {, +                "version", "1.0",, +        buildFakePlugin(env, "fake desc", "fake", "org.fake");, +        assertEquals(terminal.getOutput(), buildMultiline("fake"));, +        buildFakePlugin(env, "fake desc", "fake1", "org.fake");, +        buildFakePlugin(env, "fake desc 2", "fake2", "org.fake");, +        assertEquals(terminal.getOutput(), buildMultiline("fake1", "fake2"));, +        buildFakePlugin(env, "fake desc", "fake_plugin", "org.fake");, +        assertEquals(terminal.getOutput(), buildMultiline("Plugins directory: " + env.pluginsFile(), "fake_plugin",, +                "- Plugin information:", "Name: fake_plugin", "Description: fake desc", "Version: 1.0", " * Classname: org.fake"));, +        buildFakePlugin(env, "fake desc 1", "fake_plugin1", "org.fake");, +        buildFakePlugin(env, "fake desc 2", "fake_plugin2", "org.fake2");, +                "fake_plugin1", "- Plugin information:", "Name: fake_plugin1", "Description: fake desc 1", "Version: 1.0",, +                " * Classname: org.fake", "fake_plugin2", "- Plugin information:", "Name: fake_plugin2",, +                "Description: fake desc 2", "Version: 1.0", " * Classname: org.fake2"));, +        buildFakePlugin(env, "fake desc 1", "fake_plugin1", "org.fake");, +        buildFakePlugin(env, "fake desc 2", "fake_plugin2", "org.fake2");, +        assertEquals(output, buildMultiline("fake_plugin1", "fake_plugin2"));]