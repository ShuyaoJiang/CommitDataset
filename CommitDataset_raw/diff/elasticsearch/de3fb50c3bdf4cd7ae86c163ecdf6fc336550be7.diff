[+++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    int snapshots = 10;, +    public int snapshots() {, +        return this.snapshots;, +    }, +, +    public NodesHotThreadsRequest snapshots(int snapshots) {, +        this.snapshots = snapshots;, +        return this;, +    }, +, +        snapshots = in.readInt();, +        out.writeInt(snapshots);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    int snapshots = 10;, +    public int snapshots() {, +        return this.snapshots;, +    }, +, +    public NodesHotThreadsRequest snapshots(int snapshots) {, +        this.snapshots = snapshots;, +        return this;, +    }, +, +        snapshots = in.readInt();, +        out.writeInt(snapshots);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +                .interval(request.request.interval), +                .threadElementsSnapshotCount(request.request.snapshots);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    int snapshots = 10;, +    public int snapshots() {, +        return this.snapshots;, +    }, +, +    public NodesHotThreadsRequest snapshots(int snapshots) {, +        this.snapshots = snapshots;, +        return this;, +    }, +, +        snapshots = in.readInt();, +        out.writeInt(snapshots);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +                .interval(request.request.interval), +                .threadElementsSnapshotCount(request.request.snapshots);, +++ b/src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java, +    private static final Object mutex = new Object();, +, +        synchronized (mutex) {, +            return innerDetect();, +        }, +    }, +, +    private String innerDetect() throws Exception {, +        boolean enabledCpu = false;, +        try {, +                if (!threadBean.isThreadCpuTimeEnabled()) {, +                    enabledCpu = true;, +                    threadBean.setThreadCpuTimeEnabled(true);, +                }, +        } finally {, +            if (enabledCpu) {, +                threadBean.setThreadCpuTimeEnabled(false);, +            }, +        }, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java, +    int snapshots = 10;, +    public int snapshots() {, +        return this.snapshots;, +    }, +, +    public NodesHotThreadsRequest snapshots(int snapshots) {, +        this.snapshots = snapshots;, +        return this;, +    }, +, +        snapshots = in.readInt();, +        out.writeInt(snapshots);, +++ b/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java, +                .interval(request.request.interval), +                .threadElementsSnapshotCount(request.request.snapshots);, +++ b/src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java, +    private static final Object mutex = new Object();, +, +        synchronized (mutex) {, +            return innerDetect();, +        }, +    }, +, +    private String innerDetect() throws Exception {, +        boolean enabledCpu = false;, +        try {, +                if (!threadBean.isThreadCpuTimeEnabled()) {, +                    enabledCpu = true;, +                    threadBean.setThreadCpuTimeEnabled(true);, +                }, +        } finally {, +            if (enabledCpu) {, +                threadBean.setThreadCpuTimeEnabled(false);, +            }]