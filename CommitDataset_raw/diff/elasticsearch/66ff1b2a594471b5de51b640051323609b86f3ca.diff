[+++ b/docs/reference/modules/cluster/allocation_filtering.asciidoc, +++ b/docs/reference/modules/cluster/allocation_filtering.asciidoc, +++ b/docs/reference/modules/cluster/disk_allocator.asciidoc, +++ b/docs/reference/modules/cluster/allocation_filtering.asciidoc, +++ b/docs/reference/modules/cluster/disk_allocator.asciidoc, +++ b/test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.common.xcontent.json.JsonXContent;, +import static java.util.Collections.emptyMap;, +import static org.hamcrest.Matchers.empty;, +        wipeClusterSettings();, +     * Remove any cluster settings., +     */, +    private void wipeClusterSettings() throws IOException {, +        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest("GET", "/_cluster/settings"));, +, +        boolean mustClear = false;, +        XContentBuilder clearCommand = JsonXContent.contentBuilder();, +        clearCommand.startObject();, +        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {, +            String type = entry.getKey().toString();, +            Map<?, ?> settings = (Map<?, ?>) entry.getValue();, +            if (settings.isEmpty()) {, +                continue;, +            }, +            mustClear = true;, +            clearCommand.startObject(type);, +            for (Object key: settings.keySet()) {, +                clearCommand.field(key + ".*").nullValue();, +            }, +            clearCommand.endObject();, +        }, +        clearCommand.endObject();, +, +        if (mustClear) {, +            adminClient().performRequest("PUT", "/_cluster/settings", emptyMap(), new StringEntity(, +                clearCommand.string(), ContentType.APPLICATION_JSON));, +        }, +    }, +, +    /**]