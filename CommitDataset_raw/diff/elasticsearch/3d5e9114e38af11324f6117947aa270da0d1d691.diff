[+++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    protected static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile connectionProfile,, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    protected static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile connectionProfile,, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/MockNioTransport.java, +import org.elasticsearch.transport.ConnectionProfile;, +import org.elasticsearch.transport.TransportRequestOptions;, +import java.util.HashSet;, +import java.util.Set;, +    @Override, +    protected ConnectionProfile resolveConnectionProfile(ConnectionProfile connectionProfile) {, +        ConnectionProfile resolvedProfile = resolveConnectionProfile(connectionProfile, defaultConnectionProfile);, +        if (resolvedProfile.getNumConnections() <= 3) {, +            return resolvedProfile;, +        }, +        ConnectionProfile.Builder builder = new ConnectionProfile.Builder();, +        Set<TransportRequestOptions.Type> allTypesWithConnection = new HashSet<>();, +        Set<TransportRequestOptions.Type> allTypesWithoutConnection = new HashSet<>();, +        for (TransportRequestOptions.Type type : TransportRequestOptions.Type.values()) {, +            int numConnections = resolvedProfile.getNumConnectionsPerType(type);, +            if (numConnections > 0) {, +                allTypesWithConnection.add(type);, +            } else {, +                allTypesWithoutConnection.add(type);, +            }, +        }, +, +        // make sure we maintain at least the types that are supported by this profile even if we only use a single channel for them., +        builder.addConnections(3, allTypesWithConnection.toArray(new TransportRequestOptions.Type[0]));, +        if (allTypesWithoutConnection.isEmpty() == false) {, +            builder.addConnections(0, allTypesWithoutConnection.toArray(new TransportRequestOptions.Type[0]));, +        }, +        builder.setHandshakeTimeout(resolvedProfile.getHandshakeTimeout());, +        builder.setConnectTimeout(resolvedProfile.getConnectTimeout());, +        return builder.build();, +    }, +, +++ b/server/src/main/java/org/elasticsearch/transport/TcpTransport.java, +    protected static ConnectionProfile resolveConnectionProfile(@Nullable ConnectionProfile connectionProfile,, +++ b/test/framework/src/main/java/org/elasticsearch/transport/nio/MockNioTransport.java, +import org.elasticsearch.transport.ConnectionProfile;, +import org.elasticsearch.transport.TransportRequestOptions;, +import java.util.HashSet;, +import java.util.Set;, +    @Override, +    protected ConnectionProfile resolveConnectionProfile(ConnectionProfile connectionProfile) {, +        ConnectionProfile resolvedProfile = resolveConnectionProfile(connectionProfile, defaultConnectionProfile);, +        if (resolvedProfile.getNumConnections() <= 3) {, +            return resolvedProfile;, +        }, +        ConnectionProfile.Builder builder = new ConnectionProfile.Builder();, +        Set<TransportRequestOptions.Type> allTypesWithConnection = new HashSet<>();, +        Set<TransportRequestOptions.Type> allTypesWithoutConnection = new HashSet<>();, +        for (TransportRequestOptions.Type type : TransportRequestOptions.Type.values()) {, +            int numConnections = resolvedProfile.getNumConnectionsPerType(type);, +            if (numConnections > 0) {, +                allTypesWithConnection.add(type);, +            } else {, +                allTypesWithoutConnection.add(type);, +            }, +        }, +, +        // make sure we maintain at least the types that are supported by this profile even if we only use a single channel for them., +        builder.addConnections(3, allTypesWithConnection.toArray(new TransportRequestOptions.Type[0]));, +        if (allTypesWithoutConnection.isEmpty() == false) {, +            builder.addConnections(0, allTypesWithoutConnection.toArray(new TransportRequestOptions.Type[0]));, +        }, +        builder.setHandshakeTimeout(resolvedProfile.getHandshakeTimeout());, +        builder.setConnectTimeout(resolvedProfile.getConnectTimeout());, +        return builder.build();, +    }, +, +++ b/test/framework/src/test/java/org/elasticsearch/transport/nio/SimpleMockNioTransportTests.java, +    protected int channelsPerNodeConnection() {, +        return 3;, +    }, +, +    @Override]