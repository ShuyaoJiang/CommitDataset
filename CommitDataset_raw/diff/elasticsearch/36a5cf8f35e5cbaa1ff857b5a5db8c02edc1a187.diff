[+++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingDocValuesSource.java, +    CollapsingDocValuesSource(String field) {, +        Numeric(String field) {, +        Keyword(String field) {, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingDocValuesSource.java, +    CollapsingDocValuesSource(String field) {, +        Numeric(String field) {, +        Keyword(String field) {, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingTopDocsCollector.java, +                                       int topN, boolean trackMaxScore) {, +     * {@link CollapseTopFieldDocs}. The collapsing needs only one pass so we can get the final top docs at the end, +                                                              int topN, boolean trackMaxScore)  {, +                                                              int topN, boolean trackMaxScore)  {, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingDocValuesSource.java, +    CollapsingDocValuesSource(String field) {, +        Numeric(String field) {, +        Keyword(String field) {, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingTopDocsCollector.java, +                                       int topN, boolean trackMaxScore) {, +     * {@link CollapseTopFieldDocs}. The collapsing needs only one pass so we can get the final top docs at the end, +                                                              int topN, boolean trackMaxScore)  {, +                                                              int topN, boolean trackMaxScore)  {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 60 used to be for EarlyTerminationException, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingDocValuesSource.java, +    CollapsingDocValuesSource(String field) {, +        Numeric(String field) {, +        Keyword(String field) {, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingTopDocsCollector.java, +                                       int topN, boolean trackMaxScore) {, +     * {@link CollapseTopFieldDocs}. The collapsing needs only one pass so we can get the final top docs at the end, +                                                              int topN, boolean trackMaxScore)  {, +                                                              int topN, boolean trackMaxScore)  {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 60 used to be for EarlyTerminationException, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +        return reducedQueryPhase(queryResults, isScrollRequest, true);, +     */, +    public ReducedQueryPhase reducedQueryPhase(Collection<? extends SearchPhaseResult> queryResults, boolean isScrollRequest, boolean trackTotalHits) {, +        return reducedQueryPhase(queryResults, null, new ArrayList<>(), new TopDocsStats(trackTotalHits), 0, isScrollRequest);, +    }, +, +, +    /**, +     * Reduces the given query results and consumes all aggregations and profile results., +     * @param queryResults a list of non-null query shard results, +        final boolean trackTotalHits = source == null || source.trackTotalHits();, +                return reducedQueryPhase(results.asList(), isScrollRequest, trackTotalHits);, +        final boolean trackTotalHits;, +        TopDocsStats() {, +            this(true);, +        }, +, +        TopDocsStats(boolean trackTotalHits) {, +            this.trackTotalHits = trackTotalHits;, +            this.totalHits = trackTotalHits ? 0 : -1;, +        }, +, +            if (trackTotalHits) {, +            }, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingDocValuesSource.java, +    CollapsingDocValuesSource(String field) {, +        Numeric(String field) {, +        Keyword(String field) {, +++ b/core/src/main/java/org/apache/lucene/search/grouping/CollapsingTopDocsCollector.java, +                                       int topN, boolean trackMaxScore) {, +     * {@link CollapseTopFieldDocs}. The collapsing needs only one pass so we can get the final top docs at the end, +                                                              int topN, boolean trackMaxScore)  {, +                                                              int topN, boolean trackMaxScore)  {, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 60 used to be for EarlyTerminationException, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java, +        return reducedQueryPhase(queryResults, isScrollRequest, true);, +     */, +    public ReducedQueryPhase reducedQueryPhase(Collection<? extends SearchPhaseResult> queryResults, boolean isScrollRequest, boolean trackTotalHits) {, +        return reducedQueryPhase(queryResults, null, new ArrayList<>(), new TopDocsStats(trackTotalHits), 0, isScrollRequest);, +    }, +, +, +    /**, +     * Reduces the given query results and consumes all aggregations and profile results., +     * @param queryResults a list of non-null query shard results, +        final boolean trackTotalHits = source == null || source.trackTotalHits();, +                return reducedQueryPhase(results.asList(), isScrollRequest, trackTotalHits);, +        final boolean trackTotalHits;, +        TopDocsStats() {, +            this(true);, +        }, +, +        TopDocsStats(boolean trackTotalHits) {, +            this.trackTotalHits = trackTotalHits;, +            this.totalHits = trackTotalHits ? 0 : -1;, +        }, +, +            if (trackTotalHits) {, +            }, +++ b/core/src/main/java/org/elasticsearch/action/search/SearchRequest.java, +import static org.elasticsearch.action.ValidateActions.addValidationError;, +, +        ActionRequestValidationException validationException = null;]