[+++ b/.idea/libraries/lucene.xml, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-highlighter/jars/lucene-highlighter-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-memory/jars/lucene-memory-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-core/jars/lucene-core-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-analyzers/jars/lucene-analyzers-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-queries/jars/lucene-queries-3.5.0.jar!/" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/memory/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/highlighter/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/queries/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/analyzers/common/src/java" />, +++ b/.idea/libraries/lucene.xml, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-highlighter/jars/lucene-highlighter-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-memory/jars/lucene-memory-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-core/jars/lucene-core-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-analyzers/jars/lucene-analyzers-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-queries/jars/lucene-queries-3.5.0.jar!/" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/memory/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/highlighter/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/queries/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/analyzers/common/src/java" />, +++ b/.idea/modules/plugin-analysis-icu.iml, +          <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-icu/jars/lucene-icu-3.5.0.jar!/" />, +++ b/.idea/libraries/lucene.xml, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-highlighter/jars/lucene-highlighter-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-memory/jars/lucene-memory-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-core/jars/lucene-core-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-analyzers/jars/lucene-analyzers-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-queries/jars/lucene-queries-3.5.0.jar!/" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/memory/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/highlighter/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/queries/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/analyzers/common/src/java" />, +++ b/.idea/modules/plugin-analysis-icu.iml, +          <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-icu/jars/lucene-icu-3.5.0.jar!/" />, +++ b/modules/elasticsearch/build.gradle, +    compile('org.apache.lucene:lucene-core:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-analyzers:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-queries:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-memory:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-highlighter:3.5.0') { transitive = false }, +++ b/.idea/libraries/lucene.xml, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-highlighter/jars/lucene-highlighter-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-memory/jars/lucene-memory-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-core/jars/lucene-core-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-analyzers/jars/lucene-analyzers-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-queries/jars/lucene-queries-3.5.0.jar!/" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/memory/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/highlighter/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/queries/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/analyzers/common/src/java" />, +++ b/.idea/modules/plugin-analysis-icu.iml, +          <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-icu/jars/lucene-icu-3.5.0.jar!/" />, +++ b/modules/elasticsearch/build.gradle, +    compile('org.apache.lucene:lucene-core:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-analyzers:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-queries:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-memory:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-highlighter:3.5.0') { transitive = false }, +++ /dev/null, +++ b/.idea/libraries/lucene.xml, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-highlighter/jars/lucene-highlighter-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-memory/jars/lucene-memory-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-core/jars/lucene-core-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-analyzers/jars/lucene-analyzers-3.5.0.jar!/" />, +      <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-queries/jars/lucene-queries-3.5.0.jar!/" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/memory/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/highlighter/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/queries/src/java" />, +      <root url="file://$USER_HOME$/opt/lucene/3.5.0.src/contrib/analyzers/common/src/java" />, +++ b/.idea/modules/plugin-analysis-icu.iml, +          <root url="jar://$GRADLE_REPOSITORY$/org.apache.lucene/lucene-icu/jars/lucene-icu-3.5.0.jar!/" />, +++ b/modules/elasticsearch/build.gradle, +    compile('org.apache.lucene:lucene-core:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-analyzers:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-queries:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-memory:3.5.0') { transitive = false }, +    compile('org.apache.lucene:lucene-highlighter:3.5.0') { transitive = false }, +++ /dev/null, +++ b/modules/elasticsearch/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java, +import org.apache.lucene.search.ConstantScoreQuery;, +import org.apache.lucene.search.DisjunctionMaxQuery;, +import org.apache.lucene.search.Filter;, +import org.apache.lucene.search.FilteredQuery;, +import org.apache.lucene.search.MultiTermQueryWrapperFilter;, +import org.apache.lucene.search.PublicTermsFilter;, +import org.apache.lucene.search.Query;, +import org.apache.lucene.search.TermQuery;, +    public CustomFieldQuery(Query query, IndexReader reader, FastVectorHighlighter highlighter) throws IOException {, +        this(query, reader, highlighter.isPhraseHighlight(), highlighter.isFieldMatch());, +    public CustomFieldQuery(Query query, IndexReader reader, boolean phraseHighlight, boolean fieldMatch) throws IOException {, +        super(query, reader, phraseHighlight, fieldMatch);, +    @Override void flatten(Query sourceQuery, IndexReader reader, Collection<Query> flatQueries) throws IOException {, +                flatten(query, reader, flatQueries);, +                flatten(constantScoreQuery.getFilter(), reader, flatQueries);, +                flatten(constantScoreQuery.getQuery(), reader, flatQueries);]