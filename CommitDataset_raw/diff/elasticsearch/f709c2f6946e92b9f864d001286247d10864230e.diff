[+++ b/docs/reference/ml/apis/find-file-structure.asciidoc, +`timeout`::, +  (time) Sets the maximum amount of time that the structure analysis make take., +  If the analysis is still running when the timeout expires then it will be, +  aborted. The default value is 25 seconds., +, +, +, +If you try to analyze a lot of data then the analysis will take a long time., +If you want to limit the amount of processing your {es} cluster performs for, +a request, use the timeout query parameter. The analysis will be aborted and, +an error returned when the timeout expires. For example, you can replace 20000, +lines in the previous example with 200000 and set a 1 second timeout on the, +analysis:, +, +[source,js], +----, +curl -s "s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-06.csv" | head -200000 | curl -s -H "Content-Type: application/json" -XPOST "localhost:9200/_xpack/ml/find_file_structure?pretty&lines_to_sample=200000&timeout=1s" -T -, +----, +// NOTCONSOLE, +// Not converting to console because this shows how curl can be used, +, +Unless you are using an incredibly fast computer you'll receive a timeout error:, +, +[source,js], +----, +{, +  "error" : {, +    "root_cause" : [, +      {, +        "type" : "timeout_exception",, +        "reason" : "Aborting structure analysis during [delimited record parsing] as it has taken longer than the timeout of [1s]", +      }, +    ],, +    "type" : "timeout_exception",, +    "reason" : "Aborting structure analysis during [delimited record parsing] as it has taken longer than the timeout of [1s]", +  },, +  "status" : 500, +}, +----, +// NOTCONSOLE, +, +--, +NOTE: If you try the example above yourself you will note that the overall, +running time of the `curl` commands is considerably longer than 1 second. This, +is because it takes a while to download 200000 lines of CSV from the internet,, +and the timeout is measured from the time this endpoint starts to process the, +data., +--, +, +This is an example of analyzing {es}'s own log file:, +, +[source,js], +----, +curl -s -H "Content-Type: application/json" -XPOST "localhost:9200/_xpack/ml/find_file_structure?pretty" -T "$ES_HOME/logs/elasticsearch.log", +----, +// NOTCONSOLE, +// Not converting to console because this shows how curl can be used, +, +If the request does not encounter errors, the result will look something like, +this:, +, +[source,js], +----, +{, +  "num_lines_analyzed" : 53,, +  "num_messages_analyzed" : 53,, +  "sample_start" : "[2018-09-27T14:39:28,518][INFO ][o.e.e.NodeEnvironment    ] [node-0] using [1] data paths, mounts [[/ (/dev/disk1)]], net usable_space [165.4gb], net total_space [464.7gb], types [hfs]\n[2018-09-27T14:39:28,521][INFO ][o.e.e.NodeEnvironment    ] [node-0] heap size [494.9mb], compressed ordinary object pointers [true]\n",, +  "charset" : "UTF-8",, +  "has_byte_order_marker" : false,, +  "format" : "semi_structured_text", <1>, +  "multiline_start_pattern" : "^\\[\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2},\\d{3}", <2>, +  "grok_pattern" : "\\[%{TIMESTAMP_ISO8601:timestamp}\\]\\[%{LOGLEVEL:loglevel}.*", <3>, +  "timestamp_field" : "timestamp",, +  "joda_timestamp_formats" : [, +    "ISO8601", +  ],, +  "java_timestamp_formats" : [, +    "yyyy-MM-dd'T'HH:mm:ss,SSS", +  ],, +  "need_client_timezone" : true,, +  "mappings" : {, +    "@timestamp" : {, +      "type" : "date", +    },, +    "loglevel" : {, +      "type" : "keyword", +    },, +    "message" : {, +      "type" : "text", +    }, +  },, +  "field_stats" : {, +    "loglevel" : {, +      "count" : 53,, +      "cardinality" : 3,, +      "top_hits" : [, +        {, +          "value" : "INFO",, +          "count" : 51]