[+++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    field = indexService.queryParserService().defaultField();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    field = indexService.queryParserService().defaultField();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +        IndexQueryParserService queryParserService = indexService.queryParserService();, +            searchContext.parsedQuery(queryParserService.toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    field = indexService.queryParserService().defaultField();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +        IndexQueryParserService queryParserService = indexService.queryParserService();, +            searchContext.parsedQuery(queryParserService.toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(indexService.queryParserService().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    field = indexService.queryParserService().defaultField();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +        IndexQueryParserService queryParserService = indexService.queryParserService();, +            searchContext.parsedQuery(queryParserService.toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(indexService.queryParserService().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +                final SuggestionSearchContext context = suggestPhase.parseElement().parseInternal(parser, indexService.mapperService(),, +                        indexService.queryParserService(), request.shardId().getIndex(), request.shardId().id(), request);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    field = indexService.queryParserService().defaultField();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +        IndexQueryParserService queryParserService = indexService.queryParserService();, +            searchContext.parsedQuery(queryParserService.toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(indexService.queryParserService().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +                final SuggestionSearchContext context = suggestPhase.parseElement().parseInternal(parser, indexService.mapperService(),, +                        indexService.queryParserService(), request.shardId().getIndex(), request.shardId().id(), request);, +++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java, +        String delimiter = "";, +            sb.append(delimiter).append(level.name());, +            delimiter = ",";, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    field = indexService.queryParserService().defaultField();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +        IndexQueryParserService queryParserService = indexService.queryParserService();, +            searchContext.parsedQuery(queryParserService.toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(indexService.queryParserService().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +                final SuggestionSearchContext context = suggestPhase.parseElement().parseInternal(parser, indexService.mapperService(),, +                        indexService.queryParserService(), request.shardId().getIndex(), request.shardId().id(), request);, +++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java, +        String delimiter = "";, +            sb.append(delimiter).append(level.name());, +            delimiter = ",";, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +     * provided {@link org.elasticsearch.index.query.IndexQueryParserService}, +    public void validateAliasFilter(String alias, String filter, IndexQueryParserService indexQueryParserService) {, +        assert indexQueryParserService != null;, +            validateAliasFilter(parser, indexQueryParserService);, +     * provided {@link org.elasticsearch.index.query.IndexQueryParserService}, +    public void validateAliasFilter(String alias, byte[] filter, IndexQueryParserService indexQueryParserService) {, +        assert indexQueryParserService != null;, +            validateAliasFilter(parser, indexQueryParserService);, +    private void validateAliasFilter(XContentParser parser, IndexQueryParserService indexQueryParserService) throws IOException {, +        QueryShardContext context = indexQueryParserService.getShardContext();, +            context.reset(parser);, +            context.parseContext().parseInnerQueryBuilder().toFilter(context);, +            context.reset(null);, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java, +                    field = indexService.queryParserService().defaultField();, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +        IndexQueryParserService queryParserService = indexService.queryParserService();, +            searchContext.parsedQuery(queryParserService.toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java, +            context.parsedQuery(indexService.queryParserService().toQuery(request.query()));, +++ b/core/src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java, +                final SuggestionSearchContext context = suggestPhase.parseElement().parseInternal(parser, indexService.mapperService(),, +                        indexService.queryParserService(), request.shardId().getIndex(), request.shardId().id(), request);, +++ b/core/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java, +        String delimiter = "";, +            sb.append(delimiter).append(level.name());, +            delimiter = ",";, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +import org.elasticsearch.index.query.IndexQueryParserService;, +     * provided {@link org.elasticsearch.index.query.IndexQueryParserService}, +    public void validateAliasFilter(String alias, String filter, IndexQueryParserService indexQueryParserService) {, +        assert indexQueryParserService != null;, +            validateAliasFilter(parser, indexQueryParserService);, +     * provided {@link org.elasticsearch.index.query.IndexQueryParserService}, +    public void validateAliasFilter(String alias, byte[] filter, IndexQueryParserService indexQueryParserService) {, +        assert indexQueryParserService != null;, +            validateAliasFilter(parser, indexQueryParserService);, +    private void validateAliasFilter(XContentParser parser, IndexQueryParserService indexQueryParserService) throws IOException {, +        QueryShardContext context = indexQueryParserService.getShardContext();, +            context.reset(parser);]