[+++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/PipelineExecutionService.java, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/PipelineExecutionService.java, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/transport/simulate/SimulatePipelineRequestPayload.java, +import org.elasticsearch.plugin.ingest.PipelineStore;, +    public List<Data> documents() {, +        return documents;, +    public SimulatePipelineResponse execute() {, +        List<SimulatedItemResponse> responses = new ArrayList<>();, +        for (Data data : documents) {, +            try {, +                pipeline.execute(data);, +                responses.add(new SimulatedItemResponse(data));, +            } catch (Exception e) {, +                responses.add(new SimulatedItemResponse(e));, +            }, +        }, +        return new SimulatePipelineResponse(pipeline.getId(), responses);, +        public SimulatePipelineRequestPayload create(String pipelineId, Map<String, Object> config, PipelineStore pipelineStore) throws IOException {, +                pipeline = pipelineStore.get(pipelineId);, +                pipeline = (new Pipeline.Factory()).create("_pipeline_id", pipelineConfig, pipelineStore.getProcessorFactoryRegistry());, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/PipelineExecutionService.java, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/transport/simulate/SimulatePipelineRequestPayload.java, +import org.elasticsearch.plugin.ingest.PipelineStore;, +    public List<Data> documents() {, +        return documents;, +    public SimulatePipelineResponse execute() {, +        List<SimulatedItemResponse> responses = new ArrayList<>();, +        for (Data data : documents) {, +            try {, +                pipeline.execute(data);, +                responses.add(new SimulatedItemResponse(data));, +            } catch (Exception e) {, +                responses.add(new SimulatedItemResponse(e));, +            }, +        }, +        return new SimulatePipelineResponse(pipeline.getId(), responses);, +        public SimulatePipelineRequestPayload create(String pipelineId, Map<String, Object> config, PipelineStore pipelineStore) throws IOException {, +                pipeline = pipelineStore.get(pipelineId);, +                pipeline = (new Pipeline.Factory()).create("_pipeline_id", pipelineConfig, pipelineStore.getProcessorFactoryRegistry());, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/transport/simulate/SimulatePipelineResponse.java, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +import java.util.Objects;, +    private List<SimulatedItemResponse> responses;, +, +    public SimulatePipelineResponse() {, +, +    }, +, +    public SimulatePipelineResponse(String pipelineId, List<SimulatedItemResponse> responses) {, +        this.pipelineId = pipelineId;, +        this.responses = Collections.unmodifiableList(responses);, +    }, +    public void pipelineId(String pipelineId) {, +    public List<SimulatedItemResponse> responses() {, +    public void responses(List<SimulatedItemResponse> responses) {, +        this.responses = responses;, +    }, +, +        out.writeVInt(responses.size());, +        responses = new ArrayList<>();, +            responses.add(response);, +                return RestStatus.BAD_REQUEST;, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) return true;, +        if (o == null || getClass() != o.getClass()) return false;, +        SimulatePipelineResponse that = (SimulatePipelineResponse) o;, +        return Objects.equals(pipelineId, that.pipelineId) &&, +                Objects.equals(responses, that.responses);, +    }, +, +    @Override, +    public int hashCode() {, +        return Objects.hash(pipelineId, responses);, +    }, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/PipelineExecutionService.java, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/transport/simulate/SimulatePipelineRequestPayload.java, +import org.elasticsearch.plugin.ingest.PipelineStore;, +    public List<Data> documents() {, +        return documents;, +    public SimulatePipelineResponse execute() {, +        List<SimulatedItemResponse> responses = new ArrayList<>();, +        for (Data data : documents) {, +            try {, +                pipeline.execute(data);, +                responses.add(new SimulatedItemResponse(data));, +            } catch (Exception e) {, +                responses.add(new SimulatedItemResponse(e));, +            }, +        }, +        return new SimulatePipelineResponse(pipeline.getId(), responses);, +        public SimulatePipelineRequestPayload create(String pipelineId, Map<String, Object> config, PipelineStore pipelineStore) throws IOException {, +                pipeline = pipelineStore.get(pipelineId);, +                pipeline = (new Pipeline.Factory()).create("_pipeline_id", pipelineConfig, pipelineStore.getProcessorFactoryRegistry());, +++ b/plugins/ingest/src/main/java/org/elasticsearch/plugin/ingest/transport/simulate/SimulatePipelineResponse.java, +import java.util.ArrayList;, +import java.util.Collections;]