[+++ b/CONTRIBUTING.md, +Run the test suite to make sure that nothing is broken. See the, +[TESTING](TESTING.asciidoc) file for help running tests., +++ b/CONTRIBUTING.md, +Run the test suite to make sure that nothing is broken. See the, +[TESTING](TESTING.asciidoc) file for help running tests., +++ b/README.textile, +In order to create a distribution, simply run the @mvn clean package, +-DskipTests@ command in the cloned directory., +See the "TESTING":TESTING.asciidoc file for more information about, +running the Elasticsearch test suite., +, +++ b/CONTRIBUTING.md, +Run the test suite to make sure that nothing is broken. See the, +[TESTING](TESTING.asciidoc) file for help running tests., +++ b/README.textile, +In order to create a distribution, simply run the @mvn clean package, +-DskipTests@ command in the cloned directory., +See the "TESTING":TESTING.asciidoc file for more information about, +running the Elasticsearch test suite., +, +++ b/TESTING.asciidoc, +[[Testing Framework Cheatsheet]], += Testing, +, +[partintro], +--, +Elasticsearch uses jUnit for testing, it also uses randomness in the, +tests, that can be set using a seed, the following is a cheatsheet of, +options for running the tests for ES., +, +== Creating packages, +, +To create a distribution without running the tests, simply run the, +following:, +, +-----------------------------, +mvn clean package -DskipTests, +-----------------------------, +, +== Other test options, +, +To disable and enable netty transport, set the `ES_TEST_LOCAL`, +environment variable., +, +Use netty transport:, +, +------------------------------------, +export ES_TEST_LOCAL=true && mvn test, +------------------------------------, +, +Use local transport:, +, +-------------------------------------, +export ES_TEST_LOCAL=false && mvn test, +-------------------------------------, +, +Wait on mapping changes:, +, +------------------------------------------------, +export ES_WAIT_ON_MAPPING_CHANGE=true && mvn test, +------------------------------------------------, +, +=== Test case filtering., +, +- `tests.class` is a class-filtering shell-like glob pattern,, +- `tests.method` is a method-filtering glob pattern., +, +Run a single test case (variants), +, +----------------------------------------------------------, +mvn test -Dtests.class=org.elasticsearch.package.ClassName, +mvn test "-Dtests.class=*.ClassName", +----------------------------------------------------------, +, +Run all tests in a package and sub-packages, +, +----------------------------------------------------, +mvn test "-Dtests.class=org.elasticsearch.package.*", +----------------------------------------------------, +, +Run any test methods that contain 'esi' (like: ...r*esi*ze...)., +, +-------------------------------, +mvn test "-Dtests.method=*esi*", +-------------------------------, +, +=== Seed and repetitions., +, +Run with a given seed (seed is a hex-encoded long)., +, +------------------------------, +mvn test -Dtests.seed=DEADBEEF, +------------------------------, +, +=== Repeats _all_ tests of ClassName N times., +, +Every test repetition will have a different seed., +, +--------------------------------------------------]