[+++ b/modules/transport-netty4/src/test/java/org/elasticsearch/rest/discovery/Zen2RestApiIT.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +        return builder.build();, +    @Override, +    protected List<Settings> addExtraClusterBootstrapSettings(List<Settings> allNodesSettings) {, +        final Settings firstNodeSettings = allNodesSettings.get(0);, +        final List<Settings> otherNodesSettings = allNodesSettings.subList(1, allNodesSettings.size());, +        final List<String> masterNodeNames = allNodesSettings.stream(), +                .filter(org.elasticsearch.node.Node.NODE_MASTER_SETTING::get), +                .map(org.elasticsearch.node.Node.NODE_NAME_SETTING::get), +                .collect(Collectors.toList());, +        final List<Settings> updatedSettings = new ArrayList<>();, +, +        updatedSettings.add(Settings.builder().put(firstNodeSettings), +                .putList(ClusterBootstrapService.INITIAL_MASTER_NODES_SETTING.getKey(), masterNodeNames), +                .build());, +        updatedSettings.addAll(otherNodesSettings);, +, +        return updatedSettings;, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/rest/discovery/Zen2RestApiIT.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +        return builder.build();, +    @Override, +    protected List<Settings> addExtraClusterBootstrapSettings(List<Settings> allNodesSettings) {, +        final Settings firstNodeSettings = allNodesSettings.get(0);, +        final List<Settings> otherNodesSettings = allNodesSettings.subList(1, allNodesSettings.size());, +        final List<String> masterNodeNames = allNodesSettings.stream(), +                .filter(org.elasticsearch.node.Node.NODE_MASTER_SETTING::get), +                .map(org.elasticsearch.node.Node.NODE_NAME_SETTING::get), +                .collect(Collectors.toList());, +        final List<Settings> updatedSettings = new ArrayList<>();, +, +        updatedSettings.add(Settings.builder().put(firstNodeSettings), +                .putList(ClusterBootstrapService.INITIAL_MASTER_NODES_SETTING.getKey(), masterNodeNames), +                .build());, +        updatedSettings.addAll(otherNodesSettings);, +, +        return updatedSettings;, +++ b/server/src/test/java/org/elasticsearch/gateway/RecoverAfterNodesIT.java, +import java.util.ArrayList;, +import java.util.List;, +    @Override, +    protected List<Settings> addExtraClusterBootstrapSettings(List<Settings> allNodesSettings) {, +        if (internalCluster().numDataAndMasterNodes() == 0) {, +            final Settings firstNodeSettings = allNodesSettings.get(0);, +            final List<Settings> otherNodesSettings = allNodesSettings.subList(1, allNodesSettings.size());, +, +            final List<Settings> updatedSettings = new ArrayList<>();, +            updatedSettings.add(Settings.builder().put(firstNodeSettings), +                    .putList(ClusterBootstrapService.INITIAL_MASTER_NODES_SETTING.getKey(),, +                            Node.NODE_NAME_SETTING.get(firstNodeSettings)).build());, +            updatedSettings.addAll(otherNodesSettings);, +, +            return updatedSettings;, +        }, +        return super.addExtraClusterBootstrapSettings(allNodesSettings);, +    }, +, +        Client clientNode1 = startNode(Settings.builder().put("gateway.recover_after_nodes", 3), 1);, +            .put(Node.NODE_MASTER_SETTING.getKey(), true), 1);, +            .put(Node.NODE_MASTER_SETTING.getKey(), true), 1);, +++ b/modules/transport-netty4/src/test/java/org/elasticsearch/rest/discovery/Zen2RestApiIT.java, +import java.util.ArrayList;, +import java.util.stream.Collectors;, +        return builder.build();, +    @Override, +    protected List<Settings> addExtraClusterBootstrapSettings(List<Settings> allNodesSettings) {, +        final Settings firstNodeSettings = allNodesSettings.get(0);, +        final List<Settings> otherNodesSettings = allNodesSettings.subList(1, allNodesSettings.size());, +        final List<String> masterNodeNames = allNodesSettings.stream(), +                .filter(org.elasticsearch.node.Node.NODE_MASTER_SETTING::get), +                .map(org.elasticsearch.node.Node.NODE_NAME_SETTING::get), +                .collect(Collectors.toList());, +        final List<Settings> updatedSettings = new ArrayList<>();, +, +        updatedSettings.add(Settings.builder().put(firstNodeSettings), +                .putList(ClusterBootstrapService.INITIAL_MASTER_NODES_SETTING.getKey(), masterNodeNames), +                .build());, +        updatedSettings.addAll(otherNodesSettings);, +, +        return updatedSettings;, +++ b/server/src/test/java/org/elasticsearch/gateway/RecoverAfterNodesIT.java, +import java.util.ArrayList;, +import java.util.List;, +    @Override, +    protected List<Settings> addExtraClusterBootstrapSettings(List<Settings> allNodesSettings) {, +        if (internalCluster().numDataAndMasterNodes() == 0) {, +            final Settings firstNodeSettings = allNodesSettings.get(0);, +            final List<Settings> otherNodesSettings = allNodesSettings.subList(1, allNodesSettings.size());, +, +            final List<Settings> updatedSettings = new ArrayList<>();, +            updatedSettings.add(Settings.builder().put(firstNodeSettings), +                    .putList(ClusterBootstrapService.INITIAL_MASTER_NODES_SETTING.getKey(),, +                            Node.NODE_NAME_SETTING.get(firstNodeSettings)).build());, +            updatedSettings.addAll(otherNodesSettings);, +, +            return updatedSettings;, +        }]