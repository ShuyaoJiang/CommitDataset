[+++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +    private final Factory factory;, +, +    @Inject, +    public ShingleTokenFilterFactory(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {, +        super(index, indexSettings, name, settings);, +        Integer maxShingleSize = settings.getAsInt("max_shingle_size", ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE);, +        Integer minShingleSize = settings.getAsInt("min_shingle_size", ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE);, +        Boolean outputUnigrams = settings.getAsBoolean("output_unigrams", true);, +        Boolean outputUnigramsIfNoShingles = settings.getAsBoolean("output_unigrams_if_no_shingles", false);, +        String tokenSeparator = settings.get("token_separator", ShingleFilter.TOKEN_SEPARATOR);, +        factory = new Factory("shingle", minShingleSize, maxShingleSize, outputUnigrams, outputUnigramsIfNoShingles, tokenSeparator);, +    }, +    , +, +    @Override, +    public TokenStream create(TokenStream tokenStream) {, +       return factory.create(tokenStream);, +    }, +    , +    , +    public Factory getInnerFactory() {, +        return this.factory;, +    }, +    , +    public static final class Factory implements TokenFilterFactory {, +        private final String tokenSeparator;, +        private final String name;, +        , +        public Factory(String name) {, +            this(name, ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE, ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE, true, false, ShingleFilter.TOKEN_SEPARATOR);, +        Factory(String name, int minShingleSize, int maxShingleSize, boolean outputUnigrams, boolean outputUnigramsIfNoShingles, String tokenSeparator) {, +            this.maxShingleSize = maxShingleSize;, +            this.outputUnigrams = outputUnigrams;, +            this.outputUnigramsIfNoShingles = outputUnigramsIfNoShingles;, +            this.tokenSeparator = tokenSeparator;, +            this.minShingleSize = minShingleSize;, +            this.name = name;, +        }, +        , +, +        @Override, +        public String name() {, +            return name;, +        }, +    }, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +    private final Factory factory;, +, +    @Inject, +    public ShingleTokenFilterFactory(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {, +        super(index, indexSettings, name, settings);, +        Integer maxShingleSize = settings.getAsInt("max_shingle_size", ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE);, +        Integer minShingleSize = settings.getAsInt("min_shingle_size", ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE);, +        Boolean outputUnigrams = settings.getAsBoolean("output_unigrams", true);, +        Boolean outputUnigramsIfNoShingles = settings.getAsBoolean("output_unigrams_if_no_shingles", false);, +        String tokenSeparator = settings.get("token_separator", ShingleFilter.TOKEN_SEPARATOR);, +        factory = new Factory("shingle", minShingleSize, maxShingleSize, outputUnigrams, outputUnigramsIfNoShingles, tokenSeparator);, +    }, +    , +, +    @Override, +    public TokenStream create(TokenStream tokenStream) {, +       return factory.create(tokenStream);, +    }, +    , +    , +    public Factory getInnerFactory() {, +        return this.factory;, +    }, +    , +    public static final class Factory implements TokenFilterFactory {, +        private final String tokenSeparator;, +        private final String name;, +        , +        public Factory(String name) {, +            this(name, ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE, ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE, true, false, ShingleFilter.TOKEN_SEPARATOR);, +        Factory(String name, int minShingleSize, int maxShingleSize, boolean outputUnigrams, boolean outputUnigramsIfNoShingles, String tokenSeparator) {, +            this.maxShingleSize = maxShingleSize;, +            this.outputUnigrams = outputUnigrams;, +            this.outputUnigramsIfNoShingles = outputUnigramsIfNoShingles;, +            this.tokenSeparator = tokenSeparator;, +            this.minShingleSize = minShingleSize;, +            this.name = name;, +        }, +        , +, +        @Override, +        public String name() {, +            return name;, +        }, +    }, +++ b/src/main/java/org/elasticsearch/indices/analysis/IndicesAnalysisService.java, +        tokenFilterFactories.put("shingle", new PreBuiltTokenFilterFactoryFactory(new ShingleTokenFilterFactory.Factory("shingle")));, +++ b/src/main/java/org/elasticsearch/index/analysis/ShingleTokenFilterFactory.java, +    private final Factory factory;, +, +    @Inject, +    public ShingleTokenFilterFactory(Index index, @IndexSettings Settings indexSettings, @Assisted String name, @Assisted Settings settings) {, +        super(index, indexSettings, name, settings);]