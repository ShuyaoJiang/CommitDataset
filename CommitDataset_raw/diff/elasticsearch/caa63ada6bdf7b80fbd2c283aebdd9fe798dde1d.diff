[+++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +import java.util.ListIterator;, +                return Collections.unmodifiableList((List<String>) valueFromPrefix);, +            map.put(setting, new ArrayList<>(values));, +                if (entry.getValue() == null) {, +                if (entry.getValue() instanceof List) {, +                    final ListIterator<String> li = ((List<String>) entry.getValue()).listIterator();, +                    while (li.hasNext()) {, +                        final String settingValueRaw = li.next();, +                        final String settingValueResolved = propertyPlaceholder.replacePlaceholders(settingValueRaw, placeholderResolver);, +                        li.set(settingValueResolved);, +                    }, +                    continue;, +                }, +, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +import java.util.ListIterator;, +                return Collections.unmodifiableList((List<String>) valueFromPrefix);, +            map.put(setting, new ArrayList<>(values));, +                if (entry.getValue() == null) {, +                if (entry.getValue() instanceof List) {, +                    final ListIterator<String> li = ((List<String>) entry.getValue()).listIterator();, +                    while (li.hasNext()) {, +                        final String settingValueRaw = li.next();, +                        final String settingValueResolved = propertyPlaceholder.replacePlaceholders(settingValueRaw, placeholderResolver);, +                        li.set(settingValueResolved);, +                    }, +                    continue;, +                }, +, +++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java, +    public void testReplacePropertiesPlaceholderSystemPropertyList() {, +        final String hostname = randomAlphaOfLength(16);, +        final String hostip = randomAlphaOfLength(16);, +        final Settings settings = Settings.builder(), +            .putList("setting1", "${HOSTNAME}", "${HOSTIP}"), +            .replacePropertyPlaceholders(name -> name.equals("HOSTNAME") ? hostname : name.equals("HOSTIP") ? hostip : null), +            .build();, +        assertThat(settings.getAsList("setting1"), contains(hostname, hostip));, +    }, +]