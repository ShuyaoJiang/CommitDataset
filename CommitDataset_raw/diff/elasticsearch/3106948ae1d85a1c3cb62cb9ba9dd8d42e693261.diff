[+++ b/build.gradle, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    Map<String, String> systemProperties = new HashMap<>(), +    void systemProperty(String property, String value) {, +                for (Map.Entry<String, String> prop : systemProperties) {, +                    sysproperty key: prop.getKey(), value: prop.getValue(), +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    Map<String, String> systemProperties = new HashMap<>(), +    void systemProperty(String property, String value) {, +                for (Map.Entry<String, String> prop : systemProperties) {, +                    sysproperty key: prop.getKey(), value: prop.getValue(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        this.filesFilter.exclude(excludes), +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    Map<String, String> systemProperties = new HashMap<>(), +    void systemProperty(String property, String value) {, +                for (Map.Entry<String, String> prop : systemProperties) {, +                    sysproperty key: prop.getKey(), value: prop.getValue(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    int baseHttpPort = 9400, +    int baseTransportPort = 9500, +        ant.get(src: "http://localhost:${node.httpPort()}",, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    Map<String, String> systemProperties = new HashMap<>(), +    void systemProperty(String property, String value) {, +                for (Map.Entry<String, String> prop : systemProperties) {, +                    sysproperty key: prop.getKey(), value: prop.getValue(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    int baseHttpPort = 9400, +    int baseTransportPort = 9500, +        ant.get(src: "http://localhost:${node.httpPort()}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +    static void setup(Project project, Task task, ClusterConfiguration config) {, +            'http.port'                       : node.httpPort(),, +            'transport.tcp.port'              : node.transportPort(),, +            'discovery.zen.ping.unicast.hosts': (0..<node.config.numNodes).collect{"127.0.0.1:${node.config.baseTransportPort + it}"}.join(','),, +                            socket(server: '127.0.0.1', port: node.httpPort()), +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    Map<String, String> systemProperties = new HashMap<>(), +    void systemProperty(String property, String value) {, +                for (Map.Entry<String, String> prop : systemProperties) {, +                    sysproperty key: prop.getKey(), value: prop.getValue(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    int baseHttpPort = 9400, +    int baseTransportPort = 9500, +        ant.get(src: "http://localhost:${node.httpPort()}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +    static void setup(Project project, Task task, ClusterConfiguration config) {, +            'http.port'                       : node.httpPort(),, +            'transport.tcp.port'              : node.transportPort(),, +            'discovery.zen.ping.unicast.hosts': (0..<node.config.numNodes).collect{"127.0.0.1:${node.config.baseTransportPort + it}"}.join(','),, +                            socket(server: '127.0.0.1', port: node.httpPort()), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +    /** Returns the http port for this node */, +    int httpPort() {, +        return config.baseHttpPort + nodeNum, +    /** Returns the transport port for this node */, +    int transportPort() {, +        return config.baseTransportPort + nodeNum, +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy, +    Map<String, String> systemProperties = new HashMap<>(), +    void systemProperty(String property, String value) {, +                for (Map.Entry<String, String> prop : systemProperties) {, +                    sysproperty key: prop.getKey(), value: prop.getValue(), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ForbiddenPatternsTask.groovy, +        this.filesFilter.exclude(excludes), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterConfiguration.groovy, +    int baseHttpPort = 9400, +    int baseTransportPort = 9500, +        ant.get(src: "http://localhost:${node.httpPort()}",, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/ClusterFormationTasks.groovy, +    static void setup(Project project, Task task, ClusterConfiguration config) {, +            'http.port'                       : node.httpPort(),, +            'transport.tcp.port'              : node.transportPort(),, +            'discovery.zen.ping.unicast.hosts': (0..<node.config.numNodes).collect{"127.0.0.1:${node.config.baseTransportPort + it}"}.join(','),, +                            socket(server: '127.0.0.1', port: node.httpPort()), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/NodeInfo.groovy, +    /** Returns the http port for this node */, +    int httpPort() {, +        return config.baseHttpPort + nodeNum, +    /** Returns the transport port for this node */, +    int transportPort() {, +        return config.baseTransportPort + nodeNum, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/test/RestIntegTestTask.groovy, +            systemProperty('tests.cluster', "localhost:${clusterConfig.baseTransportPort}"), +            ClusterFormationTasks.setup(project, this, clusterConfig), +++ b/build.gradle, +++ b/buildSrc/src/main/groovy/com/carrotsearch/gradle/junit4/RandomizedTestingTask.groovy]