[+++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import com.google.common.collect.Lists;, +        list.add(Collections.singleton(infos.getSegmentsFileName()));, +++ b/src/main/java/org/elasticsearch/common/lucene/Lucene.java, +import com.google.common.collect.Lists;, +        list.add(Collections.singleton(infos.getSegmentsFileName()));, +++ b/src/test/java/org/elasticsearch/common/lucene/LuceneTest.java, +import org.apache.lucene.analysis.MockAnalyzer;, +import java.util.HashSet;, +import java.util.Set;, +, +, +    public void testFiles() throws IOException {, +        MockDirectoryWrapper dir = newMockDirectory();, +        dir.setEnableVirusScanner(false);, +        IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));, +        iwc.setMergePolicy(NoMergePolicy.INSTANCE);, +        iwc.setMaxBufferedDocs(2);, +        iwc.setUseCompoundFile(true);, +        IndexWriter writer = new IndexWriter(dir, iwc);, +        Document doc = new Document();, +        doc.add(new TextField("id", "1", random().nextBoolean() ? Field.Store.YES : Field.Store.NO));, +        writer.addDocument(doc);, +        writer.commit();, +        Set<String> files = new HashSet<>();, +        for (String f : Lucene.files(Lucene.readSegmentInfos(dir))) {, +            files.add(f);, +        }, +, +        assertTrue(files.toString(), files.contains("segments_1"));, +        assertTrue(files.toString(), files.contains("_0.cfs"));, +        assertTrue(files.toString(), files.contains("_0.cfe"));, +        assertTrue(files.toString(), files.contains("_0.si"));, +, +        doc = new Document();, +        doc.add(new TextField("id", "2", random().nextBoolean() ? Field.Store.YES : Field.Store.NO));, +        writer.addDocument(doc);, +, +        doc = new Document();, +        doc.add(new TextField("id", "3", random().nextBoolean() ? Field.Store.YES : Field.Store.NO));, +        writer.addDocument(doc);, +        writer.commit();, +, +        files.clear();, +        for (String f : Lucene.files(Lucene.readSegmentInfos(dir))) {, +            files.add(f);, +        }, +        assertFalse(files.toString(), files.contains("segments_1"));, +        assertTrue(files.toString(), files.contains("segments_2"));, +        assertTrue(files.toString(), files.contains("_0.cfs"));, +        assertTrue(files.toString(), files.contains("_0.cfe"));, +        assertTrue(files.toString(), files.contains("_0.si"));, +, +        assertTrue(files.toString(), files.contains("_1.cfs"));, +        assertTrue(files.toString(), files.contains("_1.cfe"));, +        assertTrue(files.toString(), files.contains("_1.si"));, +        writer.close();, +        dir.close();, +, +    }]