[+++ b/docs/reference/testing/testing-framework.asciidoc, +These kind of tests require firing up a whole cluster of nodes, before the tests can actually be run. Compared to unit tests they are obviously way more time consuming, but the test infrastructure tries to minimize the time cost by only restarting the whole cluster, if this is configured explicitly., +The class your tests have to inherit from is `ElasticsearchIntegrationTest`. As soon as you inherit, there is no need for you to start any elasticsearch nodes manually in your test anymore, though you might need to ensure that at least a certain amount of nodes is up and running., +, +[[number-of-shards]], +==== number of shards, +, +The number of shards used for indices created during integration tests is randomized between `1` and `10` unless overwritten upon index creation via index settings., +Rule of thumb is not to specify the number of shards unless needed, so that each test will use a different one all the time., +`assertAcked()`::           Ensure the a request has been acknowledged by the master, +`assertFailures()`::        Asserts that shard failures have happened during a search request, +++ b/docs/reference/testing/testing-framework.asciidoc, +These kind of tests require firing up a whole cluster of nodes, before the tests can actually be run. Compared to unit tests they are obviously way more time consuming, but the test infrastructure tries to minimize the time cost by only restarting the whole cluster, if this is configured explicitly., +The class your tests have to inherit from is `ElasticsearchIntegrationTest`. As soon as you inherit, there is no need for you to start any elasticsearch nodes manually in your test anymore, though you might need to ensure that at least a certain amount of nodes is up and running., +, +[[number-of-shards]], +==== number of shards, +, +The number of shards used for indices created during integration tests is randomized between `1` and `10` unless overwritten upon index creation via index settings., +Rule of thumb is not to specify the number of shards unless needed, so that each test will use a different one all the time., +`assertAcked()`::           Ensure the a request has been acknowledged by the master, +`assertFailures()`::        Asserts that shard failures have happened during a search request, +++ b/src/test/java/org/elasticsearch/action/termvector/AbstractTermVectorTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +    protected void createIndexBasedOnFieldSettings(String index, TestFieldSetting[] fieldSettings) throws IOException {, +        mappingBuilder.endObject().endObject().endObject();, +                .put(indexSettings()), +        assertAcked(prepareCreate(index).addMapping("type1", mappingBuilder).setSettings(settings));, +++ b/docs/reference/testing/testing-framework.asciidoc, +These kind of tests require firing up a whole cluster of nodes, before the tests can actually be run. Compared to unit tests they are obviously way more time consuming, but the test infrastructure tries to minimize the time cost by only restarting the whole cluster, if this is configured explicitly., +The class your tests have to inherit from is `ElasticsearchIntegrationTest`. As soon as you inherit, there is no need for you to start any elasticsearch nodes manually in your test anymore, though you might need to ensure that at least a certain amount of nodes is up and running., +, +[[number-of-shards]], +==== number of shards, +, +The number of shards used for indices created during integration tests is randomized between `1` and `10` unless overwritten upon index creation via index settings., +Rule of thumb is not to specify the number of shards unless needed, so that each test will use a different one all the time., +`assertAcked()`::           Ensure the a request has been acknowledged by the master, +`assertFailures()`::        Asserts that shard failures have happened during a search request, +++ b/src/test/java/org/elasticsearch/action/termvector/AbstractTermVectorTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +    protected void createIndexBasedOnFieldSettings(String index, TestFieldSetting[] fieldSettings) throws IOException {, +        mappingBuilder.endObject().endObject().endObject();, +                .put(indexSettings()), +        assertAcked(prepareCreate(index).addMapping("type1", mappingBuilder).setSettings(settings));, +++ b/src/test/java/org/elasticsearch/action/termvector/GetTermVectorCheckDocFreqTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.ToXContent;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +    @Override, +    protected int numberOfShards() {, +        return 1;, +    }, +    @Override, +    protected int numberOfReplicas() {, +        return 0;, +    }, +, +    @Override, +    public Settings indexSettings() {, +        return ImmutableSettings.builder(), +                .put(super.indexSettings()), +                .put("index.analysis.analyzer.tv_test.tokenizer", "whitespace"), +                .putArray("index.analysis.analyzer.tv_test.filter", "type_as_payload", "lowercase"), +                .build();, +    }, +        assertAcked(prepareCreate("test").addMapping("type1", mapping));, +        XContentBuilder xBuilder = XContentFactory.jsonBuilder();, +        response.toXContent(xBuilder, ToXContent.EMPTY_PARAMS);, +++ b/docs/reference/testing/testing-framework.asciidoc, +These kind of tests require firing up a whole cluster of nodes, before the tests can actually be run. Compared to unit tests they are obviously way more time consuming, but the test infrastructure tries to minimize the time cost by only restarting the whole cluster, if this is configured explicitly., +The class your tests have to inherit from is `ElasticsearchIntegrationTest`. As soon as you inherit, there is no need for you to start any elasticsearch nodes manually in your test anymore, though you might need to ensure that at least a certain amount of nodes is up and running., +, +[[number-of-shards]], +==== number of shards, +, +The number of shards used for indices created during integration tests is randomized between `1` and `10` unless overwritten upon index creation via index settings., +Rule of thumb is not to specify the number of shards unless needed, so that each test will use a different one all the time., +`assertAcked()`::           Ensure the a request has been acknowledged by the master, +`assertFailures()`::        Asserts that shard failures have happened during a search request, +++ b/src/test/java/org/elasticsearch/action/termvector/AbstractTermVectorTests.java, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +    protected void createIndexBasedOnFieldSettings(String index, TestFieldSetting[] fieldSettings) throws IOException {, +        mappingBuilder.endObject().endObject().endObject();, +                .put(indexSettings()), +        assertAcked(prepareCreate(index).addMapping("type1", mappingBuilder).setSettings(settings));, +++ b/src/test/java/org/elasticsearch/action/termvector/GetTermVectorCheckDocFreqTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.xcontent.ToXContent;, +import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;, +    @Override, +    protected int numberOfShards() {, +        return 1;, +    }, +    @Override, +    protected int numberOfReplicas() {, +        return 0;, +    }, +, +    @Override]