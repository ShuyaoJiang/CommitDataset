[+++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +        final Engine.IndexingOperation operation;, +            operation = indexShard.prepareIndex(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.PRIMARY, request.canHaveDuplicates() || indexRequest.canHaveDuplicates());, +            assert indexRequest.opType() == IndexRequest.OpType.CREATE : indexRequest.opType();, +            operation = indexShard.prepareCreate(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.PRIMARY,, +        }, +        Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +        final boolean created;, +                created = operation.execute(indexShard);, +                created = operation.execute(indexShard);, +            created = operation.execute(indexShard);, +, +        final long version = operation.version();, +        return new WriteResult(indexResponse, operation);, +                    final Engine.IndexingOperation operation;, +                        operation = indexShard.prepareIndex(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.REPLICA, request.canHaveDuplicates() || indexRequest.canHaveDuplicates());, +                        assert indexRequest.opType() == IndexRequest.OpType.CREATE : indexRequest.opType();, +                        operation = indexShard.prepareCreate(sourceToParse,, +                    }, +                    Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +                    operation.execute(indexShard);, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +        final Engine.IndexingOperation operation;, +            operation = indexShard.prepareIndex(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.PRIMARY, request.canHaveDuplicates() || indexRequest.canHaveDuplicates());, +            assert indexRequest.opType() == IndexRequest.OpType.CREATE : indexRequest.opType();, +            operation = indexShard.prepareCreate(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.PRIMARY,, +        }, +        Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +        final boolean created;, +                created = operation.execute(indexShard);, +                created = operation.execute(indexShard);, +            created = operation.execute(indexShard);, +, +        final long version = operation.version();, +        return new WriteResult(indexResponse, operation);, +                    final Engine.IndexingOperation operation;, +                        operation = indexShard.prepareIndex(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.REPLICA, request.canHaveDuplicates() || indexRequest.canHaveDuplicates());, +                        assert indexRequest.opType() == IndexRequest.OpType.CREATE : indexRequest.opType();, +                        operation = indexShard.prepareCreate(sourceToParse,, +                    }, +                    Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +                    operation.execute(indexShard);, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.action.index.IndexRequest.OpType;, +        final Engine.IndexingOperation operation;, +            operation = indexShard.prepareIndex(sourceToParse, request.version(), request.versionType(), Engine.Operation.Origin.PRIMARY, request.canHaveDuplicates());, +            operation = indexShard.prepareCreate(sourceToParse,, +        }, +, +        final boolean created;, +        Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +                created = operation.execute(indexShard);, +                created = operation.execute(indexShard);, +            created = operation.execute(indexShard);, +, +        final long version = operation.version();, +, +        final Engine.IndexingOperation operation;, +            operation = indexShard.prepareIndex(sourceToParse, request.version(), request.versionType(), Engine.Operation.Origin.REPLICA, request.canHaveDuplicates());, +            operation = indexShard.prepareCreate(sourceToParse, request.version(), request.versionType(), Engine.Operation.Origin.REPLICA, request.canHaveDuplicates(), request.autoGeneratedId());, +        }, +        Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +        operation.execute(indexShard);, +++ b/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +        final Engine.IndexingOperation operation;, +            operation = indexShard.prepareIndex(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.PRIMARY, request.canHaveDuplicates() || indexRequest.canHaveDuplicates());, +            assert indexRequest.opType() == IndexRequest.OpType.CREATE : indexRequest.opType();, +            operation = indexShard.prepareCreate(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.PRIMARY,, +        }, +        Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +        final boolean created;, +                created = operation.execute(indexShard);, +                created = operation.execute(indexShard);, +            created = operation.execute(indexShard);, +, +        final long version = operation.version();, +        return new WriteResult(indexResponse, operation);, +                    final Engine.IndexingOperation operation;, +                        operation = indexShard.prepareIndex(sourceToParse, indexRequest.version(), indexRequest.versionType(), Engine.Operation.Origin.REPLICA, request.canHaveDuplicates() || indexRequest.canHaveDuplicates());, +                        assert indexRequest.opType() == IndexRequest.OpType.CREATE : indexRequest.opType();, +                        operation = indexShard.prepareCreate(sourceToParse,, +                    }, +                    Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +                    operation.execute(indexShard);, +++ b/src/main/java/org/elasticsearch/action/index/TransportIndexAction.java, +import org.elasticsearch.action.index.IndexRequest.OpType;, +        final Engine.IndexingOperation operation;, +            operation = indexShard.prepareIndex(sourceToParse, request.version(), request.versionType(), Engine.Operation.Origin.PRIMARY, request.canHaveDuplicates());, +            operation = indexShard.prepareCreate(sourceToParse,, +        }, +, +        final boolean created;, +        Mapping update = operation.parsedDoc().dynamicMappingsUpdate();, +                created = operation.execute(indexShard);, +                created = operation.execute(indexShard);, +            created = operation.execute(indexShard);, +, +        final long version = operation.version();, +, +        final Engine.IndexingOperation operation;]