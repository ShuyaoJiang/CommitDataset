[+++ b/docs/build.gradle, +            {"grade": 100, "weight": 2}, +            {"grade": 50, "weight": 3}''', +++ b/docs/build.gradle, +            {"grade": 100, "weight": 2}, +            {"grade": 50, "weight": 3}''', +++ b/docs/reference/aggregations/metrics.asciidoc, +include::metrics/weighted-avg-aggregation.asciidoc[], +, +++ b/docs/build.gradle, +            {"grade": 100, "weight": 2}, +            {"grade": 50, "weight": 3}''', +++ b/docs/reference/aggregations/metrics.asciidoc, +include::metrics/weighted-avg-aggregation.asciidoc[], +, +++ b/docs/reference/aggregations/metrics/weighted-avg-aggregation.asciidoc, +[[search-aggregations-metrics-weight-avg-aggregation]], +=== Weighted Avg Aggregation, +, +A `single-value` metrics aggregation that computes the weighted average of numeric values that are extracted from the aggregated documents., +These values can be extracted either from specific numeric fields in the documents., +, +When calculating a regular average, each datapoint has an equal "weight" ... it contributes equally to the final value.  Weighted averages,, +on the other hand, weight each datapoint differently.  The amount that each datapoint contributes to the final value is extracted from the, +document, or provided by a script., +, +As a formula, a weighted average is the `∑(value * weight) / ∑(weight)`, +, +A regular average can be thought of as a weighted average where every value has an implicit weight of `1`., +, +.`weighted_avg` Parameters, +|===, +|Parameter Name |Description |Required |Default Value, +|`value` | The configuration for the field or script that provides the values |Required |, +|`weight` | The configuration for the field or script that provides the weights |Required |, +|`format` | The numeric response formatter |Optional |, +|`value_type` | A hint about the values for pure scripts or unmapped fields |Optional |, +|===, +, +The `value` and `weight` objects have per-field specific configuration:, +, +.`value` Parameters, +|===, +|Parameter Name |Description |Required |Default Value, +|`field` | The field that values should be extracted from |Required |, +|`missing` | A value to use if the field is missing entirely |Optional |, +|`script` | A script which provides the values for the document.  This is mutually exclusive with `field` |Optional, +|===, +, +.`weight` Parameters, +|===, +|Parameter Name |Description |Required |Default Value, +|`field` | The field that weights should be extracted from |Required |, +|`missing` | A weight to use if the field is missing entirely |Optional |, +|`script` | A script which provides the weights for the document.  This is mutually exclusive with `field` |Optional, +|===, +, +, +==== Examples, +, +If our documents have a `"grade"` field that holds a 0-100 numeric score, and a `"weight"` field which holds an arbitrary numeric weight,, +we can calculate the weighted average using:, +, +[source,js], +--------------------------------------------------, +POST /exams/_search, +{, +    "size": 0,, +    "aggs" : {, +        "weighted_grade": {, +            "weighted_avg": {, +                "value": {, +                    "field": "grade", +                },, +                "weight": {, +                    "field": "weight", +                }, +            }, +        }, +    }, +}, +--------------------------------------------------, +// CONSOLE, +// TEST[setup:exams], +, +Which yields a response like:, +, +[source,js], +--------------------------------------------------, +{, +    ..., +    "aggregations": {, +        "weighted_grade": {, +            "value": 70.0, +        }, +    }, +}, +--------------------------------------------------, +// TESTRESPONSE[s/\.\.\./"took": $body.took,"timed_out": false,"_shards": $body._shards,"hits": $body.hits,/], +]