[+++ b/modules/benchmark/micro/src/main/java/org/elasticsearch/benchmark/trove/StringMapAdjustOrPutBenchmark.java, +import org.elasticsearch.common.trove.StringIdentityHashingStrategy;, +import org.elasticsearch.common.trove.map.custom_hash.TObjectIntCustomHashMap;, +import org.elasticsearch.common.trove.map.hash.TIntIntHashMap;, +import org.elasticsearch.common.trove.strategy.IdentityHashingStrategy;, +import java.util.IdentityHashMap;, +        stopWatch.stop();, +        System.out.println("TObjectIntHashMap: " + stopWatch.totalTime() + ", " + stopWatch.totalTime().millisFrac() / ITERATIONS + "ms");, +, +        stopWatch = new StopWatch().start();, +        TObjectIntCustomHashMap<String> iMap = new TObjectIntCustomHashMap<String>(new StringIdentityHashingStrategy());, +        for (long iter = 0; iter < ITERATIONS; iter++) {, +            if (REUSE) {, +                iMap.clear();, +            } else {, +                map = new TObjectIntHashMap<String>();, +            }, +            for (long i = 0; i < PUT_OPERATIONS; i++) {, +                iMap = new TObjectIntCustomHashMap<String>(new StringIdentityHashingStrategy());, +            }, +        }, +        stopWatch.stop();, +        System.out.println("TObjectIntCustomHashMap(StringIdentity): " + stopWatch.totalTime() + ", " + stopWatch.totalTime().millisFrac() / ITERATIONS + "ms");, +        iMap.clear();, +        iMap = null;, +, +        stopWatch = new StopWatch().start();, +        iMap = new TObjectIntCustomHashMap<String>(new IdentityHashingStrategy<String>());, +        for (long iter = 0; iter < ITERATIONS; iter++) {, +            if (REUSE) {, +                iMap.clear();, +            } else {, +                map = new TObjectIntHashMap<String>();, +            }, +            for (long i = 0; i < PUT_OPERATIONS; i++) {, +                iMap = new TObjectIntCustomHashMap<String>(new IdentityHashingStrategy<String>());, +            }, +        }, +        stopWatch.stop();, +        System.out.println("TObjectIntCustomHashMap(PureIdentity): " + stopWatch.totalTime() + ", " + stopWatch.totalTime().millisFrac() / ITERATIONS + "ms");, +        iMap.clear();, +        iMap = null;, +        stopWatch.stop();, +        System.out.println("THashMap: " + stopWatch.totalTime() + ", " + stopWatch.totalTime().millisFrac() / ITERATIONS + "ms");, +, +        hMap.clear();, +        hMap = null;, +, +        stopWatch.stop();, +        System.out.println("HashMap: " + stopWatch.totalTime() + ", " + stopWatch.totalTime().millisFrac() / ITERATIONS + "ms");, +, +, +        stopWatch = new StopWatch().start();, +        IdentityHashMap<String, StringEntry> ihMap = new IdentityHashMap<String, StringEntry>();, +        for (long iter = 0; iter < ITERATIONS; iter++) {, +            if (REUSE) {, +                ihMap.clear();, +            } else {, +                hMap = new HashMap<String, StringEntry>();, +            }, +            for (long i = 0; i < PUT_OPERATIONS; i++) {, +                String key = values[(int) (i % NUMBER_OF_KEYS)];, +                StringEntry stringEntry = ihMap.get(key);, +                if (stringEntry == null) {, +                    stringEntry = new StringEntry(key, 1);, +                    ihMap.put(key, stringEntry);, +                } else {, +                    stringEntry.counter++;, +                }, +            }, +        }, +        stopWatch.stop();, +        System.out.println("IdentityHashMap: " + stopWatch.totalTime() + ", " + stopWatch.totalTime().millisFrac() / ITERATIONS + "ms");, +, +        ihMap.clear();, +        ihMap = null;, +, +        int[] iValues = new int[NUMBER_OF_KEYS];, +        for (int i = 0; i < values.length; i++) {, +            iValues[i] = i;, +        }, +, +        stopWatch = new StopWatch().start();, +        TIntIntHashMap intMap = new TIntIntHashMap();, +        for (long iter = 0; iter < ITERATIONS; iter++) {, +            if (REUSE) {, +                intMap.clear();, +            } else {, +                intMap = new TIntIntHashMap();, +            }, +            for (long i = 0; i < PUT_OPERATIONS; i++) {, +                int key = iValues[(int) (i % NUMBER_OF_KEYS)];, +                intMap.adjustOrPutValue(key, 1, 1);, +            }, +        }, +        stopWatch.stop();, +        System.out.println("TIntIntHashMap: " + stopWatch.totalTime() + ", " + stopWatch.totalTime().millisFrac() / ITERATIONS + "ms");, +, +        intMap.clear();, +        intMap = null;]