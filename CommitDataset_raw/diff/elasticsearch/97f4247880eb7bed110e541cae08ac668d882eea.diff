[+++ b/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class PreBuiltAnalyzerTests extends ElasticsearchSingleNodeTest {, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class PreBuiltAnalyzerTests extends ElasticsearchSingleNodeTest {, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/codec/CodecTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeLuceneTestCase;, +public class CodecTests extends ElasticsearchSingleNodeLuceneTestCase {, +        IndexService indexService = createIndex("test", settings);, +++ b/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class PreBuiltAnalyzerTests extends ElasticsearchSingleNodeTest {, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/codec/CodecTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeLuceneTestCase;, +public class CodecTests extends ElasticsearchSingleNodeLuceneTestCase {, +        IndexService indexService = createIndex("test", settings);, +++ b/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public abstract class AbstractFieldDataTests extends ElasticsearchSingleNodeTest {, +    protected IndexService indexService;, +    protected MapperService mapperService;, +        Settings settings = ImmutableSettings.builder().put("index.fielddata.cache", "none").build();, +        indexService = createIndex("test", settings);, +        mapperService = indexService.mapperService();, +        indicesFieldDataCache = indexService.injector().getInstance(IndicesFieldDataCache.class);, +        ifdService = indexService.fieldData();, +++ b/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class PreBuiltAnalyzerTests extends ElasticsearchSingleNodeTest {, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/codec/CodecTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeLuceneTestCase;, +public class CodecTests extends ElasticsearchSingleNodeLuceneTestCase {, +        IndexService indexService = createIndex("test", settings);, +++ b/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public abstract class AbstractFieldDataTests extends ElasticsearchSingleNodeTest {, +    protected IndexService indexService;, +    protected MapperService mapperService;, +        Settings settings = ImmutableSettings.builder().put("index.fielddata.cache", "none").build();, +        indexService = createIndex("test", settings);, +        mapperService = indexService.mapperService();, +        indicesFieldDataCache = indexService.injector().getInstance(IndicesFieldDataCache.class);, +        ifdService = indexService.fieldData();, +++ b/src/test/java/org/elasticsearch/index/fielddata/BinaryDVFieldDataTests.java, +        final DocumentMapper mapper = mapperService.documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class PreBuiltAnalyzerTests extends ElasticsearchSingleNodeTest {, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/codec/CodecTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeLuceneTestCase;, +public class CodecTests extends ElasticsearchSingleNodeLuceneTestCase {, +        IndexService indexService = createIndex("test", settings);, +++ b/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public abstract class AbstractFieldDataTests extends ElasticsearchSingleNodeTest {, +    protected IndexService indexService;, +    protected MapperService mapperService;, +        Settings settings = ImmutableSettings.builder().put("index.fielddata.cache", "none").build();, +        indexService = createIndex("test", settings);, +        mapperService = indexService.mapperService();, +        indicesFieldDataCache = indexService.injector().getInstance(IndicesFieldDataCache.class);, +        ifdService = indexService.fieldData();, +++ b/src/test/java/org/elasticsearch/index/fielddata/BinaryDVFieldDataTests.java, +        final DocumentMapper mapper = mapperService.documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java, +        final DocumentMapper mapper = mapperService.documentMapperParser().parse(mapping);, +        final DocumentMapper mapper = mapperService.documentMapperParser().parse(mapping);, +        final DocumentMapper mapper = mapperService.documentMapperParser().parse(mapping);, +        final DocumentMapper mapper = mapperService.documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public class PreBuiltAnalyzerTests extends ElasticsearchSingleNodeTest {, +        DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);, +++ b/src/test/java/org/elasticsearch/index/codec/CodecTests.java, +import org.elasticsearch.test.ElasticsearchSingleNodeLuceneTestCase;, +public class CodecTests extends ElasticsearchSingleNodeLuceneTestCase {, +        IndexService indexService = createIndex("test", settings);, +++ b/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.index.service.IndexService;, +import org.elasticsearch.test.ElasticsearchSingleNodeTest;, +public abstract class AbstractFieldDataTests extends ElasticsearchSingleNodeTest {, +    protected IndexService indexService;, +    protected MapperService mapperService;, +        Settings settings = ImmutableSettings.builder().put("index.fielddata.cache", "none").build();, +        indexService = createIndex("test", settings);, +        mapperService = indexService.mapperService();, +        indicesFieldDataCache = indexService.injector().getInstance(IndicesFieldDataCache.class);]