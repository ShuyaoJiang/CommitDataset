[+++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings, mapperService.documentMapperParser(),, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.index.IndexSettings;, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings, mapperService.documentMapperParser(),, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +        IndexMetaData build = IndexMetaData.builder(""), +            .settings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)), +            .numberOfShards(1).numberOfReplicas(0).build();, +        IndexSettings settings = new IndexSettings(build, Settings.EMPTY);, +        ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +import org.elasticsearch.action.ActionRequestBuilder;, +        protected <Request extends ActionRequest, Response extends ActionResponse,, +                RequestBuilder extends ActionRequestBuilder<Request, Response>> void doExecute(, +            Action<Response> action, Request request, ActionListener<Response> listener) {, +++ b/docs/reference/cat/thread_pool.asciidoc]