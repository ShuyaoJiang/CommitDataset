[+++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.search.Scorer;, +import org.elasticsearch.script.ScoreScript;, +import java.io.IOException;, +        } else if (context.instanceClazz.equals(ScoreScript.class)) {, +            ScoreScript.Factory factory = (p, lookup) -> newScoreScript(expr, lookup, p);, +            return context.factoryClazz.cast(factory);, +    private ScoreScript.LeafFactory newScoreScript(Expression expr, SearchLookup lookup, @Nullable Map<String, Object> vars) {, +        SearchScript.LeafFactory searchLeafFactory = newSearchScript(expr, lookup, vars);, +        return new ScoreScript.LeafFactory() {, +            @Override, +            public boolean needs_score() {, +                return searchLeafFactory.needs_score();, +            }, +, +            @Override, +            public ScoreScript newInstance(LeafReaderContext ctx) throws IOException {, +                SearchScript script = searchLeafFactory.newInstance(ctx);, +                return new ScoreScript(vars, lookup, ctx) {, +                    @Override, +                    public double execute() {, +                        return script.runAsDouble();, +                    }, +    , +                    @Override, +                    public void setDocument(int docid) {, +                        script.setDocument(docid);, +                    }, +    , +                    @Override, +                    public void setScorer(Scorer scorer) {, +                        script.setScorer(scorer);, +                    }, +    , +                    @Override, +                    public double get_score() {, +                        return script.getScore();, +                    }, +                };, +            }, +        };, +    }, +, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.search.Scorer;, +import org.elasticsearch.script.ScoreScript;, +import java.io.IOException;, +        } else if (context.instanceClazz.equals(ScoreScript.class)) {, +            ScoreScript.Factory factory = (p, lookup) -> newScoreScript(expr, lookup, p);, +            return context.factoryClazz.cast(factory);, +    private ScoreScript.LeafFactory newScoreScript(Expression expr, SearchLookup lookup, @Nullable Map<String, Object> vars) {, +        SearchScript.LeafFactory searchLeafFactory = newSearchScript(expr, lookup, vars);, +        return new ScoreScript.LeafFactory() {, +            @Override, +            public boolean needs_score() {, +                return searchLeafFactory.needs_score();, +            }, +, +            @Override, +            public ScoreScript newInstance(LeafReaderContext ctx) throws IOException {, +                SearchScript script = searchLeafFactory.newInstance(ctx);, +                return new ScoreScript(vars, lookup, ctx) {, +                    @Override, +                    public double execute() {, +                        return script.runAsDouble();, +                    }, +    , +                    @Override, +                    public void setDocument(int docid) {, +                        script.setDocument(docid);, +                    }, +    , +                    @Override, +                    public void setScorer(Scorer scorer) {, +                        script.setScorer(scorer);, +                    }, +    , +                    @Override, +                    public double get_score() {, +                        return script.getScore();, +                    }, +                };, +            }, +        };, +    }, +, +++ b/plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java, +import org.elasticsearch.script.ScoreScript;, +            if (context.equals(ScoreScript.CONTEXT) == false) {, +                ScoreScript.Factory factory = (p, lookup) -> new ScoreScript.LeafFactory() {, +                    public ScoreScript newInstance(LeafReaderContext context) throws IOException {, +                            return new ScoreScript(p, lookup, context) {, +                                public double execute() {, +                        return new ScoreScript(p, lookup, context) {, +                            public double execute() {, +++ b/modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.search.Scorer;]