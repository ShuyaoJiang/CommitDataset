[+++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +            // TODO this should only be allowed in tests, +        // TODO missing node names should only be allowed in tests, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +            // TODO this should only be allowed in tests, +        // TODO missing node names should only be allowed in tests, +++ b/server/src/main/java/org/elasticsearch/indices/IndicesService.java, +        ExecutorService indicesStopExecutor = Executors.newFixedThreadPool(5, EsExecutors.daemonThreadFactory(settings, "indices_shutdown"));, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +            // TODO this should only be allowed in tests, +        // TODO missing node names should only be allowed in tests, +++ b/server/src/main/java/org/elasticsearch/indices/IndicesService.java, +        ExecutorService indicesStopExecutor = Executors.newFixedThreadPool(5, EsExecutors.daemonThreadFactory(settings, "indices_shutdown"));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +        this.scheduler = new SchedulerEngine(settings, clock);, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +            // TODO this should only be allowed in tests, +        // TODO missing node names should only be allowed in tests, +++ b/server/src/main/java/org/elasticsearch/indices/IndicesService.java, +        ExecutorService indicesStopExecutor = Executors.newFixedThreadPool(5, EsExecutors.daemonThreadFactory(settings, "indices_shutdown"));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +        this.scheduler = new SchedulerEngine(settings, clock);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/scheduler/SchedulerEngine.java, +import org.elasticsearch.common.settings.Settings;, +    public SchedulerEngine(Settings settings, Clock clock) {, +        this.scheduler = Executors.newScheduledThreadPool(1, EsExecutors.daemonThreadFactory(settings, "trigger_engine_scheduler"));, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +            // TODO this should only be allowed in tests, +        // TODO missing node names should only be allowed in tests, +++ b/server/src/main/java/org/elasticsearch/indices/IndicesService.java, +        ExecutorService indicesStopExecutor = Executors.newFixedThreadPool(5, EsExecutors.daemonThreadFactory(settings, "indices_shutdown"));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +        this.scheduler = new SchedulerEngine(settings, clock);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/scheduler/SchedulerEngine.java, +import org.elasticsearch.common.settings.Settings;, +    public SchedulerEngine(Settings settings, Clock clock) {, +        this.scheduler = Executors.newScheduledThreadPool(1, EsExecutors.daemonThreadFactory(settings, "trigger_engine_scheduler"));, +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/Rollup.java, +        SchedulerEngine schedulerEngine = new SchedulerEngine(settings, getClock());, +++ b/server/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +            // TODO this should only be allowed in tests, +        // TODO missing node names should only be allowed in tests, +++ b/server/src/main/java/org/elasticsearch/indices/IndicesService.java, +        ExecutorService indicesStopExecutor = Executors.newFixedThreadPool(5, EsExecutors.daemonThreadFactory(settings, "indices_shutdown"));, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java, +        this.scheduler = new SchedulerEngine(settings, clock);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/scheduler/SchedulerEngine.java, +import org.elasticsearch.common.settings.Settings;, +    public SchedulerEngine(Settings settings, Clock clock) {, +        this.scheduler = Executors.newScheduledThreadPool(1, EsExecutors.daemonThreadFactory(settings, "trigger_engine_scheduler"));, +++ b/x-pack/plugin/rollup/src/main/java/org/elasticsearch/xpack/rollup/Rollup.java, +        SchedulerEngine schedulerEngine = new SchedulerEngine(settings, getClock());, +++ b/x-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/job/RollupJobTaskTests.java, +import org.elasticsearch.node.Node;, +    private static final Settings SETTINGS = Settings.builder(), +            .put(Node.NODE_NAME_SETTING.getKey(), "test"), +            .build();, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());, +        SchedulerEngine schedulerEngine = new SchedulerEngine(SETTINGS, Clock.systemUTC());]