[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/exporter/MonitoringTemplateUtils.java, +     * The previous version of templates, which we still support via the REST /_monitoring/bulk endpoint because, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/exporter/MonitoringTemplateUtils.java, +     * The previous version of templates, which we still support via the REST /_monitoring/bulk endpoint because, +++ /dev/null, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/exporter/MonitoringTemplateUtils.java, +     * The previous version of templates, which we still support via the REST /_monitoring/bulk endpoint because, +++ /dev/null, +++ b/x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/rest/action/RestMonitoringBulkAction.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.xpack.core.rest.XPackRestHandler;, +public class RestMonitoringBulkAction extends XPackRestHandler {, +    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestMonitoringBulkAction.class));, +        // TODO: remove deprecated endpoint in 8.0.0, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/bulk", this,, +            POST, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/bulk", this,, +            PUT, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/{type}/bulk", this,, +            POST, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/{type}/bulk", this,, +            PUT, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        return "monitoring_bulk";, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/exporter/MonitoringTemplateUtils.java, +     * The previous version of templates, which we still support via the REST /_monitoring/bulk endpoint because, +++ /dev/null, +++ b/x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/rest/action/RestMonitoringBulkAction.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.xpack.core.rest.XPackRestHandler;, +public class RestMonitoringBulkAction extends XPackRestHandler {, +    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestMonitoringBulkAction.class));, +        // TODO: remove deprecated endpoint in 8.0.0, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/bulk", this,, +            POST, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/bulk", this,, +            PUT, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/{type}/bulk", this,, +            POST, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/{type}/bulk", this,, +            PUT, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        return "monitoring_bulk";, +++ b/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/cleaner/AbstractIndicesCleanerTestCase.java, +        // pushed to it will never be "unknown" in terms of their version, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/exporter/MonitoringTemplateUtils.java, +     * The previous version of templates, which we still support via the REST /_monitoring/bulk endpoint because, +++ /dev/null, +++ b/x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/rest/action/RestMonitoringBulkAction.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.xpack.core.rest.XPackRestHandler;, +public class RestMonitoringBulkAction extends XPackRestHandler {, +    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestMonitoringBulkAction.class));, +        // TODO: remove deprecated endpoint in 8.0.0, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/bulk", this,, +            POST, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/bulk", this,, +            PUT, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/{type}/bulk", this,, +            POST, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/{type}/bulk", this,, +            PUT, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        return "monitoring_bulk";, +++ b/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/cleaner/AbstractIndicesCleanerTestCase.java, +        // pushed to it will never be "unknown" in terms of their version, +++ b/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/local/LocalExporterIntegTests.java, +            // start the monitoring service so that /_monitoring/bulk is not ignored, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/exporter/MonitoringTemplateUtils.java, +     * The previous version of templates, which we still support via the REST /_monitoring/bulk endpoint because, +++ /dev/null, +++ b/x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/rest/action/RestMonitoringBulkAction.java, +import org.apache.logging.log4j.LogManager;, +import org.elasticsearch.common.logging.DeprecationLogger;, +import org.elasticsearch.xpack.core.rest.XPackRestHandler;, +public class RestMonitoringBulkAction extends XPackRestHandler {, +    private static final DeprecationLogger deprecationLogger = new DeprecationLogger(LogManager.getLogger(RestMonitoringBulkAction.class));, +        // TODO: remove deprecated endpoint in 8.0.0, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/bulk", this,, +            POST, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/bulk", this,, +            PUT, "/_xpack/monitoring/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(POST, "/_monitoring/{type}/bulk", this,, +            POST, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        controller.registerWithDeprecatedHandler(PUT, "/_monitoring/{type}/bulk", this,, +            PUT, "/_xpack/monitoring/{type}/_bulk", deprecationLogger);, +        return "monitoring_bulk";, +++ b/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/cleaner/AbstractIndicesCleanerTestCase.java, +        // pushed to it will never be "unknown" in terms of their version, +++ b/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/local/LocalExporterIntegTests.java, +            // start the monitoring service so that /_monitoring/bulk is not ignored, +++ b/x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/integration/MonitoringIT.java, +     * Monitoring Bulk test:, +     * This test uses the Monitoring Bulk Request to index documents. It then ensure that the documents were correctly, +     * indexed and have the expected information. REST API tests (like how this is really called) are handled as part of the, +     * XPackRest tests., +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/monitoring/exporter/MonitoringTemplateUtils.java, +     * The previous version of templates, which we still support via the REST /_monitoring/bulk endpoint because, +++ /dev/null, +++ b/x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/rest/action/RestMonitoringBulkAction.java]