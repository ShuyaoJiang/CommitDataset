[+++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +                put(keyFunction.apply(key), esSetting.getValue());, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +                put(keyFunction.apply(key), esSetting.getValue());, +++ b/core/src/main/java/org/elasticsearch/snapshots/RestoreService.java, +import java.util.function.Predicate;, +                    Settings settings = indexMetaData.getSettings();, +                    Set<String> keyFilters = new HashSet<>();, +                                keyFilters.add(ignoredSetting);, +                    Predicate<String> settingsFilter = k -> {, +                        if (UNREMOVABLE_SETTINGS.contains(k) == false) {, +                            for (String filterKey : keyFilters) {, +                                if (k.equals(filterKey)) {, +                                    return false;, +                                }, +                            }, +                            for (String pattern : simpleMatchPatterns) {, +                                if (Regex.simpleMatch(pattern, k)) {, +                                    return false;, +                        return true;, +                    };, +                    Settings.Builder settingsBuilder = Settings.builder(), +                        .put(settings.filter(settingsFilter)), +                        .put(normalizedChangeSettings.filter(k -> {, +                            if (UNMODIFIABLE_SETTINGS.contains(k)) {, +                                throw new SnapshotRestoreException(snapshot, "cannot modify setting [" + k + "] on restore");, +                                return true;, +                        }));, +                    return builder.settings(settingsBuilder).build();, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +                put(keyFunction.apply(key), esSetting.getValue());, +++ b/core/src/main/java/org/elasticsearch/snapshots/RestoreService.java, +import java.util.function.Predicate;, +                    Settings settings = indexMetaData.getSettings();, +                    Set<String> keyFilters = new HashSet<>();, +                                keyFilters.add(ignoredSetting);, +                    Predicate<String> settingsFilter = k -> {, +                        if (UNREMOVABLE_SETTINGS.contains(k) == false) {, +                            for (String filterKey : keyFilters) {, +                                if (k.equals(filterKey)) {, +                                    return false;, +                                }, +                            }, +                            for (String pattern : simpleMatchPatterns) {, +                                if (Regex.simpleMatch(pattern, k)) {, +                                    return false;, +                        return true;, +                    };, +                    Settings.Builder settingsBuilder = Settings.builder(), +                        .put(settings.filter(settingsFilter)), +                        .put(normalizedChangeSettings.filter(k -> {, +                            if (UNMODIFIABLE_SETTINGS.contains(k)) {, +                                throw new SnapshotRestoreException(snapshot, "cannot modify setting [" + k + "] on restore");, +                                return true;, +                        }));, +                    return builder.settings(settingsBuilder).build();, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/ListPluginsCommandTests.java, +                Settings.Builder builder = Settings.builder().put("path.home", home);, +                settings.forEach((k,v) -> builder.put(k, v));, +                final Settings realSettings = builder.build();, +++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java, +                put(keyFunction.apply(key), esSetting.getValue());, +++ b/core/src/main/java/org/elasticsearch/snapshots/RestoreService.java, +import java.util.function.Predicate;, +                    Settings settings = indexMetaData.getSettings();, +                    Set<String> keyFilters = new HashSet<>();, +                                keyFilters.add(ignoredSetting);, +                    Predicate<String> settingsFilter = k -> {, +                        if (UNREMOVABLE_SETTINGS.contains(k) == false) {, +                            for (String filterKey : keyFilters) {, +                                if (k.equals(filterKey)) {, +                                    return false;, +                                }, +                            }, +                            for (String pattern : simpleMatchPatterns) {, +                                if (Regex.simpleMatch(pattern, k)) {, +                                    return false;, +                        return true;, +                    };, +                    Settings.Builder settingsBuilder = Settings.builder(), +                        .put(settings.filter(settingsFilter)), +                        .put(normalizedChangeSettings.filter(k -> {, +                            if (UNMODIFIABLE_SETTINGS.contains(k)) {, +                                throw new SnapshotRestoreException(snapshot, "cannot modify setting [" + k + "] on restore");, +                                return true;, +                        }));, +                    return builder.settings(settingsBuilder).build();, +++ b/distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/ListPluginsCommandTests.java, +                Settings.Builder builder = Settings.builder().put("path.home", home);, +                settings.forEach((k,v) -> builder.put(k, v));, +                final Settings realSettings = builder.build();, +++ b/test/framework/src/main/java/org/elasticsearch/bootstrap/ESElasticsearchCliTestCase.java, +                    Settings.Builder builder = Settings.builder().put("path.home", home);, +                    settings.forEach((k,v) -> builder.put(k, v));, +                    final Settings realSettings = builder.build();]