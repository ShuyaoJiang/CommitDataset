[+++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/GeoDistanceComparator.java, +            int counter = 1;, +                    case AVG:, +                        distance += newDistance;, +                        counter++;, +                        break;, +, +            if (sortMode == SortMode.AVG && counter > 1) {, +                return distance / counter;, +            } else {, +        }, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/GeoDistanceComparator.java, +            int counter = 1;, +                    case AVG:, +                        distance += newDistance;, +                        counter++;, +                        break;, +, +            if (sortMode == SortMode.AVG && counter > 1) {, +                return distance / counter;, +            } else {, +        }, +++ b/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortParser.java, +        if (sortMode == SortMode.SUM) {, +            throw new ElasticSearchIllegalArgumentException("sort_mode [sum] isn't supported for sorting by geo distance");, +        }, +, +++ b/src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/GeoDistanceComparator.java, +            int counter = 1;, +                    case AVG:, +                        distance += newDistance;, +                        counter++;, +                        break;, +, +            if (sortMode == SortMode.AVG && counter > 1) {, +                return distance / counter;, +            } else {, +        }, +++ b/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortParser.java, +        if (sortMode == SortMode.SUM) {, +            throw new ElasticSearchIllegalArgumentException("sort_mode [sum] isn't supported for sorting by geo distance");, +        }, +, +++ b/src/test/java/org/elasticsearch/test/integration/search/geo/GeoDistanceTests.java, +import org.elasticsearch.action.search.SearchPhaseExecutionException;, +import org.elasticsearch.rest.RestStatus;, +import static org.testng.AssertJUnit.fail;, +, +        searchResponse = client.prepareSearch("test").setQuery(matchAllQuery()), +                .addSort(SortBuilders.geoDistanceSort("locations").point(40.7143528, -74.0059731).sortMode("avg").order(SortOrder.ASC)), +                .execute().actionGet();, +, +        assertThat(searchResponse.getHits().getTotalHits(), equalTo(4l));, +        assertThat(searchResponse.getHits().hits().length, equalTo(4));, +        assertThat(searchResponse.getHits().getAt(0).id(), equalTo("1"));, +        assertThat(((Number) searchResponse.getHits().getAt(0).sortValues()[0]).doubleValue(), equalTo(0d));, +        assertThat(searchResponse.getHits().getAt(1).id(), equalTo("3"));, +        assertThat(((Number) searchResponse.getHits().getAt(1).sortValues()[0]).doubleValue(), closeTo(1.157d, 0.01d));, +        assertThat(searchResponse.getHits().getAt(2).id(), equalTo("2"));, +        assertThat(((Number) searchResponse.getHits().getAt(2).sortValues()[0]).doubleValue(), closeTo(2.874d, 0.01d));, +        assertThat(searchResponse.getHits().getAt(3).id(), equalTo("4"));, +        assertThat(((Number) searchResponse.getHits().getAt(3).sortValues()[0]).doubleValue(), closeTo(5.301d, 0.01d));, +, +        searchResponse = client.prepareSearch("test").setQuery(matchAllQuery()), +                .addSort(SortBuilders.geoDistanceSort("locations").point(40.7143528, -74.0059731).sortMode("avg").order(SortOrder.DESC)), +                .execute().actionGet();, +, +        assertThat(searchResponse.getHits().getTotalHits(), equalTo(4l));, +        assertThat(searchResponse.getHits().hits().length, equalTo(4));, +        assertThat(searchResponse.getHits().getAt(0).id(), equalTo("4"));, +        assertThat(((Number) searchResponse.getHits().getAt(0).sortValues()[0]).doubleValue(), closeTo(5.301d, 0.01d));, +        assertThat(searchResponse.getHits().getAt(1).id(), equalTo("2"));, +        assertThat(((Number) searchResponse.getHits().getAt(1).sortValues()[0]).doubleValue(), closeTo(2.874d, 0.01d));, +        assertThat(searchResponse.getHits().getAt(2).id(), equalTo("3"));, +        assertThat(((Number) searchResponse.getHits().getAt(2).sortValues()[0]).doubleValue(), closeTo(1.157d, 0.01d));, +        assertThat(searchResponse.getHits().getAt(3).id(), equalTo("1"));, +        assertThat(((Number) searchResponse.getHits().getAt(3).sortValues()[0]).doubleValue(), equalTo(0d));, +, +        try {, +            client.prepareSearch("test").setQuery(matchAllQuery()), +                    .addSort(SortBuilders.geoDistanceSort("locations").point(40.7143528, -74.0059731).sortMode("sum")), +                    .execute().actionGet();, +            fail("Expected error");, +        } catch (SearchPhaseExecutionException e) {, +            assertThat(e.shardFailures()[0].status(), equalTo(RestStatus.BAD_REQUEST));, +        }]