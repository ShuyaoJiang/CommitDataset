[+++ b/.ci/java-versions.properties, +++ b/.ci/java-versions.properties, +++ b/TESTING.asciidoc, +== Backwards Compatibility Tests, +, +Running backwards compatibility tests is disabled by default since it, +requires a release version of elasticsearch to be present on the test system., +To run backwards compatibility tests untar or unzip a release and run the tests, +with the following command:, +, +---------------------------------------------------------------------------, +./gradlew test -Dtests.filter="@backwards" -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch -Dtests.security.manager=false, +---------------------------------------------------------------------------, +, +Note that backwards tests must be run with security manager disabled., +If the elasticsearch release is placed under `./backwards/elasticsearch-x.y.z` the path, +can be omitted:, +, +---------------------------------------------------------------------------, +./gradlew test -Dtests.filter="@backwards" -Dtests.bwc.version=x.y.z -Dtests.security.manager=false, +---------------------------------------------------------------------------, +, +To setup the bwc test environment execute the following steps (provided you are, +already in your elasticsearch clone):, +, +---------------------------------------------------------------------------, +$ mkdir backwards && cd backwards, +$ curl -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.2.1.tar.gz, +$ tar -xzf elasticsearch-1.2.1.tar.gz, +---------------------------------------------------------------------------, +, +to the current version. To run all backcompat tests use:, +A specific version can be tested as well. For example, to test backcompat with, +When running `./gradlew check`, some minimal backcompat checks are run. Which version, +is tested depends on the branch. On master, this will test against the current, +stable branch. On the stable branch, it will test against the latest release, +branch. Finally, on a release branch, it will test against the most recent release., +=== BWC Testing against a specific remote/branch, +== Skip fetching latest, +++ b/.ci/java-versions.properties, +++ b/TESTING.asciidoc, +== Backwards Compatibility Tests, +, +Running backwards compatibility tests is disabled by default since it, +requires a release version of elasticsearch to be present on the test system., +To run backwards compatibility tests untar or unzip a release and run the tests, +with the following command:, +, +---------------------------------------------------------------------------, +./gradlew test -Dtests.filter="@backwards" -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch -Dtests.security.manager=false, +---------------------------------------------------------------------------, +, +Note that backwards tests must be run with security manager disabled., +If the elasticsearch release is placed under `./backwards/elasticsearch-x.y.z` the path, +can be omitted:, +, +---------------------------------------------------------------------------, +./gradlew test -Dtests.filter="@backwards" -Dtests.bwc.version=x.y.z -Dtests.security.manager=false, +---------------------------------------------------------------------------, +, +To setup the bwc test environment execute the following steps (provided you are, +already in your elasticsearch clone):, +, +---------------------------------------------------------------------------, +$ mkdir backwards && cd backwards, +$ curl -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.2.1.tar.gz, +$ tar -xzf elasticsearch-1.2.1.tar.gz, +---------------------------------------------------------------------------, +, +to the current version. To run all backcompat tests use:, +A specific version can be tested as well. For example, to test backcompat with, +When running `./gradlew check`, some minimal backcompat checks are run. Which version, +is tested depends on the branch. On master, this will test against the current, +stable branch. On the stable branch, it will test against the latest release, +branch. Finally, on a release branch, it will test against the most recent release., +=== BWC Testing against a specific remote/branch, +== Skip fetching latest, +++ b/benchmarks/src/main/java/org/elasticsearch/benchmark/routing/allocation/Allocators.java, +        protected NoopGatewayAllocator() {, +            super(Settings.EMPTY);, +        }, +, +        return new AllocationService(settings,, +        return new AllocationDeciders(settings, deciders);, +++ b/.ci/java-versions.properties, +++ b/TESTING.asciidoc, +== Backwards Compatibility Tests, +, +Running backwards compatibility tests is disabled by default since it, +requires a release version of elasticsearch to be present on the test system., +To run backwards compatibility tests untar or unzip a release and run the tests, +with the following command:, +, +---------------------------------------------------------------------------, +./gradlew test -Dtests.filter="@backwards" -Dtests.bwc.version=x.y.z -Dtests.bwc.path=/path/to/elasticsearch -Dtests.security.manager=false, +---------------------------------------------------------------------------, +, +Note that backwards tests must be run with security manager disabled., +If the elasticsearch release is placed under `./backwards/elasticsearch-x.y.z` the path, +can be omitted:]