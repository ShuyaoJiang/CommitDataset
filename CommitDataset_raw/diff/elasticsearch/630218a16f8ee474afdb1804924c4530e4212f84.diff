[+++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.NoSuchFileException;, +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob can not be read., +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob exists but could not be deleted., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.NoSuchFileException;, +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob can not be read., +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob exists but could not be deleted., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.NoSuchFileException;, +        final Path resolvedPath = path.resolve(name);, +        if (!Files.exists(resolvedPath)) {, +            throw new NoSuchFileException("[" + resolvedPath + "] file not found");, +        }, +        return new BufferedInputStream(Files.newInputStream(resolvedPath), blobStore.bufferSizeInBytes());, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.NoSuchFileException;, +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob can not be read., +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob exists but could not be deleted., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.NoSuchFileException;, +        final Path resolvedPath = path.resolve(name);, +        if (!Files.exists(resolvedPath)) {, +            throw new NoSuchFileException("[" + resolvedPath + "] file not found");, +        }, +        return new BufferedInputStream(Files.newInputStream(resolvedPath), blobStore.bufferSizeInBytes());, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +import java.nio.file.NoSuchFileException;, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +                throw new NoSuchFileException(e.getMessage());, +                throw new NoSuchFileException(e.getMessage());, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.NoSuchFileException;, +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob can not be read., +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob exists but could not be deleted., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.NoSuchFileException;, +        final Path resolvedPath = path.resolve(name);, +        if (!Files.exists(resolvedPath)) {, +            throw new NoSuchFileException("[" + resolvedPath + "] file not found");, +        }, +        return new BufferedInputStream(Files.newInputStream(resolvedPath), blobStore.bufferSizeInBytes());, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +import java.nio.file.NoSuchFileException;, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +                throw new NoSuchFileException(e.getMessage());, +                throw new NoSuchFileException(e.getMessage());, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/common/blobstore/gcs/GoogleCloudStorageBlobStore.java, +import java.nio.file.NoSuchFileException;, +        if (!blobExists(blobName)) {, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +        }, +                    throw new NoSuchFileException(e.getMessage());, +        if (!blobExists(blobName)) {, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.NoSuchFileException;, +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob can not be read., +     * @throws  NoSuchFileException if the blob does not exist, +     * @throws  IOException if the blob exists but could not be deleted., +++ b/core/src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java, +import java.nio.file.NoSuchFileException;, +        final Path resolvedPath = path.resolve(name);, +        if (!Files.exists(resolvedPath)) {, +            throw new NoSuchFileException("[" + resolvedPath + "] file not found");, +        }, +        return new BufferedInputStream(Files.newInputStream(resolvedPath), blobStore.bufferSizeInBytes());, +++ b/plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +import java.nio.file.NoSuchFileException;, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +                throw new NoSuchFileException(e.getMessage());, +                throw new NoSuchFileException(e.getMessage());, +++ b/plugins/repository-gcs/src/main/java/org/elasticsearch/common/blobstore/gcs/GoogleCloudStorageBlobStore.java, +import java.nio.file.NoSuchFileException;, +        if (!blobExists(blobName)) {, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +        }, +                    throw new NoSuchFileException(e.getMessage());, +        if (!blobExists(blobName)) {, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +        }, +++ b/plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsBlobContainer.java, +import java.nio.file.NoSuchFileException;, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +        if (!blobExists(blobName)) {, +            throw new NoSuchFileException("Blob [" + blobName + "] does not exist");, +        }, +++ b/core/src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java, +import java.nio.file.NoSuchFileException;, +     * @throws  NoSuchFileException if the blob does not exist]