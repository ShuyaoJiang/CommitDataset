[+++ b/distribution/bwc/build.gradle, +++ b/distribution/bwc/build.gradle, +++ b/x-pack/qa/openldap-tests/src/test/java/org/elasticsearch/test/OpenLdapTests.java, +    public static final String OPEN_LDAP_DNS_URL = "ldaps://localhost:" + getFromProperty("636");, +    public static final String OPEN_LDAP_IP_URL = "ldaps://127.0.0.1:" + getFromProperty("636");, +, +    private static String getFromProperty(String port) {, +        String key = "test.fixtures.openldap.tcp." + port;, +        final String value = System.getProperty(key);, +        assertNotNull("Expected the actual value for port " + port + " to be in system property " + key, value);, +        return value;, +    }, +++ b/distribution/bwc/build.gradle, +++ b/x-pack/qa/openldap-tests/src/test/java/org/elasticsearch/test/OpenLdapTests.java, +    public static final String OPEN_LDAP_DNS_URL = "ldaps://localhost:" + getFromProperty("636");, +    public static final String OPEN_LDAP_IP_URL = "ldaps://127.0.0.1:" + getFromProperty("636");, +, +    private static String getFromProperty(String port) {, +        String key = "test.fixtures.openldap.tcp." + port;, +        final String value = System.getProperty(key);, +        assertNotNull("Expected the actual value for port " + port + " to be in system property " + key, value);, +        return value;, +    }, +++ b/x-pack/qa/saml-idp-tests/build.gradle, +task copyIdpFiles(type: Copy) {, +    from idpFixtureProject.files('idp/shibboleth-idp/credentials/idp-browser.pem', 'idp/shibboleth-idp/metadata/idp-metadata.xml');, +project.sourceSets.test.output.dir(outputDir, builtBy: copyIdpFiles), +, +task setupPorts {, +    dependsOn copyIdpFiles, idpFixtureProject.postProcessFixture, +    doLast {, +        String portString = idpFixtureProject.postProcessFixture.ext."test.fixtures.shibboleth-idp.tcp.4443", +        int ephemeralPort = Integer.valueOf(portString), +        File idpMetaFile = file(outputDir + '/idp-metadata.xml'), +        List<String> lines = idpMetaFile.readLines("UTF-8"), +        StringBuilder content = new StringBuilder(), +        for (String line : lines) {, +            content.append(line.replace("localhost:4443", "localhost:" + ephemeralPort)), +        }, +        idpMetaFile.delete(), +        idpMetaFile.createNewFile(), +        idpMetaFile.write(content.toString(), "UTF-8"), +    }, +}, +integTestCluster.dependsOn setupPorts, +  setting 'logger.org.elasticsearch.xpack.security', 'TRACE', +  extraConfigFile 'idp-metadata.xml', file(outputDir + "/idp-metadata.xml"), +++ b/distribution/bwc/build.gradle, +++ b/x-pack/qa/openldap-tests/src/test/java/org/elasticsearch/test/OpenLdapTests.java, +    public static final String OPEN_LDAP_DNS_URL = "ldaps://localhost:" + getFromProperty("636");, +    public static final String OPEN_LDAP_IP_URL = "ldaps://127.0.0.1:" + getFromProperty("636");, +, +    private static String getFromProperty(String port) {, +        String key = "test.fixtures.openldap.tcp." + port;, +        final String value = System.getProperty(key);, +        assertNotNull("Expected the actual value for port " + port + " to be in system property " + key, value);, +        return value;, +    }, +++ b/x-pack/qa/saml-idp-tests/build.gradle, +task copyIdpFiles(type: Copy) {, +    from idpFixtureProject.files('idp/shibboleth-idp/credentials/idp-browser.pem', 'idp/shibboleth-idp/metadata/idp-metadata.xml');, +project.sourceSets.test.output.dir(outputDir, builtBy: copyIdpFiles), +, +task setupPorts {, +    dependsOn copyIdpFiles, idpFixtureProject.postProcessFixture, +    doLast {, +        String portString = idpFixtureProject.postProcessFixture.ext."test.fixtures.shibboleth-idp.tcp.4443", +        int ephemeralPort = Integer.valueOf(portString), +        File idpMetaFile = file(outputDir + '/idp-metadata.xml'), +        List<String> lines = idpMetaFile.readLines("UTF-8"), +        StringBuilder content = new StringBuilder(), +        for (String line : lines) {, +            content.append(line.replace("localhost:4443", "localhost:" + ephemeralPort)), +        }, +        idpMetaFile.delete(), +        idpMetaFile.createNewFile(), +        idpMetaFile.write(content.toString(), "UTF-8"), +    }, +}, +integTestCluster.dependsOn setupPorts, +  setting 'logger.org.elasticsearch.xpack.security', 'TRACE', +  extraConfigFile 'idp-metadata.xml', file(outputDir + "/idp-metadata.xml"), +++ b/x-pack/qa/saml-idp-tests/src/test/java/org/elasticsearch/xpack/security/authc/saml/SamlAuthenticationIT.java, +++ b/distribution/bwc/build.gradle, +++ b/x-pack/qa/openldap-tests/src/test/java/org/elasticsearch/test/OpenLdapTests.java, +    public static final String OPEN_LDAP_DNS_URL = "ldaps://localhost:" + getFromProperty("636");, +    public static final String OPEN_LDAP_IP_URL = "ldaps://127.0.0.1:" + getFromProperty("636");, +, +    private static String getFromProperty(String port) {, +        String key = "test.fixtures.openldap.tcp." + port;, +        final String value = System.getProperty(key);, +        assertNotNull("Expected the actual value for port " + port + " to be in system property " + key, value);, +        return value;, +    }, +++ b/x-pack/qa/saml-idp-tests/build.gradle, +task copyIdpFiles(type: Copy) {, +    from idpFixtureProject.files('idp/shibboleth-idp/credentials/idp-browser.pem', 'idp/shibboleth-idp/metadata/idp-metadata.xml');, +project.sourceSets.test.output.dir(outputDir, builtBy: copyIdpFiles), +, +task setupPorts {]