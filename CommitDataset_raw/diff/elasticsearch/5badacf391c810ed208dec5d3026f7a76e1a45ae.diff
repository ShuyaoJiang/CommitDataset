[+++ b/server/src/test/java/org/elasticsearch/common/util/concurrent/SizeBlockingQueueTests.java, +import java.util.concurrent.BrokenBarrierException;, +import java.util.concurrent.CyclicBarrier;, +        final int iterations = 1 << 16;, +        final CyclicBarrier barrier = new CyclicBarrier(2);, +            for (int i = 0; i < iterations; i++) {, +                    // synchronize each iteration of checking the size with each iteration of offering, each iteration is a race, +                    barrier.await();, +                } catch (final BrokenBarrierException | InterruptedException e) {, +        // this thread will repeatedly poll the size of the queue keeping track of the maximum size that it sees, +        final AtomicInteger maxSize = new AtomicInteger();, +        final Thread queueSizeThread = new Thread(() -> {, +            for (int i = 0; i < iterations; i++) {, +                try {, +                    // synchronize each iteration of checking the size with each iteration of offering, each iteration is a race, +                    barrier.await();, +                } catch (final BrokenBarrierException | InterruptedException e) {, +                    throw new RuntimeException(e);, +                }, +                maxSize.set(Math.max(maxSize.get(), sizeBlockingQueue.size()));, +            }, +        });, +        queueSizeThread.start();, +        // wait for the threads to finish]