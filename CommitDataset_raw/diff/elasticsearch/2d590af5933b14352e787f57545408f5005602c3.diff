[+++ b/core/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +     * @deprecated use {@link GeoUtils#planeDistance}, +    @Deprecated, +     * Note: {@code calculate} is simply returning the RHS of the spherical law of cosines from 2 lat,lon points., +     * {@code normalize} also returns the RHS of the spherical law of cosines for a given distance, +     * @deprecated use {@link SloppyMath#haversinMeters} to get distance in meters, law of cosines is being removed, +    @Deprecated, +     * @deprecated use {@link GeoUtils#arcDistance}, +    @Deprecated, +    @Deprecated, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +     * @deprecated use {@link GeoUtils#planeDistance}, +    @Deprecated, +     * Note: {@code calculate} is simply returning the RHS of the spherical law of cosines from 2 lat,lon points., +     * {@code normalize} also returns the RHS of the spherical law of cosines for a given distance, +     * @deprecated use {@link SloppyMath#haversinMeters} to get distance in meters, law of cosines is being removed, +    @Deprecated, +     * @deprecated use {@link GeoUtils#arcDistance}, +    @Deprecated, +    @Deprecated, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java, +, +    /** returns the latitude value from the string based geohash */, +    public static final double decodeLatitude(final String geohash) {, +        return GeoPointField.decodeLatitude(mortonEncode(geohash));, +    }, +, +    /** returns the latitude value from the string based geohash */, +    public static final double decodeLongitude(final String geohash) {, +        return GeoPointField.decodeLongitude(mortonEncode(geohash));, +    }, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +     * @deprecated use {@link GeoUtils#planeDistance}, +    @Deprecated, +     * Note: {@code calculate} is simply returning the RHS of the spherical law of cosines from 2 lat,lon points., +     * {@code normalize} also returns the RHS of the spherical law of cosines for a given distance, +     * @deprecated use {@link SloppyMath#haversinMeters} to get distance in meters, law of cosines is being removed, +    @Deprecated, +     * @deprecated use {@link GeoUtils#arcDistance}, +    @Deprecated, +    @Deprecated, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java, +, +    /** returns the latitude value from the string based geohash */, +    public static final double decodeLatitude(final String geohash) {, +        return GeoPointField.decodeLatitude(mortonEncode(geohash));, +    }, +, +    /** returns the latitude value from the string based geohash */, +    public static final double decodeLongitude(final String geohash) {, +        return GeoPointField.decodeLongitude(mortonEncode(geohash));, +    }, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +    /** Return the distance (in meters) between 2 lat,lon geo points using the haversine method implemented by lucene */, +    public static double arcDistance(double lat1, double lon1, double lat2, double lon2) {, +        return SloppyMath.haversinMeters(lat1, lon1, lat2, lon2);, +    }, +, +    /**, +     * Return the distance (in meters) between 2 lat,lon geo points using a simple tangential plane, +     * this provides a faster alternative to {@link GeoUtils#arcDistance} when points are within 5 km, +     */, +    public static double planeDistance(double lat1, double lon1, double lat2, double lon2) {, +        double x = (lon2 - lon1) * SloppyMath.TO_RADIANS * Math.cos((lat2 + lat1) / 2.0 * SloppyMath.TO_RADIANS);, +        double y = (lat2 - lat1) * SloppyMath.TO_RADIANS;, +        return Math.sqrt(x * x + y * y) * EARTH_MEAN_RADIUS;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoDistance.java, +     * @deprecated use {@link GeoUtils#planeDistance}, +    @Deprecated, +     * Note: {@code calculate} is simply returning the RHS of the spherical law of cosines from 2 lat,lon points., +     * {@code normalize} also returns the RHS of the spherical law of cosines for a given distance, +     * @deprecated use {@link SloppyMath#haversinMeters} to get distance in meters, law of cosines is being removed, +    @Deprecated, +     * @deprecated use {@link GeoUtils#arcDistance}, +    @Deprecated, +    @Deprecated, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java, +, +    /** returns the latitude value from the string based geohash */, +    public static final double decodeLatitude(final String geohash) {, +        return GeoPointField.decodeLatitude(mortonEncode(geohash));, +    }, +, +    /** returns the latitude value from the string based geohash */, +    public static final double decodeLongitude(final String geohash) {, +        return GeoPointField.decodeLongitude(mortonEncode(geohash));, +    }, +++ b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +    /** Return the distance (in meters) between 2 lat,lon geo points using the haversine method implemented by lucene */, +    public static double arcDistance(double lat1, double lon1, double lat2, double lon2) {, +        return SloppyMath.haversinMeters(lat1, lon1, lat2, lon2);, +    }, +, +    /**, +     * Return the distance (in meters) between 2 lat,lon geo points using a simple tangential plane, +     * this provides a faster alternative to {@link GeoUtils#arcDistance} when points are within 5 km, +     */, +    public static double planeDistance(double lat1, double lon1, double lat2, double lon2) {]