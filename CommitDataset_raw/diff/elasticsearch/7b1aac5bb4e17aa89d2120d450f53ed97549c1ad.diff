[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +, +    public void clear() {, +        filterCache.clear();, +    }, +, +    public void clearUnreferenced() {, +        filterCache.clearUnreferenced();, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +, +    public void clear() {, +        filterCache.clear();, +    }, +, +    public void clearUnreferenced() {, +        filterCache.clearUnreferenced();, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +, +    /**, +     * Clears unreferenced filters., +     */, +    void clearUnreferenced();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +, +    public void clear() {, +        filterCache.clear();, +    }, +, +    public void clearUnreferenced() {, +        filterCache.clearUnreferenced();, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +, +    /**, +     * Clears unreferenced filters., +     */, +    void clearUnreferenced();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java, +, +    @Override public void clearUnreferenced() {, +        // nothing to do here, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +, +    public void clear() {, +        filterCache.clear();, +    }, +, +    public void clearUnreferenced() {, +        filterCache.clearUnreferenced();, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +, +    /**, +     * Clears unreferenced filters., +     */, +    void clearUnreferenced();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java, +, +    @Override public void clearUnreferenced() {, +        // nothing to do here, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/support/AbstractConcurrentMapFilterCache.java, +    @Override public void clearUnreferenced() {, +, +    @Override public Filter cache(Filter filterToCache) {, +        return new FilterCacheFilterWrapper(filterToCache);, +    }, +, +    private class IndexReaderCleaner implements Runnable {, +        @Override public void run() {, +            clearUnreferenced();, +        }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/IndexCache.java, +, +    public void clear() {, +        filterCache.clear();, +    }, +, +    public void clearUnreferenced() {, +        filterCache.clearUnreferenced();, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java, +, +    /**, +     * Clears unreferenced filters., +     */, +    void clearUnreferenced();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java, +, +    @Override public void clearUnreferenced() {, +        // nothing to do here, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/cache/filter/support/AbstractConcurrentMapFilterCache.java, +    @Override public void clearUnreferenced() {, +, +    @Override public Filter cache(Filter filterToCache) {, +        return new FilterCacheFilterWrapper(filterToCache);]