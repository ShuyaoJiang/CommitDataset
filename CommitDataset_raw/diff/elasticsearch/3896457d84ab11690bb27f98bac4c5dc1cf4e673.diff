[+++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        type = in.readString();, +        out.writeString(type);, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        type = in.readString();, +        out.writeString(type);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/ShardCoreKeyMap.java, +import org.apache.lucene.index.LeafReader.CoreClosedListener;, +import java.io.IOException;, +                CoreClosedListener listener = ownerCoreCacheKey -> {, +                };, +                boolean addedListener = false;, +                try {, +                    reader.addCoreClosedListener(listener);, +                    addedListener = true;, +                } finally {, +                    if (false == addedListener) {, +                        try {, +                            listener.onClose(coreKey);, +                        } catch (IOException e) {, +                            throw new RuntimeException("Blow up trying to recover from failure to add listener", e);, +                        }, +                    }, +                }, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java, +    public static class Failure {, +            String fIndex = in.readString();, +            String fType = in.readString();, +            String fId = in.readOptionalString();, +            Throwable throwable = in.readThrowable();, +            failure = new Failure(fIndex, fType, fId, throwable);, +            out.writeString(failure.getIndex());, +            out.writeString(failure.getType());, +            out.writeOptionalString(failure.getId());, +            out.writeThrowable(failure.getCause());, +++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java, +        return "shard bulk {" + super.toString() + "}";, +++ b/core/src/main/java/org/elasticsearch/action/index/IndexRequest.java, +        type = in.readString();, +        out.writeString(type);, +++ b/core/src/main/java/org/elasticsearch/common/lucene/ShardCoreKeyMap.java, +import org.apache.lucene.index.LeafReader.CoreClosedListener;, +import java.io.IOException;, +                CoreClosedListener listener = ownerCoreCacheKey -> {, +                };, +                boolean addedListener = false;, +                try {, +                    reader.addCoreClosedListener(listener);, +                    addedListener = true;, +                } finally {]