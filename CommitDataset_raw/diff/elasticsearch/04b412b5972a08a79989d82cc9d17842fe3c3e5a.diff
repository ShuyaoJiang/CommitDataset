[+++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +    public Settings getAsSettings(String setting) {, +        return getByPrefix(setting + ".");, +    }, +, +    @Override, +    public Set<String> names() {, +        Set<String> names = new HashSet<>();, +        for (String key : settings.keySet()) {, +            int i = key.indexOf(".");, +            if (i < 0) {, +                names.add(key);, +            } else {, +                names.add(key.substring(0, i));, +            }, +        }, +        return names;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +    public Settings getAsSettings(String setting) {, +        return getByPrefix(setting + ".");, +    }, +, +    @Override, +    public Set<String> names() {, +        Set<String> names = new HashSet<>();, +        for (String key : settings.keySet()) {, +            int i = key.indexOf(".");, +            if (i < 0) {, +                names.add(key);, +            } else {, +                names.add(key.substring(0, i));, +            }, +        }, +        return names;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +import java.util.Set;, +     * Returns the settings mapped to the given setting name., +     */, +    Settings getAsSettings(String setting);, +, +    /**, +     * @return  The direct keys of this settings, +     */, +    Set<String> names();, +, +    /**, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +    public Settings getAsSettings(String setting) {, +        return getByPrefix(setting + ".");, +    }, +, +    @Override, +    public Set<String> names() {, +        Set<String> names = new HashSet<>();, +        for (String key : settings.keySet()) {, +            int i = key.indexOf(".");, +            if (i < 0) {, +                names.add(key);, +            } else {, +                names.add(key.substring(0, i));, +            }, +        }, +        return names;, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +import java.util.Set;, +     * Returns the settings mapped to the given setting name., +     */, +    Settings getAsSettings(String setting);, +, +    /**, +     * @return  The direct keys of this settings, +     */, +    Set<String> names();, +, +    /**, +++ b/src/test/java/org/elasticsearch/common/settings/ImmutableSettingsTests.java, +import java.util.Set;, +, +    @Test, +    public void testGetAsSettings() {, +        Settings settings = settingsBuilder(), +                .put("foo", "abc"), +                .put("foo.bar", "def"), +                .put("foo.baz", "ghi").build();, +, +        Settings fooSettings = settings.getAsSettings("foo");, +        assertThat(fooSettings.get("bar"), equalTo("def"));, +        assertThat(fooSettings.get("baz"), equalTo("ghi"));, +    }, +, +    @Test]