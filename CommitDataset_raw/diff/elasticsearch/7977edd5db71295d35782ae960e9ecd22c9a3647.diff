[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.search.Filter;, +     * A filter based on the type of the field., +     */, +    Filter typeFilter();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.search.Filter;, +     * A filter based on the type of the field., +     */, +    Filter typeFilter();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDocumentMapper.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.lucene.search.TermFilter;, +    private final Filter typeFilter;, +, +        this.typeFilter = new TermFilter(typeMapper().term(type));, +, +    @Override public Filter typeFilter() {, +        return this.typeFilter;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.search.Filter;, +     * A filter based on the type of the field., +     */, +    Filter typeFilter();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDocumentMapper.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.lucene.search.TermFilter;, +    private final Filter typeFilter;, +, +        this.typeFilter = new TermFilter(typeMapper().term(type));, +, +    @Override public Filter typeFilter() {, +        return this.typeFilter;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java, +        return new FilteredQuery(query, parseContext.cacheFilterIfPossible(docMapper.typeFilter()));, +        booleanFilter.add(new FilterClause(parseContext.cacheFilterIfPossible(docMapper.typeFilter()), BooleanClause.Occur.MUST));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.search.Filter;, +     * A filter based on the type of the field., +     */, +    Filter typeFilter();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDocumentMapper.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.lucene.search.TermFilter;, +    private final Filter typeFilter;, +, +        this.typeFilter = new TermFilter(typeMapper().term(type));, +, +    @Override public Filter typeFilter() {, +        return this.typeFilter;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java, +        return new FilteredQuery(query, parseContext.cacheFilterIfPossible(docMapper.typeFilter()));, +        booleanFilter.add(new FilterClause(parseContext.cacheFilterIfPossible(docMapper.typeFilter()), BooleanClause.Occur.MUST));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +                query = new FilteredQuery(query, indexCache.filter().cache(docMapper.typeFilter()));, +                    booleanFilter.add(new FilterClause(indexCache.filter().cache(docMapper.typeFilter()), BooleanClause.Occur.SHOULD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.search.Filter;, +     * A filter based on the type of the field., +     */, +    Filter typeFilter();, +, +    /**, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/xcontent/XContentDocumentMapper.java, +import org.apache.lucene.search.Filter;, +import org.elasticsearch.common.lucene.search.TermFilter;, +    private final Filter typeFilter;, +, +        this.typeFilter = new TermFilter(typeMapper().term(type));, +, +    @Override public Filter typeFilter() {, +        return this.typeFilter;, +    }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/support/QueryParsers.java, +        return new FilteredQuery(query, parseContext.cacheFilterIfPossible(docMapper.typeFilter()));, +        booleanFilter.add(new FilterClause(parseContext.cacheFilterIfPossible(docMapper.typeFilter()), BooleanClause.Occur.MUST));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java, +                query = new FilteredQuery(query, indexCache.filter().cache(docMapper.typeFilter()));, +                    booleanFilter.add(new FilterClause(indexCache.filter().cache(docMapper.typeFilter()), BooleanClause.Occur.SHOULD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/search/facets/FacetsPhase.java, +                    query = new FilteredQuery(query, context.filterCache().cache(docMapper.typeFilter()));, +                        booleanFilter.add(new FilterClause(context.filterCache().cache(docMapper.typeFilter()), BooleanClause.Occur.SHOULD));, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java, +import org.apache.lucene.search.Filter;, +     * A filter based on the type of the field.]