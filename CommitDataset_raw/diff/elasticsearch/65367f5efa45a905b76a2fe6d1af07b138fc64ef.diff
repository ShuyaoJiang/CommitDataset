[+++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.junit.Before;, +    List<String> indexes;, +    @Before, +    public void initIndexesList() throws Exception {, +        Path dir = getResourcePath(".");, +        Path backwardsIndex = getResourcePath(indexFile);, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.junit.Before;, +    List<String> indexes;, +    @Before, +    public void initIndexesList() throws Exception {, +        Path dir = getResourcePath(".");, +        Path backwardsIndex = getResourcePath(indexFile);, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +    private List<String> repoVersions() throws Exception {, +        Path repoFiles = getResourcePath(".");, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.junit.Before;, +    List<String> indexes;, +    @Before, +    public void initIndexesList() throws Exception {, +        Path dir = getResourcePath(".");, +        Path backwardsIndex = getResourcePath(indexFile);, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +    private List<String> repoVersions() throws Exception {, +        Path repoFiles = getResourcePath(".");, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = getResourcePath("/org/elasticsearch/cluster/routing/" + name + ".zip");, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.junit.Before;, +    List<String> indexes;, +    @Before, +    public void initIndexesList() throws Exception {, +        Path dir = getResourcePath(".");, +        Path backwardsIndex = getResourcePath(indexFile);, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +    private List<String> repoVersions() throws Exception {, +        Path repoFiles = getResourcePath(".");, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = getResourcePath("/org/elasticsearch/cluster/routing/" + name + ".zip");, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = getResourcePath("/org/elasticsearch/common/io/copyappend");, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.junit.Before;, +    List<String> indexes;, +    @Before, +    public void initIndexesList() throws Exception {, +        Path dir = getResourcePath(".");, +        Path backwardsIndex = getResourcePath(indexFile);, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +    private List<String> repoVersions() throws Exception {, +        Path repoFiles = getResourcePath(".");, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = getResourcePath("/org/elasticsearch/cluster/routing/" + name + ".zip");, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = getResourcePath("/org/elasticsearch/common/io/copyappend");, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java, +        Path configDir = getResourcePath("config");, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.junit.Before;, +    List<String> indexes;, +    @Before, +    public void initIndexesList() throws Exception {, +        Path dir = getResourcePath(".");, +        Path backwardsIndex = getResourcePath(indexFile);, +++ b/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java, +    private List<String> repoVersions() throws Exception {, +        Path repoFiles = getResourcePath(".");, +++ b/src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java, +        Path zippedIndexDir = getResourcePath("/org/elasticsearch/cluster/routing/" + name + ".zip");, +++ b/src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java, +        final Path path = getResourcePath("/org/elasticsearch/common/io/copyappend");, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java, +        Path configDir = getResourcePath("config");, +++ b/src/test/java/org/elasticsearch/common/logging/log4j/LoggingConfigurationTests.java, +            Path configDir = getResourcePath("config");, +++ b/src/test/java/org/elasticsearch/NamingConventionTests.java, +            final Path startPath = getResourcePath(path);, +++ b/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java, +import org.junit.Before;, +    List<String> indexes;, +    @Before, +    public void initIndexesList() throws Exception {, +        Path dir = getResourcePath(".");, +        Path backwardsIndex = getResourcePath(indexFile);]