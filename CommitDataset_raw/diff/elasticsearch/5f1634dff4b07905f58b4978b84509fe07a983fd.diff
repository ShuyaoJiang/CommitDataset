[+++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java, +        return (valuesSource == null || owningBucketOrd >= counts.size()) ? 0 : counts.get(owningBucketOrd);, +++ b/core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java, +        return (valuesSource == null || owningBucketOrd >= counts.size()) ? 0 : counts.get(owningBucketOrd);, +++ b/core/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountIT.java, +import org.elasticsearch.search.aggregations.BucketOrder;, +import org.elasticsearch.search.aggregations.bucket.filter.Filter;, +import org.elasticsearch.search.aggregations.bucket.terms.Terms;, +import java.util.Collection;, +import java.util.Collections;, +import java.util.List;, +import java.util.Map;, +, +import static org.elasticsearch.index.query.QueryBuilders.termQuery;, +import static org.elasticsearch.search.aggregations.AggregationBuilders.filter;, +import static org.elasticsearch.search.aggregations.AggregationBuilders.terms;, +, +    public void testOrderByEmptyAggregation() throws Exception {, +        SearchResponse searchResponse = client().prepareSearch("idx").setQuery(matchAllQuery()), +                .addAggregation(terms("terms").field("value").order(BucketOrder.compound(BucketOrder.aggregation("filter>count", true))), +                        .subAggregation(filter("filter", termQuery("value", 100)).subAggregation(count("count").field("value")))), +                .get();, +, +        assertHitCount(searchResponse, 10);, +, +        Terms terms = searchResponse.getAggregations().get("terms");, +        assertThat(terms, notNullValue());, +        List<? extends Terms.Bucket> buckets = terms.getBuckets();, +        assertThat(buckets, notNullValue());, +        assertThat(buckets.size(), equalTo(10));, +, +        for (int i = 0; i < 10; i++) {, +            Terms.Bucket bucket = buckets.get(i);, +            assertThat(bucket, notNullValue());, +            assertThat(bucket.getKeyAsNumber(), equalTo((long) i + 1));, +            assertThat(bucket.getDocCount(), equalTo(1L));, +            Filter filter = bucket.getAggregations().get("filter");, +            assertThat(filter, notNullValue());, +            assertThat(filter.getDocCount(), equalTo(0L));, +            ValueCount count = filter.getAggregations().get("count");, +            assertThat(count, notNullValue());, +            assertThat(count.value(), equalTo(0.0));, +, +        }, +    }]