[+++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.index.query.QueryParseContext;, +            QueryParseContext queryParseContext = queryShardContext.parseContext();, +            QueryBuilder<?> queryBuilder = QueryBuilder.rewriteQuery(queryParseContext.parseInnerQueryBuilder(), queryShardContext);, +            queryBuilder.toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.index.query.QueryParseContext;, +            QueryParseContext queryParseContext = queryShardContext.parseContext();, +            QueryBuilder<?> queryBuilder = QueryBuilder.rewriteQuery(queryParseContext.parseInnerQueryBuilder(), queryShardContext);, +            queryBuilder.toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.index.query.QueryParseContext;, +            QueryParseContext queryParseContext = queryShardContext.parseContext();, +            QueryBuilder<?> queryBuilder = QueryBuilder.rewriteQuery(queryParseContext.parseInnerQueryBuilder(), queryShardContext);, +            queryBuilder.toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +, +    @Override, +    public final QueryBuilder<?> rewrite(QueryRewriteContext queryShardContext) throws IOException {, +        QueryBuilder rewritten = doRewrite(queryShardContext);, +        if (rewritten == this) {, +            return rewritten;, +        }, +        if (queryName() != null && rewritten.queryName() == null) { // we inherit the name, +            rewritten.queryName(queryName());, +        }, +        if (boost() != DEFAULT_BOOST && rewritten.boost() == DEFAULT_BOOST) {, +            rewritten.boost(boost());, +        }, +        return rewritten;, +    }, +, +    protected QueryBuilder<?> doRewrite(QueryRewriteContext queryShardContext) throws IOException {, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java, +++ b/core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java, +import org.elasticsearch.index.query.QueryBuilder;, +import org.elasticsearch.index.query.QueryParseContext;, +            QueryParseContext queryParseContext = queryShardContext.parseContext();, +            QueryBuilder<?> queryBuilder = QueryBuilder.rewriteQuery(queryParseContext.parseInnerQueryBuilder(), queryShardContext);, +            queryBuilder.toFilter(queryShardContext);, +++ b/core/src/main/java/org/elasticsearch/index/IndexService.java, +        return new QueryShardContext(indexSettings, indexCache.bitsetFilterCache(), indexFieldData, mapperService(), similarityService(), nodeServicesProvider.getScriptService(), nodeServicesProvider.getIndicesQueriesRegistry());, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +, +    @Override, +    public final QueryBuilder<?> rewrite(QueryRewriteContext queryShardContext) throws IOException {, +        QueryBuilder rewritten = doRewrite(queryShardContext);, +        if (rewritten == this) {, +            return rewritten;, +        }, +        if (queryName() != null && rewritten.queryName() == null) { // we inherit the name, +            rewritten.queryName(queryName());, +        }, +        if (boost() != DEFAULT_BOOST && rewritten.boost() == DEFAULT_BOOST) {, +            rewritten.boost(boost());, +        }, +        return rewritten;, +    }, +, +    protected QueryBuilder<?> doRewrite(QueryRewriteContext queryShardContext) throws IOException {, +        return this;, +    }, +++ b/core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java, +import java.util.function.Consumer;, +, +, +    @Override, +    protected QueryBuilder<?> doRewrite(QueryRewriteContext queryRewriteContext) throws IOException {, +        BoolQueryBuilder newBuilder = new BoolQueryBuilder();, +        boolean changed = false;, +        final int clauses = mustClauses.size() + mustNotClauses.size() + filterClauses.size() + shouldClauses.size();, +        if (clauses == 0) {, +            return new MatchAllQueryBuilder().boost(boost()).queryName(queryName());, +        }, +        changed |= rewriteClauses(queryRewriteContext, mustClauses, newBuilder::must);, +        changed |= rewriteClauses(queryRewriteContext, mustNotClauses, newBuilder::mustNot);, +        changed |= rewriteClauses(queryRewriteContext, filterClauses, newBuilder::filter);, +        changed |= rewriteClauses(queryRewriteContext, shouldClauses, newBuilder::should);, +, +        if (changed) {, +            newBuilder.adjustPureNegative = adjustPureNegative;, +            newBuilder.disableCoord = disableCoord;, +            newBuilder.minimumShouldMatch = minimumShouldMatch;, +            newBuilder.boost(boost());, +            newBuilder.queryName(queryName());, +            return newBuilder;, +        }]