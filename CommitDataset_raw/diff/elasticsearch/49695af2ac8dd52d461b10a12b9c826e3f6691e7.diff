[+++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/index/VersionType.java, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/index/VersionType.java, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java, +                        .setDoc("field", "3").setVersion(13).setVersionType(VersionType.INTERNAL)), +        assertThat(bulkResponse.getItems()[1].getFailureMessage(), containsString("version conflict"));, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/index/VersionType.java, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java, +                        .setDoc("field", "3").setVersion(13).setVersionType(VersionType.INTERNAL)), +        assertThat(bulkResponse.getItems()[1].getFailureMessage(), containsString("version conflict"));, +++ b/core/src/test/java/org/elasticsearch/index/VersionTypeTests.java, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/index/VersionType.java, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java, +                        .setDoc("field", "3").setVersion(13).setVersionType(VersionType.INTERNAL)), +        assertThat(bulkResponse.getItems()[1].getFailureMessage(), containsString("version conflict"));, +++ b/core/src/test/java/org/elasticsearch/index/VersionTypeTests.java, +++ b/core/src/test/java/org/elasticsearch/update/UpdateIT.java, +        assertThat((String) get.getSource().get("text"), equalTo("value"));, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/index/VersionType.java, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java, +                        .setDoc("field", "3").setVersion(13).setVersionType(VersionType.INTERNAL)), +        assertThat(bulkResponse.getItems()[1].getFailureMessage(), containsString("version conflict"));, +++ b/core/src/test/java/org/elasticsearch/index/VersionTypeTests.java, +++ b/core/src/test/java/org/elasticsearch/update/UpdateIT.java, +        assertThat((String) get.getSource().get("text"), equalTo("value"));, +++ b/core/src/test/java/org/elasticsearch/versioning/SimpleVersioningIT.java, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/index/VersionType.java, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java, +                        .setDoc("field", "3").setVersion(13).setVersionType(VersionType.INTERNAL)), +        assertThat(bulkResponse.getItems()[1].getFailureMessage(), containsString("version conflict"));, +++ b/core/src/test/java/org/elasticsearch/index/VersionTypeTests.java, +++ b/core/src/test/java/org/elasticsearch/update/UpdateIT.java, +        assertThat((String) get.getSource().get("text"), equalTo("value"));, +++ b/core/src/test/java/org/elasticsearch/versioning/SimpleVersioningIT.java, +++ b/docs/reference/migration/migrate_6_0.asciidoc, +, +include::migrate_6_0/docs.asciidoc[], +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java, +        final long updateVersion = getResult.getVersion();, +++ b/core/src/main/java/org/elasticsearch/action/update/UpdateRequest.java, +        if (versionType != VersionType.INTERNAL) {, +            validationException = addValidationError("version type [" + versionType + "] is not supported by the update API",, +                    validationException);, +++ b/core/src/main/java/org/elasticsearch/index/VersionType.java, +++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java, +                        .setDoc("field", "3").setVersion(13).setVersionType(VersionType.INTERNAL)), +        assertThat(bulkResponse.getItems()[1].getFailureMessage(), containsString("version conflict"));, +++ b/core/src/test/java/org/elasticsearch/index/VersionTypeTests.java, +++ b/core/src/test/java/org/elasticsearch/update/UpdateIT.java, +        assertThat((String) get.getSource().get("text"), equalTo("value"));, +++ b/core/src/test/java/org/elasticsearch/versioning/SimpleVersioningIT.java, +++ b/docs/reference/migration/migrate_6_0.asciidoc, +, +include::migrate_6_0/docs.asciidoc[], +++ b/docs/reference/migration/migrate_6_0/docs.asciidoc, +[[breaking_60_document_api_changes]], +=== Document API changes]