[+++ b/qa/smoke-test-ingest-with-all-dependencies/build.gradle, +, +integTest {, +    cluster {, +        plugin 'ingest-geoip', project(':plugins:ingest-geoip'), +    }, +}, +++ b/qa/smoke-test-ingest-with-all-dependencies/build.gradle, +, +integTest {, +    cluster {, +        plugin 'ingest-geoip', project(':plugins:ingest-geoip'), +    }, +}, +++ /dev/null, +++ b/qa/smoke-test-ingest-with-all-dependencies/build.gradle, +, +integTest {, +    cluster {, +        plugin 'ingest-geoip', project(':plugins:ingest-geoip'), +    }, +}, +++ /dev/null, +++ b/qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/ValueSourceMustacheIT.java, +        @SuppressWarnings("unchecked"), +        @SuppressWarnings("unchecked"), +++ b/qa/smoke-test-ingest-with-all-dependencies/build.gradle, +, +integTest {, +    cluster {, +        plugin 'ingest-geoip', project(':plugins:ingest-geoip'), +    }, +}, +++ /dev/null, +++ b/qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/ValueSourceMustacheIT.java, +        @SuppressWarnings("unchecked"), +        @SuppressWarnings("unchecked"), +++ b/qa/smoke-test-ingest-with-all-dependencies/src/test/resources/rest-api-spec/test/ingest/10_pipeline_with_mustache_templates.yaml, +---, +"Test metadata templating":, +  - do:, +      cluster.health:, +          wait_for_status: green, +, +  - do:, +      ingest.put_pipeline:, +        id: "my_pipeline_1", +        body:  >, +          {, +            "description": "_description",, +            "processors": [, +              {, +                "set" : {, +                  "field" : "index_type_id",, +                  "value": "{{_index}}/{{_type}}/{{_id}}", +                }, +              },, +              {, +                "append" : {, +                  "field" : "metadata",, +                  "value": ["{{_index}}", "{{_type}}", "{{_id}}"], +                }, +              }, +            ], +          }, +  - match: { acknowledged: true }, +, +  - do:, +      index:, +        index: test, +        type: test, +        id: 1, +        pipeline: "my_pipeline_1", +        body: {}, +, +  - do:, +      get:, +        index: test, +        type: test, +        id: 1, +  - length: { _source: 2 }, +  - match: { _source.index_type_id: "test/test/1" }, +  - match: { _source.metadata: ["test", "test", "1"] }, +, +---, +"Test templating":, +  - do:, +      cluster.health:, +          wait_for_status: green, +, +  - do:, +      ingest.put_pipeline:, +        id: "my_pipeline_1", +        body:  >, +          {, +            "description": "_description",, +            "processors": [, +              {, +                "set" : {, +                  "field" : "field4",]