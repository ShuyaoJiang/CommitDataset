[+++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +                    return (T) readStackTrace(new NoSuchFileException(file, other, reason), this);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +                    return (T) readStackTrace(new NoSuchFileException(file, other, reason), this);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +            } else if (throwable instanceof NoSuchFileException) {, +                writeOptionalString(((NoSuchFileException) throwable).getFile());, +                writeOptionalString(((NoSuchFileException) throwable).getOtherFile());, +                writeOptionalString(((NoSuchFileException) throwable).getReason());, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +                    return (T) readStackTrace(new NoSuchFileException(file, other, reason), this);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +            } else if (throwable instanceof NoSuchFileException) {, +                writeOptionalString(((NoSuchFileException) throwable).getFile());, +                writeOptionalString(((NoSuchFileException) throwable).getOtherFile());, +                writeOptionalString(((NoSuchFileException) throwable).getReason());, +++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingStats.java, +, +, +, +        Stats() {, +, +        }, +        public long getIndexCount() {, +            return indexCount;, +        }, +        public long getIndexFailedCount() {, +            return indexFailedCount;, +        }, +        public TimeValue getIndexTime() {, +            return new TimeValue(indexTimeInMillis);, +        }, +        public long getIndexTimeInMillis() {, +            return indexTimeInMillis;, +        }, +        public long getIndexCurrent() {, +            return indexCurrent;, +        }, +, +        public boolean isThrottled() {, +            return isThrottled;, +        }, +, +        /**, +         * Gets the amount of time in milliseconds that the index has been under merge throttling control, +         */, +        public long getThrottleTimeInMillis() {, +            return throttleTimeInMillis;, +        }, +        public TimeValue getThrottleTime() {, +            return new TimeValue(throttleTimeInMillis);, +        }, +        public TimeValue getDeleteTime() {, +            return new TimeValue(deleteTimeInMillis);, +        }, +        public long getDeleteTimeInMillis() {, +            return deleteTimeInMillis;, +        }, +, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java, +                    return (T) readStackTrace(new NoSuchFileException(file, other, reason), this);, +++ b/core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java, +            } else if (throwable instanceof NoSuchFileException) {, +                writeOptionalString(((NoSuchFileException) throwable).getFile());, +                writeOptionalString(((NoSuchFileException) throwable).getOtherFile());, +                writeOptionalString(((NoSuchFileException) throwable).getReason());, +++ b/core/src/main/java/org/elasticsearch/index/indexing/IndexingStats.java, +, +, +, +        Stats() {, +, +        }, +        public long getIndexCount() {, +            return indexCount;, +        }, +        public long getIndexFailedCount() {, +            return indexFailedCount;, +        }, +        public TimeValue getIndexTime() {, +            return new TimeValue(indexTimeInMillis);, +        }, +        public long getIndexTimeInMillis() {, +            return indexTimeInMillis;, +        }, +        public long getIndexCurrent() {, +            return indexCurrent;, +        }, +, +        public boolean isThrottled() {, +            return isThrottled;, +        }, +, +        /**, +         * Gets the amount of time in milliseconds that the index has been under merge throttling control, +         */, +        public long getThrottleTimeInMillis() {, +            return throttleTimeInMillis;, +        }, +        public TimeValue getThrottleTime() {]