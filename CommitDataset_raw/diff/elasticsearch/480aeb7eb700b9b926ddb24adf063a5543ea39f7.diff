[+++ b/.gitignore, +++ b/.gitignore, +++ b/CONTRIBUTING.md, +Elasticsearch uses the Gradle wrapper for its build. You can execute Gradle, +using the wrapper via the `gradlew` script in the root of the repository., +++ b/.gitignore, +++ b/CONTRIBUTING.md, +Elasticsearch uses the Gradle wrapper for its build. You can execute Gradle, +using the wrapper via the `gradlew` script in the root of the repository., +++ b/build.gradle, +import org.gradle.api.tasks.wrapper.Wrapper, +import org.gradle.api.tasks.wrapper.Wrapper.DistributionType, +import org.gradle.util.GradleVersion, +import org.gradle.util.DistributionLocator, +, +import java.security.MessageDigest, +task wrapper(type: Wrapper), +, +gradle.projectsEvaluated {, +, +  allprojects {, +    tasks.withType(Wrapper) { Wrapper wrapper ->, +      wrapper.distributionType = DistributionType.ALL, +, +      wrapper.doLast {, +        final DistributionLocator locator = new DistributionLocator(), +        final GradleVersion version = GradleVersion.version(wrapper.gradleVersion), +        final URI distributionUri = locator.getDistributionFor(version, wrapper.distributionType.name().toLowerCase(Locale.ENGLISH)), +        final URI sha256Uri = new URI(distributionUri.toString() + ".sha256"), +        final String sha256Sum = new String(sha256Uri.toURL().bytes), +        wrapper.getPropertiesFile() << "distributionSha256Sum=${sha256Sum}\n", +      }, +    }, +  }, +, +}, +, +++ b/.gitignore, +++ b/CONTRIBUTING.md, +Elasticsearch uses the Gradle wrapper for its build. You can execute Gradle, +using the wrapper via the `gradlew` script in the root of the repository., +++ b/build.gradle, +import org.gradle.api.tasks.wrapper.Wrapper, +import org.gradle.api.tasks.wrapper.Wrapper.DistributionType, +import org.gradle.util.GradleVersion, +import org.gradle.util.DistributionLocator, +, +import java.security.MessageDigest, +task wrapper(type: Wrapper), +, +gradle.projectsEvaluated {, +, +  allprojects {, +    tasks.withType(Wrapper) { Wrapper wrapper ->, +      wrapper.distributionType = DistributionType.ALL, +, +      wrapper.doLast {, +        final DistributionLocator locator = new DistributionLocator(), +        final GradleVersion version = GradleVersion.version(wrapper.gradleVersion), +        final URI distributionUri = locator.getDistributionFor(version, wrapper.distributionType.name().toLowerCase(Locale.ENGLISH)), +        final URI sha256Uri = new URI(distributionUri.toString() + ".sha256"), +        final String sha256Sum = new String(sha256Uri.toURL().bytes), +        wrapper.getPropertiesFile() << "distributionSha256Sum=${sha256Sum}\n", +      }, +    }, +  }, +, +}, +, +++ b/gradle/wrapper/gradle-wrapper.jar, +++ b/.gitignore, +++ b/CONTRIBUTING.md, +Elasticsearch uses the Gradle wrapper for its build. You can execute Gradle, +using the wrapper via the `gradlew` script in the root of the repository., +++ b/build.gradle, +import org.gradle.api.tasks.wrapper.Wrapper, +import org.gradle.api.tasks.wrapper.Wrapper.DistributionType, +import org.gradle.util.GradleVersion, +import org.gradle.util.DistributionLocator, +, +import java.security.MessageDigest, +task wrapper(type: Wrapper), +, +gradle.projectsEvaluated {, +, +  allprojects {, +    tasks.withType(Wrapper) { Wrapper wrapper ->, +      wrapper.distributionType = DistributionType.ALL, +, +      wrapper.doLast {, +        final DistributionLocator locator = new DistributionLocator(), +        final GradleVersion version = GradleVersion.version(wrapper.gradleVersion), +        final URI distributionUri = locator.getDistributionFor(version, wrapper.distributionType.name().toLowerCase(Locale.ENGLISH)), +        final URI sha256Uri = new URI(distributionUri.toString() + ".sha256"), +        final String sha256Sum = new String(sha256Uri.toURL().bytes), +        wrapper.getPropertiesFile() << "distributionSha256Sum=${sha256Sum}\n", +      }, +    }, +  }, +]