[+++ b/TESTING.asciidoc, +gradle prepareTestRoot, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/TESTING.asciidoc, +gradle prepareTestRoot, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/distributions, +export TAR=/elasticsearch/distribution/tar/build/distributions, +export RPM=/elasticsearch/distribution/rpm/build/distributions, +export DEB=/elasticsearch/distribution/deb/build/distributions, +++ b/TESTING.asciidoc, +gradle prepareTestRoot, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/distributions, +export TAR=/elasticsearch/distribution/tar/build/distributions, +export RPM=/elasticsearch/distribution/rpm/build/distributions, +export DEB=/elasticsearch/distribution/deb/build/distributions, +++ b/build.gradle, +// we need to add the same --debug-jvm option as, +// the real RunTask has, so we can pass it through, +class Run extends DefaultTask {, +  boolean debug = false, +, +  @org.gradle.api.internal.tasks.options.Option(, +        option = "debug-jvm",, +        description = "Enable debugging configuration, to allow attaching a debugger to elasticsearch.", +  ), +  public void setDebug(boolean enabled) {, +    project.project(':distribution').run.clusterConfig.debug = enabled, +  } , +}, +task run(type: Run) {, +++ b/TESTING.asciidoc, +gradle prepareTestRoot, +If you want to run elasticsearch from your IDE, the `gradle run` task, +supports a remote debugging option:, +, +---------------------------------------------------------------------------, +gradle run --debug-jvm, +---------------------------------------------------------------------------, +++ b/Vagrantfile, +export ZIP=/elasticsearch/distribution/zip/build/distributions, +export TAR=/elasticsearch/distribution/tar/build/distributions, +export RPM=/elasticsearch/distribution/rpm/build/distributions, +export DEB=/elasticsearch/distribution/deb/build/distributions, +++ b/build.gradle, +// we need to add the same --debug-jvm option as, +// the real RunTask has, so we can pass it through, +class Run extends DefaultTask {, +  boolean debug = false, +, +  @org.gradle.api.internal.tasks.options.Option(, +        option = "debug-jvm",, +        description = "Enable debugging configuration, to allow attaching a debugger to elasticsearch.", +  ), +  public void setDebug(boolean enabled) {, +    project.project(':distribution').run.clusterConfig.debug = enabled, +  } , +}, +task run(type: Run) {, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/EmptyDirTask.groovy, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.gradle, +, +import org.gradle.api.DefaultTask, +import org.gradle.api.tasks.*]