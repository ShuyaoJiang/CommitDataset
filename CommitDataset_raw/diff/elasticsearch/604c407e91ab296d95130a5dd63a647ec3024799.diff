[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +    /**, +     * Returns smart field mappers based on a smart name. A smart name is one that can optioannly be prefixed, +     * with a type (and then a '.'). If it is, then the {@link MapperService.SmartNameFieldMappers}, +     * will have the doc mapper set., +     *, +     * <p>It also (without the optional type prefix) try and find the {@link FieldMappers} for the specific, +     * name. It will first try to find it based on the full name (with the dots if its a compound name). If, +     * it is not found, will try and find it based on the indexName (which can be controlled in the mapping)., +     *, +     * <p>If nothing is found, returns null., +     */, +            FieldMappers mappers = fullNameFieldMappers.get(fieldName);, +            if (mappers != null && mappers.mapper() != null && mappers.mapper().searchAnalyzer() != null) {, +                return mappers.mapper().searchAnalyzer().tokenStream(fieldName, reader);, +            }, +, +            mappers = indexNameFieldMappers.get(fieldName);, +            FieldMappers mappers = fullNameFieldMappers.get(fieldName);, +            if (mappers != null && mappers.mapper() != null && mappers.mapper().searchAnalyzer() != null) {, +                return mappers.mapper().searchAnalyzer().reusableTokenStream(fieldName, reader);, +            }, +, +            mappers = indexNameFieldMappers.get(fieldName);]