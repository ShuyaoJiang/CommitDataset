[+++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> PROCESSORS_SETTING = Setting.intSetting("processors", Math.min(32, Runtime.getRuntime().availableProcessors()), 1, false, Setting.Scope.CLUSTER) ;, +        return PROCESSORS_SETTING.get(settings);, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> PROCESSORS_SETTING = Setting.intSetting("processors", Math.min(32, Runtime.getRuntime().availableProcessors()), 1, false, Setting.Scope.CLUSTER) ;, +        return PROCESSORS_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIT.java, +        internalCluster().startNodesAsync(Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 7).build()).get();, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> PROCESSORS_SETTING = Setting.intSetting("processors", Math.min(32, Runtime.getRuntime().availableProcessors()), 1, false, Setting.Scope.CLUSTER) ;, +        return PROCESSORS_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIT.java, +        internalCluster().startNodesAsync(Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 7).build()).get();, +++ b/core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java, +                        .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) // limit the number of threads created, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> PROCESSORS_SETTING = Setting.intSetting("processors", Math.min(32, Runtime.getRuntime().availableProcessors()), 1, false, Setting.Scope.CLUSTER) ;, +        return PROCESSORS_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIT.java, +        internalCluster().startNodesAsync(Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 7).build()).get();, +++ b/core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java, +                        .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) // limit the number of threads created, +++ b/core/src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoIT.java, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 3).build(),, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 6).build(), +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> PROCESSORS_SETTING = Setting.intSetting("processors", Math.min(32, Runtime.getRuntime().availableProcessors()), 1, false, Setting.Scope.CLUSTER) ;, +        return PROCESSORS_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIT.java, +        internalCluster().startNodesAsync(Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 7).build()).get();, +++ b/core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java, +                        .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) // limit the number of threads created, +++ b/core/src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoIT.java, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 3).build(),, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 6).build(), +++ b/test/framework/src/main/java/org/elasticsearch/test/ESSingleNodeTestCase.java, +            .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) // limit the number of threads created, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> PROCESSORS_SETTING = Setting.intSetting("processors", Math.min(32, Runtime.getRuntime().availableProcessors()), 1, false, Setting.Scope.CLUSTER) ;, +        return PROCESSORS_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIT.java, +        internalCluster().startNodesAsync(Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 7).build()).get();, +++ b/core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java, +                        .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) // limit the number of threads created, +++ b/core/src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoIT.java, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 3).build(),, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 6).build(), +++ b/test/framework/src/main/java/org/elasticsearch/test/ESSingleNodeTestCase.java, +            .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) // limit the number of threads created, +++ b/test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java, +++ b/core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java, +import org.elasticsearch.common.util.concurrent.EsExecutors;, +        ClusterModule.SHARDS_ALLOCATOR_TYPE_SETTING,, +        EsExecutors.PROCESSORS_SETTING)));, +++ b/core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java, +import org.elasticsearch.common.settings.Setting;, +    public static final Setting<Integer> PROCESSORS_SETTING = Setting.intSetting("processors", Math.min(32, Runtime.getRuntime().availableProcessors()), 1, false, Setting.Scope.CLUSTER) ;, +        return PROCESSORS_SETTING.get(settings);, +++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsIT.java, +        internalCluster().startNodesAsync(Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 7).build()).get();, +++ b/core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java, +                        .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) // limit the number of threads created, +++ b/core/src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoIT.java, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 3).build(),, +                        Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(), 6).build(), +++ b/test/framework/src/main/java/org/elasticsearch/test/ESSingleNodeTestCase.java]