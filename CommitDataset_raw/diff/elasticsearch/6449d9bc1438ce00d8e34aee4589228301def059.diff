[+++ b/server/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation size is corrupted must be [0.." + maxSize + "] but was: " + size);, +        return new BufferedChecksumStreamInput(new ByteBufferStreamInput(buffer), path.toString(), reuse);, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation's term is newer than translog header term; " +, +++ b/server/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation size is corrupted must be [0.." + maxSize + "] but was: " + size);, +        return new BufferedChecksumStreamInput(new ByteBufferStreamInput(buffer), path.toString(), reuse);, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation's term is newer than translog header term; " +, +++ b/server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java, +    private final String source;, +    public BufferedChecksumStreamInput(StreamInput in, String source, BufferedChecksumStreamInput reuse) {, +        this.source = source;, +    public BufferedChecksumStreamInput(StreamInput in, String source) {, +        this(in, source, null);, +    }, +, +    public String getSource(){, +        return source;, +    }, +++ b/server/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation size is corrupted must be [0.." + maxSize + "] but was: " + size);, +        return new BufferedChecksumStreamInput(new ByteBufferStreamInput(buffer), path.toString(), reuse);, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation's term is newer than translog header term; " +, +++ b/server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java, +    private final String source;, +    public BufferedChecksumStreamInput(StreamInput in, String source, BufferedChecksumStreamInput reuse) {, +        this.source = source;, +    public BufferedChecksumStreamInput(StreamInput in, String source) {, +        this(in, source, null);, +    }, +, +    public String getSource(){, +        return source;, +    }, +++ b/server/src/main/java/org/elasticsearch/index/translog/Translog.java, +            throw new TranslogCorruptedException(in.getSource(), "checksum verification failed - expected: 0x" +, +    public static List<Operation> readOperations(StreamInput input, String source) throws IOException {, +        final BufferedChecksumStreamInput checksumStreamInput = new BufferedChecksumStreamInput(input, source);, +                throw new TranslogCorruptedException(in.getSource(), "operation size must be at least 4 but was: " + opSize);, +            throw new TruncatedTranslogException(in.getSource(), "reached premature end of file, translog is truncated", e);, +     * use {@link #readOperations(StreamInput, String)} to read it back., +            throw new TranslogCorruptedException(location.toString(), ex);, +++ b/server/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation size is corrupted must be [0.." + maxSize + "] but was: " + size);, +        return new BufferedChecksumStreamInput(new ByteBufferStreamInput(buffer), path.toString(), reuse);, +            throw new TranslogCorruptedException(, +                    path.toString(),, +                    "operation's term is newer than translog header term; " +, +++ b/server/src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java, +    private final String source;, +    public BufferedChecksumStreamInput(StreamInput in, String source, BufferedChecksumStreamInput reuse) {, +        this.source = source;, +    public BufferedChecksumStreamInput(StreamInput in, String source) {, +        this(in, source, null);, +    }, +, +    public String getSource(){, +        return source;, +    }, +++ b/server/src/main/java/org/elasticsearch/index/translog/Translog.java, +            throw new TranslogCorruptedException(in.getSource(), "checksum verification failed - expected: 0x" +, +    public static List<Operation> readOperations(StreamInput input, String source) throws IOException {, +        final BufferedChecksumStreamInput checksumStreamInput = new BufferedChecksumStreamInput(input, source);, +                throw new TranslogCorruptedException(in.getSource(), "operation size must be at least 4 but was: " + opSize);, +            throw new TruncatedTranslogException(in.getSource(), "reached premature end of file, translog is truncated", e);, +     * use {@link #readOperations(StreamInput, String)} to read it back., +            throw new TranslogCorruptedException(location.toString(), ex);, +++ b/server/src/main/java/org/elasticsearch/index/translog/TranslogCorruptedException.java, +    public TranslogCorruptedException(String source, String details) {, +        super(corruptedMessage(source, details));, +    public TranslogCorruptedException(String source, Throwable cause) {, +        this(source, null, cause);, +    }, +, +    public TranslogCorruptedException(String source, String details, Throwable cause) {, +        super(corruptedMessage(source, details), cause);, +    }, +, +    private static String corruptedMessage(String source, String details) {, +        String msg = "translog from source [" + source + "] is corrupted";, +        if (details != null) {, +            msg += ", " + details;, +        }, +        return msg;, +++ b/server/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java, +            throw new TranslogCorruptedException(]