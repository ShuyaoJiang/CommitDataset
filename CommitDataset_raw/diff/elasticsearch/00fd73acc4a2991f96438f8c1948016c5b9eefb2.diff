[+++ b/server/src/main/java/org/elasticsearch/index/translog/Translog.java, +        } catch (final Exception ex) {, +            closeOnTragicEvent(ex);, +            throw ex;, +    /**, +     * Closes the translog if the current translog writer experienced a tragic exception., +     *, +     * Note that in case this thread closes the translog it must not already be holding a read lock on the translog as it will acquire a, +     * write lock in the course of closing the translog, +     *, +     * @param ex if an exception occurs closing the translog, it will be suppressed into the provided exception, +     */, +        // we can not hold a read lock here because closing will attempt to obtain a write lock and that would result in self-deadlock, +        assert readLock.isHeldByCurrentThread() == false : Thread.currentThread().getName();, +                /*, +                 * Don't do anything in this case. The AlreadyClosedException comes from TranslogWriter and we should not add it as, +                 * suppressed because it will contain the provided exception as its cause. See also, +                 * https://github.com/elastic/elasticsearch/issues/15941., +                 */, +                assert ex != inner.getCause();, +++ b/server/src/main/java/org/elasticsearch/index/translog/Translog.java, +        } catch (final Exception ex) {, +            closeOnTragicEvent(ex);, +            throw ex;, +    /**, +     * Closes the translog if the current translog writer experienced a tragic exception., +     *, +     * Note that in case this thread closes the translog it must not already be holding a read lock on the translog as it will acquire a, +     * write lock in the course of closing the translog, +     *, +     * @param ex if an exception occurs closing the translog, it will be suppressed into the provided exception, +     */, +        // we can not hold a read lock here because closing will attempt to obtain a write lock and that would result in self-deadlock, +        assert readLock.isHeldByCurrentThread() == false : Thread.currentThread().getName();, +                /*, +                 * Don't do anything in this case. The AlreadyClosedException comes from TranslogWriter and we should not add it as, +                 * suppressed because it will contain the provided exception as its cause. See also, +                 * https://github.com/elastic/elasticsearch/issues/15941., +                 */, +                assert ex != inner.getCause();, +++ b/server/src/test/java/org/elasticsearch/index/translog/TranslogTests.java]