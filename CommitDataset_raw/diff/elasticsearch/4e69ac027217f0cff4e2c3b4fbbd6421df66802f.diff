[+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.Logger;, +        private static final Logger logger = ESLoggerFactory.getLogger(BulkIndexer.class.getName());, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.Logger;, +        private static final Logger logger = ESLoggerFactory.getLogger(BulkIndexer.class.getName());, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, +                       HttpHost[] hosts, FailureListener failureListener) {, +        URI uri = buildUri(endpoint, params);, +        for (Header defaultHeader : defaultHeaders) {, +            httpRequest.setHeader(defaultHeader);, +        }, +            httpRequest.setHeader(requestHeader);, +    private static URI buildUri(String path, Map<String, String> params) {, +            URIBuilder uriBuilder = new URIBuilder(path);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.Logger;, +        private static final Logger logger = ESLoggerFactory.getLogger(BulkIndexer.class.getName());, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClient.java, +                       HttpHost[] hosts, FailureListener failureListener) {, +        URI uri = buildUri(endpoint, params);, +        for (Header defaultHeader : defaultHeaders) {, +            httpRequest.setHeader(defaultHeader);, +        }, +            httpRequest.setHeader(requestHeader);, +    private static URI buildUri(String path, Map<String, String> params) {, +            URIBuilder uriBuilder = new URIBuilder(path);, +++ b/client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java, +        if (hosts == null || hosts.length == 0) {, +     * Sets the default request headers, which will be sent along with each request, +     * @throws IllegalArgumentException if maxRetryTimeoutMillis is not greater than 0, +        RestClient restClient = new RestClient(httpClient, maxRetryTimeout, defaultHeaders, hosts, failureListener);, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/doc/RestTestsFromSnippetsTask.groovy, +                current.println("\"$test.start\":"), +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy, +            provided "org.apache.logging.log4j:log4j-api:${project.versions.log4j}", +            provided "org.apache.logging.log4j:log4j-core:${project.versions.log4j}", +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            // https://github.com/elastic/elasticsearch/issues/20243, +            // precommitTasks.add(configureLoggerUsage(project)), +++ b/buildSrc/version.properties, +log4j             = 2.6.2, +++ b/client/benchmark/src/main/java/org/elasticsearch/client/benchmark/ops/bulk/BulkBenchmarkTask.java, +import org.apache.logging.log4j.Logger;, +        private static final Logger logger = ESLoggerFactory.getLogger(BulkIndexer.class.getName());]