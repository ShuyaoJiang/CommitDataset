[+++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +    GetIndexResponse(String[] indices,, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +    GetIndexResponse(String[] indices,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java, +        listener.onResponse(new GetIndexResponse(concreteIndices, mappingsResult, aliasesResult, settings));, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +    GetIndexResponse(String[] indices,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java, +        listener.onResponse(new GetIndexResponse(concreteIndices, mappingsResult, aliasesResult, settings));, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +    GetIndexResponse(String[] indices,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java, +        listener.onResponse(new GetIndexResponse(concreteIndices, mappingsResult, aliasesResult, settings));, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +    GetIndexResponse(String[] indices,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java, +        listener.onResponse(new GetIndexResponse(concreteIndices, mappingsResult, aliasesResult, settings));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +    GetIndexResponse(String[] indices,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java, +        listener.onResponse(new GetIndexResponse(concreteIndices, mappingsResult, aliasesResult, settings));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java, +    GetIndexResponse(String[] indices,, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java, +        listener.onResponse(new GetIndexResponse(concreteIndices, mappingsResult, aliasesResult, settings));, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/ElasticsearchException.java, +        // 93 used to be for IndexWarmerMissingException, +++ b/core/src/main/java/org/elasticsearch/action/ActionModule.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java, +        SETTINGS((byte) 2, "_settings");, +    private static final Feature[] DEFAULT_FEATURES = new Feature[] { Feature.ALIASES, Feature.MAPPINGS, Feature.SETTINGS };]