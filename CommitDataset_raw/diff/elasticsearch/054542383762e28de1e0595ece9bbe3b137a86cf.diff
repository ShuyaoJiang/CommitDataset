[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +        @Override public Builder indexName(String indexName) {, +            return super.indexName(indexName);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +        @Override public Builder indexName(String indexName) {, +            return super.indexName(indexName);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBooleanFieldMapper.java, +        @Override public Builder index(Field.Index index) {, +            return super.index(index);, +        }, +, +        @Override public Builder store(Field.Store store) {, +            return super.store(store);, +        }, +, +        @Override public Builder termVector(Field.TermVector termVector) {, +            return super.termVector(termVector);, +        }, +, +        @Override public Builder boost(float boost) {, +            return super.boost(boost);, +        }, +, +        @Override public Builder indexName(String indexName) {, +            return super.indexName(indexName);, +        }, +, +        @Override public Builder omitTermFreqAndPositions(boolean omitTermFreqAndPositions) {, +            return super.omitTermFreqAndPositions(omitTermFreqAndPositions);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +        @Override public Builder indexName(String indexName) {, +            return super.indexName(indexName);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBooleanFieldMapper.java, +        @Override public Builder index(Field.Index index) {, +            return super.index(index);, +        }, +, +        @Override public Builder store(Field.Store store) {, +            return super.store(store);, +        }, +, +        @Override public Builder termVector(Field.TermVector termVector) {, +            return super.termVector(termVector);, +        }, +, +        @Override public Builder boost(float boost) {, +            return super.boost(boost);, +        }, +, +        @Override public Builder indexName(String indexName) {, +            return super.indexName(indexName);, +        }, +, +        @Override public Builder omitTermFreqAndPositions(boolean omitTermFreqAndPositions) {, +            return super.omitTermFreqAndPositions(omitTermFreqAndPositions);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonDocumentMapperParser.java, +//        String name = uidNode.get("name") == null ? JsonUidFieldMapper.Defaults.NAME : uidNode.get("name").getTextValue();, +        JsonUidFieldMapper.Builder builder = uid();, +//        for (Iterator<Map.Entry<String, JsonNode>> fieldsIt = uidNode.getFields(); fieldsIt.hasNext();) {, +//            Map.Entry<String, JsonNode> entry = fieldsIt.next();, +//            String fieldName = entry.getKey();, +//            JsonNode fieldNode = entry.getValue();, +//, +//            if ("indexName".equals(fieldName)) {, +//                builder.indexName(fieldNode.getTextValue());, +//            }, +//        }, +//        String name = typeNode.get("name") == null ? JsonTypeFieldMapper.Defaults.NAME : typeNode.get("name").getTextValue();, +        JsonTypeFieldMapper.Builder builder = type();, +        parseJsonField(builder, builder.name, typeNode);, +//        String name = idNode.get("name") == null ? JsonIdFieldMapper.Defaults.NAME : idNode.get("name").getTextValue();, +        JsonIdFieldMapper.Builder builder = id();, +        parseJsonField(builder, builder.name, idNode);, +//        String name = sourceNode.get("name") == null ? JsonSourceFieldMapper.Defaults.NAME : sourceNode.get("name").getTextValue();, +        JsonSourceFieldMapper.Builder builder = source();, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBinaryFieldMapper.java, +        @Override public Builder indexName(String indexName) {, +            return super.indexName(indexName);, +        }, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/mapper/json/JsonBooleanFieldMapper.java, +        @Override public Builder index(Field.Index index) {, +            return super.index(index);, +        }, +, +        @Override public Builder store(Field.Store store) {, +            return super.store(store);, +        }, +, +        @Override public Builder termVector(Field.TermVector termVector) {]