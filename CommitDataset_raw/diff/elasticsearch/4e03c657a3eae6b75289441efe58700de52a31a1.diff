[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +                        parser -> MlMetadata.METADATA_PARSER.parse(parser, null).build()),, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/docs/en/rest-api/ml/update-job.asciidoc, +    "model_memory_limit": "1024mb", +    "model_memory_limit": "1024mb", +++ b/plugin/build.gradle, +  compile 'com.google.guava:guava:16.0.1' // needed by watcher for the html sanitizer and security tests for jimfs, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MachineLearning.java, +                        parser -> MlMetadata.METADATA_PARSER.parse(parser, null).build()),, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/MlMetadata.java, +    // This parser follows the pattern that metadata is parsed leniently (to allow for enhancements), +    public static final ObjectParser<Builder, Void> METADATA_PARSER = new ObjectParser<>("ml_metadata", true, Builder::new);, +        METADATA_PARSER.declareObjectArray(Builder::putJobs, (p, c) -> Job.METADATA_PARSER.apply(p, c).build(), JOBS_FIELD);, +        METADATA_PARSER.declareObjectArray(Builder::putDatafeeds,, +                (p, c) -> DatafeedConfig.METADATA_PARSER.apply(p, c).build(), DATAFEEDS_FIELD);, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential']]