[+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public CancelTasksResponse(DiscoveryNodes discoveryNodes) {, +        super(discoveryNodes);, +    }, +, +        nodeFailures, DiscoveryNodes discoveryNodes) {, +        super(tasks, taskFailures, nodeFailures, discoveryNodes);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public CancelTasksResponse(DiscoveryNodes discoveryNodes) {, +        super(discoveryNodes);, +    }, +, +        nodeFailures, DiscoveryNodes discoveryNodes) {, +        super(tasks, taskFailures, nodeFailures, discoveryNodes);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +            indexNameExpressionResolver, CancelTasksRequest::new, () -> new CancelTasksResponse(clusterService.state().nodes()),, +            ThreadPool.Names.MANAGEMENT);, +        return new CancelTasksResponse(tasks, taskOperationFailures, failedNodeExceptions, clusterService.state().nodes());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public CancelTasksResponse(DiscoveryNodes discoveryNodes) {, +        super(discoveryNodes);, +    }, +, +        nodeFailures, DiscoveryNodes discoveryNodes) {, +        super(tasks, taskFailures, nodeFailures, discoveryNodes);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +            indexNameExpressionResolver, CancelTasksRequest::new, () -> new CancelTasksResponse(clusterService.state().nodes()),, +            ThreadPool.Names.MANAGEMENT);, +        return new CancelTasksResponse(tasks, taskOperationFailures, failedNodeExceptions, clusterService.state().nodes());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/ListTasksResponse.java, +    private final DiscoveryNodes discoveryNodes;, +        this(null, null, null, null);, +    }, +, +    public ListTasksResponse(DiscoveryNodes discoveryNodes) {, +        this(null, null, null, discoveryNodes);, +            List<? extends FailedNodeException> nodeFailures, DiscoveryNodes discoveryNodes) {, +        this.discoveryNodes = discoveryNodes;, +        return Strings.toString(this, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public CancelTasksResponse(DiscoveryNodes discoveryNodes) {, +        super(discoveryNodes);, +    }, +, +        nodeFailures, DiscoveryNodes discoveryNodes) {, +        super(tasks, taskFailures, nodeFailures, discoveryNodes);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +            indexNameExpressionResolver, CancelTasksRequest::new, () -> new CancelTasksResponse(clusterService.state().nodes()),, +            ThreadPool.Names.MANAGEMENT);, +        return new CancelTasksResponse(tasks, taskOperationFailures, failedNodeExceptions, clusterService.state().nodes());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/ListTasksResponse.java, +    private final DiscoveryNodes discoveryNodes;, +        this(null, null, null, null);, +    }, +, +    public ListTasksResponse(DiscoveryNodes discoveryNodes) {, +        this(null, null, null, discoveryNodes);, +            List<? extends FailedNodeException> nodeFailures, DiscoveryNodes discoveryNodes) {, +        this.discoveryNodes = discoveryNodes;, +        return Strings.toString(this, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +            indexNameExpressionResolver, ListTasksRequest::new, () -> new ListTasksResponse(clusterService.state().nodes()),, +            ThreadPool.Names.MANAGEMENT);, +        return new ListTasksResponse(tasks, taskOperationFailures, failedNodeExceptions, clusterService.state().nodes());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public CancelTasksResponse(DiscoveryNodes discoveryNodes) {, +        super(discoveryNodes);, +    }, +, +        nodeFailures, DiscoveryNodes discoveryNodes) {, +        super(tasks, taskFailures, nodeFailures, discoveryNodes);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java, +            indexNameExpressionResolver, CancelTasksRequest::new, () -> new CancelTasksResponse(clusterService.state().nodes()),, +            ThreadPool.Names.MANAGEMENT);, +        return new CancelTasksResponse(tasks, taskOperationFailures, failedNodeExceptions, clusterService.state().nodes());, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/ListTasksResponse.java, +    private final DiscoveryNodes discoveryNodes;, +        this(null, null, null, null);, +    }, +, +    public ListTasksResponse(DiscoveryNodes discoveryNodes) {, +        this(null, null, null, discoveryNodes);, +            List<? extends FailedNodeException> nodeFailures, DiscoveryNodes discoveryNodes) {, +        this.discoveryNodes = discoveryNodes;, +        return Strings.toString(this, true);, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java, +            indexNameExpressionResolver, ListTasksRequest::new, () -> new ListTasksResponse(clusterService.state().nodes()),, +            ThreadPool.Names.MANAGEMENT);, +        return new ListTasksResponse(tasks, taskOperationFailures, failedNodeExceptions, clusterService.state().nodes());, +++ b/core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestListTasksAction.java, +++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/CancelTasksResponse.java, +import org.elasticsearch.cluster.node.DiscoveryNodes;, +    public CancelTasksResponse(DiscoveryNodes discoveryNodes) {, +        super(discoveryNodes);, +    }]