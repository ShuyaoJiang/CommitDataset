[+++ b/src/main/java/org/elasticsearch/watcher/execution/CurrentExecutions.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +                throw new WatcherInactiveException("could not register execution [{}]. current executions are sealed and forbid registrations of additional executions.", id);, +++ b/src/main/java/org/elasticsearch/watcher/execution/CurrentExecutions.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +                throw new WatcherInactiveException("could not register execution [{}]. current executions are sealed and forbid registrations of additional executions.", id);, +++ b/src/main/java/org/elasticsearch/watcher/execution/ExecutionService.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +            try {, +            } catch (WatcherInactiveException e) {, +                // When can end up here when acquiring the lock or adding a watch to the current executions while shutting down., +                // Once we a watch is added to the current executions we shouldn't end up here., +                logger.debug("could not execute watch [{}]/[{}]. watcher is not active", e, ctx.watch().id(), ctx.id());, +            } catch (Exception e) {, +                logger.error("could not execute watch [{}]/[{}]", e, ctx.watch().id(), ctx.id());, +            }, +++ b/src/main/java/org/elasticsearch/watcher/execution/CurrentExecutions.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +                throw new WatcherInactiveException("could not register execution [{}]. current executions are sealed and forbid registrations of additional executions.", id);, +++ b/src/main/java/org/elasticsearch/watcher/execution/ExecutionService.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +            try {, +            } catch (WatcherInactiveException e) {, +                // When can end up here when acquiring the lock or adding a watch to the current executions while shutting down., +                // Once we a watch is added to the current executions we shouldn't end up here., +                logger.debug("could not execute watch [{}]/[{}]. watcher is not active", e, ctx.watch().id(), ctx.id());, +            } catch (Exception e) {, +                logger.error("could not execute watch [{}]/[{}]", e, ctx.watch().id(), ctx.id());, +            }, +++ b/src/main/java/org/elasticsearch/watcher/support/WatcherInactiveException.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.watcher.support;, +, +import org.elasticsearch.watcher.WatcherException;, +, +public class WatcherInactiveException extends WatcherException {, +, +    public WatcherInactiveException(String msg, Object... args) {, +        super(msg, args);, +    }, +, +    public WatcherInactiveException(String msg, Throwable cause, Object... args) {, +        super(msg, cause, args);, +    }, +}, +++ b/src/main/java/org/elasticsearch/watcher/execution/CurrentExecutions.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +                throw new WatcherInactiveException("could not register execution [{}]. current executions are sealed and forbid registrations of additional executions.", id);, +++ b/src/main/java/org/elasticsearch/watcher/execution/ExecutionService.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +            try {, +            } catch (WatcherInactiveException e) {, +                // When can end up here when acquiring the lock or adding a watch to the current executions while shutting down., +                // Once we a watch is added to the current executions we shouldn't end up here., +                logger.debug("could not execute watch [{}]/[{}]. watcher is not active", e, ctx.watch().id(), ctx.id());, +            } catch (Exception e) {, +                logger.error("could not execute watch [{}]/[{}]", e, ctx.watch().id(), ctx.id());, +            }, +++ b/src/main/java/org/elasticsearch/watcher/support/WatcherInactiveException.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.watcher.support;, +, +import org.elasticsearch.watcher.WatcherException;, +, +public class WatcherInactiveException extends WatcherException {, +, +    public WatcherInactiveException(String msg, Object... args) {, +        super(msg, args);, +    }, +, +    public WatcherInactiveException(String msg, Throwable cause, Object... args) {, +        super(msg, cause, args);, +    }, +}, +++ b/src/main/java/org/elasticsearch/watcher/watch/WatchLockService.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +            throw new WatcherInactiveException("not started");, +            throw new WatcherInactiveException("not started");, +++ b/src/main/java/org/elasticsearch/watcher/execution/CurrentExecutions.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +                throw new WatcherInactiveException("could not register execution [{}]. current executions are sealed and forbid registrations of additional executions.", id);, +++ b/src/main/java/org/elasticsearch/watcher/execution/ExecutionService.java, +import org.elasticsearch.watcher.support.WatcherInactiveException;, +            try {, +            } catch (WatcherInactiveException e) {, +                // When can end up here when acquiring the lock or adding a watch to the current executions while shutting down., +                // Once we a watch is added to the current executions we shouldn't end up here., +                logger.debug("could not execute watch [{}]/[{}]. watcher is not active", e, ctx.watch().id(), ctx.id());, +            } catch (Exception e) {, +                logger.error("could not execute watch [{}]/[{}]", e, ctx.watch().id(), ctx.id());, +            }, +++ b/src/main/java/org/elasticsearch/watcher/support/WatcherInactiveException.java]