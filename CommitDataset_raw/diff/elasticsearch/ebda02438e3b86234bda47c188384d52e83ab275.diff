[+++ b/rest-api-spec/test/execute_watch/10_basic.yaml, +++ b/rest-api-spec/test/execute_watch/10_basic.yaml, +++ b/rest-api-spec/test/execute_watch/20_empty_body.yaml, +++ b/rest-api-spec/test/execute_watch/10_basic.yaml, +++ b/rest-api-spec/test/execute_watch/20_empty_body.yaml, +++ b/rest-api-spec/test/get_watch/10_basic.yaml, +              }, +            ], +++ b/rest-api-spec/test/execute_watch/10_basic.yaml, +++ b/rest-api-spec/test/execute_watch/20_empty_body.yaml, +++ b/rest-api-spec/test/get_watch/10_basic.yaml, +              }, +            ], +++ b/src/main/java/org/elasticsearch/watcher/client/WatchSourceBuilder.java, +import org.elasticsearch.watcher.input.none.NoneInput;, +    private Input input = NoneInput.INSTANCE;, +    public WatchSourceBuilder input(Input.Builder input) {, +        return input(input.build());, +    }, +, +    public WatchSourceBuilder input(Input input) {, +++ b/rest-api-spec/test/execute_watch/10_basic.yaml, +++ b/rest-api-spec/test/execute_watch/20_empty_body.yaml, +++ b/rest-api-spec/test/get_watch/10_basic.yaml, +              }, +            ], +++ b/src/main/java/org/elasticsearch/watcher/client/WatchSourceBuilder.java, +import org.elasticsearch.watcher.input.none.NoneInput;, +    private Input input = NoneInput.INSTANCE;, +    public WatchSourceBuilder input(Input.Builder input) {, +        return input(input.build());, +    }, +, +    public WatchSourceBuilder input(Input input) {, +++ b/src/main/java/org/elasticsearch/watcher/execution/ManualExecutionContext.java, +import org.elasticsearch.watcher.input.ExecutableInput;, +++ b/rest-api-spec/test/execute_watch/10_basic.yaml, +++ b/rest-api-spec/test/execute_watch/20_empty_body.yaml, +++ b/rest-api-spec/test/get_watch/10_basic.yaml, +              }, +            ], +++ b/src/main/java/org/elasticsearch/watcher/client/WatchSourceBuilder.java, +import org.elasticsearch.watcher.input.none.NoneInput;, +    private Input input = NoneInput.INSTANCE;, +    public WatchSourceBuilder input(Input.Builder input) {, +        return input(input.build());, +    }, +, +    public WatchSourceBuilder input(Input input) {, +++ b/src/main/java/org/elasticsearch/watcher/execution/ManualExecutionContext.java, +import org.elasticsearch.watcher.input.ExecutableInput;, +++ b/src/main/java/org/elasticsearch/watcher/history/WatchRecord.java, +import org.elasticsearch.watcher.input.ExecutableInput;, +    private ExecutableInput input;, +    public ExecutableInput input() { return input; }, +                        record.input = inputRegistry.parse(id, parser);, +++ b/rest-api-spec/test/execute_watch/10_basic.yaml, +++ b/rest-api-spec/test/execute_watch/20_empty_body.yaml, +++ b/rest-api-spec/test/get_watch/10_basic.yaml, +              }, +            ], +++ b/src/main/java/org/elasticsearch/watcher/client/WatchSourceBuilder.java, +import org.elasticsearch.watcher.input.none.NoneInput;, +    private Input input = NoneInput.INSTANCE;, +    public WatchSourceBuilder input(Input.Builder input) {, +        return input(input.build());, +    }, +, +    public WatchSourceBuilder input(Input input) {, +++ b/src/main/java/org/elasticsearch/watcher/execution/ManualExecutionContext.java, +import org.elasticsearch.watcher.input.ExecutableInput;, +++ b/src/main/java/org/elasticsearch/watcher/history/WatchRecord.java, +import org.elasticsearch.watcher.input.ExecutableInput;, +    private ExecutableInput input;, +    public ExecutableInput input() { return input; }, +                        record.input = inputRegistry.parse(id, parser);, +++ b/src/main/java/org/elasticsearch/watcher/input/ExecutableInput.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.watcher.input;, +, +import org.elasticsearch.common.logging.ESLogger;, +import org.elasticsearch.common.xcontent.ToXContent;, +import org.elasticsearch.common.xcontent.XContentBuilder;, +import org.elasticsearch.watcher.execution.WatchExecutionContext;, +, +import java.io.IOException;, +, +/**, + *, + */, +public abstract class ExecutableInput<I extends Input, R extends Input.Result> implements ToXContent {, +, +    protected final I input;, +    protected final ESLogger logger;, +, +    protected ExecutableInput(I input, ESLogger logger) {]