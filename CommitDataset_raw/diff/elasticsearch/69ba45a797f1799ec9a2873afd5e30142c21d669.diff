[+++ b/core/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +import org.elasticsearch.ElasticsearchParseException;, +        Properties props = new NoDuplicatesProperties();, +        Properties props = new NoDuplicatesProperties();, +, +    class NoDuplicatesProperties extends Properties {, +        @Override, +        public synchronized Object put(Object key, Object value) {, +            Object previousValue = super.put(key, value);, +            if (previousValue != null) {, +                throw new ElasticsearchParseException("duplicate settings key [{}] found, previous value [{}], current value [{}]", key, previousValue, value);, +            }, +            return previousValue;, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +import org.elasticsearch.ElasticsearchParseException;, +        Properties props = new NoDuplicatesProperties();, +        Properties props = new NoDuplicatesProperties();, +, +    class NoDuplicatesProperties extends Properties {, +        @Override, +        public synchronized Object put(Object key, Object value) {, +            Object previousValue = super.put(key, value);, +            if (previousValue != null) {, +                throw new ElasticsearchParseException("duplicate settings key [{}] found, previous value [{}], current value [{}]", key, previousValue, value);, +            }, +            return previousValue;, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/XContentSettingsLoader.java, +        String key = sb.toString();, +        String currentValue = parser.text();, +        String previousValue = settings.put(key, currentValue);, +        if (previousValue != null) {, +            throw new ElasticsearchParseException(, +                    "duplicate settings key [{}] found at line number [{}], column number [{}], previous value [{}], current value [{}]",, +                    key,, +                    parser.getTokenLocation().lineNumber,, +                    parser.getTokenLocation().columnNumber,, +                    previousValue,, +                    currentValue, +            );, +    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +import org.elasticsearch.ElasticsearchParseException;, +        Properties props = new NoDuplicatesProperties();, +        Properties props = new NoDuplicatesProperties();, +, +    class NoDuplicatesProperties extends Properties {, +        @Override, +        public synchronized Object put(Object key, Object value) {, +            Object previousValue = super.put(key, value);, +            if (previousValue != null) {, +                throw new ElasticsearchParseException("duplicate settings key [{}] found, previous value [{}], current value [{}]", key, previousValue, value);, +            }, +            return previousValue;, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/XContentSettingsLoader.java, +        String key = sb.toString();, +        String currentValue = parser.text();, +        String previousValue = settings.put(key, currentValue);, +        if (previousValue != null) {, +            throw new ElasticsearchParseException(, +                    "duplicate settings key [{}] found at line number [{}], column number [{}], previous value [{}], current value [{}]",, +                    key,, +                    parser.getTokenLocation().lineNumber,, +                    parser.getTokenLocation().columnNumber,, +                    previousValue,, +                    currentValue, +            );, +    }, +++ b/core/src/test/java/org/elasticsearch/common/settings/loader/JsonSettingsLoaderTests.java, +import org.elasticsearch.ElasticsearchParseException;, +import org.elasticsearch.common.settings.SettingsException;, +, +    public void testDuplicateKeysThrowsException() {, +        String json = "{\"foo\":\"bar\",\"foo\":\"baz\"}";, +        try {, +            settingsBuilder(), +                    .loadFromSource(json), +                    .build();, +            fail("expected exception");, +        } catch (SettingsException e) {, +            assertEquals(e.getCause().getClass(), ElasticsearchParseException.class);, +            assertTrue(e.toString().contains("duplicate settings key [foo] found at line number [1], column number [13], previous value [bar], current value [baz]"));, +        }, +    }, +++ b/core/src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java, +import org.elasticsearch.ElasticsearchParseException;, +        Properties props = new NoDuplicatesProperties();, +        Properties props = new NoDuplicatesProperties();, +, +    class NoDuplicatesProperties extends Properties {, +        @Override, +        public synchronized Object put(Object key, Object value) {, +            Object previousValue = super.put(key, value);, +            if (previousValue != null) {, +                throw new ElasticsearchParseException("duplicate settings key [{}] found, previous value [{}], current value [{}]", key, previousValue, value);]