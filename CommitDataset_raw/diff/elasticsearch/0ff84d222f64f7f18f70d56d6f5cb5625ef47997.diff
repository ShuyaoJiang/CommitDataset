[+++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/io/ThrowableObjectInputStream.java, +import org.elasticsearch.common.Classes;, +, +            classLoader = Classes.getDefaultClassLoader();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/io/ThrowableObjectInputStream.java, +import org.elasticsearch.common.Classes;, +, +            classLoader = Classes.getDefaultClassLoader();, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +        this.classLoader = classLoader;, +        return this.classLoader == null ? Classes.getDefaultClassLoader() : classLoader;, +    }, +, +    @Override, +    public ClassLoader getClassLoaderIfSet() {, +            classLoader = settings.getClassLoaderIfSet();, +                classLoader = Classes.getDefaultClassLoader();, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/io/ThrowableObjectInputStream.java, +import org.elasticsearch.common.Classes;, +, +            classLoader = Classes.getDefaultClassLoader();, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +        this.classLoader = classLoader;, +        return this.classLoader == null ? Classes.getDefaultClassLoader() : classLoader;, +    }, +, +    @Override, +    public ClassLoader getClassLoaderIfSet() {, +            classLoader = settings.getClassLoaderIfSet();, +                classLoader = Classes.getDefaultClassLoader();, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +import org.elasticsearch.common.Nullable;, +     * The class loader associated with this settings, or {@link org.elasticsearch.common.Classes#getDefaultClassLoader()}, +     * if not set., +     * The class loader associated with this settings, but only if explicitly set, otherwise <tt>null</tt>., +     */, +    @Nullable, +    ClassLoader getClassLoaderIfSet();, +, +    /**, +++ b/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java, +            tuple.v1().getClassLoader().loadClass("org.apache.log4j.Logger");, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/src/main/java/org/elasticsearch/common/io/ThrowableObjectInputStream.java, +import org.elasticsearch.common.Classes;, +, +            classLoader = Classes.getDefaultClassLoader();, +++ b/src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java, +        this.classLoader = classLoader;, +        return this.classLoader == null ? Classes.getDefaultClassLoader() : classLoader;, +    }, +, +    @Override, +    public ClassLoader getClassLoaderIfSet() {, +            classLoader = settings.getClassLoaderIfSet();, +                classLoader = Classes.getDefaultClassLoader();, +++ b/src/main/java/org/elasticsearch/common/settings/Settings.java, +import org.elasticsearch.common.Nullable;, +     * The class loader associated with this settings, or {@link org.elasticsearch.common.Classes#getDefaultClassLoader()}, +     * if not set., +     * The class loader associated with this settings, but only if explicitly set, otherwise <tt>null</tt>., +     */, +    @Nullable, +    ClassLoader getClassLoaderIfSet();, +, +    /**, +++ b/src/main/java/org/elasticsearch/env/Environment.java, +    private final Settings settings;, +]