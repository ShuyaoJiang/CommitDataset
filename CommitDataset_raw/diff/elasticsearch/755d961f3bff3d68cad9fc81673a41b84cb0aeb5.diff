[+++ b/README.asciidoc, +* Use the dev-tools/xes-release-notes.pl script to pull PRs from the x-pack-elasticsearch repo.  Alternatively, use the dev-tools/xescpp_release_notes.pl script to pull PRs from both the x-pack-elasticsearch and machine-learning-cpp repos., +++ b/README.asciidoc, +* Use the dev-tools/xes-release-notes.pl script to pull PRs from the x-pack-elasticsearch repo.  Alternatively, use the dev-tools/xescpp_release_notes.pl script to pull PRs from both the x-pack-elasticsearch and machine-learning-cpp repos., +++ b/dev-tools/xescpp_release_notes.pl, +#!/usr/bin/env perl, +# Licensed to Elasticsearch under one or more contributor, +# license agreements. See the NOTICE file distributed with, +# this work for additional information regarding copyright, +# ownership. Elasticsearch licenses this file to you under, +# the Apache License, Version 2.0 (the "License"); you may, +# not use this file except in compliance  with the License., +# You may obtain a copy of the License at, +#, +#     http://www.apache.org/licenses/LICENSE-2.0, +#, +# Unless required by applicable law or agreed to in writing,, +# software distributed under the License is distributed on, +# an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,, +# either express or implied. See the License for the specific, +# language governing permissions and limitations under the License., +, +use strict;, +use warnings;, +, +use HTTP::Tiny 0.070;, +use IO::Socket::SSL 1.52;, +use utf8;, +, +my $Github_Key = load_github_key();, +my $Base_URL   = "https://${Github_Key}api.github.com/repos/";, +my $User_Repo1  = 'elastic/x-pack-elasticsearch/';, +my $Issue_URL1  = "http://github.com/${User_Repo1}issues/";, +my $User_Repo2  = 'elastic/machine-learning-cpp/';, +my $Issue_URL2  = "http://github.com/${User_Repo2}issues/";, +, +my @Groups = (, +    "breaking", "breaking-java", "deprecation", "feature",, +    "enhancement", "bug", "regression", "upgrade", "non-issue", "build",, +    "docs",        "test", +);, +my %Group_Labels = (, +    breaking        => 'Breaking changes',, +    'breaking-java' => 'Breaking Java changes',, +    build           => 'Build',, +    deprecation     => 'Deprecations',, +    docs            => 'Docs',, +    feature         => 'New features',, +    enhancement     => 'Enhancements',, +    bug             => 'Bug fixes',, +    regression      => 'Regressions',, +    test            => 'Tests',, +    upgrade         => 'Upgrades',, +    "non-issue"     => 'Non-issue',, +    other           => 'NOT CLASSIFIED',, +);, +, +use JSON();, +use Encode qw(encode_utf8);, +, +my $json = JSON->new->utf8(1);, +, +my %All_Labels1 = fetch_labels($User_Repo1);, +, +my $version = shift @ARGV, +    or dump_labels();, +, +dump_labels(%All_Labels1, "Unknown version '$version'"), +    unless $All_Labels1{$version};, +, +my $issues1 = fetch_issues($User_Repo1, $version);, +, +# Repeat steps for second repo, +, +my %All_Labels2 = fetch_labels($User_Repo2);, +, +dump_labels(%All_Labels2, "Unknown version '$version'"), +    unless $All_Labels2{$version};, +, +my $issues2 = fetch_issues($User_Repo2, $version);, +, +dump_issues( $User_Repo1, $version, $issues1 );, +dump_issues( $User_Repo2, $version, $issues2 );, +, +#===================================, +sub dump_issues {, +#===================================, +    my $User_Repo = shift;, +    my $version = shift;, +    my $issues  = shift;, +, +    $version =~ s/v//;, +    my ( $day, $month, $year ) = (gmtime)[ 3 .. 5 ];, +    $month++;, +    $year += 1900;, +, +    print <<"ASCIIDOC";, +, +[[release-notes-$version]], +== X-Pack $version Release Notes]