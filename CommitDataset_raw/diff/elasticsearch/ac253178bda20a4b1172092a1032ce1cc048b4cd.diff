[+++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                        if (field.equals(RoutingFieldMapper.NAME) && docMapper.routingFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(ParentFieldMapper.NAME) && docMapper.parentFieldMapper() != null && docMapper.parentFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TimestampFieldMapper.NAME) && docMapper.timestampFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TTLFieldMapper.NAME) && docMapper.TTLFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(SizeFieldMapper.NAME) && docMapper.rootMapper(SizeFieldMapper.class).fieldType().stored()) {, +                                if (docMapper.sourceMapper().enabled() || x == null || x.fieldType().stored()) {, +                    if (x == null || !x.mapper().fieldType().stored()) {, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                        if (field.equals(RoutingFieldMapper.NAME) && docMapper.routingFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(ParentFieldMapper.NAME) && docMapper.parentFieldMapper() != null && docMapper.parentFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TimestampFieldMapper.NAME) && docMapper.timestampFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TTLFieldMapper.NAME) && docMapper.TTLFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(SizeFieldMapper.NAME) && docMapper.rootMapper(SizeFieldMapper.class).fieldType().stored()) {, +                                if (docMapper.sourceMapper().enabled() || x == null || x.fieldType().stored()) {, +                    if (x == null || !x.mapper().fieldType().stored()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.document.FieldType;, +    FieldType fieldType();, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                        if (field.equals(RoutingFieldMapper.NAME) && docMapper.routingFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(ParentFieldMapper.NAME) && docMapper.parentFieldMapper() != null && docMapper.parentFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TimestampFieldMapper.NAME) && docMapper.timestampFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TTLFieldMapper.NAME) && docMapper.TTLFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(SizeFieldMapper.NAME) && docMapper.rootMapper(SizeFieldMapper.class).fieldType().stored()) {, +                                if (docMapper.sourceMapper().enabled() || x == null || x.fieldType().stored()) {, +                    if (x == null || !x.mapper().fieldType().stored()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.document.FieldType;, +    FieldType fieldType();, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            if (!docMapper.typeMapper().fieldType().indexed()) {, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                        if (field.equals(RoutingFieldMapper.NAME) && docMapper.routingFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(ParentFieldMapper.NAME) && docMapper.parentFieldMapper() != null && docMapper.parentFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TimestampFieldMapper.NAME) && docMapper.timestampFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TTLFieldMapper.NAME) && docMapper.TTLFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(SizeFieldMapper.NAME) && docMapper.rootMapper(SizeFieldMapper.class).fieldType().stored()) {, +                                if (docMapper.sourceMapper().enabled() || x == null || x.fieldType().stored()) {, +                    if (x == null || !x.mapper().fieldType().stored()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.document.FieldType;, +    FieldType fieldType();, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            if (!docMapper.typeMapper().fieldType().indexed()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/ParseContext.java, +        return includeInAll(includeInAll, mapper.fieldType().indexed());, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                        if (field.equals(RoutingFieldMapper.NAME) && docMapper.routingFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(ParentFieldMapper.NAME) && docMapper.parentFieldMapper() != null && docMapper.parentFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TimestampFieldMapper.NAME) && docMapper.timestampFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TTLFieldMapper.NAME) && docMapper.TTLFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(SizeFieldMapper.NAME) && docMapper.rootMapper(SizeFieldMapper.class).fieldType().stored()) {, +                                if (docMapper.sourceMapper().enabled() || x == null || x.fieldType().stored()) {, +                    if (x == null || !x.mapper().fieldType().stored()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.document.FieldType;, +    FieldType fieldType();, +++ b/src/main/java/org/elasticsearch/index/mapper/MapperService.java, +            if (!docMapper.typeMapper().fieldType().indexed()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/ParseContext.java, +        return includeInAll(includeInAll, mapper.fieldType().indexed());, +++ b/src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java, +    public FieldType fieldType() {, +        return fieldType;, +        if (this.fieldType().indexed() != fieldMergeWith.fieldType().indexed() || this.fieldType().tokenized() != fieldMergeWith.fieldType().tokenized()) {, +        if (this.fieldType().stored() != fieldMergeWith.fieldType().stored()) {, +        if (this.fieldType().tokenized() != fieldMergeWith.fieldType().tokenized()) {, +        if (this.fieldType().storeTermVectors() != fieldMergeWith.fieldType().storeTermVectors()) {, +        if (this.fieldType().storeTermVectorOffsets() != fieldMergeWith.fieldType().storeTermVectorOffsets()) {, +        if (this.fieldType().storeTermVectorPositions() != fieldMergeWith.fieldType().storeTermVectorPositions()) {, +        if (this.fieldType().storeTermVectorPayloads() != fieldMergeWith.fieldType().storeTermVectorPayloads()) {, +        if (fieldType.indexed() != defaultFieldType.indexed() ||, +                fieldType.tokenized() != defaultFieldType.tokenized()) {, +            builder.field("index", indexTokenizeOptionToString(fieldType.indexed(), fieldType.tokenized()));, +        if (fieldType.stored() != defaultFieldType.stored()) {, +            builder.field("store", fieldType.stored());, +        if (fieldType.storeTermVectors() != defaultFieldType.storeTermVectors()) {, +            builder.field("store_term_vector", fieldType.storeTermVectors());, +        if (fieldType.storeTermVectorOffsets() != defaultFieldType.storeTermVectorOffsets()) {, +            builder.field("store_term_vector_offsets", fieldType.storeTermVectorOffsets());, +        if (fieldType.storeTermVectorPositions() != defaultFieldType.storeTermVectorPositions()) {, +            builder.field("store_term_vector_positions", fieldType.storeTermVectorPositions());, +        if (fieldType.storeTermVectorPayloads() != defaultFieldType.storeTermVectorPayloads()) {, +            builder.field("store_term_vector_payloads", fieldType.storeTermVectorPayloads());, +        if (fieldType.omitNorms() != defaultFieldType.omitNorms()) {, +            builder.field("omit_norms", fieldType.omitNorms());, +        if (fieldType.indexOptions() != defaultFieldType.indexOptions()) {, +            builder.field("index_options", indexOptionToString(fieldType.indexOptions()));, +++ b/src/main/java/org/elasticsearch/index/get/ShardGetService.java, +                        if (field.equals(RoutingFieldMapper.NAME) && docMapper.routingFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(ParentFieldMapper.NAME) && docMapper.parentFieldMapper() != null && docMapper.parentFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TimestampFieldMapper.NAME) && docMapper.timestampFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(TTLFieldMapper.NAME) && docMapper.TTLFieldMapper().fieldType().stored()) {, +                        } else if (field.equals(SizeFieldMapper.NAME) && docMapper.rootMapper(SizeFieldMapper.class).fieldType().stored()) {, +                                if (docMapper.sourceMapper().enabled() || x == null || x.fieldType().stored()) {, +                    if (x == null || !x.mapper().fieldType().stored()) {, +++ b/src/main/java/org/elasticsearch/index/mapper/FieldMapper.java, +import org.apache.lucene.document.FieldType;, +    FieldType fieldType();]