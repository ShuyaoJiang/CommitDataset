[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +                            new VersionConflictEngineException(shardId, "id", "test")));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +                            new VersionConflictEngineException(shardId, "id", "test")));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFailureTests.java, +            assertThat(failure.getMessage(), containsString("VersionConflictEngineException[["));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +                            new VersionConflictEngineException(shardId, "id", "test")));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFailureTests.java, +            assertThat(failure.getMessage(), containsString("VersionConflictEngineException[["));, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/delete_by_query/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.current.version.\\[\\d+\\].is.different.than.the.one.provided.\\[\\d+\\]/"}, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.required.seqNo.\\[\\d+\\]/"}, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +                            new VersionConflictEngineException(shardId, "id", "test")));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFailureTests.java, +            assertThat(failure.getMessage(), containsString("VersionConflictEngineException[["));, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/delete_by_query/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.current.version.\\[\\d+\\].is.different.than.the.one.provided.\\[\\d+\\]/"}, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.required.seqNo.\\[\\d+\\]/"}, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/reindex/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.document.already.exists.\\(current.version.\\[\\d+\\]\\)/"}, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +                            new VersionConflictEngineException(shardId, "id", "test")));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFailureTests.java, +            assertThat(failure.getMessage(), containsString("VersionConflictEngineException[["));, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/delete_by_query/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.current.version.\\[\\d+\\].is.different.than.the.one.provided.\\[\\d+\\]/"}, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.required.seqNo.\\[\\d+\\]/"}, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/reindex/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.document.already.exists.\\(current.version.\\[\\d+\\]\\)/"}, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.current.version.\\[\\d+\\].is.different.than.the.one.provided.\\[\\d+\\]/"}, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.required.seqNo.\\[\\d+\\]/"}, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +                            new VersionConflictEngineException(shardId, "id", "test")));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFailureTests.java, +            assertThat(failure.getMessage(), containsString("VersionConflictEngineException[["));, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/delete_by_query/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.current.version.\\[\\d+\\].is.different.than.the.one.provided.\\[\\d+\\]/"}, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.required.seqNo.\\[\\d+\\]/"}, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/reindex/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.document.already.exists.\\(current.version.\\[\\d+\\]\\)/"}, +++ b/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/10_basic.yml, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.current.version.\\[\\d+\\].is.different.than.the.one.provided.\\[\\d+\\]/"}, +  - match: {failures.0.cause.reason: "/\\[1\\]:.version.conflict,.required.seqNo.\\[\\d+\\]/"}, +++ b/server/src/main/java/org/elasticsearch/index/engine/Engine.java, +                throw new VersionConflictEngineException(shardId, get.id(),, +                throw new VersionConflictEngineException(shardId, get.id(),, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" + docId + "]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[" +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, " + "reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[id]: " +, +            assertEquals("Elasticsearch exception [type=version_conflict_engine_exception, reason=[with_create_op_type]: " +, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java, +                            new VersionConflictEngineException(shardId, "id", "test")));, +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFailureTests.java]