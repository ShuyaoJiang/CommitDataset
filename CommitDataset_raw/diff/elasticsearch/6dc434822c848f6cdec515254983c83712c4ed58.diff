[+++ b/docs/reference/indices/get-settings.asciidoc, +, +[float], +=== Multiple Indices and Types, +, +The get settings API can be used to get settings for more than one index, +with a single call. General usage of the API follows the, +following syntax: `host:port/{index}/_settings` where, +`{index}` can stand for comma-separated list of index names and aliases. To, +get settings for all indices you can use `_all` for `{index}`., +Wildcard expressions are also supported. The following are some examples:, +, +[source,js], +--------------------------------------------------, +curl -XGET 'http://localhost:9200/twitter,kimchy/_settings', +, +curl -XGET 'http://localhost:9200/_all/_settings', +, +curl -XGET 'http://localhost:9200/2013-*/_settings', +--------------------------------------------------, +, +[float], +=== Prefix option, +, +There is also support for a `prefix` query string option, +that allows to include only settings matches the specified prefix., +, +[source,js], +--------------------------------------------------, +curl -XGET 'http://localhost:9200/my-index/_settings?prefix=index.', +, +curl -XGET 'http://localhost:9200/_all/_settings?prefix=index.routing.allocation.', +, +curl -XGET 'http://localhost:9200/2013-*/_settings?prefix=index.merge.', +--------------------------------------------------, +, +The first example returns all index settings the start with `index.` in the index `my-index`,, +the second example gets all index settings that start with `index.routing.allocation.` for, +all indices, lastly the third example returns all index settings that start with `index.merge.`, +in indices that start with `2013-`., +++ b/docs/reference/indices/get-settings.asciidoc, +, +[float], +=== Multiple Indices and Types, +, +The get settings API can be used to get settings for more than one index, +with a single call. General usage of the API follows the, +following syntax: `host:port/{index}/_settings` where, +`{index}` can stand for comma-separated list of index names and aliases. To, +get settings for all indices you can use `_all` for `{index}`., +Wildcard expressions are also supported. The following are some examples:, +, +[source,js], +--------------------------------------------------, +curl -XGET 'http://localhost:9200/twitter,kimchy/_settings', +, +curl -XGET 'http://localhost:9200/_all/_settings', +, +curl -XGET 'http://localhost:9200/2013-*/_settings', +--------------------------------------------------, +, +[float], +=== Prefix option, +, +There is also support for a `prefix` query string option, +that allows to include only settings matches the specified prefix., +, +[source,js], +--------------------------------------------------, +curl -XGET 'http://localhost:9200/my-index/_settings?prefix=index.', +, +curl -XGET 'http://localhost:9200/_all/_settings?prefix=index.routing.allocation.', +, +curl -XGET 'http://localhost:9200/2013-*/_settings?prefix=index.merge.', +--------------------------------------------------, +, +The first example returns all index settings the start with `index.` in the index `my-index`,, +the second example gets all index settings that start with `index.routing.allocation.` for, +all indices, lastly the third example returns all index settings that start with `index.merge.`, +in indices that start with `2013-`., +++ b/rest-api-spec/api/indices.get_settings.json, +        "ignore_unavailable": {, +            "type" : "boolean",, +            "description" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)", +        },, +        "allow_no_indices": {, +            "type" : "boolean",, +            "description" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)", +        },, +        "expand_wildcards": {, +            "type" : "enum",, +            "options" : ["open","closed"],, +            "default" : ["open","closed"],, +            "description" : "Whether to expand wildcard expression to concrete indices that are open, closed or both.", +        },, +        "prefix" : {, +           "type" : "string",, +           "description" : "The prefix all settings must have in order to be included", +        }, +++ b/docs/reference/indices/get-settings.asciidoc]