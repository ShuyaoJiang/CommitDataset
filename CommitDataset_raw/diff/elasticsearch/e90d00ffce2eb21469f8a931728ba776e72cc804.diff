[+++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        transportService.connectToNodeLight(listedNode);, +                                        transportService.connectToNodeLight(listedNode);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        transportService.connectToNodeLight(listedNode);, +                                        transportService.connectToNodeLight(listedNode);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +                                transportService.connectToNodeLightAndHandshake(finalNodeToSend, timeout.getMillis());, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        transportService.connectToNodeLight(listedNode);, +                                        transportService.connectToNodeLight(listedNode);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +                                transportService.connectToNodeLightAndHandshake(finalNodeToSend, timeout.getMillis());, +++ b/core/src/main/java/org/elasticsearch/transport/TransportService.java, +     * Lightly connect to the specified node, +     *, +     * @param node the node to connect to, +     */, +    public void connectToNodeLight(final DiscoveryNode node) {, +        if (node.equals(localNode)) {, +            return;, +        }, +        transport.connectToNodeLight(node);, +    }, +, +    /**, +    public DiscoveryNode connectToNodeLightAndHandshake(, +            final DiscoveryNode node,, +            final long handshakeTimeout) throws ConnectTransportException {, +        return connectToNodeLightAndHandshake(node, handshakeTimeout, true);, +    public DiscoveryNode connectToNodeLightAndHandshake(, +            final DiscoveryNode node,, +            final long handshakeTimeout,, +            final boolean checkClusterName) {, +    static class HandshakeRequest extends TransportRequest {, +    static class HandshakeResponse extends TransportResponse {, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        transportService.connectToNodeLight(listedNode);, +                                        transportService.connectToNodeLight(listedNode);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +                                transportService.connectToNodeLightAndHandshake(finalNodeToSend, timeout.getMillis());, +++ b/core/src/main/java/org/elasticsearch/transport/TransportService.java, +     * Lightly connect to the specified node, +     *, +     * @param node the node to connect to, +     */, +    public void connectToNodeLight(final DiscoveryNode node) {, +        if (node.equals(localNode)) {, +            return;, +        }, +        transport.connectToNodeLight(node);, +    }, +, +    /**, +    public DiscoveryNode connectToNodeLightAndHandshake(, +            final DiscoveryNode node,, +            final long handshakeTimeout) throws ConnectTransportException {, +        return connectToNodeLightAndHandshake(node, handshakeTimeout, true);, +    public DiscoveryNode connectToNodeLightAndHandshake(, +            final DiscoveryNode node,, +            final long handshakeTimeout,, +            final boolean checkClusterName) {, +    static class HandshakeRequest extends TransportRequest {, +    static class HandshakeResponse extends TransportResponse {, +++ b/core/src/test/java/org/elasticsearch/client/transport/FailAndRetryMockTransport.java, +            transportResponseHandler.handleResponse(new LivenessResponse(ClusterName.DEFAULT, node));, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +                        transportService.connectToNodeLight(listedNode);, +                                        transportService.connectToNodeLight(listedNode);, +++ b/core/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +                                transportService.connectToNodeLightAndHandshake(finalNodeToSend, timeout.getMillis());, +++ b/core/src/main/java/org/elasticsearch/transport/TransportService.java, +     * Lightly connect to the specified node, +     *, +     * @param node the node to connect to, +     */, +    public void connectToNodeLight(final DiscoveryNode node) {, +        if (node.equals(localNode)) {, +            return;, +        }, +        transport.connectToNodeLight(node);, +    }, +, +    /**, +    public DiscoveryNode connectToNodeLightAndHandshake(, +            final DiscoveryNode node,, +            final long handshakeTimeout) throws ConnectTransportException {, +        return connectToNodeLightAndHandshake(node, handshakeTimeout, true);, +    public DiscoveryNode connectToNodeLightAndHandshake(, +            final DiscoveryNode node,, +            final long handshakeTimeout,, +            final boolean checkClusterName) {, +    static class HandshakeRequest extends TransportRequest {, +    static class HandshakeResponse extends TransportResponse {, +++ b/core/src/test/java/org/elasticsearch/client/transport/FailAndRetryMockTransport.java, +            transportResponseHandler.handleResponse(new LivenessResponse(ClusterName.DEFAULT, node));, +++ b/core/src/test/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java, +            serviceB.connectToNodeLightAndHandshake(nodeA, 100);, +            serviceB.connectToNodeLightAndHandshake(nodeA, 100);, +++ b/core/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java]