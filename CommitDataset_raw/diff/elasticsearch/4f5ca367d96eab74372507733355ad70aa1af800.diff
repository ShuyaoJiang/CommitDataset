[+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/Watch.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/Watch.java, +++ b/x-pack/plugin/core/src/main/resources/triggered-watches.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/Watch.java, +++ b/x-pack/plugin/core/src/main/resources/triggered-watches.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watch-history.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/Watch.java, +++ b/x-pack/plugin/core/src/main/resources/triggered-watches.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watch-history.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watches.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/Watch.java, +++ b/x-pack/plugin/core/src/main/resources/triggered-watches.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watch-history.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watches.json, +    "_doc": {, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/WatcherIndexingListener.java, +        if (isWatchDocument(shardId.getIndexName())) {, +        if (isWatchDocument(shardId.getIndexName())) {, +        if (isWatchDocument(shardId.getIndexName())) {, +    private boolean isWatchDocument(String index) {, +        return configuration.isIndexAndActive(index);, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/Watch.java, +++ b/x-pack/plugin/core/src/main/resources/triggered-watches.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watch-history.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watches.json, +    "_doc": {, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/WatcherIndexingListener.java, +        if (isWatchDocument(shardId.getIndexName())) {, +        if (isWatchDocument(shardId.getIndexName())) {, +        if (isWatchDocument(shardId.getIndexName())) {, +    private boolean isWatchDocument(String index) {, +        return configuration.isIndexAndActive(index);, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionBuilders.java, +    /**, +     * Types are deprecated and should not be used. use {@link #indexAction(String)}, +     */, +    @Deprecated, +    public static IndexAction.Builder indexAction(String index) {, +        return IndexAction.builder(index);, +    }, +, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/execution/TriggeredWatchStoreField.java, +++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/watcher/watch/Watch.java, +++ b/x-pack/plugin/core/src/main/resources/triggered-watches.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watch-history.json, +    "_doc": {, +++ b/x-pack/plugin/core/src/main/resources/watches.json, +    "_doc": {, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/WatcherIndexingListener.java, +        if (isWatchDocument(shardId.getIndexName())) {, +        if (isWatchDocument(shardId.getIndexName())) {, +        if (isWatchDocument(shardId.getIndexName())) {, +    private boolean isWatchDocument(String index) {, +        return configuration.isIndexAndActive(index);, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/actions/ActionBuilders.java, +    /**, +     * Types are deprecated and should not be used. use {@link #indexAction(String)}, +     */, +    @Deprecated, +    public static IndexAction.Builder indexAction(String index) {, +        return IndexAction.builder(index);, +    }, +, +++ b/x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/actions/index/IndexAction.java, +    @Nullable @Deprecated final String docType;, +    public IndexAction(@Nullable String index, @Nullable String docId,, +                       @Nullable String executionTimeField,, +                       @Nullable TimeValue timeout, @Nullable ZoneId dynamicNameTimeZone, @Nullable RefreshPolicy refreshPolicy) {, +        this(index, null, docId, executionTimeField, timeout, dynamicNameTimeZone, refreshPolicy);, +    }, +    /**, +     * Document types are deprecated, use constructor without docType, +     */, +    @Deprecated, +    /**, +     * Document types are deprecated, use {@link #builder(java.lang.String)}, +     */, +    @Deprecated, +    public static Builder builder(String index) {, +        return new Builder(index);, +    }, +]