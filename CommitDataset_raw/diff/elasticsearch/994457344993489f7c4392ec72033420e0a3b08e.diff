[+++ b/core/src/main/java/org/elasticsearch/script/NativeScriptEngineService.java, +    public List<String> getTypes() {, +    public List<String> getExtensions() {, +    public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/NativeScriptEngineService.java, +    public List<String> getTypes() {, +    public List<String> getExtensions() {, +    public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptEngineService.java, +    List<String> getTypes();, +    List<String> getExtensions();, +    boolean isSandboxed();, +++ b/core/src/main/java/org/elasticsearch/script/NativeScriptEngineService.java, +    public List<String> getTypes() {, +    public List<String> getExtensions() {, +    public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptEngineService.java, +    List<String> getTypes();, +    List<String> getExtensions();, +    boolean isSandboxed();, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +            for (String ext : scriptEngine.getExtensions()) {, +                return scriptEngineService.isSandboxed();, +                        if (isAnyScriptContextEnabled(engineService.getTypes().get(0), engineService, ScriptType.FILE)) {, +                                staticCache.put(cacheKey, new CompiledScript(ScriptType.FILE, scriptNameExt.v1(), engineService.getTypes().get(0), engineService.compile(script, Collections.emptyMap())));, +            this.lang = service.getTypes().get(0);, +++ b/core/src/main/java/org/elasticsearch/script/NativeScriptEngineService.java, +    public List<String> getTypes() {, +    public List<String> getExtensions() {, +    public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptEngineService.java, +    List<String> getTypes();, +    List<String> getExtensions();, +    boolean isSandboxed();, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +            for (String ext : scriptEngine.getExtensions()) {, +                return scriptEngineService.isSandboxed();, +                        if (isAnyScriptContextEnabled(engineService.getTypes().get(0), engineService, ScriptType.FILE)) {, +                                staticCache.put(cacheKey, new CompiledScript(ScriptType.FILE, scriptNameExt.v1(), engineService.getTypes().get(0), engineService.compile(script, Collections.emptyMap())));, +            this.lang = service.getTypes().get(0);, +++ b/core/src/test/java/org/elasticsearch/script/ScriptModesTests.java, +            for (String type : scriptEngine.getTypes()) {, +        public List<String> getTypes() {, +        public List<String> getExtensions() {, +        public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/NativeScriptEngineService.java, +    public List<String> getTypes() {, +    public List<String> getExtensions() {, +    public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptEngineService.java, +    List<String> getTypes();, +    List<String> getExtensions();, +    boolean isSandboxed();, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +            for (String ext : scriptEngine.getExtensions()) {, +                return scriptEngineService.isSandboxed();, +                        if (isAnyScriptContextEnabled(engineService.getTypes().get(0), engineService, ScriptType.FILE)) {, +                                staticCache.put(cacheKey, new CompiledScript(ScriptType.FILE, scriptNameExt.v1(), engineService.getTypes().get(0), engineService.compile(script, Collections.emptyMap())));, +            this.lang = service.getTypes().get(0);, +++ b/core/src/test/java/org/elasticsearch/script/ScriptModesTests.java, +            for (String type : scriptEngine.getTypes()) {, +        public List<String> getTypes() {, +        public List<String> getExtensions() {, +        public boolean isSandboxed() {, +++ b/core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java, +                settingKey = scriptEngineService.getTypes().get(0) + "." + scriptType + "." + scriptContext.getKey();, +            String lang = randomFrom(scriptEnginesByLangMap.get(part1).getTypes());, +                ScriptMode scriptMode = engineSettings.get(scriptEngineService.getTypes().get(0) + "." + scriptType + "." + scriptContext.getKey());, +                for (String lang : scriptEngineService.getTypes()) {, +                            if (scriptEngineService.isSandboxed()) {, +        for (String type : scriptEngineService.getTypes()) {, +        public List<String> getTypes() {, +        public List<String> getExtensions() {, +        public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/NativeScriptEngineService.java, +    public List<String> getTypes() {, +    public List<String> getExtensions() {, +    public boolean isSandboxed() {, +++ b/core/src/main/java/org/elasticsearch/script/ScriptEngineService.java, +    List<String> getTypes();, +    List<String> getExtensions();, +    boolean isSandboxed();, +++ b/core/src/main/java/org/elasticsearch/script/ScriptService.java, +            for (String ext : scriptEngine.getExtensions()) {, +                return scriptEngineService.isSandboxed();, +                        if (isAnyScriptContextEnabled(engineService.getTypes().get(0), engineService, ScriptType.FILE)) {, +                                staticCache.put(cacheKey, new CompiledScript(ScriptType.FILE, scriptNameExt.v1(), engineService.getTypes().get(0), engineService.compile(script, Collections.emptyMap())));, +            this.lang = service.getTypes().get(0);, +++ b/core/src/test/java/org/elasticsearch/script/ScriptModesTests.java, +            for (String type : scriptEngine.getTypes()) {, +        public List<String> getTypes() {, +        public List<String> getExtensions() {, +        public boolean isSandboxed() {, +++ b/core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java, +                settingKey = scriptEngineService.getTypes().get(0) + "." + scriptType + "." + scriptContext.getKey();, +            String lang = randomFrom(scriptEnginesByLangMap.get(part1).getTypes());, +                ScriptMode scriptMode = engineSettings.get(scriptEngineService.getTypes().get(0) + "." + scriptType + "." + scriptContext.getKey());, +                for (String lang : scriptEngineService.getTypes()) {, +                            if (scriptEngineService.isSandboxed()) {, +        for (String type : scriptEngineService.getTypes()) {]