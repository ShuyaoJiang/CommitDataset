[+++ b/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java, +            if (isVersionConflictForWrites(index, currentVersion, deleted, expectedVersion)) {, +                if (index.origin() != Operation.Origin.RECOVERY) {, +                return false;, +                index(index, indexWriter);, +                created = update(index, versionValue, indexWriter);, +            Translog.Location translogLocation = translog.add(new Translog.Index(index));, +, +            versionMap.putUnderLock(index.uid().bytes(), new VersionValue(updatedVersion, translogLocation));, +            index.setTranslogLocation(translogLocation);, +            return created;, +        }, +    }, +, +    private static boolean update(Index index, VersionValue versionValue, IndexWriter indexWriter) throws IOException {, +        boolean created;, +, +    private static void index(Index index, IndexWriter indexWriter) throws IOException {, +        if (index.docs().size() > 1) {, +            indexWriter.addDocuments(index.docs());, +        } else {, +            indexWriter.addDocument(index.docs().get(0));, +        }, +    }, +, +    private boolean isVersionConflictForWrites(Index index, long currentVersion, boolean deleted, long expectedVersion) {, +        return index.versionType().isVersionConflictForWrites(currentVersion, expectedVersion, deleted);]