[+++ b/.idea/dictionaries/kimchy.xml, +      <w>cacheable</w>, +      <w>docid</w>, +++ b/.idea/dictionaries/kimchy.xml, +      <w>cacheable</w>, +      <w>docid</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +        // always add the unicast hosts, so it will be able to receive unicast requests even when working in multicast, +++ b/.idea/dictionaries/kimchy.xml, +      <w>cacheable</w>, +      <w>docid</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +        // always add the unicast hosts, so it will be able to receive unicast requests even when working in multicast, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastHostsProvider.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.discovery.zen.ping.unicast;, +, +import org.elasticsearch.cluster.node.DiscoveryNode;, +, +import java.util.List;, +, +/**, + * @author kimchy (Shay Banon), + */, +public interface UnicastHostsProvider {, +, +    List<DiscoveryNode> buildDynamicNodes();, +}, +++ b/.idea/dictionaries/kimchy.xml, +      <w>cacheable</w>, +      <w>docid</w>, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java, +        // always add the unicast hosts, so it will be able to receive unicast requests even when working in multicast, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastHostsProvider.java, +/*, + * Licensed to Elastic Search and Shay Banon under one, + * or more contributor license agreements.  See the NOTICE file, + * distributed with this work for additional information, + * regarding copyright ownership. Elastic Search licenses this, + * file to you under the Apache License, Version 2.0 (the, + * "License"); you may not use this file except in compliance, + * with the License.  You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.discovery.zen.ping.unicast;, +, +import org.elasticsearch.cluster.node.DiscoveryNode;, +, +import java.util.List;, +, +/**, + * @author kimchy (Shay Banon), + */, +public interface UnicastHostsProvider {, +, +    List<DiscoveryNode> buildDynamicNodes();, +}, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java, +import java.util.concurrent.*;, +    private final CopyOnWriteArrayList<UnicastHostsProvider> hostsProviders = new CopyOnWriteArrayList<UnicastHostsProvider>();, +, +        logger.debug("Using initial hosts {}", hosts);, +    public void addHostsProvider(UnicastHostsProvider provider) {, +        hostsProviders.add(provider);, +    }, +, +    public void removeHostsProvider(UnicastHostsProvider provider) {, +        hostsProviders.remove(provider);, +        for (UnicastHostsProvider provider : hostsProviders) {, +            nodesToPing.addAll(provider.buildDynamicNodes());, +        }, +++ b/.idea/dictionaries/kimchy.xml, +      <w>cacheable</w>]