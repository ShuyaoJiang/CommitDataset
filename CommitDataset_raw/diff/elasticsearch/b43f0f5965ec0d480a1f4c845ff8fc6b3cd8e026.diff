[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/store/IndexStore.java, +import org.elasticsearch.common.collect.Maps;, +import org.elasticsearch.common.io.stream.StreamInput;, +import org.elasticsearch.common.io.stream.StreamOutput;, +import org.elasticsearch.common.io.stream.Streamable;, +    static class StoreFilesMetaData implements Iterable<StoreFileMetaData>, Streamable {, +        private boolean allocated;, +        private Map<String, StoreFileMetaData> files;, +, +        StoreFilesMetaData() {, +        }, +, +        public static StoreFilesMetaData readStoreFilesMetaData(StreamInput in) throws IOException {, +            StoreFilesMetaData md = new StoreFilesMetaData();, +            md.readFrom(in);, +            return md;, +        }, +, +        @Override public void readFrom(StreamInput in) throws IOException {, +            allocated = in.readBoolean();, +            int size = in.readVInt();, +            files = Maps.newHashMapWithExpectedSize(size);, +            for (int i = 0; i < size; i++) {, +                StoreFileMetaData md = new StoreFileMetaData(in.readUTF(), in.readVLong());, +                files.put(md.name(), md);, +            }, +        }, +, +        @Override public void writeTo(StreamOutput out) throws IOException {, +            out.writeBoolean(allocated);, +            out.writeVInt(files.size());, +            for (StoreFileMetaData md : files.values()) {, +                out.writeUTF(md.name());, +                out.writeVLong(md.sizeInBytes());, +            }, +        }]