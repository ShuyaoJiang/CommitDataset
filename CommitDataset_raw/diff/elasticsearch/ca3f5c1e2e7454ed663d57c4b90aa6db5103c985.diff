[+++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0),, +        CLUSTER_ALREADY_BOOTSTRAPPED_EXCEPTION(org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException.class,, +            org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException::new, 151, Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0),, +        CLUSTER_ALREADY_BOOTSTRAPPED_EXCEPTION(org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException.class,, +            org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException::new, 151, Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapClusterAction.java, +    public static final String NAME = "cluster:admin/bootstrap/set_voting_config";, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0),, +        CLUSTER_ALREADY_BOOTSTRAPPED_EXCEPTION(org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException.class,, +            org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException::new, 151, Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapClusterAction.java, +    public static final String NAME = "cluster:admin/bootstrap/set_voting_config";, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/GetDiscoveredNodesAction.java, +    public static final String NAME = "cluster:admin/bootstrap/discover_nodes";, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0),, +        CLUSTER_ALREADY_BOOTSTRAPPED_EXCEPTION(org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException.class,, +            org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException::new, 151, Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapClusterAction.java, +    public static final String NAME = "cluster:admin/bootstrap/set_voting_config";, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/GetDiscoveredNodesAction.java, +    public static final String NAME = "cluster:admin/bootstrap/discover_nodes";, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/TransportGetDiscoveredNodesAction.java, +import org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException;, +        final ActionListener<Iterable<DiscoveryNode>> respondIfRequestSatisfied = new ActionListener<Iterable<DiscoveryNode>>() {, +            public void onResponse(Iterable<DiscoveryNode> nodes) {, +                    if (checkWaitRequirements(request, nodesSet)) {, +                        final GetDiscoveredNodesResponse response = new GetDiscoveredNodesResponse(nodesSet);, +                        if (listenerNotified.compareAndSet(false, true)) {, +                            listenableFuture.onResponse(response);, +                        }, +                    onFailure(e);, +                }, +            }, +, +            @Override, +            public void onFailure(Exception e) {, +                if (listenerNotified.compareAndSet(false, true)) {, +, +        if (coordinator.isInitialConfigurationSet()) {, +            respondIfRequestSatisfied.onFailure(new ClusterAlreadyBootstrappedException());, +        } else {, +            respondIfRequestSatisfied.onResponse(coordinator.getFoundPeers());, +        }, +                    respondIfRequestSatisfied.onFailure(new ElasticsearchTimeoutException("timed out while waiting for " + request));, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0),, +        CLUSTER_ALREADY_BOOTSTRAPPED_EXCEPTION(org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException.class,, +            org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException::new, 151, Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapClusterAction.java, +    public static final String NAME = "cluster:admin/bootstrap/set_voting_config";, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/GetDiscoveredNodesAction.java, +    public static final String NAME = "cluster:admin/bootstrap/discover_nodes";, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/TransportGetDiscoveredNodesAction.java, +import org.elasticsearch.cluster.coordination.ClusterAlreadyBootstrappedException;, +        final ActionListener<Iterable<DiscoveryNode>> respondIfRequestSatisfied = new ActionListener<Iterable<DiscoveryNode>>() {, +            public void onResponse(Iterable<DiscoveryNode> nodes) {, +                    if (checkWaitRequirements(request, nodesSet)) {, +                        final GetDiscoveredNodesResponse response = new GetDiscoveredNodesResponse(nodesSet);, +                        if (listenerNotified.compareAndSet(false, true)) {, +                            listenableFuture.onResponse(response);, +                        }, +                    onFailure(e);, +                }, +            }, +, +            @Override, +            public void onFailure(Exception e) {, +                if (listenerNotified.compareAndSet(false, true)) {, +, +        if (coordinator.isInitialConfigurationSet()) {, +            respondIfRequestSatisfied.onFailure(new ClusterAlreadyBootstrappedException());, +        } else {, +            respondIfRequestSatisfied.onResponse(coordinator.getFoundPeers());, +        }, +                    respondIfRequestSatisfied.onFailure(new ElasticsearchTimeoutException("timed out while waiting for " + request));, +++ b/server/src/main/java/org/elasticsearch/cluster/coordination/ClusterAlreadyBootstrappedException.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.cluster.coordination;]