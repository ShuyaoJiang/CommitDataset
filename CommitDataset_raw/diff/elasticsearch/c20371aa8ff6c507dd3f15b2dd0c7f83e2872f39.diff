[+++ b/src/main/java/org/elasticsearch/cloud/azure/AzureStorageService.java, +, +    void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException;, +++ b/src/main/java/org/elasticsearch/cloud/azure/AzureStorageService.java, +, +    void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException;, +++ b/src/main/java/org/elasticsearch/cloud/azure/AzureStorageServiceImpl.java, +    public void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException {, +        logger.debug("moveBlob container [{}], sourceBlob [{}], targetBlob [{}]", container, sourceBlob, targetBlob);, +        CloudBlobContainer blob_container = client.getContainerReference(container);, +        CloudBlockBlob blobSource = blob_container.getBlockBlobReference(sourceBlob);, +        if (blobSource.exists()) {, +            CloudBlockBlob blobTarget = blob_container.getBlockBlobReference(targetBlob);, +            blobTarget.copyFromBlob(blobSource);, +            blobSource.delete();, +            logger.debug("moveBlob container [{}], sourceBlob [{}], targetBlob [{}] -> done", container, sourceBlob, targetBlob);, +        }, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/cloud/azure/AzureStorageService.java, +, +    void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException;, +++ b/src/main/java/org/elasticsearch/cloud/azure/AzureStorageServiceImpl.java, +    public void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException {, +        logger.debug("moveBlob container [{}], sourceBlob [{}], targetBlob [{}]", container, sourceBlob, targetBlob);, +        CloudBlobContainer blob_container = client.getContainerReference(container);, +        CloudBlockBlob blobSource = blob_container.getBlockBlobReference(sourceBlob);, +        if (blobSource.exists()) {, +            CloudBlockBlob blobTarget = blob_container.getBlockBlobReference(targetBlob);, +            blobTarget.copyFromBlob(blobSource);, +            blobSource.delete();, +            logger.debug("moveBlob container [{}], sourceBlob [{}], targetBlob [{}] -> done", container, sourceBlob, targetBlob);, +        }, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +    public void move(String sourceBlobName, String targetBlobName) throws IOException {, +        try {, +            String source = keyPath + sourceBlobName;, +            String target = keyPath + targetBlobName;, +, +            logger.debug("moving blob [{}] to [{}] in container {{}}", source, target, blobStore.container());, +, +            blobStore.client().moveBlob(blobStore.container(), source, target);, +        } catch (URISyntaxException e) {, +            logger.warn("can not move blob [{}] to [{}] in container {{}}: {}", sourceBlobName, targetBlobName, blobStore.container(), e.getMessage());, +            throw new IOException(e);, +        } catch (StorageException e) {, +            logger.warn("can not move blob [{}] to [{}] in container {{}}: {}", sourceBlobName, targetBlobName, blobStore.container(), e.getMessage());, +            throw new IOException(e);, +        }, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/cloud/azure/AzureStorageService.java, +, +    void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException;, +++ b/src/main/java/org/elasticsearch/cloud/azure/AzureStorageServiceImpl.java, +    public void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException {, +        logger.debug("moveBlob container [{}], sourceBlob [{}], targetBlob [{}]", container, sourceBlob, targetBlob);, +        CloudBlobContainer blob_container = client.getContainerReference(container);, +        CloudBlockBlob blobSource = blob_container.getBlockBlobReference(sourceBlob);, +        if (blobSource.exists()) {, +            CloudBlockBlob blobTarget = blob_container.getBlockBlobReference(targetBlob);, +            blobTarget.copyFromBlob(blobSource);, +            blobSource.delete();, +            logger.debug("moveBlob container [{}], sourceBlob [{}], targetBlob [{}] -> done", container, sourceBlob, targetBlob);, +        }, +    }, +, +    @Override, +++ b/src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java, +    public void move(String sourceBlobName, String targetBlobName) throws IOException {, +        try {, +            String source = keyPath + sourceBlobName;, +            String target = keyPath + targetBlobName;, +, +            logger.debug("moving blob [{}] to [{}] in container {{}}", source, target, blobStore.container());, +, +            blobStore.client().moveBlob(blobStore.container(), source, target);, +        } catch (URISyntaxException e) {, +            logger.warn("can not move blob [{}] to [{}] in container {{}}: {}", sourceBlobName, targetBlobName, blobStore.container(), e.getMessage());, +            throw new IOException(e);, +        } catch (StorageException e) {, +            logger.warn("can not move blob [{}] to [{}] in container {{}}: {}", sourceBlobName, targetBlobName, blobStore.container(), e.getMessage());, +            throw new IOException(e);, +        }, +    }, +, +    @Override, +++ b/src/test/java/org/elasticsearch/repositories/azure/AzureStorageServiceMock.java, +    public void moveBlob(String container, String sourceBlob, String targetBlob) throws URISyntaxException, StorageException {, +        for (String blobName : blobs.keySet()) {, +            if (endsWithIgnoreCase(blobName, sourceBlob)) {, +                ByteArrayOutputStream outputStream = blobs.get(blobName);, +                blobs.put(blobName.replace(sourceBlob, targetBlob), outputStream);, +                blobs.remove(blobName);, +            }]