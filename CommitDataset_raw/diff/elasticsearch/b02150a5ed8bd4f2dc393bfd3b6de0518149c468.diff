[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +        request.setEntity(createEntity(openJobRequest, REQUEST_BODY_CONTENT_TYPE));, +    static Request closeJob(CloseJobRequest closeJobRequest) throws IOException {, +        request.setEntity(createEntity(closeJobRequest, REQUEST_BODY_CONTENT_TYPE));, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +        request.setEntity(createEntity(openJobRequest, REQUEST_BODY_CONTENT_TYPE));, +    static Request closeJob(CloseJobRequest closeJobRequest) throws IOException {, +        request.setEntity(createEntity(closeJobRequest, REQUEST_BODY_CONTENT_TYPE));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MLRequestConvertersTests.java, +        assertEquals(requestEntityToString(request), "{\"job_id\":\""+ jobId +"\",\"timeout\":\"10m\"}");, +    public void testCloseJob() throws Exception {, +        assertEquals("{\"job_id\":\"somejobid\"}", requestEntityToString(request));, +        assertEquals("{\"job_id\":\"somejobid,otherjobs*\",\"timeout\":\"10m\",\"force\":true,\"allow_no_jobs\":false}",, +            requestEntityToString(request));, +, +    private static String requestEntityToString(Request request) throws Exception {, +        ByteArrayOutputStream bos = new ByteArrayOutputStream();, +        request.getEntity().writeTo(bos);, +        return bos.toString("UTF-8");, +    }, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/MLRequestConverters.java, +        request.setEntity(createEntity(openJobRequest, REQUEST_BODY_CONTENT_TYPE));, +    static Request closeJob(CloseJobRequest closeJobRequest) throws IOException {, +        request.setEntity(createEntity(closeJobRequest, REQUEST_BODY_CONTENT_TYPE));, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/MLRequestConvertersTests.java, +        assertEquals(requestEntityToString(request), "{\"job_id\":\""+ jobId +"\",\"timeout\":\"10m\"}");, +    public void testCloseJob() throws Exception {, +        assertEquals("{\"job_id\":\"somejobid\"}", requestEntityToString(request));, +        assertEquals("{\"job_id\":\"somejobid,otherjobs*\",\"timeout\":\"10m\",\"force\":true,\"allow_no_jobs\":false}",, +            requestEntityToString(request));, +, +    private static String requestEntityToString(Request request) throws Exception {, +        ByteArrayOutputStream bos = new ByteArrayOutputStream();, +        request.getEntity().writeTo(bos);, +        return bos.toString("UTF-8");, +    }, +++ b/x-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/CloseJobRequest.java, +import org.elasticsearch.common.Strings;, +import org.elasticsearch.common.xcontent.ObjectParser;, +    public static final ParseField JOB_ID = new ParseField("job_id");, +        PARSER.declareField(ConstructingObjectParser.constructorArg(),, +            p -> Arrays.asList(Strings.commaDelimitedListToStringArray(p.text())),, +            JOB_ID, ObjectParser.ValueType.STRING_ARRAY);, +        return this.allowNoJobs;, +        return Objects.hash(jobIds, timeout, force, allowNoJobs);, +            Objects.equals(force, that.force) &&, +            Objects.equals(allowNoJobs, that.allowNoJobs);, +        builder.field(JOB_ID.getPreferredName(), Strings.collectionToCommaDelimitedString(jobIds));, +, +    @Override, +    public String toString() {, +        return Strings.toString(this);, +    }]