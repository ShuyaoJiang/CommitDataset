[+++ b/buildSrc/build.gradle, +  compile 'de.thetaphi:forbiddenapis:2.5', +++ b/buildSrc/build.gradle, +  compile 'de.thetaphi:forbiddenapis:2.5', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/buildSrc/build.gradle, +  compile 'de.thetaphi:forbiddenapis:2.5', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        Configuration forbiddenApisConfiguration = project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar ('de.thetaphi:forbiddenapis:2.5'), +        }, +, +                    execAction = { spec ->, +                        spec.classpath = project.files(, +                                project.configurations.forbiddenApisCliJar,, +                                sourceSet.compileClasspath,, +                                sourceSet.runtimeClasspath, +                        ), +                        spec.executable = "${project.runtimeJavaHome}/bin/java", +                    }, +                    inputs.files(, +                            forbiddenApisConfiguration,, +                            sourceSet.compileClasspath,, +                            sourceSet.runtimeClasspath, +                    ), +, +++ b/buildSrc/build.gradle, +  compile 'de.thetaphi:forbiddenapis:2.5', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy, +            // TODO: remove this deprecation compatibility setting for 7.0, +            systemProperty 'es.aggregations.enable_scripted_metric_agg_param', 'false', +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy, +            project.tasks.create('thirdPartyAudit', ThirdPartyAuditTask.class), +        Configuration forbiddenApisConfiguration = project.configurations.create("forbiddenApisCliJar"), +        project.dependencies {, +            forbiddenApisCliJar ('de.thetaphi:forbiddenapis:2.5'), +        }, +, +                    execAction = { spec ->, +                        spec.classpath = project.files(, +                                project.configurations.forbiddenApisCliJar,, +                                sourceSet.compileClasspath,, +                                sourceSet.runtimeClasspath, +                        ), +                        spec.executable = "${project.runtimeJavaHome}/bin/java", +                    }, +                    inputs.files(, +                            forbiddenApisConfiguration,, +                            sourceSet.compileClasspath,, +                            sourceSet.runtimeClasspath, +                    ), +, +++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/ThirdPartyAuditTask.groovy, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.gradle.precommit;, +, +import com.github.jengelman.gradle.plugins.shadow.ShadowPlugin, +import org.apache.tools.ant.BuildEvent;, +import org.apache.tools.ant.BuildException;, +import org.apache.tools.ant.BuildListener;, +import org.apache.tools.ant.BuildLogger;, +import org.apache.tools.ant.DefaultLogger;, +import org.apache.tools.ant.Project;, +import org.elasticsearch.gradle.AntTask;, +import org.gradle.api.artifacts.Configuration;, +import org.gradle.api.file.FileCollection;, +import org.gradle.api.tasks.Input, +import org.gradle.api.tasks.InputFiles, +import org.gradle.api.tasks.OutputFile, +, +import java.nio.file.FileVisitResult;, +import java.nio.file.Files;, +import java.nio.file.Path;, +import java.nio.file.SimpleFileVisitor;, +import java.nio.file.attribute.BasicFileAttributes;, +import java.util.regex.Matcher;]