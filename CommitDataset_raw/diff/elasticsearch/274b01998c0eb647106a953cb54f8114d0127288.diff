[+++ b/src/main/java/org/elasticsearch/watcher/WatcherService.java, +            logger.warn("failed to put watch [{}]", e, id);, +++ b/src/main/java/org/elasticsearch/watcher/WatcherService.java, +            logger.warn("failed to put watch [{}]", e, id);, +++ b/src/main/java/org/elasticsearch/watcher/condition/script/ExecutableScriptCondition.java, +import org.elasticsearch.script.CompiledScript;, +import java.util.Map;, +    private final CompiledScript compiledScript;, +        try {, +            compiledScript = scriptService.compile(condition.script);, +        } catch (Exception e) {, +            throw new ScriptConditionValidationException("failed to compile script [{}] with lang [{}] of type [{}]", e, condition.script.script(), condition.script.lang(), condition.script.type(), e);, +        }, +            Map<String, Object> parameters = Variables.createCtxModel(ctx, ctx.payload());, +            if (condition.script.params() != null && !condition.script.params().isEmpty()) {, +                parameters.putAll(condition.script.params());, +            }, +            ExecutableScript executable = scriptService.executable(compiledScript, parameters);, +++ b/src/main/java/org/elasticsearch/watcher/WatcherService.java, +            logger.warn("failed to put watch [{}]", e, id);, +++ b/src/main/java/org/elasticsearch/watcher/condition/script/ExecutableScriptCondition.java, +import org.elasticsearch.script.CompiledScript;, +import java.util.Map;, +    private final CompiledScript compiledScript;, +        try {, +            compiledScript = scriptService.compile(condition.script);, +        } catch (Exception e) {, +            throw new ScriptConditionValidationException("failed to compile script [{}] with lang [{}] of type [{}]", e, condition.script.script(), condition.script.lang(), condition.script.type(), e);, +        }, +            Map<String, Object> parameters = Variables.createCtxModel(ctx, ctx.payload());, +            if (condition.script.params() != null && !condition.script.params().isEmpty()) {, +                parameters.putAll(condition.script.params());, +            }, +            ExecutableScript executable = scriptService.executable(compiledScript, parameters);, +++ b/src/main/java/org/elasticsearch/watcher/condition/script/ScriptConditionValidationException.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.watcher.condition.script;, +, +/**, + */, +public class ScriptConditionValidationException extends ScriptConditionException {, +, +    public ScriptConditionValidationException(String msg, Object... args) {, +        super(msg, args);, +    }, +, +    public ScriptConditionValidationException(String msg, Throwable cause, Object... args) {, +        super(msg, cause, args);, +    }, +}, +++ b/src/main/java/org/elasticsearch/watcher/WatcherService.java, +            logger.warn("failed to put watch [{}]", e, id);, +++ b/src/main/java/org/elasticsearch/watcher/condition/script/ExecutableScriptCondition.java, +import org.elasticsearch.script.CompiledScript;, +import java.util.Map;, +    private final CompiledScript compiledScript;, +        try {, +            compiledScript = scriptService.compile(condition.script);, +        } catch (Exception e) {, +            throw new ScriptConditionValidationException("failed to compile script [{}] with lang [{}] of type [{}]", e, condition.script.script(), condition.script.lang(), condition.script.type(), e);, +        }, +            Map<String, Object> parameters = Variables.createCtxModel(ctx, ctx.payload());, +            if (condition.script.params() != null && !condition.script.params().isEmpty()) {, +                parameters.putAll(condition.script.params());, +            }, +            ExecutableScript executable = scriptService.executable(compiledScript, parameters);, +++ b/src/main/java/org/elasticsearch/watcher/condition/script/ScriptConditionValidationException.java, +/*, + * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one, + * or more contributor license agreements. Licensed under the Elastic License;, + * you may not use this file except in compliance with the Elastic License., + */, +package org.elasticsearch.watcher.condition.script;, +, +/**, + */, +public class ScriptConditionValidationException extends ScriptConditionException {, +, +    public ScriptConditionValidationException(String msg, Object... args) {, +        super(msg, args);, +    }, +, +    public ScriptConditionValidationException(String msg, Throwable cause, Object... args) {, +        super(msg, cause, args);, +    }, +}, +++ b/src/main/java/org/elasticsearch/watcher/support/init/proxy/ScriptServiceProxy.java, +import org.elasticsearch.script.CompiledScript;, +    public CompiledScript compile(String lang, String script, ScriptService.ScriptType scriptType) {, +        return service.compile(lang, script, scriptType);, +    }, +, +    public CompiledScript compile(Script script) {, +        return compile(script.lang(), script.script(), script.type());, +    }, +]