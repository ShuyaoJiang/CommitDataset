[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Nullable;, +        return add(data, from, length, contentUnsafe, null, null);, +    }, +, +    /**, +     * Adds a framed data in binary format, +     */, +    public BulkRequest add(byte[] data, int from, int length, boolean contentUnsafe, @Nullable String defaultIndex, @Nullable String defaultType) throws Exception {, +            String index = defaultIndex;, +            String type = defaultType;, +            // at this stage, next token can either be END_OBJECT (and use default index and type, with auto generated id), +            // or START_OBJECT which will have another set of parameters, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Nullable;, +        return add(data, from, length, contentUnsafe, null, null);, +    }, +, +    /**, +     * Adds a framed data in binary format, +     */, +    public BulkRequest add(byte[] data, int from, int length, boolean contentUnsafe, @Nullable String defaultIndex, @Nullable String defaultType) throws Exception {, +            String index = defaultIndex;, +            String type = defaultType;, +            // at this stage, next token can either be END_OBJECT (and use default index and type, with auto generated id), +            // or START_OBJECT which will have another set of parameters, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/bulk/BulkRequestBuilder.java, +import org.elasticsearch.common.Nullable;, +        request.add(data, from, length, contentUnsafe, null, null);, +        return this;, +    }, +, +    /**, +     * Adds a framed data in binary format, +     */, +    public BulkRequestBuilder add(byte[] data, int from, int length, boolean contentUnsafe, @Nullable String defaultIndex, @Nullable String defaultType) throws Exception {, +        request.add(data, from, length, contentUnsafe, defaultIndex, defaultType);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Nullable;, +        return add(data, from, length, contentUnsafe, null, null);, +    }, +, +    /**, +     * Adds a framed data in binary format, +     */, +    public BulkRequest add(byte[] data, int from, int length, boolean contentUnsafe, @Nullable String defaultIndex, @Nullable String defaultType) throws Exception {, +            String index = defaultIndex;, +            String type = defaultType;, +            // at this stage, next token can either be END_OBJECT (and use default index and type, with auto generated id), +            // or START_OBJECT which will have another set of parameters, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/bulk/BulkRequestBuilder.java, +import org.elasticsearch.common.Nullable;, +        request.add(data, from, length, contentUnsafe, null, null);, +        return this;, +    }, +, +    /**, +     * Adds a framed data in binary format, +     */, +    public BulkRequestBuilder add(byte[] data, int from, int length, boolean contentUnsafe, @Nullable String defaultIndex, @Nullable String defaultType) throws Exception {, +        request.add(data, from, length, contentUnsafe, defaultIndex, defaultType);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java, +import org.elasticsearch.rest.BaseRestHandler;, +import org.elasticsearch.rest.RestChannel;, +import org.elasticsearch.rest.RestController;, +import org.elasticsearch.rest.RestRequest;, +import org.elasticsearch.rest.XContentRestResponse;, +import org.elasticsearch.rest.XContentThrowableRestResponse;, +        controller.registerHandler(POST, "/{index}/_bulk", this);, +        controller.registerHandler(PUT, "/{index}/_bulk", this);, +        controller.registerHandler(POST, "/{index}/{type}/_bulk", this);, +        controller.registerHandler(PUT, "/{index}/{type}/_bulk", this);, +        String defaultIndex = request.param("index");, +        String defaultType = request.param("type");, +            bulkRequest.add(request.contentByteArray(), request.contentByteArrayOffset(), request.contentLength(), request.contentUnsafe(), defaultIndex, defaultType);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java, +import org.elasticsearch.common.Nullable;, +        return add(data, from, length, contentUnsafe, null, null);, +    }, +, +    /**, +     * Adds a framed data in binary format, +     */, +    public BulkRequest add(byte[] data, int from, int length, boolean contentUnsafe, @Nullable String defaultIndex, @Nullable String defaultType) throws Exception {, +            String index = defaultIndex;, +            String type = defaultType;, +            // at this stage, next token can either be END_OBJECT (and use default index and type, with auto generated id), +            // or START_OBJECT which will have another set of parameters, +, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/action/bulk/BulkRequestBuilder.java, +import org.elasticsearch.common.Nullable;, +        request.add(data, from, length, contentUnsafe, null, null);, +        return this;, +    }, +, +    /**, +     * Adds a framed data in binary format]