[+++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/DefBootstrap.java, +            if (type.parameterType(0) != Object.class) {, +                throw new BootstrapMethodError("The receiver type (1st arg) of invokedynamic descriptor must be Object.");, +            }, +            MethodHandle generic = DefMath.lookupGeneric(name);, +                assert flavor == BINARY_OPERATOR || flavor == SHIFT_OPERATOR;, +                // adapt dynamic cast to the generic method and the callsite's return value, +                MethodHandle cast = DYNAMIC_CAST.asType(MethodType.methodType(type().returnType(), , +                                                                              generic.type().returnType(),, +                                                                              generic.type().parameterType(0)));, +                // drop the RHS parameter, +                cast = MethodHandles.dropArguments(cast, 2, generic.type().parameterType(1));, +                // combine: f(x,y) -> g(f(x,y), x, y);, +                return MethodHandles.foldArguments(cast, generic);, +                return generic;, +        /**, +         * Slow dynamic cast: casts {@code returnValue} to the runtime type of {@code lhs}, +         * based upon inspection. If {@code lhs} is null, no cast takes place., +         * This is used for the generic fallback case of compound assignment., +         */, +        static Object dynamicCast(Object returnValue, Object lhs) {, +            if (lhs != null) {, +                return lhs.getClass().cast(returnValue);, +            } else {, +                return returnValue;, +            }, +        }, +        , +        private static final MethodHandle DYNAMIC_CAST;, +                DYNAMIC_CAST = lookup.findStatic(lookup.lookupClass(), "dynamicCast", , +                                              MethodType.methodType(Object.class, Object.class, Object.class));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/DefBootstrap.java, +            if (type.parameterType(0) != Object.class) {, +                throw new BootstrapMethodError("The receiver type (1st arg) of invokedynamic descriptor must be Object.");, +            }, +            MethodHandle generic = DefMath.lookupGeneric(name);, +                assert flavor == BINARY_OPERATOR || flavor == SHIFT_OPERATOR;, +                // adapt dynamic cast to the generic method and the callsite's return value, +                MethodHandle cast = DYNAMIC_CAST.asType(MethodType.methodType(type().returnType(), , +                                                                              generic.type().returnType(),, +                                                                              generic.type().parameterType(0)));, +                // drop the RHS parameter, +                cast = MethodHandles.dropArguments(cast, 2, generic.type().parameterType(1));, +                // combine: f(x,y) -> g(f(x,y), x, y);, +                return MethodHandles.foldArguments(cast, generic);, +                return generic;, +        /**, +         * Slow dynamic cast: casts {@code returnValue} to the runtime type of {@code lhs}, +         * based upon inspection. If {@code lhs} is null, no cast takes place., +         * This is used for the generic fallback case of compound assignment., +         */, +        static Object dynamicCast(Object returnValue, Object lhs) {, +            if (lhs != null) {, +                return lhs.getClass().cast(returnValue);, +            } else {, +                return returnValue;, +            }, +        }, +        , +        private static final MethodHandle DYNAMIC_CAST;, +                DYNAMIC_CAST = lookup.findStatic(lookup.lookupClass(), "dynamicCast", , +                                              MethodType.methodType(Object.class, Object.class, Object.class));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/DefMath.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/DefBootstrap.java, +            if (type.parameterType(0) != Object.class) {, +                throw new BootstrapMethodError("The receiver type (1st arg) of invokedynamic descriptor must be Object.");, +            }, +            MethodHandle generic = DefMath.lookupGeneric(name);, +                assert flavor == BINARY_OPERATOR || flavor == SHIFT_OPERATOR;, +                // adapt dynamic cast to the generic method and the callsite's return value, +                MethodHandle cast = DYNAMIC_CAST.asType(MethodType.methodType(type().returnType(), , +                                                                              generic.type().returnType(),, +                                                                              generic.type().parameterType(0)));, +                // drop the RHS parameter, +                cast = MethodHandles.dropArguments(cast, 2, generic.type().parameterType(1));, +                // combine: f(x,y) -> g(f(x,y), x, y);, +                return MethodHandles.foldArguments(cast, generic);, +                return generic;, +        /**, +         * Slow dynamic cast: casts {@code returnValue} to the runtime type of {@code lhs}, +         * based upon inspection. If {@code lhs} is null, no cast takes place., +         * This is used for the generic fallback case of compound assignment., +         */, +        static Object dynamicCast(Object returnValue, Object lhs) {, +            if (lhs != null) {, +                return lhs.getClass().cast(returnValue);, +            } else {, +                return returnValue;, +            }, +        }, +        , +        private static final MethodHandle DYNAMIC_CAST;, +                DYNAMIC_CAST = lookup.findStatic(lookup.lookupClass(), "dynamicCast", , +                                              MethodType.methodType(Object.class, Object.class, Object.class));, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/DefMath.java, +++ b/modules/lang-painless/src/test/java/org/elasticsearch/painless/AdditionTests.java, +++ b/modules/lang-painless/src/main/java/org/elasticsearch/painless/DefBootstrap.java, +            if (type.parameterType(0) != Object.class) {, +                throw new BootstrapMethodError("The receiver type (1st arg) of invokedynamic descriptor must be Object.");, +            }]