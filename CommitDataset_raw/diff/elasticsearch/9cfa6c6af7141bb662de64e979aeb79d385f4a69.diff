[+++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java, +import org.elasticsearch.search.aggregations.reducers.derivative.DerivativeParser;, +        reducerParsers.add(DerivativeParser.class);, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java, +import org.elasticsearch.search.aggregations.reducers.derivative.DerivativeParser;, +        reducerParsers.add(DerivativeParser.class);, +++ b/src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java, +import org.elasticsearch.search.aggregations.reducers.derivative.DerivativeReducer;, +, +        // Reducers, +        DerivativeReducer.registerStreams();, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java, +import org.elasticsearch.search.aggregations.reducers.derivative.DerivativeParser;, +        reducerParsers.add(DerivativeParser.class);, +++ b/src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java, +import org.elasticsearch.search.aggregations.reducers.derivative.DerivativeReducer;, +, +        // Reducers, +        DerivativeReducer.registerStreams();, +++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/derivative/DerivativeParser.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +, +package org.elasticsearch.search.aggregations.reducers.derivative;, +, +import org.elasticsearch.common.ParseField;, +import org.elasticsearch.common.xcontent.XContentParser;, +import org.elasticsearch.search.SearchParseException;, +import org.elasticsearch.search.aggregations.reducers.Reducer;, +import org.elasticsearch.search.aggregations.reducers.ReducerFactory;, +import org.elasticsearch.search.internal.SearchContext;, +, +import java.io.IOException;, +, +public class DerivativeParser implements Reducer.Parser {, +, +    public static final ParseField BUCKETS_PATH = new ParseField("bucketsPath");, +, +    @Override, +    public String type() {, +        return DerivativeReducer.TYPE.name();, +    }, +, +    @Override, +    public ReducerFactory parse(String reducerName, XContentParser parser, SearchContext context) throws IOException {, +        XContentParser.Token token;, +        String currentFieldName = null;, +        String bucketsPath = null;, +, +        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {, +            if (token == XContentParser.Token.FIELD_NAME) {, +                currentFieldName = parser.currentName();, +            } else if (token == XContentParser.Token.VALUE_STRING) {, +                if (BUCKETS_PATH.match(currentFieldName)) {, +                    bucketsPath = parser.text();, +                } else {, +                    throw new SearchParseException(context, "Unknown key for a " + token + " in [" + reducerName + "]: [", +                            + currentFieldName + "].");, +                }, +            } else {, +                throw new SearchParseException(context, "Unexpected token " + token + " in [" + reducerName + "].");, +            }, +        }, +, +        if (bucketsPath == null) {, +            throw new SearchParseException(context, "Missing required field [" + BUCKETS_PATH.getPreferredName(), +                    + "] for derivative aggregation [" + reducerName + "]");, +        }, +, +        return new DerivativeReducer.Factory(reducerName, bucketsPath);, +    }, +, +}, +++ b/src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java, +import org.elasticsearch.search.aggregations.reducers.derivative.DerivativeParser;, +        reducerParsers.add(DerivativeParser.class);, +++ b/src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java, +import org.elasticsearch.search.aggregations.reducers.derivative.DerivativeReducer;, +, +        // Reducers, +        DerivativeReducer.registerStreams();, +++ b/src/main/java/org/elasticsearch/search/aggregations/reducers/derivative/DerivativeParser.java, +/*, + * Licensed to Elasticsearch under one or more contributor]