[+++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +    public ReplicationOperation(Request request, Primary<Request, ReplicaRequest, PrimaryResultT> primary,, +    public void execute() throws Exception {, +    public interface Primary<, +    public interface Replicas<ReplicaRequest extends ReplicationRequest<ReplicaRequest>> {, +    public interface PrimaryResult<R extends ReplicationRequest<R>> {, +++ b/core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java, +    public ReplicationOperation(Request request, Primary<Request, ReplicaRequest, PrimaryResultT> primary,, +    public void execute() throws Exception {, +    public interface Primary<, +    public interface Replicas<ReplicaRequest extends ReplicationRequest<ReplicaRequest>> {, +    public interface PrimaryResult<R extends ReplicationRequest<R>> {, +++ b/core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright, + * ownership. Elasticsearch licenses this file to you under, + * the Apache License, Version 2.0 (the "License"); you may, + * not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *    http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing,, + * software distributed under the License is distributed on an, + * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY, + * KIND, either express or implied.  See the License for the, + * specific language governing permissions and limitations, + * under the License., + */, +package org.elasticsearch.index.replication;, +, +import org.apache.lucene.document.Document;, +import org.apache.lucene.index.LeafReader;, +import org.apache.lucene.index.LeafReaderContext;, +import org.apache.lucene.store.AlreadyClosedException;, +import org.apache.lucene.store.Directory;, +import org.apache.lucene.util.Bits;, +import org.apache.lucene.util.IOUtils;, +import org.elasticsearch.ExceptionsHelper;, +import org.elasticsearch.Version;, +import org.elasticsearch.action.ActionListener;, +import org.elasticsearch.action.admin.indices.flush.FlushRequest;, +import org.elasticsearch.action.index.IndexRequest;, +import org.elasticsearch.action.index.IndexResponse;, +import org.elasticsearch.action.index.TransportIndexAction;, +import org.elasticsearch.action.support.PlainActionFuture;, +import org.elasticsearch.action.support.replication.ReplicationOperation;, +import org.elasticsearch.action.support.replication.ReplicationResponse;, +import org.elasticsearch.action.support.replication.TransportWriteAction;, +import org.elasticsearch.cluster.ClusterState;, +import org.elasticsearch.cluster.metadata.IndexMetaData;, +import org.elasticsearch.cluster.node.DiscoveryNode;, +import org.elasticsearch.cluster.routing.ShardRouting;, +import org.elasticsearch.cluster.routing.ShardRoutingHelper;, +import org.elasticsearch.cluster.routing.ShardRoutingState;, +import org.elasticsearch.cluster.routing.TestShardRouting;, +import org.elasticsearch.common.collect.Iterators;, +import org.elasticsearch.common.compress.CompressedXContent;, +import org.elasticsearch.common.settings.Settings;, +import org.elasticsearch.common.transport.DummyTransportAddress;, +import org.elasticsearch.common.unit.ByteSizeUnit;, +import org.elasticsearch.common.util.BigArrays;, +import org.elasticsearch.env.NodeEnvironment;, +import org.elasticsearch.index.Index;, +import org.elasticsearch.index.IndexSettings;, +import org.elasticsearch.index.MapperTestUtils;, +import org.elasticsearch.index.cache.IndexCache;, +import org.elasticsearch.index.cache.query.DisabledQueryCache;, +import org.elasticsearch.index.engine.Engine;, +import org.elasticsearch.index.mapper.MapperService;, +import org.elasticsearch.index.mapper.Uid;, +import org.elasticsearch.index.mapper.internal.UidFieldMapper;, +import org.elasticsearch.index.shard.IndexEventListener;, +import org.elasticsearch.index.shard.IndexShard;, +import org.elasticsearch.index.shard.ShardId;, +import org.elasticsearch.index.shard.ShardPath;, +import org.elasticsearch.index.similarity.SimilarityService;, +import org.elasticsearch.index.store.DirectoryService;, +import org.elasticsearch.index.store.Store;, +import org.elasticsearch.indices.recovery.RecoveryFailedException;, +import org.elasticsearch.indices.recovery.RecoverySourceHandler;, +import org.elasticsearch.indices.recovery.RecoveryState;, +import org.elasticsearch.indices.recovery.RecoveryTarget;, +import org.elasticsearch.indices.recovery.RecoveryTargetService;, +import org.elasticsearch.indices.recovery.StartRecoveryRequest;, +import org.elasticsearch.test.DummyShardLock;, +import org.elasticsearch.test.ESTestCase;, +import org.elasticsearch.test.junit.annotations.TestLogging;, +import org.elasticsearch.threadpool.TestThreadPool;, +import org.elasticsearch.threadpool.ThreadPool;, +import org.elasticsearch.transport.TransportResponse;, +import org.junit.After;, +import org.junit.Before;, +, +import java.io.IOException;, +import java.nio.file.Files;, +import java.nio.file.Path;, +import java.util.ArrayList;]