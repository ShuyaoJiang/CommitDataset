[+++ b/docs/reference/cat.asciidoc, +`/_cat/thread_pool?h=ip,queue*` to get all headers (or aliases) starting, +with `queue`., +++ b/docs/reference/cat.asciidoc, +`/_cat/thread_pool?h=ip,queue*` to get all headers (or aliases) starting, +with `queue`., +++ b/docs/reference/cat/thread_pool.asciidoc, +node-0 write               0 0 0, +write, +++ b/docs/reference/cat.asciidoc, +`/_cat/thread_pool?h=ip,queue*` to get all headers (or aliases) starting, +with `queue`., +++ b/docs/reference/cat/thread_pool.asciidoc, +node-0 write               0 0 0, +write, +++ b/docs/reference/modules/threadpool.asciidoc, +`write`::, +    For single-document index/delete/update and bulk requests. Thread pool type, +    is `fixed` with a size of `# of available processors`, queue_size of `200`., +    The maximum size for this pool is `1 + # of available processors`., +++ b/docs/reference/cat.asciidoc, +`/_cat/thread_pool?h=ip,queue*` to get all headers (or aliases) starting, +with `queue`., +++ b/docs/reference/cat/thread_pool.asciidoc, +node-0 write               0 0 0, +write, +++ b/docs/reference/modules/threadpool.asciidoc, +`write`::, +    For single-document index/delete/update and bulk requests. Thread pool type, +    is `fixed` with a size of `# of available processors`, queue_size of `200`., +    The maximum size for this pool is `1 + # of available processors`., +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/RetryTests.java, +                .put("thread_pool.write.size", 1), +                .put("thread_pool.write.queue_size", 1), +            CyclicBarrier bulkBlock = blockExecutor(ThreadPool.Names.WRITE, node);, +++ b/docs/reference/cat.asciidoc, +`/_cat/thread_pool?h=ip,queue*` to get all headers (or aliases) starting, +with `queue`., +++ b/docs/reference/cat/thread_pool.asciidoc, +node-0 write               0 0 0, +write, +++ b/docs/reference/modules/threadpool.asciidoc, +`write`::, +    For single-document index/delete/update and bulk requests. Thread pool type, +    is `fixed` with a size of `# of available processors`, queue_size of `200`., +    The maximum size for this pool is `1 + # of available processors`., +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/RetryTests.java, +                .put("thread_pool.write.size", 1), +                .put("thread_pool.write.queue_size", 1), +            CyclicBarrier bulkBlock = blockExecutor(ThreadPool.Names.WRITE, node);, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cat.thread_pool/10_basic.yml, +          thread_pool_patterns: write,management,flush,generic,force_merge, +                  (\S+\s+ flush       \s+ \d+    \n, +                   \S+\s+ management  \s+ \d+    \n, +                   \S+\s+ write       \s+ \d+    \n)+  $/, +          thread_pool_patterns: write, +          h: id,name,type,active,size,queue,queue_size,rejected,largest,completed,min,max,keep_alive, +               /^  id  \s+ name  \s+ type  \s+ active \s+ size \s+ queue \s+ queue_size \s+ rejected \s+ largest \s+ completed \s+ max \s+ keep_alive \n, +                  (\S+ \s+ write \s+ fixed \s+ \d+    \s+ \d+  \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d* \s+ \S*        \n)+  $/, +          thread_pool_patterns: write,search, +               ^  (\S+       \s+ search  \s+ \d+    \s+ \d+   \s+ \d+      \n, +                   \S+       \s+ write   \s+ \d+    \s+ \d+   \s+ \d+      \n)+  $/, +++ b/docs/reference/cat.asciidoc, +`/_cat/thread_pool?h=ip,queue*` to get all headers (or aliases) starting, +with `queue`., +++ b/docs/reference/cat/thread_pool.asciidoc, +node-0 write               0 0 0, +write, +++ b/docs/reference/modules/threadpool.asciidoc, +`write`::, +    For single-document index/delete/update and bulk requests. Thread pool type, +    is `fixed` with a size of `# of available processors`, queue_size of `200`., +    The maximum size for this pool is `1 + # of available processors`., +++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/RetryTests.java, +                .put("thread_pool.write.size", 1), +                .put("thread_pool.write.queue_size", 1), +            CyclicBarrier bulkBlock = blockExecutor(ThreadPool.Names.WRITE, node);, +++ b/rest-api-spec/src/main/resources/rest-api-spec/test/cat.thread_pool/10_basic.yml, +          thread_pool_patterns: write,management,flush,generic,force_merge, +                  (\S+\s+ flush       \s+ \d+    \n, +                   \S+\s+ management  \s+ \d+    \n, +                   \S+\s+ write       \s+ \d+    \n)+  $/, +          thread_pool_patterns: write, +          h: id,name,type,active,size,queue,queue_size,rejected,largest,completed,min,max,keep_alive, +               /^  id  \s+ name  \s+ type  \s+ active \s+ size \s+ queue \s+ queue_size \s+ rejected \s+ largest \s+ completed \s+ max \s+ keep_alive \n, +                  (\S+ \s+ write \s+ fixed \s+ \d+    \s+ \d+  \s+ \d+   \s+ (-1|\d+)   \s+ \d+      \s+ \d+     \s+ \d+       \s+ \d* \s+ \S*        \n)+  $/, +          thread_pool_patterns: write,search, +               ^  (\S+       \s+ search  \s+ \d+    \s+ \d+   \s+ \d+      \n, +                   \S+       \s+ write   \s+ \d+    \s+ \d+   \s+ \d+      \n)+  $/, +++ b/server/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java, +            indexNameExpressionResolver, BulkShardRequest::new, BulkShardRequest::new, ThreadPool.Names.WRITE);, +++ b/docs/reference/cat.asciidoc, +`/_cat/thread_pool?h=ip,queue*` to get all headers (or aliases) starting, +with `queue`., +++ b/docs/reference/cat/thread_pool.asciidoc, +node-0 write               0 0 0, +write, +++ b/docs/reference/modules/threadpool.asciidoc, +`write`::, +    For single-document index/delete/update and bulk requests. Thread pool type]