[+++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import javax.security.auth.DestroyFailedException;, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/graph/rest/action/RestGraphAction.java, +import static org.elasticsearch.index.query.AbstractQueryBuilder.parseInnerQueryBuilder;, +                    currentHop.guidingQuery(parseInnerQueryBuilder(parser));, +                            excludes = new HashSet<>();, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/graph/rest/action/RestGraphAction.java, +import static org.elasticsearch.index.query.AbstractQueryBuilder.parseInnerQueryBuilder;, +                    currentHop.guidingQuery(parseInnerQueryBuilder(parser));, +                            excludes = new HashSet<>();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedConfig.java, +import org.elasticsearch.index.query.AbstractQueryBuilder;, +                (p, c) -> AbstractQueryBuilder.parseInnerQueryBuilder(p), QUERY);, +                    parsedScriptFields.add(new SearchSourceBuilder.ScriptField(p));, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;, +import javax.security.auth.DestroyFailedException;, +++ b/plugin/src/main/java/org/elasticsearch/xpack/graph/rest/action/RestGraphAction.java, +import static org.elasticsearch.index.query.AbstractQueryBuilder.parseInnerQueryBuilder;, +                    currentHop.guidingQuery(parseInnerQueryBuilder(parser));, +                            excludes = new HashSet<>();, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedConfig.java, +import org.elasticsearch.index.query.AbstractQueryBuilder;, +                (p, c) -> AbstractQueryBuilder.parseInnerQueryBuilder(p), QUERY);, +                    parsedScriptFields.add(new SearchSourceBuilder.ScriptField(p));, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedUpdate.java, +import org.elasticsearch.index.query.AbstractQueryBuilder;, +                (p, c) -> AbstractQueryBuilder.parseInnerQueryBuilder(p), DatafeedConfig.QUERY);, +                    parsedScriptFields.add(new SearchSourceBuilder.ScriptField(p));, +++ b/build.gradle, +    approvedLicenses = ['Elasticsearch Confidential'], +++ b/dev-tools/checkstyle_suppressions.xml, +++ b/plugin/build.gradle, +++ /dev/null, +++ /dev/null, +++ /dev/null, +++ b/plugin/src/main/java/org/elasticsearch/xpack/XPackPlugin.java, +import org.elasticsearch.script.ExecutableScript;]