[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java, +                        logger.debug(shardIt.shardId() + ": Failed to execute [{}]", failure, request);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java, +                        logger.debug(shardIt.shardId() + ": Failed to execute [{}]", failure, request);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import org.elasticsearch.ExceptionsHelper;, +            } catch (ElasticSearchException e) {, +                if (!(e.unwrapCause() instanceof ConnectTransportException)) {, +                    throw e;, +                }, +        } catch (ElasticSearchException e) {, +            if (e.unwrapCause() instanceof ConnectTransportException) {, +            } else {, +                throw e;, +            }, +            if (ExceptionsHelper.unwrapCause(e) instanceof ConnectTransportException) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java, +                        logger.debug(shardIt.shardId() + ": Failed to execute [{}]", failure, request);, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java, +import org.elasticsearch.ExceptionsHelper;, +            } catch (ElasticSearchException e) {, +                if (!(e.unwrapCause() instanceof ConnectTransportException)) {, +                    throw e;, +                }, +        } catch (ElasticSearchException e) {, +            if (e.unwrapCause() instanceof ConnectTransportException) {, +            } else {, +                throw e;, +            }, +            if (ExceptionsHelper.unwrapCause(e) instanceof ConnectTransportException) {, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java, +                    String localNodeId = localNodeId();, +                    if (localNodeId != null) {, +                        resolvedNodesIds.add(localNodeId);, +                    }, +                    String masterNodeId = masterNodeId();, +                    if (masterNodeId != null) {, +                        resolvedNodesIds.add(masterNodeId);, +                    }]