[+++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +    private static ObjectParser<IdsQueryBuilder, Void> PARSER = new ObjectParser<>(NAME,, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +    private static ObjectParser<IdsQueryBuilder, Void> PARSER = new ObjectParser<>(NAME,, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    private static final ObjectParser<InnerHitBuilder, Void> PARSER = new ObjectParser<>("inner_hits", InnerHitBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +    private static ObjectParser<IdsQueryBuilder, Void> PARSER = new ObjectParser<>(NAME,, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    private static final ObjectParser<InnerHitBuilder, Void> PARSER = new ObjectParser<>("inner_hits", InnerHitBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchAllQueryBuilder.java, +    private static final ObjectParser<MatchAllQueryBuilder, Void> PARSER = new ObjectParser<>(NAME, MatchAllQueryBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +    private static ObjectParser<IdsQueryBuilder, Void> PARSER = new ObjectParser<>(NAME,, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    private static final ObjectParser<InnerHitBuilder, Void> PARSER = new ObjectParser<>("inner_hits", InnerHitBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchAllQueryBuilder.java, +    private static final ObjectParser<MatchAllQueryBuilder, Void> PARSER = new ObjectParser<>(NAME, MatchAllQueryBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java, +    protected QueryBuilder doRewrite(QueryRewriteContext queryRewriteContext) {, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +    private static ObjectParser<IdsQueryBuilder, Void> PARSER = new ObjectParser<>(NAME,, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    private static final ObjectParser<InnerHitBuilder, Void> PARSER = new ObjectParser<>("inner_hits", InnerHitBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchAllQueryBuilder.java, +    private static final ObjectParser<MatchAllQueryBuilder, Void> PARSER = new ObjectParser<>(NAME, MatchAllQueryBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java, +    protected QueryBuilder doRewrite(QueryRewriteContext queryRewriteContext) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +    private static ObjectParser<IdsQueryBuilder, Void> PARSER = new ObjectParser<>(NAME,, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    private static final ObjectParser<InnerHitBuilder, Void> PARSER = new ObjectParser<>("inner_hits", InnerHitBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchAllQueryBuilder.java, +    private static final ObjectParser<MatchAllQueryBuilder, Void> PARSER = new ObjectParser<>(NAME, MatchAllQueryBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java, +    protected QueryBuilder doRewrite(QueryRewriteContext queryRewriteContext) {, +++ /dev/null, +++ b/core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java, +++ b/core/src/main/java/org/elasticsearch/common/ParsingException.java, +import org.elasticsearch.common.xcontent.XContentParser;, + * Exception that can be used when parsing queries with a given {@link, + * XContentParser}., +     * {@link XContentParser} may not be available, +++ b/core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java, +++ b/core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java, +    private static ObjectParser<IdsQueryBuilder, Void> PARSER = new ObjectParser<>(NAME,, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    private static final ObjectParser<InnerHitBuilder, Void> PARSER = new ObjectParser<>("inner_hits", InnerHitBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MatchAllQueryBuilder.java, +    private static final ObjectParser<MatchAllQueryBuilder, Void> PARSER = new ObjectParser<>(NAME, MatchAllQueryBuilder::new);, +++ b/core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java, +    protected QueryBuilder doRewrite(QueryRewriteContext queryRewriteContext) {]