[+++ b/plugin/build.gradle, +integTest {, +  cluster {, +}, +++ b/plugin/build.gradle, +integTest {, +  cluster {, +}, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/TransportJobTaskAction.java, +                throw wrapThrowable(taskOperationFailures.get(0).getCause());, +                throw wrapThrowable(failedNodeExceptions.get(0).getCause());, +    private ElasticsearchException wrapThrowable(Throwable th) {, +        if (th instanceof ElasticsearchException) {, +            return (ElasticsearchException) th;, +        } else {, +            return new ElasticsearchException(th);, +        }, +    }, +, +++ b/plugin/build.gradle, +integTest {, +  cluster {, +}, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/TransportJobTaskAction.java, +                throw wrapThrowable(taskOperationFailures.get(0).getCause());, +                throw wrapThrowable(failedNodeExceptions.get(0).getCause());, +    private ElasticsearchException wrapThrowable(Throwable th) {, +        if (th instanceof ElasticsearchException) {, +            return (ElasticsearchException) th;, +        } else {, +            return new ElasticsearchException(th);, +        }, +    }, +, +++ b/qa/audit-tests/build.gradle, +integTest {, +  cluster {, +}, +++ b/plugin/build.gradle, +integTest {, +  cluster {, +}, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/TransportJobTaskAction.java, +                throw wrapThrowable(taskOperationFailures.get(0).getCause());, +                throw wrapThrowable(failedNodeExceptions.get(0).getCause());, +    private ElasticsearchException wrapThrowable(Throwable th) {, +        if (th instanceof ElasticsearchException) {, +            return (ElasticsearchException) th;, +        } else {, +            return new ElasticsearchException(th);, +        }, +    }, +, +++ b/qa/audit-tests/build.gradle, +integTest {, +  cluster {, +}, +++ b/qa/core-rest-tests-with-security/build.gradle, +  cluster {, +}, +++ b/plugin/build.gradle, +integTest {, +  cluster {, +}, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/TransportJobTaskAction.java, +                throw wrapThrowable(taskOperationFailures.get(0).getCause());, +                throw wrapThrowable(failedNodeExceptions.get(0).getCause());, +    private ElasticsearchException wrapThrowable(Throwable th) {, +        if (th instanceof ElasticsearchException) {, +            return (ElasticsearchException) th;, +        } else {, +            return new ElasticsearchException(th);, +        }, +    }, +, +++ b/qa/audit-tests/build.gradle, +integTest {, +  cluster {, +}, +++ b/qa/core-rest-tests-with-security/build.gradle, +  cluster {, +}, +++ b/qa/ml-basic-multi-node/build.gradle, +integTest {, +    cluster {, +}, +++ b/plugin/build.gradle, +integTest {, +  cluster {, +}, +++ b/plugin/src/main/java/org/elasticsearch/xpack/ml/action/TransportJobTaskAction.java, +                throw wrapThrowable(taskOperationFailures.get(0).getCause());, +                throw wrapThrowable(failedNodeExceptions.get(0).getCause());, +    private ElasticsearchException wrapThrowable(Throwable th) {, +        if (th instanceof ElasticsearchException) {, +            return (ElasticsearchException) th;, +        } else {, +            return new ElasticsearchException(th);, +        }, +    }]