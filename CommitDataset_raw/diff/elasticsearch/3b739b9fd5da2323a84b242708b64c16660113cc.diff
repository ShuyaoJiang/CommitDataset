[+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +import org.apache.lucene.util.LuceneTestCase.AwaitsFix;, +@AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/32580"), +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +import org.apache.lucene.util.LuceneTestCase.AwaitsFix;, +@AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/32580"), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +import org.apache.lucene.util.LuceneTestCase.AwaitsFix;, +@AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/32580"), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/LicensingDocumentationIT.java, +import org.apache.lucene.util.LuceneTestCase.AwaitsFix;, +@AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/32580"), +++ b/docs/reference/cat/thread_pool.asciidoc, +..., +// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)+/], +ccr (default distro only), +     0     0        0, +++ b/docs/reference/indices/flush.asciidoc, +                     "max_unsafe_auto_id_timestamp" : "-1",, +                     "min_retained_seq_no": "0", +++ b/docs/reference/ingest/ingest-node.asciidoc, +[[dot-expand-processor]], +=== Dot Expander Processor, +, +Expands a field with dots into an object field. This processor allows fields, +with dots in the name to be accessible by other processors in the pipeline., +Otherwise these <<accessing-data-in-pipelines,fields>> can't be accessed by any processor., +, +[[dot-expender-options]], +.Dot Expand Options, +[options="header"], +|======, +| Name     | Required  | Default  | Description, +| `field`  | yes       | -        | The field to expand into an object field, +| `path`   | no        | -        | The field that contains the field to expand. Only required if the field to expand is part another object field, because the `field` option can only understand leaf fields., +|======, +, +[source,js], +--------------------------------------------------, +{, +  "dot_expander": {, +    "field": "foo.bar", +  }, +}, +--------------------------------------------------, +// NOTCONSOLE, +, +For example the dot expand processor would turn this document:, +, +[source,js], +--------------------------------------------------, +{, +  "foo.bar" : "value", +}, +--------------------------------------------------, +// NOTCONSOLE, +, +into:, +, +[source,js], +--------------------------------------------------, +{, +  "foo" : {, +    "bar" : "value", +  }, +}, +--------------------------------------------------, +// NOTCONSOLE, +, +If there is already a `bar` field nested under `foo` then, +this processor merges the `foo.bar` field into it. If the field is, +a scalar value then it will turn that field into an array field., +, +For example, the following document:, +, +[source,js], +--------------------------------------------------, +{, +  "foo.bar" : "value2",, +  "foo" : {, +    "bar" : "value1", +  }, +}, +--------------------------------------------------, +// NOTCONSOLE, +, +is transformed by the `dot_expander` processor into:]