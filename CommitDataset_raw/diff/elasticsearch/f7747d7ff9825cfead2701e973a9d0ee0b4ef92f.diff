[+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +, +    /**, +     * @return null If no settings set for "settingsPrefix + _path" then return null., +     *, +     * @throws ElasticSearchIllegalArgumentException, +     *          If the Reader can not be instantiated., +     */, +    public static Reader getFileReader(Environment env, Settings settings, String settingPrefix) {, +        String filePath = settings.get(settingPrefix + "_path", null);, +, +        if (filePath == null) {, +            return null;, +        }, +, +        URL fileUrl = env.resolveConfig(filePath);, +, +        Reader reader = null;, +        try {, +            reader = new InputStreamReader(fileUrl.openStream(), Charsets.UTF_8);, +        } catch (IOException ioe) {, +            String message = String.format("IOException while reading %s_path: %s", settingPrefix, ioe.getMessage());, +            throw new ElasticSearchIllegalArgumentException(message);, +        }, +, +        return reader;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/Analysis.java, +, +    /**, +     * @return null If no settings set for "settingsPrefix + _path" then return null., +     *, +     * @throws ElasticSearchIllegalArgumentException, +     *          If the Reader can not be instantiated., +     */, +    public static Reader getFileReader(Environment env, Settings settings, String settingPrefix) {, +        String filePath = settings.get(settingPrefix + "_path", null);, +, +        if (filePath == null) {, +            return null;, +        }, +, +        URL fileUrl = env.resolveConfig(filePath);, +, +        Reader reader = null;, +        try {, +            reader = new InputStreamReader(fileUrl.openStream(), Charsets.UTF_8);, +        } catch (IOException ioe) {, +            String message = String.format("IOException while reading %s_path: %s", settingPrefix, ioe.getMessage());, +            throw new ElasticSearchIllegalArgumentException(message);, +        }, +, +        return reader;, +    }, +++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/analysis/SynonymTokenFilterFactory.java, +import org.apache.lucene.analysis.synonym.SolrSynonymParser;, +import org.apache.lucene.analysis.synonym.WordnetSynonymParser;, +        Reader rulesReader = Analysis.getFileReader(env, settings, "synonyms");, +        if (rulesReader == null) {, +            throw new ElasticSearchIllegalArgumentException("failed to find tokenizer [" + tokenizerName + "] for synonym token filter");, +            SynonymMap.Builder parser = null;, +, +            if (settings.get("format","wordnet").equalsIgnoreCase("wordnet")) {, +                parser = new WordnetSynonymParser(true, expand, analyzer);, +                ((WordnetSynonymParser)parser).add(rulesReader);, +            } else {, +                parser = new SolrSynonymParser(true, expand, analyzer);, +                ((SolrSynonymParser)parser).add(rulesReader);, +        } catch (Exception e) {]