[+++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/indicesresolver/DefaultIndicesAndAliasesResolver.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;, +            IndicesOptions indicesOptions = indicesRequest.indicesOptions();, +            if (indicesRequest instanceof IndicesExistsRequest) {, +                //indices exists api should never throw exception, make sure that ignore_unavailable and allow_no_indices are true, +                //we have to mimic what TransportIndicesExistsAction#checkBlock does in es core, +                indicesOptions = IndicesOptions.fromOptions(true, true,, +                        indicesOptions.expandWildcardsOpen(), indicesOptions.expandWildcardsClosed());, +            }, +, +                        if (isIndexVisible(authorizedIndex, indicesOptions, metaData)) {, +                        indicesOptions, metaData, authorizedIndicesAndAliases, replaceWildcards);, +                if (indicesOptions.ignoreUnavailable()) {, +                if (indicesOptions.allowNoIndices()) {, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/indicesresolver/DefaultIndicesAndAliasesResolver.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;, +            IndicesOptions indicesOptions = indicesRequest.indicesOptions();, +            if (indicesRequest instanceof IndicesExistsRequest) {, +                //indices exists api should never throw exception, make sure that ignore_unavailable and allow_no_indices are true, +                //we have to mimic what TransportIndicesExistsAction#checkBlock does in es core, +                indicesOptions = IndicesOptions.fromOptions(true, true,, +                        indicesOptions.expandWildcardsOpen(), indicesOptions.expandWildcardsClosed());, +            }, +, +                        if (isIndexVisible(authorizedIndex, indicesOptions, metaData)) {, +                        indicesOptions, metaData, authorizedIndicesAndAliases, replaceWildcards);, +                if (indicesOptions.ignoreUnavailable()) {, +                if (indicesOptions.allowNoIndices()) {, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java, +import org.elasticsearch.action.admin.indices.get.GetIndexRequest;, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("a");, +        User user = new User("test user", new String[] { "can run as" }, new User("run as me", "b"));, +        TransportRequest request = new GetIndexRequest().indices("b");, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/indicesresolver/DefaultIndicesAndAliasesResolver.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;, +            IndicesOptions indicesOptions = indicesRequest.indicesOptions();, +            if (indicesRequest instanceof IndicesExistsRequest) {, +                //indices exists api should never throw exception, make sure that ignore_unavailable and allow_no_indices are true, +                //we have to mimic what TransportIndicesExistsAction#checkBlock does in es core, +                indicesOptions = IndicesOptions.fromOptions(true, true,, +                        indicesOptions.expandWildcardsOpen(), indicesOptions.expandWildcardsClosed());, +            }, +, +                        if (isIndexVisible(authorizedIndex, indicesOptions, metaData)) {, +                        indicesOptions, metaData, authorizedIndicesAndAliases, replaceWildcards);, +                if (indicesOptions.ignoreUnavailable()) {, +                if (indicesOptions.allowNoIndices()) {, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java, +import org.elasticsearch.action.admin.indices.get.GetIndexRequest;, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("a");, +        User user = new User("test user", new String[] { "can run as" }, new User("run as me", "b"));, +        TransportRequest request = new GetIndexRequest().indices("b");, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/security/authz/indicesresolver/DefaultIndicesResolverTests.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsAction;, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;, +    public void testIndicesExists() {, +        //verify that the ignore_unavailable and allow_no_indices get replaced like es core does, to make sure that, +        //indices exists api never throws exception due to missing indices, but only returns false instead., +        {, +            IndicesExistsRequest request = new IndicesExistsRequest();, +            assertNoIndices(request, defaultIndicesResolver.resolve(userNoIndices, IndicesExistsAction.NAME, request, metaData));, +        }, +        {, +            IndicesExistsRequest request = new IndicesExistsRequest("does_not_exist");, +            assertNoIndices(request, defaultIndicesResolver.resolve(user, IndicesExistsAction.NAME, request, metaData));, +        }, +        {, +            IndicesExistsRequest request = new IndicesExistsRequest("does_not_exist_*");, +            assertNoIndices(request, defaultIndicesResolver.resolve(user, IndicesExistsAction.NAME, request, metaData));, +        }, +    }, +, +++ b/elasticsearch/src/main/java/org/elasticsearch/xpack/security/authz/indicesresolver/DefaultIndicesAndAliasesResolver.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;, +            IndicesOptions indicesOptions = indicesRequest.indicesOptions();, +            if (indicesRequest instanceof IndicesExistsRequest) {, +                //indices exists api should never throw exception, make sure that ignore_unavailable and allow_no_indices are true, +                //we have to mimic what TransportIndicesExistsAction#checkBlock does in es core, +                indicesOptions = IndicesOptions.fromOptions(true, true,, +                        indicesOptions.expandWildcardsOpen(), indicesOptions.expandWildcardsClosed());, +            }, +, +                        if (isIndexVisible(authorizedIndex, indicesOptions, metaData)) {, +                        indicesOptions, metaData, authorizedIndicesAndAliases, replaceWildcards);, +                if (indicesOptions.ignoreUnavailable()) {, +                if (indicesOptions.allowNoIndices()) {, +++ b/elasticsearch/src/test/java/org/elasticsearch/xpack/security/authz/AuthorizationServiceTests.java, +import org.elasticsearch.action.admin.indices.get.GetIndexRequest;, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("b");, +        TransportRequest request = new GetIndexRequest().indices("a");, +        User user = new User("test user", new String[] { "can run as" }, new User("run as me", "b"));, +        TransportRequest request = new GetIndexRequest().indices("b");]