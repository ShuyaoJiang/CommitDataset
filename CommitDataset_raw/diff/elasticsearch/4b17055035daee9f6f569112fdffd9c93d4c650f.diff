[+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.GetUsersRequest;, +import org.elasticsearch.client.security.GetUsersResponse;, +     * Get a user, or list of users, in the native realm synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">, +     * the docs</a> for more information., +     * @param request the request with the user's name, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the get users call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetUsersResponse getUsers(GetUsersRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::getUsers, options,, +            GetUsersResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Get a user, or list of users, in the native realm asynchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">, +     * the docs</a> for more information., +     * @param request the request with the user's name, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getUsersAsync(GetUsersRequest request, RequestOptions options, ActionListener<GetUsersResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::getUsers, options,, +            GetUsersResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.GetUsersRequest;, +import org.elasticsearch.client.security.GetUsersResponse;, +     * Get a user, or list of users, in the native realm synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">, +     * the docs</a> for more information., +     * @param request the request with the user's name, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the get users call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetUsersResponse getUsers(GetUsersRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::getUsers, options,, +            GetUsersResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Get a user, or list of users, in the native realm asynchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">, +     * the docs</a> for more information., +     * @param request the request with the user's name, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getUsersAsync(GetUsersRequest request, RequestOptions options, ActionListener<GetUsersResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::getUsers, options,, +            GetUsersResponse::fromXContent, listener, emptySet());, +    }, +, +    /**, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityRequestConverters.java, +import org.elasticsearch.client.security.GetUsersRequest;, +    static Request getUsers(GetUsersRequest getUsersRequest) {, +        RequestConverters.EndpointBuilder builder = new RequestConverters.EndpointBuilder(), +            .addPathPartAsIs("_security/user");, +        if (getUsersRequest.getUsernames().size() > 0) {, +            builder.addPathPart(Strings.collectionToCommaDelimitedString(getUsersRequest.getUsernames()));, +        }, +        return new Request(HttpGet.METHOD_NAME, builder.build());, +    }, +, +++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SecurityClient.java, +import org.elasticsearch.client.security.GetUsersRequest;, +import org.elasticsearch.client.security.GetUsersResponse;, +     * Get a user, or list of users, in the native realm synchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">, +     * the docs</a> for more information., +     * @param request the request with the user's name, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @return the response from the get users call, +     * @throws IOException in case there is a problem sending the request or parsing back the response, +     */, +    public GetUsersResponse getUsers(GetUsersRequest request, RequestOptions options) throws IOException {, +        return restHighLevelClient.performRequestAndParseEntity(request, SecurityRequestConverters::getUsers, options,, +            GetUsersResponse::fromXContent, emptySet());, +    }, +, +    /**, +     * Get a user, or list of users, in the native realm asynchronously., +     * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html">, +     * the docs</a> for more information., +     * @param request the request with the user's name, +     * @param options the request options (e.g., headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized, +     * @param listener the listener to be notified upon request completion, +     */, +    public void getUsersAsync(GetUsersRequest request, RequestOptions options, ActionListener<GetUsersResponse> listener) {, +        restHighLevelClient.performRequestAsyncAndParseEntity(request, SecurityRequestConverters::getUsers, options,, +            GetUsersResponse::fromXContent, listener, emptySet());, +    }, +]