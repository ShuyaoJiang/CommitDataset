[+++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +import org.elasticsearch.test.discovery.TestZenDiscovery;, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)), +            .put(TestZenDiscovery.USE_ZEN2.getKey(), false) // no state persistence yet, +            .build();, +    }, +, +    @Override, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +import org.elasticsearch.test.discovery.TestZenDiscovery;, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)), +            .put(TestZenDiscovery.USE_ZEN2.getKey(), false) // no state persistence yet, +            .build();, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.cluster.coordination.FailedToCommitClusterStateException.class,, +                org.elasticsearch.cluster.coordination.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +            MultiBucketConsumerService.TooManyBucketsException::new, 149, Version.V_7_0_0),, +        COORDINATION_STATE_REJECTED_EXCEPTION(org.elasticsearch.cluster.coordination.CoordinationStateRejectedException.class,, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0);, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +import org.elasticsearch.test.discovery.TestZenDiscovery;, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)), +            .put(TestZenDiscovery.USE_ZEN2.getKey(), false) // no state persistence yet, +            .build();, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.cluster.coordination.FailedToCommitClusterStateException.class,, +                org.elasticsearch.cluster.coordination.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +            MultiBucketConsumerService.TooManyBucketsException::new, 149, Version.V_7_0_0),, +        COORDINATION_STATE_REJECTED_EXCEPTION(org.elasticsearch.cluster.coordination.CoordinationStateRejectedException.class,, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.cluster.bootstrap.BootstrapClusterAction;, +import org.elasticsearch.action.admin.cluster.bootstrap.GetDiscoveredNodesAction;, +import org.elasticsearch.action.admin.cluster.bootstrap.TransportBootstrapClusterAction;, +import org.elasticsearch.action.admin.cluster.bootstrap.TransportGetDiscoveredNodesAction;, +import org.elasticsearch.action.admin.cluster.configuration.AddVotingTombstonesAction;, +import org.elasticsearch.action.admin.cluster.configuration.ClearVotingTombstonesAction;, +import org.elasticsearch.action.admin.cluster.configuration.TransportAddVotingTombstonesAction;, +import org.elasticsearch.action.admin.cluster.configuration.TransportClearVotingTombstonesAction;, +        actions.register(GetDiscoveredNodesAction.INSTANCE, TransportGetDiscoveredNodesAction.class);, +        actions.register(BootstrapClusterAction.INSTANCE, TransportBootstrapClusterAction.class);, +        actions.register(AddVotingTombstonesAction.INSTANCE, TransportAddVotingTombstonesAction.class);, +        actions.register(ClearVotingTombstonesAction.INSTANCE, TransportClearVotingTombstonesAction.class);, +++ b/build.gradle, +final boolean bwc_tests_enabled = false, +final String bwc_tests_disabled_issue = "https://github.com/elastic/elasticsearch/issues/32006" // BWC handled at a later time, +++ b/modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/IngestRestartIT.java, +import org.elasticsearch.test.discovery.TestZenDiscovery;, +    protected Settings nodeSettings(int nodeOrdinal) {, +        return Settings.builder().put(super.nodeSettings(nodeOrdinal)), +            .put(TestZenDiscovery.USE_ZEN2.getKey(), false) // no state persistence yet, +            .build();, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/ElasticsearchException.java, +        FAILED_TO_COMMIT_CLUSTER_STATE_EXCEPTION(org.elasticsearch.cluster.coordination.FailedToCommitClusterStateException.class,, +                org.elasticsearch.cluster.coordination.FailedToCommitClusterStateException::new, 140, UNKNOWN_VERSION_ADDED),, +            MultiBucketConsumerService.TooManyBucketsException::new, 149, Version.V_7_0_0),, +        COORDINATION_STATE_REJECTED_EXCEPTION(org.elasticsearch.cluster.coordination.CoordinationStateRejectedException.class,, +            org.elasticsearch.cluster.coordination.CoordinationStateRejectedException::new, 150, Version.V_7_0_0);, +++ b/server/src/main/java/org/elasticsearch/action/ActionModule.java, +import org.elasticsearch.action.admin.cluster.bootstrap.BootstrapClusterAction;, +import org.elasticsearch.action.admin.cluster.bootstrap.GetDiscoveredNodesAction;, +import org.elasticsearch.action.admin.cluster.bootstrap.TransportBootstrapClusterAction;, +import org.elasticsearch.action.admin.cluster.bootstrap.TransportGetDiscoveredNodesAction;, +import org.elasticsearch.action.admin.cluster.configuration.AddVotingTombstonesAction;, +import org.elasticsearch.action.admin.cluster.configuration.ClearVotingTombstonesAction;, +import org.elasticsearch.action.admin.cluster.configuration.TransportAddVotingTombstonesAction;, +import org.elasticsearch.action.admin.cluster.configuration.TransportClearVotingTombstonesAction;, +        actions.register(GetDiscoveredNodesAction.INSTANCE, TransportGetDiscoveredNodesAction.class);, +        actions.register(BootstrapClusterAction.INSTANCE, TransportBootstrapClusterAction.class);, +        actions.register(AddVotingTombstonesAction.INSTANCE, TransportAddVotingTombstonesAction.class);, +        actions.register(ClearVotingTombstonesAction.INSTANCE, TransportClearVotingTombstonesAction.class);, +++ b/server/src/main/java/org/elasticsearch/action/admin/cluster/bootstrap/BootstrapClusterAction.java, +/*, + * Licensed to Elasticsearch under one or more contributor, + * license agreements. See the NOTICE file distributed with, + * this work for additional information regarding copyright]