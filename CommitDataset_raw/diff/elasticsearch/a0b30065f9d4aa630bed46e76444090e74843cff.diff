[+++ b/distribution/bwc/build.gradle, +        return tasks.create(name: "$name", type: Exec) {, +    Closure buildBwcTaskName = { projectName -> , +      return "buildBwc${projectName.replaceAll(/-\w/){ it[1].toUpperCase() }.capitalize()}", +, +    task buildBwc {}, +, +    Closure createBuildBwcTask = { projectName, projectDir, projectArtifact ->, +        Task bwcTask = createRunBwcGradleTask(buildBwcTaskName(projectName)) {, +            args ":${projectDir.replace('/', ':')}:assemble", +                if (projectArtifact.exists() == false) {, +                    throw new InvalidUserDataException("Building ${bwcVersion} didn't generate expected file ${projectArtifact}"), +        buildBwc.dependsOn bwcTask, +    }, +, +    Map<String, File> artifactFiles = [:], +    List<String> projectDirs = [], +    List<String> projects = ['deb', 'rpm'], +    if (bwcVersion.onOrAfter('7.0.0')) {, +      projects.addAll(['windows-zip', 'darwin-tar', 'linux-tar']), +    } else {, +      projects.add('zip'), +    }, +, +    for (String projectName : projects) {, +        String baseDir = "distribution", +        String classifier = "", +        String extension = projectName, +        if (bwcVersion.onOrAfter('7.0.0') && (projectName.contains('zip') || projectName.contains('tar'))) {, +          int index = projectName.indexOf('-'), +          classifier = "-${projectName.substring(0, index)}-x86_64", +          extension = projectName.substring(index + 1), +          if (extension.equals('tar')) {, +            extension += '.gz', +          }, +        }, +        if (bwcVersion.onOrAfter('7.0.0') && projectName.contains('deb')) {, +          classifier = "-amd64", +        }, +        if (bwcVersion.onOrAfter('7.0.0') && projectName.contains('rpm')) {, +          classifier = "-x86_64", +        }, +        if (bwcVersion.onOrAfter('6.3.0')) {, +            baseDir += projectName.endsWith('zip') || projectName.endsWith('tar') ? '/archives' : '/packages', +            // add oss variant first, +            projectDirs.add("${baseDir}/oss-${projectName}"), +            File ossProjectArtifact = file("${checkoutDir}/${baseDir}/oss-${projectName}/build/distributions/elasticsearch-oss-${bwcVersion}-SNAPSHOT${classifier}.${extension}"), +            artifactFiles.put("oss-" + projectName, ossProjectArtifact), +            createBuildBwcTask("oss-${projectName}", "${baseDir}/oss-${projectName}", ossProjectArtifact), +        }, +        projectDirs.add("${baseDir}/${projectName}"), +        File projectArtifact = file("${checkoutDir}/${baseDir}/${projectName}/build/distributions/elasticsearch-${bwcVersion}-SNAPSHOT${classifier}.${extension}"), +        artifactFiles.put(projectName, projectArtifact), +                , +        createBuildBwcTask(projectName, "${baseDir}/${projectName}", projectArtifact), +    }, +    , +        String buildBwcTask = buildBwcTaskName(projectName), +            it.add(projectName, [file: artifactFile, name: artifactName, classifier: classifier, type: suffix, builtBy: buildBwcTask])]