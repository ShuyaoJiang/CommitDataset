[+++ b/server/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +        if (lon > 180d || lon <= -180d) {, +            lon = centeredModulus(lon, 360);, +        }, +        // avoid -0.0, +        return lon + 0d;, +        if (lat > 90d || lat < -90d) {, +        }, +        // avoid -0.0, +        return lat + 0d;, +++ b/server/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +        if (lon > 180d || lon <= -180d) {, +            lon = centeredModulus(lon, 360);, +        }, +        // avoid -0.0, +        return lon + 0d;, +        if (lat > 90d || lat < -90d) {, +        }, +        // avoid -0.0, +        return lat + 0d;, +++ b/server/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +    public Circle buildS4J() {, +    public Object buildLucene() {, +        throw new UnsupportedOperationException("CIRCLE geometry is not supported");, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +        if (lon > 180d || lon <= -180d) {, +            lon = centeredModulus(lon, 360);, +        }, +        // avoid -0.0, +        return lon + 0d;, +        if (lat > 90d || lat < -90d) {, +        }, +        // avoid -0.0, +        return lat + 0d;, +++ b/server/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +    public Circle buildS4J() {, +    public Object buildLucene() {, +        throw new UnsupportedOperationException("CIRCLE geometry is not supported");, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    public Rectangle buildS4J() {, +    public org.apache.lucene.geo.Rectangle buildLucene() {, +        return new org.apache.lucene.geo.Rectangle(bottomRight.y, topLeft.y, topLeft.x, bottomRight.x);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +        if (lon > 180d || lon <= -180d) {, +            lon = centeredModulus(lon, 360);, +        }, +        // avoid -0.0, +        return lon + 0d;, +        if (lat > 90d || lat < -90d) {, +        }, +        // avoid -0.0, +        return lat + 0d;, +++ b/server/src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java, +    public Circle buildS4J() {, +    public Object buildLucene() {, +        throw new UnsupportedOperationException("CIRCLE geometry is not supported");, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java, +    public Rectangle buildS4J() {, +    public org.apache.lucene.geo.Rectangle buildLucene() {, +        return new org.apache.lucene.geo.Rectangle(bottomRight.y, topLeft.y, topLeft.x, bottomRight.x);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java, +import java.util.Arrays;, +    public Shape buildS4J() {, +            shapes.add(shape.buildS4J());, +    public Object buildLucene() {, +        List<Object> shapes = new ArrayList<>(this.shapes.size());, +, +        for (ShapeBuilder shape : this.shapes) {, +            Object o = shape.buildLucene();, +            if (o.getClass().isArray()) {, +                shapes.addAll(Arrays.asList((Object[])o));, +            } else {, +                shapes.add(o);, +            }, +        }, +, +        if (shapes.size() == 1) {, +            return shapes.get(0);, +        }, +        return shapes.toArray(new Object[shapes.size()]);, +    }, +, +    @Override, +++ b/server/src/main/java/org/elasticsearch/common/geo/GeoUtils.java, +        if (lon > 180d || lon <= -180d) {]