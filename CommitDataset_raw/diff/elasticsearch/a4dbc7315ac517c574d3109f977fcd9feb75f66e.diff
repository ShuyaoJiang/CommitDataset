[+++ b/src/test/java/org/elasticsearch/alerts/AbstractAlertingTests.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.alerts.actions.AlertActionManager;, +import org.elasticsearch.alerts.actions.AlertActionState;, +import java.util.concurrent.TimeUnit;, +import static org.elasticsearch.index.query.QueryBuilders.boolQuery;, +import static org.elasticsearch.index.query.QueryBuilders.termQuery;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.core.Is.is;, +    protected void assertAlertTriggered(final String alertName) throws Exception {, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                IndicesExistsResponse indicesExistsResponse = client().admin().indices().prepareExists(AlertActionManager.ALERT_HISTORY_INDEX).get();, +                assertThat(indicesExistsResponse.isExists(), is(true));, +, +                SearchResponse searchResponse = client().prepareSearch(AlertActionManager.ALERT_HISTORY_INDEX), +                        .setIndicesOptions(IndicesOptions.lenientExpandOpen()), +                        .setQuery(boolQuery().must(termQuery("alert_name", alertName)).must(termQuery("state", AlertActionState.ACTION_PERFORMED.toString()))), +                        .addField("response.hits.total"), +                        .setSize(1), +                        .get();, +                assertThat(searchResponse.getHits().getHits().length, equalTo(1));, +                assertThat((Integer) searchResponse.getHits().getAt(0).field("response.hits.total").getValue(), equalTo(1));, +            }, +        }, 30, TimeUnit.SECONDS);, +    }, +, +++ b/src/test/java/org/elasticsearch/alerts/AbstractAlertingTests.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.alerts.actions.AlertActionManager;, +import org.elasticsearch.alerts.actions.AlertActionState;, +import java.util.concurrent.TimeUnit;, +import static org.elasticsearch.index.query.QueryBuilders.boolQuery;, +import static org.elasticsearch.index.query.QueryBuilders.termQuery;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.core.Is.is;, +    protected void assertAlertTriggered(final String alertName) throws Exception {, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                IndicesExistsResponse indicesExistsResponse = client().admin().indices().prepareExists(AlertActionManager.ALERT_HISTORY_INDEX).get();, +                assertThat(indicesExistsResponse.isExists(), is(true));, +, +                SearchResponse searchResponse = client().prepareSearch(AlertActionManager.ALERT_HISTORY_INDEX), +                        .setIndicesOptions(IndicesOptions.lenientExpandOpen()), +                        .setQuery(boolQuery().must(termQuery("alert_name", alertName)).must(termQuery("state", AlertActionState.ACTION_PERFORMED.toString()))), +                        .addField("response.hits.total"), +                        .setSize(1), +                        .get();, +                assertThat(searchResponse.getHits().getHits().length, equalTo(1));, +                assertThat((Integer) searchResponse.getHits().getAt(0).field("response.hits.total").getValue(), equalTo(1));, +            }, +        }, 30, TimeUnit.SECONDS);, +    }, +, +++ b/src/test/java/org/elasticsearch/alerts/BasicAlertingTest.java, +        assertAlertTriggered("my-first-alert");, +++ b/src/test/java/org/elasticsearch/alerts/AbstractAlertingTests.java, +import org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;, +import org.elasticsearch.action.search.SearchResponse;, +import org.elasticsearch.action.support.IndicesOptions;, +import org.elasticsearch.alerts.actions.AlertActionManager;, +import org.elasticsearch.alerts.actions.AlertActionState;, +import java.util.concurrent.TimeUnit;, +import static org.elasticsearch.index.query.QueryBuilders.boolQuery;, +import static org.elasticsearch.index.query.QueryBuilders.termQuery;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.core.Is.is;, +    protected void assertAlertTriggered(final String alertName) throws Exception {, +        assertBusy(new Runnable() {, +            @Override, +            public void run() {, +                IndicesExistsResponse indicesExistsResponse = client().admin().indices().prepareExists(AlertActionManager.ALERT_HISTORY_INDEX).get();, +                assertThat(indicesExistsResponse.isExists(), is(true));, +, +                SearchResponse searchResponse = client().prepareSearch(AlertActionManager.ALERT_HISTORY_INDEX), +                        .setIndicesOptions(IndicesOptions.lenientExpandOpen()), +                        .setQuery(boolQuery().must(termQuery("alert_name", alertName)).must(termQuery("state", AlertActionState.ACTION_PERFORMED.toString()))), +                        .addField("response.hits.total"), +                        .setSize(1), +                        .get();, +                assertThat(searchResponse.getHits().getHits().length, equalTo(1));, +                assertThat((Integer) searchResponse.getHits().getAt(0).field("response.hits.total").getValue(), equalTo(1));, +            }, +        }, 30, TimeUnit.SECONDS);, +    }, +, +++ b/src/test/java/org/elasticsearch/alerts/BasicAlertingTest.java, +        assertAlertTriggered("my-first-alert");, +++ b/src/test/java/org/elasticsearch/alerts/NoMasterNodeTests.java, +        assertAlertTriggered("my-first-alert");, +        assertAlertTriggered("my-second-alert");]