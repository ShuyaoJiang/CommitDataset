[+++ b/src/main/java/org/elasticsearch/common/lucene/search/ApplyAcceptedDocsFilter.java, +        // we wrap this to make sure we can unwrap the inner docIDset in #unwrap, +        return new WrappedDocIdSet(BitsFilteredDocIdSet.wrap(docIdSet, acceptDocs), docIdSet);, +    public static DocIdSet unwrap(DocIdSet docIdSet) {, +        if (docIdSet instanceof NotDeletedDocIdSet) {, +            return ((NotDeletedDocIdSet) docIdSet).innerSet;, +        } else if (docIdSet instanceof WrappedDocIdSet) {, +            return ((WrappedDocIdSet) docIdSet).innerSet;, +        }, +        return docIdSet;, +    }, +, +, +    private static final class WrappedDocIdSet extends DocIdSet {, +        private final DocIdSet delegate;, +        private final DocIdSet innerSet;, +, +        private WrappedDocIdSet(DocIdSet delegate, DocIdSet innerSet) {, +            this.delegate = delegate;, +            this.innerSet = innerSet;, +        }, +, +, +        @Override, +        public DocIdSetIterator iterator() throws IOException {, +            return delegate.iterator();, +        }, +, +        @Override, +        public Bits bits() throws IOException {, +            return delegate.bits();, +        }, +, +        @Override, +        public boolean isCacheable() {, +            return delegate.isCacheable();, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/lucene/search/ApplyAcceptedDocsFilter.java, +        // we wrap this to make sure we can unwrap the inner docIDset in #unwrap, +        return new WrappedDocIdSet(BitsFilteredDocIdSet.wrap(docIdSet, acceptDocs), docIdSet);, +    public static DocIdSet unwrap(DocIdSet docIdSet) {, +        if (docIdSet instanceof NotDeletedDocIdSet) {, +            return ((NotDeletedDocIdSet) docIdSet).innerSet;, +        } else if (docIdSet instanceof WrappedDocIdSet) {, +            return ((WrappedDocIdSet) docIdSet).innerSet;, +        }, +        return docIdSet;, +    }, +, +, +    private static final class WrappedDocIdSet extends DocIdSet {, +        private final DocIdSet delegate;, +        private final DocIdSet innerSet;, +, +        private WrappedDocIdSet(DocIdSet delegate, DocIdSet innerSet) {, +            this.delegate = delegate;, +            this.innerSet = innerSet;, +        }, +, +, +        @Override, +        public DocIdSetIterator iterator() throws IOException {, +            return delegate.iterator();, +        }, +, +        @Override, +        public Bits bits() throws IOException {, +            return delegate.bits();, +        }, +, +        @Override, +        public boolean isCacheable() {, +            return delegate.isCacheable();, +        }, +    }, +++ b/src/main/java/org/elasticsearch/common/lucene/search/XFilteredQuery.java, +                if (!DocIdSets.isFastIterator(ApplyAcceptedDocsFilter.unwrap(docIdSet))) {, +++ b/src/main/java/org/elasticsearch/common/lucene/search/ApplyAcceptedDocsFilter.java, +        // we wrap this to make sure we can unwrap the inner docIDset in #unwrap, +        return new WrappedDocIdSet(BitsFilteredDocIdSet.wrap(docIdSet, acceptDocs), docIdSet);, +    public static DocIdSet unwrap(DocIdSet docIdSet) {, +        if (docIdSet instanceof NotDeletedDocIdSet) {, +            return ((NotDeletedDocIdSet) docIdSet).innerSet;, +        } else if (docIdSet instanceof WrappedDocIdSet) {, +            return ((WrappedDocIdSet) docIdSet).innerSet;, +        }, +        return docIdSet;, +    }, +, +, +    private static final class WrappedDocIdSet extends DocIdSet {, +        private final DocIdSet delegate;, +        private final DocIdSet innerSet;, +, +        private WrappedDocIdSet(DocIdSet delegate, DocIdSet innerSet) {, +            this.delegate = delegate;, +            this.innerSet = innerSet;, +        }, +]