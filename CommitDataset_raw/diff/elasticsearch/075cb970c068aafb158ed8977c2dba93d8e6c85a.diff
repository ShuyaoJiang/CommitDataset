[+++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryRewriteContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHitBuilder, rewrittenQuery);, +            return new HasChildQueryBuilder(type, rewrittenQuery, minChildren, maxChildren, scoreMode, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryRewriteContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHitBuilder, rewrittenQuery);, +            return new HasChildQueryBuilder(type, rewrittenQuery, minChildren, maxChildren, scoreMode, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryShardContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHit, rewrittenQuery);, +            return new HasParentQueryBuilder(type, rewrittenQuery, score, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryRewriteContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHitBuilder, rewrittenQuery);, +            return new HasChildQueryBuilder(type, rewrittenQuery, minChildren, maxChildren, scoreMode, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryShardContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHit, rewrittenQuery);, +            return new HasParentQueryBuilder(type, rewrittenQuery, score, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    static InnerHitBuilder rewrite(InnerHitBuilder original, QueryBuilder rewrittenQuery) {, +        if (original == null) {, +            return null;, +        }, +, +        InnerHitBuilder copy = new InnerHitBuilder(original);, +        copy.query = rewrittenQuery;, +        copy.parentChildType = original.parentChildType;, +        copy.nestedPath = original.nestedPath;, +        return copy;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryRewriteContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHitBuilder, rewrittenQuery);, +            return new HasChildQueryBuilder(type, rewrittenQuery, minChildren, maxChildren, scoreMode, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryShardContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHit, rewrittenQuery);, +            return new HasParentQueryBuilder(type, rewrittenQuery, score, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    static InnerHitBuilder rewrite(InnerHitBuilder original, QueryBuilder rewrittenQuery) {, +        if (original == null) {, +            return null;, +        }, +, +        InnerHitBuilder copy = new InnerHitBuilder(original);, +        copy.query = rewrittenQuery;, +        copy.parentChildType = original.parentChildType;, +        copy.nestedPath = original.nestedPath;, +        return copy;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryRewriteContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHitBuilder, rewrittenQuery);, +            return new NestedQueryBuilder(path, rewrittenQuery, scoreMode, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryRewriteContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHitBuilder, rewrittenQuery);, +            return new HasChildQueryBuilder(type, rewrittenQuery, minChildren, maxChildren, scoreMode, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryShardContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHit, rewrittenQuery);, +            return new HasParentQueryBuilder(type, rewrittenQuery, score, rewrittenInnerHit);, +++ b/core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java, +    static InnerHitBuilder rewrite(InnerHitBuilder original, QueryBuilder rewrittenQuery) {, +        if (original == null) {, +            return null;, +        }, +, +        InnerHitBuilder copy = new InnerHitBuilder(original);, +        copy.query = rewrittenQuery;, +        copy.parentChildType = original.parentChildType;, +        copy.nestedPath = original.nestedPath;, +        return copy;, +    }, +, +++ b/core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java, +        QueryBuilder rewrittenQuery = query.rewrite(queryRewriteContext);, +        if (rewrittenQuery != query) {, +            InnerHitBuilder rewrittenInnerHit = InnerHitBuilder.rewrite(innerHitBuilder, rewrittenQuery);, +            return new NestedQueryBuilder(path, rewrittenQuery, scoreMode, rewrittenInnerHit);, +++ b/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java, +    boolean requiresRewrite = false;, +, +, +        QueryBuilder innerQueryBuilder = RandomQueryBuilder.createQuery(random());, +        if (randomBoolean()) {]