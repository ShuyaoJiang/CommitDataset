[+++ b/src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java, +import org.elasticsearch.percolator.PercolatorService;, +                             Match[] matches, long count, long tookInMillis) {, +                    float score = match.score();, +                    if (score != PercolatorService.NO_SCORE) {, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java, +import org.elasticsearch.percolator.PercolatorService;, +                             Match[] matches, long count, long tookInMillis) {, +                    float score = match.score();, +                    if (score != PercolatorService.NO_SCORE) {, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java, +    private byte percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +    public byte percolatorTypeId() {, +        return percolatorTypeId;, +        percolatorTypeId = in.readByte();, +        out.writeByte(percolatorTypeId);, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java, +import org.elasticsearch.percolator.PercolatorService;, +                             Match[] matches, long count, long tookInMillis) {, +                    float score = match.score();, +                    if (score != PercolatorService.NO_SCORE) {, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java, +    private byte percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +    public byte percolatorTypeId() {, +        return percolatorTypeId;, +        percolatorTypeId = in.readByte();, +        out.writeByte(percolatorTypeId);, +++ b/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +        byte percolatorTypeId = 0x00;, +                if (percolateShardResponse.percolatorTypeId() != 0x00) {, +                    percolatorTypeId = percolateShardResponse.percolatorTypeId();, +                }, +        if (shardResults == null || percolatorTypeId == 0x00) {, +            PercolatorService.ReduceResult result = percolatorService.reduce(percolatorTypeId, shardResults);, +            long tookInMillis = System.currentTimeMillis() - request.startTime;, +                    result.matches(), result.count(), tookInMillis, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java, +import org.elasticsearch.percolator.PercolatorService;, +                             Match[] matches, long count, long tookInMillis) {, +                    float score = match.score();, +                    if (score != PercolatorService.NO_SCORE) {, +++ b/src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java, +    private byte percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +        this.percolatorTypeId = context.percolatorTypeId;, +    public byte percolatorTypeId() {, +        return percolatorTypeId;, +        percolatorTypeId = in.readByte();, +        out.writeByte(percolatorTypeId);, +++ b/src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java, +        byte percolatorTypeId = 0x00;, +                if (percolateShardResponse.percolatorTypeId() != 0x00) {, +                    percolatorTypeId = percolateShardResponse.percolatorTypeId();, +                }, +        if (shardResults == null || percolatorTypeId == 0x00) {, +            PercolatorService.ReduceResult result = percolatorService.reduce(percolatorTypeId, shardResults);, +            long tookInMillis = System.currentTimeMillis() - request.startTime;, +                    result.matches(), result.count(), tookInMillis, +++ b/src/main/java/org/elasticsearch/percolator/PercolatorService.java, +import gnu.trove.map.hash.TByteObjectHashMap;, +import org.elasticsearch.action.percolate.PercolateResponse;, +import org.elasticsearch.common.bytes.BytesArray;, +import org.elasticsearch.common.text.BytesText;, +import org.elasticsearch.common.text.StringText;, +import org.elasticsearch.common.text.Text;, +    public final static float NO_SCORE = Float.NEGATIVE_INFINITY;, +, +    private final TByteObjectHashMap<PercolatorType> percolatorTypes;, +, +        percolatorTypes = new TByteObjectHashMap<PercolatorType>(6);, +        percolatorTypes.put(countPercolator.id(), countPercolator);, +        percolatorTypes.put(queryCountPercolator.id(), queryCountPercolator);, +        percolatorTypes.put(matchPercolator.id(), matchPercolator);, +        percolatorTypes.put(queryPercolator.id(), queryPercolator);, +        percolatorTypes.put(scoringPercolator.id(), scoringPercolator);, +        percolatorTypes.put(topMatchingPercolator.id(), topMatchingPercolator);, +    }, +, +, +    public ReduceResult reduce(byte percolatorTypeId, List<PercolateShardResponse> shardResults) {, +        PercolatorType percolatorType = percolatorTypes.get(percolatorTypeId);, +        return percolatorType.reduce(shardResults);, +                context.percolatorTypeId = action.id();, +        // 0x00 is reserved for empty type., +        byte id();, +, +        ReduceResult reduce(List<PercolateShardResponse> shardResults);, +, +        public byte id() {, +            return 0x01;, +        }, +, +        @Override]