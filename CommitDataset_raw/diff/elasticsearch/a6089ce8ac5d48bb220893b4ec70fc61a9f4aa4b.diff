[+++ b/src/main/java/org/elasticsearch/alerts/AlertUtils.java, +        if (searchRequest == null) {, +            builder.nullValue();, +            return;, +        }, +, +++ b/src/main/java/org/elasticsearch/alerts/AlertUtils.java, +        if (searchRequest == null) {, +            builder.nullValue();, +            return;, +        }, +, +++ b/src/main/java/org/elasticsearch/alerts/actions/AlertActionEntry.java, +import java.util.Map;, +    private Map<String, Object> searchResponse;, +    public Map<String, Object> getSearchResponse() {, +    public void setSearchResponse(Map<String, Object> searchResponse) {, +        historyEntry.field("trigger", trigger, params);, +        historyEntry.field("response", searchResponse);, +++ b/src/main/java/org/elasticsearch/alerts/AlertUtils.java, +        if (searchRequest == null) {, +            builder.nullValue();, +            return;, +        }, +, +++ b/src/main/java/org/elasticsearch/alerts/actions/AlertActionEntry.java, +import java.util.Map;, +    private Map<String, Object> searchResponse;, +    public Map<String, Object> getSearchResponse() {, +    public void setSearchResponse(Map<String, Object> searchResponse) {, +        historyEntry.field("trigger", trigger, params);, +        historyEntry.field("response", searchResponse);, +++ b/src/main/java/org/elasticsearch/alerts/actions/AlertActionManager.java, +    public static final String RESPONSE = "response";, +                        case RESPONSE:, +                            entry.setSearchResponse(parser.map());, +++ b/src/main/java/org/elasticsearch/alerts/AlertUtils.java, +        if (searchRequest == null) {, +            builder.nullValue();, +            return;, +        }, +, +++ b/src/main/java/org/elasticsearch/alerts/actions/AlertActionEntry.java, +import java.util.Map;, +    private Map<String, Object> searchResponse;, +    public Map<String, Object> getSearchResponse() {, +    public void setSearchResponse(Map<String, Object> searchResponse) {, +        historyEntry.field("trigger", trigger, params);, +        historyEntry.field("response", searchResponse);, +++ b/src/main/java/org/elasticsearch/alerts/actions/AlertActionManager.java, +    public static final String RESPONSE = "response";, +                        case RESPONSE:, +                            entry.setSearchResponse(parser.map());, +++ b/src/main/java/org/elasticsearch/alerts/actions/EmailAlertActionFactory.java, +import org.elasticsearch.common.xcontent.support.XContentMapValues;, +import java.util.Map;, +            Object totalHits = XContentMapValues.extractValue("hits.total", result.getResponse());, +            output.append("The total number of hits returned : ").append(totalHits).append("\n");, +                List<Map<String, Object>> hits = (List<Map<String, Object>>) XContentMapValues.extractValue("hits.hits", result.getResponse());, +                for (Map<String, Object> hit : hits) {, +                    Map<String, Object> _source = (Map<String, Object>) hit.get("_source");, +                    if (_source.containsKey(emailAlertAction.getDisplayField())) {, +                        output.append(_source.get(emailAlertAction.getDisplayField()).toString());, +                        output.append(_source);, +++ b/src/main/java/org/elasticsearch/alerts/AlertUtils.java, +        if (searchRequest == null) {, +            builder.nullValue();, +            return;, +        }, +, +++ b/src/main/java/org/elasticsearch/alerts/actions/AlertActionEntry.java, +import java.util.Map;, +    private Map<String, Object> searchResponse;, +    public Map<String, Object> getSearchResponse() {, +    public void setSearchResponse(Map<String, Object> searchResponse) {, +        historyEntry.field("trigger", trigger, params);, +        historyEntry.field("response", searchResponse);, +++ b/src/main/java/org/elasticsearch/alerts/actions/AlertActionManager.java, +    public static final String RESPONSE = "response";, +                        case RESPONSE:, +                            entry.setSearchResponse(parser.map());, +++ b/src/main/java/org/elasticsearch/alerts/actions/EmailAlertActionFactory.java, +import org.elasticsearch.common.xcontent.support.XContentMapValues;, +import java.util.Map;, +            Object totalHits = XContentMapValues.extractValue("hits.total", result.getResponse());, +            output.append("The total number of hits returned : ").append(totalHits).append("\n");, +                List<Map<String, Object>> hits = (List<Map<String, Object>>) XContentMapValues.extractValue("hits.hits", result.getResponse());, +                for (Map<String, Object> hit : hits) {, +                    Map<String, Object> _source = (Map<String, Object>) hit.get("_source");, +                    if (_source.containsKey(emailAlertAction.getDisplayField())) {, +                        output.append(_source.get(emailAlertAction.getDisplayField()).toString());, +                        output.append(_source);, +++ b/src/main/java/org/elasticsearch/alerts/actions/IndexAlertActionFactory.java, +, +            resultBuilder.field("response", result.getResponse());, +++ b/src/main/java/org/elasticsearch/alerts/AlertUtils.java, +        if (searchRequest == null) {, +            builder.nullValue();, +            return;, +        }]