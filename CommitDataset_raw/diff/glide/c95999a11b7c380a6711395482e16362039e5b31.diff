[+++ b/library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java, +        if (url == null) {, +            throw new IllegalArgumentException("URL must not be null!");, +        }, +        if (TextUtils.isEmpty(url)) {, +            throw new IllegalArgumentException("String url must not be empty or null: " + url);, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java, +        if (url == null) {, +            throw new IllegalArgumentException("URL must not be null!");, +        }, +        if (TextUtils.isEmpty(url)) {, +            throw new IllegalArgumentException("String url must not be empty or null: " + url);, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        if (streamFetcher != null || fileDescriptorFetcher != null) {, +        } else {, +            return null;, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java, +        if (url == null) {, +            throw new IllegalArgumentException("URL must not be null!");, +        }, +        if (TextUtils.isEmpty(url)) {, +            throw new IllegalArgumentException("String url must not be empty or null: " + url);, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        if (streamFetcher != null || fileDescriptorFetcher != null) {, +        } else {, +            return null;, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/ModelLoader.java, +     * <p>, +     *     Note - If no valid data fetcher can be returned (for example if a model has a null URL), then it is, +     *     acceptable to return a null data fetcher from this method. Doing so will be treated any other failure or, +     *     exception during the load process., +     * </p>, +     *, +     * @param model The model representing the resource., +     * cached, or null if no valid {@link com.bumptech.glide.load.data.DataFetcher} could be constructed., +++ b/library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java, +        if (url == null) {, +            throw new IllegalArgumentException("URL must not be null!");, +        }, +        if (TextUtils.isEmpty(url)) {, +            throw new IllegalArgumentException("String url must not be empty or null: " + url);, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        if (streamFetcher != null || fileDescriptorFetcher != null) {, +        } else {, +            return null;, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/ModelLoader.java, +     * <p>, +     *     Note - If no valid data fetcher can be returned (for example if a model has a null URL), then it is, +     *     acceptable to return a null data fetcher from this method. Doing so will be treated any other failure or, +     *     exception during the load process., +     * </p>, +     *, +     * @param model The model representing the resource., +     * cached, or null if no valid {@link com.bumptech.glide.load.data.DataFetcher} could be constructed., +++ b/library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java, +import android.text.TextUtils;, +, +            if (TextUtils.isEmpty(stringURL)) {, +               return null;, +            }, +, +++ b/library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java, +        if (url == null) {, +            throw new IllegalArgumentException("URL must not be null!");, +        }, +        if (TextUtils.isEmpty(url)) {, +            throw new IllegalArgumentException("String url must not be empty or null: " + url);, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        if (streamFetcher != null || fileDescriptorFetcher != null) {, +        } else {, +            return null;, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/model/ModelLoader.java, +     * <p>, +     *     Note - If no valid data fetcher can be returned (for example if a model has a null URL), then it is, +     *     acceptable to return a null data fetcher from this method. Doing so will be treated any other failure or, +     *     exception during the load process., +     * </p>, +     *, +     * @param model The model representing the resource., +     * cached, or null if no valid {@link com.bumptech.glide.load.data.DataFetcher} could be constructed., +++ b/library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java, +import android.text.TextUtils;, +, +            if (TextUtils.isEmpty(stringURL)) {, +               return null;, +            }, +]