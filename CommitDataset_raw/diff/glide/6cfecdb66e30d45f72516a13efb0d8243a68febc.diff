[+++ b/library/src/com/bumptech/glide/loader/model/UriLoader.java, + * 'file' schemes. Unsupported schemes will throw an exception in {@link #getStreamLoader(android.net.Uri, int, int)}, +++ b/library/src/com/bumptech/glide/loader/model/UriLoader.java, + * 'file' schemes. Unsupported schemes will throw an exception in {@link #getStreamLoader(android.net.Uri, int, int)}, +++ b/library/src/com/bumptech/glide/loader/stream/StreamLoader.java, + * A base class for lazily and asynchronously opening an input stream that can be used to load an image., +++ b/library/src/com/bumptech/glide/loader/model/UriLoader.java, + * 'file' schemes. Unsupported schemes will throw an exception in {@link #getStreamLoader(android.net.Uri, int, int)}, +++ b/library/src/com/bumptech/glide/loader/stream/StreamLoader.java, + * A base class for lazily and asynchronously opening an input stream that can be used to load an image., +++ b/library/src/com/bumptech/glide/presenter/ImagePresenter.java, + * Wraps an {@link Target} to display arbitrary Bitmaps and provides a framework for fetching and, + * loading bitmaps correctly when targest are being recycled. Uses {@link ModelLoader} to between a, + * model {@link StreamLoader} for a given model, a {@link StreamLoader} to download or otherwise obtain an, + * {@link java.io.InputStream} for a given model, and  an {@link ImageLoader} to load a bitmap from a given, +         *     Note - this ImagePresenter will not be retained by default. Consider, +         *     {@link android.view.View#setTag(Object)}, or the view holder pattern., +         * Required - Sets the {@link android.widget.ImageView} the presenter will use to display any loaded bitmaps., +         * Alternatively you can instead set a more general target for an object other than an ImageView using, +         * {@link #setTarget(com.bumptech.glide.presenter.target.Target, android.content.Context)}., +            setTarget(new ImageViewTarget(imageView), imageView.getContext());, +        /**, +         * Required - Sets the {@link Target} the presenter will use to display any loaded bitmaps. If you are loading, +         * bitmaps into an {@link ImageView}, you can instead use {@link #setImageView(android.widget.ImageView)}., +         *, +         * @param target The {@link Target} to wrap, +         * @param context A context that can be held for the duration of the load, +         * @return This builder object, +         */, +         * valid loads., +         *, +         * @see com.bumptech.glide.presenter.ThumbImagePresenter, +         *, +         * @see com.bumptech.glide.presenter.ImagePresenter.ExceptionHandler, +        /**, +         * Optional - Sets a transformation loader to use to obtain a transformation to apply to images on a per, +         * model basis., +         *, +         * @see Transformation, +         *, +         * @param transformationLoader A {@link TransformationLoader} for this model type, +         * @return This builder object, +         */, +     * view, which can't happen until that view has been made visible and undergone layout for the first time. Until, +     * then the current load is stored. Subsequent calls will replace the stored load.]