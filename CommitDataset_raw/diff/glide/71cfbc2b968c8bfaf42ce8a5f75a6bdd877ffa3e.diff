[+++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +import java.io.InputStream;, +    public Object getImage(final InputStream is1, final InputStream is2, String id, LoadedCallback cb) {, +        final int key = getKey(id, -1, -1, ResizeType.AS_IS);, +        return runJob(key, cb, new ImageManagerJob(key, cb, false) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.loadAsIs(is1, is2);, +            }, +        });, +    }, +, +    public Object getImageExact(final InputStream is, final int width, final int height, String id, LoadedCallback cb) {, +        final int key = getKey(id, width, height, ResizeType.AS_IS);, +        return runJob(key, cb, new ImageManagerJob(key, cb, false) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.loadAsIs(is, width, height);, +            }, +        });, +    }, +, +    public Object getImageApproximate(final InputStream is1, final InputStream is2, final String id, final int width, final int height, final LoadedCallback cb) {, +        final int key = getKey(id, width, height, ResizeType.APPROXIMATE);, +        return runJob(key, cb, new ImageManagerJob(key, cb) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.loadAtLeast(is1, is2, width, height);, +            }, +        });, +    }, +, +, +    public Object centerCrop(final InputStream is1, final InputStream is2, final String id, final int width, final int height, final LoadedCallback cb) {, +        final int key = getKey(id, width, height, ResizeType.CENTER_CROP);, +        return runJob(key, cb, new ImageManagerJob(key, cb) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.centerCrop(is1, is2, width, height);, +            }, +        });, +    }, +, +++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +import java.io.InputStream;, +    public Object getImage(final InputStream is1, final InputStream is2, String id, LoadedCallback cb) {, +        final int key = getKey(id, -1, -1, ResizeType.AS_IS);, +        return runJob(key, cb, new ImageManagerJob(key, cb, false) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.loadAsIs(is1, is2);, +            }, +        });, +    }, +, +    public Object getImageExact(final InputStream is, final int width, final int height, String id, LoadedCallback cb) {, +        final int key = getKey(id, width, height, ResizeType.AS_IS);, +        return runJob(key, cb, new ImageManagerJob(key, cb, false) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.loadAsIs(is, width, height);, +            }, +        });, +    }, +, +    public Object getImageApproximate(final InputStream is1, final InputStream is2, final String id, final int width, final int height, final LoadedCallback cb) {, +        final int key = getKey(id, width, height, ResizeType.APPROXIMATE);, +        return runJob(key, cb, new ImageManagerJob(key, cb) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.loadAtLeast(is1, is2, width, height);, +            }, +        });, +    }, +, +, +    public Object centerCrop(final InputStream is1, final InputStream is2, final String id, final int width, final int height, final LoadedCallback cb) {, +        final int key = getKey(id, width, height, ResizeType.CENTER_CROP);, +        return runJob(key, cb, new ImageManagerJob(key, cb) {, +            @Override, +            protected Bitmap resizeIfNotFound() throws FileNotFoundException {, +                return resizer.centerCrop(is1, is2, width, height);, +            }, +        });, +    }, +, +++ b/library/src/com/bumptech/photos/resize/ImageResizer.java, +    public Bitmap loadAsIs(InputStream is, int width, int height) {, +        return load(is, getRecycled(width, height));, +    }, +]