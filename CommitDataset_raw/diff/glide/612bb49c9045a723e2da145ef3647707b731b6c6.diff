[+++ b/library/src/com/bumptech/glide/Glide.java, +            presenter = ImagePresenter.getCurrent(imageView);, +++ b/library/src/com/bumptech/glide/Glide.java, +            presenter = ImagePresenter.getCurrent(imageView);, +++ b/library/src/com/bumptech/glide/presenter/ImagePresenter.java, +import com.bumptech.glide.R;, +import com.bumptech.glide.loader.stream.StreamLoader;, +         * Builds an ImagePresenter., +         *, +         * <p>, +         *     Note - If an ImagePresenter has already been set for this view, it will be silently replaced and will not, +         *     be cleared which could lead to undefined behavior. It is most efficient to set an ImagePresenter once and, +         *     then retrieve it for each subsequent load. If you need to replace an ImagePresenter you can do so by, +         *     setting the tag at <code>R.id.image_presenter_id</code> to null with, +         *     {@link View#setTag(int, Object)}, +         * </p>, +    /**, +     * Retrieves the current ImagePresenter for the given view using {@link android.widget.ImageView#getTag()} and, +     * <code>R.id.image_presenter_id</code>, +     *, +     * @param imageView The view to get the ImagePresenter for, +     * @param <T> The type of model being displayed in the ImageView, +     * @return The current ImagePresenter, or null if one does not exist, +     */, +    @SuppressWarnings("unchecked"), +    public static <T> ImagePresenter<T> getCurrent(View imageView) {, +        return (ImagePresenter<T>) imageView.getTag(R.id.image_presenter_id);, +    }, +, +, +        imageView.setTag(R.id.image_presenter_id, this);, +++ b/library/src/com/bumptech/glide/Glide.java, +            presenter = ImagePresenter.getCurrent(imageView);, +++ b/library/src/com/bumptech/glide/presenter/ImagePresenter.java, +import com.bumptech.glide.R;, +import com.bumptech.glide.loader.stream.StreamLoader;, +         * Builds an ImagePresenter., +         *, +         * <p>, +         *     Note - If an ImagePresenter has already been set for this view, it will be silently replaced and will not, +         *     be cleared which could lead to undefined behavior. It is most efficient to set an ImagePresenter once and, +         *     then retrieve it for each subsequent load. If you need to replace an ImagePresenter you can do so by, +         *     setting the tag at <code>R.id.image_presenter_id</code> to null with, +         *     {@link View#setTag(int, Object)}, +         * </p>, +    /**, +     * Retrieves the current ImagePresenter for the given view using {@link android.widget.ImageView#getTag()} and, +     * <code>R.id.image_presenter_id</code>, +     *, +     * @param imageView The view to get the ImagePresenter for, +     * @param <T> The type of model being displayed in the ImageView, +     * @return The current ImagePresenter, or null if one does not exist, +     */, +    @SuppressWarnings("unchecked"), +    public static <T> ImagePresenter<T> getCurrent(View imageView) {, +        return (ImagePresenter<T>) imageView.getTag(R.id.image_presenter_id);, +    }, +, +, +        imageView.setTag(R.id.image_presenter_id, this);, +++ b/samples/flickr/src/com/bumptech/flickr/FlickrPhotoGrid.java, +                imagePresenter = ImagePresenter.getCurrent(view);]