[+++ b/library/src/com/bumptech/glide/Glide.java, +import com.android.volley.RequestQueue;, +import com.android.volley.toolbox.Volley;, +import com.bumptech.glide.loader.model.VolleyModelLoader;, +    private ImageManager imageManager = null;, +    private RequestQueue requestQueue = null;, +    protected Glide() { }, +, +    /**, +     * Return the current {@link RequestQueue} or create and return a new one if one is not currently set, +     *, +     * @see #setRequestQueue(com.android.volley.RequestQueue), +     * @see #isRequestQueueSet(), +     *, +     * @param context, +     * @return The {@link RequestQueue}, +     */, +    public RequestQueue getRequestQueue(Context context) {, +        if (!isRequestQueueSet()) {, +            setRequestQueue(Volley.newRequestQueue(context));, +        return requestQueue;, +    /**, +     * Use to check whether or not an {@link ImageManager} has been set yet. Can be used in, +     * {@link android.app.Activity#onCreate(android.os.Bundle)} along with, +     * {@link #setRequestQueue(com.android.volley.RequestQueue)} to set a {@link RequestQueue} with custom options, +     * for use with {@link Glide#load(Object)}} and/or as an easily accessible singleton, +     *, +     * @return true iff a {@link RequestQueue} has already been set, +     */, +    public boolean isRequestQueueSet() {, +        return requestQueue != null;, +    }, +, +    /**, +     * Set the {@link RequestQueue} to use with {@link Glide#load(Object)}}. Replaces the current {@link RequestQueue}, +     * if one has already been set, +     *, +     * @param requestQueue, +     */, +    public void setRequestQueue(RequestQueue requestQueue) {, +        this.requestQueue = requestQueue;, +    }, +     * Begins constructing a load for a given model., +     *, +     * @param model The model to load, must not be null, +     * @param <T> The type of the model to load, +     * @return A an unfinished Request that will be used to construct the components to load the model, +     */, +    public static <T> HalfRequest<T> load(T model) {, +        if (model == null) {, +            throw new IllegalArgumentException("Model can't be null");, +        }, +, +        return new HalfRequest<T>(model);, +    }, +, +    @SuppressWarnings("unchecked"), +    private static <T> ModelLoader<T> getModelFor(T model, Context context) {, +        if (model == URL.class) {, +            return (ModelLoader<T>) new VolleyModelLoader<URL>(GLIDE.getRequestQueue(context)) {, +                @Override, +                protected String getUrl(URL model, int width, int height) {, +                    return model.toString();, +                }, +, +                @Override, +                public String getId(URL model) {, +                    return model.toString();, +                }, +            };, +        } else if (model == File.class) {, +            return (ModelLoader<T>) new FileLoader();, +        } else {, +            throw new IllegalArgumentException("No default ModelLoader for class=" + model.getClass() +, +                    ", you need to provide one by calling with()");, +        }, +    }, +, +     /**, +                    modelLoader = getModelFor(model, context);, +++ b/library/src/com/bumptech/glide/Glide.java, +import com.android.volley.RequestQueue;, +import com.android.volley.toolbox.Volley;, +import com.bumptech.glide.loader.model.VolleyModelLoader;, +    private ImageManager imageManager = null;, +    private RequestQueue requestQueue = null;, +    protected Glide() { }, +, +    /**, +     * Return the current {@link RequestQueue} or create and return a new one if one is not currently set, +     *, +     * @see #setRequestQueue(com.android.volley.RequestQueue), +     * @see #isRequestQueueSet(), +     *, +     * @param context, +     * @return The {@link RequestQueue}, +     */, +    public RequestQueue getRequestQueue(Context context) {, +        if (!isRequestQueueSet()) {, +            setRequestQueue(Volley.newRequestQueue(context));]