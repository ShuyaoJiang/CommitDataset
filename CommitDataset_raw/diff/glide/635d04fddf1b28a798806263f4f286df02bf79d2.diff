[+++ b/library/src/com/bumptech/glide/presenter/target/ImageViewTarget.java, +import android.content.Context;, +import android.util.Log;, +import android.view.Display;, +import android.view.ViewTreeObserver;, +import android.view.WindowManager;, +import java.lang.ref.WeakReference;, +, +    private static final String TAG = "ImageViewTarget";, +        private SizeReadyCallback cb;, +        private SizeDeterminerLayoutListener layoutListener;, +, +        private void checkCurrentDimens() {, +            boolean calledCallback = true;, +            if (isViewSizeValid()) {, +                cb.onSizeReady(view.getWidth(), view.getHeight());, +            } else if (isLayoutParamsSizeValid()) {, +            } else {, +                calledCallback = false;, +, +            if (calledCallback) {, +                // Keep a reference to the layout listener and remove it here, +                // rather than having the observer remove itself because the observer, +                // we add the listener to will be almost immediately merged into, +                // another observer and will therefore never be alive. If we instead, +                // keep a reference to the listener and remove it here, we get the, +                // current view tree observer and should succeed., +                ViewTreeObserver observer = view.getViewTreeObserver();, +                if (observer.isAlive()) {, +                    observer.removeGlobalOnLayoutListener(layoutListener);, +            }, +        }, +            if (isViewSizeValid()) {, +                cb.onSizeReady(view.getWidth(), view.getHeight());, +            } else if (isLayoutParamsSizeValid()) {, +            } else if (isUsingWrapContent()) {, +                WindowManager windowManager =, +                        (WindowManager) view.getContext().getSystemService(Context.WINDOW_SERVICE);, +                Display display = windowManager.getDefaultDisplay();, +                final int width = display.getWidth();, +                final int height = display.getHeight();, +                if (Log.isLoggable(TAG, Log.WARN)) {, +                    Log.w(TAG, "Trying to load image into ImageView using WRAP_CONTENT, defaulting to screen" +, +                            " dimensions: [" + width + "x" + height + "]. Give the view an actual width and height " +, +                            " for better performance.");, +                }, +                cb.onSizeReady(display.getWidth(), display.getHeight());, +                final ViewTreeObserver observer = view.getViewTreeObserver();, +                layoutListener = new SizeDeterminerLayoutListener(this);, +                observer.addOnGlobalLayoutListener(layoutListener);, +        private boolean isViewSizeValid() {, +            return view.getWidth() > 0 && view.getHeight() > 0;, +        private boolean isUsingWrapContent() {, +            final LayoutParams layoutParams = view.getLayoutParams();, +            return layoutParams != null && (layoutParams.width == LayoutParams.WRAP_CONTENT, +                    || layoutParams.height == LayoutParams.WRAP_CONTENT);, +        }, +, +        private boolean isLayoutParamsSizeValid() {, +            final LayoutParams layoutParams = view.getLayoutParams();, +            return layoutParams != null && (layoutParams.width > 0 && layoutParams.height > 0);, +        }, +, +        private static class SizeDeterminerLayoutListener implements ViewTreeObserver.OnGlobalLayoutListener {, +            private final WeakReference<SizeDeterminer> sizeDeterminerRef;, +, +            public SizeDeterminerLayoutListener(SizeDeterminer sizeDeterminer) {, +                sizeDeterminerRef = new WeakReference<SizeDeterminer>(sizeDeterminer);, +            }, +, +            @Override, +            public void onGlobalLayout() {, +                if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                    Log.v(TAG, "OnGlobalLayoutListener called listener=" + this);, +                }, +                SizeDeterminer sizeDeterminer = sizeDeterminerRef.get();, +                if (sizeDeterminer != null) {, +                    sizeDeterminer.checkCurrentDimens();, +                }, +            }, +        }]