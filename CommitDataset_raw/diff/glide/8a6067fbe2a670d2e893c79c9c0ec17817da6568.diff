[+++ b/library/libs/android-support-v4.jar, +++ b/library/libs/android-support-v4.jar, +++ b/library/pom.xml, +++ b/library/libs/android-support-v4.jar, +++ b/library/pom.xml, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestManager requestManager) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestManager);, +++ b/library/libs/android-support-v4.jar, +++ b/library/pom.xml, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestManager requestManager) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestManager;, +    private RequestManager requestManager;, +            Glide glide, RequestManager requestManager) {, +                glide, requestManager);, +        this.requestManager = requestManager;, +                transcodeClass, glide, requestManager);, +++ b/library/libs/android-support-v4.jar, +++ b/library/pom.xml, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestManager requestManager) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestManager;, +    private RequestManager requestManager;, +            Glide glide, RequestManager requestManager) {, +                glide, requestManager);, +        this.requestManager = requestManager;, +                transcodeClass, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            LoadProvider<ModelType, ImageVideoWrapper, GifBitmapWrapper, Drawable> loadProvider, Glide glide,, +            RequestManager requestManager) {, +        super(context, model, loadProvider, Drawable.class, glide, requestManager);, +++ b/library/libs/android-support-v4.jar, +++ b/library/pom.xml, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestManager requestManager) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestManager;, +    private RequestManager requestManager;, +            Glide glide, RequestManager requestManager) {, +                glide, requestManager);, +        this.requestManager = requestManager;, +                transcodeClass, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            LoadProvider<ModelType, ImageVideoWrapper, GifBitmapWrapper, Drawable> loadProvider, Glide glide,, +            RequestManager requestManager) {, +        super(context, model, loadProvider, Drawable.class, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/DrawableTypeRequest.java, +import com.bumptech.glide.manager.RequestManager;, +    private RequestManager requestManager;, +            ModelLoader<A, ParcelFileDescriptor> fileDescriptorModelLoader, Context context, Glide glide,, +            RequestManager requestManager) {, +                buildProvider(glide, streamModelLoader, fileDescriptorModelLoader, GifBitmapWrapper.class,, +                        Drawable.class, null),, +                glide, requestManager);, +        this.requestManager = requestManager;, +        return new BitmapTypeRequest<A>(context, model, streamModelLoader, fileDescriptorModelLoader, glide,, +                requestManager);, +        return new GifTypeRequest<A>(context, model, streamModelLoader, glide, requestManager);, +++ b/library/libs/android-support-v4.jar, +++ b/library/pom.xml, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestManager requestManager) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestManager;, +    private RequestManager requestManager;, +            Glide glide, RequestManager requestManager) {, +                glide, requestManager);, +        this.requestManager = requestManager;, +                transcodeClass, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +import com.bumptech.glide.manager.RequestManager;, +            LoadProvider<ModelType, ImageVideoWrapper, GifBitmapWrapper, Drawable> loadProvider, Glide glide,, +            RequestManager requestManager) {, +        super(context, model, loadProvider, Drawable.class, glide, requestManager);, +++ b/library/src/main/java/com/bumptech/glide/DrawableTypeRequest.java, +import com.bumptech.glide.manager.RequestManager;, +    private RequestManager requestManager;, +            ModelLoader<A, ParcelFileDescriptor> fileDescriptorModelLoader, Context context, Glide glide,, +            RequestManager requestManager) {, +                buildProvider(glide, streamModelLoader, fileDescriptorModelLoader, GifBitmapWrapper.class,, +                        Drawable.class, null),, +                glide, requestManager);, +        this.requestManager = requestManager;, +        return new BitmapTypeRequest<A>(context, model, streamModelLoader, fileDescriptorModelLoader, glide,, +                requestManager);, +        return new GifTypeRequest<A>(context, model, streamModelLoader, glide, requestManager);]