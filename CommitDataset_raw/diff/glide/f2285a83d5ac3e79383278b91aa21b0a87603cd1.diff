[+++ b/library/src/androidTest/java/com/bumptech/glide/GlideTest.java, +import static org.mockito.Mockito.times;, +    public void testReceivesThumbnails() {, +        String full = mockUri("content://full");, +        String thumb = mockUri("content://thumb");, +        requestManager, +                .load(full), +                .thumbnail(requestManager, +                        .load(thumb)), +                .into(target);, +, +        verify(target, times(2)).onResourceReady(any(Drawable.class), any(GlideAnimation.class));, +    }, +, +    @Test, +    public void testReceivesRecursiveThumbnails() {, +        requestManager, +                .load(mockUri("content://first")), +                .thumbnail(requestManager, +                        .load(mockUri("content://second")), +                        .thumbnail(requestManager, +                                .load(mockUri("content://third")), +                                .thumbnail(requestManager, +                                        .load(mockUri("content://fourth")), +                                ), +                        ), +                ), +                .into(target);, +        verify(target, times(4)).onResourceReady(any(Drawable.class), any(GlideAnimation.class));, +    }, +, +    @Test, +    public void testReceivesRecursiveThumbnailWithPercentage() {, +        requestManager, +                .load(mockUri("content://first")), +                .thumbnail(requestManager, +                        .load(mockUri("content://second")), +                        .thumbnail(0.5f), +                ), +                .into(target);, +        verify(target, times(3)).onResourceReady(any(Drawable.class), any(GlideAnimation.class));, +    }, +, +    @Test, +    private String mockUri(String uriString) {, +        return mockUri(Uri.parse(uriString), null);, +    private String mockUri(Uri uri) {, +        return mockUri(uri, null);, +    private String mockUri(Uri uri, InputStream is) {, +        return uri.toString();, +++ b/library/src/androidTest/java/com/bumptech/glide/GlideTest.java, +import static org.mockito.Mockito.times;, +    public void testReceivesThumbnails() {, +        String full = mockUri("content://full");, +        String thumb = mockUri("content://thumb");, +        requestManager, +                .load(full), +                .thumbnail(requestManager, +                        .load(thumb)), +                .into(target);, +, +        verify(target, times(2)).onResourceReady(any(Drawable.class), any(GlideAnimation.class));, +    }, +, +    @Test, +    public void testReceivesRecursiveThumbnails() {, +        requestManager, +                .load(mockUri("content://first")), +                .thumbnail(requestManager, +                        .load(mockUri("content://second")), +                        .thumbnail(requestManager, +                                .load(mockUri("content://third")), +                                .thumbnail(requestManager, +                                        .load(mockUri("content://fourth")), +                                ), +                        ), +                ), +                .into(target);, +        verify(target, times(4)).onResourceReady(any(Drawable.class), any(GlideAnimation.class));, +    }, +, +    @Test, +    public void testReceivesRecursiveThumbnailWithPercentage() {, +        requestManager, +                .load(mockUri("content://first")), +                .thumbnail(requestManager, +                        .load(mockUri("content://second")), +                        .thumbnail(0.5f), +                ), +                .into(target);, +        verify(target, times(3)).onResourceReady(any(Drawable.class), any(GlideAnimation.class));, +    }, +, +    @Test, +    private String mockUri(String uriString) {, +        return mockUri(Uri.parse(uriString), null);, +    private String mockUri(Uri uri) {, +        return mockUri(uri, null);, +    private String mockUri(Uri uri, InputStream is) {, +        return uri.toString();]