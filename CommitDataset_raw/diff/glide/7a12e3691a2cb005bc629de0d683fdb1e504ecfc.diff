[+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +class DecodeJob<R> implements DataFetcher.Callback<Object> {, +    Resource<R> result = null;, +    try {, +      Data data = fetcher.loadData(requestContext.getPriority());, +      if (data == null) {, +        return null;, +      }, +      result = path.load(data, requestContext, width, height,, +    } catch (IOException e) {, +      if (Logs.isEnabled(Log.VERBOSE)) {, +        Logs.log(Log.VERBOSE, "Fetcher failed: " + fetcher, e);, +      }, +    } finally {, +      fetcher.cleanup();, +    }, +    return result;, +  @Override, +  public void onDataReady(Object data) {, +, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +class DecodeJob<R> implements DataFetcher.Callback<Object> {, +    Resource<R> result = null;, +    try {, +      Data data = fetcher.loadData(requestContext.getPriority());, +      if (data == null) {, +        return null;, +      }, +      result = path.load(data, requestContext, width, height,, +    } catch (IOException e) {, +      if (Logs.isEnabled(Log.VERBOSE)) {, +        Logs.log(Log.VERBOSE, "Fetcher failed: " + fetcher, e);, +      }, +    } finally {, +      fetcher.cleanup();, +    }, +    return result;, +  @Override, +  public void onDataReady(Object data) {, +, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/load/engine/LoadPath.java, +  public Resource<Transcode> load(Data data, RequestContext<Transcode> context,, +    Preconditions.checkNotNull(data);, +    Resource<Transcode> result = null;]