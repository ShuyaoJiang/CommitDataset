[+++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import android.support.annotation.VisibleForTesting;, +  @VisibleForTesting, +  public static void tearDown() {, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import android.support.annotation.VisibleForTesting;, +  @VisibleForTesting, +  public static void tearDown() {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +import com.bumptech.glide.Glide;, +    this(, +        new GifState(, +            bitmapPool,, +            new GifFrameLoader(, +                // TODO(b/27524013): Factor out this call to Glide.get(), +                Glide.get(context),, +                gifDecoder,, +                targetFrameWidth,, +                targetFrameHeight,, +                frameTransformation,, +                firstFrame)));, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import android.support.annotation.VisibleForTesting;, +  @VisibleForTesting, +  public static void tearDown() {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +import com.bumptech.glide.Glide;, +    this(, +        new GifState(, +            bitmapPool,, +            new GifFrameLoader(, +                // TODO(b/27524013): Factor out this call to Glide.get(), +                Glide.get(context),, +                gifDecoder,, +                targetFrameWidth,, +                targetFrameHeight,, +                frameTransformation,, +                firstFrame)));, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameLoader.java, +import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;, +  private final BitmapPool bitmapPool;, +  public GifFrameLoader(, +      Glide glide,, +      GifDecoder gifDecoder,, +      int width,, +      int height,, +      Transformation<Bitmap> transformation,, +      Bitmap firstFrame) {, +    this(, +        glide.getContext(),, +        glide.getBitmapPool(),, +        Glide.with(glide.getContext()),, +        getRequestBuilder(Glide.with(glide.getContext()), width, height),, +        transformation,, +        firstFrame);, +  GifFrameLoader(, +      Context context,, +      BitmapPool bitmapPool,, +      RequestManager requestManager,, +      GifDecoder gifDecoder,, +      Handler handler,, +      RequestBuilder<Bitmap> requestBuilder,, +      Transformation<Bitmap> transformation,, +    this.bitmapPool = bitmapPool;, +      bitmapPool.put(firstFrame);, +  private static RequestBuilder<Bitmap> getRequestBuilder(, +      RequestManager requestManager, int width, int height) {, +    return requestManager, +        .asBitmap(), +        .apply(, +            diskCacheStrategyOf(DiskCacheStrategy.NONE), +                .skipMemoryCache(true), +                .override(width, height));, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import android.support.annotation.VisibleForTesting;, +  @VisibleForTesting, +  public static void tearDown() {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +import com.bumptech.glide.Glide;, +    this(, +        new GifState(, +            bitmapPool,, +            new GifFrameLoader(, +                // TODO(b/27524013): Factor out this call to Glide.get(), +                Glide.get(context),, +                gifDecoder,, +                targetFrameWidth,, +                targetFrameHeight,, +                frameTransformation,, +                firstFrame)));, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameLoader.java, +import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;, +  private final BitmapPool bitmapPool;, +  public GifFrameLoader(, +      Glide glide,, +      GifDecoder gifDecoder,, +      int width,, +      int height,, +      Transformation<Bitmap> transformation,, +      Bitmap firstFrame) {]