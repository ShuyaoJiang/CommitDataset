[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategyTest.java, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(270, 480, 724, 440)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(400, 200, 200, 200)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(800, 200, 200, 200)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(150, 150, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(101, 101, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(199, 199, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(200, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(300, 300, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(400, 400, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(1000, 200, 100, 100)).isEqualTo(1 / 16f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(1000, 1000, 100, 100)).isEqualTo(1 / 16f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(101, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(199, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(400, 200, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(1000, 400, 100, 100)).isEqualTo(1 / 16f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(200, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(300, 300, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(400, 400, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(1000, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(1000, 1000, 100, 100)).isEqualTo(1 / 8f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(400, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(1000, 400, 100, 100)).isEqualTo(1 / 4f);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategyTest.java, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(270, 480, 724, 440)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(400, 200, 200, 200)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(800, 200, 200, 200)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(150, 150, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(101, 101, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(199, 199, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(200, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(300, 300, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(400, 400, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(1000, 200, 100, 100)).isEqualTo(1 / 16f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(1000, 1000, 100, 100)).isEqualTo(1 / 16f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(101, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(199, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(400, 200, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_MOST.getScaleFactor(1000, 400, 100, 100)).isEqualTo(1 / 16f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(200, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(300, 300, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(400, 400, 100, 100)).isEqualTo(1 / 4f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(1000, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(1000, 1000, 100, 100)).isEqualTo(1 / 8f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(400, 200, 100, 100)).isEqualTo(1 / 2f);, +    assertThat(DownsampleStrategy.AT_LEAST.getScaleFactor(1000, 400, 100, 100)).isEqualTo(1 / 4f);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerTest.java, +import static com.google.common.collect.Range.closed;, +import static com.google.common.truth.Truth.assertThat;, +import org.robolectric.RobolectricTestRunner;, +, +import android.graphics.BitmapFactory;, +  @Test, +  public void testCalculateScaling_withInvalidSourceSizes_doesNotCrash() {, +    runScaleTest(0, 0, 100, 100, DownsampleStrategy.AT_MOST, 0, 0);, +    runScaleTest(-1, -1, 100, 100, DownsampleStrategy.AT_MOST, -1, -1);, +    runScaleTest(0, 0, 100, 100, DownsampleStrategy.AT_LEAST, 0, 0);, +    runScaleTest(-1, -1, 100, 100, DownsampleStrategy.CENTER_OUTSIDE, -1, -1);, +  }, +, +  @Test, +  public void testCalculateScaling_withAtMost() {, +    DownsampleStrategy strategy = DownsampleStrategy.AT_MOST;, +    runScaleTest(100, 100, 100, 100, strategy, 100, 100);, +    runScaleTest(200, 200, 100, 100, strategy, 100, 100);, +    runScaleTest(400, 400, 100, 100, strategy, 100, 100);, +    runScaleTest(300, 300, 100, 100, strategy, 75, 75);, +    runScaleTest(799, 100, 100, 100, strategy, 100, 13);, +    runScaleTest(800, 100, 100, 100, strategy, 100, 13);, +    runScaleTest(801, 100, 100, 100, strategy, 50, 6);, +    runScaleTest(100, 800, 100, 100, strategy, 13, 100);, +    runScaleTest(87, 78, 100, 100, strategy, 87, 78);, +  }, +, +  @Test, +  public void testCalculateScaling_withAtLeast() {, +    DownsampleStrategy strategy = DownsampleStrategy.AT_LEAST;, +    runScaleTest(100, 100, 100, 100, strategy, 100, 100);, +    runScaleTest(200, 200, 100, 100, strategy, 100, 100);, +    runScaleTest(400, 400, 100, 100, strategy, 100, 100);, +    runScaleTest(300, 300, 100, 100, strategy, 150, 150);, +    runScaleTest(799, 100, 100, 100, strategy, 799, 100);, +    runScaleTest(800, 100, 100, 100, strategy, 800, 100);, +    runScaleTest(801, 100, 100, 100, strategy, 801, 100);, +    runScaleTest(100, 800, 100, 100, strategy, 100, 800);, +    runScaleTest(87, 78, 100, 100, strategy, 87, 78);, +  }, +, +  @Test, +  public void testCalculateScaling_withCenterInside() {, +    DownsampleStrategy strategy = DownsampleStrategy.CENTER_INSIDE;, +    runScaleTest(100, 100, 100, 100, strategy, 100, 100);, +    runScaleTest(200, 200, 100, 100, strategy, 100, 100);, +    runScaleTest(400, 400, 100, 100, strategy, 100, 100);, +    runScaleTest(300, 300, 100, 100, strategy, 100, 100);, +    runScaleTest(799, 100, 100, 100, strategy, 100, 13);, +    runScaleTest(800, 100, 100, 100, strategy, 100, 13);, +    runScaleTest(801, 100, 100, 100, strategy, 100, 13);, +    runScaleTest(100, 800, 100, 100, strategy, 13, 100);, +    runScaleTest(87, 78, 100, 100, strategy, 100, 90);]