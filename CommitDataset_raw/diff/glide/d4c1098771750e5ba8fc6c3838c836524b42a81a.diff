[+++ b/src/com/bumptech/photos/view/AssetPresenter.java, +import com.bumptech.photos.util.Log;, +    final Runnable getDimens = new Runnable() {, +        @Override, +        public void run() {, +            width = imageView.getWidth();, +            height = imageView.getHeight();, +            Log.d("AP: getDimens run width=" + width + " height=" + height);, +            if (pendingLoad != null) {, +                if (width != 0 && height != 0) {, +                    imageView.post(pendingLoad);, +                    pendingLoad = null;, +                } else {, +                    imageView.postDelayed(getDimens, 50);, +                }, +            }, +        }, +    };, +    private Runnable pendingLoad = null;, +    public AssetPresenter(final ImageView imageView, AssetPathConverter<T> assetIdToPath, final ImageLoader imageLoader) {, +    public void setPlaceholderResource(int resourceId) {, +        this.placeholderDrawable = imageView.getResources().getDrawable(resourceId);, +    }, +, +    public void onPathReady(final String path, final int loadCount) {, +        if (width == 0 || height == 0) {, +            pendingLoad = new Runnable() {, +                @Override, +                public void run() {, +                    doLoad(path, loadCount);, +                }, +            };, +            imageView.post(getDimens);, +        } else {, +            doLoad(path, loadCount);, +        }, +    }, +, +    private void doLoad(String path, int loadCount) {, +++ b/src/com/bumptech/photos/view/AssetPresenter.java, +import com.bumptech.photos.util.Log;, +    final Runnable getDimens = new Runnable() {, +        @Override, +        public void run() {, +            width = imageView.getWidth();, +            height = imageView.getHeight();, +            Log.d("AP: getDimens run width=" + width + " height=" + height);, +            if (pendingLoad != null) {, +                if (width != 0 && height != 0) {, +                    imageView.post(pendingLoad);, +                    pendingLoad = null;, +                } else {, +                    imageView.postDelayed(getDimens, 50);, +                }, +            }, +        }, +    };, +    private Runnable pendingLoad = null;, +    public AssetPresenter(final ImageView imageView, AssetPathConverter<T> assetIdToPath, final ImageLoader imageLoader) {, +    public void setPlaceholderResource(int resourceId) {, +        this.placeholderDrawable = imageView.getResources().getDrawable(resourceId);, +    }, +, +    public void onPathReady(final String path, final int loadCount) {, +        if (width == 0 || height == 0) {, +            pendingLoad = new Runnable() {, +                @Override, +                public void run() {, +                    doLoad(path, loadCount);, +                }, +            };, +            imageView.post(getDimens);, +        } else {, +            doLoad(path, loadCount);, +        }, +    }, +, +    private void doLoad(String path, int loadCount) {, +++ b/src/com/bumptech/photos/view/ThumbAssetPresenter.java]