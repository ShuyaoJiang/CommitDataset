[+++ b/library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java, +import android.annotation.TargetApi;, +import android.content.UriMatcher;, +import android.os.Build;, +import android.provider.ContactsContract;, +  /**, +   * A lookup uri (e.g. content://com.android.contacts/contacts/lookup/3570i61d948d30808e537), +   */, +  private static final int ID_CONTACTS_LOOKUP = 1;, +  /**, +   * A contact thumbnail uri (e.g. content://com.android.contacts/contacts/38/photo), +   */, +  private static final int ID_CONTACTS_THUMBNAIL = 2;, +  /**, +   * A contact uri (e.g. content://com.android.contacts/contacts/38), +   */, +  private static final int ID_CONTACTS_CONTACT = 3;, +  /**, +   * A contact display photo (high resolution) uri, +   * (e.g. content://com.android.contacts/5/display_photo), +   */, +  private static final int ID_CONTACTS_PHOTO = 4;, +  /**, +   * Match the incoming Uri for special cases which we can handle nicely., +   */, +  private static final UriMatcher URI_MATCHER;, +, +  static {, +    URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);, +    URI_MATCHER.addURI(ContactsContract.AUTHORITY, "contacts/lookup/*/#", ID_CONTACTS_LOOKUP);, +    URI_MATCHER.addURI(ContactsContract.AUTHORITY, "contacts/lookup/*", ID_CONTACTS_LOOKUP);, +    URI_MATCHER.addURI(ContactsContract.AUTHORITY, "contacts/#/photo", ID_CONTACTS_THUMBNAIL);, +    URI_MATCHER.addURI(ContactsContract.AUTHORITY, "contacts/#", ID_CONTACTS_CONTACT);, +    URI_MATCHER.addURI(ContactsContract.AUTHORITY, "contacts/#/display_photo", ID_CONTACTS_PHOTO);, +  }, +, +    InputStream inputStream = loadResourceFromUri(uri, contentResolver);, +      throw new FileNotFoundException("InputStream is null for " + uri);, +, +  private InputStream loadResourceFromUri(Uri uri, ContentResolver contentResolver), +      throws FileNotFoundException {, +    switch (URI_MATCHER.match(uri)) {, +      case ID_CONTACTS_CONTACT:, +        return openContactPhotoInputStream(contentResolver, uri);, +      case ID_CONTACTS_LOOKUP:, +        // If it was a Lookup uri then resolve it first, then continue loading the contact uri., +        uri = ContactsContract.Contacts.lookupContact(contentResolver, uri);, +        if (uri == null) {, +          throw new FileNotFoundException("Contact cannot be found");, +        }, +        return openContactPhotoInputStream(contentResolver, uri);, +      case ID_CONTACTS_THUMBNAIL:, +      case ID_CONTACTS_PHOTO:, +      case UriMatcher.NO_MATCH:, +      default:, +        return contentResolver.openInputStream(uri);, +    }, +  }, +, +  @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH), +  private InputStream openContactPhotoInputStream(ContentResolver contentResolver, Uri contactUri) {, +    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH) {, +      return ContactsContract.Contacts.openContactPhotoInputStream(contentResolver, contactUri);, +    } else {, +      return ContactsContract.Contacts.openContactPhotoInputStream(contentResolver, contactUri,, +          true /*preferHighres*/);, +    }, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java, +import android.annotation.TargetApi;, +import android.content.UriMatcher;, +import android.os.Build;, +import android.provider.ContactsContract;, +  /**, +   * A lookup uri (e.g. content://com.android.contacts/contacts/lookup/3570i61d948d30808e537), +   */, +  private static final int ID_CONTACTS_LOOKUP = 1;, +  /**, +   * A contact thumbnail uri (e.g. content://com.android.contacts/contacts/38/photo), +   */, +  private static final int ID_CONTACTS_THUMBNAIL = 2;, +  /**, +   * A contact uri (e.g. content://com.android.contacts/contacts/38), +   */, +  private static final int ID_CONTACTS_CONTACT = 3;, +  /**, +   * A contact display photo (high resolution) uri, +   * (e.g. content://com.android.contacts/5/display_photo), +   */, +  private static final int ID_CONTACTS_PHOTO = 4;, +  /**, +   * Match the incoming Uri for special cases which we can handle nicely., +   */, +  private static final UriMatcher URI_MATCHER;, +, +  static {, +    URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);, +    URI_MATCHER.addURI(ContactsContract.AUTHORITY, "contacts/lookup/*/#", ID_CONTACTS_LOOKUP);, +    URI_MATCHER.addURI(ContactsContract.AUTHORITY, "contacts/lookup/*", ID_CONTACTS_LOOKUP);]