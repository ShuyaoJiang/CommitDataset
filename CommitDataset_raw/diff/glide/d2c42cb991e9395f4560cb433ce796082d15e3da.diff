[+++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, + * @param <ModelType> The type of model to load the {@link Bitmap} or transcoded class from., +public class BitmapTypeRequest<ModelType> extends BitmapRequestBuilder<ModelType, Bitmap> {, +    private final ModelType model;, +    private final ModelLoader<ModelType, InputStream> streamModelLoader;, +    private ModelLoader<ModelType, ParcelFileDescriptor> fileDescriptorModelLoader;, +    BitmapTypeRequest(Context context, ModelType model,, +            ModelLoader<ModelType, InputStream> streamModelLoader,, +            ModelLoader<ModelType, ParcelFileDescriptor> fileDescriptorModelLoader,, +    public <R> BitmapRequestBuilder<ModelType, R> transcode(ResourceTranscoder<Bitmap, R> transcoder,, +            Class<R> transcodeClass) {, +        return optionsApplier.apply(model, new BitmapRequestBuilder<ModelType, R>(context, model,, +    public BitmapRequestBuilder<ModelType, byte[]> toBytes() {, +    public BitmapRequestBuilder<ModelType, byte[]> toBytes(Bitmap.CompressFormat compressFormat, int quality) {, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, + * @param <ModelType> The type of model to load the {@link Bitmap} or transcoded class from., +public class BitmapTypeRequest<ModelType> extends BitmapRequestBuilder<ModelType, Bitmap> {, +    private final ModelType model;, +    private final ModelLoader<ModelType, InputStream> streamModelLoader;, +    private ModelLoader<ModelType, ParcelFileDescriptor> fileDescriptorModelLoader;, +    BitmapTypeRequest(Context context, ModelType model,, +            ModelLoader<ModelType, InputStream> streamModelLoader,, +            ModelLoader<ModelType, ParcelFileDescriptor> fileDescriptorModelLoader,, +    public <R> BitmapRequestBuilder<ModelType, R> transcode(ResourceTranscoder<Bitmap, R> transcoder,, +            Class<R> transcodeClass) {, +        return optionsApplier.apply(model, new BitmapRequestBuilder<ModelType, R>(context, model,, +    public BitmapRequestBuilder<ModelType, byte[]> toBytes() {, +    public BitmapRequestBuilder<ModelType, byte[]> toBytes(Bitmap.CompressFormat compressFormat, int quality) {, +++ b/library/src/main/java/com/bumptech/glide/DrawableOptions.java, +package com.bumptech.glide;, +, +import android.view.animation.Animation;, +, +public interface DrawableOptions {, +, +    /**, +     * Applies a cross fade transformation that fades from the placeholder to the loaded, +     * {@link android.graphics.drawable.Drawable}. If no placeholder is set, the Drawable will instead simply fade in., +     *, +     * <p>, +     *     Note - this only works by default for {@link android.view.View}s and, +     *     {@link com.bumptech.glide.request.target.ViewTarget}s., +     * </p>, +     *, +     * @see #crossFade(int), +     * @see #crossFade(int, int), +     * @see #crossFade(android.view.animation.Animation, int), +     *, +     * @return This request builder., +     */, +     public GenericRequestBuilder<?, ?, ?, ?> crossFade();, +, +    /**, +     * Applies a cross fade transformation that fades from the placeholder to the loaded, +     * {@link android.graphics.drawable.Drawable}. If no placeholder is set the Drawable will instead simply fade in., +     *, +     * <p>, +     *     Note - this only works by default for {@link android.view.View}s and, +     *     {@link com.bumptech.glide.request.target.ViewTarget}s., +     * </p>, +     *, +     * @see #crossFade(), +     * @see #crossFade(int, int), +     * @see #crossFade(android.view.animation.Animation, int), +     *, +     * @param duration The duration of the cross fade and initial fade in., +     * @return This request builder., +     */, +    public GenericRequestBuilder<?, ?, ?, ?> crossFade(int duration);, +, +, +    /**, +     * Applies a cross fade transformation that des from the placeholder to the loaded, +     * {@link android.graphics.drawable.Drawable}. If no placeholder is set, the Drawable will instead be animated in, +     * using the given {@link android.view.animation.Animation}., +     *, +     * <p>, +     *     Note - this only works by default for {@link android.view.View}s and, +     *     {@link com.bumptech.glide.request.target.ViewTarget}s., +     * </p>, +     *, +     * @see #crossFade(), +     * @see #crossFade(int), +     * @see #crossFade(int, int), +     *, +     * @param animation The Animation to use if no placeholder is set., +     * @param duration The duration of the cross fade animation., +     * @return This request builder., +     */, +    public GenericRequestBuilder<?, ?, ?, ?> crossFade(Animation animation, int duration);, +, +, +    /**, +     * Applies a cross fade transformation that des from the placeholder to the loaded, +     * {@link android.graphics.drawable.Drawable}. If no placeholder is set, the Drawable will instead be animated in, +     * using the {@link android.view.animation.Animation} loaded from the given animation id., +     *, +     * <p>, +     *     Note - this only works by default for {@link android.view.View}s and, +     *     {@link com.bumptech.glide.request.target.ViewTarget}s.]