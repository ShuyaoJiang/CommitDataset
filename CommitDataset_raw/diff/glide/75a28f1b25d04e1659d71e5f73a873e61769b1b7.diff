[+++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +, +    @Override, +    public void removeCallback(SizeReadyCallback cb) {, +      // Do nothing because we don't retain references to SizeReadyCallbacks., +    }, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +, +    @Override, +    public void removeCallback(SizeReadyCallback cb) {, +      // Do nothing because we don't retain references to SizeReadyCallbacks., +    }, +++ b/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing because we do not retain references to SizeReadyCallbacks., +  }, +, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +, +    @Override, +    public void removeCallback(SizeReadyCallback cb) {, +      // Do nothing because we don't retain references to SizeReadyCallbacks., +    }, +++ b/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing because we do not retain references to SizeReadyCallbacks., +  }, +, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +    target.removeCallback(this);, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +, +    @Override, +    public void removeCallback(SizeReadyCallback cb) {, +      // Do nothing because we don't retain references to SizeReadyCallbacks., +    }, +++ b/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing because we do not retain references to SizeReadyCallbacks., +  }, +, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +    target.removeCallback(this);, +++ b/library/src/main/java/com/bumptech/glide/request/target/SimpleTarget.java, +, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing, we never retain a reference to the callback., +  }, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +, +    @Override, +    public void removeCallback(SizeReadyCallback cb) {, +      // Do nothing because we don't retain references to SizeReadyCallbacks., +    }, +++ b/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing because we do not retain references to SizeReadyCallbacks., +  }, +, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +    target.removeCallback(this);, +++ b/library/src/main/java/com/bumptech/glide/request/target/SimpleTarget.java, +, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing, we never retain a reference to the callback., +  }, +++ b/library/src/main/java/com/bumptech/glide/request/target/Target.java, +   * Removes the given callback from the pending set if it's still retained., +   *, +   * @param cb The callback to remove., +   */, +  void removeCallback(SizeReadyCallback cb);, +, +  /**, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +, +    @Override, +    public void removeCallback(SizeReadyCallback cb) {, +      // Do nothing because we don't retain references to SizeReadyCallbacks., +    }, +++ b/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing because we do not retain references to SizeReadyCallbacks., +  }, +, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +    target.removeCallback(this);, +++ b/library/src/main/java/com/bumptech/glide/request/target/SimpleTarget.java, +, +  @Override, +  public void removeCallback(SizeReadyCallback cb) {, +    // Do nothing, we never retain a reference to the callback., +  }]