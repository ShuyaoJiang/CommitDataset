[+++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +   * reference has to be cleared and processed before the hard reference is removed. As a result,, +   * setting this method to {@code true} may transiently increase the memory usage of an, +   * application., +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +   * reference has to be cleared and processed before the hard reference is removed. As a result,, +   * setting this method to {@code true} may transiently increase the memory usage of an, +   * application., +++ b/library/src/test/java/com/bumptech/glide/load/engine/ActiveResourcesTest.java, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ true);, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ false);, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ false);, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ false);, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +   * reference has to be cleared and processed before the hard reference is removed. As a result,, +   * setting this method to {@code true} may transiently increase the memory usage of an, +   * application., +++ b/library/src/test/java/com/bumptech/glide/load/engine/ActiveResourcesTest.java, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ true);, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ false);, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ false);, +    resources = new ActiveResources(/*isActiveResourceRetentionAllowed=*/ false);, +++ b/library/src/test/java/com/bumptech/glide/load/engine/EngineTest.java, +        new ActiveResources(/*isActiveResourceRetentionAllowed=*/ true);]