[+++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/LegacyGlideExtensionWithTypeTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/LegacyGlideExtensionWithTypeTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +  // We only override the method to change the return type, not the functionality., +  @SuppressWarnings("PMD.ConstructorCallsOverridableMethod"), +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/GlideExtensionWithTypeTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/annotation/compiler/test/src/test/resources/LegacyGlideExtensionWithTypeTest/GlideRequests.java, +import com.bumptech.glide.request.RequestListener;, +  public GlideRequests addDefaultRequestListener(RequestListener<Object> listener) {, +    return (GlideRequests) super.addDefaultRequestListener(listener);, +  }, +, +  @Override, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java]