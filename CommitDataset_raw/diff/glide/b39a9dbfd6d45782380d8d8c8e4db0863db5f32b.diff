[+++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsGenerator.java, +    // Generates the String and list of arguments to pass in when calling this method or super., +    // IE centerCrop(context) creates methodLiterals="%L" and methodArgs=[centerCrop, context]., +    List<Object> methodArgs = new ArrayList<>();, +    methodArgs.add(element.getSimpleName().toString());, +    String methodLiterals = "";, +        methodLiterals += "$L, ";, +        methodArgs.add(variable.getSimpleName().toString());, +      methodLiterals = methodLiterals.substring(0, methodLiterals.length() - 2);, +    builder.beginControlFlow("if (isAutoCloneEnabled())"), +        .addStatement(, +            "return clone().$N(" + methodLiterals + ")", methodArgs.toArray(new Object[0])), +        .endControlFlow();, +, +    // Add the correct super() call., +    if (overrideType == OVERRIDE_EXTEND) {, +      String callSuper = "super.$L(" + methodLiterals + ")";, +      builder.addStatement(callSuper, methodArgs.toArray(new Object[0])), +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsGenerator.java, +    // Generates the String and list of arguments to pass in when calling this method or super., +    // IE centerCrop(context) creates methodLiterals="%L" and methodArgs=[centerCrop, context]., +    List<Object> methodArgs = new ArrayList<>();, +    methodArgs.add(element.getSimpleName().toString());, +    String methodLiterals = "";, +        methodLiterals += "$L, ";, +        methodArgs.add(variable.getSimpleName().toString());, +      methodLiterals = methodLiterals.substring(0, methodLiterals.length() - 2);, +    builder.beginControlFlow("if (isAutoCloneEnabled())"), +        .addStatement(, +            "return clone().$N(" + methodLiterals + ")", methodArgs.toArray(new Object[0])), +        .endControlFlow();, +, +    // Add the correct super() call., +    if (overrideType == OVERRIDE_EXTEND) {, +      String callSuper = "super.$L(" + methodLiterals + ")";, +      builder.addStatement(callSuper, methodArgs.toArray(new Object[0])), +++ b/library/src/main/java/com/bumptech/glide/request/RequestOptions.java, +  protected boolean isAutoCloneEnabled() {, +    return isAutoCloneEnabled;, +  }, +]