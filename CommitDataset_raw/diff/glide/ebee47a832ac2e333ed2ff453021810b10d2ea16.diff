[+++ b/library/src/com/bumptech/glide/resize/ImageManager.java, +                result = getFromDiskCache(stringKey);, +                    handleException(e);, +                            if (cancelled) {, +                                return;, +                            }, +, +                            //this call back might be called on some other thread,, +                            //we want to do resizing on our thread, especially if we're called, +                            //back on the main thread, so we will resubmit, +                            handleException(e);, +                    putInDiskCache(String.valueOf(key), result);, +                putInMemoryCache(key, result);, +                handleException(null);, +, +        private void handleException(Exception e) {, +            cb.onLoadFailed(e);, +    private Bitmap getFromDiskCache(String key) {, +        Bitmap result = null;, +        final InputStream is = diskCache.get(key);, +        if (is != null) {, +            result = resizer.loadAsIs(is);, +            if (result == null) {, +                diskCache.delete(key); //the image must have been corrupted, +            }, +        }, +        return result;, +    }, +    private void putInDiskCache(String key, final Bitmap bitmap) {, +        diskCache.put(key, new DiskCache.Writer() {, +            @Override, +            public void write(OutputStream os) {, +                bitmap.compress(bitmapCompressFormat, bitmapCompressQuality, os);, +            }, +        });, +, +    }, +, +    private void putInMemoryCache(int key, final Bitmap bitmap) {, +        bitmapReferenceCounter.acquireBitmap(bitmap);, +        bitmapReferenceCounter.markPending(bitmap);]