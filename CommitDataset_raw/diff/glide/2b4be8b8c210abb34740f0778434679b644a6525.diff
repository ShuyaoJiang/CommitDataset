[+++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithMultipleExcludesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithMultipleExcludesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppAndLibraryGlideModulesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(libraryResource(expectedClassName + ".java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithExcludesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/AppGlideModuleWithMultipleExcludesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppAndLibraryGlideModulesTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(appResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(appResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(appResource("GeneratedRequestManagerFactory.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(libraryResource(expectedClassName + ".java").getCharContent(true)));, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/EmptyAppGlideModuleTest.java, +import static com.bumptech.glide.annotation.compiler.test.Util.asUnixChars;, +        .isEqualTo(asUnixChars(forResource("GlideOptions.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(forResource("GlideRequest.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(forResource("GlideRequests.java").getCharContent(true)));, +        .isEqualTo(asUnixChars(forResource("GlideApp.java").getCharContent(true)));, +        .isEqualTo(, +            asUnixChars(forResource("GeneratedAppGlideModuleImpl.java").getCharContent(true)));]