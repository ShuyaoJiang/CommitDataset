[+++ b/library/src/main/java/com/bumptech/glide/GenericTransitionOptions.java, +import com.bumptech.glide.request.transition.TransitionFactory;, +import com.bumptech.glide.request.transition.ViewPropertyTransition;, +, +  /**, +   * Removes any existing animation put on the builder., +   *, +   * @see GenericTransitionOptions#dontTransition(), +   */, +, +  /**, +   * Returns a typed {@link GenericTransitionOptions} object that uses the given view animation., +   *, +   * @see GenericTransitionOptions#transition(int), +   */, +  public static <TranscodeType> GenericTransitionOptions<TranscodeType> with(, +      int viewAnimationId) {, +    return new GenericTransitionOptions<TranscodeType>().transition(viewAnimationId);, +  }, +, +  /**, +   * Returns a typed {@link GenericTransitionOptions} object that uses the given animator., +   *, +   * @see GenericTransitionOptions#transition(ViewPropertyTransition.Animator), +   */, +  public static <TranscodeType> GenericTransitionOptions<TranscodeType> with(, +      ViewPropertyTransition.Animator animator) {, +    return new GenericTransitionOptions<TranscodeType>().transition(animator);, +  }, +, +  /**, +   * Returns a typed {@link GenericTransitionOptions} object that uses the given transition factory., +   *, +   * @see GenericTransitionOptions#transition(TransitionFactory), +   */, +  public static <TranscodeType> GenericTransitionOptions<TranscodeType> with(, +      TransitionFactory<? super TranscodeType> transitionFactory) {, +    return new GenericTransitionOptions<TranscodeType>().transition(transitionFactory);, +  }, +++ b/library/src/main/java/com/bumptech/glide/GenericTransitionOptions.java, +import com.bumptech.glide.request.transition.TransitionFactory;, +import com.bumptech.glide.request.transition.ViewPropertyTransition;, +, +  /**, +   * Removes any existing animation put on the builder., +   *, +   * @see GenericTransitionOptions#dontTransition(), +   */, +, +  /**, +   * Returns a typed {@link GenericTransitionOptions} object that uses the given view animation., +   *, +   * @see GenericTransitionOptions#transition(int), +   */, +  public static <TranscodeType> GenericTransitionOptions<TranscodeType> with(, +      int viewAnimationId) {, +    return new GenericTransitionOptions<TranscodeType>().transition(viewAnimationId);, +  }, +, +  /**, +   * Returns a typed {@link GenericTransitionOptions} object that uses the given animator., +   *, +   * @see GenericTransitionOptions#transition(ViewPropertyTransition.Animator), +   */, +  public static <TranscodeType> GenericTransitionOptions<TranscodeType> with(, +      ViewPropertyTransition.Animator animator) {, +    return new GenericTransitionOptions<TranscodeType>().transition(animator);, +  }, +, +  /**, +   * Returns a typed {@link GenericTransitionOptions} object that uses the given transition factory., +   *, +   * @see GenericTransitionOptions#transition(TransitionFactory), +   */, +  public static <TranscodeType> GenericTransitionOptions<TranscodeType> with(, +      TransitionFactory<? super TranscodeType> transitionFactory) {, +    return new GenericTransitionOptions<TranscodeType>().transition(transitionFactory);, +  }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions.java, +package com.bumptech.glide.load.resource.bitmap;, +, +import android.graphics.Bitmap;, +import android.graphics.drawable.Drawable;, +, +import com.bumptech.glide.TransitionOptions;, +import com.bumptech.glide.request.transition.BitmapTransitionFactory;, +import com.bumptech.glide.request.transition.DrawableCrossFadeFactory;, +import com.bumptech.glide.request.transition.TransitionFactory;, +, +/**, + * Contains {@link Bitmap} specific animation options., + */, +public final class BitmapTransitionOptions extends, +    TransitionOptions<BitmapTransitionOptions, Bitmap> {, +, +  /**, +   * Returns a {@link BitmapTransitionOptions} object that enables a cross fade animation., +   *, +   * @see #crossFade(), +   */]