[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResourceTest.java, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResourceTest.java, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java, +import static com.google.common.truth.Truth.assertThat;, +import static org.mockito.Matchers.anyInt;, +import static org.mockito.Matchers.eq;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.when;, +, +import org.robolectric.RobolectricTestRunner;, +import android.graphics.drawable.BitmapDrawable;, +import com.bumptech.glide.load.engine.Resource;, +import org.mockito.ArgumentCaptor;, +import org.mockito.invocation.InvocationOnMock;, +import org.mockito.stubbing.Answer;, +  @Mock Resource<BitmapDrawable> drawableResourceToTransform;, +  @Mock BitmapDrawable drawableToTransform;, +, +  private Bitmap bitmapToTransform;, +    bitmapToTransform = Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888);, +    when(drawableResourceToTransform.get()).thenReturn(drawableToTransform);, +    when(drawableToTransform.getBitmap()).thenReturn(bitmapToTransform);, +  public void testReturnsOriginalResourceIfTransformationDoesNotTransform() {, +    int outWidth = 123;, +    int outHeight = 456;, +    when(wrapped.transform(any(Resource.class), eq(outWidth), eq(outHeight))), +        .thenAnswer(new Answer<Object>() {, +          @Override, +          public Object answer(InvocationOnMock invocation) throws Throwable {, +            return invocation.getArguments()[0];, +          }, +        });, +, +    Resource<BitmapDrawable> transformed = transformation.transform(drawableResourceToTransform,, +        outWidth, outHeight);, +, +    assertThat(transformed).isEqualTo(drawableResourceToTransform);, +  }, +, +  @Test, +  public void testReturnsNewResourceIfTransformationDoesTransform() {, +    int outWidth = 999;, +    int outHeight = 555;, +, +    Bitmap transformedBitmap = Bitmap.createBitmap(outWidth, outHeight, Bitmap.Config.RGB_565);, +    Resource<Bitmap> transformedBitmapResource = mock(Resource.class);, +    when(transformedBitmapResource.get()).thenReturn(transformedBitmap);, +    when(wrapped.transform(any(Resource.class), eq(outWidth), eq(outHeight))), +        .thenReturn(transformedBitmapResource);, +, +    Resource<BitmapDrawable> transformed =, +        transformation.transform(drawableResourceToTransform, outWidth, outHeight);, +, +    assertThat(transformed.get().getBitmap()).isEqualTo(transformedBitmap);, +  }, +, +  @Test, +  public void testProvidesBitmapFromGivenResourceToWrappedTransformation() {, +    int outWidth = 332;, +    int outHeight = 111;, +    Resource<Bitmap> transformed = mock(Resource.class);, +    when(transformed.get()), +        .thenReturn(Bitmap.createBitmap(outWidth, outHeight, Bitmap.Config.ARGB_8888));, +    when(wrapped.transform(any(Resource.class), anyInt(), anyInt())), +        .thenReturn(transformed);, +, +    transformation.transform(drawableResourceToTransform, outWidth, outHeight);, +    ArgumentCaptor<Resource> captor = ArgumentCaptor.forClass(Resource.class);, +, +    verify(wrapped).transform(captor.capture(), eq(outWidth), eq(outHeight));, +, +    assertThat(captor.getValue().get()).isEqualTo(bitmapToTransform);, +  }, +, +  @Test, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableResourceTest.java, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java, +import static com.google.common.truth.Truth.assertThat;, +import static org.mockito.Matchers.anyInt;, +import static org.mockito.Matchers.eq;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.when;, +, +import org.robolectric.RobolectricTestRunner;, +import android.graphics.drawable.BitmapDrawable;, +import com.bumptech.glide.load.engine.Resource;, +import org.mockito.ArgumentCaptor;, +import org.mockito.invocation.InvocationOnMock;, +import org.mockito.stubbing.Answer;, +  @Mock Resource<BitmapDrawable> drawableResourceToTransform;, +  @Mock BitmapDrawable drawableToTransform;, +, +  private Bitmap bitmapToTransform;, +    bitmapToTransform = Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888);, +    when(drawableResourceToTransform.get()).thenReturn(drawableToTransform);, +    when(drawableToTransform.getBitmap()).thenReturn(bitmapToTransform);, +  public void testReturnsOriginalResourceIfTransformationDoesNotTransform() {, +    int outWidth = 123;, +    int outHeight = 456;, +    when(wrapped.transform(any(Resource.class), eq(outWidth), eq(outHeight)))]