[+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java, +      @NonNull WaitModel<Model> waitModel, int width, int height, @NonNull Options options) {, +  public boolean handles(@NonNull WaitModel<Model> waitModel) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java, +      @NonNull WaitModel<Model> waitModel, int width, int height, @NonNull Options options) {, +  public boolean handles(@NonNull WaitModel<Model> waitModel) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java, +      @NonNull WaitModel<Model> waitModel, int width, int height, @NonNull Options options) {, +  public boolean handles(@NonNull WaitModel<Model> waitModel) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = loadData.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = modelLoaders.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = loadData.size(); i < size; i++) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java, +      @NonNull WaitModel<Model> waitModel, int width, int height, @NonNull Options options) {, +  public boolean handles(@NonNull WaitModel<Model> waitModel) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = loadData.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = modelLoaders.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = loadData.size(); i < size; i++) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        switch (encodeStrategy) {, +          case SOURCE:, +            break;, +          case TRANSFORMED:, +            break;, +          default:, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java, +      @NonNull WaitModel<Model> waitModel, int width, int height, @NonNull Options options) {, +  public boolean handles(@NonNull WaitModel<Model> waitModel) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = loadData.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = modelLoaders.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = loadData.size(); i < size; i++) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        switch (encodeStrategy) {, +          case SOURCE:, +            break;, +          case TRANSFORMED:, +            break;, +          default:, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/WaitModelLoader.java, +      @NonNull WaitModel<Model> waitModel, int width, int height, @NonNull Options options) {, +  public boolean handles(@NonNull WaitModel<Model> waitModel) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = parsers.size(); i < size; i++) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeHelper.java, +    //noinspection ForLoopReplaceableByForEach to improve perf, +    for (int i = 0, size = loadData.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = modelLoaders.size(); i < size; i++) {, +      //noinspection ForLoopReplaceableByForEach to improve perf, +      for (int i = 0, size = loadData.size(); i < size; i++) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        switch (encodeStrategy) {, +          case SOURCE:]