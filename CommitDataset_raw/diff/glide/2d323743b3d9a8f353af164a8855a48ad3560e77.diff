[+++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +  ImageType getType(InputStream is) throws IOException;, +  ImageType getType(ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(InputStream is, ArrayPool byteArrayPool) throws IOException;, +  int getOrientation(ByteBuffer byteBuffer, ArrayPool byteArrayPool) throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +  ImageType getType(InputStream is) throws IOException;, +  ImageType getType(ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(InputStream is, ArrayPool byteArrayPool) throws IOException;, +  int getOrientation(ByteBuffer byteBuffer, ArrayPool byteArrayPool) throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +  ImageType getType(InputStream is) throws IOException;, +  ImageType getType(ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(InputStream is, ArrayPool byteArrayPool) throws IOException;, +  int getOrientation(ByteBuffer byteBuffer, ArrayPool byteArrayPool) throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private final class DecodeCallback<Z> implements DecodePath.DecodeCallback<Z> {, +    @Synthetic, +    DecodeCallback(DataSource dataSource) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +  ImageType getType(InputStream is) throws IOException;, +  ImageType getType(ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(InputStream is, ArrayPool byteArrayPool) throws IOException;, +  int getOrientation(ByteBuffer byteBuffer, ArrayPool byteArrayPool) throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private final class DecodeCallback<Z> implements DecodePath.DecodeCallback<Z> {, +    @Synthetic, +    DecodeCallback(DataSource dataSource) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Initializable.java, +   * Called on a background thread so the {@link Resource} can do some eager initialization., +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +  ImageType getType(InputStream is) throws IOException;, +  ImageType getType(ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(InputStream is, ArrayPool byteArrayPool) throws IOException;, +  int getOrientation(ByteBuffer byteBuffer, ArrayPool byteArrayPool) throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private final class DecodeCallback<Z> implements DecodePath.DecodeCallback<Z> {, +    @Synthetic, +    DecodeCallback(DataSource dataSource) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Initializable.java, +   * Called on a background thread so the {@link Resource} can do some eager initialization., +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +      hasAlpha = ImageHeaderParserUtils.getType(parsers, is, byteArrayPool).hasAlpha();, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +  ImageType getType(InputStream is) throws IOException;, +  ImageType getType(ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(InputStream is, ArrayPool byteArrayPool) throws IOException;, +  int getOrientation(ByteBuffer byteBuffer, ArrayPool byteArrayPool) throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private final class DecodeCallback<Z> implements DecodePath.DecodeCallback<Z> {, +    @Synthetic, +    DecodeCallback(DataSource dataSource) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Initializable.java, +   * Called on a background thread so the {@link Resource} can do some eager initialization., +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +      hasAlpha = ImageHeaderParserUtils.getType(parsers, is, byteArrayPool).hasAlpha();, +++ b/library/src/test/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParserTest.java, +      public void run(DefaultImageHeaderParser parser, ByteBuffer byteBuffer,, +          ArrayPool byteArrayPool) throws IOException {, +  public void getOrientation_withExifSegmentAndPreambleBetweenLengthAndExpected_returnsUnknown(), +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +  ImageType getType(InputStream is) throws IOException;, +  ImageType getType(ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(InputStream is, ArrayPool byteArrayPool) throws IOException;, +  int getOrientation(ByteBuffer byteBuffer, ArrayPool byteArrayPool) throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private final class DecodeCallback<Z> implements DecodePath.DecodeCallback<Z> {, +    @Synthetic, +    DecodeCallback(DataSource dataSource) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Initializable.java, +   * Called on a background thread so the {@link Resource} can do some eager initialization., +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +      hasAlpha = ImageHeaderParserUtils.getType(parsers, is, byteArrayPool).hasAlpha();, +++ b/library/src/test/java/com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParserTest.java, +      public void run(DefaultImageHeaderParser parser, ByteBuffer byteBuffer,, +          ArrayPool byteArrayPool) throws IOException {, +  public void getOrientation_withExifSegmentAndPreambleBetweenLengthAndExpected_returnsUnknown(), +++ b/library/src/test/java/com/bumptech/glide/load/resource/bitmap/DownsamplerTest.java]