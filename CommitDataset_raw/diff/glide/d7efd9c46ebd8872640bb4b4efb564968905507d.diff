[+++ b/library/src/com/bumptech/glide/resize/load/Downsampler.java, +import com.bumptech.glide.util.Log;, +        bis.mark(MARK_POSITION);, +        int orientation = 0;, +        try {, +            orientation = new ExifOrientationParser(bis).getOrientation();//ImageResizer.getOrientation(bis);, +        } catch (IOException e) {, +            e.printStackTrace();, +        }, +        try {, +            bis.reset();, +        } catch (IOException e) {, +            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates., +        }, +        Log.d("EXIF: got orientation=" + orientation);, +, +        final int[] inDimens = getDimensions(bis, options);, +        int inWidth = inDimens[0];, +        int inHeight = inDimens[1];, +, +        final int degreesToRotate = ImageResizer.getExifOrientationDegrees(orientation);, +        final int sampleSize;, +        if (degreesToRotate == 90 || degreesToRotate == 270) {, +            final int temp = inWidth;, +            inWidth = inHeight;, +            inHeight = temp;, +, +            sampleSize = getSampleSize(inWidth, inHeight, outWidth, outHeight);, +, +            inHeight = inWidth;, +            inWidth = temp;, +        } else {, +            sampleSize = getSampleSize(inWidth, inHeight, outWidth, outHeight);, +        }, +        final Bitmap downsampled = decodeStream(bis, options);, +        final Bitmap rotated = ImageResizer.rotateImageExif(downsampled, pool, orientation);, +, +        if (downsampled != rotated) {, +            pool.put(downsampled);, +        }, +, +        return rotated;, +++ b/library/src/com/bumptech/glide/resize/load/Downsampler.java, +import com.bumptech.glide.util.Log;, +        bis.mark(MARK_POSITION);, +        int orientation = 0;, +        try {, +            orientation = new ExifOrientationParser(bis).getOrientation();//ImageResizer.getOrientation(bis);, +        } catch (IOException e) {, +            e.printStackTrace();, +        }, +        try {, +            bis.reset();, +        } catch (IOException e) {, +            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates., +        }, +        Log.d("EXIF: got orientation=" + orientation);, +, +        final int[] inDimens = getDimensions(bis, options);, +        int inWidth = inDimens[0];, +        int inHeight = inDimens[1];, +, +        final int degreesToRotate = ImageResizer.getExifOrientationDegrees(orientation);, +        final int sampleSize;, +        if (degreesToRotate == 90 || degreesToRotate == 270) {, +            final int temp = inWidth;, +            inWidth = inHeight;, +            inHeight = temp;, +, +            sampleSize = getSampleSize(inWidth, inHeight, outWidth, outHeight);, +, +            inHeight = inWidth;, +            inWidth = temp;, +        } else {, +            sampleSize = getSampleSize(inWidth, inHeight, outWidth, outHeight);, +        }, +        final Bitmap downsampled = decodeStream(bis, options);, +        final Bitmap rotated = ImageResizer.rotateImageExif(downsampled, pool, orientation);, +, +        if (downsampled != rotated) {, +            pool.put(downsampled);, +        }, +, +        return rotated;, +++ b/library/src/com/bumptech/glide/resize/load/ExifOrientationParser.java, +package com.bumptech.glide.resize.load;, +, +import com.bumptech.glide.util.Log;, +, +import java.io.IOException;, +import java.io.InputStream;, +import java.nio.ByteBuffer;, +import java.nio.ByteOrder;, +, +/**, + * A class for parsing the exif orientation from an InputStream for an image. Handles jpegs and tiffs., + */, +public class ExifOrientationParser {, +    private static final int EXIF_MAGIC_NUMBER = 0xFFD8;, +    private static final int MOTOROLA_TIFF_MAGIC_NUMBER = 0x4D4D;  // "MM"]