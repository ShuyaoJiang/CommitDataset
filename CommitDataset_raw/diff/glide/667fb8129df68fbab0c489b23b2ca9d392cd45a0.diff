[+++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestTracker requestTracker) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestTracker requestTracker) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestTracker;, +    private RequestTracker requestTracker;, +            Glide glide, RequestTracker requestTracker) {, +                glide, requestTracker);, +        this.requestTracker= requestTracker;, +                transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestTracker requestTracker) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestTracker;, +    private RequestTracker requestTracker;, +            Glide glide, RequestTracker requestTracker) {, +                glide, requestTracker);, +        this.requestTracker= requestTracker;, +                transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            RequestTracker requestTracker) {, +        super(context, model, loadProvider, Drawable.class, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestTracker requestTracker) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestTracker;, +    private RequestTracker requestTracker;, +            Glide glide, RequestTracker requestTracker) {, +                glide, requestTracker);, +        this.requestTracker= requestTracker;, +                transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            RequestTracker requestTracker) {, +        super(context, model, loadProvider, Drawable.class, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/DrawableTypeRequest.java, +import com.bumptech.glide.manager.RequestTracker;, +    private RequestTracker requestTracker;, +            RequestTracker requestTracker) {, +                glide, requestTracker);, +        this.requestTracker = requestTracker;, +                requestTracker);, +        return new GifTypeRequest<A>(context, model, streamModelLoader, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestTracker requestTracker) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestTracker;, +    private RequestTracker requestTracker;, +            Glide glide, RequestTracker requestTracker) {, +                glide, requestTracker);, +        this.requestTracker= requestTracker;, +                transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            RequestTracker requestTracker) {, +        super(context, model, loadProvider, Drawable.class, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/DrawableTypeRequest.java, +import com.bumptech.glide.manager.RequestTracker;, +    private RequestTracker requestTracker;, +            RequestTracker requestTracker) {, +                glide, requestTracker);, +        this.requestTracker = requestTracker;, +                requestTracker);, +        return new GifTypeRequest<A>(context, model, streamModelLoader, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +    private final RequestTracker requestTracker;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestTracker requestTracker) {, +        this.requestTracker = requestTracker;, +            requestTracker.removeRequest(previous);, +        requestTracker.addRequest(request);, +, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            Class<TranscodeType> transcodeClass, Glide glide, RequestTracker requestTracker) {, +        super(context, model, streamLoadProvider, transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/BitmapTypeRequest.java, +import com.bumptech.glide.manager.RequestTracker;, +    private RequestTracker requestTracker;, +            Glide glide, RequestTracker requestTracker) {, +                glide, requestTracker);, +        this.requestTracker= requestTracker;, +                transcodeClass, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +import com.bumptech.glide.manager.RequestTracker;, +            RequestTracker requestTracker) {, +        super(context, model, loadProvider, Drawable.class, glide, requestTracker);, +++ b/library/src/main/java/com/bumptech/glide/DrawableTypeRequest.java]