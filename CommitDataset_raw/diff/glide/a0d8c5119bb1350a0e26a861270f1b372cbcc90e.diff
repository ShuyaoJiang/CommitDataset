[+++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.presenter.ImageReadyCallback;, +                builder.setImageReadyCallback(new ImageReadyCallback() {, +                    public void onImageReady(ImageView view, boolean fromCache) {, +++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.presenter.ImageReadyCallback;, +                builder.setImageReadyCallback(new ImageReadyCallback() {, +                    public void onImageReady(ImageView view, boolean fromCache) {, +++ b/library/src/com/bumptech/glide/loader/image/BaseImageLoader.java, +     * an image is displayed. See {@link com.bumptech.glide.presenter.ImageReadyCallback} instead to make a visual change, +++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.presenter.ImageReadyCallback;, +                builder.setImageReadyCallback(new ImageReadyCallback() {, +                    public void onImageReady(ImageView view, boolean fromCache) {, +++ b/library/src/com/bumptech/glide/loader/image/BaseImageLoader.java, +     * an image is displayed. See {@link com.bumptech.glide.presenter.ImageReadyCallback} instead to make a visual change, +++ b/library/src/com/bumptech/glide/presenter/ImagePresenter.java, +        private ImageReadyCallback imageReadyCallback;, +        public Builder<T> setImageReadyCallback(ImageReadyCallback cb) {, +            this.imageReadyCallback = cb;, +    private final ImageReadyCallback imageReadyCallback;, +        this.imageReadyCallback = builder.imageReadyCallback;, +                if (imageReadyCallback != null), +                    imageReadyCallback.onImageReady(imageView, loadedFromCache);, +++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.presenter.ImageReadyCallback;, +                builder.setImageReadyCallback(new ImageReadyCallback() {, +                    public void onImageReady(ImageView view, boolean fromCache) {, +++ b/library/src/com/bumptech/glide/loader/image/BaseImageLoader.java, +     * an image is displayed. See {@link com.bumptech.glide.presenter.ImageReadyCallback} instead to make a visual change, +++ b/library/src/com/bumptech/glide/presenter/ImagePresenter.java, +        private ImageReadyCallback imageReadyCallback;, +        public Builder<T> setImageReadyCallback(ImageReadyCallback cb) {, +            this.imageReadyCallback = cb;, +    private final ImageReadyCallback imageReadyCallback;, +        this.imageReadyCallback = builder.imageReadyCallback;, +                if (imageReadyCallback != null), +                    imageReadyCallback.onImageReady(imageView, loadedFromCache);, +++ b/library/src/com/bumptech/glide/presenter/ImageReadyCallback.java, +/*, + * Copyright (c) 2012. Bump Technologies Inc. All Rights Reserved., + */, +, +package com.bumptech.glide.presenter;, +, +import android.widget.ImageView;, +, +/**, + * A callback interface used to perform some action when an {@link ImagePresenter} sets a new bitmap in an, + * {@link android.widget.ImageView}, + */, +public interface ImageReadyCallback {, +, +    /**, +     * The method called when a bitmap is set, +     *, +     * @param view The view that will display the bitmap, +     * @param fromCache True iff the load completed without a placeholder being shown., +     */, +    public void onImageReady(ImageView view, boolean fromCache);, +}, +++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.presenter.ImageReadyCallback;, +                builder.setImageReadyCallback(new ImageReadyCallback() {, +                    public void onImageReady(ImageView view, boolean fromCache) {, +++ b/library/src/com/bumptech/glide/loader/image/BaseImageLoader.java, +     * an image is displayed. See {@link com.bumptech.glide.presenter.ImageReadyCallback} instead to make a visual change, +++ b/library/src/com/bumptech/glide/presenter/ImagePresenter.java, +        private ImageReadyCallback imageReadyCallback;, +        public Builder<T> setImageReadyCallback(ImageReadyCallback cb) {, +            this.imageReadyCallback = cb;, +    private final ImageReadyCallback imageReadyCallback;, +        this.imageReadyCallback = builder.imageReadyCallback;, +                if (imageReadyCallback != null), +                    imageReadyCallback.onImageReady(imageView, loadedFromCache);, +++ b/library/src/com/bumptech/glide/presenter/ImageReadyCallback.java, +/*, + * Copyright (c) 2012. Bump Technologies Inc. All Rights Reserved., + */, +, +package com.bumptech.glide.presenter;, +, +import android.widget.ImageView;, +, +/**, + * A callback interface used to perform some action when an {@link ImagePresenter} sets a new bitmap in an, + * {@link android.widget.ImageView}, + */, +public interface ImageReadyCallback {, +, +    /**, +     * The method called when a bitmap is set, +     *, +     * @param view The view that will display the bitmap, +     * @param fromCache True iff the load completed without a placeholder being shown., +     */, +    public void onImageReady(ImageView view, boolean fromCache);, +}, +++ /dev/null, +++ b/library/src/com/bumptech/glide/Glide.java]