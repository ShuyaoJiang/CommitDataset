[+++ b/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java, +    // Exposed for testing only., +    private boolean exceptionReceived;, +        }, +        // We might get a null result., +        // We might get a null exception., +        exceptionReceived = true;, +        } else if (exceptionReceived) {, +        } else if (timeoutMillis > 0) {, +        } else if (exceptionReceived) {, +++ b/library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java, +    // Exposed for testing only., +    private boolean exceptionReceived;, +        }, +        // We might get a null result., +        // We might get a null exception., +        exceptionReceived = true;, +        } else if (exceptionReceived) {, +        } else if (timeoutMillis > 0) {, +        } else if (exceptionReceived) {, +++ b/library/src/test/java/com/bumptech/glide/request/RequestFutureTargetTest.java, +    public void testThrowsExecutionExceptionOnGetIfExceptionWithNullValueBeforeGet(), +            throws ExecutionException, InterruptedException, TimeoutException {, +        future.onException(null, null, null, false);, +        future.get(100, TimeUnit.MILLISECONDS);, +    }, +, +    @Test(expected = ExecutionException.class)]