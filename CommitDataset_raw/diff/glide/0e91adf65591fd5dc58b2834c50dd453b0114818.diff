[+++ b/integration/gifencoder/gifencoder.iml, +++ b/integration/gifencoder/gifencoder.iml, +++ b/integration/okhttp/okhttp.iml, +++ b/integration/gifencoder/gifencoder.iml, +++ b/integration/okhttp/okhttp.iml, +++ b/integration/volley/volley.iml, +++ b/integration/gifencoder/gifencoder.iml, +++ b/integration/okhttp/okhttp.iml, +++ b/integration/volley/volley.iml, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +++ b/integration/gifencoder/gifencoder.iml, +++ b/integration/okhttp/okhttp.iml, +++ b/integration/volley/volley.iml, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/DecodeJobTest.java, +    /** decodeFromCachedResource **/, +            assertEquals("diskCacheStrategy: " + strategy, harness.resource,, +                    harness.getJob().decodeFromCachedResource());, +            harness.getJob().decodeFromCachedResource();, +            assertNull(harness.getJob().decodeFromCachedResource());, +        assertEquals(transcoded, harness.getJob().decodeFromCachedResource());, +        harness.getJob().decodeFromCachedResource();, +        assertNull(harness.getJob().decodeFromCachedResource());, +        assertNull(harness.getJob().decodeFromCachedResource());, +            harness.getJob().decodeFromCachedResource();, +        assertNull(harness.getJob().decodeFromCachedResource());, +        harness.getJob().decodeFromCachedResource();, +        assertNull(harness.getJob().decodeFromCachedResource());, +        assertNull(harness.getJob().decodeFromCachedResource());, +    /** decodeFromCachedData **/, +            assertNull(harness.getJob().decodeFromCachedData());, +            assertEquals(harness.resource, harness.getJob().decodeFromCachedData());, +            harness.getJob().decodeFromCachedData();, +            assertEquals(transcoded, harness.getJob().decodeFromCachedData());, +            harness.getJob().decodeFromCachedData();, +            harness.getJob().decodeFromCachedData();, +        harness.getJob().decodeFromCachedData();, +        harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +            harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +        harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +        harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +        harness.getJob().decodeFromCachedData();, +++ b/integration/gifencoder/gifencoder.iml, +++ b/integration/okhttp/okhttp.iml, +++ b/integration/volley/volley.iml, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/DecodeJobTest.java, +    /** decodeFromCachedResource **/, +            assertEquals("diskCacheStrategy: " + strategy, harness.resource,, +                    harness.getJob().decodeFromCachedResource());, +            harness.getJob().decodeFromCachedResource();, +            assertNull(harness.getJob().decodeFromCachedResource());, +        assertEquals(transcoded, harness.getJob().decodeFromCachedResource());, +        harness.getJob().decodeFromCachedResource();, +        assertNull(harness.getJob().decodeFromCachedResource());, +        assertNull(harness.getJob().decodeFromCachedResource());, +            harness.getJob().decodeFromCachedResource();, +        assertNull(harness.getJob().decodeFromCachedResource());, +        harness.getJob().decodeFromCachedResource();, +        assertNull(harness.getJob().decodeFromCachedResource());, +        assertNull(harness.getJob().decodeFromCachedResource());, +    /** decodeFromCachedData **/, +            assertNull(harness.getJob().decodeFromCachedData());, +            assertEquals(harness.resource, harness.getJob().decodeFromCachedData());, +            harness.getJob().decodeFromCachedData();, +            assertEquals(transcoded, harness.getJob().decodeFromCachedData());, +            harness.getJob().decodeFromCachedData();, +            harness.getJob().decodeFromCachedData();, +        harness.getJob().decodeFromCachedData();, +        harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +            harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +        harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +        harness.getJob().decodeFromCachedData();, +        assertNull(harness.getJob().decodeFromCachedData());, +        harness.getJob().decodeFromCachedData();, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineRunnableTest.java, +        when(job.decodeFromCachedResource()).thenReturn(expected);, +        when(job.decodeFromCachedResource()).thenReturn(null);, +        when(job.decodeFromCachedResource()).thenThrow(new RuntimeException("test"));, +        when(job.decodeFromCachedData()).thenReturn(expected);, +        when(job.decodeFromCachedResource()).thenThrow(new RuntimeException("test"));]