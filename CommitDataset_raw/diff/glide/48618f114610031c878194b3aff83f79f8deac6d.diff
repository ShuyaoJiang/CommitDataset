[+++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +      Log.v(TAG, "trimMemory, level=" + level);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +      Log.v(TAG, "trimMemory, level=" + level);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy.java, +    Key bestKey = findBestKey(size, config);, +      decrementBitmapOfSize(bestKey.size, result);, +  private Key findBestKey(int size, Bitmap.Config config) {, +    Key result = keyPool.get(size, config);, +          keyPool.offer(result);, +      decrementBitmapOfSize(removedSize, removed);, +  private void decrementBitmapOfSize(Integer size, Bitmap removed) {, +    Bitmap.Config config = removed.getConfig();, +    if (current == null) {, +      throw new NullPointerException("Tried to decrement empty size", +          + ", size: " + size, +          + ", removed: " + logBitmap(removed), +          + ", this: " + this);, +    }, +]