[+++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        if (target == null) {, +            throw new IllegalArgumentException("You must pass in a non null Target");, +        }, +, +        if (view == null) {, +            throw new IllegalArgumentException("You must pass in a non null View");, +        }, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        if (target == null) {, +            throw new IllegalArgumentException("You must pass in a non null Target");, +        }, +, +        if (view == null) {, +            throw new IllegalArgumentException("You must pass in a non null View");, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameManager.java, +import com.bumptech.glide.load.model.NullEncoder;, +    private final NullEncoder<GifDecoder> sourceEncoder;, +        sourceEncoder = NullEncoder.get();, +                .sourceEncoder(sourceEncoder), +                .transform(transformation), +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        if (target == null) {, +            throw new IllegalArgumentException("You must pass in a non null Target");, +        }, +, +        if (view == null) {, +            throw new IllegalArgumentException("You must pass in a non null View");, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameManager.java, +import com.bumptech.glide.load.model.NullEncoder;, +    private final NullEncoder<GifDecoder> sourceEncoder;, +        sourceEncoder = NullEncoder.get();, +                .sourceEncoder(sourceEncoder), +                .transform(transformation), +++ b/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java, +import android.graphics.drawable.Animatable;, +        if (!(resource instanceof Animatable)) {, +            if (Math.abs(viewRatio - 1f) <= SQUARE_RATIO_MARGIN &&, +                    Math.abs(drawableRatio - 1f) <= SQUARE_RATIO_MARGIN) {, +        }, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        if (target == null) {, +            throw new IllegalArgumentException("You must pass in a non null Target");, +        }, +, +        if (view == null) {, +            throw new IllegalArgumentException("You must pass in a non null View");, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameManager.java, +import com.bumptech.glide.load.model.NullEncoder;, +    private final NullEncoder<GifDecoder> sourceEncoder;, +        sourceEncoder = NullEncoder.get();, +                .sourceEncoder(sourceEncoder), +                .transform(transformation), +++ b/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java, +import android.graphics.drawable.Animatable;, +        if (!(resource instanceof Animatable)) {, +            if (Math.abs(viewRatio - 1f) <= SQUARE_RATIO_MARGIN &&, +                    Math.abs(drawableRatio - 1f) <= SQUARE_RATIO_MARGIN) {, +        }, +++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +        if (view == null) {, +            throw new NullPointerException("View must not be null!");, +        }, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        if (target == null) {, +            throw new IllegalArgumentException("You must pass in a non null Target");, +        }, +, +        if (view == null) {, +            throw new IllegalArgumentException("You must pass in a non null View");, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameManager.java, +import com.bumptech.glide.load.model.NullEncoder;, +    private final NullEncoder<GifDecoder> sourceEncoder;, +        sourceEncoder = NullEncoder.get();, +                .sourceEncoder(sourceEncoder), +                .transform(transformation), +++ b/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java, +import android.graphics.drawable.Animatable;, +        if (!(resource instanceof Animatable)) {, +            if (Math.abs(viewRatio - 1f) <= SQUARE_RATIO_MARGIN &&, +                    Math.abs(drawableRatio - 1f) <= SQUARE_RATIO_MARGIN) {, +        }, +++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +        if (view == null) {, +            throw new NullPointerException("View must not be null!");, +        }, +++ b/library/src/test/java/com/bumptech/glide/GenericRequestBuilderTest.java, +import android.widget.ImageView;, +    @Test(expected = IllegalArgumentException.class), +    public void testThrowsIfGivenNullTarget() {, +        getNullModelRequest().into((Target) null);, +    }, +, +    @Test(expected = IllegalArgumentException.class), +    public void testThrowsIfGivenNullView() {, +        getNullModelRequest().into((ImageView) null);]