[+++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.resize.load.DecodeFormat;, +    private DecodeFormat decodeFormat = DecodeFormat.PREFER_RGB_565;, +     * @return This request builder., +     * Sets the preferred format for {@link Bitmap}s decoded in this request. Defaults to, +     * {@link DecodeFormat#PREFER_RGB_565}., +     *, +     * <p>, +     *     Note - If using a {@link Transformation} that expect bitmaps to support transparency, this should always be, +     *     set to ALWAYS_ARGB_8888. RGB_565 requires fewer bytes per pixel and is generally preferable, but it does not, +     *     support transparency., +     * </p>, +     *, +     * @see DecodeFormat, +     *, +     * @param format The format to use., +     * @return This request builder., +     */, +    public GenericRequestBuilder<ModelType, ImageResourceType, VideoResourceType> format(DecodeFormat format) {, +        this.decodeFormat = format;, +, +        return this;, +    }, +, +    /**, +                                                imageLoader, imageDecoder, decodeFormat) : null,, +                                                videoLoader, videoDecoder, decodeFormat) : null,, +                .setDecodeFormat(decodeFormat), +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.resize.load.DecodeFormat;, +    private DecodeFormat decodeFormat = DecodeFormat.PREFER_RGB_565;, +     * @return This request builder., +     * Sets the preferred format for {@link Bitmap}s decoded in this request. Defaults to, +     * {@link DecodeFormat#PREFER_RGB_565}., +     *, +     * <p>, +     *     Note - If using a {@link Transformation} that expect bitmaps to support transparency, this should always be, +     *     set to ALWAYS_ARGB_8888. RGB_565 requires fewer bytes per pixel and is generally preferable, but it does not, +     *     support transparency., +     * </p>, +     *, +     * @see DecodeFormat, +     *, +     * @param format The format to use., +     * @return This request builder., +     */, +    public GenericRequestBuilder<ModelType, ImageResourceType, VideoResourceType> format(DecodeFormat format) {, +        this.decodeFormat = format;, +, +        return this;, +    }, +, +    /**, +                                                imageLoader, imageDecoder, decodeFormat) : null,, +                                                videoLoader, videoDecoder, decodeFormat) : null,, +                .setDecodeFormat(decodeFormat), +++ b/library/src/com/bumptech/glide/RequestBuilder.java, +import com.bumptech.glide.resize.load.DecodeFormat;, +    public RequestBuilder<ModelType> format(DecodeFormat format) {, +        super.format(format);, +        return this;, +    }, +, +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.resize.load.DecodeFormat;, +    private DecodeFormat decodeFormat = DecodeFormat.PREFER_RGB_565;, +     * @return This request builder., +     * Sets the preferred format for {@link Bitmap}s decoded in this request. Defaults to, +     * {@link DecodeFormat#PREFER_RGB_565}., +     *, +     * <p>, +     *     Note - If using a {@link Transformation} that expect bitmaps to support transparency, this should always be, +     *     set to ALWAYS_ARGB_8888. RGB_565 requires fewer bytes per pixel and is generally preferable, but it does not, +     *     support transparency., +     * </p>, +     *, +     * @see DecodeFormat, +     *, +     * @param format The format to use., +     * @return This request builder., +     */, +    public GenericRequestBuilder<ModelType, ImageResourceType, VideoResourceType> format(DecodeFormat format) {, +        this.decodeFormat = format;, +, +        return this;, +    }, +, +    /**, +                                                imageLoader, imageDecoder, decodeFormat) : null,, +                                                videoLoader, videoDecoder, decodeFormat) : null,, +                .setDecodeFormat(decodeFormat), +++ b/library/src/com/bumptech/glide/RequestBuilder.java, +import com.bumptech.glide.resize.load.DecodeFormat;, +    public RequestBuilder<ModelType> format(DecodeFormat format) {, +        super.format(format);, +        return this;, +    }, +, +++ b/library/src/com/bumptech/glide/loader/bitmap/ResourceBitmapLoadFactory.java, +import com.bumptech.glide.resize.load.DecodeFormat;]