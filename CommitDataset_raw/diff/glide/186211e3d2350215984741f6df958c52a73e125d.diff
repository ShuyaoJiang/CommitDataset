[+++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public DrawableTypeRequest<URL> load(URL url) {, +     * @see #load(byte[]), +     *           (url, filepath etc). If there is no suitable id, use {@link #load(byte[])} instaed., +    public DrawableTypeRequest<byte[]> load(byte[] model, final String id) {, +    public DrawableTypeRequest<byte[]> load(byte[] model) {, +        return load(model, UUID.randomUUID().toString());, +        public DrawableTypeRequest<T> load(T model) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public DrawableTypeRequest<URL> load(URL url) {, +     * @see #load(byte[]), +     *           (url, filepath etc). If there is no suitable id, use {@link #load(byte[])} instaed., +    public DrawableTypeRequest<byte[]> load(byte[] model, final String id) {, +    public DrawableTypeRequest<byte[]> load(byte[] model) {, +        return load(model, UUID.randomUUID().toString());, +        public DrawableTypeRequest<T> load(T model) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +        Glide.with(getContext()).load(url).into(target);, +        Glide.with(getContext()).load(url).into(imageView);, +        Glide.with(getContext()).load(bytes).into(target);, +        Glide.with(getContext()).load(bytes).into(imageView);, +        Glide.with(getContext()).load(bytes, id).into(target);, +        Glide.with(getContext()).load(bytes, id).into(imageView);, +        Glide.with(getContext()).load((Double) null).into(target);, +        Glide.with(getContext()).load((Float) null).into(target);, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public DrawableTypeRequest<URL> load(URL url) {, +     * @see #load(byte[]), +     *           (url, filepath etc). If there is no suitable id, use {@link #load(byte[])} instaed., +    public DrawableTypeRequest<byte[]> load(byte[] model, final String id) {, +    public DrawableTypeRequest<byte[]> load(byte[] model) {, +        return load(model, UUID.randomUUID().toString());, +        public DrawableTypeRequest<T> load(T model) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +        Glide.with(getContext()).load(url).into(target);, +        Glide.with(getContext()).load(url).into(imageView);, +        Glide.with(getContext()).load(bytes).into(target);, +        Glide.with(getContext()).load(bytes).into(imageView);, +        Glide.with(getContext()).load(bytes, id).into(target);, +        Glide.with(getContext()).load(bytes, id).into(imageView);, +        Glide.with(getContext()).load((Double) null).into(target);, +        Glide.with(getContext()).load((Float) null).into(target);, +++ b/library/src/test/java/com/bumptech/glide/RequestManagerTest.java, +                .load(model);, +        DrawableTypeRequest<byte[]> builder = manager.load(model, "fakeId");, +        DrawableTypeRequest<byte[]> builder = manager.load(model);, +        DrawableTypeRequest<Float> builder = manager.load(model);, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public DrawableTypeRequest<URL> load(URL url) {, +     * @see #load(byte[]), +     *           (url, filepath etc). If there is no suitable id, use {@link #load(byte[])} instaed., +    public DrawableTypeRequest<byte[]> load(byte[] model, final String id) {, +    public DrawableTypeRequest<byte[]> load(byte[] model) {, +        return load(model, UUID.randomUUID().toString());, +        public DrawableTypeRequest<T> load(T model) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +        Glide.with(getContext()).load(url).into(target);, +        Glide.with(getContext()).load(url).into(imageView);, +        Glide.with(getContext()).load(bytes).into(target);, +        Glide.with(getContext()).load(bytes).into(imageView);, +        Glide.with(getContext()).load(bytes, id).into(target);, +        Glide.with(getContext()).load(bytes, id).into(imageView);, +        Glide.with(getContext()).load((Double) null).into(target);, +        Glide.with(getContext()).load((Float) null).into(target);, +++ b/library/src/test/java/com/bumptech/glide/RequestManagerTest.java, +                .load(model);, +        DrawableTypeRequest<byte[]> builder = manager.load(model, "fakeId");, +        DrawableTypeRequest<byte[]> builder = manager.load(model);, +        DrawableTypeRequest<Float> builder = manager.load(model);, +++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java, +                    .load(item), +                    .load(current), +                            .load(current), +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public DrawableTypeRequest<URL> load(URL url) {, +     * @see #load(byte[]), +     *           (url, filepath etc). If there is no suitable id, use {@link #load(byte[])} instaed., +    public DrawableTypeRequest<byte[]> load(byte[] model, final String id) {, +    public DrawableTypeRequest<byte[]> load(byte[] model) {, +        return load(model, UUID.randomUUID().toString());, +        public DrawableTypeRequest<T> load(T model) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +        Glide.with(getContext()).load(url).into(target);, +        Glide.with(getContext()).load(url).into(imageView);, +        Glide.with(getContext()).load(bytes).into(target);, +        Glide.with(getContext()).load(bytes).into(imageView);, +        Glide.with(getContext()).load(bytes, id).into(target);, +        Glide.with(getContext()).load(bytes, id).into(imageView);, +        Glide.with(getContext()).load((Double) null).into(target);, +        Glide.with(getContext()).load((Float) null).into(target);, +++ b/library/src/test/java/com/bumptech/glide/RequestManagerTest.java, +                .load(model);, +        DrawableTypeRequest<byte[]> builder = manager.load(model, "fakeId");, +        DrawableTypeRequest<byte[]> builder = manager.load(model);, +        DrawableTypeRequest<Float> builder = manager.load(model);, +++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java, +                    .load(item), +                    .load(current), +                            .load(current), +++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoList.java]