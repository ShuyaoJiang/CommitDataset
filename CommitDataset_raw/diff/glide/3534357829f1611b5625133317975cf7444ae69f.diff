[+++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +  private static final BaseRequestOptions<?> DOWNLOAD_ONLY_OPTIONS =, +  /**, +   * Applies the given options to the request, options set or unset in the given options will, +   * replace those previously set in options in this class., +   *, +   * @see BaseRequestOptions#apply(BaseRequestOptions), +   * @return This request builder., +   */, +  public RequestBuilder<TranscodeType> apply(@NonNull BaseRequestOptions<?> requestOptions) {, +  /**, +   * Sets the {@link TransitionOptions} to use to transition from the placeholder or thumbnail when, +   * this load completes., +   *, +   * <p>The given {@link TransitionOptions} will replace any {@link TransitionOptions} set, +   * previously., +   *, +   * @return This request builder., +   */, +      @NonNull TransitionOptions<?, ? super TranscodeType> transitionOptions) {, +  public <Y extends Target<TranscodeType>> Y into(@NonNull Y target) {, +    Preconditions.checkNotNull(target);, +    Preconditions.checkNotNull(view);, +    return getDownloadOnlyRequest().submit(width, height);, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +  private static final BaseRequestOptions<?> DOWNLOAD_ONLY_OPTIONS =, +  /**, +   * Applies the given options to the request, options set or unset in the given options will, +   * replace those previously set in options in this class., +   *, +   * @see BaseRequestOptions#apply(BaseRequestOptions), +   * @return This request builder., +   */, +  public RequestBuilder<TranscodeType> apply(@NonNull BaseRequestOptions<?> requestOptions) {, +  /**, +   * Sets the {@link TransitionOptions} to use to transition from the placeholder or thumbnail when, +   * this load completes., +   *, +   * <p>The given {@link TransitionOptions} will replace any {@link TransitionOptions} set, +   * previously., +   *, +   * @return This request builder., +   */, +      @NonNull TransitionOptions<?, ? super TranscodeType> transitionOptions) {, +  public <Y extends Target<TranscodeType>> Y into(@NonNull Y target) {, +    Preconditions.checkNotNull(target);, +    Preconditions.checkNotNull(view);, +    return getDownloadOnlyRequest().submit(width, height);, +++ b/library/src/test/java/com/bumptech/glide/RequestBuilderTest.java, +  @Test(expected = NullPointerException.class), +  @Test(expected = NullPointerException.class)]