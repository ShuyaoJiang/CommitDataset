[+++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +final class DefaultConnectivityMonitor implements ConnectivityMonitor {, +        if (Log.isLoggable(TAG, Log.DEBUG)) {, +          Log.d(TAG, "connectivity changed, isConnected: " + isConnected);, +        }, +, +  DefaultConnectivityMonitor(Context context, ConnectivityListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +final class DefaultConnectivityMonitor implements ConnectivityMonitor {, +        if (Log.isLoggable(TAG, Log.DEBUG)) {, +          Log.d(TAG, "connectivity changed, isConnected: " + isConnected);, +        }, +, +  DefaultConnectivityMonitor(Context context, ConnectivityListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactory.java, +import android.util.Log;, +  private static final String TAG = "ConnectivityMonitor";, +    if (Log.isLoggable(TAG, Log.DEBUG)) {, +      Log.d(, +          TAG,, +          hasPermission, +              ? "ACCESS_NETWORK_STATE permission granted, registering connectivity monitor", +              : "ACCESS_NETWORK_STATE permission missing, cannot register connectivity monitor");, +    }, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +final class DefaultConnectivityMonitor implements ConnectivityMonitor {, +        if (Log.isLoggable(TAG, Log.DEBUG)) {, +          Log.d(TAG, "connectivity changed, isConnected: " + isConnected);, +        }, +, +  DefaultConnectivityMonitor(Context context, ConnectivityListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactory.java, +import android.util.Log;, +  private static final String TAG = "ConnectivityMonitor";, +    if (Log.isLoggable(TAG, Log.DEBUG)) {, +      Log.d(, +          TAG,, +          hasPermission, +              ? "ACCESS_NETWORK_STATE permission granted, registering connectivity monitor", +              : "ACCESS_NETWORK_STATE permission missing, cannot register connectivity monitor");, +    }, +++ b/samples/flickr/src/main/AndroidManifest.xml, +    <!--, +    Allows Glide to monitor connectivity status and restart failed requests if users go from a, +    a disconnected to a connected network state., +    -->, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +final class DefaultConnectivityMonitor implements ConnectivityMonitor {, +        if (Log.isLoggable(TAG, Log.DEBUG)) {, +          Log.d(TAG, "connectivity changed, isConnected: " + isConnected);, +        }, +, +  DefaultConnectivityMonitor(Context context, ConnectivityListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactory.java, +import android.util.Log;, +  private static final String TAG = "ConnectivityMonitor";, +    if (Log.isLoggable(TAG, Log.DEBUG)) {, +      Log.d(, +          TAG,, +          hasPermission, +              ? "ACCESS_NETWORK_STATE permission granted, registering connectivity monitor", +              : "ACCESS_NETWORK_STATE permission missing, cannot register connectivity monitor");, +    }, +++ b/samples/flickr/src/main/AndroidManifest.xml, +    <!--, +    Allows Glide to monitor connectivity status and restart failed requests if users go from a, +    a disconnected to a connected network state., +    -->, +++ b/samples/giphy/src/main/AndroidManifest.xml, +    <!--, +    Allows Glide to monitor connectivity status and restart failed requests if users go from a, +    a disconnected to a connected network state., +    -->, +    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +final class DefaultConnectivityMonitor implements ConnectivityMonitor {, +        if (Log.isLoggable(TAG, Log.DEBUG)) {, +          Log.d(TAG, "connectivity changed, isConnected: " + isConnected);, +        }, +, +  DefaultConnectivityMonitor(Context context, ConnectivityListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitorFactory.java, +import android.util.Log;, +  private static final String TAG = "ConnectivityMonitor";, +    if (Log.isLoggable(TAG, Log.DEBUG)) {, +      Log.d(, +          TAG,, +          hasPermission, +              ? "ACCESS_NETWORK_STATE permission granted, registering connectivity monitor", +              : "ACCESS_NETWORK_STATE permission missing, cannot register connectivity monitor");, +    }, +++ b/samples/flickr/src/main/AndroidManifest.xml, +    <!--, +    Allows Glide to monitor connectivity status and restart failed requests if users go from a, +    a disconnected to a connected network state., +    -->, +++ b/samples/giphy/src/main/AndroidManifest.xml, +    <!--, +    Allows Glide to monitor connectivity status and restart failed requests if users go from a, +    a disconnected to a connected network state.]