[+++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +    private ExecutorService sourceService;, +        this.sourceService = service;, +        if (sourceService == null) {, +            sourceService = new FifoPriorityThreadPoolExecutor(cores);, +            engine = new Engine(memoryCache, diskCache, diskCacheService, sourceService);, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +    private ExecutorService sourceService;, +        this.sourceService = service;, +        if (sourceService == null) {, +            sourceService = new FifoPriorityThreadPoolExecutor(cores);, +            engine = new Engine(memoryCache, diskCache, diskCacheService, sourceService);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +    public Engine(MemoryCache memoryCache, DiskCache diskCache, ExecutorService diskCacheService,, +            ExecutorService sourceService) {, +        this(memoryCache, diskCache, diskCacheService, sourceService, null, null, null, null);, +    Engine(MemoryCache cache, DiskCache diskCache, ExecutorService diskCacheService, ExecutorService sourceService,, +            Map<Key, EngineJob> jobs, EngineKeyFactory keyFactory,, +            engineJobFactory = new EngineJobFactory(diskCacheService, sourceService, this);, +        private final ExecutorService sourceService;, +        public EngineJobFactory(ExecutorService diskCacheService, ExecutorService sourceService,, +            this.sourceService = sourceService;, +            return new EngineJob(key, diskCacheService, sourceService, isMemoryCacheable, listener);, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +    private ExecutorService sourceService;, +        this.sourceService = service;, +        if (sourceService == null) {, +            sourceService = new FifoPriorityThreadPoolExecutor(cores);, +            engine = new Engine(memoryCache, diskCache, diskCacheService, sourceService);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +    public Engine(MemoryCache memoryCache, DiskCache diskCache, ExecutorService diskCacheService,, +            ExecutorService sourceService) {, +        this(memoryCache, diskCache, diskCacheService, sourceService, null, null, null, null);, +    Engine(MemoryCache cache, DiskCache diskCache, ExecutorService diskCacheService, ExecutorService sourceService,, +            Map<Key, EngineJob> jobs, EngineKeyFactory keyFactory,, +            engineJobFactory = new EngineJobFactory(diskCacheService, sourceService, this);, +        private final ExecutorService sourceService;, +        public EngineJobFactory(ExecutorService diskCacheService, ExecutorService sourceService,, +            this.sourceService = sourceService;, +            return new EngineJob(key, diskCacheService, sourceService, isMemoryCacheable, listener);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java]