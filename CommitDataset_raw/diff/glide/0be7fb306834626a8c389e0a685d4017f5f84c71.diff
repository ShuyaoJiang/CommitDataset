[+++ b/library/src/main/java/com/bumptech/glide/OriginalEngineKey.java, +package com.bumptech.glide;, +, +import com.bumptech.glide.load.Key;, +, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +, +public class OriginalEngineKey implements Key {, +    private String id;, +, +    public OriginalEngineKey(String id) {, +        this.id = id;, +    }, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (!(o instanceof OriginalEngineKey)) {, +            return false;, +        }, +, +        OriginalEngineKey that = (OriginalEngineKey) o;, +, +        if (!id.equals(that.id)) {, +            return false;, +        }, +, +        return true;, +    }, +, +    @Override, +    public int hashCode() {, +        return id.hashCode();, +    }, +, +    @Override, +    public void updateDiskCacheKey(MessageDigest messageDigest) throws UnsupportedEncodingException {, +        messageDigest.update(id.getBytes("UTF-8"));, +    }, +}, +++ b/library/src/main/java/com/bumptech/glide/OriginalEngineKey.java, +package com.bumptech.glide;, +, +import com.bumptech.glide.load.Key;, +, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +, +public class OriginalEngineKey implements Key {, +    private String id;, +, +    public OriginalEngineKey(String id) {, +        this.id = id;, +    }, +, +    @Override, +    public boolean equals(Object o) {, +        if (this == o) {, +            return true;, +        }, +        if (!(o instanceof OriginalEngineKey)) {, +            return false;, +        }, +, +        OriginalEngineKey that = (OriginalEngineKey) o;, +, +        if (!id.equals(that.id)) {, +            return false;, +        }, +, +        return true;, +    }, +, +    @Override, +    public int hashCode() {, +        return id.hashCode();, +    }, +, +    @Override, +    public void updateDiskCacheKey(MessageDigest messageDigest) throws UnsupportedEncodingException {, +        messageDigest.update(id.getBytes("UTF-8"));, +    }, +}, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DefaultResourceRunnerFactory.java, +    public <T, Z, R> ResourceRunner<Z, R> build(EngineKey key, int width, int height,, +        SourceResourceRunner<T, Z, R> sourceRunner = new SourceResourceRunner<T, Z, R>(key, width, height, cacheLoader,, +                cacheDecoder, fetcher, decoder, transformation, encoder, transcoder, diskCache, priority, engineJob);, +++ b/library/src/main/java/com/bumptech/glide/OriginalEngineKey.java, +package com.bumptech.glide;, +, +import com.bumptech.glide.load.Key;, +, +import java.io.UnsupportedEncodingException;, +import java.security.MessageDigest;, +, +public class OriginalEngineKey implements Key {, +    private String id;]