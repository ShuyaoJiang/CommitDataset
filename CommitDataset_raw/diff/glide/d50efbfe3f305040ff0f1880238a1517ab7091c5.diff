[+++ b/library/src/com/bumptech/glide/loader/model/VolleyModelLoader.java, +import com.android.volley.DefaultRetryPolicy;, +import com.android.volley.RetryPolicy;, +        return new VolleyStreamLoader(requestQueue, getUrl(model, width, height), getRetryPolicy());, +, +    protected RetryPolicy getRetryPolicy() {, +        return new DefaultRetryPolicy();, +    }, +++ b/library/src/com/bumptech/glide/loader/model/VolleyModelLoader.java, +import com.android.volley.DefaultRetryPolicy;, +import com.android.volley.RetryPolicy;, +        return new VolleyStreamLoader(requestQueue, getUrl(model, width, height), getRetryPolicy());, +, +    protected RetryPolicy getRetryPolicy() {, +        return new DefaultRetryPolicy();, +    }, +++ b/library/src/com/bumptech/glide/loader/stream/VolleyStreamLoader.java, +import com.android.volley.DefaultRetryPolicy;, +import com.android.volley.RetryPolicy;, +    private final RetryPolicy retryPolicy;, +        this(requestQueue, url, new DefaultRetryPolicy());, +    }, +, +    public VolleyStreamLoader(RequestQueue requestQueue, String url, RetryPolicy retryPolicy) {, +        this.retryPolicy = retryPolicy;, +        Request<Void> request = new GlideRequest(url, cb);, +        request.setRetryPolicy(retryPolicy);, +        current = requestQueue.add(request);, +, +    private static class GlideRequest extends Request<Void> {, +        private final StreamReadyCallback cb;, +, +        public GlideRequest(String url, final StreamReadyCallback cb) {, +            super(Method.GET, url, new Response.ErrorListener() {, +                @Override, +                public void onErrorResponse(VolleyError error) {, +                    cb.onException(error);, +                }, +            });, +            this.cb = cb;, +        }, +, +        @Override, +        protected Response<Void> parseNetworkResponse(NetworkResponse response) {, +            cb.onStreamReady(new ByteArrayInputStream(response.data));, +            return Response.success(null, getCacheEntry());, +        }, +, +        @Override, +        protected void deliverResponse(Void response) { }, +    }]