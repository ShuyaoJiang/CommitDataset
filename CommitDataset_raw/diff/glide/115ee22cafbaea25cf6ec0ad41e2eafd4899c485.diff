[+++ b/library/src/main/java/com/bumptech/glide/request/RequestOptions.java, +import android.support.annotation.DrawableRes;, +import android.support.annotation.FloatRange;, +import android.support.annotation.IntRange;, +  public static RequestOptions sizeMultiplierOf(, +      @FloatRange(from = 0, to = 1) float sizeMultiplier) {, +  public static RequestOptions placeholderOf(@DrawableRes int placeholderId) {, +  public static RequestOptions errorOf(@DrawableRes int errorId) {, +  public static RequestOptions overrideOf(, +      @IntRange(from = 0) int width,, +      @IntRange(from = 0) int height) {, +  public static RequestOptions overrideOf(@IntRange(from = 0) int size) {, +  public static RequestOptions frameOf(@IntRange(from = 0) long frameTimeMicros) {, +  public static RequestOptions timeoutOf(@IntRange(from = 0) int timeout) {, +  public static RequestOptions encodeQualityOf(@IntRange(from = 0, to = 100) int quality) {, +  public RequestOptions sizeMultiplier(@FloatRange(from = 0, to = 1) float sizeMultiplier) {, +  public RequestOptions placeholder(@DrawableRes int resourceId) {, +  public RequestOptions fallback(@Nullable Drawable drawable) {, +  public RequestOptions fallback(@DrawableRes int resourceId) {, +  public RequestOptions error(@DrawableRes int resourceId) {, +  public RequestOptions theme(@Nullable Resources.Theme theme) {, +  public RequestOptions override(, +      @IntRange(from = 0) int width,, +      @IntRange(from = 0) int height) {, +  public RequestOptions override(@IntRange(from = 0) int size) {, +  public RequestOptions encodeQuality(@IntRange(from = 0, to = 100) int quality) {, +  public RequestOptions frame(@IntRange(from = 0) long frameTimeMicros) {, +  public RequestOptions timeout(@IntRange(from = 0) int timeoutMs) {, +  public RequestOptions optionalTransform(@NonNull Transformation<Bitmap> transformation) {, +  public <T> RequestOptions optionalTransform(, +      @NonNull Class<T> resourceClass, @NonNull Transformation<T> transformation) {, +      @NonNull Class<T> resourceClass, @NonNull Transformation<T> transformation) {, +  public RequestOptions apply(@NonNull RequestOptions other) {]