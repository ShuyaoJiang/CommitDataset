[+++ b/.gitmodules, +[submodule "library/tests/assets/exif-orientation-examples"], +	path = library/tests/assets/exif-orientation-examples, +	url = https://github.com/recurser/exif-orientation-examples.git, +++ b/.gitmodules, +[submodule "library/tests/assets/exif-orientation-examples"], +	path = library/tests/assets/exif-orientation-examples, +	url = https://github.com/recurser/exif-orientation-examples.git, +++ b/library/tests/assets/exif-orientation-examples, +Subproject commit e87146ce6f4171130c6e0d325ae3fbf2a108f136, +++ b/.gitmodules, +[submodule "library/tests/assets/exif-orientation-examples"], +	path = library/tests/assets/exif-orientation-examples, +	url = https://github.com/recurser/exif-orientation-examples.git, +++ b/library/tests/assets/exif-orientation-examples, +Subproject commit e87146ce6f4171130c6e0d325ae3fbf2a108f136, +++ b/library/tests/src/com/bumptech/glide/ExifTest.java, +package com.bumptech.glide;, +, +import android.content.res.AssetManager;, +import android.test.InstrumentationTestCase;, +import com.bumptech.glide.resize.load.ExifOrientationParser;, +, +import java.io.IOException;, +import java.io.InputStream;, +, +/**, + * Created with IntelliJ IDEA., + * User: sam, + * Date: 8/14/13, + * Time: 9:18 AM, + * To change this template use File | Settings | File Templates., + */, +public class ExifTest extends InstrumentationTestCase {, +    private AssetManager assets;, +, +    @Override, +    protected void setUp() throws Exception {, +        super.setUp();, +, +        assets = getInstrumentation().getContext().getResources().getAssets();, +    }, +, +    private InputStream open(String imageName) throws IOException {, +        return assets.open("exif-orientation-examples/" + imageName);, +    }, +, +    private void assertOrientation(String filePrefix, int expectedOrientation) {, +        InputStream is = null;, +        try {, +            is = open(filePrefix + "_" + expectedOrientation + ".jpg");, +            assertEquals(new ExifOrientationParser(is).getOrientation(), expectedOrientation);, +        } catch (IOException e) {, +            e.printStackTrace();, +            assertNull(e);, +        } finally {, +            if (is != null) {, +                try {, +                    is.close();, +                } catch (IOException e) { }, +            }, +        }, +    }, +, +    public void testLandscape() throws IOException {, +        for (int i = 1; i <= 8; i++) {, +            assertOrientation("Landscape", i);, +        }, +    }, +, +    public void testPortrait() throws IOException {, +        for (int i = 1; i <= 8; i++) {, +            assertOrientation("Portrait", i);, +        }, +    }, +}]