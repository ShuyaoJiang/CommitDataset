[+++ b/library/src/com/bumptech/glide/Glide.java, +     * Set the {@link ModelLoader} and therefore the model type to use for a new load., +     *     download an image using the width and the height of the target, consider passing in a subclass of, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return True iff Glide had ever been asked to load an image for this target, +     * for building or retrieving an ImagePresenter for the given target and passing the ImagePresenter the given model., +     * @param <T> The type of model that will be loaded into the target, +         * Sets an animation to run on the wrapped target when an image load finishes. Will only be run if the image, +         * Creates the new {@link ImagePresenter} if one does not currently exist for the current target and sets it as, +         * the target's ImagePresenter via {@link Target#setImagePresenter(com.bumptech.glide.presenter.ImagePresenter)}, +++ b/library/src/com/bumptech/glide/Glide.java, +     * Set the {@link ModelLoader} and therefore the model type to use for a new load., +     *     download an image using the width and the height of the target, consider passing in a subclass of, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return A {@link Request} to set options for the load and ultimately the target to load the model into, +     * @return True iff Glide had ever been asked to load an image for this target, +     * for building or retrieving an ImagePresenter for the given target and passing the ImagePresenter the given model., +     * @param <T> The type of model that will be loaded into the target, +         * Sets an animation to run on the wrapped target when an image load finishes. Will only be run if the image, +         * Creates the new {@link ImagePresenter} if one does not currently exist for the current target and sets it as, +         * the target's ImagePresenter via {@link Target#setImagePresenter(com.bumptech.glide.presenter.ImagePresenter)}, +++ b/library/src/com/bumptech/glide/presenter/target/SimpleTarget.java, +     * A default implementation that calls {@link com.bumptech.glide.presenter.target.Target.SizeReadyCallback}, +     * synchronously with {@link #getSize()}]