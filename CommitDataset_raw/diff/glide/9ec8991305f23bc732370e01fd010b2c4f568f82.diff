[+++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +      if (sourceWidth >= 0 && sourceHeight >= 0, +          && fixBitmapToRequestedDimensions && isKitKatOrGreater) {, +      if (Log.isLoggable(TAG, Log.DEBUG)) {, +        Log.d(TAG, "Unable to determine dimensions for: " + imageType, +            + " with target [" + targetWidth + "x" + targetHeight + "]");, +      }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +      if (sourceWidth >= 0 && sourceHeight >= 0, +          && fixBitmapToRequestedDimensions && isKitKatOrGreater) {, +      if (Log.isLoggable(TAG, Log.DEBUG)) {, +        Log.d(TAG, "Unable to determine dimensions for: " + imageType, +            + " with target [" + targetWidth + "x" + targetHeight + "]");, +      }, +++ b/library/src/main/java/com/bumptech/glide/util/MarkEnforcingInputStream.java, +      return 0;, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +      if (sourceWidth >= 0 && sourceHeight >= 0, +          && fixBitmapToRequestedDimensions && isKitKatOrGreater) {, +      if (Log.isLoggable(TAG, Log.DEBUG)) {, +        Log.d(TAG, "Unable to determine dimensions for: " + imageType, +            + " with target [" + targetWidth + "x" + targetHeight + "]");, +      }, +++ b/library/src/main/java/com/bumptech/glide/util/MarkEnforcingInputStream.java, +      return 0;, +++ b/library/src/test/java/com/bumptech/glide/util/MarkEnforcingInputStreamTest.java, +    assertEquals(0, is.skip(1));]