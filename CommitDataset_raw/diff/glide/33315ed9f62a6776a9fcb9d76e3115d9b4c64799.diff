[+++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  private final Glide glide;, +  public RequestManager(Glide glide, Lifecycle lifecycle, RequestManagerTreeNode treeNode) {, +    this(glide, lifecycle, treeNode, new RequestTracker(), glide.getConnectivityMonitorFactory());, +  RequestManager(, +      Glide glide,, +      Lifecycle lifecycle,, +      RequestManagerTreeNode treeNode,, +      RequestTracker requestTracker,, +      ConnectivityMonitorFactory factory) {, +    this.glide = glide;, +    final Context context = glide.getGlideContext().getBaseContext();, +, +, +    defaultRequestOptions = glide.getGlideContext().getDefaultRequestOptions();, +    glide.registerRequestManager(this);, +    glide.getGlideContext().onTrimMemory(level);, +    glide.getGlideContext().onLowMemory();, +    glide.unregisterRequestManager(this);, +    return new RequestBuilder<>(glide.getGlideContext(), this, resourceClass);, +      Glide.get(glide.getGlideContext()).removeFromManagers(target);, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  private final Glide glide;, +  public RequestManager(Glide glide, Lifecycle lifecycle, RequestManagerTreeNode treeNode) {, +    this(glide, lifecycle, treeNode, new RequestTracker(), glide.getConnectivityMonitorFactory());, +  RequestManager(, +      Glide glide,, +      Lifecycle lifecycle,, +      RequestManagerTreeNode treeNode,, +      RequestTracker requestTracker,, +      ConnectivityMonitorFactory factory) {, +    this.glide = glide;, +    final Context context = glide.getGlideContext().getBaseContext();, +, +, +    defaultRequestOptions = glide.getGlideContext().getDefaultRequestOptions();, +    glide.registerRequestManager(this);, +    glide.getGlideContext().onTrimMemory(level);, +    glide.getGlideContext().onLowMemory();, +    glide.unregisterRequestManager(this);, +    return new RequestBuilder<>(glide.getGlideContext(), this, resourceClass);, +      Glide.get(glide.getGlideContext()).removeFromManagers(target);, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +import com.bumptech.glide.Glide;, +, +          // TODO(b/27524013): Factor out this Glide.get() call., +          Glide glide = Glide.get(context);, +              new RequestManager(, +                  glide, new ApplicationLifecycle(), new EmptyRequestManagerTreeNode());, +      // TODO(b/27524013): Factor out this Glide.get() call., +      Glide glide = Glide.get(context);, +          new RequestManager(glide, current.getLifecycle(), current.getRequestManagerTreeNode());, +      // TODO(b/27524013): Factor out this Glide.get() call., +      Glide glide = Glide.get(context);, +          new RequestManager(glide, current.getLifecycle(), current.getRequestManagerTreeNode());, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  private final Glide glide;, +  public RequestManager(Glide glide, Lifecycle lifecycle, RequestManagerTreeNode treeNode) {, +    this(glide, lifecycle, treeNode, new RequestTracker(), glide.getConnectivityMonitorFactory());, +  RequestManager(, +      Glide glide,, +      Lifecycle lifecycle,, +      RequestManagerTreeNode treeNode,, +      RequestTracker requestTracker,, +      ConnectivityMonitorFactory factory) {, +    this.glide = glide;, +    final Context context = glide.getGlideContext().getBaseContext();, +, +, +    defaultRequestOptions = glide.getGlideContext().getDefaultRequestOptions();, +    glide.registerRequestManager(this);, +    glide.getGlideContext().onTrimMemory(level);, +    glide.getGlideContext().onLowMemory();, +    glide.unregisterRequestManager(this);, +    return new RequestBuilder<>(glide.getGlideContext(), this, resourceClass);, +      Glide.get(glide.getGlideContext()).removeFromManagers(target);, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +import com.bumptech.glide.Glide;, +, +          // TODO(b/27524013): Factor out this Glide.get() call., +          Glide glide = Glide.get(context);, +              new RequestManager(, +                  glide, new ApplicationLifecycle(), new EmptyRequestManagerTreeNode());, +      // TODO(b/27524013): Factor out this Glide.get() call., +      Glide glide = Glide.get(context);, +          new RequestManager(glide, current.getLifecycle(), current.getRequestManagerTreeNode());, +      // TODO(b/27524013): Factor out this Glide.get() call., +      Glide glide = Glide.get(context);, +          new RequestManager(glide, current.getLifecycle(), current.getRequestManagerTreeNode());, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +    requestManager = new RequestManager(Glide.get(getContext()), lifecycle, treeNode);, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  private final Glide glide;, +  public RequestManager(Glide glide, Lifecycle lifecycle, RequestManagerTreeNode treeNode) {, +    this(glide, lifecycle, treeNode, new RequestTracker(), glide.getConnectivityMonitorFactory());]