[+++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import com.bumptech.glide.manager.ConnectivityMonitorFactory;, +  private final ConnectivityMonitorFactory connectivityMonitorFactory;, +      Context context,, +      ConnectivityMonitorFactory connectivityMonitorFactory,, +    this.connectivityMonitorFactory = connectivityMonitorFactory;, +  ConnectivityMonitorFactory getConnectivityMonitorFactory() {, +    return connectivityMonitorFactory;, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import com.bumptech.glide.manager.ConnectivityMonitorFactory;, +  private final ConnectivityMonitorFactory connectivityMonitorFactory;, +      Context context,, +      ConnectivityMonitorFactory connectivityMonitorFactory,, +    this.connectivityMonitorFactory = connectivityMonitorFactory;, +  ConnectivityMonitorFactory getConnectivityMonitorFactory() {, +    return connectivityMonitorFactory;, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.manager.ConnectivityMonitorFactory;, +import com.bumptech.glide.manager.DefaultConnectivityMonitorFactory;, +  private ConnectivityMonitorFactory connectivityMonitorFactory;, +   * Sets the {@link com.bumptech.glide.manager.ConnectivityMonitorFactory}, +   * to use to notify {@link com.bumptech.glide.RequestManager} of connectivity events., +   * If not set {@link com.bumptech.glide.manager.DefaultConnectivityMonitorFactory} would be used., +   *, +   * @param factory The factory to use, +   * @return This builder., +   */, +  public GlideBuilder setConnectivityMonitorFactory(ConnectivityMonitorFactory factory) {, +    this.connectivityMonitorFactory = factory;, +    return this;, +  }, +, +  /**, +    if (connectivityMonitorFactory == null) {, +      connectivityMonitorFactory = new DefaultConnectivityMonitorFactory();, +    }, +, +        context,, +        connectivityMonitorFactory,, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import com.bumptech.glide.manager.ConnectivityMonitorFactory;, +  private final ConnectivityMonitorFactory connectivityMonitorFactory;, +      Context context,, +      ConnectivityMonitorFactory connectivityMonitorFactory,, +    this.connectivityMonitorFactory = connectivityMonitorFactory;, +  ConnectivityMonitorFactory getConnectivityMonitorFactory() {, +    return connectivityMonitorFactory;, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.manager.ConnectivityMonitorFactory;, +import com.bumptech.glide.manager.DefaultConnectivityMonitorFactory;, +  private ConnectivityMonitorFactory connectivityMonitorFactory;, +   * Sets the {@link com.bumptech.glide.manager.ConnectivityMonitorFactory}, +   * to use to notify {@link com.bumptech.glide.RequestManager} of connectivity events., +   * If not set {@link com.bumptech.glide.manager.DefaultConnectivityMonitorFactory} would be used., +   *, +   * @param factory The factory to use, +   * @return This builder., +   */, +  public GlideBuilder setConnectivityMonitorFactory(ConnectivityMonitorFactory factory) {, +    this.connectivityMonitorFactory = factory;, +    return this;, +  }, +, +  /**, +    if (connectivityMonitorFactory == null) {, +      connectivityMonitorFactory = new DefaultConnectivityMonitorFactory();, +    }, +, +        context,, +        connectivityMonitorFactory,, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    this(context, lifecycle, treeNode,, +        new RequestTracker(), Glide.get(context).getConnectivityMonitorFactory());, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +import com.bumptech.glide.manager.ConnectivityMonitorFactory;, +  private final ConnectivityMonitorFactory connectivityMonitorFactory;, +      Context context,, +      ConnectivityMonitorFactory connectivityMonitorFactory,, +    this.connectivityMonitorFactory = connectivityMonitorFactory;, +  ConnectivityMonitorFactory getConnectivityMonitorFactory() {, +    return connectivityMonitorFactory;, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.manager.ConnectivityMonitorFactory;, +import com.bumptech.glide.manager.DefaultConnectivityMonitorFactory;, +  private ConnectivityMonitorFactory connectivityMonitorFactory;, +   * Sets the {@link com.bumptech.glide.manager.ConnectivityMonitorFactory}, +   * to use to notify {@link com.bumptech.glide.RequestManager} of connectivity events., +   * If not set {@link com.bumptech.glide.manager.DefaultConnectivityMonitorFactory} would be used., +   *, +   * @param factory The factory to use, +   * @return This builder., +   */]