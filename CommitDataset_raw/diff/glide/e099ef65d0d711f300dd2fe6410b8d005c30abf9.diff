[+++ b/library/src/androidTest/java/com/bumptech/glide/GenericRequestBuilderTest.java, +    public void testDoesNotThrowWhenWidthIsSizeOriginal() {, +        getNullModelRequest().override(Target.SIZE_ORIGINAL, 100);, +    }, +, +    @Test, +    public void testDoesNotThrowWhenHeightIsSizeOriginal() {, +        getNullModelRequest().override(100, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +++ b/library/src/androidTest/java/com/bumptech/glide/GenericRequestBuilderTest.java, +    public void testDoesNotThrowWhenWidthIsSizeOriginal() {, +        getNullModelRequest().override(Target.SIZE_ORIGINAL, 100);, +    }, +, +    @Test, +    public void testDoesNotThrowWhenHeightIsSizeOriginal() {, +        getNullModelRequest().override(100, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +++ b/library/src/androidTest/java/com/bumptech/glide/request/target/SimpleTargetTest.java, +    @Test, +    public void testConstructorDoesNotThrowWithSizeOriginal() {, +        getTarget(Target.SIZE_ORIGINAL, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +    public void testGetSizeDoesNotThrowWithSizeOriginal() {, +        getTarget(Target.SIZE_ORIGINAL, Target.SIZE_ORIGINAL).getSize(mock(SizeReadyCallback.class));, +++ b/library/src/androidTest/java/com/bumptech/glide/GenericRequestBuilderTest.java, +    public void testDoesNotThrowWhenWidthIsSizeOriginal() {, +        getNullModelRequest().override(Target.SIZE_ORIGINAL, 100);, +    }, +, +    @Test, +    public void testDoesNotThrowWhenHeightIsSizeOriginal() {, +        getNullModelRequest().override(100, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +++ b/library/src/androidTest/java/com/bumptech/glide/request/target/SimpleTargetTest.java, +    @Test, +    public void testConstructorDoesNotThrowWithSizeOriginal() {, +        getTarget(Target.SIZE_ORIGINAL, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +    public void testGetSizeDoesNotThrowWithSizeOriginal() {, +        getTarget(Target.SIZE_ORIGINAL, Target.SIZE_ORIGINAL).getSize(mock(SizeReadyCallback.class));, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        if (!Util.isValidDimensions(width, height)) {, +            throw new IllegalArgumentException("Width and height must be Target#SIZE_ORIGINAL or > 0");, +            if (Util.isValidDimensions(overrideWidth, overrideHeight), +                    && !Util.isValidDimensions(thumbnailRequestBuilder.overrideWidth,, +                            thumbnailRequestBuilder.overrideHeight)) {, +++ b/library/src/androidTest/java/com/bumptech/glide/GenericRequestBuilderTest.java, +    public void testDoesNotThrowWhenWidthIsSizeOriginal() {, +        getNullModelRequest().override(Target.SIZE_ORIGINAL, 100);, +    }, +, +    @Test, +    public void testDoesNotThrowWhenHeightIsSizeOriginal() {, +        getNullModelRequest().override(100, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +++ b/library/src/androidTest/java/com/bumptech/glide/request/target/SimpleTargetTest.java, +    @Test, +    public void testConstructorDoesNotThrowWithSizeOriginal() {, +        getTarget(Target.SIZE_ORIGINAL, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +    public void testGetSizeDoesNotThrowWithSizeOriginal() {, +        getTarget(Target.SIZE_ORIGINAL, Target.SIZE_ORIGINAL).getSize(mock(SizeReadyCallback.class));, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        if (!Util.isValidDimensions(width, height)) {, +            throw new IllegalArgumentException("Width and height must be Target#SIZE_ORIGINAL or > 0");, +            if (Util.isValidDimensions(overrideWidth, overrideHeight), +                    && !Util.isValidDimensions(thumbnailRequestBuilder.overrideWidth,, +                            thumbnailRequestBuilder.overrideHeight)) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformation.java, +import com.bumptech.glide.util.Util;, +        if (!Util.isValidDimensions(outWidth, outHeight)) {, +++ b/library/src/androidTest/java/com/bumptech/glide/GenericRequestBuilderTest.java, +    public void testDoesNotThrowWhenWidthIsSizeOriginal() {, +        getNullModelRequest().override(Target.SIZE_ORIGINAL, 100);, +    }, +, +    @Test, +    public void testDoesNotThrowWhenHeightIsSizeOriginal() {, +        getNullModelRequest().override(100, Target.SIZE_ORIGINAL);, +    }, +, +    @Test, +++ b/library/src/androidTest/java/com/bumptech/glide/request/target/SimpleTargetTest.java, +    @Test, +    public void testConstructorDoesNotThrowWithSizeOriginal() {]