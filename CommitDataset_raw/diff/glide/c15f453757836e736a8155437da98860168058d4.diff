[+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private boolean onlyRetrieveFromCache;, +      boolean onlyRetrieveFromCache,, +    this.onlyRetrieveFromCache = onlyRetrieveFromCache;, +        // Skip loading from source if the user opted to only retrieve the resource from cache., +        return onlyRetrieveFromCache ? Stage.FINISHED : Stage.SOURCE;, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private boolean onlyRetrieveFromCache;, +      boolean onlyRetrieveFromCache,, +    this.onlyRetrieveFromCache = onlyRetrieveFromCache;, +        // Skip loading from source if the user opted to only retrieve the resource from cache., +        return onlyRetrieveFromCache ? Stage.FINISHED : Stage.SOURCE;, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +      boolean onlyRetrieveFromCache,, +        onlyRetrieveFromCache,, +        boolean onlyRetrieveFromCache,, +          onlyRetrieveFromCache,, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private boolean onlyRetrieveFromCache;, +      boolean onlyRetrieveFromCache,, +    this.onlyRetrieveFromCache = onlyRetrieveFromCache;, +        // Skip loading from source if the user opted to only retrieve the resource from cache., +        return onlyRetrieveFromCache ? Stage.FINISHED : Stage.SOURCE;, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +      boolean onlyRetrieveFromCache,, +        onlyRetrieveFromCache,, +        boolean onlyRetrieveFromCache,, +          onlyRetrieveFromCache,, +++ b/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java, +  private static final int ONLY_RETRIEVE_FROM_CACHE = 1 << 19;, +  private boolean onlyRetrieveFromCache;, +   * If set to true, will only load an item if found in the cache, and will not fetch from source., +   */, +  public final CHILD getOnlyRetrieveFromCache(boolean flag) {, +    if (isAutoCloneEnabled) {, +      return clone().getOnlyRetrieveFromCache(flag);, +    }, +, +    this.onlyRetrieveFromCache = flag;, +    fields |= ONLY_RETRIEVE_FROM_CACHE;, +, +    return selfOrThrowIfLocked();, +  }, +, +  /**, +    if (isSet(other.fields, ONLY_RETRIEVE_FROM_CACHE)) {, +      onlyRetrieveFromCache = other.onlyRetrieveFromCache;, +    }, +, +  public final boolean getOnlyRetrieveFromCache() {, +    return onlyRetrieveFromCache;, +  }, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private boolean onlyRetrieveFromCache;, +      boolean onlyRetrieveFromCache,, +    this.onlyRetrieveFromCache = onlyRetrieveFromCache;, +        // Skip loading from source if the user opted to only retrieve the resource from cache., +        return onlyRetrieveFromCache ? Stage.FINISHED : Stage.SOURCE;, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +      boolean onlyRetrieveFromCache,, +        onlyRetrieveFromCache,, +        boolean onlyRetrieveFromCache,, +          onlyRetrieveFromCache,, +++ b/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java, +  private static final int ONLY_RETRIEVE_FROM_CACHE = 1 << 19;, +  private boolean onlyRetrieveFromCache;, +   * If set to true, will only load an item if found in the cache, and will not fetch from source., +   */, +  public final CHILD getOnlyRetrieveFromCache(boolean flag) {, +    if (isAutoCloneEnabled) {, +      return clone().getOnlyRetrieveFromCache(flag);, +    }, +, +    this.onlyRetrieveFromCache = flag;, +    fields |= ONLY_RETRIEVE_FROM_CACHE;, +, +    return selfOrThrowIfLocked();, +  }, +, +  /**, +    if (isSet(other.fields, ONLY_RETRIEVE_FROM_CACHE)) {, +      onlyRetrieveFromCache = other.onlyRetrieveFromCache;, +    }, +, +  public final boolean getOnlyRetrieveFromCache() {, +    return onlyRetrieveFromCache;, +  }, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +        requestOptions.getOnlyRetrieveFromCache(),, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  private boolean onlyRetrieveFromCache;, +      boolean onlyRetrieveFromCache,, +    this.onlyRetrieveFromCache = onlyRetrieveFromCache;, +        // Skip loading from source if the user opted to only retrieve the resource from cache., +        return onlyRetrieveFromCache ? Stage.FINISHED : Stage.SOURCE;, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +      boolean onlyRetrieveFromCache,, +        onlyRetrieveFromCache,, +        boolean onlyRetrieveFromCache,, +          onlyRetrieveFromCache,]