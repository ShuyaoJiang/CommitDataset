[+++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java, +    if (methodToOverride.getSimpleName().toString().contains("transform"), +        && methodToOverride.isVarArgs()) {, +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java, +    if (methodToOverride.getSimpleName().toString().contains("transform"), +        && methodToOverride.isVarArgs()) {, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java, +import java.lang.Deprecated;, +  public final GlideOptions transform(@NonNull Transformation<Bitmap>... transformations) {, +    return (GlideOptions) super.transform(transformations);, +  }, +, +  @Override, +  @SafeVarargs, +  @SuppressWarnings("varargs"), +  @Deprecated, +  @NonNull, +  @CheckResult, +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java, +    if (methodToOverride.getSimpleName().toString().contains("transform"), +        && methodToOverride.isVarArgs()) {, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java, +import java.lang.Deprecated;, +  public final GlideOptions transform(@NonNull Transformation<Bitmap>... transformations) {, +    return (GlideOptions) super.transform(transformations);, +  }, +, +  @Override, +  @SafeVarargs, +  @SuppressWarnings("varargs"), +  @Deprecated, +  @NonNull, +  @CheckResult, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequest.java, +   * @see GlideOptions#transform(Transformation<Bitmap>[]), +   */, +  @NonNull, +  @CheckResult, +  @SuppressWarnings({, +      "unchecked",, +      "varargs", +  }), +  public GlideRequest<TranscodeType> transform(@NonNull Transformation<Bitmap>... transformations) {, +    return (GlideRequest<TranscodeType>) super.transform(transformations);, +  }, +, +  /**, +  @Deprecated, +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java, +    if (methodToOverride.getSimpleName().toString().contains("transform"), +        && methodToOverride.isVarArgs()) {, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java, +import java.lang.Deprecated;, +  public final GlideOptions transform(@NonNull Transformation<Bitmap>... transformations) {, +    return (GlideOptions) super.transform(transformations);, +  }, +, +  @Override, +  @SafeVarargs, +  @SuppressWarnings("varargs"), +  @Deprecated, +  @NonNull, +  @CheckResult, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideRequest.java, +   * @see GlideOptions#transform(Transformation<Bitmap>[]), +   */, +  @NonNull, +  @CheckResult, +  @SuppressWarnings({, +      "unchecked",, +      "varargs", +  }), +  public GlideRequest<TranscodeType> transform(@NonNull Transformation<Bitmap>... transformations) {, +    return (GlideRequest<TranscodeType>) super.transform(transformations);, +  }, +, +  /**, +  @Deprecated, +++ b/annotation/compiler/test/src/test/resources/GlideExtensionOptionsTest/MemoizeStaticMethod/GlideOptions.java, +import java.lang.Deprecated;, +  public final GlideOptions transform(@NonNull Transformation<Bitmap>... transformations) {, +    return (GlideOptions) super.transform(transformations);, +  }, +, +  @Override, +  @SafeVarargs, +  @SuppressWarnings("varargs"), +  @Deprecated, +  @NonNull, +  @CheckResult, +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestOptionsOverrideGenerator.java, +    if (methodToOverride.getSimpleName().toString().contains("transform"), +        && methodToOverride.isVarArgs()) {, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideOptions.java, +import java.lang.Deprecated;, +  public final GlideOptions transform(@NonNull Transformation<Bitmap>... transformations) {, +    return (GlideOptions) super.transform(transformations);, +  }, +, +  @Override]