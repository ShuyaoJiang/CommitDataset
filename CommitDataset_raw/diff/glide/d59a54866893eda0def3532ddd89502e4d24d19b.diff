[+++ b/build.gradle, +        classpath "se.bjurr.violations:violations-gradle-plugin:${VIOLATIONS_PLUGIN_VERSION}", +++ b/build.gradle, +        classpath "se.bjurr.violations:violations-gradle-plugin:${VIOLATIONS_PLUGIN_VERSION}", +++ b/gradle.properties, +VIOLATIONS_PLUGIN_VERSION=1.3, +++ b/build.gradle, +        classpath "se.bjurr.violations:violations-gradle-plugin:${VIOLATIONS_PLUGIN_VERSION}", +++ b/gradle.properties, +VIOLATIONS_PLUGIN_VERSION=1.3, +++ b/library/build.gradle, +import se.bjurr.violations.gradle.plugin.ViolationsTask, +, +apply plugin: "se.bjurr.violations.violations-gradle-plugin", +        // Failures are caught and printed by the violations plugin below., +        ignoreFailures = true, +, +            xml.enabled = true, +            html.enabled = false, +        // Failures are caught and printed by the violations plugin below., +        ignoreFailures = true, +, +            xml.enabled = true, +            html.enabled = false, +, +    task violations(type: ViolationsTask) {, +        minSeverity = 'INFO', +        detailLevel = 'VERBOSE', +        maxViolations = 0, +, +        // Many more formats available, see: https://github.com/tomasbjerre/violations-lib, +        violations = [, +                ["FINDBUGS", ".", ".*/findbugs/.*\\.xml\$", "Findbugs"],, +                ["PMD",      ".", ".*/pmd/.*\\.xml\$",      "PMD"], +        ], +    }, +, +    check.finalizedBy violations]