[+++ b/.gitmodules, +[submodule "samples/flickr/volley"], +	path = samples/flickr/volley, +	url = https://android.googlesource.com/platform/frameworks/volley, +++ b/.gitmodules, +[submodule "samples/flickr/volley"], +	path = samples/flickr/volley, +	url = https://android.googlesource.com/platform/frameworks/volley, +++ b/samples/flickr/project.properties, +android.library.reference.3=volley/, +++ b/.gitmodules, +[submodule "samples/flickr/volley"], +	path = samples/flickr/volley, +	url = https://android.googlesource.com/platform/frameworks/volley, +++ b/samples/flickr/project.properties, +android.library.reference.3=volley/, +++ b/samples/flickr/src/com/bumptech/flickr/FlickrStreamLoader.java, +import com.android.volley.Request;, +    private Request current = null;, +            current.cancel();, +++ b/.gitmodules, +[submodule "samples/flickr/volley"], +	path = samples/flickr/volley, +	url = https://android.googlesource.com/platform/frameworks/volley, +++ b/samples/flickr/project.properties, +android.library.reference.3=volley/, +++ b/samples/flickr/src/com/bumptech/flickr/FlickrStreamLoader.java, +import com.android.volley.Request;, +    private Request current = null;, +            current.cancel();, +++ b/samples/flickr/src/com/bumptech/flickr/api/Api.java, +import com.android.volley.Request;, +    public static Api get(Context applicationContext) {, +            API = new Api(applicationContext, applicationContext.getResources().getDimensionPixelSize(R.dimen.large_photo_side));, +    protected Api(Context applicationContext, int maxPhotoSize) {, +        this.downloader = Downloader.get(applicationContext);, +        downloader.download(getSearchUrl(text), new Downloader.StringCallback() {, +            public void onDownloadReady(String result) {, +                    JSONObject searchResults = new JSONObject(result.substring(14, result.length()-1));, +    public Request downloadPhoto(Photo photo, File cacheDir, final PhotoCallback cb) {, +        Request result = null;, +++ b/.gitmodules, +[submodule "samples/flickr/volley"], +	path = samples/flickr/volley, +	url = https://android.googlesource.com/platform/frameworks/volley, +++ b/samples/flickr/project.properties, +android.library.reference.3=volley/, +++ b/samples/flickr/src/com/bumptech/flickr/FlickrStreamLoader.java, +import com.android.volley.Request;, +    private Request current = null;, +            current.cancel();, +++ b/samples/flickr/src/com/bumptech/flickr/api/Api.java, +import com.android.volley.Request;, +    public static Api get(Context applicationContext) {, +            API = new Api(applicationContext, applicationContext.getResources().getDimensionPixelSize(R.dimen.large_photo_side));, +    protected Api(Context applicationContext, int maxPhotoSize) {, +        this.downloader = Downloader.get(applicationContext);, +        downloader.download(getSearchUrl(text), new Downloader.StringCallback() {, +            public void onDownloadReady(String result) {, +                    JSONObject searchResults = new JSONObject(result.substring(14, result.length()-1));, +    public Request downloadPhoto(Photo photo, File cacheDir, final PhotoCallback cb) {, +        Request result = null;, +++ b/samples/flickr/src/com/bumptech/flickr/api/Downloader.java, +import android.content.Context;, +import com.android.volley.NetworkResponse;, +import com.android.volley.Request;, +import com.android.volley.RequestQueue;, +import com.android.volley.Response;, +import com.android.volley.VolleyError;, +import com.android.volley.toolbox.StringRequest;, +import com.android.volley.toolbox.Volley;, +import java.io.BufferedOutputStream;, +import java.io.FileNotFoundException;, +    private final RequestQueue queue;, +    static Downloader get(Context context) {, +            DOWNLOADER = new Downloader(context);, +    public Downloader(Context context) {, +        queue = Volley.newRequestQueue(context);, +    }, +, +    public interface StringCallback {, +        public void onDownloadReady(String result);, +    public void download(String url, final StringCallback cb) {, +        queue.add(new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {, +            public void onResponse(String response) {, +                cb.onDownloadReady(response);, +            }, +        }, new Response.ErrorListener() {, +            public void onErrorResponse(VolleyError error) {, +                error.printStackTrace();, +        }));, +, +    public Request download(String url, final File out, final DiskCallback cb) {, +        return queue.add(new Request<String>(Request.Method.GET, url, new Response.ErrorListener() {, +            @Override, +            public void onErrorResponse(VolleyError error) {, +                error.printStackTrace();, +            }, +        }) {, +            @Override]