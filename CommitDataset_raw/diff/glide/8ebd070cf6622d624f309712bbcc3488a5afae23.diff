[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java, +import org.robolectric.RobolectricTestRunner;, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java, +import org.robolectric.RobolectricTestRunner;, +++ b/library/src/main/java/com/bumptech/glide/load/data/LoadDataSet.java, +    return "DataFetcherSet{modelLoaders=", +        + Arrays.toString(modelLoaders.toArray(new ModelLoader[modelLoaders.size()])) + "}";, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java, +import org.robolectric.RobolectricTestRunner;, +++ b/library/src/main/java/com/bumptech/glide/load/data/LoadDataSet.java, +    return "DataFetcherSet{modelLoaders=", +        + Arrays.toString(modelLoaders.toArray(new ModelLoader[modelLoaders.size()])) + "}";, +++ b/library/src/main/java/com/bumptech/glide/load/model/UrlUriLoader.java, + *, + * @param <Data> The type of data this Loader will obtain for a {@link Uri}., +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformationTest.java, +import org.robolectric.RobolectricTestRunner;, +++ b/library/src/main/java/com/bumptech/glide/load/data/LoadDataSet.java, +    return "DataFetcherSet{modelLoaders=", +        + Arrays.toString(modelLoaders.toArray(new ModelLoader[modelLoaders.size()])) + "}";, +++ b/library/src/main/java/com/bumptech/glide/load/model/UrlUriLoader.java, + *, + * @param <Data> The type of data this Loader will obtain for a {@link Uri}., +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream.java, +      throw new InvalidMarkException("Mark has been invalidated, pos: " + pos + " markLimit: ", +          + marklimit);]