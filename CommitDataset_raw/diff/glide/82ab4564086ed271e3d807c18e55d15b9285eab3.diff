[+++ b/samples/flickr/res/layout/grid_fragment.xml, +  android:gravity="center", +  android:stretchMode="spacingWidthUniform", +++ b/samples/flickr/res/layout/grid_fragment.xml, +  android:gravity="center", +  android:stretchMode="spacingWidthUniform", +++ b/samples/flickr/res/layout/main.xml, +      <android.support.v4.view.ViewPager, +        android:id="@+id/view_pager", +++ b/samples/flickr/res/layout/grid_fragment.xml, +  android:gravity="center", +  android:stretchMode="spacingWidthUniform", +++ b/samples/flickr/res/layout/main.xml, +      <android.support.v4.view.ViewPager, +        android:id="@+id/view_pager", +++ b/samples/flickr/src/com/bumptech/flickr/GridFragment.java, +public class GridFragment extends SherlockFragment implements PhotoViewer{, +    @Override, +    public void onPhotosUpdated(List<Photo> photos) {, +++ b/samples/flickr/res/layout/grid_fragment.xml, +  android:gravity="center", +  android:stretchMode="spacingWidthUniform", +++ b/samples/flickr/res/layout/main.xml, +      <android.support.v4.view.ViewPager, +        android:id="@+id/view_pager", +++ b/samples/flickr/src/com/bumptech/flickr/GridFragment.java, +public class GridFragment extends SherlockFragment implements PhotoViewer{, +    @Override, +    public void onPhotosUpdated(List<Photo> photos) {, +++ b/samples/flickr/src/com/bumptech/flickr/MyActivity.java, +import android.support.v4.app.Fragment;, +import android.support.v4.app.FragmentManager;, +import android.support.v4.app.FragmentPagerAdapter;, +import android.support.v4.view.ViewPager;, +import android.view.ViewGroup;, +, +    private List<PhotoViewer> photoViewers = new ArrayList<PhotoViewer>();, +, +                        for (PhotoViewer viewer : photoViewers) {, +                            viewer.onPhotosUpdated(photos);, +                        }, +        ViewPager pager = (ViewPager) findViewById(R.id.view_pager);, +, +        final List<Fragment> fragments = new ArrayList<Fragment>();, +, +        fragments.add(small);, +        photoViewers.add(small);, +, +        final GridFragment medium = new GridFragment();, +        medium.setup(flickerApi,  imageManager, cacheDir, res.getDimensionPixelSize(R.dimen.medium_photo_side));, +        fragments.add(medium);, +        photoViewers.add(medium);, +, +        actionBar.addTab(actionBar.newTab().setText(R.string.small).setTabListener(new TabListener2(pager)));, +        actionBar.addTab(actionBar.newTab().setText(R.string.medium).setTabListener(new TabListener2(pager)));, +, +        pager.setAdapter(new FlickrPagerAdapter(getSupportFragmentManager(), fragments, new FlickrPagerAdapter.PrimaryItemListener() {, +            public void onPrimaryItemSet(int position) {, +                actionBar.getTabAt(position).select();, +    private static class TabListener2 implements ActionBar.TabListener {, +        private final ViewPager pager;, +        public TabListener2(ViewPager pager) {, +            this.pager = pager;, +            pager.setCurrentItem(tab.getPosition());, +        public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction ft) { }, +, +        @Override, +        public void onTabReselected(ActionBar.Tab tab, FragmentTransaction ft) { }, +, +    private static class FlickrPagerAdapter extends FragmentPagerAdapter {, +        private final PrimaryItemListener listener;, +, +        private interface PrimaryItemListener {, +            public void onPrimaryItemSet(int position);, +        }, +        private final List<Fragment> fragments;, +        private int lastPosition = 0;, +, +        public FlickrPagerAdapter(FragmentManager fm, List<Fragment> fragments, PrimaryItemListener listener) {, +            super(fm);, +            this.fragments = fragments;, +            this.listener = listener;, +        public Fragment getItem(int i) {, +            return fragments.get(i);  //To change body of implemented methods use File | Settings | File Templates., +        @Override, +        public int getCount() {, +            return fragments.size();  //To change body of implemented methods use File | Settings | File Templates., +        }, +, +        @Override, +        public void setPrimaryItem(ViewGroup container, int position, Object object) {, +            if (lastPosition != position) {, +                listener.onPrimaryItemSet(position);, +                lastPosition = position;, +            }, +            super.setPrimaryItem(container, position, object);    //To change body of overridden methods use File | Settings | File Templates., +        }, +++ b/samples/flickr/res/layout/grid_fragment.xml, +  android:gravity="center", +  android:stretchMode="spacingWidthUniform"]