[+++ b/library/src/main/java/com/bumptech/glide/Glide.java, +      Context context, int logLevel, RequestOptions defaultRequestOptions) {, +, +    DecodeFormat decodeFormat = defaultRequestOptions.getOptions().get(Downsampler.DECODE_FORMAT);, +    glideContext = new GlideContext(context, registry, imageViewTargetFactory,, +        defaultRequestOptions, engine, this, logLevel);, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +      Context context, int logLevel, RequestOptions defaultRequestOptions) {, +, +    DecodeFormat decodeFormat = defaultRequestOptions.getOptions().get(Downsampler.DECODE_FORMAT);, +    glideContext = new GlideContext(context, registry, imageViewTargetFactory,, +        defaultRequestOptions, engine, this, logLevel);, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.request.RequestOptions;, +  private RequestOptions defaultRequestOptions = new RequestOptions();, +   * @param diskCacheFactory The disk cache factory to use., +   * for thumbnail requests to work properly., +   * for thumbnail requests to work properly., +   * Sets the default {@link RequestOptions} to use for all loads across the app., +   *, +   * <p>Applying additional options with {@link, +   * RequestBuilder#apply(com.bumptech.glide.request.BaseRequestOptions)} will override defaults, +   * set here., +   *, +   * @param requestOptions The options to use by default., +   * @return This builder., +   */, +  public GlideBuilder setDefaultRequestOptions(RequestOptions requestOptions) {, +    this.defaultRequestOptions = requestOptions;, +    return this;, +  }, +, +  /**, +   *, +   * @deprecated Use {@link #setDefaultRequestOptions(RequestOptions)} instead., +  @Deprecated, +    defaultRequestOptions.apply(new RequestOptions().format(decodeFormat));, +    return new Glide(engine, memoryCache, bitmapPool, byteArrayPool, context, logLevel,, +        defaultRequestOptions.lock());, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +      Context context, int logLevel, RequestOptions defaultRequestOptions) {, +, +    DecodeFormat decodeFormat = defaultRequestOptions.getOptions().get(Downsampler.DECODE_FORMAT);, +    glideContext = new GlideContext(context, registry, imageViewTargetFactory,, +        defaultRequestOptions, engine, this, logLevel);, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.request.RequestOptions;, +  private RequestOptions defaultRequestOptions = new RequestOptions();, +   * @param diskCacheFactory The disk cache factory to use., +   * for thumbnail requests to work properly., +   * for thumbnail requests to work properly., +   * Sets the default {@link RequestOptions} to use for all loads across the app., +   *, +   * <p>Applying additional options with {@link, +   * RequestBuilder#apply(com.bumptech.glide.request.BaseRequestOptions)} will override defaults, +   * set here., +   *, +   * @param requestOptions The options to use by default., +   * @return This builder., +   */, +  public GlideBuilder setDefaultRequestOptions(RequestOptions requestOptions) {, +    this.defaultRequestOptions = requestOptions;, +    return this;, +  }, +, +  /**, +   *, +   * @deprecated Use {@link #setDefaultRequestOptions(RequestOptions)} instead., +  @Deprecated, +    defaultRequestOptions.apply(new RequestOptions().format(decodeFormat));, +    return new Glide(engine, memoryCache, bitmapPool, byteArrayPool, context, logLevel,, +        defaultRequestOptions.lock());, +++ b/library/src/main/java/com/bumptech/glide/GlideContext.java, +  private final RequestOptions defaultRequestOptions;, +      ImageViewTargetFactory imageViewTargetFactory, RequestOptions defaultRequestOptions,, +      Engine engine, ComponentCallbacks2 componentCallbacks, int logLevel) {, +    this.defaultRequestOptions = defaultRequestOptions;, +  public RequestOptions getDefaultRequestOptions() {, +    return defaultRequestOptions;, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +      Context context, int logLevel, RequestOptions defaultRequestOptions) {, +, +    DecodeFormat decodeFormat = defaultRequestOptions.getOptions().get(Downsampler.DECODE_FORMAT);, +    glideContext = new GlideContext(context, registry, imageViewTargetFactory,, +        defaultRequestOptions, engine, this, logLevel);, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.request.RequestOptions;, +  private RequestOptions defaultRequestOptions = new RequestOptions();, +   * @param diskCacheFactory The disk cache factory to use., +   * for thumbnail requests to work properly., +   * for thumbnail requests to work properly., +   * Sets the default {@link RequestOptions} to use for all loads across the app., +   *, +   * <p>Applying additional options with {@link, +   * RequestBuilder#apply(com.bumptech.glide.request.BaseRequestOptions)} will override defaults, +   * set here., +   *, +   * @param requestOptions The options to use by default., +   * @return This builder., +   */]