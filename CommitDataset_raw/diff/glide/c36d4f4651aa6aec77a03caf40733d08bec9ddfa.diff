[+++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineJobTest.java, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    harness.job.start(harness.decodeJob);, +    harness.job.start(harness.decodeJob);, +    harness.job.start(harness.decodeJob);, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onLoadFailed();, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +  @SuppressWarnings("unchecked"), +    EngineJob<Object> job;, +    DecodeJob<Object> decodeJob = mock(DecodeJob.class);, +      job = new EngineJob<>(diskCacheService, sourceService, listener, pool, factory), +    public EngineJob<Object> getJob() {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineJobTest.java, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    harness.job.start(harness.decodeJob);, +    harness.job.start(harness.decodeJob);, +    harness.job.start(harness.decodeJob);, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onLoadFailed();, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.onResourceReady(harness.resource);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);, +    final EngineJob<Object> job = harness.getJob();, +    job.start(harness.decodeJob);]