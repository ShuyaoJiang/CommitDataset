[+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java, +  public void loadGif_withInterlacedTransparentGif_sizeOriginal_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.interlaced_transparent_gif), +            .submit(), +            .get();, +    assertThat(gifDrawable).isNotNull();, +    gifDrawable.stop();, +  }, +, +  @Test, +  public void loadGif_withInterlacedTransparentGif_downsampled_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.interlaced_transparent_gif), +            .submit(10, 10), +            .get();, +    assertThat(gifDrawable).isNotNull();, +    gifDrawable.stop();, +  }, +, +  @Test, +  public void loadGif_withTransparentGif_sizeOriginal_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.transparent_gif), +            .submit(), +            .get();, +    assertThat(gifDrawable).isNotNull();, +    gifDrawable.stop();, +  }, +, +  @Test, +  public void loadGif_withTransparentGif_downsampled_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.transparent_gif), +            .submit(10, 10), +            .get();, +    assertThat(gifDrawable).isNotNull();, +    gifDrawable.stop();, +  }, +, +  @Test, +  public void loadGif_withOpaqueGif_sizeOriginal_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.opaque_gif), +            .submit(), +            .get();, +    assertThat(gifDrawable).isNotNull();, +    gifDrawable.stop();, +  }, +, +  @Test, +  public void loadGif_withOpaqueGif_downsampled_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.opaque_gif), +            .submit(10, 10), +            .get();, +    assertThat(gifDrawable).isNotNull();, +    gifDrawable.stop();, +  }, +, +  @Test, +  public void loadGif_withOpaqueInterlacedGif_sizeOriginal_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.opaque_interlaced_gif), +            .submit(), +            .get();, +    assertThat(gifDrawable).isNotNull();, +    gifDrawable.stop();, +  }, +, +  @Test, +  public void loadGif_withOpaqueInterlacedGif_downsampled_succeeds(), +      throws ExecutionException, InterruptedException {, +    GifDrawable gifDrawable =, +        GlideApp.with(context), +            .asGif(), +            .load(ResourceIds.raw.opaque_interlaced_gif), +            .submit(10, 10), +            .get();]