[+++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +        return transform(new GifBitmapWrapperTransformation(bitmapTransformation));, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +        return transform(new GifBitmapWrapperTransformation(bitmapTransformation));, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +    private final int targetWidth;, +    private final int targetHeight;, +    public GifData(Context context, BitmapPool bitmapPool, String gifId, GifHeader header, byte[] data,, +            int targetWidth, int targetHeight) {, +        this.targetWidth = targetWidth;, +        this.targetHeight = targetHeight;, +        GifFrameManager frameManager = new GifFrameManager(context, gifDecoder, getFrameTransformation(),, +                targetWidth, targetHeight);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +        return transform(new GifBitmapWrapperTransformation(bitmapTransformation));, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +    private final int targetWidth;, +    private final int targetHeight;, +    public GifData(Context context, BitmapPool bitmapPool, String gifId, GifHeader header, byte[] data,, +            int targetWidth, int targetHeight) {, +        this.targetWidth = targetWidth;, +        this.targetHeight = targetHeight;, +        GifFrameManager frameManager = new GifFrameManager(context, gifDecoder, getFrameTransformation(),, +                targetWidth, targetHeight);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDataTransformation.java, +package com.bumptech.glide.load.resource.gif;, +, +import android.graphics.Bitmap;, +import com.bumptech.glide.Resource;, +import com.bumptech.glide.load.MultiTransformation;, +import com.bumptech.glide.load.Transformation;, +, +public class GifDataTransformation implements Transformation<GifData> {, +    private Transformation<Bitmap> wrapped;, +, +    public GifDataTransformation(Transformation<Bitmap> wrapped) {, +        this.wrapped = wrapped;, +    }, +, +    @Override, +    public Resource<GifData> transform(Resource<GifData> resource, int outWidth, int outHeight) {, +        GifData data = resource.get();, +        Transformation<Bitmap> newTransformation =, +                new MultiTransformation<Bitmap>(data.getFrameTransformation(), wrapped);, +        data.setFrameTransformation(newTransformation);, +        return resource;, +    }, +, +    @Override, +    public String getId() {, +        return wrapped.getId();, +    }, +}, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +        return transform(new GifBitmapWrapperTransformation(bitmapTransformation));, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +    private final int targetWidth;, +    private final int targetHeight;, +    public GifData(Context context, BitmapPool bitmapPool, String gifId, GifHeader header, byte[] data,, +            int targetWidth, int targetHeight) {, +        this.targetWidth = targetWidth;, +        this.targetHeight = targetHeight;, +        GifFrameManager frameManager = new GifFrameManager(context, gifDecoder, getFrameTransformation(),, +                targetWidth, targetHeight);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDataTransformation.java, +package com.bumptech.glide.load.resource.gif;, +, +import android.graphics.Bitmap;, +import com.bumptech.glide.Resource;, +import com.bumptech.glide.load.MultiTransformation;, +import com.bumptech.glide.load.Transformation;, +, +public class GifDataTransformation implements Transformation<GifData> {, +    private Transformation<Bitmap> wrapped;, +, +    public GifDataTransformation(Transformation<Bitmap> wrapped) {, +        this.wrapped = wrapped;, +    }, +, +    @Override, +    public Resource<GifData> transform(Resource<GifData> resource, int outWidth, int outHeight) {, +        GifData data = resource.get();, +        Transformation<Bitmap> newTransformation =, +                new MultiTransformation<Bitmap>(data.getFrameTransformation(), wrapped);, +        data.setFrameTransformation(newTransformation);, +        return resource;, +    }, +, +    @Override, +    public String getId() {, +        return wrapped.getId();, +    }, +}, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +    private int width;, +    private int height;, +        width = -1;, +        height = -1;, +, +        return width;]