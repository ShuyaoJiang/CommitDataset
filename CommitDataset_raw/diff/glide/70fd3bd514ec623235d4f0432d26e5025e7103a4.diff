[+++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +                return resizer.loadAtLeast(path, width, height);, +++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +                return resizer.loadAtLeast(path, width, height);, +++ b/library/src/com/bumptech/photos/resize/ImageResizer.java, +        final Bitmap streamed = loadAtLeast(path, width, height);, +        final Bitmap streamed = loadAtLeast(is1, is2, width, height);, +        final Bitmap streamed = loadAtLeast(path, width > height ? 1 : width, height > width ? 1 : height);, +        final Bitmap streamed = loadAtLeast(is1, is2, width > height ? 1 : width, height > width ? 1 : height);, +    /**, +     * Load the image at the given path with dimens greater than or equal to the given dimens. If the image has a, +     * rotation specified in EXIF data, rotates the image accordingly. Maintains the original proportions., +     *, +     * Note - if the image at the path has dimens less than or equal to the given dimens, the image will not, +     * be enlarged and will instead be loaded at its original dimens., +     *, +     * @param path The path to the image, +     * @param width The minimum width of the returned Bitmap, +     * @param height The minimum heght of the returned Bitmap, +     * @return, +     * @throws FileNotFoundException, +     */, +    public Bitmap loadAtLeast(String path, int width, int height) throws FileNotFoundException {, +        Bitmap result = loadAtLeast(new FileInputStream(path), new FileInputStream(path), width, height);, +     * Load the image represented by the given input streams with dimens greater than or equal to the given dimens., +     * Maintains the original proportions., +     * Note - if the image at the path has dimens less than or equal to the given dimens, the image will not, +     * be enlarged and will instead be loaded at its original dimens., +     * @param width The minimum width of the returned Bitmap, +     * @param height The minimum height of the returned Bitmap, +    public Bitmap loadAtLeast(InputStream is1, InputStream is2, int width, int height) {, +        final int sampleSize = Math.min(originalHeight / height, originalWidth / width);]