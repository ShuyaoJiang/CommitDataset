[+++ b/library/test/src/test/java/com/bumptech/glide/GlideTest.java, +    ArgumentCaptor<Drawable> drawableCaptor = ArgumentCaptor.forClass(Drawable.class);, +    verify(target).onResourceReady(drawableCaptor.capture(), any(Transition.class));, +    assertThat(((ColorDrawable) drawableCaptor.getValue()).getColor()).isEqualTo(Color.RED);, +++ b/library/test/src/test/java/com/bumptech/glide/GlideTest.java, +    ArgumentCaptor<Drawable> drawableCaptor = ArgumentCaptor.forClass(Drawable.class);, +    verify(target).onResourceReady(drawableCaptor.capture(), any(Transition.class));, +    assertThat(((ColorDrawable) drawableCaptor.getValue()).getColor()).isEqualTo(Color.RED);, +++ b/library/test/src/test/java/com/bumptech/glide/request/RequestOptionsTest.java, +    RequestOptions apply = options.fallback(new ColorDrawable(Color.RED)).apply(toApply);, +    assertThat(((ColorDrawable) apply.getFallbackDrawable()).getColor()).isEqualTo(Color.RED);, +++ b/library/test/src/test/java/com/bumptech/glide/GlideTest.java, +    ArgumentCaptor<Drawable> drawableCaptor = ArgumentCaptor.forClass(Drawable.class);, +    verify(target).onResourceReady(drawableCaptor.capture(), any(Transition.class));, +    assertThat(((ColorDrawable) drawableCaptor.getValue()).getColor()).isEqualTo(Color.RED);, +++ b/library/test/src/test/java/com/bumptech/glide/request/RequestOptionsTest.java, +    RequestOptions apply = options.fallback(new ColorDrawable(Color.RED)).apply(toApply);, +    assertThat(((ColorDrawable) apply.getFallbackDrawable()).getColor()).isEqualTo(Color.RED);, +++ b/library/test/src/test/java/com/bumptech/glide/request/SingleRequestTest.java, +++ b/library/test/src/test/java/com/bumptech/glide/GlideTest.java, +    ArgumentCaptor<Drawable> drawableCaptor = ArgumentCaptor.forClass(Drawable.class);, +    verify(target).onResourceReady(drawableCaptor.capture(), any(Transition.class));, +    assertThat(((ColorDrawable) drawableCaptor.getValue()).getColor()).isEqualTo(Color.RED);, +++ b/library/test/src/test/java/com/bumptech/glide/request/RequestOptionsTest.java, +    RequestOptions apply = options.fallback(new ColorDrawable(Color.RED)).apply(toApply);, +    assertThat(((ColorDrawable) apply.getFallbackDrawable()).getColor()).isEqualTo(Color.RED);, +++ b/library/test/src/test/java/com/bumptech/glide/request/SingleRequestTest.java, +++ b/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetTest.java, +import static com.google.common.truth.Truth.assertThat;, +import org.mockito.ArgumentCaptor;, +    ArgumentCaptor<Drawable> drawableCaptor = ArgumentCaptor.forClass(Drawable.class);, +    verify(animation).transition(drawableCaptor.capture(), eq(target));, +    assertThat(((ColorDrawable) drawableCaptor.getValue()).getColor()).isEqualTo(Color.GREEN);]