[+++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +    /** The target dimensions we should pass to Glide to use when loading individual frames. */, +    /** The final dimensions of the transformed frames. */, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +    /** The target dimensions we should pass to Glide to use when loading individual frames. */, +    /** The final dimensions of the transformed frames. */, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +                state.targetHeight, state.finalFrameWidth, state.finalFrameHeight);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +    /** The target dimensions we should pass to Glide to use when loading individual frames. */, +    /** The final dimensions of the transformed frames. */, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +                state.targetHeight, state.finalFrameWidth, state.finalFrameHeight);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameManager.java, +    private final int totalFrameSize;, +            int targetHeight, int frameWidth, int frameHeight) {, +                targetWidth, targetHeight, frameWidth, frameHeight);, +            Transformation<Bitmap> transformation, int targetWidth, int targetHeight, int frameWidth, int frameHeight) {, +        this.totalFrameSize = frameWidth * frameHeight * (decoder.isTransparent() ? 4 : 2);, +        boolean skipCache = totalFrameSize > calculator.getMemoryCacheSize() / 2;, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +    /** The target dimensions we should pass to Glide to use when loading individual frames. */, +    /** The final dimensions of the transformed frames. */, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +                state.targetHeight, state.finalFrameWidth, state.finalFrameHeight);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameManager.java, +    private final int totalFrameSize;, +            int targetHeight, int frameWidth, int frameHeight) {, +                targetWidth, targetHeight, frameWidth, frameHeight);, +            Transformation<Bitmap> transformation, int targetWidth, int targetHeight, int frameWidth, int frameHeight) {, +        this.totalFrameSize = frameWidth * frameHeight * (decoder.isTransparent() ? 4 : 2);, +        boolean skipCache = totalFrameSize > calculator.getMemoryCacheSize() / 2;, +++ b/library/src/test/java/com/bumptech/glide/load/resource/gif/GifFrameManagerTest.java, +        new GifFrameManager(Robolectric.application, mock(GifDecoder.class), null, 100, 100, 75, 75);]