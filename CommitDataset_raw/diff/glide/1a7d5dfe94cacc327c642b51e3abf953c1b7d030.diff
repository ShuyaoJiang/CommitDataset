[+++ b/library/src/androidTest/java/com/bumptech/glide/util/TransformationUtilsTest.java, +    // Test for Issue #195., +    @Test, +    public void testFitCenterUsesFloorInsteadofRoundingForOutputBitmapSize() {, +        Bitmap toTransform = Bitmap.createBitmap(1230, 1640, Bitmap.Config.RGB_565);, +, +        Bitmap transformed = TransformationUtils.fitCenter(toTransform, mock(BitmapPool.class), 1075, 1366);, +, +        assertEquals(1024, transformed.getWidth());, +        assertEquals(1366, transformed.getHeight());, +    }, +, +++ b/library/src/androidTest/java/com/bumptech/glide/util/TransformationUtilsTest.java, +    // Test for Issue #195., +    @Test, +    public void testFitCenterUsesFloorInsteadofRoundingForOutputBitmapSize() {, +        Bitmap toTransform = Bitmap.createBitmap(1230, 1640, Bitmap.Config.RGB_565);, +, +        Bitmap transformed = TransformationUtils.fitCenter(toTransform, mock(BitmapPool.class), 1075, 1366);, +, +        assertEquals(1024, transformed.getWidth());, +        assertEquals(1366, transformed.getHeight());, +    }, +, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "requested target size matches input, returning input");, +            }, +        // take the floor of the target width/height, not round. If the matrix, +        // passed into drawBitmap rounds differently, we want to slightly, +        // overdraw, not underdraw, to avoid artifacts from bitmap reuse., +        final int targetWidth = (int) (minPercentage * toFit.getWidth());, +        final int targetHeight = (int) (minPercentage * toFit.getHeight());, +, +        if (toFit.getWidth() == targetWidth && toFit.getHeight() == targetHeight) {, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "adjusted target size matches input, returning input");, +            }, +            return toFit;, +        }, +        if (Log.isLoggable(TAG, Log.VERBOSE)) {, +            Log.v(TAG, "request: " + width + "x" + height);, +            Log.v(TAG, "toFit:   " + toFit.getWidth() + "x" + toFit.getHeight());, +            Log.v(TAG, "toReuse: " + toReuse.getWidth() + "x" + toReuse.getHeight());, +            Log.v(TAG, "minPct:   " + minPercentage);, +        }, +]