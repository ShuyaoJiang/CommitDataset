[+++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +    /**, +     * @see #getImage(String, LoadedCallback), +     *, +     * Same as getImage except with two input streams representing the image instead of a path. One, +     * InputStream will be used to determine the image's dimensions and the other will be used to read the image data, +     * from disk, +     */, +    /**, +     * @see #getImageExact(String, int, int, LoadedCallback), +     *, +     * Same as getImageExact except with an input stream instead of a path, +     */, +    /**, +     * @see #getImageApproximate(String, int, int, LoadedCallback), +     *, +     * Same as getImageApproximate except with two input streams representing the image instead of a path. One, +     * InputStream will be used to determine the image's dimensions and the other will be used to read the image data, +     * from disk, +     */, +    /**, +     * @see #centerCrop(String, int, int, LoadedCallback), +     *, +     * Same as centerCrop except with two input streams representing the image instead of a path. One, +     * InputStream will be used to determine the image's dimensions and the other will be used to read the image data, +     * from disk, +     */    public Object centerCrop(final InputStream is1, final InputStream is2, final String id, final int width, final int height, final LoadedCallback cb) {, +    /**, +     * Cancel the task represented by the given token. If token is null this call will be ignored., +     *, +     * @param token The token returned by the ImageManager in a get call, +     */, +    /**, +     * Shuts down all of the background threads used by the ImageManager including the executor service, +     */]