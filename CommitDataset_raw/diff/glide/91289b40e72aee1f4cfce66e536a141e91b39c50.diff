[+++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +import java.net.URISyntaxException;, +        } else {, +            // Comparing the URLs using .equals performs additional network I/O and is generally broken., +            // See http://michaelscharf.blogspot.com/2006/11/javaneturlequals-and-hashcode-make.html., +            try {, +                if (lastUrl != null && url.toURI().equals(lastUrl.toURI())) {, +            } catch (URISyntaxException e) {, +                // Do nothing, this is best effort., +            }, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +import java.net.URISyntaxException;, +        } else {, +            // Comparing the URLs using .equals performs additional network I/O and is generally broken., +            // See http://michaelscharf.blogspot.com/2006/11/javaneturlequals-and-hashcode-make.html., +            try {, +                if (lastUrl != null && url.toURI().equals(lastUrl.toURI())) {, +            } catch (URISyntaxException e) {, +                // Do nothing, this is best effort., +            }, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap.java, +        StringBuilder sb = new StringBuilder("GroupedLinkedMap( ");, +            sb.append("{").append(current.key).append(":").append(current.size()).append("}, ");, +            sb.delete(sb.length() - 2, sb.length());, +        return sb.append(" )").toString();, +++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +import java.net.URISyntaxException;, +        } else {, +            // Comparing the URLs using .equals performs additional network I/O and is generally broken., +            // See http://michaelscharf.blogspot.com/2006/11/javaneturlequals-and-hashcode-make.html., +            try {, +                if (lastUrl != null && url.toURI().equals(lastUrl.toURI())) {, +            } catch (URISyntaxException e) {, +                // Do nothing, this is best effort., +            }, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap.java, +        StringBuilder sb = new StringBuilder("GroupedLinkedMap( ");, +            sb.append("{").append(current.key).append(":").append(current.size()).append("}, ");, +            sb.delete(sb.length() - 2, sb.length());, +        return sb.append(" )").toString();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +    public synchronized void setSizeMultiplier(float sizeMultiplier) {, +    private synchronized void trimToSize(int size) {, +++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +import java.net.URISyntaxException;, +        } else {, +            // Comparing the URLs using .equals performs additional network I/O and is generally broken., +            // See http://michaelscharf.blogspot.com/2006/11/javaneturlequals-and-hashcode-make.html., +            try {, +                if (lastUrl != null && url.toURI().equals(lastUrl.toURI())) {, +            } catch (URISyntaxException e) {, +                // Do nothing, this is best effort., +            }, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap.java, +        StringBuilder sb = new StringBuilder("GroupedLinkedMap( ");, +            sb.append("{").append(current.key).append(":").append(current.size()).append("}, ");, +            sb.delete(sb.length() - 2, sb.length());, +        return sb.append(" )").toString();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +    public synchronized void setSizeMultiplier(float sizeMultiplier) {, +    private synchronized void trimToSize(int size) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor.java, +        public boolean equals(Object o) {, +            if (this == o) {, +                return true;, +            }, +            if (o == null || getClass() != o.getClass()) {, +                return false;, +            }, +, +            FifoPriorityLoadTask that = (FifoPriorityLoadTask) o;, +, +            if (order != that.order) {, +                return false;, +            }, +            if (priority != that.priority) {, +                return false;, +            }, +, +            return true;, +        }, +, +        @Override, +        public int hashCode() {, +            int result = priority;, +            result = 31 * result + order;, +            return result;, +        }, +, +        @Override, +            if (result == 0) {, +++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +import java.net.URISyntaxException;, +        } else {, +            // Comparing the URLs using .equals performs additional network I/O and is generally broken., +            // See http://michaelscharf.blogspot.com/2006/11/javaneturlequals-and-hashcode-make.html.]