[+++ b/gradle.properties, +TRUTH_VERSION=0.36, +++ b/gradle.properties, +TRUTH_VERSION=0.36, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java, +import static org.mockito.Mockito.any;, +import static org.mockito.Mockito.anyBoolean;, +import static org.mockito.Mockito.eq;, +++ b/gradle.properties, +TRUTH_VERSION=0.36, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java, +import static org.mockito.Mockito.any;, +import static org.mockito.Mockito.anyBoolean;, +import static org.mockito.Mockito.eq;, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapSubject.java, +import com.google.common.truth.FailureMetadata;, +  private static final Subject.Factory<BitmapSubject, Bitmap> FACTORY =, +      new Subject.Factory<BitmapSubject, Bitmap>() {, +        public BitmapSubject createSubject(@NonNull FailureMetadata metadata, @NonNull Bitmap actual) {, +          return new BitmapSubject(metadata, actual);, +  private BitmapSubject(FailureMetadata failureMetadata, Bitmap subject) {, +    super(failureMetadata, subject);, +++ b/gradle.properties, +TRUTH_VERSION=0.36, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java, +import static org.mockito.Mockito.any;, +import static org.mockito.Mockito.anyBoolean;, +import static org.mockito.Mockito.eq;, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapSubject.java, +import com.google.common.truth.FailureMetadata;, +  private static final Subject.Factory<BitmapSubject, Bitmap> FACTORY =, +      new Subject.Factory<BitmapSubject, Bitmap>() {, +        public BitmapSubject createSubject(@NonNull FailureMetadata metadata, @NonNull Bitmap actual) {, +          return new BitmapSubject(metadata, actual);, +  private BitmapSubject(FailureMetadata failureMetadata, Bitmap subject) {, +    super(failureMetadata, subject);, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import com.bumptech.glide.Glide;, +        Glide.with(InstrumentationRegistry.getTargetContext()), +++ b/gradle.properties, +TRUTH_VERSION=0.36, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java, +import static org.mockito.Mockito.any;, +import static org.mockito.Mockito.anyBoolean;, +import static org.mockito.Mockito.eq;, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapSubject.java, +import com.google.common.truth.FailureMetadata;, +  private static final Subject.Factory<BitmapSubject, Bitmap> FACTORY =, +      new Subject.Factory<BitmapSubject, Bitmap>() {, +        public BitmapSubject createSubject(@NonNull FailureMetadata metadata, @NonNull Bitmap actual) {, +          return new BitmapSubject(metadata, actual);, +  private BitmapSubject(FailureMetadata failureMetadata, Bitmap subject) {, +    super(failureMetadata, subject);, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import com.bumptech.glide.Glide;, +        Glide.with(InstrumentationRegistry.getTargetContext()), +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/Matchers.java, +import static org.mockito.Mockito.any;, +++ b/gradle.properties, +TRUTH_VERSION=0.36, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java, +import static org.mockito.Mockito.any;, +import static org.mockito.Mockito.anyBoolean;, +import static org.mockito.Mockito.eq;, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapSubject.java, +import com.google.common.truth.FailureMetadata;, +  private static final Subject.Factory<BitmapSubject, Bitmap> FACTORY =, +      new Subject.Factory<BitmapSubject, Bitmap>() {, +        public BitmapSubject createSubject(@NonNull FailureMetadata metadata, @NonNull Bitmap actual) {, +          return new BitmapSubject(metadata, actual);, +  private BitmapSubject(FailureMetadata failureMetadata, Bitmap subject) {, +    super(failureMetadata, subject);, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import com.bumptech.glide.Glide;, +        Glide.with(InstrumentationRegistry.getTargetContext()), +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/Matchers.java, +import static org.mockito.Mockito.any;, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +++ b/gradle.properties, +TRUTH_VERSION=0.36, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestTest.java, +import static org.mockito.Mockito.any;, +import static org.mockito.Mockito.anyBoolean;, +import static org.mockito.Mockito.eq;, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/BitmapSubject.java, +import com.google.common.truth.FailureMetadata;, +  private static final Subject.Factory<BitmapSubject, Bitmap> FACTORY =, +      new Subject.Factory<BitmapSubject, Bitmap>() {, +        public BitmapSubject createSubject(@NonNull FailureMetadata metadata, @NonNull Bitmap actual) {, +          return new BitmapSubject(metadata, actual);, +  private BitmapSubject(FailureMetadata failureMetadata, Bitmap subject) {, +    super(failureMetadata, subject);, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import com.bumptech.glide.Glide;, +        Glide.with(InstrumentationRegistry.getTargetContext()), +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/Matchers.java, +import static org.mockito.Mockito.any;, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +    diskCacheProvider.clearDiskCacheIfCreated();]