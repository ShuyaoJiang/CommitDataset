[+++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +import android.support.annotation.NonNull;, +import com.bumptech.glide.request.BaseRequestOptions;, +  @NonNull, +  private BaseRequestOptions<?> defaultRequestOptions;, +  @NonNull, +  private BaseRequestOptions<?> requestOptions;, +, +    defaultRequestOptions = this.context.getDefaultRequestOptions();, +    requestOptions = defaultRequestOptions;, +, +   * Updates the default {@link RequestOptions} for all loads started with this request manager, +   * with the given {@link RequestOptions}., +   *, +   * <p>The {@link RequestOptions} provided here are applied on top of those provided via {@link, +   * GlideBuilder#setDefaultRequestOptions(RequestOptions)}. If there are conflicts, the options, +   * applied here will win. Note that this method does not mutate options provided to, +   * {@link GlideBuilder#setDefaultRequestOptions(RequestOptions)}., +   *, +   * <p>Multiple sets of options can be applied. If there are conflicts the last {@link, +   * RequestOptions} applied will win., +   *, +   * <p>The modified options will only be applied to loads started after this method is called., +   *, +   * @see RequestBuilder#apply(BaseRequestOptions), +   *, +   * @return This request manager., +   */, +  public RequestManager applyDefaultRequestOptions(RequestOptions requestOptions) {, +    BaseRequestOptions<?> toMutate = this.requestOptions == defaultRequestOptions, +        ? this.requestOptions.clone() : this.defaultRequestOptions;, +    this.requestOptions = toMutate.apply(requestOptions);, +    return this;, +  }, +, +  /**, +   * Replaces the default {@link RequestOptions} for all loads started with this request manager, +   * with the given {@link RequestOptions}., +   *, +   * <p>The {@link RequestOptions} provided here replace those that have been previously provided, +   * via {@link GlideBuilder#setDefaultRequestOptions(RequestOptions)}, {@link, +   * #setDefaultRequestOptions(RequestOptions)} and {@link, +   * #applyDefaultRequestOptions(RequestOptions)}., +   *, +   * <p>Subsequent calls to {@link #applyDefaultRequestOptions(RequestOptions)} will not mutate, +   * the {@link RequestOptions} provided here. Instead the manager will create a clone of these, +   * options and mutate the clone., +   *, +   * @see #applyDefaultRequestOptions(RequestOptions), +   *, +   * @return This request manager., +   */, +  public RequestManager setDefaultRequestOptions(RequestOptions requestOptions) {, +    this.defaultRequestOptions = requestOptions;, +    this.requestOptions = requestOptions;, +    return this;, +  }, +, +  /**, +  BaseRequestOptions<?> getDefaultRequestOptions() {, +    return requestOptions;, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +import android.support.annotation.NonNull;, +import com.bumptech.glide.request.BaseRequestOptions;, +  @NonNull, +  private BaseRequestOptions<?> defaultRequestOptions;, +  @NonNull, +  private BaseRequestOptions<?> requestOptions;, +, +    defaultRequestOptions = this.context.getDefaultRequestOptions();, +    requestOptions = defaultRequestOptions;, +, +   * Updates the default {@link RequestOptions} for all loads started with this request manager, +   * with the given {@link RequestOptions}., +   *, +   * <p>The {@link RequestOptions} provided here are applied on top of those provided via {@link, +   * GlideBuilder#setDefaultRequestOptions(RequestOptions)}. If there are conflicts, the options, +   * applied here will win. Note that this method does not mutate options provided to, +   * {@link GlideBuilder#setDefaultRequestOptions(RequestOptions)}., +   *, +   * <p>Multiple sets of options can be applied. If there are conflicts the last {@link, +   * RequestOptions} applied will win., +   *, +   * <p>The modified options will only be applied to loads started after this method is called., +   *, +   * @see RequestBuilder#apply(BaseRequestOptions), +   *, +   * @return This request manager., +   */, +  public RequestManager applyDefaultRequestOptions(RequestOptions requestOptions) {, +    BaseRequestOptions<?> toMutate = this.requestOptions == defaultRequestOptions, +        ? this.requestOptions.clone() : this.defaultRequestOptions;, +    this.requestOptions = toMutate.apply(requestOptions);, +    return this;, +  }, +, +  /**, +   * Replaces the default {@link RequestOptions} for all loads started with this request manager, +   * with the given {@link RequestOptions}., +   *]