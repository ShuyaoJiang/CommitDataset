[+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java, +import android.support.annotation.NonNull;, +      public void addListener(@NonNull LifecycleListener listener) {, +      public void removeListener(@NonNull LifecycleListener listener) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java, +import android.support.annotation.NonNull;, +      public void addListener(@NonNull LifecycleListener listener) {, +      public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  void track(@NonNull Target<?> target, @NonNull Request request) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java, +import android.support.annotation.NonNull;, +      public void addListener(@NonNull LifecycleListener listener) {, +      public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  void track(@NonNull Target<?> target, @NonNull Request request) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java, +import android.support.annotation.NonNull;, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java, +import android.support.annotation.NonNull;, +      public void addListener(@NonNull LifecycleListener listener) {, +      public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  void track(@NonNull Target<?> target, @NonNull Request request) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java, +import android.support.annotation.NonNull;, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ApplicationLifecycle.java, +import android.support.annotation.NonNull;, +, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java, +import android.support.annotation.NonNull;, +      public void addListener(@NonNull LifecycleListener listener) {, +      public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  void track(@NonNull Target<?> target, @NonNull Request request) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java, +import android.support.annotation.NonNull;, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ApplicationLifecycle.java, +import android.support.annotation.NonNull;, +, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +import android.support.annotation.NonNull;, +    public void onReceive(@NonNull Context context, Intent intent) {, +  DefaultConnectivityMonitor(@NonNull Context context, @NonNull ConnectivityListener listener) {, +  boolean isConnected(@NonNull Context context) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java, +import android.support.annotation.NonNull;, +      public void addListener(@NonNull LifecycleListener listener) {, +      public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  void track(@NonNull Target<?> target, @NonNull Request request) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java, +import android.support.annotation.NonNull;, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ApplicationLifecycle.java, +import android.support.annotation.NonNull;, +, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +import android.support.annotation.NonNull;, +    public void onReceive(@NonNull Context context, Intent intent) {, +  DefaultConnectivityMonitor(@NonNull Context context, @NonNull ConnectivityListener listener) {, +  boolean isConnected(@NonNull Context context) {, +++ b/library/src/main/java/com/bumptech/glide/manager/EmptyRequestManagerTreeNode.java, +import android.support.annotation.NonNull;, +    @NonNull, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java, +import android.support.annotation.NonNull;, +      public void addListener(@NonNull LifecycleListener listener) {, +      public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +  void track(@NonNull Target<?> target, @NonNull Request request) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java, +import android.support.annotation.NonNull;, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/ApplicationLifecycle.java, +import android.support.annotation.NonNull;, +, +  public void addListener(@NonNull LifecycleListener listener) {, +  public void removeListener(@NonNull LifecycleListener listener) {, +++ b/library/src/main/java/com/bumptech/glide/manager/DefaultConnectivityMonitor.java, +import android.support.annotation.NonNull;, +    public void onReceive(@NonNull Context context, Intent intent) {, +  DefaultConnectivityMonitor(@NonNull Context context, @NonNull ConnectivityListener listener) {, +  boolean isConnected(@NonNull Context context) {, +++ b/library/src/main/java/com/bumptech/glide/manager/EmptyRequestManagerTreeNode.java, +import android.support.annotation.NonNull;]