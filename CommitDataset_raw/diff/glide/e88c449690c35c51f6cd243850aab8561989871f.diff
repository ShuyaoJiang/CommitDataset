[+++ b/library/src/main/java/com/bumptech/glide/Glide.java, +   * <p>This method may be inefficient aways and is definitely inefficient for large hierarchies., +   * Consider memoizing the result after the View is attached or again, prefer the Activity and, +   * Fragment variants whenever possible., +   * <p>If the support {@link FragmentActivity} class is used, this method will only attempt to, +   * discover support {@link Fragment}s. Any non-support {@link android.app.Fragment}s attached, +   * to the {@link FragmentActivity} will be ignored., +   *, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +   * <p>This method may be inefficient aways and is definitely inefficient for large hierarchies., +   * Consider memoizing the result after the View is attached or again, prefer the Activity and, +   * Fragment variants whenever possible., +   * <p>If the support {@link FragmentActivity} class is used, this method will only attempt to, +   * discover support {@link Fragment}s. Any non-support {@link android.app.Fragment}s attached, +   * to the {@link FragmentActivity} will be ignored., +   *, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +    // Although the user might have non-support Fragments attached to FragmentActivity, searching, +    // for non-support Fragments is so expensive pre O and that should be rare enough that we, +    // prefer to just fall back to the Activity directly., +      return fragment != null ? get(fragment) : get(activity);]