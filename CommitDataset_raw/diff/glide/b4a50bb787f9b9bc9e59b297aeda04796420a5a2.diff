[+++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.junit.Assert.assertThat;, +            assertThat(loadedObjects, hasItem(object));, +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.junit.Assert.assertThat;, +            assertThat(loadedObjects, hasItem(object));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/MediaStoreThumbFetcherTest.java, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertThat;, +        assertThat(id, containsString(harness.uri.toString()));, +        assertThat(id, containsString(harness.mimeType));, +        assertThat(id, containsString(String.valueOf(harness.dateModified)));, +        assertThat(id, containsString(String.valueOf(harness.orientation)));, +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.junit.Assert.assertThat;, +            assertThat(loadedObjects, hasItem(object));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/MediaStoreThumbFetcherTest.java, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertThat;, +        assertThat(id, containsString(harness.uri.toString()));, +        assertThat(id, containsString(harness.mimeType));, +        assertThat(id, containsString(String.valueOf(harness.dateModified)));, +        assertThat(id, containsString(String.valueOf(harness.orientation)));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineResourceTest.java, +import static org.junit.Assert.fail;, +                fail("Failed to receive expected IllegalThreadStateException");, +                fail("Failed to receive expected IllegalThreadStateException");, +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.junit.Assert.assertThat;, +            assertThat(loadedObjects, hasItem(object));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/MediaStoreThumbFetcherTest.java, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertThat;, +        assertThat(id, containsString(harness.uri.toString()));, +        assertThat(id, containsString(harness.mimeType));, +        assertThat(id, containsString(String.valueOf(harness.dateModified)));, +        assertThat(id, containsString(String.valueOf(harness.orientation)));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineResourceTest.java, +import static org.junit.Assert.fail;, +                fail("Failed to receive expected IllegalThreadStateException");, +                fail("Failed to receive expected IllegalThreadStateException");, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.hamcrest.CoreMatchers.not;, +import static org.junit.Assert.assertThat;, +        assertThat(harness.runners.keySet(), hasItem(harness.cacheKey));, +        assertThat(harness.activeResources.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.runners.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.activeResources.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.runners.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.activeResources.keySet(), not(hasItem(harness.cacheKey)));, +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.junit.Assert.assertThat;, +            assertThat(loadedObjects, hasItem(object));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/MediaStoreThumbFetcherTest.java, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertThat;, +        assertThat(id, containsString(harness.uri.toString()));, +        assertThat(id, containsString(harness.mimeType));, +        assertThat(id, containsString(String.valueOf(harness.dateModified)));, +        assertThat(id, containsString(String.valueOf(harness.orientation)));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineResourceTest.java, +import static org.junit.Assert.fail;, +                fail("Failed to receive expected IllegalThreadStateException");, +                fail("Failed to receive expected IllegalThreadStateException");, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.hamcrest.CoreMatchers.not;, +import static org.junit.Assert.assertThat;, +        assertThat(harness.runners.keySet(), hasItem(harness.cacheKey));, +        assertThat(harness.activeResources.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.runners.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.activeResources.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.runners.keySet(), not(hasItem(harness.cacheKey)));, +        assertThat(harness.activeResources.keySet(), not(hasItem(harness.cacheKey)));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/OriginalEngineKeyTest.java, +import static org.junit.Assert.assertArrayEquals;, +        assertArrayEquals(firstBytes, secondBytes);, +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static org.hamcrest.CoreMatchers.hasItem;, +import static org.junit.Assert.assertThat;, +            assertThat(loadedObjects, hasItem(object));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/MediaStoreThumbFetcherTest.java, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertThat;, +        assertThat(id, containsString(harness.uri.toString()));, +        assertThat(id, containsString(harness.mimeType));, +        assertThat(id, containsString(String.valueOf(harness.dateModified)));, +        assertThat(id, containsString(String.valueOf(harness.orientation)));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineResourceTest.java, +import static org.junit.Assert.fail;, +                fail("Failed to receive expected IllegalThreadStateException");, +                fail("Failed to receive expected IllegalThreadStateException");, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +import static org.hamcrest.CoreMatchers.hasItem;]