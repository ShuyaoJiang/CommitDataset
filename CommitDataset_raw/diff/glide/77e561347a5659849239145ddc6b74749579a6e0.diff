[+++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/LruBitmapPool.java, +import java.util.HashMap;, +import java.util.LinkedList;, +import java.util.Map;, +import java.util.Queue;, +        pool.put(bitmap);, +, +        final Bitmap result = pool.get(width, height);, +        private final Map<Key, LinkedEntry> keyToEntry = new HashMap<Key, LinkedEntry>();, +        private final KeyPool keyPool = new KeyPool();, +        private static class KeyPool {, +            private static final int MAX_SIZE = 20;, +, +            private Queue<Key> keyPool = new LinkedList<Key>();, +, +            public Key get(int width, int height) {, +                Key result = keyPool.poll();, +                if (result == null) {, +                    result = new Key();, +                }, +                result.init(width, height);, +                return result;, +            }, +, +            public void offer(Key key) {, +                if (keyPool.size() <= MAX_SIZE) {, +                    keyPool.offer(key);, +                }, +            }, +        }, +, +        private static class Key {, +            private int width;, +            private int height;, +, +            public void init(int width, int height) {, +                this.width = width;, +                this.height = height;, +            }, +, +            @Override, +            public boolean equals(Object o) {, +                if (this == o) return true;, +                if (o == null || getClass() != o.getClass()) return false;, +, +                Key key = (Key) o;, +, +                if (height != key.height) return false;, +                if (width != key.width) return false;, +, +                return true;, +            }, +, +            @Override, +            public int hashCode() {, +                int result = width;, +                result = 31 * result + height;, +                return result;, +            }, +        }, +, +        public void put(Bitmap bitmap) {, +            final Key key = keyPool.get(bitmap.getWidth(), bitmap.getHeight());, +, +            } else {, +                keyPool.offer(key);, +, +        public Bitmap get(int width, int height) {, +            final Key key = keyPool.get(width, height);, +, +            } else {, +                keyPool.offer(key);, +, +                    keyPool.offer(last.key);, +            private final Key key;, +                this(null);, +            public LinkedEntry(Key key) {]