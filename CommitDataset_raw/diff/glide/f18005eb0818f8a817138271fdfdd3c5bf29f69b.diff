[+++ b/library/src/main/java/com/bumptech/glide/load/engine/executor/GlideExecutor.java, +  private static final String DEFAULT_SOURCE_EXECUTOR_NAME = "source";, +  private static final String DEFAULT_DISK_CACHE_EXECUTOR_NAME = "disk-cache";, +  private static final int DEFAULT_DISK_CACHE_EXECUTOR_THREADS = 1;, +  // Public API., +  @SuppressWarnings("unused"), +  // Public API., +  @SuppressWarnings("WeakerAccess"), +  public static GlideExecutor newDiskCacheExecutor(, +      int threadCount, String name, UncaughtThrowableStrategy uncaughtThrowableStrategy) {, +    return new GlideExecutor(, +        new ThreadPoolExecutor(, +  // Public API., +  @SuppressWarnings("unused"), +        calculateBestThreadCount(),, +        DEFAULT_SOURCE_EXECUTOR_NAME,, +  // Public API., +  @SuppressWarnings("WeakerAccess"), +    return new GlideExecutor(, +        new ThreadPoolExecutor(, +    return new GlideExecutor(, +        new ThreadPoolExecutor(, +  public void execute(@NonNull Runnable command) {, +  public Future<?> submit(@NonNull Runnable task) {, +  public <T> Future<T> submit(@NonNull Runnable task, T result) {, +  public <T> Future<T> submit(@NonNull Callable<T> task) {, +  // Public API., +  @SuppressWarnings("WeakerAccess"), +      bestThreadCount =, +          Math.min(MAXIMUM_AUTOMATIC_THREAD_COUNT, RuntimeCompat.availableProcessors());, +    // Public API., +    @SuppressWarnings("unused"), +    // Public API., +    @SuppressWarnings("unused")]