[+++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java, +import com.bumptech.glide.DrawableRequestBuilder;, +    private static final String THUMBNAIL_KEY = "thumbnail";, +    private boolean thumbnail;, +    public static FlickrPhotoGrid newInstance(int size, int preloadCount, boolean thumbnail) {, +        args.putBoolean(THUMBNAIL_KEY, thumbnail);, +        thumbnail = args.getBoolean(THUMBNAIL_KEY);, +            DrawableRequestBuilder<Photo> request = Glide.with(FlickrPhotoGrid.this), +            if (thumbnail) {, +                request.override(Api.SQUARE_THUMB_SIZE, Api.SQUARE_THUMB_SIZE), +                        .diskCacheStrategy(DiskCacheStrategy.SOURCE);, +            } else {, +                request.centerCrop();, +            }, +            return request;, +            DrawableRequestBuilder<Photo> request = Glide.with(FlickrPhotoGrid.this), +                    .centerCrop(), +                    .animate(R.anim.fade_in);, +, +            if (thumbnail) {, +                request.thumbnail(Glide.with(FlickrPhotoGrid.this), +                        .diskCacheStrategy(DiskCacheStrategy.SOURCE), +                );, +            }, +, +            request.into(imageView);, +++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java, +import com.bumptech.glide.DrawableRequestBuilder;, +    private static final String THUMBNAIL_KEY = "thumbnail";, +    private boolean thumbnail;, +    public static FlickrPhotoGrid newInstance(int size, int preloadCount, boolean thumbnail) {, +        args.putBoolean(THUMBNAIL_KEY, thumbnail);, +        thumbnail = args.getBoolean(THUMBNAIL_KEY);, +            DrawableRequestBuilder<Photo> request = Glide.with(FlickrPhotoGrid.this), +            if (thumbnail) {, +                request.override(Api.SQUARE_THUMB_SIZE, Api.SQUARE_THUMB_SIZE), +                        .diskCacheStrategy(DiskCacheStrategy.SOURCE);, +            } else {, +                request.centerCrop();, +            }, +            return request;, +            DrawableRequestBuilder<Photo> request = Glide.with(FlickrPhotoGrid.this), +                    .centerCrop(), +                    .animate(R.anim.fade_in);, +, +            if (thumbnail) {, +                request.thumbnail(Glide.with(FlickrPhotoGrid.this), +                        .diskCacheStrategy(DiskCacheStrategy.SOURCE), +                );, +            }, +, +            request.into(imageView);, +++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java, +                return FlickrPhotoGrid.newInstance(pageSize, 30, false /*thumbnail*/);, +                return FlickrPhotoGrid.newInstance(pageSize, 10, true /*thumbnail*/);]