[+++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestBuilderGenerator.java, +import java.util.Collections;, +import javax.annotation.Nullable;, +  private ClassName requestOptionsClassName;, +  TypeSpec generate(@Nullable TypeSpec generatedOptions) {, +    if (generatedOptions != null) {, +      requestOptionsClassName =, +              RequestOptionsGenerator.GENERATED_REQUEST_OPTIONS_PACKAGE_NAME,, +              generatedOptions.name);, +    } else {, +      requestOptionsClassName =, +          ClassName.get(, +              RequestOptionsGenerator.REQUEST_OPTIONS_PACKAGE_NAME,, +              RequestBuilderGenerator.BASE_REQUEST_OPTIONS_SIMPLE_NAME);, +    }, +      @Nullable final TypeSpec generatedOptions) {, +    if (generatedOptions == null) {, +      return Collections.emptyList();, +    }, +            .equals(requestOptionMethod.toString());, +        .addJavadoc(, +            processorUtil.generateSeeMethodJavadoc(requestOptionsClassName, requestOptionMethod)), +            "if (getMutableOptions() instanceof $T)", requestOptionsClassName), +            requestOptionsClassName), +            requestOptionsClassName)), +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestBuilderGenerator.java, +import java.util.Collections;, +import javax.annotation.Nullable;, +  private ClassName requestOptionsClassName;, +  TypeSpec generate(@Nullable TypeSpec generatedOptions) {, +    if (generatedOptions != null) {, +      requestOptionsClassName =, +              RequestOptionsGenerator.GENERATED_REQUEST_OPTIONS_PACKAGE_NAME,, +              generatedOptions.name);, +    } else {, +      requestOptionsClassName =, +          ClassName.get(, +              RequestOptionsGenerator.REQUEST_OPTIONS_PACKAGE_NAME,, +              RequestBuilderGenerator.BASE_REQUEST_OPTIONS_SIMPLE_NAME);, +    }, +      @Nullable final TypeSpec generatedOptions) {, +    if (generatedOptions == null) {, +      return Collections.emptyList();, +    }, +            .equals(requestOptionMethod.toString());, +        .addJavadoc(, +            processorUtil.generateSeeMethodJavadoc(requestOptionsClassName, requestOptionMethod)), +            "if (getMutableOptions() instanceof $T)", requestOptionsClassName), +            requestOptionsClassName), +            requestOptionsClassName)), +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerGenerator.java, +import com.google.common.base.Predicates;, +import java.util.Collections;, +  TypeSpec generate(, +      @Nullable TypeSpec requestOptions, TypeSpec requestBuilder, Set<String> glideExtensions) {, +         .addMethods(, +             FluentIterable.from(, +                 Collections.singletonList(generateOverrideSetRequestOptions(requestOptions))), +                 .filter(Predicates.<MethodSpec>notNull())), +  @Nullable, +  private MethodSpec generateOverrideSetRequestOptions(@Nullable TypeSpec generatedRequestOptions) {, +    if (generatedRequestOptions == null) {, +      return null;, +    }, +, +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestBuilderGenerator.java, +import java.util.Collections;, +import javax.annotation.Nullable;, +  private ClassName requestOptionsClassName;, +  TypeSpec generate(@Nullable TypeSpec generatedOptions) {, +    if (generatedOptions != null) {, +      requestOptionsClassName =, +              RequestOptionsGenerator.GENERATED_REQUEST_OPTIONS_PACKAGE_NAME,, +              generatedOptions.name);, +    } else {, +      requestOptionsClassName =, +          ClassName.get(, +              RequestOptionsGenerator.REQUEST_OPTIONS_PACKAGE_NAME,, +              RequestBuilderGenerator.BASE_REQUEST_OPTIONS_SIMPLE_NAME);, +    }, +      @Nullable final TypeSpec generatedOptions) {, +    if (generatedOptions == null) {, +      return Collections.emptyList();, +    }, +            .equals(requestOptionMethod.toString());, +        .addJavadoc(, +            processorUtil.generateSeeMethodJavadoc(requestOptionsClassName, requestOptionMethod)), +            "if (getMutableOptions() instanceof $T)", requestOptionsClassName), +            requestOptionsClassName), +            requestOptionsClassName)), +++ b/annotation/compiler/src/main/java/com/bumptech/glide/annotation/compiler/RequestManagerGenerator.java, +import com.google.common.base.Predicates;, +import java.util.Collections;, +  TypeSpec generate(, +      @Nullable TypeSpec requestOptions, TypeSpec requestBuilder, Set<String> glideExtensions) {, +         .addMethods(, +             FluentIterable.from(, +                 Collections.singletonList(generateOverrideSetRequestOptions(requestOptions))), +                 .filter(Predicates.<MethodSpec>notNull())), +  @Nullable]