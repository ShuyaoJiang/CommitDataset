[+++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   *, +   * <p>On pre-KitKat devices, this is equivalent to {@link #AT_MOST} because only power of, +   * two downsampling can be used., +   *, +   * <p>On pre-KitKat devices, this is equivalent to {@link #AT_LEAST} because only power of, +   * two downsampling can be used., +   * <p>The float scaling factor will only be applied on KitKat+. Prior to KitKat, only the power, +   * of two downsampling will be applied., +   *, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   *, +   * <p>On pre-KitKat devices, this is equivalent to {@link #AT_MOST} because only power of, +   * two downsampling can be used., +   *, +   * <p>On pre-KitKat devices, this is equivalent to {@link #AT_LEAST} because only power of, +   * two downsampling can be used., +   * <p>The float scaling factor will only be applied on KitKat+. Prior to KitKat, only the power, +   * of two downsampling will be applied., +   *, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +    // Density scaling is only supported if inBitmap is null prior to KitKat. Avoid setting, +    // densities here so we calculate the final Bitmap size correctly., +    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {, +    }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   *, +   * <p>On pre-KitKat devices, this is equivalent to {@link #AT_MOST} because only power of, +   * two downsampling can be used., +   *, +   * <p>On pre-KitKat devices, this is equivalent to {@link #AT_LEAST} because only power of, +   * two downsampling can be used., +   * <p>The float scaling factor will only be applied on KitKat+. Prior to KitKat, only the power, +   * of two downsampling will be applied., +   *, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +    // Density scaling is only supported if inBitmap is null prior to KitKat. Avoid setting, +    // densities here so we calculate the final Bitmap size correctly., +    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {, +    }, +++ b/library/src/test/java/com/bumptech/glide/load/resource/bitmap/DownsamplerTest.java, +import com.bumptech.glide.load.resource.bitmap.DownsamplerTest.AllocationSizeBitmap;, +import org.robolectric.annotation.Implementation;, +import org.robolectric.annotation.Implements;, +import org.robolectric.shadows.ShadowBitmap;, +@Config(manifest = Config.NONE, sdk = 19, shadows = AllocationSizeBitmap.class), +, +  // Robolectric doesn't implement getAllocationByteCount correctly., +  @Implements(Bitmap.class), +  public static class AllocationSizeBitmap extends ShadowBitmap {, +, +    @Implementation, +    public int getAllocationByteCount() {, +      return getWidth() * getHeight() * (getConfig() == Bitmap.Config.ARGB_8888 ? 4 : 2);, +    }, +  }]