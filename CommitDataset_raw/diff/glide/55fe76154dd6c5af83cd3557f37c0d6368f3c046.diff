[+++ b/README.md, +    compile('com.github.bumptech.glide:library:3.3.0a-SNAPSHOT:@aar') {, +        transitive = true, +        changing = true, +    }, +    compile 'com.android.support:support-v4:19.0.0', +<dependency>, +	<groupId>com.google.android</groupId>, +	<artifactId>support-v4</artifactId>, +	<version>r7</version>, +</dependency>, +++ b/README.md, +    compile('com.github.bumptech.glide:library:3.3.0a-SNAPSHOT:@aar') {, +        transitive = true, +        changing = true, +    }, +    compile 'com.android.support:support-v4:19.0.0', +<dependency>, +	<groupId>com.google.android</groupId>, +	<artifactId>support-v4</artifactId>, +	<version>r7</version>, +</dependency>, +++ b/build.gradle, +evaluationDependsOn(":third_party:disklrucache"), +// Currently the only excluded project is the :integration:volley project., +def androidProjects = [':third_party:gif_decoder', ':library'].collect { project(it) }, +def javaProjects = [':third_party:disklrucache'].collect { project(it) }, +def allProjects = androidProjects + javaProjects, +def releaseVariantAndroidProjects = androidProjects.collect {, +    it.android.libraryVariants.findAll { variant ->, +        variant.buildType.name.equalsIgnoreCase("release"), +    }, +}, +, +    def javadocTask = task("${variant.name}Javadoc", type: Javadoc) {, +        classifier = 'javadoc', +        source += javaProjects.collect { it.sourceSets.main.allJava }, +        classpath = files(childEquivalentChildVariants.collect {, +            files(it.javaCompile.classpath.files, androidJar), +        }), +        classpath += javaProjects.collect { files(it.configurations.compile) }, +    javadocTask.dependsOn("clean${variant.name.capitalize()}Javadoc"), +/** Build a fat jar of all internal dependencies */, +def releaseJarOut = 'bin', +    from files(, +            releaseVariantAndroidProjects.collect { variant ->, +                variant.javaCompile.destinationDir, +            }, +    ), +    exclude "**/R.class", +    exclude "**/BuildConfig.class", +    from files(javaProjects.collect { it.sourceSets.main.output }), +, +    destinationDir = file(releaseJarOut), +task cleanReleaseJar(type: Delete) {, +    delete releaseJarOut, +releaseJar.dependsOn(cleanReleaseJar), +allProjects.each { project ->, +    releaseJar.dependsOn(project.tasks.getByName("checkstyle")), +    releaseJar.dependsOn(project.build), +}, +++ b/README.md, +    compile('com.github.bumptech.glide:library:3.3.0a-SNAPSHOT:@aar') {, +        transitive = true, +        changing = true, +    }, +    compile 'com.android.support:support-v4:19.0.0', +<dependency>, +	<groupId>com.google.android</groupId>, +	<artifactId>support-v4</artifactId>, +	<version>r7</version>, +</dependency>, +++ b/build.gradle, +evaluationDependsOn(":third_party:disklrucache"), +// Currently the only excluded project is the :integration:volley project., +def androidProjects = [':third_party:gif_decoder', ':library'].collect { project(it) }, +def javaProjects = [':third_party:disklrucache'].collect { project(it) }, +def allProjects = androidProjects + javaProjects, +def releaseVariantAndroidProjects = androidProjects.collect {, +    it.android.libraryVariants.findAll { variant ->, +        variant.buildType.name.equalsIgnoreCase("release"), +    }, +}, +, +    def javadocTask = task("${variant.name}Javadoc", type: Javadoc) {, +        classifier = 'javadoc', +        source += javaProjects.collect { it.sourceSets.main.allJava }, +        classpath = files(childEquivalentChildVariants.collect {, +            files(it.javaCompile.classpath.files, androidJar), +        }), +        classpath += javaProjects.collect { files(it.configurations.compile) }, +    javadocTask.dependsOn("clean${variant.name.capitalize()}Javadoc"), +/** Build a fat jar of all internal dependencies */, +def releaseJarOut = 'bin', +    from files(, +            releaseVariantAndroidProjects.collect { variant ->, +                variant.javaCompile.destinationDir, +            }, +    ), +    exclude "**/R.class"]