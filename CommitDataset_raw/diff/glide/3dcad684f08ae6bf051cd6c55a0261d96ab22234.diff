[+++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java, +package com.bumptech.glide.integration.volley;, +, +import com.android.volley.Request;, +import com.android.volley.Request.Priority;, +, +import java.io.InputStream;, +, +/**, + * Used to construct a custom Volley request, such as for authentication header decoration., + */, +public interface VolleyRequestFactory {, +, +    /**, +     * Returns a Volley request for the given image url. The given future should be set as a, +     * listener or called when the request completes., +     */, +    Request<byte[]> create(String url, VolleyRequestFuture<InputStream> future, Priority priority);, +, +}, +++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java, +package com.bumptech.glide.integration.volley;, +, +import com.android.volley.Request;, +import com.android.volley.Request.Priority;, +, +import java.io.InputStream;, +, +/**, + * Used to construct a custom Volley request, such as for authentication header decoration., + */, +public interface VolleyRequestFactory {, +, +    /**, +     * Returns a Volley request for the given image url. The given future should be set as a, +     * listener or called when the request completes., +     */, +    Request<byte[]> create(String url, VolleyRequestFuture<InputStream> future, Priority priority);, +, +}, +++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java, +    public static final VolleyRequestFactory DEFAULT_REQUEST_FACTORY = new VolleyRequestFactory() {, +, +        @Override, +        public Request<byte[]> create(, +                    String url, VolleyRequestFuture<InputStream> future,, +                    Request.Priority priority) {, +            return new GlideRequest(url, future, priority);, +        }, +, +    };, +, +    private final VolleyRequestFactory requestFactory;, +        this(requestQueue, url, requestFuture, DEFAULT_REQUEST_FACTORY);, +    }, +, +    public VolleyStreamFetcher(RequestQueue requestQueue, GlideUrl url,, +            VolleyRequestFuture<InputStream> requestFuture, VolleyRequestFactory requestFactory) {, +        this.requestFactory = requestFactory;, +        Request<byte[]> request = requestFactory.create(, +                stringUrl, requestFuture, glideToVolleyPriority(priority));, +        private final Priority priority;, +++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java, +package com.bumptech.glide.integration.volley;, +, +import com.android.volley.Request;, +import com.android.volley.Request.Priority;, +, +import java.io.InputStream;, +, +/**, + * Used to construct a custom Volley request, such as for authentication header decoration., + */, +public interface VolleyRequestFactory {, +, +    /**, +     * Returns a Volley request for the given image url. The given future should be set as a, +     * listener or called when the request completes., +     */, +    Request<byte[]> create(String url, VolleyRequestFuture<InputStream> future, Priority priority);, +, +}, +++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java, +    public static final VolleyRequestFactory DEFAULT_REQUEST_FACTORY = new VolleyRequestFactory() {, +, +        @Override, +        public Request<byte[]> create(, +                    String url, VolleyRequestFuture<InputStream> future,, +                    Request.Priority priority) {, +            return new GlideRequest(url, future, priority);, +        }, +, +    };, +, +    private final VolleyRequestFactory requestFactory;, +        this(requestQueue, url, requestFuture, DEFAULT_REQUEST_FACTORY);, +    }, +, +    public VolleyStreamFetcher(RequestQueue requestQueue, GlideUrl url,, +            VolleyRequestFuture<InputStream> requestFuture, VolleyRequestFactory requestFactory) {]