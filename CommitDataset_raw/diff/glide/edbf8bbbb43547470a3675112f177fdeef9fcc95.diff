[+++ b/library/src/main/java/com/bumptech/glide/load/engine/DiskCacheStrategy.java, +public abstract class DiskCacheStrategy {, +  public static final DiskCacheStrategy ALL = new DiskCacheStrategy() {, +, +    @Override, +    public boolean decodeCachedResource() {, +      return true;, +    }, +, +    @Override, +    public boolean decodeCachedData() {, +      return true;, +    }, +  };, +, +  public static final DiskCacheStrategy NONE = new DiskCacheStrategy() {, +, +    @Override, +    public boolean decodeCachedResource() {, +      return false;, +    }, +, +    @Override, +    public boolean decodeCachedData() {, +      return false;, +    }, +  };, +, +  public static final DiskCacheStrategy DATA = new DiskCacheStrategy() {, +, +    @Override, +    public boolean decodeCachedResource() {, +      return false;, +    }, +, +    @Override, +    public boolean decodeCachedData() {, +      return true;, +    }, +  };, +, +  public static final DiskCacheStrategy RESOURCE = new DiskCacheStrategy() {, +      return true;, +, +    @Override, +    public boolean decodeCachedResource() {, +      return true;, +    }, +, +    @Override, +    public boolean decodeCachedData() {, +      return false;, +    }, +  };, +, +  public static final DiskCacheStrategy AUTOMATIC = new DiskCacheStrategy() {, +    @Override, +    public boolean decodeCachedResource() {, +      return true;, +    @Override, +    public boolean decodeCachedData() {, +      return true;, +    }, +  };, +, +   *, +   * @param dataSource Indicates where the data was originally retrieved., +   *, +   * @param isFromAlternateCacheKey {@code true} if the resource we've decoded was loaded using an, +   *                                alternative, rather than the primary, cache key., +   * @param dataSource Indicates where the data used to decode the resource was originally, +   *                   retrieved., +   * @param encodeStrategy The {@link EncodeStrategy} the {@link, +   * com.bumptech.glide.load.ResourceEncoder} will use to encode the resource., +  public abstract boolean decodeCachedResource();, +  public abstract boolean decodeCachedData();]