[+++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +    private static class MockTarget implements Target<Object> {, +        public void onResourceReady(Resource<Object> resource) {, +++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +    private static class MockTarget implements Target<Object> {, +        public void onResourceReady(Resource<Object> resource) {, +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.request.target.BitmapImageViewTarget;, +    public <Y extends Target<Bitmap>> Y into(Y target) {, +     * @return The {@link BitmapImageViewTarget} used to wrap the given {@link ImageView}., +    public BitmapImageViewTarget into(ImageView view) {, +        return into(new BitmapImageViewTarget(view));, +    private Request buildRequest(Target<Bitmap> target) {, +    private Request buildBitmapRequest(Target<Bitmap> target, float sizeMultiplier, Priority priority,, +    private <Z> Request buildBitmapRequestForType(Target<Bitmap> target,, +++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +    private static class MockTarget implements Target<Object> {, +        public void onResourceReady(Resource<Object> resource) {, +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.request.target.BitmapImageViewTarget;, +    public <Y extends Target<Bitmap>> Y into(Y target) {, +     * @return The {@link BitmapImageViewTarget} used to wrap the given {@link ImageView}., +    public BitmapImageViewTarget into(ImageView view) {, +        return into(new BitmapImageViewTarget(view));, +    private Request buildRequest(Target<Bitmap> target) {, +    private Request buildBitmapRequest(Target<Bitmap> target, float sizeMultiplier, Priority priority,, +    private <Z> Request buildBitmapRequestForType(Target<Bitmap> target,, +++ b/library/src/com/bumptech/glide/Glide.java, +    private static class ClearTarget extends ViewTarget<View, Object> {, +        public void onResourceReady(Resource<Object> resource) { }, +++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +    private static class MockTarget implements Target<Object> {, +        public void onResourceReady(Resource<Object> resource) {, +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.request.target.BitmapImageViewTarget;, +    public <Y extends Target<Bitmap>> Y into(Y target) {, +     * @return The {@link BitmapImageViewTarget} used to wrap the given {@link ImageView}., +    public BitmapImageViewTarget into(ImageView view) {, +        return into(new BitmapImageViewTarget(view));, +    private Request buildRequest(Target<Bitmap> target) {, +    private Request buildBitmapRequest(Target<Bitmap> target, float sizeMultiplier, Priority priority,, +    private <Z> Request buildBitmapRequestForType(Target<Bitmap> target,, +++ b/library/src/com/bumptech/glide/Glide.java, +    private static class ClearTarget extends ViewTarget<View, Object> {, +        public void onResourceReady(Resource<Object> resource) { }, +++ b/library/src/com/bumptech/glide/ListPreloader.java, +        public void onResourceReady(Resource resource) {, +        }, +++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +        verify(target).onResourceReady(any(Resource.class));, +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +    private static class MockTarget implements Target<Object> {, +        public void onResourceReady(Resource<Object> resource) {, +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java]