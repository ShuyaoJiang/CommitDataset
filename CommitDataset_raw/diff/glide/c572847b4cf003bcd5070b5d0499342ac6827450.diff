[+++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.loader.transformation.CenterCrop;, +import com.bumptech.glide.loader.transformation.FitCenter;, +import com.bumptech.glide.loader.transformation.TransformationLoader;, +, +        private Transformation transformation = null;, +        private TransformationLoader<T> transformationLoader = null;, +            transformationLoader = null;, +            transformationLoader = null;, +            transformationLoader = null;, +            transformationLoader = null;, +        public Request<T> transform(final Transformation transformation) {, +            transformationLoader = null;, +, +            return this;, +        }, +, +        public Request<T> transform(TransformationLoader<T> transformationLoader) {, +            this.transformationLoader = transformationLoader;, +            transformation = null;, +            downsampler = Downsampler.AT_LEAST;, +            transformationLoader = getFinalTransformationLoader();, +                    .setImageLoader(new ImageManagerLoader(context, downsampler)), +                    .setTransformationLoader(transformationLoader);, +        private TransformationLoader<T> getFinalTransformationLoader() {, +            if (transformationLoader != null) {, +                return transformationLoader;, +            } else {, +                return new TransformationLoader<T>() {, +                    @Override, +                    public Transformation getTransformation(T model) {, +                        return transformation;, +                    }, +                };, +            }, +        }, +, +        private String getFinalTransformationId() {, +            if (transformationLoader != null) {, +                return transformationLoader.getClass().toString();, +            } else {, +                return transformation.getId();, +            }, +        }, +, +, +                transformationId = request.getFinalTransformationId();, +++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.loader.transformation.CenterCrop;, +import com.bumptech.glide.loader.transformation.FitCenter;, +import com.bumptech.glide.loader.transformation.TransformationLoader;, +, +        private Transformation transformation = null;, +        private TransformationLoader<T> transformationLoader = null;, +            transformationLoader = null;, +            transformationLoader = null;, +            transformationLoader = null;, +            transformationLoader = null;, +        public Request<T> transform(final Transformation transformation) {, +            transformationLoader = null;, +, +            return this;, +        }, +, +        public Request<T> transform(TransformationLoader<T> transformationLoader) {, +            this.transformationLoader = transformationLoader;, +            transformation = null;, +            downsampler = Downsampler.AT_LEAST;, +            transformationLoader = getFinalTransformationLoader();, +                    .setImageLoader(new ImageManagerLoader(context, downsampler)), +                    .setTransformationLoader(transformationLoader);, +        private TransformationLoader<T> getFinalTransformationLoader() {, +            if (transformationLoader != null) {, +                return transformationLoader;, +            } else {, +                return new TransformationLoader<T>() {, +                    @Override, +                    public Transformation getTransformation(T model) {, +                        return transformation;, +                    }, +                };, +            }, +        }, +, +        private String getFinalTransformationId() {, +            if (transformationLoader != null) {, +                return transformationLoader.getClass().toString();, +            } else {, +                return transformation.getId();, +            }, +        }, +, +, +                transformationId = request.getFinalTransformationId();, +++ /dev/null, +++ b/library/src/com/bumptech/glide/Glide.java, +import com.bumptech.glide.loader.transformation.CenterCrop;, +import com.bumptech.glide.loader.transformation.FitCenter;, +import com.bumptech.glide.loader.transformation.TransformationLoader;, +]