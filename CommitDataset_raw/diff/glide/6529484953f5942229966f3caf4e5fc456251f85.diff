[+++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +    // We must call isFirstReadyResource before setting status., +    boolean isFirstResource = isFirstReadyResource();, +        loadedFromMemoryCache, isFirstResource)) {, +          animationFactory.build(loadedFromMemoryCache, isFirstResource);, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +    // We must call isFirstReadyResource before setting status., +    boolean isFirstResource = isFirstReadyResource();, +        loadedFromMemoryCache, isFirstResource)) {, +          animationFactory.build(loadedFromMemoryCache, isFirstResource);, +++ b/library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactory.java, +  private DrawableCrossFadeTransition firstResourceTransition;, +  private DrawableCrossFadeTransition secondResourceTransition;, +    this(new ViewAnimationFactory<Drawable>(, +        new DefaultViewTransitionAnimationFactory(duration)), duration);, +    } else if (isFirstResource) {, +      return getFirstResourceTransition();, +    } else {, +      return getSecondResourceTransition();, +    }, +, +  private Transition<Drawable> getFirstResourceTransition() {, +      if (firstResourceTransition == null) {, +          Transition<Drawable> defaultAnimation =, +              viewAnimationFactory.build(false /*isFromMemoryCache*/, true /*isFirstResource*/);, +          firstResourceTransition = new DrawableCrossFadeTransition(defaultAnimation, duration);, +      }, +      return firstResourceTransition;, +  private Transition<Drawable> getSecondResourceTransition() {, +      if (secondResourceTransition == null) {, +          Transition<Drawable> defaultAnimation =, +              viewAnimationFactory.build(false /*isFromMemoryCache*/, false /*isFirstResource*/);, +          secondResourceTransition = new DrawableCrossFadeTransition(defaultAnimation, duration);, +      }, +      return secondResourceTransition;, +    private final int duration;, +, +    DefaultViewTransitionAnimationFactory(int duration) {, +      this.duration = duration;, +    }, +, +      animation.setDuration(duration);, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +    // We must call isFirstReadyResource before setting status., +    boolean isFirstResource = isFirstReadyResource();, +        loadedFromMemoryCache, isFirstResource)) {, +          animationFactory.build(loadedFromMemoryCache, isFirstResource);, +++ b/library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactory.java, +  private DrawableCrossFadeTransition firstResourceTransition;, +  private DrawableCrossFadeTransition secondResourceTransition;, +    this(new ViewAnimationFactory<Drawable>(, +        new DefaultViewTransitionAnimationFactory(duration)), duration);, +    } else if (isFirstResource) {, +      return getFirstResourceTransition();, +    } else {, +      return getSecondResourceTransition();, +    }, +, +  private Transition<Drawable> getFirstResourceTransition() {, +      if (firstResourceTransition == null) {, +          Transition<Drawable> defaultAnimation =, +              viewAnimationFactory.build(false /*isFromMemoryCache*/, true /*isFirstResource*/);, +          firstResourceTransition = new DrawableCrossFadeTransition(defaultAnimation, duration);, +      }, +      return firstResourceTransition;, +  private Transition<Drawable> getSecondResourceTransition() {, +      if (secondResourceTransition == null) {, +          Transition<Drawable> defaultAnimation =, +              viewAnimationFactory.build(false /*isFromMemoryCache*/, false /*isFirstResource*/);, +          secondResourceTransition = new DrawableCrossFadeTransition(defaultAnimation, duration);, +      }, +      return secondResourceTransition;, +    private final int duration;, +, +    DefaultViewTransitionAnimationFactory(int duration) {, +      this.duration = duration;, +    }, +, +      animation.setDuration(duration);, +++ b/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java, +        .transition(withCrossFade(R.anim.fade_in, 150)), +        .apply(centerCropTransform(getActivity()));, +        .transition(withCrossFade(R.anim.fade_in, 150))]