[+++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor;, +import java.util.concurrent.ExecutorService;, +    private ExecutorService resizeService;, +    private ExecutorService diskCacheService;, +    public GlideBuilder setResizeService(ExecutorService service) {, +        this.resizeService = service;, +        return this;, +    }, +, +    public GlideBuilder setDiskCacheService(ExecutorService service) {, +        this.diskCacheService = service;, +        return this;, +    }, +, +        if (resizeService == null) {, +            final int cores = Math.max(1, Runtime.getRuntime().availableProcessors());, +            resizeService = new FifoPriorityThreadPoolExecutor(cores);, +        }, +        if (diskCacheService == null) {, +            diskCacheService = new FifoPriorityThreadPoolExecutor(1);, +        }, +, +            engine = new Engine(memoryCache, diskCache, resizeService, diskCacheService);, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor;, +import java.util.concurrent.ExecutorService;, +    private ExecutorService resizeService;, +    private ExecutorService diskCacheService;, +    public GlideBuilder setResizeService(ExecutorService service) {, +        this.resizeService = service;, +        return this;, +    }, +, +    public GlideBuilder setDiskCacheService(ExecutorService service) {, +        this.diskCacheService = service;, +        return this;, +    }, +, +        if (resizeService == null) {, +            final int cores = Math.max(1, Runtime.getRuntime().availableProcessors());, +            resizeService = new FifoPriorityThreadPoolExecutor(cores);, +        }, +        if (diskCacheService == null) {, +            diskCacheService = new FifoPriorityThreadPoolExecutor(1);, +        }, +, +            engine = new Engine(memoryCache, diskCache, resizeService, diskCacheService);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +import android.os.Handler;, +import android.os.Looper;, +import com.bumptech.glide.load.engine.cache.DiskCache;, +import java.util.concurrent.ExecutorService;, +    public Engine(MemoryCache memoryCache, DiskCache diskCache, ExecutorService resizeService,, +            ExecutorService diskCacheService) {, +        this(null, memoryCache, diskCache, resizeService, diskCacheService, null, null);, +    Engine(ResourceRunnerFactory factory, MemoryCache cache, DiskCache diskCache, ExecutorService resizeService,, +            ExecutorService diskCacheService, Map<Key, ResourceRunner> runners, KeyFactory keyFactory) {, +, +        if (keyFactory == null) {, +            keyFactory = new EngineKeyFactory();, +        }, +        if (runners == null) {, +            runners = new HashMap<Key, ResourceRunner>();, +        }, +        this.runners = runners;, +        if (factory == null) {, +            factory = new DefaultResourceRunnerFactory(cache, diskCache, new Handler(Looper.getMainLooper()),, +                    diskCacheService, resizeService);, +        }, +        this.factory = factory;, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor;, +import java.util.concurrent.ExecutorService;, +    private ExecutorService resizeService;, +    private ExecutorService diskCacheService;, +    public GlideBuilder setResizeService(ExecutorService service) {, +        this.resizeService = service;, +        return this;, +    }, +, +    public GlideBuilder setDiskCacheService(ExecutorService service) {, +        this.diskCacheService = service;, +        return this;, +    }, +, +        if (resizeService == null) {, +            final int cores = Math.max(1, Runtime.getRuntime().availableProcessors());, +            resizeService = new FifoPriorityThreadPoolExecutor(cores);, +        }, +        if (diskCacheService == null) {, +            diskCacheService = new FifoPriorityThreadPoolExecutor(1);, +        }, +, +            engine = new Engine(memoryCache, diskCache, resizeService, diskCacheService);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +import android.os.Handler;, +import android.os.Looper;, +import com.bumptech.glide.load.engine.cache.DiskCache;, +import java.util.concurrent.ExecutorService;]