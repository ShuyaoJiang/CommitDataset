[+++ b/library/src/main/java/com/bumptech/glide/Glide.java, +            if (!result.mkdirs() && (!result.exists() || !result.isDirectory())) {, +                throw new IllegalStateException("Cannot create cache directory structure for " + result);, +            }, +        register(int.class, ParcelFileDescriptor.class, new FileDescriptorResourceLoader.Factory());, +        register(int.class, InputStream.class, new StreamResourceLoader.Factory());, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +            if (!result.mkdirs() && (!result.exists() || !result.isDirectory())) {, +                throw new IllegalStateException("Cannot create cache directory structure for " + result);, +            }, +        register(int.class, ParcelFileDescriptor.class, new FileDescriptorResourceLoader.Factory());, +        register(int.class, InputStream.class, new StreamResourceLoader.Factory());, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +            return new GenericTypeRequest(model);, +            private GenericTypeRequest(A model) {, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +            if (!result.mkdirs() && (!result.exists() || !result.isDirectory())) {, +                throw new IllegalStateException("Cannot create cache directory structure for " + result);, +            }, +        register(int.class, ParcelFileDescriptor.class, new FileDescriptorResourceLoader.Factory());, +        register(int.class, InputStream.class, new StreamResourceLoader.Factory());, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +            return new GenericTypeRequest(model);, +            private GenericTypeRequest(A model) {, +++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +, +                @SuppressWarnings("deprecation") final int width = display.getWidth(), height = display.getHeight();, +                cb.onSizeReady(width, height);]