[+++ b/library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java, +                harness.onLowMemory();, +    public void testNonSupportFragmentCallsOnTrimMemory() {, +      RequestManagerHarness requestManagerHarness = new RequestManagerHarness();, +      int level = 100;, +      RequestManager requestManager = mock(RequestManager.class);, +      requestManagerHarness.setRequestManager(requestManager);, +      requestManagerHarness.onTrimMemory(level);, +      verify(requestManager).onTrimMemory(eq(level));, +    }, +, +    @Test, +    public void testOnLowMemoryCallOnNullRequestManagerDoesNotCrash() {, +        runTest(new TestCase() {, +            @Override, +            public void runTest(Harness harness) {, +                harness.onLowMemory();, +            }, +        });, +    }, +, +    @Test, +    public void testOnTrimMemoryCallOnNullRequestManagerDoesNotCrash() {, +        runTest(new TestCase() {, +            @Override, +            public void runTest(Harness harness) {, +                harness.onTrimMemory(100 /*level*/);, +            }, +        });, +    }, +, +    @Test, +        public void onLowMemory();, +, +        public void onTrimMemory(int level);, +        public void onLowMemory() {, +          fragment.onLowMemory();, +        }, +, +        @Override, +        public void onTrimMemory(int level) {, +          fragment.onTrimMemory(level);, +        public void onLowMemory() {, +          supportFragment.onLowMemory();, +        }, +, +        @Override, +        public void onTrimMemory(int level) {, +            // Do nothing., +++ b/library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java, +                harness.onLowMemory();, +    public void testNonSupportFragmentCallsOnTrimMemory() {, +      RequestManagerHarness requestManagerHarness = new RequestManagerHarness();, +      int level = 100;, +      RequestManager requestManager = mock(RequestManager.class);, +      requestManagerHarness.setRequestManager(requestManager);, +      requestManagerHarness.onTrimMemory(level);, +      verify(requestManager).onTrimMemory(eq(level));, +    }, +, +    @Test, +    public void testOnLowMemoryCallOnNullRequestManagerDoesNotCrash() {, +        runTest(new TestCase() {, +            @Override, +            public void runTest(Harness harness) {, +                harness.onLowMemory();, +            }, +        });, +    }, +, +    @Test, +    public void testOnTrimMemoryCallOnNullRequestManagerDoesNotCrash() {, +        runTest(new TestCase() {, +            @Override, +            public void runTest(Harness harness) {, +                harness.onTrimMemory(100 /*level*/);, +            }, +        });, +    }, +, +    @Test, +        public void onLowMemory();, +, +        public void onTrimMemory(int level);, +        public void onLowMemory() {, +          fragment.onLowMemory();, +        }, +, +        @Override, +        public void onTrimMemory(int level) {, +          fragment.onTrimMemory(level);, +        public void onLowMemory() {, +          supportFragment.onLowMemory();, +        }, +, +        @Override, +        public void onTrimMemory(int level) {, +            // Do nothing., +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java, +      // If an activity is re-created, onTrimMemory may be called before a manager is ever set.]