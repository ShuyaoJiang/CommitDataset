[+++ b/annotation/compiler/test/build.gradle, +    testImplementation "junit:junit:${JUNIT_VERSION}", +++ b/annotation/compiler/test/build.gradle, +    testImplementation "junit:junit:${JUNIT_VERSION}", +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java, +import static org.junit.Assert.assertThrows;, +import org.junit.function.ThrowingRunnable;, +// Ignore warnings since most methods use assertThrows, +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +        });, +  }, +++ b/annotation/compiler/test/build.gradle, +    testImplementation "junit:junit:${JUNIT_VERSION}", +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java, +import static org.junit.Assert.assertThrows;, +import org.junit.function.ThrowingRunnable;, +// Ignore warnings since most methods use assertThrows, +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +        });, +  }, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideExtensionTest.java, +// Avoid warnings when asserting on exceptions., +++ b/annotation/compiler/test/build.gradle, +    testImplementation "junit:junit:${JUNIT_VERSION}", +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java, +import static org.junit.Assert.assertThrows;, +import org.junit.function.ThrowingRunnable;, +// Ignore warnings since most methods use assertThrows, +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +        });, +  }, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideExtensionTest.java, +// Avoid warnings when asserting on exceptions., +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideOptionsExtensionTest.java, +import static org.junit.Assert.assertThrows;, +import org.junit.function.ThrowingRunnable;, +// Ignore warnings since most methods use assertThrows., +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +        });, +  }, +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +, +          }, +        });, +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +        });, +  }, +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +        });, +  }, +++ b/annotation/compiler/test/build.gradle, +    testImplementation "junit:junit:${JUNIT_VERSION}", +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidAppGlideModuleWithExcludesTest.java, +import static org.junit.Assert.assertThrows;, +import org.junit.function.ThrowingRunnable;, +// Ignore warnings since most methods use assertThrows, +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {, +          @Override, +          public void run() throws Throwable {, +        });, +  }, +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideExtensionTest.java, +// Avoid warnings when asserting on exceptions., +++ b/annotation/compiler/test/src/test/java/com/bumptech/glide/annotation/compiler/InvalidGlideOptionsExtensionTest.java, +import static org.junit.Assert.assertThrows;, +import org.junit.function.ThrowingRunnable;, +// Ignore warnings since most methods use assertThrows., +    assertThrows(, +        RuntimeException.class,, +        new ThrowingRunnable() {]