[+++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ /dev/null, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ /dev/null, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  public static final DownsampleStrategy CENTER_INSIDE = new CenterInside();, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  private static class CenterInside extends DownsampleStrategy {, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ /dev/null, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  public static final DownsampleStrategy CENTER_INSIDE = new CenterInside();, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  private static class CenterInside extends DownsampleStrategy {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ /dev/null, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  public static final DownsampleStrategy CENTER_INSIDE = new CenterInside();, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  private static class CenterInside extends DownsampleStrategy {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java, +    Canvas canvas = new Canvas(result);, +    canvas.drawBitmap(inBitmap, m, DEFAULT_PAINT);, +    clear(canvas);, +    Canvas canvas = new Canvas(toReuse);, +    canvas.drawBitmap(inBitmap, matrix, DEFAULT_PAINT);, +    clear(canvas);, +    final Canvas canvas = new Canvas(result);, +    canvas.drawBitmap(inBitmap, matrix, DEFAULT_PAINT);, +    clear(canvas);, +, +, +, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ /dev/null, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  public static final DownsampleStrategy CENTER_INSIDE = new CenterInside();, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  private static class CenterInside extends DownsampleStrategy {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java, +    Canvas canvas = new Canvas(result);, +    canvas.drawBitmap(inBitmap, m, DEFAULT_PAINT);, +    clear(canvas);, +    Canvas canvas = new Canvas(toReuse);, +    canvas.drawBitmap(inBitmap, matrix, DEFAULT_PAINT);, +    clear(canvas);, +    final Canvas canvas = new Canvas(result);, +    canvas.drawBitmap(inBitmap, matrix, DEFAULT_PAINT);, +    clear(canvas);, +, +, +, +++ b/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java, +    return optionalTransform(context, DownsampleStrategy.CENTER_INSIDE, new FitCenter(context));, +    return transform(context, DownsampleStrategy.CENTER_INSIDE, new FitCenter(context));, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ /dev/null, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  public static final DownsampleStrategy CENTER_INSIDE = new CenterInside();, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  private static class CenterInside extends DownsampleStrategy {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java, +    Canvas canvas = new Canvas(result);, +    canvas.drawBitmap(inBitmap, m, DEFAULT_PAINT);, +    clear(canvas);, +    Canvas canvas = new Canvas(toReuse);, +    canvas.drawBitmap(inBitmap, matrix, DEFAULT_PAINT);, +    clear(canvas);, +    final Canvas canvas = new Canvas(result);, +    canvas.drawBitmap(inBitmap, matrix, DEFAULT_PAINT);, +    clear(canvas);, +, +, +, +++ b/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java, +    return optionalTransform(context, DownsampleStrategy.CENTER_INSIDE, new FitCenter(context));, +    return transform(context, DownsampleStrategy.CENTER_INSIDE, new FitCenter(context));, +++ b/library/src/main/java/com/bumptech/glide/request/RequestOptions.java, +++ b/library/src/main/java/com/bumptech/glide/RequestBuilder.java, +++ /dev/null, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/DownsampleStrategy.java, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  public static final DownsampleStrategy CENTER_INSIDE = new CenterInside();, +   * and height. To avoid upscaling, use {@link #AT_LEAST} or {@link #AT_MOST}., +  private static class CenterInside extends DownsampleStrategy {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java]