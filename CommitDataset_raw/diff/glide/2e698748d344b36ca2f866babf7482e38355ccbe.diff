[+++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +import java.util.Collections;, +import java.util.HashSet;, +import java.util.Set;, +, +    private final LruPoolStrategy strategy;, +    private final BitmapTracker tracker;, +, +    private int currentSize;, +        this.tracker = new NullBitmapTracker();, +        this(maxSize, getDefaultStrategy());, +        tracker.add(bitmap);, +            tracker.remove(result);, +            tracker.remove(removed);, +, +    private static LruPoolStrategy getDefaultStrategy() {, +        final LruPoolStrategy strategy;, +        if (Build.VERSION.SDK_INT >= 19) {, +            strategy = new SizeStrategy();, +        } else {, +            strategy = new AttributeStrategy();, +        }, +        return strategy;, +    }, +, +    private interface BitmapTracker {, +        void add(Bitmap bitmap);, +        void remove(Bitmap bitmap);, +    }, +, +    private static class ThrowingBitmapTracker implements BitmapTracker {, +        private final Set<Bitmap> bitmaps = Collections.synchronizedSet(new HashSet<Bitmap>());, +, +        @Override, +        public void add(Bitmap bitmap) {, +            if (bitmaps.contains(bitmap)) {, +                throw new IllegalStateException("Can't add already added bitmap: " + bitmap + " [" + bitmap.getWidth(), +                        + "x" + bitmap.getHeight() + "]");, +            }, +            bitmaps.add(bitmap);, +, +        }, +, +        @Override, +        public void remove(Bitmap bitmap) {, +            if (!bitmaps.contains(bitmap)) {, +                throw new IllegalStateException("Cannot remove bitmap not in tracker");, +            }, +            bitmaps.remove(bitmap);, +        }, +    }, +, +    private static class NullBitmapTracker implements BitmapTracker {, +, +        @Override, +        public void add(Bitmap bitmap) {, +, +        }, +, +        @Override, +        public void remove(Bitmap bitmap) {, +, +        }, +    }]