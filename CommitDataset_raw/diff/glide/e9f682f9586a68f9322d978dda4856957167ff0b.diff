[+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java, +  public void setUp() {, +  public void load_whenLoadSucceeds_butEncoderFails_doesNotCallOnLoadFailed() {, +  public void clearRequest_withError_afterPrimaryFails_clearsErrorRequest() {, +    @NonNull, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java, +  public void setUp() {, +  public void load_whenLoadSucceeds_butEncoderFails_doesNotCallOnLoadFailed() {, +  public void clearRequest_withError_afterPrimaryFails_clearsErrorRequest() {, +    @NonNull, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(@NonNull byte[] keyBytes, @NonNull Boolean value,, +            @NonNull MessageDigest messageDigest) {, +  @NonNull, +    @NonNull, +    Resource<Bitmap> buildFrameResource(@NonNull Bitmap bitmap, @NonNull BitmapPool bitmapPool) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java, +  public void setUp() {, +  public void load_whenLoadSucceeds_butEncoderFails_doesNotCallOnLoadFailed() {, +  public void clearRequest_withError_afterPrimaryFails_clearsErrorRequest() {, +    @NonNull, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(@NonNull byte[] keyBytes, @NonNull Boolean value,, +            @NonNull MessageDigest messageDigest) {, +  @NonNull, +    @NonNull, +    Resource<Bitmap> buildFrameResource(@NonNull Bitmap bitmap, @NonNull BitmapPool bitmapPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +import android.support.annotation.NonNull;, +   * A constant indicating we were unable to parse the orientation from the image either because no, +   * exif segment containing orientation data existed, or because of an I/O error attempting to read, +   * the exif segment., +    /** Unrecognized type. */, +, +  @NonNull, +  ImageType getType(@NonNull InputStream is) throws IOException;, +, +  @NonNull, +  ImageType getType(@NonNull ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(@NonNull InputStream is, @NonNull ArrayPool byteArrayPool) throws IOException;, +, +  int getOrientation(@NonNull ByteBuffer byteBuffer, @NonNull ArrayPool byteArrayPool), +      throws IOException;, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java, +  public void setUp() {, +  public void load_whenLoadSucceeds_butEncoderFails_doesNotCallOnLoadFailed() {, +  public void clearRequest_withError_afterPrimaryFails_clearsErrorRequest() {, +    @NonNull, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(@NonNull byte[] keyBytes, @NonNull Boolean value,, +            @NonNull MessageDigest messageDigest) {, +  @NonNull, +    @NonNull, +    Resource<Bitmap> buildFrameResource(@NonNull Bitmap bitmap, @NonNull BitmapPool bitmapPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +import android.support.annotation.NonNull;, +   * A constant indicating we were unable to parse the orientation from the image either because no, +   * exif segment containing orientation data existed, or because of an I/O error attempting to read, +   * the exif segment., +    /** Unrecognized type. */, +, +  @NonNull, +  ImageType getType(@NonNull InputStream is) throws IOException;, +, +  @NonNull, +  ImageType getType(@NonNull ByteBuffer byteBuffer) throws IOException;, +  int getOrientation(@NonNull InputStream is, @NonNull ArrayPool byteArrayPool) throws IOException;, +, +  int getOrientation(@NonNull ByteBuffer byteBuffer, @NonNull ArrayPool byteArrayPool), +      throws IOException;, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParserUtils.java, +import android.support.annotation.NonNull;, +  @NonNull, +  public static ImageType getType(@NonNull List<ImageHeaderParser> parsers,, +      @Nullable InputStream is, @NonNull ArrayPool byteArrayPool) throws IOException {, +  @NonNull, +  public static ImageType getType(@NonNull List<ImageHeaderParser> parsers,, +      @Nullable ByteBuffer buffer), +  /**, +   * Returns the orientation for the given InputStream., +   */, +  public static int getOrientation(@NonNull List<ImageHeaderParser> parsers,, +      @Nullable InputStream is, @NonNull ArrayPool byteArrayPool) throws IOException {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/ErrorHandlingTest.java, +  public void setUp() {, +  public void load_whenLoadSucceeds_butEncoderFails_doesNotCallOnLoadFailed() {, +  public void clearRequest_withError_afterPrimaryFails_clearsErrorRequest() {, +    @NonNull, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(@NonNull byte[] keyBytes, @NonNull Boolean value,, +            @NonNull MessageDigest messageDigest) {, +  @NonNull, +    @NonNull, +    Resource<Bitmap> buildFrameResource(@NonNull Bitmap bitmap, @NonNull BitmapPool bitmapPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/ImageHeaderParser.java, +import android.support.annotation.NonNull;, +   * A constant indicating we were unable to parse the orientation from the image either because no, +   * exif segment containing orientation data existed, or because of an I/O error attempting to read, +   * the exif segment., +    /** Unrecognized type. */]