[+++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +        Resource<Object> resource = mock(Resource.class);, +        RequestCoordinator requestCoordinator = null;, +        Priority priority = Priority.NORMAL;, +        int placeholderResourceId = 0;, +        Drawable placeholderDrawable = null;, +        int errorResourceId = 0;, +        Drawable errorDrawable = null;, +        public BitmapRequest<Object, Object> getRequest() {, +            return new BitmapRequest<Object, Object>(loadProvider, model, context, priority, target, 1f,, +                    placeholderDrawable, placeholderResourceId, errorDrawable, errorResourceId, null, 0, null,, +                    requestCoordinator, engine, mock(Transformation.class));, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        request.onResourceReady(harness.resource);, +        harness.requestCoordinator = requestCoordinator;, +        BitmapRequest request = harness.getRequest();, +        request.onResourceReady(harness.resource);, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        harness.priority = expected;, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        request.onResourceReady(harness.resource);, +        verify(harness.resource).release();, +        harness.context = context;, +        harness.placeholderResourceId = expectedId;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.placeholderDrawable = expected;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.context = context;, +        harness.errorResourceId = expectedId;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.errorDrawable = expected;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.placeholderDrawable = placeholder;, +        harness.target = target;, +        harness.model = null;, +        BitmapRequest request = harness.getRequest();, +        harness.placeholderDrawable = placeholder;, +        harness.errorDrawable = errorPlaceholder;, +        harness.target = target;, +        harness.model = null;, +        BitmapRequest request = harness.getRequest();, +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +        Resource<Object> resource = mock(Resource.class);, +        RequestCoordinator requestCoordinator = null;, +        Priority priority = Priority.NORMAL;, +        int placeholderResourceId = 0;, +        Drawable placeholderDrawable = null;, +        int errorResourceId = 0;, +        Drawable errorDrawable = null;, +        public BitmapRequest<Object, Object> getRequest() {, +            return new BitmapRequest<Object, Object>(loadProvider, model, context, priority, target, 1f,, +                    placeholderDrawable, placeholderResourceId, errorDrawable, errorResourceId, null, 0, null,, +                    requestCoordinator, engine, mock(Transformation.class));, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        request.onResourceReady(harness.resource);, +        harness.requestCoordinator = requestCoordinator;, +        BitmapRequest request = harness.getRequest();, +        request.onResourceReady(harness.resource);, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        harness.priority = expected;, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        BitmapRequest request = harness.getRequest();, +        request.onResourceReady(harness.resource);, +        verify(harness.resource).release();, +        harness.context = context;, +        harness.placeholderResourceId = expectedId;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.placeholderDrawable = expected;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.context = context;, +        harness.errorResourceId = expectedId;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.errorDrawable = expected;, +        harness.target = target;, +        BitmapRequest request = harness.getRequest();, +        harness.placeholderDrawable = placeholder;, +        harness.target = target;, +        harness.model = null;, +        BitmapRequest request = harness.getRequest();, +        harness.placeholderDrawable = placeholder;, +        harness.errorDrawable = errorPlaceholder;, +        harness.target = target;, +        harness.model = null;, +        BitmapRequest request = harness.getRequest();, +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +import com.bumptech.glide.request.bitmap.BitmapRequest;]