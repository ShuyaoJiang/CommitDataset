[+++ b/library/src/com/bumptech/glide/resize/cache/LruMemoryCache.java, +, +    private void evict() {, +        LinkedHashMap.Entry<String, Bitmap> last;, +        while (currentSize > maxSize) {, +++ b/library/src/com/bumptech/glide/resize/cache/LruMemoryCache.java, +, +    private void evict() {, +        LinkedHashMap.Entry<String, Bitmap> last;, +        while (currentSize > maxSize) {, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCache.java, +++ b/library/src/com/bumptech/glide/resize/cache/LruMemoryCache.java, +, +    private void evict() {, +        LinkedHashMap.Entry<String, Bitmap> last;, +        while (currentSize > maxSize) {, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCache.java, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCacheAdapter.java, +++ b/library/src/com/bumptech/glide/resize/cache/LruMemoryCache.java, +, +    private void evict() {, +        LinkedHashMap.Entry<String, Bitmap> last;, +        while (currentSize > maxSize) {, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCache.java, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCacheAdapter.java, +++ b/library/src/com/bumptech/glide/resize/load/Downsampler.java, +            // cannot reuse bitmaps when decoding GIFs., +            // look at : https://groups.google.com/forum/#!msg/android-developers/Mp0MFVFi1Fo/e8ZQ9FGdWdEJ, +            if (!isGif(bis)) {, +        }, +    private boolean isGif(RecyclableBufferedInputStream bis) {, +        bis.mark(1024);, +        try {, +            return new ImageHeaderParser(bis).getType() == ImageHeaderParser.ImageType.GIF;, +        } catch (IOException e) {, +            e.printStackTrace();, +        } finally {, +            try {, +                bis.reset();, +            } catch (IOException e) {, +                e.printStackTrace();, +            }, +        }, +        return false;, +    }, +, +++ b/library/src/com/bumptech/glide/resize/cache/LruMemoryCache.java, +, +    private void evict() {, +        LinkedHashMap.Entry<String, Bitmap> last;, +        while (currentSize > maxSize) {, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCache.java, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCacheAdapter.java, +++ b/library/src/com/bumptech/glide/resize/load/Downsampler.java, +            // cannot reuse bitmaps when decoding GIFs., +            // look at : https://groups.google.com/forum/#!msg/android-developers/Mp0MFVFi1Fo/e8ZQ9FGdWdEJ, +            if (!isGif(bis)) {, +        }, +    private boolean isGif(RecyclableBufferedInputStream bis) {, +        bis.mark(1024);, +        try {, +            return new ImageHeaderParser(bis).getType() == ImageHeaderParser.ImageType.GIF;, +        } catch (IOException e) {, +            e.printStackTrace();, +        } finally {, +            try {, +                bis.reset();, +            } catch (IOException e) {, +                e.printStackTrace();, +            }, +        }, +        return false;, +    }, +, +++ b/library/src/com/bumptech/glide/resize/load/ImageHeaderParser.java, +, +    public static enum ImageType {, +        GIF(true), JPEG(false), APNG(true), PNG(false), UNKNOWN(false);, +        private final boolean hasAlpha;, +, +        ImageType(boolean hasAlpha) {, +            this.hasAlpha = hasAlpha;, +        }, +, +        public boolean hasAlpha() {, +            return hasAlpha;, +        }, +    }, +, +        return getType().hasAlpha();, +    }, +, +    public ImageType getType() throws IOException {, +            return ImageType.JPEG;, +            return alpha >= 3 ? ImageType.APNG : ImageType.PNG;, +            return ImageType.GIF;, +        return ImageType.UNKNOWN;]