[+++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +    private Priority priority = null;, +     * Sets the priority for this load., +     *, +     * @param priority A priority., +     * @return This request builder., +     */, +    public GenericRequestBuilder<ModelType, ImageResourceType, VideoResourceType> priority(Priority priority) {, +        this.priority = priority;, +, +        return this;, +    }, +, +    /**, +        if (priority == null) {, +            priority = Priority.NORMAL;, +        }, +, +            if (thumbnailRequestBuilder.priority == null) {, +                thumbnailRequestBuilder.priority = getThumbnailPriority();, +            }, +, +                    .setPriority(getThumbnailPriority()), +    private Priority getThumbnailPriority() {, +        final Priority result;, +        if (priority == Priority.LOW) {, +            result = Priority.NORMAL;, +        } else if (priority == Priority.NORMAL) {, +            result = Priority.HIGH;, +        } else {, +            result = Priority.IMMEDIATE;, +        }, +        return result;, +    }, +, +                .setPriority(priority), +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +    private Priority priority = null;, +     * Sets the priority for this load., +     *, +     * @param priority A priority., +     * @return This request builder., +     */, +    public GenericRequestBuilder<ModelType, ImageResourceType, VideoResourceType> priority(Priority priority) {, +        this.priority = priority;, +, +        return this;, +    }, +, +    /**, +        if (priority == null) {, +            priority = Priority.NORMAL;, +        }, +, +            if (thumbnailRequestBuilder.priority == null) {, +                thumbnailRequestBuilder.priority = getThumbnailPriority();, +            }, +, +                    .setPriority(getThumbnailPriority()), +    private Priority getThumbnailPriority() {, +        final Priority result;, +        if (priority == Priority.LOW) {, +            result = Priority.NORMAL;, +        } else if (priority == Priority.NORMAL) {, +            result = Priority.HIGH;, +        } else {, +            result = Priority.IMMEDIATE;, +        }, +        return result;, +    }, +, +                .setPriority(priority), +++ b/library/src/com/bumptech/glide/RequestBuilder.java, +import com.bumptech.glide.resize.Priority;, +    @Override, +    public RequestBuilder<ModelType> priority(Priority priority) {, +        super.priority(priority);, +        return this;, +    }, +, +    @Override, +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +    private Priority priority = null;, +     * Sets the priority for this load., +     *, +     * @param priority A priority., +     * @return This request builder., +     */, +    public GenericRequestBuilder<ModelType, ImageResourceType, VideoResourceType> priority(Priority priority) {, +        this.priority = priority;, +, +        return this;, +    }, +, +    /**, +        if (priority == null) {, +            priority = Priority.NORMAL;, +        }, +, +            if (thumbnailRequestBuilder.priority == null) {]