[+++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifResourceDecoder.java, +    private GifHeaderParser parser;, +        this(context, bitmapPool, new GifHeaderParser());, +    }, +, +    GifResourceDecoder(Context context, BitmapPool bitmapPool, GifHeaderParser parser) {, +        this.parser = parser;, +        GifHeader header = parser.setData(data).parseHeader();, +, +        if (header.getNumFrames() <= 0) {, +            // If we couldn't decode the GIF, we will end up with a frame count of 0., +            return null;, +        }, +, +        GifData gifData = new GifData(context, bitmapPool, id, header, data, width, height);, +        return new GifDataResource(gifData);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifResourceDecoder.java, +    private GifHeaderParser parser;, +        this(context, bitmapPool, new GifHeaderParser());, +    }, +, +    GifResourceDecoder(Context context, BitmapPool bitmapPool, GifHeaderParser parser) {, +        this.parser = parser;, +        GifHeader header = parser.setData(data).parseHeader();, +, +        if (header.getNumFrames() <= 0) {, +            // If we couldn't decode the GIF, we will end up with a frame count of 0., +            return null;, +        }, +, +        GifData gifData = new GifData(context, bitmapPool, id, header, data, width, height);, +        return new GifDataResource(gifData);, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +    public void testReceivesGif() throws IOException {, +        InputStream testGifData = openResource("test.gif");, +        mockUri(Uri.parse(fakeUri), testGifData);, +, +, +    public void testReceivesGifBytes() throws IOException {, +        InputStream testGifData = openResource("test.gif");, +        mockUri(Uri.parse(fakeUri), testGifData);, +, +    @Test, +    public void testByteData() {, +        byte[] data = new byte[] { 1, 2, 3, 4, 5, 6 };, +        Glide.with(getContext()).load(data).into(target);, +    private void mockUri(String uriString) {, +        mockUri(Uri.parse(uriString), null);, +    }, +        mockUri(uri, null);, +    }, +, +    private void mockUri(Uri uri, InputStream is) {, +        if (is == null) {, +            is = new ByteArrayInputStream(new byte[0]);, +        }, +        shadowContentResolver.registerInputStream(uri, is);, +, +    private InputStream openResource(String imageName) throws IOException {, +        return getClass().getResourceAsStream("/" + imageName);, +    }, +, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifResourceDecoder.java, +    private GifHeaderParser parser;, +        this(context, bitmapPool, new GifHeaderParser());, +    }, +, +    GifResourceDecoder(Context context, BitmapPool bitmapPool, GifHeaderParser parser) {, +        this.parser = parser;, +        GifHeader header = parser.setData(data).parseHeader();, +, +        if (header.getNumFrames() <= 0) {, +            // If we couldn't decode the GIF, we will end up with a frame count of 0., +            return null;, +        }, +, +        GifData gifData = new GifData(context, bitmapPool, id, header, data, width, height);, +        return new GifDataResource(gifData);, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +    public void testReceivesGif() throws IOException {, +        InputStream testGifData = openResource("test.gif");, +        mockUri(Uri.parse(fakeUri), testGifData);, +, +, +    public void testReceivesGifBytes() throws IOException {, +        InputStream testGifData = openResource("test.gif");, +        mockUri(Uri.parse(fakeUri), testGifData);, +, +    @Test, +    public void testByteData() {, +        byte[] data = new byte[] { 1, 2, 3, 4, 5, 6 };, +        Glide.with(getContext()).load(data).into(target);, +    private void mockUri(String uriString) {, +        mockUri(Uri.parse(uriString), null);, +    }, +        mockUri(uri, null);, +    }, +, +    private void mockUri(Uri uri, InputStream is) {, +        if (is == null) {]