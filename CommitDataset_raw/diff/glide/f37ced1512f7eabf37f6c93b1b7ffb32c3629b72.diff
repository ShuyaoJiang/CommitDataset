[+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/SafeKeyGenerator.java, +import android.support.annotation.NonNull;, +    @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/SafeKeyGenerator.java, +import android.support.annotation.NonNull;, +    @NonNull, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/SafeKeyGenerator.java, +import android.support.annotation.NonNull;, +    @NonNull, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/util/pool/FactoryPools.java, +    public void reset(@NonNull Object object) {, +  @NonNull, +  public static <T extends Poolable> Pool<T> simple(int size, @NonNull Factory<T> factory) {, +  @NonNull, +  public static <T extends Poolable> Pool<T> threadSafe(int size, @NonNull Factory<T> factory) {, +  @NonNull, +  @NonNull, +      @NonNull, +      public void reset(@NonNull List<T> object) {, +  @NonNull, +  private static <T extends Poolable> Pool<T> build(@NonNull Pool<T> pool,, +      @NonNull Factory<T> factory) {, +  @NonNull, +  private static <T> Pool<T> build(@NonNull Pool<T> pool, @NonNull Factory<T> factory,, +      @NonNull Resetter<T> resetter) {, +  @NonNull, +    void reset(@NonNull T object);, +    @NonNull, +    FactoryPool(@NonNull Pool<T> pool, @NonNull Factory<T> factory, @NonNull Resetter<T> resetter) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/LockedResource.java, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/SafeKeyGenerator.java, +import android.support.annotation.NonNull;, +    @NonNull, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +import android.support.annotation.NonNull;, +  @NonNull, +++ b/library/src/main/java/com/bumptech/glide/util/pool/FactoryPools.java, +    public void reset(@NonNull Object object) {, +  @NonNull, +  public static <T extends Poolable> Pool<T> simple(int size, @NonNull Factory<T> factory) {, +  @NonNull, +  public static <T extends Poolable> Pool<T> threadSafe(int size, @NonNull Factory<T> factory) {, +  @NonNull, +  @NonNull, +      @NonNull, +      public void reset(@NonNull List<T> object) {, +  @NonNull, +  private static <T extends Poolable> Pool<T> build(@NonNull Pool<T> pool,, +      @NonNull Factory<T> factory) {, +  @NonNull, +  private static <T> Pool<T> build(@NonNull Pool<T> pool, @NonNull Factory<T> factory,, +      @NonNull Resetter<T> resetter) {, +  @NonNull]