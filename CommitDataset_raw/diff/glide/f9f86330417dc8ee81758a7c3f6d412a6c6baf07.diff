[+++ b/library/src/main/java/com/bumptech/glide/request/RequestListener.java, +import com.bumptech.glide.load.DataSource;, +   * @param dataSource        The {@link DataSource} the resource was loaded from., +  boolean onResourceReady(R resource, Object model, Target<R> target, DataSource dataSource,, +++ b/library/src/main/java/com/bumptech/glide/request/RequestListener.java, +import com.bumptech.glide.load.DataSource;, +   * @param dataSource        The {@link DataSource} the resource was loaded from., +  boolean onResourceReady(R resource, Object model, Target<R> target, DataSource dataSource,, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +        || !requestListener.onResourceReady(result, model, target, dataSource, isFirstResource)) {, +++ b/library/src/main/java/com/bumptech/glide/request/RequestListener.java, +import com.bumptech.glide.load.DataSource;, +   * @param dataSource        The {@link DataSource} the resource was loaded from., +  boolean onResourceReady(R resource, Object model, Target<R> target, DataSource dataSource,, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +        || !requestListener.onResourceReady(result, model, target, dataSource, isFirstResource)) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +import com.bumptech.glide.load.DataSource;, +          DataSource dataSource, boolean isFirstResource) {, +++ b/library/src/main/java/com/bumptech/glide/request/RequestListener.java, +import com.bumptech.glide.load.DataSource;, +   * @param dataSource        The {@link DataSource} the resource was loaded from., +  boolean onResourceReady(R resource, Object model, Target<R> target, DataSource dataSource,, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +        || !requestListener.onResourceReady(result, model, target, dataSource, isFirstResource)) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +import com.bumptech.glide.load.DataSource;, +          DataSource dataSource, boolean isFirstResource) {, +++ b/library/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java, +import static com.bumptech.glide.tests.Util.isADataSource;, +    verify(harness.cb, never()).onResourceReady(anyResource(), isADataSource());, +    }).when(existingCallback).onResourceReady(anyResource(), isADataSource());, +    }).when(cb).onResourceReady(anyResource(), isADataSource());, +    verify(cb, times(1)).onResourceReady(anyResource(), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(notYetCalled, never()).onResourceReady(anyResource(), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(notYetCalled, never()).onResourceReady(anyResource(), isADataSource());, +++ b/library/src/main/java/com/bumptech/glide/request/RequestListener.java, +import com.bumptech.glide.load.DataSource;, +   * @param dataSource        The {@link DataSource} the resource was loaded from., +  boolean onResourceReady(R resource, Object model, Target<R> target, DataSource dataSource,, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +        || !requestListener.onResourceReady(result, model, target, dataSource, isFirstResource)) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +import com.bumptech.glide.load.DataSource;, +          DataSource dataSource, boolean isFirstResource) {, +++ b/library/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java, +import static com.bumptech.glide.tests.Util.isADataSource;, +    verify(harness.cb, never()).onResourceReady(anyResource(), isADataSource());, +    }).when(existingCallback).onResourceReady(anyResource(), isADataSource());, +    }).when(cb).onResourceReady(anyResource(), isADataSource());, +    verify(cb, times(1)).onResourceReady(anyResource(), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(notYetCalled, never()).onResourceReady(anyResource(), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(notYetCalled, never()).onResourceReady(anyResource(), isADataSource());, +++ b/library/src/test/java/com/bumptech/glide/load/engine/EngineTest.java, +import static com.bumptech.glide.tests.Util.isADataSource;, +    verify(harness.cb, never()).onResourceReady(isNull(Resource.class), isADataSource());, +    verify(harness.cb, never()).onResourceReady(eq(other), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(harness.cb).onResourceReady(anyResource(), isADataSource());, +++ b/library/src/main/java/com/bumptech/glide/request/RequestListener.java, +import com.bumptech.glide.load.DataSource;, +   * @param dataSource        The {@link DataSource} the resource was loaded from., +  boolean onResourceReady(R resource, Object model, Target<R> target, DataSource dataSource,, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +        || !requestListener.onResourceReady(result, model, target, dataSource, isFirstResource)) {, +++ b/library/src/test/java/com/bumptech/glide/GlideTest.java, +import com.bumptech.glide.load.DataSource;, +          DataSource dataSource, boolean isFirstResource) {, +++ b/library/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java, +import static com.bumptech.glide.tests.Util.isADataSource;, +    verify(harness.cb, never()).onResourceReady(anyResource(), isADataSource());, +    }).when(existingCallback).onResourceReady(anyResource(), isADataSource());, +    }).when(cb).onResourceReady(anyResource(), isADataSource());, +    verify(cb, times(1)).onResourceReady(anyResource(), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(notYetCalled, never()).onResourceReady(anyResource(), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(notYetCalled, never()).onResourceReady(anyResource(), isADataSource());, +++ b/library/src/test/java/com/bumptech/glide/load/engine/EngineTest.java, +import static com.bumptech.glide.tests.Util.isADataSource;, +    verify(harness.cb, never()).onResourceReady(isNull(Resource.class), isADataSource());, +    verify(harness.cb, never()).onResourceReady(eq(other), isADataSource());, +    }).when(harness.cb).onResourceReady(anyResource(), isADataSource());, +    verify(harness.cb).onResourceReady(anyResource(), isADataSource());, +++ b/library/src/test/java/com/bumptech/glide/request/SingleRequestTest.java, +import static com.bumptech.glide.tests.Util.isADataSource;, +        .onResourceReady(any(List.class), any(Number.class), eq(harness.target), isADataSource(),, +        .onResourceReady(any(List.class), any(Number.class), eq(harness.target), isADataSource(),, +        .onResourceReady(eq(harness.result), any(Number.class), isAListTarget(), isADataSource(),, +        .onResourceReady(any(List.class), eq(harness.model), isAListTarget(), isADataSource(),, +        .onResourceReady(any(List.class), any(Number.class), eq(harness.target), isADataSource(),, +        .onResourceReady(eq(harness.result), any(Number.class), isAListTarget(),, +            eq(DataSource.MEMORY_CACHE), anyBoolean());, +        .onResourceReady(eq(harness.result), any(Number.class), isAListTarget(),, +            eq(DataSource.LOCAL), anyBoolean());, +        .onResourceReady(eq(harness.result), any(Number.class), isAListTarget(), isADataSource(),]