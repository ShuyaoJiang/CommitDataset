[+++ b/.idea/codeStyleSettings.xml, +          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />, +++ b/.idea/codeStyleSettings.xml, +          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />, +++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +      throw new HttpException("Too many (> " + MAXIMUM_REDIRECTS + ") redirects!");, +          throw new HttpException("In re-direct loop");, +        throw new HttpException("Received empty or null redirect url");, +    } else if (statusCode == -1) {, +      throw new HttpException(statusCode);, +      throw new HttpException(urlConnection.getResponseMessage(), statusCode);, +  /**, +   * Thrown when an http request fails., +   *, +   * <p>Exposes the specific status code or {@link #UNKNOWN} via {@link #getStatusCode()} so, +   * users may attempt to retry certain types of errors., +   */, +  public static final class HttpException extends IOException {, +    public static final int UNKNOWN = -1;, +    private int statusCode;, +, +    HttpException(int statusCode) {, +      this("Http request failed with status code: " + statusCode, statusCode);, +    }, +, +    HttpException(String message) {, +      this(message, UNKNOWN);, +    }, +, +    HttpException(String message, int statusCode) {, +      super(message);, +      this.statusCode = statusCode;, +    }, +, +    public int getStatusCode() {, +      return statusCode;, +    }, +  }, +]