[+++ b/library/src/main/java/com/bumptech/glide/load/Option.java, +   *, +   * @param <T> The type of the option., +++ b/library/src/main/java/com/bumptech/glide/load/Option.java, +   *, +   * @param <T> The type of the option., +++ b/library/src/main/java/com/bumptech/glide/load/model/UnitModelLoader.java, +   *, +   * @param <Model> The type of model that will also be returned as decodable data., +  public static class Factory<Model> implements ModelLoaderFactory<Model, Model> {, +    public ModelLoader<Model, Model> build(Context context,, +++ b/library/src/main/java/com/bumptech/glide/load/Option.java, +   *, +   * @param <T> The type of the option., +++ b/library/src/main/java/com/bumptech/glide/load/model/UnitModelLoader.java, +   *, +   * @param <Model> The type of model that will also be returned as decodable data., +  public static class Factory<Model> implements ModelLoaderFactory<Model, Model> {, +    public ModelLoader<Model, Model> build(Context context,, +++ b/library/src/main/java/com/bumptech/glide/request/transition/NoTransition.java, +   *, +   * @param <R> the resource type that will be transitioned into a, +   * {@link com.bumptech.glide.request.target.Target}., +++ b/library/src/main/java/com/bumptech/glide/load/Option.java, +   *, +   * @param <T> The type of the option., +++ b/library/src/main/java/com/bumptech/glide/load/model/UnitModelLoader.java, +   *, +   * @param <Model> The type of model that will also be returned as decodable data., +  public static class Factory<Model> implements ModelLoaderFactory<Model, Model> {, +    public ModelLoader<Model, Model> build(Context context,, +++ b/library/src/main/java/com/bumptech/glide/request/transition/NoTransition.java, +   *, +   * @param <R> the resource type that will be transitioned into a, +   * {@link com.bumptech.glide.request.target.Target}., +++ b/library/src/main/java/com/bumptech/glide/util/pool/FactoryPools.java, +   *, +   * @param <T> The type of Object that will be created., +   *, +   * @param <T> The type of Object that will be reset.]