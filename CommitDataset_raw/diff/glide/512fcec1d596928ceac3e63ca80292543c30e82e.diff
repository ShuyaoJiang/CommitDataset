[+++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder.java, +            ParcelFileDescriptor fileDescriptor = source.getFileDescriptor();, +            if (fileDescriptor != null) {, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder.java, +            ParcelFileDescriptor fileDescriptor = source.getFileDescriptor();, +            if (fileDescriptor != null) {, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder.java, +    private static final DefaultFactory DEFAULT_FACTORY = new DefaultFactory();, +    private MediaMetadataRetrieverFactory factory;, +, +    interface MediaMetadataRetrieverFactory {, +        public MediaMetadataRetriever build();, +    }, +, +    public VideoBitmapDecoder() {, +        this(DEFAULT_FACTORY);, +    }, +, +, +    VideoBitmapDecoder(MediaMetadataRetrieverFactory factory) {, +        this.factory = factory;, +    }, +, +        MediaMetadataRetriever mediaMetadataRetriever = factory.build();, +        return "VideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap";, +    }, +, +    private static class DefaultFactory implements MediaMetadataRetrieverFactory {, +        @Override, +        public MediaMetadataRetriever build() {, +            return new MediaMetadataRetriever();, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder.java, +            ParcelFileDescriptor fileDescriptor = source.getFileDescriptor();, +            if (fileDescriptor != null) {, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder.java, +    private static final DefaultFactory DEFAULT_FACTORY = new DefaultFactory();, +    private MediaMetadataRetrieverFactory factory;, +, +    interface MediaMetadataRetrieverFactory {, +        public MediaMetadataRetriever build();, +    }, +, +    public VideoBitmapDecoder() {, +        this(DEFAULT_FACTORY);, +    }, +, +, +    VideoBitmapDecoder(MediaMetadataRetrieverFactory factory) {, +        this.factory = factory;, +    }, +, +        MediaMetadataRetriever mediaMetadataRetriever = factory.build();, +        return "VideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap";, +    }, +, +    private static class DefaultFactory implements MediaMetadataRetrieverFactory {, +        @Override, +        public MediaMetadataRetriever build() {, +            return new MediaMetadataRetriever();, +        }, +++ b/library/src/test/java/com/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoderTest.java, +    public void testDoesNotTryToDecodeNullFileDescriptor() throws IOException {, +        when(harness.wrapper.getStream()).thenReturn(null);, +        when(harness.wrapper.getFileDescriptor()).thenReturn(null);, +, +        harness.decoder.decode(harness.wrapper, 100, 102);, +, +        verify(harness.fileDescriptorDecoder, never()).decode(any(ParcelFileDescriptor.class), anyInt(), anyInt());, +    }, +, +    @Test, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageVideoBitmapDecoder.java, +            ParcelFileDescriptor fileDescriptor = source.getFileDescriptor();, +            if (fileDescriptor != null) {, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder.java, +    private static final DefaultFactory DEFAULT_FACTORY = new DefaultFactory();, +    private MediaMetadataRetrieverFactory factory;, +, +    interface MediaMetadataRetrieverFactory {, +        public MediaMetadataRetriever build();, +    }, +, +    public VideoBitmapDecoder() {, +        this(DEFAULT_FACTORY);, +    }, +, +, +    VideoBitmapDecoder(MediaMetadataRetrieverFactory factory) {, +        this.factory = factory;, +    }, +, +        MediaMetadataRetriever mediaMetadataRetriever = factory.build();, +        return "VideoBitmapDecoder.com.bumptech.glide.load.resource.bitmap";, +    }, +]