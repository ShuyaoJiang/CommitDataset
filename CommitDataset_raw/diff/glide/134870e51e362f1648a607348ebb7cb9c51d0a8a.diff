[+++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<BitmapDrawable> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<BitmapDrawable> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<GifDrawable> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<BitmapDrawable> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<GifDrawable> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.java, +import com.bumptech.glide.load.Options;, +  Resource<R> transcode(Resource<Z> toTranscode, Options options);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<BitmapDrawable> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<GifDrawable> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.java, +import com.bumptech.glide.load.Options;, +  Resource<R> transcode(Resource<Z> toTranscode, Options options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/UnitTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<Z> transcode(Resource<Z> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<BitmapDrawable> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<GifDrawable> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.java, +import com.bumptech.glide.load.Options;, +  Resource<R> transcode(Resource<Z> toTranscode, Options options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/UnitTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<Z> transcode(Resource<Z> toTranscode, Options options) {, +++ b/library/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoderTest.java, +import com.bumptech.glide.load.Options;, +    Options options = new Options();, +      Resource<byte[]> bytesResource = transcoder.transcode(bitmapResource, options);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodePath.java, +    return transcoder.transcode(transformed, options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<BitmapDrawable> transcode(Resource<Bitmap> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<byte[]> transcode(Resource<GifDrawable> toTranscode, Options options) {, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.java, +import com.bumptech.glide.load.Options;, +  Resource<R> transcode(Resource<Z> toTranscode, Options options);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/transcode/UnitTranscoder.java, +import com.bumptech.glide.load.Options;, +  public Resource<Z> transcode(Resource<Z> toTranscode, Options options) {, +++ b/library/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoderTest.java, +import com.bumptech.glide.load.Options;, +    Options options = new Options();, +      Resource<byte[]> bytesResource = transcoder.transcode(bitmapResource, options);, +++ b/library/src/test/java/com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoderTest.java]