[+++ b/src/com/bumptech/photos/loader/image/BaseImageLoader.java, +, + * A base class for {@link ImageLoader} that provides some lifecycle methods and prevents memory leaks by only providing, + * subclasses with a weak reference to the calling object., + *, + * @param <T> The type of the model this loader must be able to load a {@link android.graphics.Bitmap} for, +    /**, +     * The method where subclasses should actually begin any long running load for the given path and model. It is, +     * safe to strongly reference the given callback since that callback only weakly references the object that created, +     * it. Once a load completes or fails the given callback should be called to signal to the calling object that the, +     * image is ready., +     *, +     * @see ImageLoader#fetchImage(String, Object, int, int, com.bumptech.photos.loader.image.ImageLoader.ImageReadyCallback), +     *, +     * @param path The path to the image or null if the required information is contained in the model, +     * @param model The object that represents or contains an image that can be displayed, +     * @param width The width of the view where the image will be displayed, +     * @param height The height of the view where the image will be displayed, +     * @param cb The callback to call when the bitmap is loaded into memory, or when a load fails, +     */, +    /**, +     * A lifecycle method called after the requesting object is notified that this loader has loaded a bitmap. Should be, +     * used to cleanup or update any data related to the completed load. Should not be used as a callback to change how, +     * an image is displayed. See {@link com.bumptech.photos.presenter.ImageSetCallback} instead to make a visual change, +     * when a load completes., +     *, +     * @param path The path to the loaded image, +     * @param model The model representing the loaded image, +     * @param image The loaded image, +     * @param isUsed True iff the requesting object is going to display the image, +     */, +    /**, +     * A lifecycle method called after the requesting object is notified that this loader failed to loada Bitmap. Should, +     * be used to cleanup or update any data related to the failed load., +     *, +     * @param path The path to the image this loader failed to load, +     * @param model The model representing the image this loader failed to load, +     * @param e The exception that caused the failure, or null, +     */, +++ b/src/com/bumptech/photos/loader/image/BaseImageLoader.java, +, + * A base class for {@link ImageLoader} that provides some lifecycle methods and prevents memory leaks by only providing, + * subclasses with a weak reference to the calling object., + *, + * @param <T> The type of the model this loader must be able to load a {@link android.graphics.Bitmap} for, +    /**, +     * The method where subclasses should actually begin any long running load for the given path and model. It is, +     * safe to strongly reference the given callback since that callback only weakly references the object that created, +     * it. Once a load completes or fails the given callback should be called to signal to the calling object that the, +     * image is ready., +     *, +     * @see ImageLoader#fetchImage(String, Object, int, int, com.bumptech.photos.loader.image.ImageLoader.ImageReadyCallback), +     *, +     * @param path The path to the image or null if the required information is contained in the model, +     * @param model The object that represents or contains an image that can be displayed, +     * @param width The width of the view where the image will be displayed, +     * @param height The height of the view where the image will be displayed, +     * @param cb The callback to call when the bitmap is loaded into memory, or when a load fails, +     */, +    /**, +     * A lifecycle method called after the requesting object is notified that this loader has loaded a bitmap. Should be, +     * used to cleanup or update any data related to the completed load. Should not be used as a callback to change how, +     * an image is displayed. See {@link com.bumptech.photos.presenter.ImageSetCallback} instead to make a visual change, +     * when a load completes., +     *, +     * @param path The path to the loaded image, +     * @param model The model representing the loaded image, +     * @param image The loaded image, +     * @param isUsed True iff the requesting object is going to display the image, +     */, +    /**, +     * A lifecycle method called after the requesting object is notified that this loader failed to loada Bitmap. Should, +     * be used to cleanup or update any data related to the failed load., +     *, +     * @param path The path to the image this loader failed to load, +     * @param model The model representing the image this loader failed to load, +     * @param e The exception that caused the failure, or null, +     */, +++ b/src/com/bumptech/photos/loader/image/ImageLoader.java, + * An interface used by {@link com.bumptech.photos.presenter.ImagePresenter} to fetch a bitmap for a given path and/or, + * model, + *, + * @param <T> The type of the model this loader must be able to load a {@link android.graphics.Bitmap} for, +    /**, +     * An interface defining a callback that will be passed to an {@link ImageLoader} and that should be called by the, +     * {@link ImageLoader} when a load completes either successfully or because of a failure, +     */, +, +        /**, +         * The method a loader should call when a load completes successfully, +         *, +         * @param image The requested image, +         * @return True iff the loaded image was used by the class that requested it from the {@link ImageLoader}, +         */, +, +        /**, +         * The method a loader should call when a load fails, +         *, +         * @param e The exception that caused the load to fail, or null, +         */]