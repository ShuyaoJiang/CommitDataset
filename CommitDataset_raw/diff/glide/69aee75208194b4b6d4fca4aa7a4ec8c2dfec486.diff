[+++ b/library/src/androidTest/java/com/bumptech/glide/request/animation/DrawableCrossFadeFactoryTest.java, +package com.bumptech.glide.request.animation;, +, +import android.graphics.drawable.Drawable;, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotEquals;, +import static org.mockito.Mockito.mock;, +, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +public class DrawableCrossFadeFactoryTest {, +, +    private DrawableCrossFadeFactory<Drawable> factory;, +, +    @SuppressWarnings("unchecked"), +    @Before, +    public void setUp() {, +        ViewAnimationFactory<Drawable> viewAnimationFactory = mock(ViewAnimationFactory.class);, +        factory = new DrawableCrossFadeFactory<Drawable>(viewAnimationFactory, 100 /*duration*/);, +    }, +, +    @Test, +    public void testReturnsNoAnimationIfFromMemoryCache() {, +        assertEquals(NoAnimation.<Drawable>get(), factory.build(true /*isFromMemoryCache*/, true /*isFirstResource*/));, +    }, +, +    @Test, +    public void testReturnsReturnsAnimationIfNotFromMemoryCacheAndIsFirstResource() {, +        assertNotEquals(NoAnimation.<Drawable>get(),, +                factory.build(false /*isFromMemoryCache*/, true /*isFirstResource*/));, +    }, +, +    @Test, +    public void testReturnsAnimationIfNotFromMemocyCacheAndNotIsFirstResource() {, +        assertNotEquals(NoAnimation.<Drawable>get(),, +                factory.build(false /*isFromMemoryCache*/, false /*isFirstResource*/));, +    }, +}, +++ b/library/src/androidTest/java/com/bumptech/glide/request/animation/DrawableCrossFadeFactoryTest.java, +package com.bumptech.glide.request.animation;, +, +import android.graphics.drawable.Drawable;, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotEquals;, +import static org.mockito.Mockito.mock;, +, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +public class DrawableCrossFadeFactoryTest {, +, +    private DrawableCrossFadeFactory<Drawable> factory;, +, +    @SuppressWarnings("unchecked"), +    @Before, +    public void setUp() {, +        ViewAnimationFactory<Drawable> viewAnimationFactory = mock(ViewAnimationFactory.class);, +        factory = new DrawableCrossFadeFactory<Drawable>(viewAnimationFactory, 100 /*duration*/);, +    }, +, +    @Test, +    public void testReturnsNoAnimationIfFromMemoryCache() {, +        assertEquals(NoAnimation.<Drawable>get(), factory.build(true /*isFromMemoryCache*/, true /*isFirstResource*/));, +    }, +, +    @Test, +    public void testReturnsReturnsAnimationIfNotFromMemoryCacheAndIsFirstResource() {, +        assertNotEquals(NoAnimation.<Drawable>get(),, +                factory.build(false /*isFromMemoryCache*/, true /*isFirstResource*/));, +    }, +, +    @Test, +    public void testReturnsAnimationIfNotFromMemocyCacheAndNotIsFirstResource() {, +        assertNotEquals(NoAnimation.<Drawable>get(),, +                factory.build(false /*isFromMemoryCache*/, false /*isFirstResource*/));, +    }, +}, +++ b/library/src/androidTest/java/com/bumptech/glide/request/animation/ViewAnimationFactoryTest.java, +package com.bumptech.glide.request.animation;, +, +import android.view.View;, +import android.view.animation.Animation;, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.junit.runners.JUnit4;, +, +import static org.junit.Assert.assertEquals;, +import static org.mockito.Matchers.eq;]