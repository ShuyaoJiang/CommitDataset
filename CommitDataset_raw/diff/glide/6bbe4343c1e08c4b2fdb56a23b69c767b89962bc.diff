[+++ b/library/src/com/bumptech/glide/loader/model/BaseModelLoader.java, +        current = buildStreamLoader(model, width, height);, +    protected abstract StreamLoader buildStreamLoader(T model, int width, int height);, +++ b/library/src/com/bumptech/glide/loader/model/BaseModelLoader.java, +        current = buildStreamLoader(model, width, height);, +    protected abstract StreamLoader buildStreamLoader(T model, int width, int height);, +++ b/library/src/com/bumptech/glide/loader/model/StringLoader.java, +    protected StreamLoader buildStreamLoader(final String model, final int width, final int height) {, +++ b/library/src/com/bumptech/glide/loader/model/BaseModelLoader.java, +        current = buildStreamLoader(model, width, height);, +    protected abstract StreamLoader buildStreamLoader(T model, int width, int height);, +++ b/library/src/com/bumptech/glide/loader/model/StringLoader.java, +    protected StreamLoader buildStreamLoader(final String model, final int width, final int height) {, +++ b/library/src/com/bumptech/glide/loader/model/UriLoader.java, + * 'file' schemes. Unsupported schemes will throw an exception in {@link #buildStreamLoader(android.net.Uri, int, int)}., +    protected StreamLoader buildStreamLoader(Uri model, int width, int height) {, +++ b/library/src/com/bumptech/glide/loader/model/BaseModelLoader.java, +        current = buildStreamLoader(model, width, height);, +    protected abstract StreamLoader buildStreamLoader(T model, int width, int height);, +++ b/library/src/com/bumptech/glide/loader/model/StringLoader.java, +    protected StreamLoader buildStreamLoader(final String model, final int width, final int height) {, +++ b/library/src/com/bumptech/glide/loader/model/UriLoader.java, + * 'file' schemes. Unsupported schemes will throw an exception in {@link #buildStreamLoader(android.net.Uri, int, int)}., +    protected StreamLoader buildStreamLoader(Uri model, int width, int height) {, +++ b/library/src/com/bumptech/glide/loader/model/VolleyModelLoader.java, +    protected StreamLoader buildStreamLoader(T model, int width, int height) {]