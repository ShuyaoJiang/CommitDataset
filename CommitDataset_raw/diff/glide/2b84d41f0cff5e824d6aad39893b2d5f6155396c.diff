[+++ b/library/src/com/bumptech/photos/resize/ImageResizer.java, +        final Bitmap streamed = streamIn(path, width, height);, +        final Bitmap streamed = streamIn(path, width > height ? 1 : width, height > width ? 1 : height);, +        return streamIn(path, width, height);, +            dimens = getDimension(is1);, +        return load(is2, getRecycled(dimens));, +        return load(path, getRecycled(width, height));, +        final int[] dimens = getDimensions(path);, +        return load(path, getRecycled(dimens));, +    public Bitmap load(String path) {, +        return load(path, null);, +    public Bitmap load(String path, Bitmap recycle) {, +            result = load(new FileInputStream(path), recycle);, +    public Bitmap load(InputStream is) {, +        return load(is, null);, +    public Bitmap load(InputStream is, Bitmap recycle){, +        final BitmapFactory.Options decodeBitmapOptions = getDefaultOptions(recycle);, +        return decodeStream(is, decodeBitmapOptions);, +    public int[] getDimensions(String path) {, +        final BitmapFactory.Options decodeBoundsOptions = getDefaultOptions();, +        decodeStream(path, decodeBoundsOptions);, +    public int[] getDimension(InputStream is) {, +        final BitmapFactory.Options decodeBoundsOptions = getDefaultOptions();, +        decodeStream(is, decodeBoundsOptions);, +    public Bitmap streamIn(String path, int width, int height) {, +        final int[] dimens = getDimensions(path);, +        final BitmapFactory.Options decodeBitmapOptions = getDefaultOptions();, +        Bitmap result = decodeStream(path, decodeBitmapOptions);, +   private Bitmap decodeStream(String path, BitmapFactory.Options decodeBitmapOptions) {, +           result = decodeStream(is, decodeBitmapOptions);, +   private Bitmap decodeStream(InputStream is, BitmapFactory.Options decodeBitmapOptions) {, +       byte[] tempStorage = getTempBytes();, +       byte[] bufStorage = getTempBytes();, +       ReycleableBufferedInputStream bis = new ReycleableBufferedInputStream(is, bufStorage);, +       decodeBitmapOptions.inTempStorage = tempStorage;, +           releaseTempBytes(tempStorage, bufStorage);, +   private static BitmapFactory.Options getDefaultOptions() {, +      return getDefaultOptions(null);, +   private static BitmapFactory.Options getDefaultOptions(Bitmap recycle) {]