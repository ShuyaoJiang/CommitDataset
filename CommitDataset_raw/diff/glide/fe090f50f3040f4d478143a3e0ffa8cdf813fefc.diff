[+++ b/.travis.yml, +script: 'travis_retry ./gradlew clean checkstyle build', +++ b/.travis.yml, +script: 'travis_retry ./gradlew clean checkstyle build', +++ b/build.gradle, +    apply plugin: 'checkstyle', +, +    checkstyle {, +        configFile = new File(rootDir, 'checkstyle.xml'), +    }, +, +    task checkstyle(type: Checkstyle) {, +        source 'src', +        include '**/*.java', +        exclude '**/gen/**', +, +        // empty classpath, +        classpath = files(), +    }, +++ b/.travis.yml, +script: 'travis_retry ./gradlew clean checkstyle build', +++ b/build.gradle, +    apply plugin: 'checkstyle', +, +    checkstyle {, +        configFile = new File(rootDir, 'checkstyle.xml'), +    }, +, +    task checkstyle(type: Checkstyle) {, +        source 'src', +        include '**/*.java', +        exclude '**/gen/**', +, +        // empty classpath, +        classpath = files(), +    }, +++ b/checkstyle.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">, +<module name="Checker">, +    <module name="FileLength"/>, +    <module name="FileTabCharacter"/>, +, +    <!-- Trailing spaces -->, +    <module name="RegexpSingleline">, +        <property name="format" value="\s+$"/>, +        <property name="message" value="Line has trailing spaces."/>, +    </module>, +, +    <!-- Space after 'for' and 'if' -->, +    <module name="RegexpSingleline">, +        <property name="format" value="^\s*(for|if)\b[^ ]"/>, +        <property name="message" value="Space needed before opening parenthesis."/>, +    </module>, +, +    <!-- For each spacing -->, +    <module name="RegexpSingleline">, +        <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])"/>, +        <property name="message" value="Space needed around ':' character."/>, +    </module>, +, +    <module name="TreeWalker">, +        <!-- Checks for uncommented main() methods (debugging leftovers). -->, +        <!-- Checks that long constants are defined with an upper ell. -->, +        <!-- See http://checkstyle.sourceforge.net/config_misc.html#UpperEll -->, +        <module name="UpperEll" />, +, +        <!-- Checks the style of array type definitions. -->, +        <!-- See http://checkstyle.sourceforge.net/config_misc.html#ArrayTypeStyle -->, +        <module name="ArrayTypeStyle" />, +, +        <!-- Checks that the outer type name and the file name match. -->, +        <!-- See http://checkstyle.sourceforge.net/config_misc.html#OuterTypeFilename -->, +        <module name="OuterTypeFilename" />, +, +        <!-- Validates Javadoc comments to help ensure they are well formed. -->, +        <!-- See http://checkstyle.sourceforge.net/config_javadoc.html#JavadocStyle -->, +        <module name="JavadocStyle" />, +, +        <!-- Each of these naming modules validates identifiers for particular, +                code elements. -->, +        <!-- See http://checkstyle.sourceforge.net/config_naming.html -->, +        <module name="ConstantName">, +            <property name="format" value="^[A-Z][A-Z0-9\$]*(_[A-Z0-9\$]+)*$" />, +        </module>, +        <module name="LocalFinalVariableName" />, +        <module name="LocalVariableName" />, +        <module name="MemberName">, +            <property name="format" value="^[a-z][a-zA-Z0-9_\$]*$" />, +        </module>, +        <module name="MethodName" />, +        <module name="PackageName" />, +        <module name="ParameterName" />, +        <module name="StaticVariableName" />, +        <module name="TypeName" />, +, +        <module name="TrailingComment" />, +, +        <!-- Checks for imports. -->, +        <!-- See http://checkstyle.sourceforge.net/config_imports.html -->]