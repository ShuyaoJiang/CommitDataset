[+++ b/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        return new SourceGenerator(decodeHelper, this);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        return new SourceGenerator(decodeHelper, this);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +    isCancelled = true;, +    decodeJob.cancel();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        return new SourceGenerator(decodeHelper, this);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +    isCancelled = true;, +    decodeJob.cancel();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        return new SourceGenerator(decodeHelper, this);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +    isCancelled = true;, +    decodeJob.cancel();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java, +class SourceGenerator implements DataFetcherGenerator,, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DataCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java, +        return new SourceGenerator(decodeHelper, this);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java, +    isCancelled = true;, +    decodeJob.cancel();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/ResourceCacheGenerator.java, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/SourceGenerator.java, +class SourceGenerator implements DataFetcherGenerator,, +    while (!started && hasNextModelLoader()) {, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java]