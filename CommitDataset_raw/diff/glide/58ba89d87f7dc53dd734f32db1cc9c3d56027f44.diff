[+++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPool.java, +    public boolean put(Bitmap bitmap);, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPool.java, +    public boolean put(Bitmap bitmap);, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPoolAdapter.java, +    public boolean put(Bitmap bitmap) {, +        return false;, +    }, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPool.java, +    public boolean put(Bitmap bitmap);, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPoolAdapter.java, +    public boolean put(Bitmap bitmap) {, +        return false;, +    }, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/ConcurrentBitmapPool.java, +    public boolean put(Bitmap bitmap) {, +, +        return result;, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPool.java, +    public boolean put(Bitmap bitmap);, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPoolAdapter.java, +    public boolean put(Bitmap bitmap) {, +        return false;, +    }, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/ConcurrentBitmapPool.java, +    public boolean put(Bitmap bitmap) {, +, +        return result;, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/ConcurrentBitmapReferenceCounter.java, +    private final ConcurrentHashMap<Integer, InnerTracker> counter;, +        counter = new ConcurrentHashMap<Integer, InnerTracker>(bitmapsPerSize * 12);, +        final InnerTracker ifAbsent = pool.get();, +        final InnerTracker old = counter.putIfAbsent(toInit.hashCode(), ifAbsent);, +        if (old != null) {, +            pool.release(ifAbsent);, +        }, +        if (!target.put(bitmap)) {, +        }]