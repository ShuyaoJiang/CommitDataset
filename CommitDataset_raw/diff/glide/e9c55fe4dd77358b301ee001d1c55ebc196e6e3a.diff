[+++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineKeyTest.java, +import static org.hamcrest.CoreMatchers.equalTo;, +import static org.hamcrest.CoreMatchers.not;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotEquals;, +import static org.junit.Assert.assertThat;, +/**, + * Tests if {@link EngineKey} {@link Object#hashCode() hashCode} and {@link Object#equals(Object) equals}, + * and SHA-1 disk cache key are different on any difference in ID or existence of a certain workflow part., + * Also checking whether the equals method is symmetric., + *, + * @see #assertDifferent, + */, +    public void testDiffersIfIdDiffers() throws Exception {, +        assertDifferent(first, second);, +    public void testDiffersIfHeightDiffers() throws Exception {, +        assertDifferent(first, second);, +    public void testDiffersIfWidthDiffers() throws Exception {, +        assertDifferent(first, second);, +    public void testDiffersIfTransformationDiffers() throws Exception {, +        assertDifferent(first, second);, +    public void testDiffersIfTransformationMissing() throws Exception {, +        EngineKey first = harness.build();, +        harness.transformation = null;, +        EngineKey second = harness.build();, +, +        assertDifferent(first, second);, +    }, +, +    @Test, +    public void testDiffersIfCacheDecoderDiffers() throws Exception {, +        assertDifferent(first, second);, +    public void testDiffersIfCacheDecoderMissing() throws Exception {, +        EngineKey first = harness.build();, +        harness.cacheDecoder = null;, +        EngineKey second = harness.build();, +, +        assertDifferent(first, second);, +    }, +, +    @Test, +    public void testDiffersIfDecoderDiffers() throws Exception {, +        assertDifferent(first, second);, +    public void testDiffersIfDecoderMissing() throws Exception {, +        EngineKey first = harness.build();, +        harness.decoder = null;, +        EngineKey second = harness.build();, +, +        assertDifferent(first, second);, +    }, +, +    @Test, +    public void testDiffersIfEncoderDiffers() throws Exception {, +        assertDifferent(first, second);, +    public void testDiffersIfEncoderMissing() throws Exception {, +        EngineKey first = harness.build();, +        harness.encoder = null;, +        EngineKey second = harness.build();, +, +        assertDifferent(first, second);, +    }, +, +    @Test, +    public void testDiffersWhenTranscoderDiffers() throws Exception {, +        // The transcoder doesn't affect the cached data,, +        // so we don't expect the key digests to updated differently even though the transcoder id isn't the same., +        assertDifferent(first, second, false);, +        assertDifferent(second, first, false);, +    public void testDiffersIfTranscoderMissing() throws Exception {, +        EngineKey first = harness.build();, +        harness.transcoder = null;, +        EngineKey second = harness.build();, +, +        assertDifferent(first, second, false);, +        assertDifferent(second, first, false);, +    }, +, +    @Test, +    public void testDiffersWhenSourceEncoderDiffers() throws Exception {, +        assertDifferent(first, second);, +    @Test, +    public void testDiffersIfSourceEncoderMissing() throws Exception {, +        EngineKey first = harness.build();, +        harness.sourceEncoder = null;, +        EngineKey second = harness.build();, +, +        assertDifferent(first, second);, +    private static void assertDifferent(EngineKey first, EngineKey second), +        assertDifferent(first, second, true);, +        assertDifferent(second, first, true);, +    }, +, +    private static void assertDifferent(EngineKey first, EngineKey second, boolean diskCacheDiffers), +            throws NoSuchAlgorithmException, UnsupportedEncodingException {, +        assertNotEquals(first, second);, +        assertNotEquals(first.hashCode(), second.hashCode());, +, +            assertThat(firstDigest.digest(), not(equalTo(secondDigest.digest())));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineKeyTest.java, +import static org.hamcrest.CoreMatchers.equalTo;]