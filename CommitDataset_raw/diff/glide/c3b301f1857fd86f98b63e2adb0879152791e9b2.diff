[+++ b/library/src/com/bumptech/photos/presenter/ImagePresenter.java, +import android.view.View;, +, +    private final SizeDeterminer sizeDeterminer;, +        sizeDeterminer = new SizeDeterminer(imageView);, +        sizeDeterminer.getSize(new SizeDeterminer.SizeReadyCallback() {, +            public void onSizeReady(int width, int height) {, +                fetchPath(model, width, height, loadCount);, +        });, +    private void fetchPath(final T model, final int width, final int height, final int loadCount) {, +        pathToken = pathLoader.fetchPath(model, width, height, new PathLoader.PathReadyCallback() {, +            public boolean onPathReady(final String path) {, +                fetchImage(path, model, width, height, loadCount);, +    private void fetchImage(final String path, T model, int width, int height, final int loadCount) {, +        imageToken = imageLoader.fetchImage(path, model, width, height, new ImageLoader.ImageReadyCallback() {, +    private static class SizeDeterminer {, +        private static final String PENDING_SIZE_CHANGE_TOKEN = "pending_load";, +        private static final int PENDING_SIZE_CHANGE_DELAY = 100; //60 fps = 1000/60 = 16.67 ms, +, +        private final View view;, +        private int width = 0;, +        private int height = 0;, +        private boolean valid = false;, +        private SizeReadyCallback cb = null;, +        private final Runnable getDimens = new Runnable() {, +            @Override, +            public void run() {, +                if (cb == null) return;, +, +                ViewGroup.LayoutParams layoutParams = view.getLayoutParams();, +                if (layoutParams.width > 0 && layoutParams.height > 0) {, +                    cb.onSizeReady(layoutParams.width, layoutParams.height);, +                } else if (view.getWidth() > 0 && view.getHeight() > 0) {, +                    valid = true;, +                    width = view.getWidth();, +                    height = view.getHeight();, +                    cb.onSizeReady(width, height);, +                    cb = null;, +                }, +            }, +        };, +, +            private final WeakReference<SizeDeterminer> sizeDeterminerRef;, +            private Handler handler = new Handler();, +            public SizeObserver(SizeDeterminer sizeDeterminer) {, +                this.sizeDeterminerRef = new WeakReference<SizeDeterminer>(sizeDeterminer);, +                final SizeDeterminer sizeDeterminer = sizeDeterminerRef.get();, +                if (sizeDeterminer != null) {, +                    handler.removeCallbacksAndMessages(PENDING_SIZE_CHANGE_TOKEN);, +                    handler.postAtTime(new Runnable() {, +                        @Override, +                        public void run() {, +                            sizeDeterminer.maybeInvalidate();, +                        }, +                    }, PENDING_SIZE_CHANGE_TOKEN, SystemClock.uptimeMillis() + PENDING_SIZE_CHANGE_DELAY);, +                }, +            }, +        }, +        public interface SizeReadyCallback {, +            public void onSizeReady(int width, int height);, +        }, +, +        public SizeDeterminer(View view) {, +            this.view = view;, +            view.getViewTreeObserver().addOnGlobalLayoutListener(new SizeObserver(this));, +        }, +, +        public void getSize(SizeReadyCallback cb) {, +            this.cb = null;, +            ViewGroup.LayoutParams layoutParams = view.getLayoutParams();, +            if (layoutParams.width > 0 && layoutParams.height > 0) {, +                cb.onSizeReady(layoutParams.width, layoutParams.height);, +            } else if (valid) {, +                cb.onSizeReady(width, height);, +            } else {, +                this.cb = cb;, +                view.removeCallbacks(getDimens);, +                view.post(getDimens);, +            }, +        }, +, +        private void maybeInvalidate() {, +            ViewGroup.LayoutParams layoutParams = view.getLayoutParams();, +            if (layoutParams.width <= 0 || layoutParams.height <= 0) {, +                if (view.getWidth() >= 0 && view.getHeight() >= 0) {, +                    width = view.getWidth();, +                    height = view.getHeight();, +                    valid = true;, +                    if (cb != null) {, +                        cb.onSizeReady(width, height);, +                        cb = null;, +                    }, +                } else {, +                    valid = false;]