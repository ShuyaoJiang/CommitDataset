[+++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +import com.bumptech.glide.resize.bitmap_recycle.BitmapPool;, +import com.bumptech.glide.resize.cache.DiskCache;, +import com.bumptech.glide.resize.cache.MemoryCache;, +import static org.mockito.Matchers.eq;, +                .setEngine(new EngineBuilder(mock(MemoryCache.class), mock(DiskCache.class)), +    @Test, +    public void testClearMemory() {, +        BitmapPool bitmapPool = mock(BitmapPool.class);, +        MemoryCache memoryCache = mock(MemoryCache.class);, +, +        Glide glide = new GlideBuilder(getContext()), +                .setBitmapPool(bitmapPool), +                .setMemoryCache(memoryCache), +                .createGlide();, +, +        glide.clearMemory();, +, +        verify(bitmapPool).clearMemory();, +        verify(memoryCache).clearMemory();, +    }, +, +    @Test, +    public void testTrimMemory() {, +        BitmapPool bitmapPool = mock(BitmapPool.class);, +        MemoryCache memoryCache = mock(MemoryCache.class);, +, +        Glide glide = new GlideBuilder(getContext()), +                .setBitmapPool(bitmapPool), +                .setMemoryCache(memoryCache), +                .createGlide();, +, +        final int level = 123;, +, +        glide.trimMemory(level);, +, +        verify(bitmapPool).trimMemory(eq(level));, +        verify(memoryCache).trimMemory(eq(level));, +    }, +++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +import com.bumptech.glide.resize.bitmap_recycle.BitmapPool;, +import com.bumptech.glide.resize.cache.DiskCache;, +import com.bumptech.glide.resize.cache.MemoryCache;, +import static org.mockito.Matchers.eq;, +                .setEngine(new EngineBuilder(mock(MemoryCache.class), mock(DiskCache.class)), +    @Test, +    public void testClearMemory() {, +        BitmapPool bitmapPool = mock(BitmapPool.class);, +        MemoryCache memoryCache = mock(MemoryCache.class);, +, +        Glide glide = new GlideBuilder(getContext()), +                .setBitmapPool(bitmapPool), +                .setMemoryCache(memoryCache), +                .createGlide();, +, +        glide.clearMemory();, +, +        verify(bitmapPool).clearMemory();, +        verify(memoryCache).clearMemory();, +    }, +, +    @Test, +    public void testTrimMemory() {, +        BitmapPool bitmapPool = mock(BitmapPool.class);, +        MemoryCache memoryCache = mock(MemoryCache.class);, +, +        Glide glide = new GlideBuilder(getContext()), +                .setBitmapPool(bitmapPool), +                .setMemoryCache(memoryCache), +                .createGlide();, +, +        final int level = 123;, +, +        glide.trimMemory(level);, +, +        verify(bitmapPool).trimMemory(eq(level));, +        verify(memoryCache).trimMemory(eq(level));, +    }, +++ b/library/robolectric/src/com/bumptech/glide/resize/DefaultResourceRunnerFactoryTest.java, +import com.bumptech.glide.resize.cache.MemoryCache;, +        MemoryCache memoryCache = mock(MemoryCache.class);, +        DefaultResourceRunnerFactory factory = new DefaultResourceRunnerFactory(memoryCache, diskCache,, +++ b/library/robolectric/src/com/bumptech/glide/GlideTest.java, +import com.bumptech.glide.resize.bitmap_recycle.BitmapPool;, +import com.bumptech.glide.resize.cache.DiskCache;, +import com.bumptech.glide.resize.cache.MemoryCache;, +import static org.mockito.Matchers.eq;, +                .setEngine(new EngineBuilder(mock(MemoryCache.class), mock(DiskCache.class)), +    @Test, +    public void testClearMemory() {, +        BitmapPool bitmapPool = mock(BitmapPool.class);, +        MemoryCache memoryCache = mock(MemoryCache.class);, +, +        Glide glide = new GlideBuilder(getContext()), +                .setBitmapPool(bitmapPool), +                .setMemoryCache(memoryCache), +                .createGlide();, +, +        glide.clearMemory();, +]