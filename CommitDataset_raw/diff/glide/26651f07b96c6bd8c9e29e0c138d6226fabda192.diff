[+++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +        final AtomicInteger calledCount = new AtomicInteger();, +            public Object getPreloadItem(int position) {, +                final int count = calledCount.getAndIncrement();, +                assertEquals(11 + count, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +        assertEquals(10, calledCount.get());, +            public int[] getPreloadSize(Object item, int pos) {, +            public Object getPreloadItem(int position) {, +                return objects.get(position - 10);, +                assertEquals(objects.get(pos - 10), item);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter,, +                                                                    toPreload);, +        preloader.onScroll(null, 1, 10, 20);, +        final AtomicInteger calledCount = new AtomicInteger();, +            public Object getPreloadItem(int position) {, +                if (position >= 40) {, +                final int count = calledCount.getAndIncrement();, +                assertEquals(28 - count, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +            public int[] getPreloadSize(Object item, int pos) {, +            public Object getPreloadItem(int position) {, +                if (position == 40) {, +                    return null;, +                return objects.get(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter,, +                                                                    toPreload);, +        preloader.onScroll(null, 30, 10, 10);, +        preloader.onScroll(null, 29, 10, 10);, +        final AtomicInteger calledCount = new AtomicInteger();, +            public Object getPreloadItem(int position) {, +                final int count = calledCount.getAndIncrement();, +                assertEquals(26 + count, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +        final AtomicInteger calledCount = new AtomicInteger();, +            public Object getPreloadItem(int position) {, +                if (position >= 17) {, +                final int count = calledCount.getAndIncrement();, +                assertEquals(5 - count, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +            public Object getPreloadItem(int position) {, +                assertEquals(11 + current, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +        assertEquals(13, called.get());, +            public Object getPreloadItem(int position) {, +                if (position >= 20) {, +                assertEquals(19 - current, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +        assertEquals(13, called.get());, +            public Object getPreloadItem(int position) {, +                return objects.get(position - 11);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +        preloader.onScroll(null, 1, 10, 13);, +    private static class ListPreloaderAdapter implements ListPreloader.PreloadModelProvider<Object>,, +            ListPreloader.PreloadSizeProvider<Object> {, +        public Object getPreloadItem(int position) {, +            return new Object();, +        public int[] getPreloadSize(Object item, int position) {, +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +        final AtomicInteger calledCount = new AtomicInteger();, +            public Object getPreloadItem(int position) {, +                final int count = calledCount.getAndIncrement();, +                assertEquals(11 + count, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +        assertEquals(10, calledCount.get());, +            public int[] getPreloadSize(Object item, int pos) {, +            public Object getPreloadItem(int position) {, +                return objects.get(position - 10);, +                assertEquals(objects.get(pos - 10), item);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter,, +                                                                    toPreload);, +        preloader.onScroll(null, 1, 10, 20);, +        final AtomicInteger calledCount = new AtomicInteger();, +            public Object getPreloadItem(int position) {, +                if (position >= 40) {, +                final int count = calledCount.getAndIncrement();, +                assertEquals(28 - count, position);, +                return super.getPreloadItem(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, 10);, +            public int[] getPreloadSize(Object item, int pos) {, +            public Object getPreloadItem(int position) {, +                if (position == 40) {, +                    return null;, +                return objects.get(position);, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter,, +                                                                    toPreload);, +        preloader.onScroll(null, 30, 10, 10);, +        preloader.onScroll(null, 29, 10, 10);, +        final AtomicInteger calledCount = new AtomicInteger();, +            public Object getPreloadItem(int position) {, +                final int count = calledCount.getAndIncrement();, +                assertEquals(26 + count, position);, +                return super.getPreloadItem(position);]