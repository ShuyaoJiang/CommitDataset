[+++ b/gradle.properties, +TRUTH_VERSION=0.24, +++ b/gradle.properties, +TRUTH_VERSION=0.24, +++ b/integration/volley/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/gradle.properties, +TRUTH_VERSION=0.24, +++ b/integration/volley/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java, +import static com.google.common.truth.Truth.assertThat;, +import static org.junit.Assert.assertEquals;, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertThat(mockWebServer.takeRequest().getPath()).contains(DEFAULT_PATH);, +            assertThat(mockWebServer.takeRequest().getPath()).contains(redirectBase + i);, +            assertThat(e.getCause()).isInstanceOf(VolleyError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause().getCause()).isInstanceOf(ProtocolException.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +++ b/gradle.properties, +TRUTH_VERSION=0.24, +++ b/integration/volley/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java, +import static com.google.common.truth.Truth.assertThat;, +import static org.junit.Assert.assertEquals;, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertThat(mockWebServer.takeRequest().getPath()).contains(DEFAULT_PATH);, +            assertThat(mockWebServer.takeRequest().getPath()).contains(redirectBase + i);, +            assertThat(e.getCause()).isInstanceOf(VolleyError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause().getCause()).isInstanceOf(ProtocolException.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +++ b/library/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/gradle.properties, +TRUTH_VERSION=0.24, +++ b/integration/volley/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java, +import static com.google.common.truth.Truth.assertThat;, +import static org.junit.Assert.assertEquals;, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertThat(mockWebServer.takeRequest().getPath()).contains(DEFAULT_PATH);, +            assertThat(mockWebServer.takeRequest().getPath()).contains(redirectBase + i);, +            assertThat(e.getCause()).isInstanceOf(VolleyError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause().getCause()).isInstanceOf(ProtocolException.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +++ b/library/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static com.google.common.truth.Truth.assertThat;, +        assertThat(loadedObjects).containsAllIn(objects);, +++ b/gradle.properties, +TRUTH_VERSION=0.24, +++ b/integration/volley/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java, +import static com.google.common.truth.Truth.assertThat;, +import static org.junit.Assert.assertEquals;, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertThat(mockWebServer.takeRequest().getPath()).contains(DEFAULT_PATH);, +            assertThat(mockWebServer.takeRequest().getPath()).contains(redirectBase + i);, +            assertThat(e.getCause()).isInstanceOf(VolleyError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause()).isInstanceOf(NoConnectionError.class);, +            assertThat(e.getCause().getCause()).isInstanceOf(ProtocolException.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +            assertThat(e.getCause()).isInstanceOf(ServerError.class);, +++ b/library/build.gradle, +    androidTestCompile "com.google.truth:truth:${TRUTH_VERSION}", +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +import static com.google.common.truth.Truth.assertThat;, +        assertThat(loadedObjects).containsAllIn(objects);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java, +import static com.google.common.truth.Truth.assertThat;, +import static org.junit.Assert.assertEquals;, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));, +        assertEquals(expected, isToString(is));]