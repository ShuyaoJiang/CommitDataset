[+++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(String key, Boolean value, MessageDigest messageDigest) {, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(String key, Boolean value, MessageDigest messageDigest) {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/OptionsTest.java, +package com.bumptech.glide.load;, +, +import com.google.common.testing.EqualsTester;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +public class OptionsTest {, +, +  @Test, +  public void testEquals() {, +    Option<Object> firstOption = Option.memory("firstKey");, +    Object firstValue = new Object();, +    Option<Object> secondOption = Option.memory("secondKey");, +    Object secondValue = new Object();, +    new EqualsTester(), +        .addEqualityGroup(new Options(), new Options()), +        .addEqualityGroup(, +            new Options().set(firstOption, firstValue),, +            new Options().set(firstOption, firstValue), +        ), +        .addEqualityGroup(, +            new Options().set(secondOption, secondValue),, +            new Options().set(secondOption, secondValue), +        ), +        .addEqualityGroup(, +            new Options().set(firstOption, firstValue).set(secondOption, secondValue),, +            new Options().set(firstOption, firstValue).set(secondOption, secondValue), +        ).testEquals();, +  }, +, +}, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(String key, Boolean value, MessageDigest messageDigest) {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/OptionsTest.java, +package com.bumptech.glide.load;, +, +import com.google.common.testing.EqualsTester;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +public class OptionsTest {, +, +  @Test, +  public void testEquals() {, +    Option<Object> firstOption = Option.memory("firstKey");, +    Object firstValue = new Object();, +    Option<Object> secondOption = Option.memory("secondKey");, +    Object secondValue = new Object();, +    new EqualsTester(), +        .addEqualityGroup(new Options(), new Options()), +        .addEqualityGroup(, +            new Options().set(firstOption, firstValue),, +            new Options().set(firstOption, firstValue), +        ), +        .addEqualityGroup(, +            new Options().set(secondOption, secondValue),, +            new Options().set(secondOption, secondValue), +        ), +        .addEqualityGroup(, +            new Options().set(firstOption, firstValue).set(secondOption, secondValue),, +            new Options().set(firstOption, firstValue).set(secondOption, secondValue), +        ).testEquals();, +  }, +, +}, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineKeyTest.java, +import com.bumptech.glide.load.Option;, +import com.bumptech.glide.load.Options;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18), +    Options options = new Options();, +          resourceClass, transcodeClass, options);, +, +  @Test, +  public void testDiffersIfOptionsDiffer() throws NoSuchAlgorithmException {, +    EngineKey first = harness.build();, +    harness.options = new Options();, +    harness.options.set(Option.memory("fakeKey"), "someValue");, +    EngineKey second = harness.build();, +    KeyAssertions.assertDifferent(first, second, false /*checkDiskCacheKey*/);, +  }, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +        public void update(String key, Boolean value, MessageDigest messageDigest) {]