[+++ b/src/com/bumptech/photos/PhotoManager.java, +import com.bumptech.photos.cache.SizedBitmapCache;, +    private SizedBitmapCache bitmapCache = new SizedBitmapCache();, +        this.resizer = new PhotoStreamResizer(mainHandler, bitmapCache);, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +        private final String key;, +        public DiskCacheCallback(String key, Object token, LoadedCallback cb) {, +        public void onGet(InputStream is1, InputStream is2) {, +            final boolean inDiskCache = is1 != null && is2 != null;, +                task = resizer.loadAsIs(is1, is2, resizeCb);, +            bitmapCache.put(b);, +++ b/src/com/bumptech/photos/PhotoManager.java, +import com.bumptech.photos.cache.SizedBitmapCache;, +    private SizedBitmapCache bitmapCache = new SizedBitmapCache();, +        this.resizer = new PhotoStreamResizer(mainHandler, bitmapCache);, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +        private final String key;, +        public DiskCacheCallback(String key, Object token, LoadedCallback cb) {, +        public void onGet(InputStream is1, InputStream is2) {, +            final boolean inDiskCache = is1 != null && is2 != null;, +                task = resizer.loadAsIs(is1, is2, resizeCb);, +            bitmapCache.put(b);, +++ b/src/com/bumptech/photos/cache/PhotoDiskCache.java, +        public void onGet(InputStream is1, InputStream is2);, +                //disk cache doesn't allow keys with anything but a-zA-Z0-9 :(, +                InputStream result1 = null;, +                InputStream result2 = null;, +                    DiskLruCache.Snapshot snapshot1 = cache.get(safeKey);, +                    if (snapshot1 != null) {, +                        result1 = snapshot1.getInputStream(VALUE_COUNT - 1);, +                     DiskLruCache.Snapshot snapshot2 = cache.get(safeKey);, +, +                    if (snapshot2 != null) {, +                        result2 = snapshot2.getInputStream(VALUE_COUNT - 1);, +                    } else {, +                        Log.d("DLRU: not found key=" + key);, +                    }, +, +, +                final InputStream finalResult1 = result1;, +                final InputStream finalResult2 = result2;, +                        cb.onGet(finalResult1, finalResult2);, +++ b/src/com/bumptech/photos/PhotoManager.java, +import com.bumptech.photos.cache.SizedBitmapCache;, +    private SizedBitmapCache bitmapCache = new SizedBitmapCache();, +        this.resizer = new PhotoStreamResizer(mainHandler, bitmapCache);, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +            Runnable checkDiskCache = diskCache.get(key, new DiskCacheCallback(key, token, cb) {, +        private final String key;, +        public DiskCacheCallback(String key, Object token, LoadedCallback cb) {, +        public void onGet(InputStream is1, InputStream is2) {, +            final boolean inDiskCache = is1 != null && is2 != null;, +                task = resizer.loadAsIs(is1, is2, resizeCb);, +            bitmapCache.put(b);, +++ b/src/com/bumptech/photos/cache/PhotoDiskCache.java, +        public void onGet(InputStream is1, InputStream is2);, +                //disk cache doesn't allow keys with anything but a-zA-Z0-9 :(, +                InputStream result1 = null;, +                InputStream result2 = null;, +                    DiskLruCache.Snapshot snapshot1 = cache.get(safeKey);, +                    if (snapshot1 != null) {, +                        result1 = snapshot1.getInputStream(VALUE_COUNT - 1);, +                     DiskLruCache.Snapshot snapshot2 = cache.get(safeKey);, +, +                    if (snapshot2 != null) {, +                        result2 = snapshot2.getInputStream(VALUE_COUNT - 1);, +                    } else {, +                        Log.d("DLRU: not found key=" + key);, +                    }, +, +, +                final InputStream finalResult1 = result1;, +                final InputStream finalResult2 = result2;, +                        cb.onGet(finalResult1, finalResult2);, +++ b/src/com/bumptech/photos/cache/SizedBitmapCache.java, +/*, + * Copyright (c) 2012. Bump Technologies Inc. All Rights Reserved., + */, +, +package com.bumptech.photos.cache;, +, +import android.graphics.Bitmap;, +import com.bumptech.photos.util.Log;, +, +import java.util.HashMap;, +import java.util.LinkedList;, +import java.util.Map;, +import java.util.Queue;, +, +/**, + * Created with IntelliJ IDEA., + * User: sam, + * Date: 12/25/12, + * Time: 4:31 PM, + * To change this template use File | Settings | File Templates.]