[+++ b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/Api.java, +import com.bumptech.glide.util.Util;, +   *, +   * <p>Implements equals and hashcode so that in memory caching will work when this object is used, +   * as a model for loading Glide's images., +    public int hashCode() {, +      int result = id != null ? id.hashCode() : 17;, +      result = 31 * result + (images != null ? images.hashCode() : 17);, +      return result;, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +      if (obj instanceof GifResult) {, +        GifResult other = (GifResult) obj;, +        return Util.bothNullOrEqual(id, other.id), +            && Util.bothNullOrEqual(images, other.images);, +      }, +      return false;, +    }, +, +    @Override, +    public int hashCode() {, +      int result = original != null ? original.hashCode() : 17;, +      result = 31 * result + (fixed_width != null ? fixed_width.hashCode() : 17);, +      result = 31 * result + (fixed_height != null ? fixed_height.hashCode() : 17);, +      return result;, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +      if (obj instanceof GifUrlSet) {, +        GifUrlSet other = (GifUrlSet) obj;, +        return Util.bothNullOrEqual(original, other.original), +            && Util.bothNullOrEqual(fixed_width, other.fixed_width), +            && Util.bothNullOrEqual(fixed_height, other.fixed_height);, +      }, +      return false;, +    }, +, +    @Override, +    public int hashCode() {, +      int result = url != null ? url.hashCode() : 17;, +      result = 31 * result + width;, +      result = 31 * result + height;, +      return result;, +    }, +, +    @Override, +    public boolean equals(Object obj) {, +      if (obj instanceof GifImage) {, +        GifImage other = (GifImage) obj;, +        return other.width == width, +            && other.height == height, +            && Util.bothNullOrEqual(url, other.url);, +      }, +      return false;, +    }, +]