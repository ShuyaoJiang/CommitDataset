[+++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    public DrawableRequestBuilder<ModelType> listener(, +            RequestListener<? super ModelType, GlideDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    public DrawableRequestBuilder<ModelType> listener(, +            RequestListener<? super ModelType, GlideDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private RequestListener<? super ModelType, TranscodeType> requestListener;, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    public DrawableRequestBuilder<ModelType> listener(, +            RequestListener<? super ModelType, GlideDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private RequestListener<? super ModelType, TranscodeType> requestListener;, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/GifRequestBuilder.java, +            RequestListener<? super ModelType, GifDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    public DrawableRequestBuilder<ModelType> listener(, +            RequestListener<? super ModelType, GlideDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private RequestListener<? super ModelType, TranscodeType> requestListener;, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/GifRequestBuilder.java, +            RequestListener<? super ModelType, GifDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/request/GenericRequest.java, +    private RequestListener<? super A, R> requestListener;, +            RequestListener<? super A, R> requestListener,, +            RequestListener<? super A, R> requestListener,, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    public DrawableRequestBuilder<ModelType> listener(, +            RequestListener<? super ModelType, GlideDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private RequestListener<? super ModelType, TranscodeType> requestListener;, +            RequestListener<? super ModelType, TranscodeType> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/GifRequestBuilder.java, +            RequestListener<? super ModelType, GifDrawable> requestListener) {, +++ b/library/src/main/java/com/bumptech/glide/request/GenericRequest.java, +    private RequestListener<? super A, R> requestListener;, +            RequestListener<? super A, R> requestListener,, +            RequestListener<? super A, R> requestListener,, +++ b/samples/giphy/src/main/java/com/bumptech/glide/samples/giphy/FullscreenActivity.java, +                .listener(new RequestListener<Object, GlideDrawable>() {, +                    public boolean onException(Exception e, Object model, Target<GlideDrawable> target,, +                    public boolean onResourceReady(GlideDrawable resource, Object model, Target<GlideDrawable> target,]