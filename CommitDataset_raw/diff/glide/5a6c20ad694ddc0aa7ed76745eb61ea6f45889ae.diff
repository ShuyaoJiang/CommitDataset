[+++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +, +        /**, +         * The maximum number of recycled bitmaps of any requested size to keep around. Only used if recycleBitmaps, +         * is true. A higher number means loads are more likely to be able to reuse a bitmap but also that this object, +         * will use more memory. Increase this if there are few varieties of bitmaps that will be scrolled rapidly (ie, +         * a GridView of images with lots of columns), and decrease it if there are a lot of different sizes of bitmaps, +         * and limited memory is available., +         *, +         * Defaults to 20, +         */, +        public int maxPerSize = 0;, +            bitmapCache = new SizedBitmapCache(options.maxPerSize);, +++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +, +        /**, +         * The maximum number of recycled bitmaps of any requested size to keep around. Only used if recycleBitmaps, +         * is true. A higher number means loads are more likely to be able to reuse a bitmap but also that this object, +         * will use more memory. Increase this if there are few varieties of bitmaps that will be scrolled rapidly (ie, +         * a GridView of images with lots of columns), and decrease it if there are a lot of different sizes of bitmaps, +         * and limited memory is available., +         *, +         * Defaults to 20, +         */, +        public int maxPerSize = 0;, +            bitmapCache = new SizedBitmapCache(options.maxPerSize);, +++ b/library/src/com/bumptech/photos/resize/cache/SizedBitmapCache.java, +    private static final int DEFAULT_MAX_PER_SIZE = 20;, +    private final int maxPerSize;, +, +    public SizedBitmapCache(int maxPerSize) {, +        this.maxPerSize = maxPerSize == 0 ? DEFAULT_MAX_PER_SIZE : maxPerSize;, +    }, +        if (available.size() < maxPerSize) {]