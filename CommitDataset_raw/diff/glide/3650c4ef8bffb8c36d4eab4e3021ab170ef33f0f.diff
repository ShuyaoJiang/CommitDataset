[+++ b/checkstyle.xml, +        <module name="AvoidNestedBlocks">, +          <property name="allowInSwitchCase" value="true" />, +        </module>, +++ b/checkstyle.xml, +        <module name="AvoidNestedBlocks">, +          <property name="allowInSwitchCase" value="true" />, +        </module>, +++ b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/MainActivity.java, +import android.Manifest.permission;, +import android.annotation.TargetApi;, +import android.content.pm.PackageManager;, +import android.os.Build;, +import android.support.annotation.NonNull;, +import android.support.v4.app.ActivityCompat;, +import android.support.v4.app.Fragment;, +import android.support.v4.content.ContextCompat;, +import android.widget.Toast;, +  private static final int REQUEST_READ_STORAGE = 0;, +, +    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M, +        && ContextCompat.checkSelfPermission(this, permission.READ_EXTERNAL_STORAGE), +        != PackageManager.PERMISSION_GRANTED) {, +      requestStoragePermission();, +    } else {, +      replaceFragment();, +    }, +  }, +, +  @TargetApi(Build.VERSION_CODES.JELLY_BEAN), +  private void requestStoragePermission() {, +     ActivityCompat.requestPermissions(this,, +        new String[]{permission.READ_EXTERNAL_STORAGE},, +        REQUEST_READ_STORAGE);, +  }, +, +  private void replaceFragment() {, +    Fragment fragment = new HorizontalGalleryFragment();, +    getSupportFragmentManager(), +        .beginTransaction(), +        .replace(R.id.fragment_container, fragment), +        .commit();, +  }, +, +  @Override, +  public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,, +      @NonNull int[] grantResults) {, +    super.onRequestPermissionsResult(requestCode, permissions, grantResults);, +    switch (requestCode) {, +      case REQUEST_READ_STORAGE: {, +        // If request is cancelled, the result arrays are empty., +        if (grantResults.length > 0, +            && grantResults[0] == PackageManager.PERMISSION_GRANTED) {, +          replaceFragment();, +        } else {, +          Toast.makeText(this, "Storage permission is required", Toast.LENGTH_LONG), +              .show();, +          requestStoragePermission();, +        }, +      }, +    }, +++ b/checkstyle.xml, +        <module name="AvoidNestedBlocks">, +          <property name="allowInSwitchCase" value="true" />, +        </module>, +++ b/samples/gallery/src/main/java/com/bumptech/glide/samples/gallery/MainActivity.java, +import android.Manifest.permission;, +import android.annotation.TargetApi;, +import android.content.pm.PackageManager;, +import android.os.Build;, +import android.support.annotation.NonNull;, +import android.support.v4.app.ActivityCompat;, +import android.support.v4.app.Fragment;, +import android.support.v4.content.ContextCompat;, +import android.widget.Toast;, +  private static final int REQUEST_READ_STORAGE = 0;, +, +    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M, +        && ContextCompat.checkSelfPermission(this, permission.READ_EXTERNAL_STORAGE), +        != PackageManager.PERMISSION_GRANTED) {, +      requestStoragePermission();, +    } else {, +      replaceFragment();, +    }, +  }, +, +  @TargetApi(Build.VERSION_CODES.JELLY_BEAN), +  private void requestStoragePermission() {, +     ActivityCompat.requestPermissions(this,, +        new String[]{permission.READ_EXTERNAL_STORAGE},, +        REQUEST_READ_STORAGE);, +  }, +, +  private void replaceFragment() {, +    Fragment fragment = new HorizontalGalleryFragment();, +    getSupportFragmentManager(), +        .beginTransaction(), +        .replace(R.id.fragment_container, fragment), +        .commit();, +  }]