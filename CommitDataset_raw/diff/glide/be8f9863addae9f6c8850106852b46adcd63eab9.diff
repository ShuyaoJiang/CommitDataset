[+++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +import java.util.Arrays;, +import java.util.HashSet;, +  private static final String WBMP_MIME_TYPE = "image/vnd.wap.wbmp";, +  private static final String ICO_MIME_TYPE = "image/x-ico";, +  private static final Set<String> NO_DOWNSAMPLE_PRE_N_MIME_TYPES =, +      Collections.unmodifiableSet(, +          new HashSet<>(, +              Arrays.asList(, +                  WBMP_MIME_TYPE,, +                  ICO_MIME_TYPE, +              ), +          ), +      );, +    int powerOfTwoSampleSize;, +    // BitmapFactory does not support downsampling wbmp files on platforms <= M. See b/27305903., +    if (Build.VERSION.SDK_INT <= 23, +        && NO_DOWNSAMPLE_PRE_N_MIME_TYPES.contains(options.outMimeType)) {, +      powerOfTwoSampleSize = 1;, +    } else {, +      powerOfTwoSampleSize = Math.max(1, Integer.highestOneBit(scaleFactor));, +      if (rounding == SampleSizeRounding.MEMORY, +          && powerOfTwoSampleSize < (1.f / exactScaleFactor)) {, +    }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java, +import java.util.Arrays;, +import java.util.HashSet;, +  private static final String WBMP_MIME_TYPE = "image/vnd.wap.wbmp";, +  private static final String ICO_MIME_TYPE = "image/x-ico";, +  private static final Set<String> NO_DOWNSAMPLE_PRE_N_MIME_TYPES =, +      Collections.unmodifiableSet(, +          new HashSet<>(, +              Arrays.asList(, +                  WBMP_MIME_TYPE,, +                  ICO_MIME_TYPE, +              ), +          ), +      );, +    int powerOfTwoSampleSize;, +    // BitmapFactory does not support downsampling wbmp files on platforms <= M. See b/27305903., +    if (Build.VERSION.SDK_INT <= 23, +        && NO_DOWNSAMPLE_PRE_N_MIME_TYPES.contains(options.outMimeType)) {, +      powerOfTwoSampleSize = 1;, +    } else {, +      powerOfTwoSampleSize = Math.max(1, Integer.highestOneBit(scaleFactor));, +      if (rounding == SampleSizeRounding.MEMORY, +          && powerOfTwoSampleSize < (1.f / exactScaleFactor)) {, +    }, +++ b/library/src/test/java/com/bumptech/glide/load/resource/bitmap/DownsamplerTest.java, +import android.os.Build;, +import com.bumptech.glide.tests.Util;, +import org.junit.After;, +  private int initialSdkVersion;, +, +    initialSdkVersion = Build.VERSION.SDK_INT;, +  }, +, +  @After, +  public void tearDown() {, +    Util.setSdkVersionInt(initialSdkVersion);, +  // BitmapFactory does not support downsampling wbmp files on platforms <=M. See b/27305903., +  @Test, +  public void testCalculateScaling_withWbmp() {, +    Util.setSdkVersionInt(23);, +    DownsampleStrategy strategy = DownsampleStrategy.FIT_CENTER;, +    BitmapFactory.Options options = new BitmapFactory.Options();, +, +    options.outMimeType = "image/vnd.wap.wbmp";, +    runScaleTest(100, 100, 100, 100, strategy, 100, 100, options);, +    runScaleTest(200, 200, 100, 100, strategy, 100, 100, options);, +    runScaleTest(400, 400, 100, 100, strategy, 100, 100, options);, +    runScaleTest(300, 300, 100, 100, strategy, 100, 100, options);, +    runScaleTest(799, 100, 100, 100, strategy, 100, 13, options);, +    runScaleTest(800, 100, 100, 100, strategy, 100, 13, options);, +    runScaleTest(801, 100, 100, 100, strategy, 100, 13, options);, +    runScaleTest(100, 800, 100, 100, strategy, 13, 100, options);, +    runScaleTest(87, 78, 100, 100, strategy, 100, 90, options);, +  }, +, +    runScaleTest(sourceWidth, sourceHeight, targetWidth, targetHeight, strategy, expectedWidth,, +        expectedHeight, new BitmapFactory.Options());, +  }, +, +  private static void runScaleTest(int sourceWidth, int sourceHeight, int targetWidth,, +      int targetHeight, DownsampleStrategy strategy, int expectedWidth, int expectedHeight,, +      BitmapFactory.Options options) {]