[+++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +            return BitmapRequestBuilder.get(), +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +            return BitmapRequestBuilder.get(), +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +        final BitmapRequestBuilder<ModelType, Z> builder = BitmapRequestBuilder.get();, +        return builder, +++ b/library/robolectric/src/com/bumptech/glide/request/BitmapRequestTest.java, +            return BitmapRequestBuilder.get(), +++ b/library/src/com/bumptech/glide/GenericRequestBuilder.java, +        final BitmapRequestBuilder<ModelType, Z> builder = BitmapRequestBuilder.get();, +        return builder, +++ b/library/src/com/bumptech/glide/request/bitmap/BitmapRequestBuilder.java, +import com.bumptech.glide.load.engine.Engine;, +import com.bumptech.glide.provider.LoadProvider;, +import com.bumptech.glide.request.RequestCoordinator;, +    private static final BitmapRequestBuilder requestBuilder = new BitmapRequestBuilder();, +, +    // Type erasure makes the types irrelevant at runtime., +    @SuppressWarnings("unchecked"), +    public static <T, Z> BitmapRequestBuilder<T, Z> get() {, +        return requestBuilder;, +    }, +, +    private void reset() {, +        model = null;, +        target = null;, +        priority = null;, +        sizeMultiplier = 0f;, +        placeholderDrawable = null;, +        placeholderResourceId = 0;, +        requestListener = null;, +        animation = null;, +        placeholderResourceId = 0;, +        errorResourceId = 0;, +        context = null;, +        requestCoordinator = null;, +        animationId = 0;, +        engine = null;, +        transformation = null;, +        loadProvider = null;, +    }, +, +    private BitmapRequestBuilder() {, +, +    }, +, +        final BitmapRequest<T, Z> result = new BitmapRequest<T, Z>(this);, +        reset();, +        return result;]