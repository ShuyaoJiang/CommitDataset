[+++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/ResourceRunnerTest.java, +    public void testSubmitsSourceRunnerIfCacheLoaderThrows() {, +, +        verify(harness.resizeService).submit(eq(harness.sourceRunner));, +    public void testSubmitsSourceRunnerIfTransformationThrows() {, +        verify(harness.resizeService).submit(eq(harness.sourceRunner));, +    public void testSubmitsSourceRunnerIfTranscoderThrows() {, +        verify(harness.resizeService).submit(eq(harness.sourceRunner));, +    @Test, +    public void testDoesNotNotifyJobOfFailureIfDecodingFromCacheThrows() {, +        when(harness.cacheLoader.load(any(Key.class), any(ResourceDecoder.class), anyInt(), anyInt())), +                .thenThrow(new RuntimeException("test"));, +, +        harness.runner.run();, +        verify(harness.engineJob, never()).onException(any(Exception.class));, +    }, +, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/ResourceRunnerTest.java, +    public void testSubmitsSourceRunnerIfCacheLoaderThrows() {, +, +        verify(harness.resizeService).submit(eq(harness.sourceRunner));, +    public void testSubmitsSourceRunnerIfTransformationThrows() {, +        verify(harness.resizeService).submit(eq(harness.sourceRunner));, +    public void testSubmitsSourceRunnerIfTranscoderThrows() {, +        verify(harness.resizeService).submit(eq(harness.sourceRunner));, +    @Test, +    public void testDoesNotNotifyJobOfFailureIfDecodingFromCacheThrows() {, +        when(harness.cacheLoader.load(any(Key.class), any(ResourceDecoder.class), anyInt(), anyInt())), +                .thenThrow(new RuntimeException("test"));, +, +        harness.runner.run();, +        verify(harness.engineJob, never()).onException(any(Exception.class));, +    }, +, +++ b/library/src/main/java/com/bumptech/glide/load/engine/ResourceRunner.java, +            if (Log.isLoggable(TAG, Log.DEBUG)) {, +                Log.d(TAG, "Failed to decode resource from cache", e);, +        }, +]