[+++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java, +        long contentLength = responseBody.contentLength();, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java, +        long contentLength = responseBody.contentLength();, +++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +import android.util.Log;, +    private static final String TAG = "HttpUrlFetcher";, +    private static final String ENCODING_HEADER = "Accept-Encoding";, +    private static final String DEFAULT_ENCODING = "identity";, +        // Do our best to avoid gzip since it's both inefficient for images and also makes it more, +        // difficult for us to detect and prevent partial content rendering. See #440., +        if (TextUtils.isEmpty(urlConnection.getRequestProperty(ENCODING_HEADER))) {, +            urlConnection.setRequestProperty(ENCODING_HEADER, DEFAULT_ENCODING);, +        }, +            return getStreamForSuccessfulRequest(urlConnection);, +    private InputStream getStreamForSuccessfulRequest(HttpURLConnection urlConnection), +            throws IOException {, +        if (TextUtils.isEmpty(urlConnection.getContentEncoding())) {, +            int contentLength = urlConnection.getContentLength();, +            stream = ContentLengthInputStream.obtain(urlConnection.getInputStream(), contentLength);, +        } else {, +            if (Log.isLoggable(TAG, Log.DEBUG)) {, +                Log.d(TAG, "Got non empty content encoding: " + urlConnection.getContentEncoding());, +            }, +            stream = urlConnection.getInputStream();, +        }, +        return stream;, +    }, +, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java, +        long contentLength = responseBody.contentLength();, +++ b/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java, +import android.util.Log;, +    private static final String TAG = "HttpUrlFetcher";, +    private static final String ENCODING_HEADER = "Accept-Encoding";, +    private static final String DEFAULT_ENCODING = "identity";, +        // Do our best to avoid gzip since it's both inefficient for images and also makes it more, +        // difficult for us to detect and prevent partial content rendering. See #440., +        if (TextUtils.isEmpty(urlConnection.getRequestProperty(ENCODING_HEADER))) {, +            urlConnection.setRequestProperty(ENCODING_HEADER, DEFAULT_ENCODING);, +        }, +            return getStreamForSuccessfulRequest(urlConnection);, +    private InputStream getStreamForSuccessfulRequest(HttpURLConnection urlConnection), +            throws IOException {, +        if (TextUtils.isEmpty(urlConnection.getContentEncoding())) {, +            int contentLength = urlConnection.getContentLength();, +            stream = ContentLengthInputStream.obtain(urlConnection.getInputStream(), contentLength);, +        } else {, +            if (Log.isLoggable(TAG, Log.DEBUG)) {, +                Log.d(TAG, "Got non empty content encoding: " + urlConnection.getContentEncoding());, +            }, +            stream = urlConnection.getInputStream();, +        }, +        return stream;, +    }, +, +++ b/library/src/main/java/com/bumptech/glide/util/ContentLengthInputStream.java, +  private final long contentLength;, +    return obtain(other, parseContentLength(contentLengthHeader));, +  }, +, +  public static InputStream obtain(InputStream other, long contentLength) {, +    return new ContentLengthInputStream(other, contentLength);, +  ContentLengthInputStream(InputStream in, long contentLength) {, +    return (int) Math.max(contentLength - readSoFar, in.available());]