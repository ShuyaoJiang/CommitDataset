[+++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +      // We consider the view state as valid if the view has, +      // non-null layout params and a non-zero layout width and height., +      if (view.getLayoutParams() != null, +          && view.getLayoutParams().width > 0, +          && view.getLayoutParams().height > 0) {, +        return true;, +      }, +, +++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +      // We consider the view state as valid if the view has, +      // non-null layout params and a non-zero layout width and height., +      if (view.getLayoutParams() != null, +          && view.getLayoutParams().width > 0, +          && view.getLayoutParams().height > 0) {, +        return true;, +      }, +, +++ b/library/src/test/java/com/bumptech/glide/request/target/ViewTargetTest.java, +  public void getSize_withLayoutParams_notLaidOut_doesCallSizeReady() {, +    shadowView, +        .setLayoutParams(new LayoutParams(10, 10)), +        .setWidth(100), +        .setHeight(100), +        .setIsLaidOut(false);, +    target.getSize(cb);, +, +    verify(cb, times(1)).onSizeReady(anyInt(), anyInt());, +  }, +, +  @Test, +  public void getSize_withLayoutParams_zeroWidthHeight_notLaidOut_doesNotCallSizeReady() {, +    shadowView, +        .setLayoutParams(new LayoutParams(0, 0)), +        .setWidth(100), +        .setHeight(100), +        .setIsLaidOut(false);, +    target.getSize(cb);, +, +    verify(cb, never()).onSizeReady(anyInt(), anyInt());, +  }, +, +  @Test, +    private LayoutParams layoutParams;, +    public SizedShadowView setLayoutParams(LayoutParams layoutParams) {, +      this.layoutParams = layoutParams;, +      return this;, +    }, +, +    @Implementation, +    public LayoutParams getLayoutParams() {, +      return layoutParams;, +    }]