[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java, +import android.graphics.ColorFilter;, +    private Drawable.Callback cb;, +    private GifFrameLoader frameLoader;, +    private Paint paint;, +        cb = mock(Drawable.Callback.class);, +        frameLoader = mock(GifFrameLoader.class);, +        paint = mock(Paint.class);, +        drawable = new GifDrawable(gifDecoder, frameLoader, firstFrame, bitmapPool, paint);, +        drawable = new GifDrawable(gifDecoder, frameLoader, firstFrame, bitmapPool, paint);, +        drawable.onFrameReady(0);, +        when(frameLoader.getCurrentFrame()).thenReturn(null);, +        drawable = new GifDrawable(gifDecoder, frameLoader, null, bitmapPool, paint);, +        when(frameLoader.getCurrentFrame()).thenReturn(currentFrame);, +        verify(frameLoader).start();, +        verify(frameLoader).start();, +        verify(frameLoader, never()).start();, +        verify(frameLoader, never()).start();, +        verify(frameLoader, times(1)).start();, +        drawable.onFrameReady(0);, +        drawable.onFrameReady(0);, +        verify(frameLoader).stop();, +        drawable.onFrameReady(0);, +        drawable.onFrameReady(0);, +        drawable.onFrameReady(0);, +        verify(frameLoader).clear();, +        drawable.onFrameReady(0);, +        verify(frameLoader, never()).clear();, +        verify(frameLoader, never()).clear();, +        verify(frameLoader).clear();, +        verify(frameLoader).clear();, +        verifyRanLoops(loopCount, frameCount);, +        verifyRanLoops(loopCount, frameCount);, +        verifyRanLoops(loopCount, frameCount);, +        verifyRanLoops(loopCount, frameCount);, +        drawable.onFrameReady(0);, +        drawable.onFrameReady(1);, +        drawable.onFrameReady(0);, +        drawable.onFrameReady(1);, +        // 4 onFrameReady(), 2 start(), +        verify(cb, times(4 + 2)).invalidateDrawable(eq(drawable));, +        int numStarts = 2;, +        int expectedFrames = (initialLoopCount + newLoopCount) * frameCount + numStarts;, +        verify(cb, times(expectedFrames)).invalidateDrawable(eq(drawable));, +        verifyRanLoops(loopCount, frameCount);, +        when(frameLoader.getCurrentFrame()).thenReturn(bitmap);, +        drawable.onFrameReady(1);, +        verify(frameLoader).setFrameTransformation(eq(transformation));, +    @Test, +    public void testAppliesGravityOnDrawAfterBoundsChange() {, +        Rect bounds = new Rect(0, 0, frameWidth * 2, frameHeight * 2);, +        drawable.setBounds(bounds);, +, +        Canvas canvas = mock(Canvas.class);, +        drawable.draw(canvas);, +, +        verify(canvas).drawBitmap(any(Bitmap.class), (Rect) isNull(), eq(bounds), eq(paint));, +    }, +, +    @Test, +    public void testSetAlphaSetsAlphaOnPaint() {, +        int alpha = 100;, +        drawable.setAlpha(alpha);, +        verify(paint).setAlpha(eq(alpha));, +    }, +, +    @Test, +    public void testSetColorFilterSetsColorFilterOnPaint() {, +        ColorFilter colorFilter = new ColorFilter();, +        drawable.setColorFilter(colorFilter);, +        verify(paint).setColorFilter(eq(colorFilter));, +    }, +, +    @Test, +    public void testGetDecoderReturnsGivenDecoder() {, +        assertEquals(gifDecoder, drawable.getDecoder());, +    }, +, +    @Test, +    public void testReturnsCurrentTransformationInGetFrameTransformation() {, +        Transformation<Bitmap> newTransformation = mock(Transformation.class);, +        drawable.setFrameTransformation(newTransformation, Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888));, +, +        assertEquals(newTransformation, drawable.getFrameTransformation());, +    }, +, +    @Test(expected = NullPointerException.class), +    public void testThrowsIfCreatedWithNullState() {, +        new GifDrawable(null);, +    }, +, +    private void verifyRanLoops(int loopCount, int frameCount) {, +        // 1 for invalidate in start()., +        verify(cb, times(1 + loopCount * frameCount)).invalidateDrawable(eq(drawable));, +    }, +, +                drawable.onFrameReady(frame);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableTest.java, +import android.graphics.ColorFilter;, +    private Drawable.Callback cb;]