[+++ b/library/src/com/bumptech/glide/loader/image/ImageManagerLoader.java, +            imageManager.releaseBitmap(image);, +++ b/library/src/com/bumptech/glide/loader/image/ImageManagerLoader.java, +            imageManager.releaseBitmap(image);, +++ b/library/src/com/bumptech/glide/resize/ImageManager.java, +            bitmapReferenceCounter.acquireBitmap(inCache);, +                        //acquire for the callback before putting in to memory cache so that the bitmap is not, +                        //released to the pool if the bitmap is synchronously released by the memory cache, +                        //we rely on the callback to call releaseBitmap if it doesn't want to use the bitmap, +                        bitmapReferenceCounter.acquireBitmap(result);, +            bitmapReferenceCounter.acquireBitmap(bitmap);, +++ b/library/src/com/bumptech/glide/loader/image/ImageManagerLoader.java, +            imageManager.releaseBitmap(image);, +++ b/library/src/com/bumptech/glide/resize/ImageManager.java, +            bitmapReferenceCounter.acquireBitmap(inCache);, +                        //acquire for the callback before putting in to memory cache so that the bitmap is not, +                        //released to the pool if the bitmap is synchronously released by the memory cache, +                        //we rely on the callback to call releaseBitmap if it doesn't want to use the bitmap, +                        bitmapReferenceCounter.acquireBitmap(result);, +            bitmapReferenceCounter.acquireBitmap(bitmap);, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/BitmapReferenceCounter.java, +++ b/library/src/com/bumptech/glide/loader/image/ImageManagerLoader.java, +            imageManager.releaseBitmap(image);, +++ b/library/src/com/bumptech/glide/resize/ImageManager.java, +            bitmapReferenceCounter.acquireBitmap(inCache);, +                        //acquire for the callback before putting in to memory cache so that the bitmap is not, +                        //released to the pool if the bitmap is synchronously released by the memory cache, +                        //we rely on the callback to call releaseBitmap if it doesn't want to use the bitmap, +                        bitmapReferenceCounter.acquireBitmap(result);, +            bitmapReferenceCounter.acquireBitmap(bitmap);, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/BitmapReferenceCounter.java, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/BitmapReferenceCounterAdapter.java, +++ b/library/src/com/bumptech/glide/loader/image/ImageManagerLoader.java, +            imageManager.releaseBitmap(image);, +++ b/library/src/com/bumptech/glide/resize/ImageManager.java, +            bitmapReferenceCounter.acquireBitmap(inCache);, +                        //acquire for the callback before putting in to memory cache so that the bitmap is not, +                        //released to the pool if the bitmap is synchronously released by the memory cache, +                        //we rely on the callback to call releaseBitmap if it doesn't want to use the bitmap, +                        bitmapReferenceCounter.acquireBitmap(result);, +            bitmapReferenceCounter.acquireBitmap(bitmap);, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/BitmapReferenceCounter.java, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/BitmapReferenceCounterAdapter.java, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/SerialBitmapReferenceCounter.java, +    private void initBitmap(Bitmap toInit) {, +        initBitmap(bitmap);, +++ b/library/src/com/bumptech/glide/loader/image/ImageManagerLoader.java, +            imageManager.releaseBitmap(image);, +++ b/library/src/com/bumptech/glide/resize/ImageManager.java, +            bitmapReferenceCounter.acquireBitmap(inCache);, +                        //acquire for the callback before putting in to memory cache so that the bitmap is not, +                        //released to the pool if the bitmap is synchronously released by the memory cache, +                        //we rely on the callback to call releaseBitmap if it doesn't want to use the bitmap, +                        bitmapReferenceCounter.acquireBitmap(result);, +            bitmapReferenceCounter.acquireBitmap(bitmap);, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/BitmapReferenceCounter.java, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/BitmapReferenceCounterAdapter.java, +++ b/library/src/com/bumptech/glide/resize/bitmap_recycle/SerialBitmapReferenceCounter.java, +    private void initBitmap(Bitmap toInit) {, +        initBitmap(bitmap);, +++ b/library/src/com/bumptech/glide/resize/cache/MemoryCacheAdapter.java, +    private ImageRemovedListener listener;, +, +        listener.onImageRemoved(bitmap);, +    public void setImageRemovedListener(ImageRemovedListener listener) {, +        this.listener = listener;, +    }]