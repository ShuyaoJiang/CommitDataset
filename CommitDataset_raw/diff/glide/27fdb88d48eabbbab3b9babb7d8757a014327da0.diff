[+++ b/integration/volley/build.gradle, +apply plugin: 'robolectric', +, +    androidTestCompile 'org.hamcrest:hamcrest-core:1.3', +    androidTestCompile 'org.hamcrest:hamcrest-library:1.3', +    androidTestCompile 'junit:junit:4.11', +    androidTestCompile 'org.mockito:mockito-all:1.9.5', +    androidTestCompile 'org.robolectric:robolectric:2.4-SNAPSHOT', +    // TODO: increase this to 2.0.+ when we compile against Java 7., +    androidTestCompile 'com.squareup.okhttp:mockwebserver:1.2.+', +++ b/integration/volley/build.gradle, +apply plugin: 'robolectric', +, +    androidTestCompile 'org.hamcrest:hamcrest-core:1.3', +    androidTestCompile 'org.hamcrest:hamcrest-library:1.3', +    androidTestCompile 'junit:junit:4.11', +    androidTestCompile 'org.mockito:mockito-all:1.9.5', +    androidTestCompile 'org.robolectric:robolectric:2.4-SNAPSHOT', +    // TODO: increase this to 2.0.+ when we compile against Java 7., +    androidTestCompile 'com.squareup.okhttp:mockwebserver:1.2.+', +++ b/integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java, +package com.bumptech.glide.integration.volley;, +, +import android.os.SystemClock;, +import com.android.volley.NoConnectionError;, +import com.android.volley.RequestQueue;, +import com.android.volley.ServerError;, +import com.android.volley.VolleyError;, +import com.android.volley.toolbox.Volley;, +import com.bumptech.glide.Priority;, +import com.bumptech.glide.load.data.DataFetcher;, +import com.squareup.okhttp.mockwebserver.MockResponse;, +import com.squareup.okhttp.mockwebserver.MockWebServer;, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.robolectric.Robolectric;, +import org.robolectric.RobolectricTestRunner;, +import org.robolectric.annotation.Config;, +import org.robolectric.annotation.Implementation;, +import org.robolectric.annotation.Implements;, +import org.robolectric.shadows.ShadowSystemClock;, +, +import java.io.ByteArrayOutputStream;, +import java.io.IOException;, +import java.io.InputStream;, +import java.net.ProtocolException;, +import java.net.URL;, +import java.util.concurrent.ExecutionException;, +, +import static org.hamcrest.MatcherAssert.assertThat;, +import static org.hamcrest.Matchers.containsString;, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.fail;, +, +/**, + * Tests {@link com.bumptech.glide.integration.volley.VolleyStreamFetcher} against server responses., + */, +@RunWith(RobolectricTestRunner.class), +@Config(manifest = Config.NONE, emulateSdk = 18, shadows = VolleyStreamFetcherServerTest.FakeSystemClock.class), +public class VolleyStreamFetcherServerTest {, +    private static final String DEFAULT_PATH = "/fakepath";, +, +    private MockWebServer mockWebServer;, +    private RequestQueue requestQueue;, +, +    @Before, +    public void setUp() throws IOException {, +        requestQueue = Volley.newRequestQueue(Robolectric.application);, +        mockWebServer = new MockWebServer();, +        mockWebServer.play();, +    }, +, +    @After, +    public void tearDown() throws IOException {, +        mockWebServer.shutdown();, +        requestQueue.stop();, +    }, +, +    @Test, +    public void testReturnsInputStreamOnStatusOk() throws Exception {, +        String expected = "fakedata";, +        mockWebServer.enqueue(new MockResponse(), +                .setBody(expected), +                .setResponseCode(200));, +        DataFetcher<InputStream> fetcher = getFetcher();, +        InputStream is = fetcher.loadData(Priority.HIGH);, +        assertThat(isToString(is), equalTo(expected));, +    }, +, +    @Test, +    public void testHandlesRedirect301s() throws Exception {, +        String expected = "fakedata";, +        mockWebServer.enqueue(new MockResponse(), +            .setResponseCode(301), +            .setHeader("Location", mockWebServer.getUrl("/redirect")));, +        mockWebServer.enqueue(new MockResponse(), +            .setResponseCode(200)]