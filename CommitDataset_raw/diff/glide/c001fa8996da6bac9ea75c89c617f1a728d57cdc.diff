[+++ b/third_party/gif_encoder/src/main/java/com/bumptech/glide/gifencoder/AnimatedGifEncoder.java, + *     e.addFrame(image3, 100, 100);    // set position of the frame, +    private int fixedWidth;   // set by setSize(), +, +    private int fixedHeight;, +, +     * <code>setSize</code> was invoked, the size is used for all subsequent frames., +     * Otherwise, the actual size of the image is used for each frames., +        return addFrame(im, 0, 0);, +    }, +, +    /**, +     * Adds next GIF frame to the specified position. The frame is not written immediately, but is actually, +     * deferred until the next frame is received so that timing data can be, +     * inserted. Invoking <code>finish()</code> flushes all frames. If, +     * <code>setSize</code> was invoked, the size is used for all subsequent frames., +     * Otherwise, the actual size of the image is used for each frames., +     *, +     * @param im, +     *          BufferedImage containing frame to write., +     * @param x, +     *          x position of this frame, +     * @param y, +     *          y position of this frame, +     * @return true if successful., +     */, +    public boolean addFrame(Bitmap im, int x, int y) {, +            if (sizeSet) {, +                setFrameSize(fixedWidth, fixedHeight);, +            }, +            else{, +                setFrameSize(im.getWidth(), im.getHeight());, +            writeImageDesc(x, y); // image descriptor, +     * Sets the fixed GIF frame size for all the frames., +     * This should be called before start., +        if (started), +, +        fixedWidth = w;, +        fixedHeight = h;, +        if (fixedWidth < 1), +            fixedWidth = 320;, +        if (fixedHeight < 1), +            fixedHeight = 240;, +, +        sizeSet = true;, +    }, +, +    /**, +     * Sets current GIF frame size., +     *, +     * @param w, +     *          int frame width., +     * @param h, +     *          int frame width., +     */, +    private void setFrameSize(int w, int h) {, +    private void writeImageDesc(int x, int y) throws IOException {, +        writeShort(x); // image position, +        writeShort(y);]