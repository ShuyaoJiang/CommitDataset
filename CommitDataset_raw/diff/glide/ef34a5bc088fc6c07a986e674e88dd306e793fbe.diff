[+++ b/library/src/com/bumptech/glide/Glide.java, +import android.view.ViewGroup;, +import com.bumptech.glide.resize.Downsampler;, +import com.bumptech.glide.resize.Transformation;, +import com.bumptech.glide.resize.loader.ImageManagerLoader;, +import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;, +        private Transformation transformation = Transformation.NONE;, +        private Downsampler downsampler = null;, +            transformation = Transformation.CENTER_CROP;, +            downsampler = Downsampler.AT_LEAST;, +            transformation = Transformation.FIT_CENTER;, +            downsampler = Downsampler.AT_LEAST;, +         * Load images at a size near the size of the target using {@link Downsampler#AT_LEAST}. Replaces any existing resize style, +            transformation = Transformation.NONE;, +            downsampler = Downsampler.AT_LEAST;, +         * Load images at their original size using {@link Downsampler#NONE}. Replaces any existing, +            transformation = Transformation.NONE;, +            downsampler = Downsampler.NONE;, +         * Set an arbitrary transformation to apply after an image has been loaded into memory.  Replaces any existing, +         * resize style, +         * @param transformation The transformation to use, +        public Request<T> transform(Transformation transformation) {, +            this.transformation = transformation;, +            downsampler = Downsampler.AT_LEAST;, +            downsampler = getFinalDownsampler(imageView);, +                    .setImageLoader(new ImageManagerLoader(context, downsampler, transformation));, +        private Downsampler getFinalDownsampler(ImageView imageView) {, +            Downsampler result = downsampler;, +                ViewGroup.LayoutParams layoutParams = imageView.getLayoutParams();, +                if (layoutParams.width == WRAP_CONTENT && layoutParams.height == WRAP_CONTENT) {, +                    result = Downsampler.NONE;, +                    result = Downsampler.AT_LEAST;, +            private final String downsamplerId;, +            private final String transformationId;, +                downsamplerId = request.downsampler.getId();, +                transformationId = request.transformation.getId();, +                        downsamplerId.equals(other.downsamplerId) &&, +                        transformationId.equals(other.transformationId) &&]