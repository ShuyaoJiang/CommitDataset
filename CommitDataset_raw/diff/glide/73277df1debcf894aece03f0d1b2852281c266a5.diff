[+++ b/checkstyle.xml, +++ b/checkstyle.xml, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/WideGamutTest.java, +import com.bumptech.glide.load.resource.bitmap.RoundedCorners;, +  @Test, +  public void circleCrop_withWideGamutBitmap_producesWideGamutBitmap() {, +    Bitmap bitmap = Bitmap.createBitmap(100, 100, Config.RGBA_F16);, +    byte[] data = asPng(bitmap);, +, +    Bitmap result =, +        concurrency.get(, +            GlideApp.with(context), +                .asBitmap(), +                .load(data), +                .circleCrop(), +                .submit());, +    assertThat(result).isNotNull();, +    assertThat(result.getConfig()).isEqualTo(Config.RGBA_F16);, +  }, +, +  @Test, +  public void roundedCorners_withWideGamutBitmap_producesWideGamutBitmap() {, +    Bitmap bitmap = Bitmap.createBitmap(100, 100, Config.RGBA_F16);, +    byte[] data = asPng(bitmap);, +, +    Bitmap result =, +        concurrency.get(, +            GlideApp.with(context), +                .asBitmap(), +                .load(data), +                .transform(new RoundedCorners(/*roundingRadius=*/ 10)), +                .submit());, +    assertThat(result).isNotNull();, +    assertThat(result.getConfig()).isEqualTo(Config.RGBA_F16);, +  }, +, +++ b/checkstyle.xml, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/WideGamutTest.java, +import com.bumptech.glide.load.resource.bitmap.RoundedCorners;, +  @Test, +  public void circleCrop_withWideGamutBitmap_producesWideGamutBitmap() {, +    Bitmap bitmap = Bitmap.createBitmap(100, 100, Config.RGBA_F16);, +    byte[] data = asPng(bitmap);, +, +    Bitmap result =, +        concurrency.get(, +            GlideApp.with(context), +                .asBitmap(), +                .load(data), +                .circleCrop(), +                .submit());, +    assertThat(result).isNotNull();, +    assertThat(result.getConfig()).isEqualTo(Config.RGBA_F16);, +  }, +, +  @Test, +  public void roundedCorners_withWideGamutBitmap_producesWideGamutBitmap() {, +    Bitmap bitmap = Bitmap.createBitmap(100, 100, Config.RGBA_F16);, +    byte[] data = asPng(bitmap);, +, +    Bitmap result =, +        concurrency.get(, +            GlideApp.with(context), +                .asBitmap(), +                .load(data), +                .transform(new RoundedCorners(/*roundingRadius=*/ 10)), +                .submit());, +    assertThat(result).isNotNull();, +    assertThat(result.getConfig()).isEqualTo(Config.RGBA_F16);, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java, +import android.graphics.Bitmap.Config;, +    Bitmap result = pool.get(width, height, getNonNullConfig(inBitmap));, +    Bitmap.Config config = getNonNullConfig(inBitmap);, +    Bitmap.Config config = getNonNullConfig(inBitmap);, +    Bitmap.Config outConfig = getAlphaSafeConfig(inBitmap);, +    Bitmap result = pool.get(destMinEdge, destMinEdge, outConfig);, +  private static Bitmap getAlphaSafeBitmap(, +      @NonNull BitmapPool pool, @NonNull Bitmap maybeAlphaSafe) {, +    Bitmap.Config safeConfig = getAlphaSafeConfig(maybeAlphaSafe);, +    if (safeConfig.equals(maybeAlphaSafe.getConfig())) {, +    Bitmap argbBitmap =, +        pool.get(maybeAlphaSafe.getWidth(), maybeAlphaSafe.getHeight(), safeConfig);, +  @NonNull, +  private static Config getAlphaSafeConfig(@NonNull Bitmap inBitmap) {, +    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {, +      // Avoid short circuiting the sdk check., +      if (Bitmap.Config.RGBA_F16.equals(inBitmap.getConfig())) { // NOPMD, +        return Bitmap.Config.RGBA_F16;, +      }, +    }, +, +    return Bitmap.Config.ARGB_8888;, +  }, +, +    Bitmap.Config safeConfig = getAlphaSafeConfig(inBitmap);, +    Bitmap result = pool.get(toTransform.getWidth(), toTransform.getHeight(), safeConfig);, +  @NonNull, +  private static Bitmap.Config getNonNullConfig(@NonNull Bitmap bitmap) {]