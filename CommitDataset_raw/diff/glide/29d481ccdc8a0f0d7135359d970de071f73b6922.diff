[+++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java, +import android.support.v4.app.Fragment;, +  @Deprecated, +  public static GlideRequests with(@NonNull android.app.Fragment arg0) {, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java, +import android.support.v4.app.Fragment;, +  @Deprecated, +  public static GlideRequests with(@NonNull android.app.Fragment arg0) {, +++ b/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java, +import android.support.v4.app.Fragment;, +   * Helper constructor that accepts an {@link android.app.Fragment}., +  @Deprecated, +  public RecyclerViewPreloader(@NonNull android.app.Fragment fragment,, +   * Helper constructor that accepts an {@link Fragment}., +  public RecyclerViewPreloader(@NonNull Fragment fragment,, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java, +import android.support.v4.app.Fragment;, +  @Deprecated, +  public static GlideRequests with(@NonNull android.app.Fragment arg0) {, +++ b/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java, +import android.support.v4.app.Fragment;, +   * Helper constructor that accepts an {@link android.app.Fragment}., +  @Deprecated, +  public RecyclerViewPreloader(@NonNull android.app.Fragment fragment,, +   * Helper constructor that accepts an {@link Fragment}., +  public RecyclerViewPreloader(@NonNull Fragment fragment,, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +   * Begin a load with Glide that will be tied to the given {@link android.app.Fragment}'s lifecycle, +   * and that uses the given {@link android.app.Fragment}'s default options., +   *, +   * @param fragment The fragment to use., +   * @return A RequestManager for the given Fragment that can be used to start a load., +   */, +  @Deprecated, +  @NonNull, +  public static RequestManager with(@NonNull android.app.Fragment fragment) {, +    return getRetriever(fragment.getActivity()).get(fragment);, +  }, +, +  /**, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java, +import android.support.v4.app.Fragment;, +  @Deprecated, +  public static GlideRequests with(@NonNull android.app.Fragment arg0) {, +++ b/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java, +import android.support.v4.app.Fragment;, +   * Helper constructor that accepts an {@link android.app.Fragment}., +  @Deprecated, +  public RecyclerViewPreloader(@NonNull android.app.Fragment fragment,, +   * Helper constructor that accepts an {@link Fragment}., +  public RecyclerViewPreloader(@NonNull Fragment fragment,, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +   * Begin a load with Glide that will be tied to the given {@link android.app.Fragment}'s lifecycle, +   * and that uses the given {@link android.app.Fragment}'s default options., +   *, +   * @param fragment The fragment to use., +   * @return A RequestManager for the given Fragment that can be used to start a load., +   */, +  @Deprecated, +  @NonNull, +  public static RequestManager with(@NonNull android.app.Fragment fragment) {, +    return getRetriever(fragment.getActivity()).get(fragment);, +  }, +, +  /**, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java, +@Deprecated, +++ b/annotation/compiler/test/src/test/resources/EmptyAppGlideModuleTest/GlideApp.java, +import android.support.v4.app.Fragment;, +  @Deprecated, +  public static GlideRequests with(@NonNull android.app.Fragment arg0) {, +++ b/integration/recyclerview/src/main/java/com/bumptech/glide/integration/recyclerview/RecyclerViewPreloader.java, +import android.support.v4.app.Fragment;, +   * Helper constructor that accepts an {@link android.app.Fragment}., +  @Deprecated, +  public RecyclerViewPreloader(@NonNull android.app.Fragment fragment,, +   * Helper constructor that accepts an {@link Fragment}., +  public RecyclerViewPreloader(@NonNull Fragment fragment,, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +   * Begin a load with Glide that will be tied to the given {@link android.app.Fragment}'s lifecycle, +   * and that uses the given {@link android.app.Fragment}'s default options., +   *, +   * @param fragment The fragment to use., +   * @return A RequestManager for the given Fragment that can be used to start a load., +   */, +  @Deprecated, +  @NonNull, +  public static RequestManager with(@NonNull android.app.Fragment fragment) {, +    return getRetriever(fragment.getActivity()).get(fragment);, +  }, +, +  /**, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java, +@Deprecated, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +  @Deprecated, +  @Deprecated, +  @Deprecated, +  @Deprecated, +  @Deprecated]