[+++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    @SuppressWarnings("unchecked"), +    @SuppressWarnings("unchecked"), +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    @SuppressWarnings("unchecked"), +    @SuppressWarnings("unchecked"), +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(context, animationId));, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(animation));, +        return animate(new ViewPropertyAnimation.ViewPropertyAnimationFactory<TranscodeType>(animator));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    @SuppressWarnings("unchecked"), +    @SuppressWarnings("unchecked"), +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(context, animationId));, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(animation));, +        return animate(new ViewPropertyAnimation.ViewPropertyAnimationFactory<TranscodeType>(animator));, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +            transcoder = (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    @SuppressWarnings("unchecked"), +    @SuppressWarnings("unchecked"), +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(context, animationId));, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(animation));, +        return animate(new ViewPropertyAnimation.ViewPropertyAnimationFactory<TranscodeType>(animator));, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +            transcoder = (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +    public static void clear(Target<?> target) {, +    public static void clear(FutureTarget<?> target) {, +        Target<?> viewTarget = new ClearTarget(view);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    @SuppressWarnings("unchecked"), +    @SuppressWarnings("unchecked"), +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(context, animationId));, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(animation));, +        return animate(new ViewPropertyAnimation.ViewPropertyAnimationFactory<TranscodeType>(animator));, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +            transcoder = (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +    public static void clear(Target<?> target) {, +    public static void clear(FutureTarget<?> target) {, +        Target<?> viewTarget = new ClearTarget(view);, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +    @SuppressWarnings("rawtypes"), +    @SuppressWarnings("unchecked"), +    private static class PreloadTarget extends BaseTarget<Object> {, +        public void onResourceReady(Object resource, GlideAnimation<? super Object> glideAnimation) {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    @SuppressWarnings("unchecked"), +    @SuppressWarnings("unchecked"), +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(context, animationId));, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(animation));, +        return animate(new ViewPropertyAnimation.ViewPropertyAnimationFactory<TranscodeType>(animator));, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +            transcoder = (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +    public static void clear(Target<?> target) {, +    public static void clear(FutureTarget<?> target) {, +        Target<?> viewTarget = new ClearTarget(view);, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +    @SuppressWarnings("rawtypes"), +    @SuppressWarnings("unchecked"), +    private static class PreloadTarget extends BaseTarget<Object> {, +        public void onResourceReady(Object resource, GlideAnimation<? super Object> glideAnimation) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/Engine.java, +@SuppressWarnings("rawtypes"), +    @SuppressWarnings("unchecked"), +    public void onEngineJobComplete(Key key, Resource<?> resource) {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java, +        Resource resource = mock(Resource.class);, +++ b/library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java, +    @SuppressWarnings("unchecked"), +    @SuppressWarnings("unchecked"), +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(context, animationId));, +        return animate(new ViewAnimation.ViewAnimationFactory<TranscodeType>(animation));, +        return animate(new ViewPropertyAnimation.ViewPropertyAnimationFactory<TranscodeType>(animator));, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +            transcoder = (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +    public static void clear(Target<?> target) {, +    public static void clear(FutureTarget<?> target) {]