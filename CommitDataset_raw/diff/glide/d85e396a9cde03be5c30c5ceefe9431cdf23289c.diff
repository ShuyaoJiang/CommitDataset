[+++ b/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher.java, +import android.content.res.AssetFileDescriptor;, +    AssetFileDescriptor assetFileDescriptor = contentResolver.openAssetFileDescriptor(uri, "r");, +    if (assetFileDescriptor == null) {, +      throw new FileNotFoundException("FileDescriptor is null for: " + uri);, +    }, +    return assetFileDescriptor.getParcelFileDescriptor();, +++ b/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher.java, +import android.content.res.AssetFileDescriptor;, +    AssetFileDescriptor assetFileDescriptor = contentResolver.openAssetFileDescriptor(uri, "r");, +    if (assetFileDescriptor == null) {, +      throw new FileNotFoundException("FileDescriptor is null for: " + uri);, +    }, +    return assetFileDescriptor.getParcelFileDescriptor();, +++ b/library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java, +    InputStream inputStream = contentResolver.openInputStream(uri);, +    if (inputStream == null) {, +      throw new FileNotFoundException("InputStream is null for :" + uri);, +    }, +    return inputStream;, +++ b/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher.java, +import android.content.res.AssetFileDescriptor;, +    AssetFileDescriptor assetFileDescriptor = contentResolver.openAssetFileDescriptor(uri, "r");, +    if (assetFileDescriptor == null) {, +      throw new FileNotFoundException("FileDescriptor is null for: " + uri);, +    }, +    return assetFileDescriptor.getParcelFileDescriptor();, +++ b/library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java, +    InputStream inputStream = contentResolver.openInputStream(uri);, +    if (inputStream == null) {, +      throw new FileNotFoundException("InputStream is null for :" + uri);, +    }, +    return inputStream;, +++ b/library/src/test/java/com/bumptech/glide/load/data/resource/FileDescriptorLocalUriFetcherTest.java, +import static org.mockito.Matchers.isA;, +import java.io.FileNotFoundException;, +, +  public void testLoadResource_returnsFileDescriptor() throws Exception {, +    Context context = RuntimeEnvironment.application;, +    Uri uri = Uri.parse("file://nothing");, +  @Test, +  public void testLoadResource_withNullFileDescriptor_callsLoadFailed() {, +    Context context = RuntimeEnvironment.application;, +    Uri uri = Uri.parse("file://nothing");, +, +    ContentResolver contentResolver = context.getContentResolver();, +    ContentResolverShadow shadow = (ContentResolverShadow) ShadowExtractor.extract(contentResolver);, +    shadow.registerFileDescriptor(uri, null /*fileDescriptor*/);, +, +    FileDescriptorLocalUriFetcher fetcher = new FileDescriptorLocalUriFetcher(context, uri);, +    fetcher.loadData(Priority.NORMAL, callback);, +    verify(callback).onLoadFailed(isA(FileNotFoundException.class));, +  }, +++ b/library/src/main/java/com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher.java, +import android.content.res.AssetFileDescriptor;, +    AssetFileDescriptor assetFileDescriptor = contentResolver.openAssetFileDescriptor(uri, "r");, +    if (assetFileDescriptor == null) {, +      throw new FileNotFoundException("FileDescriptor is null for: " + uri);, +    }, +    return assetFileDescriptor.getParcelFileDescriptor();, +++ b/library/src/main/java/com/bumptech/glide/load/data/StreamLocalUriFetcher.java, +    InputStream inputStream = contentResolver.openInputStream(uri);, +    if (inputStream == null) {, +      throw new FileNotFoundException("InputStream is null for :" + uri);, +    }, +    return inputStream;, +++ b/library/src/test/java/com/bumptech/glide/load/data/resource/FileDescriptorLocalUriFetcherTest.java, +import static org.mockito.Matchers.isA;, +import java.io.FileNotFoundException;, +, +  public void testLoadResource_returnsFileDescriptor() throws Exception {, +    Context context = RuntimeEnvironment.application;, +    Uri uri = Uri.parse("file://nothing");, +  @Test, +  public void testLoadResource_withNullFileDescriptor_callsLoadFailed() {, +    Context context = RuntimeEnvironment.application;, +    Uri uri = Uri.parse("file://nothing");, +, +    ContentResolver contentResolver = context.getContentResolver();, +    ContentResolverShadow shadow = (ContentResolverShadow) ShadowExtractor.extract(contentResolver);, +    shadow.registerFileDescriptor(uri, null /*fileDescriptor*/);, +, +    FileDescriptorLocalUriFetcher fetcher = new FileDescriptorLocalUriFetcher(context, uri);, +    fetcher.loadData(Priority.NORMAL, callback);, +    verify(callback).onLoadFailed(isA(FileNotFoundException.class));, +  }, +++ b/library/src/test/java/com/bumptech/glide/load/data/resource/StreamLocalUriFetcherTest.java, +import static org.mockito.Matchers.isA;, +import android.content.ContentResolver;, +import com.bumptech.glide.tests.ContentResolverShadow;, +import org.robolectric.internal.ShadowExtractor;, +import java.io.ByteArrayInputStream;, +import java.io.FileNotFoundException;, +@Config(manifest = Config.NONE, sdk = 18, shadows = { ContentResolverShadow.class }), +  public void testLoadResource_returnsInputStream() throws Exception {, +    Context context = RuntimeEnvironment.application;, +    Uri uri = Uri.parse("file://nothing");, +, +    ContentResolver contentResolver = context.getContentResolver();, +    ContentResolverShadow shadow = (ContentResolverShadow) ShadowExtractor.extract(contentResolver);]