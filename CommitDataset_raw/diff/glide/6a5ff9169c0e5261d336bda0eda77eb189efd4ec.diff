[+++ b/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java, +import android.content.res.Resources;, +  private static final int THEME = 1 << 16;, +  private Resources.Theme theme;, +   * Sets the {@link android.content.res.Resources.Theme} to apply when loading {@link Drawable}s, +   * for resource ids provided via {@link #error(int)}, {@link #placeholder(int)}, and, +   * {@link #fallback(Drawable)}., +   *, +   * @param theme The theme to use when loading Drawables., +   * @return this request builder., +   */, +  public final CHILD theme(Resources.Theme theme) {, +    this.theme = theme;, +    fields |= THEME;, +, +    return selfOrThrowIfLocked();, +  }, +, +  /**, +    if (isSet(other.fields, THEME)) {, +      theme = other.theme;, +    }, +  public final Resources.Theme getTheme() {, +    return theme;, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/request/BaseRequestOptions.java, +import android.content.res.Resources;, +  private static final int THEME = 1 << 16;, +  private Resources.Theme theme;, +   * Sets the {@link android.content.res.Resources.Theme} to apply when loading {@link Drawable}s, +   * for resource ids provided via {@link #error(int)}, {@link #placeholder(int)}, and, +   * {@link #fallback(Drawable)}., +   *, +   * @param theme The theme to use when loading Drawables., +   * @return this request builder., +   */, +  public final CHILD theme(Resources.Theme theme) {, +    this.theme = theme;, +    fields |= THEME;, +, +    return selfOrThrowIfLocked();, +  }, +, +  /**, +    if (isSet(other.fields, THEME)) {, +      theme = other.theme;, +    }, +  public final Resources.Theme getTheme() {, +    return theme;, +  }, +, +++ b/library/src/main/java/com/bumptech/glide/request/SingleRequest.java, +import android.content.res.Resources;, +import android.support.v4.content.res.ResourcesCompat;, +        errorDrawable = loadDrawable(requestOptions.getErrorId());, +        placeholderDrawable = loadDrawable(requestOptions.getPlaceholderId());, +        fallbackDrawable = loadDrawable(requestOptions.getFallbackId());, +  private Drawable loadDrawable(int resouceId) {, +    Resources resources = glideContext.getResources();, +    return ResourcesCompat.getDrawable(resources, resouceId, requestOptions.getTheme());, +  }, +]