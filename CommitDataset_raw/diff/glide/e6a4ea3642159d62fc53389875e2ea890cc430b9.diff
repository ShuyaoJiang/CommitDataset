[+++ b/integration/okhttp/src/main/AndroidManifest.xml, +    <application>, +        <meta-data, +            android:name="com.bumptech.glide.integration.okhttp.OkHttpGlideModule", +            android:value="GlideModule" />, +    </application>, +++ b/integration/okhttp/src/main/AndroidManifest.xml, +    <application>, +        <meta-data, +            android:name="com.bumptech.glide.integration.okhttp.OkHttpGlideModule", +            android:value="GlideModule" />, +    </application>, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpGlideModule.java, +package com.bumptech.glide.integration.okhttp;, +, +import android.content.Context;, +, +import com.bumptech.glide.Glide;, +import com.bumptech.glide.load.model.GlideUrl;, +import com.bumptech.glide.module.GlideModule;, +, +import java.io.InputStream;, +, +/**, + * A {@link com.bumptech.glide.module.GlideModule} implementation to replace Glide's default, + * {@link java.net.HttpURLConnection} based {@link com.bumptech.glide.load.model.ModelLoader} with an OkHttp based, + * {@link com.bumptech.glide.load.model.ModelLoader}., + *, + * <p>, + *     If you're using gradle, you can include this module simply by depending on the aar, the module will be merged, + *     in by manifest merger. For other build systems or for more more information, see, + *     {@link com.bumptech.glide.module.GlideModule}., + * </p>, + */, +public class OkHttpGlideModule implements GlideModule {, +    @Override, +    public void initialize(Context context, Glide glide) {, +        glide.register(GlideUrl.class, InputStream.class, new OkHttpUrlLoader.Factory());, +    }, +}, +++ b/integration/okhttp/src/main/AndroidManifest.xml, +    <application>, +        <meta-data, +            android:name="com.bumptech.glide.integration.okhttp.OkHttpGlideModule", +            android:value="GlideModule" />, +    </application>, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpGlideModule.java, +package com.bumptech.glide.integration.okhttp;, +, +import android.content.Context;, +, +import com.bumptech.glide.Glide;, +import com.bumptech.glide.load.model.GlideUrl;, +import com.bumptech.glide.module.GlideModule;, +, +import java.io.InputStream;, +, +/**, + * A {@link com.bumptech.glide.module.GlideModule} implementation to replace Glide's default, + * {@link java.net.HttpURLConnection} based {@link com.bumptech.glide.load.model.ModelLoader} with an OkHttp based, + * {@link com.bumptech.glide.load.model.ModelLoader}., + *, + * <p>, + *     If you're using gradle, you can include this module simply by depending on the aar, the module will be merged, + *     in by manifest merger. For other build systems or for more more information, see, + *     {@link com.bumptech.glide.module.GlideModule}., + * </p>, + */, +public class OkHttpGlideModule implements GlideModule {, +    @Override, +    public void initialize(Context context, Glide glide) {, +        glide.register(GlideUrl.class, InputStream.class, new OkHttpUrlLoader.Factory());, +    }, +}, +++ b/integration/volley/src/main/AndroidManifest.xml, +  <application>, +      <meta-data, +          android:name="com.bumptech.glide.integration.volley.VolleyGlideModule", +          android:value="GlideModule" />, +  </application>, +++ b/integration/okhttp/src/main/AndroidManifest.xml, +    <application>, +        <meta-data, +            android:name="com.bumptech.glide.integration.okhttp.OkHttpGlideModule", +            android:value="GlideModule" />, +    </application>, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpGlideModule.java, +package com.bumptech.glide.integration.okhttp;, +, +import android.content.Context;, +, +import com.bumptech.glide.Glide;, +import com.bumptech.glide.load.model.GlideUrl;, +import com.bumptech.glide.module.GlideModule;, +, +import java.io.InputStream;, +, +/**, + * A {@link com.bumptech.glide.module.GlideModule} implementation to replace Glide's default, + * {@link java.net.HttpURLConnection} based {@link com.bumptech.glide.load.model.ModelLoader} with an OkHttp based]