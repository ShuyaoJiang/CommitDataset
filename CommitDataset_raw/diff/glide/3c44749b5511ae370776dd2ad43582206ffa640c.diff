[+++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*" checks="Javadoc.*"/>, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*" checks="Javadoc.*"/>, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperTransformationTest.java, +        String expectedId = "testID";, +        BitmapPool pool = mock(BitmapPool.class);, +        GifBitmapWrapperTransformation transformation = new GifBitmapWrapperTransformation(pool, bitmapTransformation);, +, +        assertEquals(expectedId, transformation.getId());, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*" checks="Javadoc.*"/>, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gifbitmap/GifBitmapWrapperTransformationTest.java, +        String expectedId = "testID";, +        BitmapPool pool = mock(BitmapPool.class);, +        GifBitmapWrapperTransformation transformation = new GifBitmapWrapperTransformation(pool, bitmapTransformation);, +, +        assertEquals(expectedId, transformation.getId());, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/transcode/GlideBitmapDrawableTranscoderTest.java, +import org.junit.Before;, +    private GlideBitmapDrawableTranscoder transcoder;, +, +    @Before, +    public void setUp() {, +        transcoder = new GlideBitmapDrawableTranscoder(Robolectric.application.getResources(), mock(BitmapPool.class));, +    }, +, +    @Test, +    public void testHasValidId() {, +        Util.assertClassHasValidId(GlideBitmapDrawableTranscoder.class, transcoder.getId());, +    }]