[+++ b/integration/volley/src/main/java/com/bumptech/glide/volley/VolleyDiskCacheWrapper.java, +, +import com.bumptech.glide.load.engine.cache.StringKey;, +import java.io.File;, +import java.io.FileInputStream;, +import java.io.FileNotFoundException;, +import java.io.FileOutputStream;, +        File file = diskCache.get(new StringKey(key));, +        if (file == null) {, +        InputStream is = null;, +            is = new FileInputStream(file);, +            CacheHeader header = readHeader(is);, +            byte[] data = streamToBytes(is);, +            if (is != null) {, +                    is.close();, +                } catch (IOException e) {, +                    // Do nothing., +                }, +            }, +            public boolean write(File file) {, +                OutputStream os = null;, +                boolean success = false;, +                    os = new FileOutputStream(file);, +                    CacheHeader header = new CacheHeader(key, entry);, +                    success = header.writeHeader(os);, +                    if (success) {, +                    }, +                } catch (FileNotFoundException e) {, +                    e.printStackTrace();, +                } catch (IOException e) {, +                    e.printStackTrace();, +                    success = false;, +++ b/integration/volley/src/main/java/com/bumptech/glide/volley/VolleyDiskCacheWrapper.java, +, +import com.bumptech.glide.load.engine.cache.StringKey;, +import java.io.File;, +import java.io.FileInputStream;, +import java.io.FileNotFoundException;, +import java.io.FileOutputStream;, +        File file = diskCache.get(new StringKey(key));, +        if (file == null) {, +        InputStream is = null;, +            is = new FileInputStream(file);, +            CacheHeader header = readHeader(is);, +            byte[] data = streamToBytes(is);, +            if (is != null) {, +                    is.close();, +                } catch (IOException e) {, +                    // Do nothing., +                }, +            }, +            public boolean write(File file) {, +                OutputStream os = null;, +                boolean success = false;, +                    os = new FileOutputStream(file);, +                    CacheHeader header = new CacheHeader(key, entry);, +                    success = header.writeHeader(os);, +                    if (success) {, +                    }, +                } catch (FileNotFoundException e) {, +                    e.printStackTrace();, +                } catch (IOException e) {, +                    e.printStackTrace();, +                    success = false;, +++ b/library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java, +, +import java.io.File;, +            ResourceDecoder<File, Bitmap> cacheDecoder) {, +++ b/integration/volley/src/main/java/com/bumptech/glide/volley/VolleyDiskCacheWrapper.java, +, +import com.bumptech.glide.load.engine.cache.StringKey;, +import java.io.File;, +import java.io.FileInputStream;, +import java.io.FileNotFoundException;, +import java.io.FileOutputStream;, +        File file = diskCache.get(new StringKey(key));, +        if (file == null) {, +        InputStream is = null;, +            is = new FileInputStream(file);, +            CacheHeader header = readHeader(is);, +            byte[] data = streamToBytes(is);, +            if (is != null) {, +                    is.close();, +                } catch (IOException e) {, +                    // Do nothing., +                }, +            }, +            public boolean write(File file) {, +                OutputStream os = null;, +                boolean success = false;, +                    os = new FileOutputStream(file);, +                    CacheHeader header = new CacheHeader(key, entry);, +                    success = header.writeHeader(os);, +                    if (success) {, +                    }, +                } catch (FileNotFoundException e) {, +                    e.printStackTrace();, +                } catch (IOException e) {, +                    e.printStackTrace();, +                    success = false;]