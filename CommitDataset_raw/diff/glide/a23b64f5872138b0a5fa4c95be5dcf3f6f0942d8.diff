[+++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +        GifDrawable result = new GifDrawable(gifId, header, data, context, getFrameTransformation(), targetWidth,, +                targetHeight, bitmapProvider);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +        GifDrawable result = new GifDrawable(gifId, header, data, context, getFrameTransformation(), targetWidth,, +                targetHeight, bitmapProvider);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +import android.content.Context;, +import android.content.res.Resources;, +import com.bumptech.glide.gifdecoder.GifHeader;, +import com.bumptech.glide.load.Transformation;, +    private final Paint paint = new Paint();, +    private GifFrameManager frameManager;, +    private GifState state;, +    private int width = -1;, +    private int height = -1;, +    public GifDrawable(String id, GifHeader gifHeader, byte[] data, Context context,, +            Transformation<Bitmap> frameTransformation, int targetWidth, int targetHeight,, +            GifDecoder.BitmapProvider bitmapProvider) {, +        this(new GifState(id, gifHeader, data, context, frameTransformation, targetWidth, targetHeight,, +                bitmapProvider));, +    }, +, +    private GifDrawable(GifState state) {, +        this.state = state;, +        this.decoder = new GifDecoder(state.bitmapProvider);, +        decoder.setData(state.id, state.gifHeader, state.data);, +        frameManager = new GifFrameManager(state.context, decoder, state.frameTransformation, state.targetWidth,, +                state.targetHeight);, +    }, +, +    // For testing., +    GifDrawable(GifDecoder decoder, GifFrameManager frameManager) {, +        this.state = new GifState(null);, +, +    @Override, +    public ConstantState getConstantState() {, +        return state;, +    }, +, +, +    static class GifState extends ConstantState {, +        String id;, +        GifHeader gifHeader;, +        byte[] data;, +        Context context;, +        Transformation<Bitmap> frameTransformation;, +        int targetWidth;, +        int targetHeight;, +        GifDecoder.BitmapProvider bitmapProvider;, +, +        public GifState(String id, GifHeader header, byte[] data, Context context,, +                Transformation<Bitmap> frameTransformation, int targetWidth, int targetHeight,, +                GifDecoder.BitmapProvider provider) {, +            this.id = id;, +            gifHeader = header;, +            this.data = data;, +            this.context = context.getApplicationContext();, +            this.frameTransformation = frameTransformation;, +            this.targetWidth = targetWidth;, +            this.targetHeight = targetHeight;, +            bitmapProvider = provider;, +        }, +, +        public GifState(GifState original) {, +            if (original != null) {, +                id = original.id;, +                gifHeader = original.gifHeader;, +                data = original.data;, +                context = original.context;, +                frameTransformation = original.frameTransformation;, +                targetWidth = original.targetWidth;, +                targetHeight = original.targetHeight;, +                bitmapProvider = original.bitmapProvider;, +            }, +        }, +, +        @Override, +        public Drawable newDrawable(Resources res) {, +            return super.newDrawable(res);, +        }, +, +        @Override, +        public Drawable newDrawable() {, +            return new GifDrawable(this);, +        }, +, +        @Override, +        public int getChangingConfigurations() {, +            return 0;, +        }, +    }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifData.java, +        GifDrawable result = new GifDrawable(gifId, header, data, context, getFrameTransformation(), targetWidth,, +                targetHeight, bitmapProvider);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +import android.content.Context;, +import android.content.res.Resources;, +import com.bumptech.glide.gifdecoder.GifHeader;, +import com.bumptech.glide.load.Transformation;]