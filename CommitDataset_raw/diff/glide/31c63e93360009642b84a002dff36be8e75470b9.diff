[+++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java, +import android.content.ContentResolver;, +    return build(context, uri, new ImageThumbnailQuery(context.getContentResolver()));, +    return build(context, uri, new VideoThumbnailQuery(context.getContentResolver()));, +    return new ThumbFetcher(, +        uri, new ThumbnailStreamOpener(query, byteArrayPool, context.getContentResolver()));, +  ThumbFetcher(Uri mediaStoreImageUri, ThumbnailStreamOpener opener) {, +    InputStream result = opener.open(mediaStoreImageUri);, +      orientation = opener.getOrientation(mediaStoreImageUri);, +, +    private final ContentResolver contentResolver;, +, +    VideoThumbnailQuery(ContentResolver contentResolver) {, +      this.contentResolver = contentResolver;, +    }, +, +    public Cursor query(Uri uri) {, +      return contentResolver.query(, +, +    private final ContentResolver contentResolver;, +, +    ImageThumbnailQuery(ContentResolver contentResolver) {, +      this.contentResolver = contentResolver;, +    }, +, +    public Cursor query(Uri uri) {, +      return contentResolver.query(, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java, +import android.content.ContentResolver;, +    return build(context, uri, new ImageThumbnailQuery(context.getContentResolver()));, +    return build(context, uri, new VideoThumbnailQuery(context.getContentResolver()));, +    return new ThumbFetcher(, +        uri, new ThumbnailStreamOpener(query, byteArrayPool, context.getContentResolver()));, +  ThumbFetcher(Uri mediaStoreImageUri, ThumbnailStreamOpener opener) {, +    InputStream result = opener.open(mediaStoreImageUri);, +      orientation = opener.getOrientation(mediaStoreImageUri);, +, +    private final ContentResolver contentResolver;, +, +    VideoThumbnailQuery(ContentResolver contentResolver) {, +      this.contentResolver = contentResolver;, +    }, +, +    public Cursor query(Uri uri) {, +      return contentResolver.query(, +, +    private final ContentResolver contentResolver;, +, +    ImageThumbnailQuery(ContentResolver contentResolver) {, +      this.contentResolver = contentResolver;, +    }, +, +    public Cursor query(Uri uri) {, +      return contentResolver.query(, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailQuery.java, +  Cursor query(Uri uri);, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java, +import android.content.ContentResolver;, +    return build(context, uri, new ImageThumbnailQuery(context.getContentResolver()));, +    return build(context, uri, new VideoThumbnailQuery(context.getContentResolver()));, +    return new ThumbFetcher(, +        uri, new ThumbnailStreamOpener(query, byteArrayPool, context.getContentResolver()));, +  ThumbFetcher(Uri mediaStoreImageUri, ThumbnailStreamOpener opener) {, +    InputStream result = opener.open(mediaStoreImageUri);, +      orientation = opener.getOrientation(mediaStoreImageUri);, +, +    private final ContentResolver contentResolver;, +, +    VideoThumbnailQuery(ContentResolver contentResolver) {, +      this.contentResolver = contentResolver;, +    }, +, +    public Cursor query(Uri uri) {, +      return contentResolver.query(, +, +    private final ContentResolver contentResolver;, +, +    ImageThumbnailQuery(ContentResolver contentResolver) {, +      this.contentResolver = contentResolver;, +    }, +, +    public Cursor query(Uri uri) {, +      return contentResolver.query(, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailQuery.java, +  Cursor query(Uri uri);, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpener.java, +import android.content.ContentResolver;, +  private final ContentResolver contentResolver;, +  public ThumbnailStreamOpener(, +      ThumbnailQuery query, ArrayPool byteArrayPool, ContentResolver contentResolver) {, +    this(DEFAULT_SERVICE, query, byteArrayPool, contentResolver);, +  public ThumbnailStreamOpener(, +      FileService service,, +      ThumbnailQuery query,, +      ArrayPool byteArrayPool,, +      ContentResolver contentResolver) {, +    this.contentResolver = contentResolver;, +  public int getOrientation(Uri uri) {, +      is = contentResolver.openInputStream(uri);, +  public InputStream open(Uri uri) throws FileNotFoundException {]