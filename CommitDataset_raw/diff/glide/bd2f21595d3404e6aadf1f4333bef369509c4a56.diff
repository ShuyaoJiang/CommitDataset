[+++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import android.support.annotation.NonNull;, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Void call() {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import android.support.annotation.NonNull;, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Void call() {, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +    public void onResourceReady(@NonNull Object resource,, +        @Nullable Transition<? super Object> transition) {, +    public void getSize(@NonNull SizeReadyCallback cb) {, +    public void removeCallback(@NonNull SizeReadyCallback cb) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import android.support.annotation.NonNull;, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Void call() {, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +    public void onResourceReady(@NonNull Object resource,, +        @Nullable Transition<? super Object> transition) {, +    public void getSize(@NonNull SizeReadyCallback cb) {, +    public void removeCallback(@NonNull SizeReadyCallback cb) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public void onResourceReady(@NonNull Object resource,, +        @Nullable Transition<? super Object> transition) {, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import android.support.annotation.NonNull;, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Void call() {, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +    public void onResourceReady(@NonNull Object resource,, +        @Nullable Transition<? super Object> transition) {, +    public void getSize(@NonNull SizeReadyCallback cb) {, +    public void removeCallback(@NonNull SizeReadyCallback cb) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public void onResourceReady(@NonNull Object resource,, +        @Nullable Transition<? super Object> transition) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/LruResourceCache.java, +  public void setResourceRemovedListener(@NonNull ResourceRemovedListener listener) {, +  protected int getSize(@Nullable Resource<?> item) {, +    if (item == null) {, +      return super.getSize(null);, +    } else {, +  }, +++ b/instrumentation/src/androidTest/java/com/bumptech/glide/test/ConcurrencyHelper.java, +import android.support.annotation.NonNull;, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Target<T> call() {, +          public void onResourceReady(@NonNull T resource,, +              @Nullable Transition<? super T> transition) {, +          public void getSize(@NonNull SizeReadyCallback cb) {, +          public void removeCallback(@NonNull SizeReadyCallback cb) {, +      public Void call() {, +++ b/library/src/main/java/com/bumptech/glide/ListPreloader.java, +    public void onResourceReady(@NonNull Object resource,, +        @Nullable Transition<? super Object> transition) {, +    public void getSize(@NonNull SizeReadyCallback cb) {, +    public void removeCallback(@NonNull SizeReadyCallback cb) {, +++ b/library/src/main/java/com/bumptech/glide/RequestManager.java, +    public void onResourceReady(@NonNull Object resource,]