[+++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java, +    rootRequestManagerFragment =, +        Glide.get(activity).getRequestManagerRetriever().getRequestManagerFragment(activity);, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java, +    rootRequestManagerFragment =, +        Glide.get(activity).getRequestManagerRetriever().getRequestManagerFragment(activity);, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +      return supportFragmentGet(, +          activity, fm, /*parentHint=*/ null, isActivityVisible(activity));, +      return supportFragmentGet(fragment.getActivity(), fm, fragment, fragment.isVisible());, +      return fragmentGet(, +          activity, fm, /*parentHint=*/ null, isActivityVisible(activity));, +      return fragmentGet(fragment.getActivity(), fm, fragment, fragment.isVisible());, +  RequestManagerFragment getRequestManagerFragment(Activity activity) {, +    return getRequestManagerFragment(, +        activity.getFragmentManager(), /*parentHint=*/ null, isActivityVisible(activity));, +  }, +, +  @SuppressWarnings("deprecation"), +  @NonNull, +  private RequestManagerFragment getRequestManagerFragment(, +      @NonNull final android.app.FragmentManager fm,, +      @Nullable android.app.Fragment parentHint,, +      boolean isParentVisible) {, +        if (isParentVisible) {, +          current.getGlideLifecycle().onStart();, +        }, +      @Nullable android.app.Fragment parentHint,, +      boolean isParentVisible) {, +    RequestManagerFragment current = getRequestManagerFragment(fm, parentHint, isParentVisible);, +  SupportRequestManagerFragment getSupportRequestManagerFragment(FragmentActivity activity) {, +    return getSupportRequestManagerFragment(, +        activity.getSupportFragmentManager(), /*parentHint=*/ null, isActivityVisible(activity));, +  }, +, +  private static boolean isActivityVisible(Activity activity) {, +    // This is a poor heuristic, but it's about all we have. We'd rather err on the side of visible, +    // and start requests than on the side of invisible and ignore valid requests., +    return !activity.isFinishing();, +  }, +, +  @NonNull, +  private SupportRequestManagerFragment getSupportRequestManagerFragment(, +      @NonNull final FragmentManager fm, @Nullable Fragment parentHint, boolean isParentVisible) {, +        if (isParentVisible) {, +          current.getGlideLifecycle().onStart();, +        }, +  private RequestManager supportFragmentGet(, +      @NonNull Context context,, +      @NonNull FragmentManager fm,, +      @Nullable Fragment parentHint,, +      boolean isParentVisible) {, +    SupportRequestManagerFragment current =, +        getSupportRequestManagerFragment(fm, parentHint, isParentVisible);, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java, +    rootRequestManagerFragment =, +        Glide.get(activity).getRequestManagerRetriever().getRequestManagerFragment(activity);, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +      return supportFragmentGet(, +          activity, fm, /*parentHint=*/ null, isActivityVisible(activity));, +      return supportFragmentGet(fragment.getActivity(), fm, fragment, fragment.isVisible());, +      return fragmentGet(, +          activity, fm, /*parentHint=*/ null, isActivityVisible(activity));, +      return fragmentGet(fragment.getActivity(), fm, fragment, fragment.isVisible());, +  RequestManagerFragment getRequestManagerFragment(Activity activity) {, +    return getRequestManagerFragment(, +        activity.getFragmentManager(), /*parentHint=*/ null, isActivityVisible(activity));, +  }, +, +  @SuppressWarnings("deprecation"), +  @NonNull, +  private RequestManagerFragment getRequestManagerFragment(, +      @NonNull final android.app.FragmentManager fm,, +      @Nullable android.app.Fragment parentHint,, +      boolean isParentVisible) {, +        if (isParentVisible) {, +          current.getGlideLifecycle().onStart();, +        }, +      @Nullable android.app.Fragment parentHint,, +      boolean isParentVisible) {, +    RequestManagerFragment current = getRequestManagerFragment(fm, parentHint, isParentVisible);, +  SupportRequestManagerFragment getSupportRequestManagerFragment(FragmentActivity activity) {, +    return getSupportRequestManagerFragment(, +        activity.getSupportFragmentManager(), /*parentHint=*/ null, isActivityVisible(activity));, +  }, +, +  private static boolean isActivityVisible(Activity activity) {, +    // This is a poor heuristic, but it's about all we have. We'd rather err on the side of visible, +    // and start requests than on the side of invisible and ignore valid requests., +    return !activity.isFinishing();, +  }, +, +  @NonNull, +  private SupportRequestManagerFragment getSupportRequestManagerFragment(, +      @NonNull final FragmentManager fm, @Nullable Fragment parentHint, boolean isParentVisible) {, +        if (isParentVisible) {, +          current.getGlideLifecycle().onStart();, +        }, +  private RequestManager supportFragmentGet(, +      @NonNull Context context,]