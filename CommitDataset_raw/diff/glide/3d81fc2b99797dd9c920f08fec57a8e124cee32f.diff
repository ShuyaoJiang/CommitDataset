[+++ b/library/src/androidTest/java/com/bumptech/glide/manager/Issue117Activity.java, +class Issue117Activity extends FragmentActivity {, +        viewPager.setId(View.generateViewId());, +++ b/library/src/androidTest/java/com/bumptech/glide/manager/Issue117Activity.java, +class Issue117Activity extends FragmentActivity {, +        viewPager.setId(View.generateViewId());, +++ b/library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java, +import static org.hamcrest.Matchers.empty;, +        assertThat(retriever.pendingRequestManagerFragments.entrySet(), empty());, +        assertThat(retriever.pendingSupportRequestManagerFragments.entrySet(), empty());, +            assertTrue(harness.hasFragmentWithTag(RequestManagerRetriever.TAG));, +        // Robolectric by default runs messages posted to the main looper synchronously, the framework does not. We post, +        // to the main thread here to work around an issue caused by a recursive method call so we need (and reasonably, +        // expect) our message to not run immediately, +        Robolectric.shadowOf(Looper.getMainLooper()).pause();, +++ b/library/src/androidTest/java/com/bumptech/glide/manager/Issue117Activity.java, +class Issue117Activity extends FragmentActivity {, +        viewPager.setId(View.generateViewId());, +++ b/library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java, +import static org.hamcrest.Matchers.empty;, +        assertThat(retriever.pendingRequestManagerFragments.entrySet(), empty());, +        assertThat(retriever.pendingSupportRequestManagerFragments.entrySet(), empty());, +            assertTrue(harness.hasFragmentWithTag(RequestManagerRetriever.TAG));, +        // Robolectric by default runs messages posted to the main looper synchronously, the framework does not. We post, +        // to the main thread here to work around an issue caused by a recursive method call so we need (and reasonably, +        // expect) our message to not run immediately, +        Robolectric.shadowOf(Looper.getMainLooper()).pause();, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +import android.util.Log;, +        boolean handled = true;, +        Object removed = null;, +        Object key = null;, +                key = fm;, +                removed = pendingRequestManagerFragments.remove(fm);, +                break;, +                key = supportFm;, +                removed = pendingSupportRequestManagerFragments.remove(supportFm);, +                break;, +                handled = false;, +        if (handled && removed == null && Log.isLoggable(TAG, Log.WARN)) {, +            Log.w(TAG, "Failed to remove expected request manager fragment, manager: " + key);, +        }, +        return handled;]