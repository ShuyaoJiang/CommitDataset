[+++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +    // Some negative sizes (Target.SIZE_ORIGINAL) are valid, 0 is never valid., +    SizeDeterminer(View view) {, +      int currentWidth = getTargetWidth();, +      int currentHeight = getTargetHeight();, +      if (!isViewStateAndSizeValid(currentWidth, currentHeight)) {, +      int currentWidth = getTargetWidth();, +      int currentHeight = getTargetHeight();, +      if (isViewStateAndSizeValid(currentWidth, currentHeight)) {, +        cb.onSizeReady(currentWidth, currentHeight);, +        return;, +      }, +, +      // callbacks to be added a time, so a List is a reasonable choice., +        ViewTreeObserver observer = view.getViewTreeObserver();, +    private boolean isViewStateAndSizeValid(int width, int height) {, +      return isViewStateValid() && isSizeValid(width) && isSizeValid(height);, +    }, +, +    private int getTargetHeight() {, +      int verticalPadding = view.getPaddingTop() + view.getPaddingBottom();, +      LayoutParams layoutParams = view.getLayoutParams();, +      int layoutParamSize = layoutParams != null ? layoutParams.height : PENDING_SIZE;, +      return getTargetDimen(view.getHeight(), layoutParamSize, verticalPadding);, +    }, +, +    private int getTargetWidth() {, +      int horizontalPadding = view.getPaddingLeft() + view.getPaddingRight();, +      LayoutParams layoutParams = view.getLayoutParams();, +      int layoutParamSize = layoutParams != null ? layoutParams.width : PENDING_SIZE;, +      return getTargetDimen(view.getWidth(), layoutParamSize, horizontalPadding);, +    }, +, +    private int getTargetDimen(int viewSize, int paramSize, int paddingSize) {, +      int adjustedViewSize = viewSize - paddingSize;, +      if (isSizeValid(adjustedViewSize)) {, +        return adjustedViewSize;, +      }, +, +      if (paramSize == PENDING_SIZE) {, +        return PENDING_SIZE;, +      }, +, +      if (paramSize == LayoutParams.WRAP_CONTENT) {, +        return SIZE_ORIGINAL;, +      } else if (paramSize > 0) {, +        return paramSize - paddingSize;, +      return size > 0 || size == SIZE_ORIGINAL;, +      SizeDeterminerLayoutListener(SizeDeterminer sizeDeterminer) {, +++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +    // Some negative sizes (Target.SIZE_ORIGINAL) are valid, 0 is never valid., +    SizeDeterminer(View view) {, +      int currentWidth = getTargetWidth();, +      int currentHeight = getTargetHeight();, +      if (!isViewStateAndSizeValid(currentWidth, currentHeight)) {, +      int currentWidth = getTargetWidth();, +      int currentHeight = getTargetHeight();, +      if (isViewStateAndSizeValid(currentWidth, currentHeight)) {, +        cb.onSizeReady(currentWidth, currentHeight);, +        return;, +      }, +, +      // callbacks to be added a time, so a List is a reasonable choice., +        ViewTreeObserver observer = view.getViewTreeObserver();, +    private boolean isViewStateAndSizeValid(int width, int height) {, +      return isViewStateValid() && isSizeValid(width) && isSizeValid(height);, +    }, +, +    private int getTargetHeight() {, +      int verticalPadding = view.getPaddingTop() + view.getPaddingBottom();, +      LayoutParams layoutParams = view.getLayoutParams();, +      int layoutParamSize = layoutParams != null ? layoutParams.height : PENDING_SIZE;, +      return getTargetDimen(view.getHeight(), layoutParamSize, verticalPadding);, +    }, +, +    private int getTargetWidth() {, +      int horizontalPadding = view.getPaddingLeft() + view.getPaddingRight();, +      LayoutParams layoutParams = view.getLayoutParams();, +      int layoutParamSize = layoutParams != null ? layoutParams.width : PENDING_SIZE;, +      return getTargetDimen(view.getWidth(), layoutParamSize, horizontalPadding);, +    }, +, +    private int getTargetDimen(int viewSize, int paramSize, int paddingSize) {, +      int adjustedViewSize = viewSize - paddingSize;, +      if (isSizeValid(adjustedViewSize)) {, +        return adjustedViewSize;, +      }, +, +      if (paramSize == PENDING_SIZE) {, +        return PENDING_SIZE;, +      }, +, +      if (paramSize == LayoutParams.WRAP_CONTENT) {, +        return SIZE_ORIGINAL;, +      } else if (paramSize > 0) {, +        return paramSize - paddingSize;, +      return size > 0 || size == SIZE_ORIGINAL;, +      SizeDeterminerLayoutListener(SizeDeterminer sizeDeterminer) {, +++ b/library/src/test/java/com/bumptech/glide/request/target/ViewTargetTest.java, +  public void getSize_withBothWrapContent_returnsSizeOriginal() {]