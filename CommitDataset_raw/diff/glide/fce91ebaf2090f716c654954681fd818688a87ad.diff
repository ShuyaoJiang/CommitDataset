[+++ b/library/src/com/bumptech/glide/loader/bitmap/model/GenericLoaderFactory.java, +import com.bumptech.glide.loader.bitmap.resource.ResourceFetcher;, +    private static final ModelLoader NULL_MODEL_LOADER = new ModelLoader() {, +        @Override, +        public ResourceFetcher getResourceFetcher(Object model, int width, int height) {, +            throw new NoSuchMethodError("This should never be called!");, +        }, +, +        @Override, +        public String getId(Object model) {, +            throw new NoSuchMethodError("This should never be called!");, +        }, +, +        @Override, +        public String toString() {, +            return "NULL_MODEL_LOADER";, +        }, +    };, +, +            // We've already tried to create a model loader and can't with the currently registered set of factories, but, +            // we can't use null to demonstrate that failure because model loaders that haven't been requested yet will, +            // be null in the cache. To avoid this, we use a special signal model loader., +            if (NULL_MODEL_LOADER.equals(result)) {, +                return null;, +            } else {, +        }, +        } else {, +            // We can't generate a model loader for the given arguments with the currently registered set of factories., +            cacheNullLoader(modelClass, resourceClass);, +    @SuppressWarnings("unchecked"), +    private <T, Y> void cacheNullLoader(Class<T> modelClass, Class<Y> resourceClass) {, +        cacheModelLoader(modelClass, resourceClass, NULL_MODEL_LOADER);, +    }, +]