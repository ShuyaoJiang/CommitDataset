[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifFrameLoaderTest.java, +  public void testReturnsSizeFromGifDecoderAndCurrentFrame() {, +    int decoderByteSize = 123456;, +    when(gifDecoder.getByteSize()).thenReturn(decoderByteSize);, +    assertThat(loader.getSize()).isEqualTo(decoderByteSize + Util.getBitmapByteSize(firstFrame));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifFrameLoaderTest.java, +  public void testReturnsSizeFromGifDecoderAndCurrentFrame() {, +    int decoderByteSize = 123456;, +    when(gifDecoder.getByteSize()).thenReturn(decoderByteSize);, +    assertThat(loader.getSize()).isEqualTo(decoderByteSize + Util.getBitmapByteSize(firstFrame));, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameLoader.java, +    return gifDecoder.getByteSize() + getFrameSize();, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifFrameLoaderTest.java, +  public void testReturnsSizeFromGifDecoderAndCurrentFrame() {, +    int decoderByteSize = 123456;, +    when(gifDecoder.getByteSize()).thenReturn(decoderByteSize);, +    assertThat(loader.getSize()).isEqualTo(decoderByteSize + Util.getBitmapByteSize(firstFrame));, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameLoader.java, +    return gifDecoder.getByteSize() + getFrameSize();, +++ b/third_party/gif_decoder/src/main/java/com/bumptech/glide/gifdecoder/GifDecoder.java, +  private static final int BYTES_PER_INTEGER = 4;, +, +   * Returns an estimated byte size for this decoder based on the data provided to {@link, +   * #setData(GifHeader, byte[])}, as well as internal buffers., +   */, +  public int getByteSize() {, +    return rawData.limit() + mainPixels.length + (mainScratch.length * BYTES_PER_INTEGER);, +  }, +, +  /**]