[+++ b/.gitmodules, +[submodule "third_party/disklrucache"], +	path = third_party/disklrucache, +++ b/.gitmodules, +[submodule "third_party/disklrucache"], +	path = third_party/disklrucache, +++ b/library/build.gradle, +apply plugin: 'maven', +    compile project(':third_party:disklrucache'), +, +// All dependencies are written to the pom file with the default type (.jar). Since we're uploading the gif decoder, +// as an aar we need to change the type in the pom file to match or maven/gradle wont' be able to find the transitive, +// dependency., +afterEvaluate {, +    def installer = install.repositories.mavenInstaller, +    def deployer = uploadArchives.repositories.mavenDeployer, +, +    [installer, deployer]*.pom*.whenConfigured { pom ->, +        pom.dependencies.find { dep ->, +            dep.groupId == 'com.github.bumptech.glide' && dep.artifactId == 'glide-gif-decoder', +        }.type = "aar", +    }, +}, +++ b/.gitmodules, +[submodule "third_party/disklrucache"], +	path = third_party/disklrucache, +++ b/library/build.gradle, +apply plugin: 'maven', +    compile project(':third_party:disklrucache'), +, +// All dependencies are written to the pom file with the default type (.jar). Since we're uploading the gif decoder, +// as an aar we need to change the type in the pom file to match or maven/gradle wont' be able to find the transitive, +// dependency., +afterEvaluate {, +    def installer = install.repositories.mavenInstaller, +    def deployer = uploadArchives.repositories.mavenDeployer, +, +    [installer, deployer]*.pom*.whenConfigured { pom ->, +        pom.dependencies.find { dep ->, +            dep.groupId == 'com.github.bumptech.glide' && dep.artifactId == 'glide-gif-decoder', +        }.type = "aar", +    }, +}, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java, +import com.bumptech.glide.disklrucache.DiskLruCache;, +++ b/.gitmodules, +[submodule "third_party/disklrucache"], +	path = third_party/disklrucache, +++ b/library/build.gradle, +apply plugin: 'maven', +    compile project(':third_party:disklrucache'), +, +// All dependencies are written to the pom file with the default type (.jar). Since we're uploading the gif decoder, +// as an aar we need to change the type in the pom file to match or maven/gradle wont' be able to find the transitive, +// dependency., +afterEvaluate {, +    def installer = install.repositories.mavenInstaller, +    def deployer = uploadArchives.repositories.mavenDeployer, +, +    [installer, deployer]*.pom*.whenConfigured { pom ->, +        pom.dependencies.find { dep ->, +            dep.groupId == 'com.github.bumptech.glide' && dep.artifactId == 'glide-gif-decoder', +        }.type = "aar", +    }, +}, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java, +import com.bumptech.glide.disklrucache.DiskLruCache;, +++ b/settings.gradle, +include ':third_party:disklrucache', +++ b/.gitmodules, +[submodule "third_party/disklrucache"], +	path = third_party/disklrucache, +++ b/library/build.gradle, +apply plugin: 'maven', +    compile project(':third_party:disklrucache'), +, +// All dependencies are written to the pom file with the default type (.jar). Since we're uploading the gif decoder, +// as an aar we need to change the type in the pom file to match or maven/gradle wont' be able to find the transitive, +// dependency., +afterEvaluate {, +    def installer = install.repositories.mavenInstaller, +    def deployer = uploadArchives.repositories.mavenDeployer, +, +    [installer, deployer]*.pom*.whenConfigured { pom ->, +        pom.dependencies.find { dep ->, +            dep.groupId == 'com.github.bumptech.glide' && dep.artifactId == 'glide-gif-decoder', +        }.type = "aar", +    }, +}, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java, +import com.bumptech.glide.disklrucache.DiskLruCache;, +++ b/settings.gradle, +include ':third_party:disklrucache', +++ /dev/null, +++ b/.gitmodules, +[submodule "third_party/disklrucache"], +	path = third_party/disklrucache, +++ b/library/build.gradle, +apply plugin: 'maven', +    compile project(':third_party:disklrucache')]