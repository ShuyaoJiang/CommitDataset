[+++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java, +   * Multiplies the initial size of the pool by the given multiplier to dynamically and, +   * synchronously allow users to adjust the size of the pool., +   * Adds the given {@link android.graphics.Bitmap} if it is eligible to be re-used and the pool, +   * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it., +   * <p> Callers most <em>not</em> continue to use the Bitmap after calling this method. </p>, +  void put(Bitmap bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java, +   * Multiplies the initial size of the pool by the given multiplier to dynamically and, +   * synchronously allow users to adjust the size of the pool., +   * Adds the given {@link android.graphics.Bitmap} if it is eligible to be re-used and the pool, +   * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it., +   * <p> Callers most <em>not</em> continue to use the Bitmap after calling this method. </p>, +  void put(Bitmap bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java, +  public void put(Bitmap bitmap) {, +    bitmap.recycle();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java, +   * Multiplies the initial size of the pool by the given multiplier to dynamically and, +   * synchronously allow users to adjust the size of the pool., +   * Adds the given {@link android.graphics.Bitmap} if it is eligible to be re-used and the pool, +   * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it., +   * <p> Callers most <em>not</em> continue to use the Bitmap after calling this method. </p>, +  void put(Bitmap bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java, +  public void put(Bitmap bitmap) {, +    bitmap.recycle();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +  public synchronized void put(Bitmap bitmap) {, +      bitmap.recycle();, +      return;, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java, +   * Multiplies the initial size of the pool by the given multiplier to dynamically and, +   * synchronously allow users to adjust the size of the pool., +   * Adds the given {@link android.graphics.Bitmap} if it is eligible to be re-used and the pool, +   * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it., +   * <p> Callers most <em>not</em> continue to use the Bitmap after calling this method. </p>, +  void put(Bitmap bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java, +  public void put(Bitmap bitmap) {, +    bitmap.recycle();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +  public synchronized void put(Bitmap bitmap) {, +      bitmap.recycle();, +      return;, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapResource.java, +    bitmapPool.put(bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java, +   * Multiplies the initial size of the pool by the given multiplier to dynamically and, +   * synchronously allow users to adjust the size of the pool., +   * Adds the given {@link android.graphics.Bitmap} if it is eligible to be re-used and the pool, +   * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it., +   * <p> Callers most <em>not</em> continue to use the Bitmap after calling this method. </p>, +  void put(Bitmap bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java, +  public void put(Bitmap bitmap) {, +    bitmap.recycle();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +  public synchronized void put(Bitmap bitmap) {, +      bitmap.recycle();, +      return;, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapResource.java, +    bitmapPool.put(bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterCrop.java, +    if (toReuse != null && toReuse != transformed) {, +      pool.put(toReuse);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java, +   * Multiplies the initial size of the pool by the given multiplier to dynamically and, +   * synchronously allow users to adjust the size of the pool., +   * Adds the given {@link android.graphics.Bitmap} if it is eligible to be re-used and the pool, +   * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it., +   * <p> Callers most <em>not</em> continue to use the Bitmap after calling this method. </p>, +  void put(Bitmap bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java, +  public void put(Bitmap bitmap) {, +    bitmap.recycle();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +  public synchronized void put(Bitmap bitmap) {, +      bitmap.recycle();, +      return;, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapResource.java, +    bitmapPool.put(bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CenterCrop.java, +    if (toReuse != null && toReuse != transformed) {, +      pool.put(toReuse);, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/CircleCrop.java, +    if (toReuse != null && toReuse != transformed) {, +      pool.put(toReuse);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool.java, +   * Multiplies the initial size of the pool by the given multiplier to dynamically and, +   * synchronously allow users to adjust the size of the pool., +   * Adds the given {@link android.graphics.Bitmap} if it is eligible to be re-used and the pool, +   * can fit it, or calls {@link Bitmap#recycle()} on the Bitmap and discards it., +   * <p> Callers most <em>not</em> continue to use the Bitmap after calling this method. </p>, +  void put(Bitmap bitmap);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter.java, +  public void put(Bitmap bitmap) {, +    bitmap.recycle();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +  public synchronized void put(Bitmap bitmap) {]