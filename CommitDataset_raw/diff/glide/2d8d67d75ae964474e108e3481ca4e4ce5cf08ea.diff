[+++ b/src/com/bumptech/photos/view/AssetPresenter.java, +import java.lang.ref.WeakReference;, +, +public class AssetPresenter<T> {, +    private Drawable placeholderDrawable;, +    private ImageSetCallback imageSetCallback;, +, +    private T currentModel;, +    private int currentCount;, +, +    private final AssetPathConverter<T> assetIdToPath;, +, +    public AssetPresenter(ImageView imageView, AssetPathConverter<T> assetIdToPath, ImageLoader imageLoader) {, +, +        this.imageSetCallback = cb;, +    public void setAssetModel(final T model) {, +        if (model == null || model.equals(currentModel)) return;, +        final int loadCount = ++currentCount;, +        currentModel = model;, +        isImageSet = false;, +        assetIdToPath.fetchPath(model, new PathReadyCallback(this, loadCount));, +    public void onPathReady(String path, int loadCount) {, +        if (loadCount != currentCount) return;, +, +        imageLoader.loadImage(path, width, height, new ImageReadyCallback(this, loadCount));, +, +    public void onImageReady(int loadCount) {, +        if (loadCount != currentCount || !canSetImage()) return;, +, +        if (imageSetCallback != null), +            imageSetCallback.onImageSet(imageView, false);, +        imageView.setImageBitmap(imageLoader.getReadyBitmap());, +        isImageSet = true;, +    }, +, +    public void resetPlaceHolder() {, +        if (placeholderDrawable == null || !canSetPlaceholder()) return;, +, +        imageView.setImageDrawable(placeholderDrawable);, +        currentCount++;, +        currentModel = null;, +        isImageSet = false;, +    }, +, +    public int getWidth() {, +        return width;, +    }, +, +    public int getHeight() {, +        return height;, +    private boolean canSetImage() {, +        return coordinator == null || coordinator.canSetImage(this);, +    private boolean canSetPlaceholder() {, +        return coordinator == null || coordinator.canSetPlaceholder(this);, +    private static class ImageReadyCallback implements ImageLoader.ImageReadyCallback{, +, +        private final WeakReference<AssetPresenter> assetPresenterRef;, +        private final int loadCount;, +, +        public ImageReadyCallback(AssetPresenter assetPresenter, int loadCount) {, +            this.assetPresenterRef = new WeakReference<AssetPresenter>(assetPresenter);, +            this.loadCount = loadCount;, +        public void onImageReady() {, +            final AssetPresenter assetPresenter = assetPresenterRef.get();, +            if (assetPresenter != null ) {, +                assetPresenter.onImageReady(loadCount);, +        public void onLoadFailed(Exception e) { }, +    private static class PathReadyCallback implements AssetPathConverter.PathReadyListener {, +, +        private final int loadCount;, +        private final WeakReference<AssetPresenter> assetPresenterRef;, +, +        public PathReadyCallback(AssetPresenter assetPresenter, int loadCount) {, +            this.assetPresenterRef = new WeakReference<AssetPresenter>(assetPresenter);, +            this.loadCount = loadCount;, +        }, +, +        @Override, +        public void onPathReady(String path) {, +            final AssetPresenter assetPresenter = assetPresenterRef.get();, +            if (assetPresenter != null) {, +                assetPresenter.onPathReady(path, loadCount);, +            }, +        }, +++ b/src/com/bumptech/photos/view/AssetPresenter.java, +import java.lang.ref.WeakReference;, +, +public class AssetPresenter<T> {, +    private Drawable placeholderDrawable;, +    private ImageSetCallback imageSetCallback;, +, +    private T currentModel;, +    private int currentCount;, +, +    private final AssetPathConverter<T> assetIdToPath;, +, +    public AssetPresenter(ImageView imageView, AssetPathConverter<T> assetIdToPath, ImageLoader imageLoader) {, +, +        this.imageSetCallback = cb;, +    public void setAssetModel(final T model) {]