[+++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +import android.app.Application;, +import android.content.ContextWrapper;, +        } else if (Util.isOnMainThread() && !(context instanceof Application)) {, +            } else if (context instanceof ContextWrapper) {, +                return get(((ContextWrapper) context).getBaseContext());, +++ b/library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java, +import android.app.Application;, +import android.content.ContextWrapper;, +        } else if (Util.isOnMainThread() && !(context instanceof Application)) {, +            } else if (context instanceof ContextWrapper) {, +                return get(((ContextWrapper) context).getBaseContext());, +++ b/library/src/test/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java, +import android.content.ContextWrapper;, +, +, +    public void testHandlesContextWrappersForActivities() {, +        DefaultRetrieverHarness harness = new DefaultRetrieverHarness();, +        RequestManager requestManager = harness.doGet();, +        ContextWrapper contextWrapper = new ContextWrapper((Context) harness.getController().get());, +, +        assertEquals(requestManager, RequestManagerRetriever.get(contextWrapper));, +    }, +, +    @Test, +    public void testHandlesContextWrappersForApplication() {, +        ContextWrapper contextWrapper = new ContextWrapper(Robolectric.application);, +        RequestManager requestManager = RequestManagerRetriever.get(Robolectric.application);, +, +        assertEquals(requestManager, RequestManagerRetriever.get(contextWrapper));, +    }, +, +    @Test]