[+++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +      result = createBitmap(width, height, config);, +      result = createBitmap(width, height, config);, +  @NonNull, +  private static Bitmap createBitmap(int width, int height, @Nullable Bitmap.Config config) {, +    return Bitmap.createBitmap(width, height, config != null ? config : DEFAULT_CONFIG);, +  }, +, +  private synchronized Bitmap getDirtyOrNull(, +      int width, int height, @Nullable Bitmap.Config config) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java, +      result = createBitmap(width, height, config);, +      result = createBitmap(width, height, config);, +  @NonNull, +  private static Bitmap createBitmap(int width, int height, @Nullable Bitmap.Config config) {, +    return Bitmap.createBitmap(width, height, config != null ? config : DEFAULT_CONFIG);, +  }, +, +  private synchronized Bitmap getDirtyOrNull(, +      int width, int height, @Nullable Bitmap.Config config) {, +++ b/library/src/test/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPoolTest.java, +  @Test, +  public void get_withNullConfig_andEmptyPool_returnsNewArgb8888Bitmap() {, +    Bitmap result = pool.get(100, 100, /*config=*/ null);, +    assertThat(result.getConfig()).isEqualTo(Bitmap.Config.ARGB_8888);, +  }, +, +  @Test, +  public void getDirty_withNullConfig_andEmptyPool_returnsNewArgb8888Bitmap() {, +    Bitmap result = pool.getDirty(100, 100, /*config=*/ null);, +    assertThat(result.getConfig()).isEqualTo(Bitmap.Config.ARGB_8888);, +  }, +, +      return bitmaps.isEmpty() ? null : bitmaps.removeLast();]