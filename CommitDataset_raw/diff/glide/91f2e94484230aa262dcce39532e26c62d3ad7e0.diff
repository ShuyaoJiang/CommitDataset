[+++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*[/\\]ResourceIds" checks=".*"/>, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*[/\\]ResourceIds" checks=".*"/>, +++ b/gradle.properties, +# Matches the version in Google., +MOCKITO_VERSION=1.9.5, +MOCKITO_ANDROID_VERSION=2.11.0, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*[/\\]ResourceIds" checks=".*"/>, +++ b/gradle.properties, +# Matches the version in Google., +MOCKITO_VERSION=1.9.5, +MOCKITO_ANDROID_VERSION=2.11.0, +++ b/integration/gifencoder/build.gradle, +    testCompile "org.mockito:mockito-core:${MOCKITO_VERSION}", +++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*[/\\]ResourceIds" checks=".*"/>, +++ b/gradle.properties, +# Matches the version in Google., +MOCKITO_VERSION=1.9.5, +MOCKITO_ANDROID_VERSION=2.11.0, +++ b/integration/gifencoder/build.gradle, +    testCompile "org.mockito:mockito-core:${MOCKITO_VERSION}", +++ b/integration/gifencoder/src/test/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoderTest.java, +    when(decoder.getNextFrame()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888));, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*[/\\]ResourceIds" checks=".*"/>, +++ b/gradle.properties, +# Matches the version in Google., +MOCKITO_VERSION=1.9.5, +MOCKITO_ANDROID_VERSION=2.11.0, +++ b/integration/gifencoder/build.gradle, +    testCompile "org.mockito:mockito-core:${MOCKITO_VERSION}", +++ b/integration/gifencoder/src/test/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoderTest.java, +    when(decoder.getNextFrame()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888));, +++ b/library/build.gradle, +    androidTestCompile "org.mockito:mockito-android:${MOCKITO_ANDROID_VERSION}", +++ b/checkstyle_suppressions.xml, +    <suppress files=".*[/\\]library[/\\]src[/\\]androidTest[/\\].*[/\\]ResourceIds" checks=".*"/>, +++ b/gradle.properties, +# Matches the version in Google., +MOCKITO_VERSION=1.9.5, +MOCKITO_ANDROID_VERSION=2.11.0, +++ b/integration/gifencoder/build.gradle, +    testCompile "org.mockito:mockito-core:${MOCKITO_VERSION}", +++ b/integration/gifencoder/src/test/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoderTest.java, +    when(decoder.getNextFrame()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888));, +++ b/library/build.gradle, +    androidTestCompile "org.mockito:mockito-android:${MOCKITO_ANDROID_VERSION}", +++ b/library/src/androidTest/java/com/bumptech/glide/NonBitmapDrawableResourcesTest.java, +package com.bumptech.glide;, +, +import static com.google.common.truth.Truth.assertThat;, +, +import android.content.ContentResolver;, +import android.content.Context;, +import android.content.Intent;, +import android.content.pm.PackageInfo;, +import android.content.pm.PackageManager;, +import android.content.pm.PackageManager.NameNotFoundException;, +import android.content.pm.ResolveInfo;, +import android.content.res.Resources;, +import android.graphics.Bitmap;, +import android.graphics.drawable.Drawable;, +import android.net.Uri;, +import android.support.test.InstrumentationRegistry;, +import android.support.test.runner.AndroidJUnit4;, +import com.bumptech.glide.test.ResourceIds;, +import java.util.HashSet;, +import java.util.List;, +import java.util.Set;, +import java.util.concurrent.ExecutionException;, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +, +@RunWith(AndroidJUnit4.class), +public class NonBitmapDrawableResourcesTest {, +  private Context context;, +, +  @Before, +  public void setUp() {, +    context = InstrumentationRegistry.getTargetContext();, +  }, +, +  @After, +  public void tearDown() {, +    Glide.tearDown();, +  }, +, +  @Test, +  public void load_withBitmapResourceId_asDrawable_producesNonNullDrawable(), +      throws ExecutionException, InterruptedException {, +    Drawable drawable = Glide.with(context), +        .load(android.R.drawable.star_big_off), +        .submit(), +        .get();, +    assertThat(drawable).isNotNull();]