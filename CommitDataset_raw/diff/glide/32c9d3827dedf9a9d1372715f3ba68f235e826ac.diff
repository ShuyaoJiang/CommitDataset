[+++ b/checkstyle_suppressions.xml, +    <suppress files=".*RequestBuilder.java|ChildLoadProvider.java|AnimationOptions.java|BaseDecodeOptions.java|RequestOptions.java" checks="NoClone" />, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*RequestBuilder.java|ChildLoadProvider.java|AnimationOptions.java|BaseDecodeOptions.java|RequestOptions.java" checks="NoClone" />, +++ b/integration/okhttp/okhttp.iml, +    <orderEntry type="module" module-name="library" />, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*RequestBuilder.java|ChildLoadProvider.java|AnimationOptions.java|BaseDecodeOptions.java|RequestOptions.java" checks="NoClone" />, +++ b/integration/okhttp/okhttp.iml, +    <orderEntry type="module" module-name="library" />, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java, +        Request request = new Request.Builder(), +, +    @Override, +    public Class<InputStream> getDataClass() {, +        return InputStream.class;, +    }, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*RequestBuilder.java|ChildLoadProvider.java|AnimationOptions.java|BaseDecodeOptions.java|RequestOptions.java" checks="NoClone" />, +++ b/integration/okhttp/okhttp.iml, +    <orderEntry type="module" module-name="library" />, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java, +        Request request = new Request.Builder(), +, +    @Override, +    public Class<InputStream> getDataClass() {, +        return InputStream.class;, +    }, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java, +import com.bumptech.glide.load.model.MultiModelLoaderFactory;, +    private final OkHttpClient client;, +, +    public OkHttpUrlLoader(OkHttpClient client) {, +        this.client = client;, +    }, +, +    @Override, +    public boolean handles(GlideUrl url) {, +        return true;, +    }, +, +    @Override, +    public DataFetcher<InputStream> getDataFetcher(GlideUrl model, int width, int height) {, +        return new OkHttpStreamFetcher(client, model);, +    }, +, +        public ModelLoader<GlideUrl, InputStream> build(Context context, MultiModelLoaderFactory multiFactory) {, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*RequestBuilder.java|ChildLoadProvider.java|AnimationOptions.java|BaseDecodeOptions.java|RequestOptions.java" checks="NoClone" />, +++ b/integration/okhttp/okhttp.iml, +    <orderEntry type="module" module-name="library" />, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java, +        Request request = new Request.Builder(), +, +    @Override, +    public Class<InputStream> getDataClass() {, +        return InputStream.class;, +    }, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java, +import com.bumptech.glide.load.model.MultiModelLoaderFactory;, +    private final OkHttpClient client;, +, +    public OkHttpUrlLoader(OkHttpClient client) {, +        this.client = client;, +    }, +, +    @Override, +    public boolean handles(GlideUrl url) {, +        return true;, +    }, +, +    @Override, +    public DataFetcher<InputStream> getDataFetcher(GlideUrl model, int width, int height) {, +        return new OkHttpStreamFetcher(client, model);, +    }, +, +        public ModelLoader<GlideUrl, InputStream> build(Context context, MultiModelLoaderFactory multiFactory) {, +++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java, +    @Override, +    public Class<InputStream> getDataClass() {, +        return InputStream.class;, +    }, +, +++ b/checkstyle_suppressions.xml, +    <suppress files=".*RequestBuilder.java|ChildLoadProvider.java|AnimationOptions.java|BaseDecodeOptions.java|RequestOptions.java" checks="NoClone" />, +++ b/integration/okhttp/okhttp.iml, +    <orderEntry type="module" module-name="library" />, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java, +        Request request = new Request.Builder(), +, +    @Override, +    public Class<InputStream> getDataClass() {, +        return InputStream.class;, +    }, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java, +import com.bumptech.glide.load.model.MultiModelLoaderFactory;, +    private final OkHttpClient client;, +, +    public OkHttpUrlLoader(OkHttpClient client) {, +        this.client = client;]