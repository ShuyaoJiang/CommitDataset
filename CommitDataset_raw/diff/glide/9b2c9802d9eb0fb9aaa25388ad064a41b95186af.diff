[+++ b/library/src/com/bumptech/photos/resize/BitmapTracker.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +    private final BitmapPool target;, +    public BitmapTracker(BitmapPool target, int bitmapsPerSize) {, +++ b/library/src/com/bumptech/photos/resize/BitmapTracker.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +    private final BitmapPool target;, +    public BitmapTracker(BitmapPool target, int bitmapsPerSize) {, +++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +        final BitmapPool bitmapPool;, +            bitmapPool = new ConcurrentBitmapPool(options.maxPerSize);, +            bitmapTracker = new BitmapTracker(bitmapPool, options.maxPerSize);, +            bitmapPool = null;, +        this.resizer = new ImageResizer(bitmapPool, options.bitmapDecodeOptions);, +++ b/library/src/com/bumptech/photos/resize/BitmapTracker.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +    private final BitmapPool target;, +    public BitmapTracker(BitmapPool target, int bitmapsPerSize) {, +++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +        final BitmapPool bitmapPool;, +            bitmapPool = new ConcurrentBitmapPool(options.maxPerSize);, +            bitmapTracker = new BitmapTracker(bitmapPool, options.maxPerSize);, +            bitmapPool = null;, +        this.resizer = new ImageResizer(bitmapPool, options.bitmapDecodeOptions);, +++ b/library/src/com/bumptech/photos/resize/ImageResizer.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPoolAdapter;, +    private final BitmapPool bitmapPool;, +    public ImageResizer(BitmapPool bitmapPool) {, +    public ImageResizer(BitmapPool bitmapPool, BitmapFactory.Options defaultOptions){, +        if (bitmapPool == null) {, +            this.bitmapPool = new BitmapPoolAdapter();, +        } else {, +        }, +, +        return bitmapPool.get(width, height);, +++ b/library/src/com/bumptech/photos/resize/BitmapTracker.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +    private final BitmapPool target;, +    public BitmapTracker(BitmapPool target, int bitmapsPerSize) {, +++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +        final BitmapPool bitmapPool;, +            bitmapPool = new ConcurrentBitmapPool(options.maxPerSize);, +            bitmapTracker = new BitmapTracker(bitmapPool, options.maxPerSize);, +            bitmapPool = null;, +        this.resizer = new ImageResizer(bitmapPool, options.bitmapDecodeOptions);, +++ b/library/src/com/bumptech/photos/resize/ImageResizer.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPoolAdapter;, +    private final BitmapPool bitmapPool;, +    public ImageResizer(BitmapPool bitmapPool) {, +    public ImageResizer(BitmapPool bitmapPool, BitmapFactory.Options defaultOptions){, +        if (bitmapPool == null) {, +            this.bitmapPool = new BitmapPoolAdapter();, +        } else {, +        }, +, +        return bitmapPool.get(width, height);, +++ b/library/src/com/bumptech/photos/resize/bitmap_recycle/BitmapPool.java, +package com.bumptech.photos.resize.bitmap_recycle;, +, +import android.graphics.Bitmap;, +, +/**, + * Created with IntelliJ IDEA., + * User: sam, + * Date: 6/5/13, + * Time: 2:52 PM, + * To change this template use File | Settings | File Templates., + */, +public interface BitmapPool {, +    public void put(Bitmap bitmap);, +    public Bitmap get(int width, int height);, +, +}, +++ b/library/src/com/bumptech/photos/resize/BitmapTracker.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +    private final BitmapPool target;, +    public BitmapTracker(BitmapPool target, int bitmapsPerSize) {, +++ b/library/src/com/bumptech/photos/resize/ImageManager.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +        final BitmapPool bitmapPool;, +            bitmapPool = new ConcurrentBitmapPool(options.maxPerSize);, +            bitmapTracker = new BitmapTracker(bitmapPool, options.maxPerSize);, +            bitmapPool = null;, +        this.resizer = new ImageResizer(bitmapPool, options.bitmapDecodeOptions);, +++ b/library/src/com/bumptech/photos/resize/ImageResizer.java, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPool;, +import com.bumptech.photos.resize.bitmap_recycle.BitmapPoolAdapter;, +    private final BitmapPool bitmapPool;, +    public ImageResizer(BitmapPool bitmapPool) {, +    public ImageResizer(BitmapPool bitmapPool, BitmapFactory.Options defaultOptions){, +        if (bitmapPool == null) {, +            this.bitmapPool = new BitmapPoolAdapter();, +        } else {, +        }, +]