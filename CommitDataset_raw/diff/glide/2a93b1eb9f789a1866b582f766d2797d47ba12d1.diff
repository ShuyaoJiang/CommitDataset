[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoderTest.java, +import static org.mockito.Matchers.anyLong;, +import static org.mockito.Mockito.never;, +, +    @Test(expected = IllegalArgumentException.class), +    public void testThrowsExceptionIfInitializedWithNegativeFrame() {, +        new VideoBitmapDecoder(-1);, +    }, +, +    @Test, +    public void testSpecifiesThumbnailFrameIfInitializedWithFrameNumber() throws IOException {, +        int frame = 5;, +        decoder = new VideoBitmapDecoder(new VideoBitmapDecoder.MediaMetadataRetrieverFactory()  {, +          @Override, +          public MediaMetadataRetriever build() {, +            return factory.build();, +          }, +        }, frame);, +, +        decoder.decode(resource, bitmapPool, 100, 100, decodeFormat);, +, +        verify(retriever).getFrameAtTime(5);, +        verify(retriever, never()).getFrameAtTime();, +    }, +, +    @Test, +    public void testDoesNotSpecifyThumbnailFrameIfInitializedWithoutFrameNumber(), +        throws IOException {, +      decoder = new VideoBitmapDecoder(new VideoBitmapDecoder.MediaMetadataRetrieverFactory()  {, +        @Override, +        public MediaMetadataRetriever build() {, +          return factory.build();, +        }, +      });, +, +      decoder.decode(resource, bitmapPool, 100, 100, decodeFormat);, +, +      verify(retriever).getFrameAtTime();, +      verify(retriever, never()).getFrameAtTime(anyLong());, +    }, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoderTest.java, +import static org.mockito.Matchers.anyLong;, +import static org.mockito.Mockito.never;, +, +    @Test(expected = IllegalArgumentException.class), +    public void testThrowsExceptionIfInitializedWithNegativeFrame() {, +        new VideoBitmapDecoder(-1);, +    }, +, +    @Test, +    public void testSpecifiesThumbnailFrameIfInitializedWithFrameNumber() throws IOException {, +        int frame = 5;, +        decoder = new VideoBitmapDecoder(new VideoBitmapDecoder.MediaMetadataRetrieverFactory()  {, +          @Override, +          public MediaMetadataRetriever build() {, +            return factory.build();, +          }, +        }, frame);, +, +        decoder.decode(resource, bitmapPool, 100, 100, decodeFormat);, +, +        verify(retriever).getFrameAtTime(5);, +        verify(retriever, never()).getFrameAtTime();, +    }, +, +    @Test, +    public void testDoesNotSpecifyThumbnailFrameIfInitializedWithoutFrameNumber(), +        throws IOException {, +      decoder = new VideoBitmapDecoder(new VideoBitmapDecoder.MediaMetadataRetrieverFactory()  {, +        @Override, +        public MediaMetadataRetriever build() {, +          return factory.build();, +        }, +      });, +, +      decoder.decode(resource, bitmapPool, 100, 100, decodeFormat);, +, +      verify(retriever).getFrameAtTime();, +      verify(retriever, never()).getFrameAtTime(anyLong());, +    }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder.java, +    private static final int NO_FRAME = -1;, +    private int frame;, +        this(DEFAULT_FACTORY, NO_FRAME);, +    }, +, +    public VideoBitmapDecoder(int frame) {, +      this(DEFAULT_FACTORY, checkValidFrame(frame));, +      this(factory, NO_FRAME);, +    }, +, +    VideoBitmapDecoder(MediaMetadataRetrieverFactory factory, int frame) {, +        this.frame = frame;, +        Bitmap result;, +        if (frame >= 0) {, +          result = mediaMetadataRetriever.getFrameAtTime(frame);, +        } else {, +          result = mediaMetadataRetriever.getFrameAtTime();, +        }, +]