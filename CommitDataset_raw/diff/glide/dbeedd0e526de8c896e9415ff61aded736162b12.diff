[+++ b/library/src/main/java/com/bumptech/glide/request/target/AppWidgetTarget.java, +   * @param viewId      The id of the ImageView view that will load the image., +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, widgetIds);, +   * @param viewId        The id of the ImageView view that will load the image., +   * @param remoteViews   RemoteViews object which contains the ImageView that will load the, +   *                      bitmap., +  public AppWidgetTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, ComponentName componentName) {, +   * @param viewId        The id of the ImageView view that will load the image., +  public AppWidgetTarget(Context context,, +      int viewId, RemoteViews remoteViews, ComponentName componentName) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, componentName);, +++ b/library/src/main/java/com/bumptech/glide/request/target/AppWidgetTarget.java, +   * @param viewId      The id of the ImageView view that will load the image., +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, widgetIds);, +   * @param viewId        The id of the ImageView view that will load the image., +   * @param remoteViews   RemoteViews object which contains the ImageView that will load the, +   *                      bitmap., +  public AppWidgetTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, ComponentName componentName) {, +   * @param viewId        The id of the ImageView view that will load the image., +  public AppWidgetTarget(Context context,, +      int viewId, RemoteViews remoteViews, ComponentName componentName) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, componentName);, +++ b/library/src/main/java/com/bumptech/glide/request/target/NotificationTarget.java, +   * @param viewId         The id of the ImageView view that will load the image., +  public NotificationTarget(Context context,, +      int viewId, RemoteViews remoteViews, Notification notification, int notificationId) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, notification, notificationId);, +   * @param viewId         The id of the ImageView view that will load the image., +   * @param remoteViews    RemoteViews object which contains the ImageView that will load the, +   *                       bitmap., +  public NotificationTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, Notification notification, int notificationId) {, +++ b/library/src/main/java/com/bumptech/glide/request/target/AppWidgetTarget.java, +   * @param viewId      The id of the ImageView view that will load the image., +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, widgetIds);, +   * @param viewId        The id of the ImageView view that will load the image., +   * @param remoteViews   RemoteViews object which contains the ImageView that will load the, +   *                      bitmap., +  public AppWidgetTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, ComponentName componentName) {, +   * @param viewId        The id of the ImageView view that will load the image., +  public AppWidgetTarget(Context context,, +      int viewId, RemoteViews remoteViews, ComponentName componentName) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, componentName);, +++ b/library/src/main/java/com/bumptech/glide/request/target/NotificationTarget.java, +   * @param viewId         The id of the ImageView view that will load the image., +  public NotificationTarget(Context context,, +      int viewId, RemoteViews remoteViews, Notification notification, int notificationId) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, notification, notificationId);, +   * @param viewId         The id of the ImageView view that will load the image., +   * @param remoteViews    RemoteViews object which contains the ImageView that will load the, +   *                       bitmap., +  public NotificationTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, Notification notification, int notificationId) {, +++ b/library/src/test/java/com/bumptech/glide/request/target/AppWidgetTargetTest.java, +        new AppWidgetTarget(RuntimeEnvironment.application, viewId, views, componentName);, +        new AppWidgetTarget(RuntimeEnvironment.application, viewId, views, componentName);, +        new AppWidgetTarget(RuntimeEnvironment.application, viewId, views, widgetIds);, +        new AppWidgetTarget(RuntimeEnvironment.application, viewId, views, widgetIds);, +    new AppWidgetTarget(null /*context*/, 1234 /*viewId*/, views, 1 /*widgetIds*/);, +    new AppWidgetTarget(null /*context*/, 1234 /*viewId*/, views, mock(ComponentName.class));, +    new AppWidgetTarget(RuntimeEnvironment.application,, +        viewId, null /*remoteViews*/, 1 /*widgetIds*/);, +    new AppWidgetTarget(RuntimeEnvironment.application,, +        viewId, null /*remoteViews*/, mock(ComponentName.class));, +    new AppWidgetTarget(RuntimeEnvironment.application, viewId, views, (int[]) null /*widgetIds*/);, +    new AppWidgetTarget(RuntimeEnvironment.application, viewId, views);, +    new AppWidgetTarget(RuntimeEnvironment.application, viewId, views, (ComponentName) null);, +++ b/library/src/main/java/com/bumptech/glide/request/target/AppWidgetTarget.java, +   * @param viewId      The id of the ImageView view that will load the image., +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context, int width, int height,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +   * @param remoteViews RemoteViews object which contains the ImageView that will load the bitmap., +  public AppWidgetTarget(Context context,, +      int viewId, RemoteViews remoteViews, int... widgetIds) {, +    this(context, SIZE_ORIGINAL, SIZE_ORIGINAL, viewId, remoteViews, widgetIds);, +   * @param viewId        The id of the ImageView view that will load the image., +   * @param remoteViews   RemoteViews object which contains the ImageView that will load the, +   *                      bitmap.]