[+++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +    private final GifFrameManager frameManager;, +    private final GifState state;, +    private final GifDecoder decoder;, +, +    /** The current frame to draw, or null if no frame has been loaded yet */, +    /** True if the drawable is currently animating */, +    private boolean isRunning;, +    /** True if the drawable should animate while visible */, +    private boolean isStarted;, +    /** True if the drawable's resources have been recycled */, +    /** True if the drawable is currently visible. */, +    private boolean isVisible;, +        isStarted = true;, +        if (isVisible) {, +            startRunning();, +        }, +    }, +, +    @Override, +    public void stop() {, +        isStarted = false;, +        stopRunning();, +    }, +, +    private void startRunning() {, +    private void stopRunning() {, +        isRunning = false;, +    }, +, +        isVisible = visible;, +            stopRunning();, +        } else if (isStarted) {, +            startRunning();, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +    private final GifFrameManager frameManager;, +    private final GifState state;, +    private final GifDecoder decoder;, +, +    /** The current frame to draw, or null if no frame has been loaded yet */, +    /** True if the drawable is currently animating */, +    private boolean isRunning;, +    /** True if the drawable should animate while visible */, +    private boolean isStarted;, +    /** True if the drawable's resources have been recycled */, +    /** True if the drawable is currently visible. */, +    private boolean isVisible;, +        isStarted = true;, +        if (isVisible) {, +            startRunning();, +        }, +    }, +, +    @Override, +    public void stop() {, +        isStarted = false;, +        stopRunning();, +    }, +, +    private void startRunning() {, +    private void stopRunning() {, +        isRunning = false;, +    }, +, +        isVisible = visible;, +            stopRunning();, +        } else if (isStarted) {, +            startRunning();, +++ b/library/src/main/java/com/bumptech/glide/request/target/DrawableImageViewTarget.java, +        if (resource instanceof Animatable) {, +            ((Animatable) resource).start();, +        }, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifDrawable.java, +    private final GifFrameManager frameManager;, +    private final GifState state;, +    private final GifDecoder decoder;, +, +    /** The current frame to draw, or null if no frame has been loaded yet */, +    /** True if the drawable is currently animating */, +    private boolean isRunning;, +    /** True if the drawable should animate while visible */, +    private boolean isStarted;, +    /** True if the drawable's resources have been recycled */, +    /** True if the drawable is currently visible. */, +    private boolean isVisible;, +        isStarted = true;, +        if (isVisible) {, +            startRunning();, +        }, +    }, +, +    @Override, +    public void stop() {, +        isStarted = false;, +        stopRunning();, +    }, +, +    private void startRunning() {, +    private void stopRunning() {, +        isRunning = false;]