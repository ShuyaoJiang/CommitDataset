[+++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +import com.bumptech.glide.load.Key;, +import com.bumptech.glide.load.Option;, +import com.bumptech.glide.load.Options;, +import java.security.MessageDigest;, +, +  private static final String KEY_ENCODE_TRANSFORMATION =, +      "com.bumptech.glide.load.resource.gif.GifResourceEncoder.EncodeTransformation";, +   * A boolean option that, if set to <code>true</code>, causes the fully transformed, +  public static final Option<Boolean> ENCODE_TRANSFORMATION =, +      Option.disk(KEY_ENCODE_TRANSFORMATION, false, new Option.CacheKeyUpdater<Boolean>() {, +        @Override, +        public void update(Boolean value, MessageDigest messageDigest) {, +          if (value) {, +            messageDigest.update(KEY_ENCODE_TRANSFORMATION.getBytes(Key.CHARSET));, +          }, +        }, +      });, +  public EncodeStrategy getEncodeStrategy(Options options) {, +    return options.get(ENCODE_TRANSFORMATION) ? EncodeStrategy.TRANSFORMED : EncodeStrategy.SOURCE;, +  public boolean encode(Resource<GifDrawable> resource, OutputStream os, Options options) {, +    if (options.get(ENCODE_TRANSFORMATION)) {, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +import com.bumptech.glide.load.Key;, +import com.bumptech.glide.load.Option;, +import com.bumptech.glide.load.Options;, +import java.security.MessageDigest;, +, +  private static final String KEY_ENCODE_TRANSFORMATION =, +      "com.bumptech.glide.load.resource.gif.GifResourceEncoder.EncodeTransformation";, +   * A boolean option that, if set to <code>true</code>, causes the fully transformed, +  public static final Option<Boolean> ENCODE_TRANSFORMATION =, +      Option.disk(KEY_ENCODE_TRANSFORMATION, false, new Option.CacheKeyUpdater<Boolean>() {, +        @Override, +        public void update(Boolean value, MessageDigest messageDigest) {, +          if (value) {, +            messageDigest.update(KEY_ENCODE_TRANSFORMATION.getBytes(Key.CHARSET));, +          }, +        }, +      });, +  public EncodeStrategy getEncodeStrategy(Options options) {, +    return options.get(ENCODE_TRANSFORMATION) ? EncodeStrategy.TRANSFORMED : EncodeStrategy.SOURCE;, +  public boolean encode(Resource<GifDrawable> resource, OutputStream os, Options options) {, +    if (options.get(ENCODE_TRANSFORMATION)) {, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java, +import com.bumptech.glide.load.Options;, +      Options options) {, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +import com.bumptech.glide.load.Key;, +import com.bumptech.glide.load.Option;, +import com.bumptech.glide.load.Options;, +import java.security.MessageDigest;, +, +  private static final String KEY_ENCODE_TRANSFORMATION =, +      "com.bumptech.glide.load.resource.gif.GifResourceEncoder.EncodeTransformation";, +   * A boolean option that, if set to <code>true</code>, causes the fully transformed, +  public static final Option<Boolean> ENCODE_TRANSFORMATION =, +      Option.disk(KEY_ENCODE_TRANSFORMATION, false, new Option.CacheKeyUpdater<Boolean>() {, +        @Override, +        public void update(Boolean value, MessageDigest messageDigest) {, +          if (value) {, +            messageDigest.update(KEY_ENCODE_TRANSFORMATION.getBytes(Key.CHARSET));, +          }, +        }, +      });, +  public EncodeStrategy getEncodeStrategy(Options options) {, +    return options.get(ENCODE_TRANSFORMATION) ? EncodeStrategy.TRANSFORMED : EncodeStrategy.SOURCE;, +  public boolean encode(Resource<GifDrawable> resource, OutputStream os, Options options) {, +    if (options.get(ENCODE_TRANSFORMATION)) {, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java, +import com.bumptech.glide.load.Options;, +      Options options) {, +++ b/integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyUrlLoader.java, +import com.bumptech.glide.load.Options;, +      Options options) {, +++ b/integration/gifencoder/src/main/java/com/bumptech/glide/integration/gifencoder/ReEncodingGifResourceEncoder.java, +import com.bumptech.glide.load.Key;, +import com.bumptech.glide.load.Option;, +import com.bumptech.glide.load.Options;, +import java.security.MessageDigest;, +, +  private static final String KEY_ENCODE_TRANSFORMATION =, +      "com.bumptech.glide.load.resource.gif.GifResourceEncoder.EncodeTransformation";, +   * A boolean option that, if set to <code>true</code>, causes the fully transformed, +  public static final Option<Boolean> ENCODE_TRANSFORMATION =, +      Option.disk(KEY_ENCODE_TRANSFORMATION, false, new Option.CacheKeyUpdater<Boolean>() {, +        @Override, +        public void update(Boolean value, MessageDigest messageDigest) {, +          if (value) {, +            messageDigest.update(KEY_ENCODE_TRANSFORMATION.getBytes(Key.CHARSET));, +          }, +        }, +      });, +  public EncodeStrategy getEncodeStrategy(Options options) {, +    return options.get(ENCODE_TRANSFORMATION) ? EncodeStrategy.TRANSFORMED : EncodeStrategy.SOURCE;, +  public boolean encode(Resource<GifDrawable> resource, OutputStream os, Options options) {, +    if (options.get(ENCODE_TRANSFORMATION)) {, +++ b/integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpUrlLoader.java, +import com.bumptech.glide.load.Options;, +      Options options) {]