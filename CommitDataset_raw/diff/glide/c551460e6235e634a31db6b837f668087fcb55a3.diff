[+++ b/library/src/main/java/com/bumptech/glide/Glide.java, +        new Downsampler(resources.getDisplayMetrics(), bitmapPool, arrayPool);, +        .register(InputStream.class, new StreamEncoder(arrayPool)), +            new StreamBitmapDecoder(downsampler, arrayPool)), +                new StreamBitmapDecoder(downsampler, arrayPool))), +            new StreamGifDecoder(byteBufferGifDecoder, arrayPool)), +        .register(new InputStreamRewinder.Factory(arrayPool)), +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +        new Downsampler(resources.getDisplayMetrics(), bitmapPool, arrayPool);, +        .register(InputStream.class, new StreamEncoder(arrayPool)), +            new StreamBitmapDecoder(downsampler, arrayPool)), +                new StreamBitmapDecoder(downsampler, arrayPool))), +            new StreamGifDecoder(byteBufferGifDecoder, arrayPool)), +        .register(new InputStreamRewinder.Factory(arrayPool)), +++ b/library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  InputStreamRewinder(InputStream is, ArrayPool byteArrayPool) {, +    private final ArrayPool byteArrayPool;, +    public Factory(ArrayPool byteArrayPool) {, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +        new Downsampler(resources.getDisplayMetrics(), bitmapPool, arrayPool);, +        .register(InputStream.class, new StreamEncoder(arrayPool)), +            new StreamBitmapDecoder(downsampler, arrayPool)), +                new StreamBitmapDecoder(downsampler, arrayPool))), +            new StreamGifDecoder(byteBufferGifDecoder, arrayPool)), +        .register(new InputStreamRewinder.Factory(arrayPool)), +++ b/library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  InputStreamRewinder(InputStream is, ArrayPool byteArrayPool) {, +    private final ArrayPool byteArrayPool;, +    public Factory(ArrayPool byteArrayPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +    ArrayPool byteArrayPool = Glide.get(context).getArrayPool();, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +        new Downsampler(resources.getDisplayMetrics(), bitmapPool, arrayPool);, +        .register(InputStream.class, new StreamEncoder(arrayPool)), +            new StreamBitmapDecoder(downsampler, arrayPool)), +                new StreamBitmapDecoder(downsampler, arrayPool))), +            new StreamGifDecoder(byteBufferGifDecoder, arrayPool)), +        .register(new InputStreamRewinder.Factory(arrayPool)), +++ b/library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  InputStreamRewinder(InputStream is, ArrayPool byteArrayPool) {, +    private final ArrayPool byteArrayPool;, +    public Factory(ArrayPool byteArrayPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +    ArrayPool byteArrayPool = Glide.get(context).getArrayPool();, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpener.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  private final ArrayPool byteArrayPool;, +  public ThumbnailStreamOpener(ThumbnailQuery query, ArrayPool byteArrayPool) {, +      ArrayPool byteArrayPool) {, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +        new Downsampler(resources.getDisplayMetrics(), bitmapPool, arrayPool);, +        .register(InputStream.class, new StreamEncoder(arrayPool)), +            new StreamBitmapDecoder(downsampler, arrayPool)), +                new StreamBitmapDecoder(downsampler, arrayPool))), +            new StreamGifDecoder(byteBufferGifDecoder, arrayPool)), +        .register(new InputStreamRewinder.Factory(arrayPool)), +++ b/library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  InputStreamRewinder(InputStream is, ArrayPool byteArrayPool) {, +    private final ArrayPool byteArrayPool;, +    public Factory(ArrayPool byteArrayPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +    ArrayPool byteArrayPool = Glide.get(context).getArrayPool();, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpener.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  private final ArrayPool byteArrayPool;, +  public ThumbnailStreamOpener(ThumbnailQuery query, ArrayPool byteArrayPool) {, +      ArrayPool byteArrayPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool.java, +   * A standard size to use to increase hit rates when the required size isn't defined., +   * Currently 64KB., +   */, +  int STANDARD_BUFFER_SIZE_BYTES = 64 * 1024;, +, +  /**, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +        new Downsampler(resources.getDisplayMetrics(), bitmapPool, arrayPool);, +        .register(InputStream.class, new StreamEncoder(arrayPool)), +            new StreamBitmapDecoder(downsampler, arrayPool)), +                new StreamBitmapDecoder(downsampler, arrayPool))), +            new StreamGifDecoder(byteBufferGifDecoder, arrayPool)), +        .register(new InputStreamRewinder.Factory(arrayPool)), +++ b/library/src/main/java/com/bumptech/glide/load/data/InputStreamRewinder.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  InputStreamRewinder(InputStream is, ArrayPool byteArrayPool) {, +    private final ArrayPool byteArrayPool;, +    public Factory(ArrayPool byteArrayPool) {, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbFetcher.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +    ArrayPool byteArrayPool = Glide.get(context).getArrayPool();, +++ b/library/src/main/java/com/bumptech/glide/load/data/mediastore/ThumbnailStreamOpener.java, +import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;, +  private final ArrayPool byteArrayPool;, +  public ThumbnailStreamOpener(ThumbnailQuery query, ArrayPool byteArrayPool) {]