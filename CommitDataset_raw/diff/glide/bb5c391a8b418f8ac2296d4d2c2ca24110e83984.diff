[+++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;, +      if (size > 0) {, +      } else {, +        bitmapPool = new BitmapPoolAdapter();, +      }, +++ b/library/src/main/java/com/bumptech/glide/GlideBuilder.java, +import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;, +      if (size > 0) {, +      } else {, +        bitmapPool = new BitmapPoolAdapter();, +      }, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculator.java, +, +    int targetBitmapPoolSize = Math.round(screenSize * builder.bitmapPoolScreens);, +, +    if (targetMemoryCacheSize + targetBitmapPoolSize <= availableSize) {, +      bitmapPoolSize = targetBitmapPoolSize;, +              + (targetMemoryCacheSize + targetBitmapPoolSize > maxSize), +, +    /**, +     * On Android O+, we use {@link android.graphics.Bitmap.Config#HARDWARE} for all reasonably, +     * sized images unless we're creating thumbnails for the first time. As a result, the Bitmap, +     * pool is much less important on O than it was on previous versions., +     */, +    static final int BITMAP_POOL_TARGET_SCREENS =, +        Build.VERSION.SDK_INT > Build.VERSION_CODES.O ? 4 : 1;, +, +, +      // On Android O+ Bitmaps are allocated natively, ART is much more efficient at managing, +      // garbage and we rely heavily on HARDWARE Bitmaps, making Bitmap re-use much less important., +      // We prefer to preserve RAM on these devices and take the small performance hit of not, +      // re-using Bitmaps and textures when loading very small images or generating thumbnails., +      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && isLowMemoryDevice(activityManager)) {, +        bitmapPoolScreens = 0;, +      }]