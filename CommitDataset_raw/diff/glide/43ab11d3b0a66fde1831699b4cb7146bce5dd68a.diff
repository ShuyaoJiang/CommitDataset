[+++ b/build.gradle, +, +    gradle.projectsEvaluated {, +        tasks.withType(JavaCompile) {, +            if (!name.contains('Test')) {, +                options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation', +            }, +        }, +    }, +++ b/build.gradle, +, +    gradle.projectsEvaluated {, +        tasks.withType(JavaCompile) {, +            if (!name.contains('Test')) {, +                options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation', +            }, +        }, +    }, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private GenericRequestBuilder<ModelType, DataType, ResourceType, TranscodeType> thumbnailRequestBuilder;, +++ b/build.gradle, +, +    gradle.projectsEvaluated {, +        tasks.withType(JavaCompile) {, +            if (!name.contains('Test')) {, +                options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation', +            }, +        }, +    }, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private GenericRequestBuilder<ModelType, DataType, ResourceType, TranscodeType> thumbnailRequestBuilder;, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +    @SuppressWarnings("unchecked"), +    private static <Z, R> ResourceTranscoder<Z, R> getUnitTranscoder() {, +        return (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +    }, +, +            transcoder = getUnitTranscoder();, +++ b/build.gradle, +, +    gradle.projectsEvaluated {, +        tasks.withType(JavaCompile) {, +            if (!name.contains('Test')) {, +                options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation', +            }, +        }, +    }, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private GenericRequestBuilder<ModelType, DataType, ResourceType, TranscodeType> thumbnailRequestBuilder;, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +    @SuppressWarnings("unchecked"), +    private static <Z, R> ResourceTranscoder<Z, R> getUnitTranscoder() {, +        return (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +    }, +, +            transcoder = getUnitTranscoder();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/LruResourceCache.java, +++ b/build.gradle, +, +    gradle.projectsEvaluated {, +        tasks.withType(JavaCompile) {, +            if (!name.contains('Test')) {, +                options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation', +            }, +        }, +    }, +++ b/library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java, +    private GenericRequestBuilder<ModelType, DataType, ResourceType, TranscodeType> thumbnailRequestBuilder;, +++ b/library/src/main/java/com/bumptech/glide/GenericTranscodeRequest.java, +    @SuppressWarnings("unchecked"), +    private static <Z, R> ResourceTranscoder<Z, R> getUnitTranscoder() {, +        return (ResourceTranscoder<Z, R>) UnitTranscoder.get();, +    }, +, +            transcoder = getUnitTranscoder();, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/LruResourceCache.java, +++ b/library/src/main/java/com/bumptech/glide/request/GenericRequest.java]