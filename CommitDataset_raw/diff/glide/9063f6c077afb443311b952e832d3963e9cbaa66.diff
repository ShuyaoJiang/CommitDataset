[+++ b/library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java, +import static org.mockito.Matchers.eq;, +import android.content.ComponentCallbacks;, +    @Test, +    public void testCallsRequestManagerOnLowMemory() {, +        runTest(new TestCase() {, +            @Override, +            public void runTest(Harness harness) {, +                RequestManager requestManager = mock(RequestManager.class);, +                harness.setRequestManager(requestManager);, +                harness.getCallbacks().onLowMemory();, +                verify(requestManager).onLowMemory();, +            }, +        });, +    }, +, +    @Test, +    public void testNonSupportFragmentCallsRequestManagerOnTrimMemory() {, +        RequestManagerHarness requestManagerHarness = new RequestManagerHarness();, +        RequestManager requestManager = mock(RequestManager.class);, +        requestManagerHarness.setRequestManager(requestManager);, +        int level = 123;, +        requestManagerHarness.fragment.onTrimMemory(level);, +, +        verify(requestManager).onTrimMemory(eq(level));, +    }, +, +, +        public ComponentCallbacks getCallbacks();, +, +        @Override, +        public ComponentCallbacks getCallbacks() {, +            return fragment;, +        }, +, +        @Override, +        public ComponentCallbacks getCallbacks() {, +            return supportFragment;, +        }, +++ b/library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java, +import static org.mockito.Matchers.eq;, +import android.content.ComponentCallbacks;, +    @Test, +    public void testCallsRequestManagerOnLowMemory() {, +        runTest(new TestCase() {, +            @Override, +            public void runTest(Harness harness) {, +                RequestManager requestManager = mock(RequestManager.class);, +                harness.setRequestManager(requestManager);, +                harness.getCallbacks().onLowMemory();, +                verify(requestManager).onLowMemory();, +            }, +        });, +    }, +, +    @Test, +    public void testNonSupportFragmentCallsRequestManagerOnTrimMemory() {, +        RequestManagerHarness requestManagerHarness = new RequestManagerHarness();, +        RequestManager requestManager = mock(RequestManager.class);, +        requestManagerHarness.setRequestManager(requestManager);, +        int level = 123;, +        requestManagerHarness.fragment.onTrimMemory(level);, +, +        verify(requestManager).onTrimMemory(eq(level));, +    }, +, +, +        public ComponentCallbacks getCallbacks();, +, +        @Override, +        public ComponentCallbacks getCallbacks() {, +            return fragment;, +        }, +, +        @Override, +        public ComponentCallbacks getCallbacks() {, +            return supportFragment;, +        }, +++ b/library/src/main/java/com/bumptech/glide/Glide.java, +     * @see android.content.ComponentCallbacks#onLowMemory(), +++ b/library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java, +import static org.mockito.Matchers.eq;, +import android.content.ComponentCallbacks;, +    @Test, +    public void testCallsRequestManagerOnLowMemory() {, +        runTest(new TestCase() {, +            @Override, +            public void runTest(Harness harness) {, +                RequestManager requestManager = mock(RequestManager.class);, +                harness.setRequestManager(requestManager);, +                harness.getCallbacks().onLowMemory();, +                verify(requestManager).onLowMemory();, +            }, +        });, +    }, +, +    @Test, +    public void testNonSupportFragmentCallsRequestManagerOnTrimMemory() {, +        RequestManagerHarness requestManagerHarness = new RequestManagerHarness();, +        RequestManager requestManager = mock(RequestManager.class);]