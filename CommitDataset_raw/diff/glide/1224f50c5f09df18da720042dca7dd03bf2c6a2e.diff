[+++ b/library/src/com/bumptech/glide/load/data/bitmap/RecyclableBufferedInputStream.java, +        //Added count == localBuf.length so that we do not immediately double the buffer size before reading any data, +        // when marklimit > localBuf.length. Instead, we will double the buffer size only after reading the initial, +        // localBuf worth of data without finding what we're looking for in the stream. This allows us to set a, +        // relatively small initial buffer size and a large marklimit for safety without causing an allocation each time, +        // read is called., +        if (markpos == 0 && marklimit > localBuf.length && count == localBuf.length) {, +++ b/library/src/com/bumptech/glide/load/data/bitmap/RecyclableBufferedInputStream.java, +        //Added count == localBuf.length so that we do not immediately double the buffer size before reading any data, +        // when marklimit > localBuf.length. Instead, we will double the buffer size only after reading the initial, +        // localBuf worth of data without finding what we're looking for in the stream. This allows us to set a, +        // relatively small initial buffer size and a large marklimit for safety without causing an allocation each time, +        // read is called., +        if (markpos == 0 && marklimit > localBuf.length && count == localBuf.length) {, +++ b/library/src/com/bumptech/glide/util/ByteArrayPool.java, +    // 64 KB., +    private static final int TEMP_BYTES_SIZE = 64 * 1024;]