[+++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker.java, +  private final Map<String, WriteLock> locks = new HashMap<>();, +  void acquire(String safeKey) {, +      writeLock = locks.get(safeKey);, +        locks.put(safeKey, writeLock);, +  void release(String safeKey) {, +      writeLock = Preconditions.checkNotNull(locks.get(safeKey));, +            + ", safeKey: " + safeKey, +        WriteLock removed = locks.remove(safeKey);, +              + ", safeKey: " + safeKey);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker.java, +  private final Map<String, WriteLock> locks = new HashMap<>();, +  void acquire(String safeKey) {, +      writeLock = locks.get(safeKey);, +        locks.put(safeKey, writeLock);, +  void release(String safeKey) {, +      writeLock = Preconditions.checkNotNull(locks.get(safeKey));, +            + ", safeKey: " + safeKey, +        WriteLock removed = locks.remove(safeKey);, +              + ", safeKey: " + safeKey);, +++ b/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java, +    writeLocker.acquire(safeKey);, +    try {, +      writeLocker.release(safeKey);]