[+++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +            public List<Object> getPreloadItems(int start, int end) {, +                assertEquals(11, start);, +                assertEquals(21, end);, +                return super.getPreloadItems(start, end);, +        assertTrue(called.get());, +            public int expectedPosition;, +, +            public int[] getPreloadSize(Object item) {, +            public List<Object> getPreloadItems(int start, int end) {, +                return objects;, +            public BitmapRequestBuilder getPreloadRequestBuilder(Object item) {, +                assertEquals(objects.get(expectedPosition), item);, +                expectedPosition++;, +        preloader.onScroll(null, 1, 10, 30);, +            public List<Object> getPreloadItems(int start, int end) {, +                if (start == 40) {, +                assertEquals(19, start);, +                assertEquals(29, end);, +                return super.getPreloadItems(start, end);, +            public int[] getPreloadSize(Object item) {, +            public List<Object> getPreloadItems(int start, int end) {, +                if (start == 40) {, +                    return Collections.emptyList();, +                return objects;, +            public BitmapRequestBuilder getPreloadRequestBuilder(Object item) {, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, toPreload);, +        preloader.onScroll(null, 30, 10, 40);, +        preloader.onScroll(null, 29, 10, 40);, +            public List<Object> getPreloadItems(int start, int end) {, +                assertEquals(26, start);, +                assertEquals(30, end);, +                return super.getPreloadItems(start, end);, +            public List<Object> getPreloadItems(int start, int end) {, +                if (start == 17) {, +                assertEquals(0, start);, +                assertEquals(6, end);, +                return super.getPreloadItems(start, end);, +            public List<Object> getPreloadItems(int start, int end) {, +                if (current == 0) {, +                    assertEquals(11, start);, +                    assertEquals(21, end);, +                } else if (current == 1) {, +                    assertEquals(21, start);, +                    assertEquals(24, end);, +                }, +                return super.getPreloadItems(start, end);, +        assertEquals(2, called.get());, +            public List<Object> getPreloadItems(int start, int end) {, +                if (start == 30) {, +                if (current == 0) {, +                    assertEquals(10, start);, +                    assertEquals(20, end);, +                } else if (current == 1) {, +                    assertEquals(7, start);, +                    assertEquals(10, end);, +                }, +                return super.getPreloadItems(start, end);, +        assertEquals(2, called.get());, +            public List<Object> getPreloadItems(int start, int end) {, +                return objects;, +            public GenericRequestBuilder getPreloadRequestBuilder(Object item) {, +                return super.getPreloadRequestBuilder(item);, +        preloader.onScroll(null, 1, 10, 30);, +        public List<Object> getPreloadItems(int start, int end) {, +            ArrayList<Object> result = new ArrayList<Object>(end - start);, +            Collections.fill(result, new Object());, +            return result;, +        public GenericRequestBuilder getPreloadRequestBuilder(Object item) {, +        public int[] getPreloadSize(Object item) {, +++ b/library/src/androidTest/java/com/bumptech/glide/ListPreloaderTest.java, +            public List<Object> getPreloadItems(int start, int end) {, +                assertEquals(11, start);, +                assertEquals(21, end);, +                return super.getPreloadItems(start, end);, +        assertTrue(called.get());, +            public int expectedPosition;, +, +            public int[] getPreloadSize(Object item) {, +            public List<Object> getPreloadItems(int start, int end) {, +                return objects;, +            public BitmapRequestBuilder getPreloadRequestBuilder(Object item) {, +                assertEquals(objects.get(expectedPosition), item);, +                expectedPosition++;, +        preloader.onScroll(null, 1, 10, 30);, +            public List<Object> getPreloadItems(int start, int end) {, +                if (start == 40) {, +                assertEquals(19, start);, +                assertEquals(29, end);, +                return super.getPreloadItems(start, end);, +            public int[] getPreloadSize(Object item) {, +            public List<Object> getPreloadItems(int start, int end) {, +                if (start == 40) {, +                    return Collections.emptyList();, +                return objects;, +            public BitmapRequestBuilder getPreloadRequestBuilder(Object item) {, +        ListPreloader<Object> preloader = new ListPreloader<Object>(preloaderAdapter, preloaderAdapter, toPreload);, +        preloader.onScroll(null, 30, 10, 40);, +        preloader.onScroll(null, 29, 10, 40);, +            public List<Object> getPreloadItems(int start, int end) {]