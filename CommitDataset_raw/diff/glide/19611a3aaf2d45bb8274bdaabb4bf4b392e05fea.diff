[+++ b/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java, +     *     The {@code source} is managed by the caller, there's no need to close it., +     *     The returned {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit., +     * </p>, +     * <p>, +     *     Note - The {@code width} and {@code height} arguments are hints only,, +     *     there is no requirement that the decoded resource exactly match the given dimensions., +     *     A typical use case would be to use the target dimensions to determine, +++ b/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java, +     *     The {@code source} is managed by the caller, there's no need to close it., +     *     The returned {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit., +     * </p>, +     * <p>, +     *     Note - The {@code width} and {@code height} arguments are hints only,, +     *     there is no requirement that the decoded resource exactly match the given dimensions., +     *     A typical use case would be to use the target dimensions to determine, +++ b/library/src/main/java/com/bumptech/glide/load/data/ByteArrayFetcher.java, +        // Do nothing. It's safe to leave a ByteArrayInputStream open., +++ b/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java, +     *     The {@code source} is managed by the caller, there's no need to close it., +     *     The returned {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit., +     * </p>, +     * <p>, +     *     Note - The {@code width} and {@code height} arguments are hints only,, +     *     there is no requirement that the decoded resource exactly match the given dimensions., +     *     A typical use case would be to use the target dimensions to determine, +++ b/library/src/main/java/com/bumptech/glide/load/data/ByteArrayFetcher.java, +        // Do nothing. It's safe to leave a ByteArrayInputStream open., +++ b/library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java, +     * @see #cleanup() where the data retuned will be cleaned up, +++ b/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java, +     *     The {@code source} is managed by the caller, there's no need to close it., +     *     The returned {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit., +     * </p>, +     * <p>, +     *     Note - The {@code width} and {@code height} arguments are hints only,, +     *     there is no requirement that the decoded resource exactly match the given dimensions., +     *     A typical use case would be to use the target dimensions to determine, +++ b/library/src/main/java/com/bumptech/glide/load/data/ByteArrayFetcher.java, +        // Do nothing. It's safe to leave a ByteArrayInputStream open., +++ b/library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java, +     * @see #cleanup() where the data retuned will be cleaned up, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        @SuppressWarnings("resource"), +        // @see ModelLoader.loadData, +++ b/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java, +     *     The {@code source} is managed by the caller, there's no need to close it., +     *     The returned {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit., +     * </p>, +     * <p>, +     *     Note - The {@code width} and {@code height} arguments are hints only,, +     *     there is no requirement that the decoded resource exactly match the given dimensions., +     *     A typical use case would be to use the target dimensions to determine, +++ b/library/src/main/java/com/bumptech/glide/load/data/ByteArrayFetcher.java, +        // Do nothing. It's safe to leave a ByteArrayInputStream open., +++ b/library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java, +     * @see #cleanup() where the data retuned will be cleaned up, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        @SuppressWarnings("resource"), +        // @see ModelLoader.loadData, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDecoder.java, +     * @param resource The resource to decode, managed by the caller, no need to clean it up., +++ b/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java, +     *     The {@code source} is managed by the caller, there's no need to close it., +     *     The returned {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit., +     * </p>, +     * <p>, +     *     Note - The {@code width} and {@code height} arguments are hints only,, +     *     there is no requirement that the decoded resource exactly match the given dimensions., +     *     A typical use case would be to use the target dimensions to determine, +++ b/library/src/main/java/com/bumptech/glide/load/data/ByteArrayFetcher.java, +        // Do nothing. It's safe to leave a ByteArrayInputStream open., +++ b/library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java, +     * @see #cleanup() where the data retuned will be cleaned up, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        @SuppressWarnings("resource"), +        // @see ModelLoader.loadData, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDecoder.java, +     * @param resource The resource to decode, managed by the caller, no need to clean it up., +++ b/library/src/main/java/com/bumptech/glide/load/resource/file/FileToStreamDecoder.java, +++ b/library/src/main/java/com/bumptech/glide/load/ResourceDecoder.java, +     *     The {@code source} is managed by the caller, there's no need to close it., +     *     The returned {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit., +     * </p>, +     * <p>, +     *     Note - The {@code width} and {@code height} arguments are hints only,, +     *     there is no requirement that the decoded resource exactly match the given dimensions., +     *     A typical use case would be to use the target dimensions to determine, +++ b/library/src/main/java/com/bumptech/glide/load/data/ByteArrayFetcher.java, +        // Do nothing. It's safe to leave a ByteArrayInputStream open., +++ b/library/src/main/java/com/bumptech/glide/load/data/DataFetcher.java, +     * @see #cleanup() where the data retuned will be cleaned up, +++ b/library/src/main/java/com/bumptech/glide/load/model/ImageVideoModelLoader.java, +, +        @SuppressWarnings("resource"), +        // @see ModelLoader.loadData, +++ b/library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapDecoder.java]