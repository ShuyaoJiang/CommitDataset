[+++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapperTest.java, +import com.bumptech.glide.tests.Util;, +import static org.junit.Assert.fail;, +        key = new StringKey("test" + Math.random());, +    public void testCanInsertAndGet() throws IOException {, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +        byte[] received = Util.readFile(cache.get(key), data.length);, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +    public void testEditIsAbortedIfWriterThrows() throws IOException {, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +        byte[] received = Util.readFile(cache.get(key), data.length);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapperTest.java, +import com.bumptech.glide.tests.Util;, +import static org.junit.Assert.fail;, +        key = new StringKey("test" + Math.random());, +    public void testCanInsertAndGet() throws IOException {, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +        byte[] received = Util.readFile(cache.get(key), data.length);, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +    public void testEditIsAbortedIfWriterThrows() throws IOException {, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +        byte[] received = Util.readFile(cache.get(key), data.length);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerTest.java, +        try {, +        } finally {, +            try {, +                is.close();, +            } catch (IOException e) {, +                // Do nothing., +            }, +        }, +        try {, +        } finally {, +            try {, +                is.close();, +            } catch (IOException e) {, +                // Do nothing., +            }, +        }, +    private void compressBitmap(Bitmap bitmap, Bitmap.CompressFormat compressFormat) throws FileNotFoundException {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapperTest.java, +import com.bumptech.glide.tests.Util;, +import static org.junit.Assert.fail;, +        key = new StringKey("test" + Math.random());, +    public void testCanInsertAndGet() throws IOException {, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +        byte[] received = Util.readFile(cache.get(key), data.length);, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +    public void testEditIsAbortedIfWriterThrows() throws IOException {, +                    Util.writeFile(file, data);, +                    fail(e.toString());, +        byte[] received = Util.readFile(cache.get(key), data.length);, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerTest.java, +        try {, +        } finally {, +            try {, +                is.close();, +            } catch (IOException e) {, +                // Do nothing., +            }, +        }, +        try {, +        } finally {, +            try {, +                is.close();, +            } catch (IOException e) {, +                // Do nothing., +            }, +        }, +    private void compressBitmap(Bitmap bitmap, Bitmap.CompressFormat compressFormat) throws FileNotFoundException {, +++ b/library/src/androidTest/java/com/bumptech/glide/tests/Util.java, +import java.io.File;, +import java.io.FileInputStream;, +import java.io.FileOutputStream;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.OutputStream;, +, +    public static void writeFile(File file, byte[] data) throws IOException {, +        OutputStream out = new FileOutputStream(file);, +        try {, +            out.write(data);, +            out.flush();, +            out.close();, +        } finally {, +            try {, +                out.close();, +            } catch (IOException ex) {, +                // Do nothing., +            }, +        }, +    }]