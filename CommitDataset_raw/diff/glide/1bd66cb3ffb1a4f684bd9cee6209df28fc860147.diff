[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java, +        bitmapPool = mock(BitmapPool.class);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_4444));, +        final Bitmap toTransform = Bitmap.createBitmap(1, 2, Bitmap.Config.RGB_565);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(toTransform);, +, +        final Bitmap expected = Bitmap.createBitmap(223, 4123, Bitmap.Config.RGB_565);, +                assertEquals(expected, toTransform);, +                return expected;, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(expected);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.RGB_565));, +        assertNull(transform.transform(resource, 100, 100));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java, +        bitmapPool = mock(BitmapPool.class);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_4444));, +        final Bitmap toTransform = Bitmap.createBitmap(1, 2, Bitmap.Config.RGB_565);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(toTransform);, +, +        final Bitmap expected = Bitmap.createBitmap(223, 4123, Bitmap.Config.RGB_565);, +                assertEquals(expected, toTransform);, +                return expected;, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(expected);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.RGB_565));, +        assertNull(transform.transform(resource, 100, 100));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java, +    public void testSetsOutBitmapToNotHaveAlphaIfInBitmapDoesNotHaveAlpha() {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java, +        bitmapPool = mock(BitmapPool.class);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_4444));, +        final Bitmap toTransform = Bitmap.createBitmap(1, 2, Bitmap.Config.RGB_565);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(toTransform);, +, +        final Bitmap expected = Bitmap.createBitmap(223, 4123, Bitmap.Config.RGB_565);, +                assertEquals(expected, toTransform);, +                return expected;, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(expected);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.RGB_565));, +        assertNull(transform.transform(resource, 100, 100));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java, +    public void testSetsOutBitmapToNotHaveAlphaIfInBitmapDoesNotHaveAlpha() {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/drawable/DrawableResourceTest.java, +import static org.junit.Assert.assertNotEquals;, +    public void testDoesNotReturnOriginalDrawableOnGet() {, +        when(drawable.getConstantState()).thenReturn(mock(Drawable.ConstantState.class));, +        assertNotEquals(drawable, resource.get());, +    public void testReturnsNewDrawableOnGet() {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java, +        bitmapPool = mock(BitmapPool.class);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_4444));, +        final Bitmap toTransform = Bitmap.createBitmap(1, 2, Bitmap.Config.RGB_565);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(toTransform);, +, +        final Bitmap expected = Bitmap.createBitmap(223, 4123, Bitmap.Config.RGB_565);, +                assertEquals(expected, toTransform);, +                return expected;, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(expected);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.RGB_565));, +        assertNull(transform.transform(resource, 100, 100));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java, +    public void testSetsOutBitmapToNotHaveAlphaIfInBitmapDoesNotHaveAlpha() {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/drawable/DrawableResourceTest.java, +import static org.junit.Assert.assertNotEquals;, +    public void testDoesNotReturnOriginalDrawableOnGet() {, +        when(drawable.getConstantState()).thenReturn(mock(Drawable.ConstantState.class));, +        assertNotEquals(drawable, resource.get());, +    public void testReturnsNewDrawableOnGet() {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifDrawableResourceTest.java, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java, +        bitmapPool = mock(BitmapPool.class);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_4444));, +        final Bitmap toTransform = Bitmap.createBitmap(1, 2, Bitmap.Config.RGB_565);, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(toTransform);, +, +        final Bitmap expected = Bitmap.createBitmap(223, 4123, Bitmap.Config.RGB_565);, +                assertEquals(expected, toTransform);, +                return expected;, +        Resource<Bitmap> resource = mock(Resource.class);, +        when(resource.get()).thenReturn(expected);, +        when(resource.get()).thenReturn(Bitmap.createBitmap(100, 100, Bitmap.Config.RGB_565));, +        assertNull(transform.transform(resource, 100, 100));, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/TransformationUtilsTest.java, +    public void testSetsOutBitmapToNotHaveAlphaIfInBitmapDoesNotHaveAlpha() {, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/drawable/DrawableResourceTest.java, +import static org.junit.Assert.assertNotEquals;, +    public void testDoesNotReturnOriginalDrawableOnGet() {, +        when(drawable.getConstantState()).thenReturn(mock(Drawable.ConstantState.class));]