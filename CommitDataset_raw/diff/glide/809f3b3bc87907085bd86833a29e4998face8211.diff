[+++ b/library/src/com/bumptech/glide/resize/ImageManager.java, +                ImageManagerRunner runner = new ImageManagerRunner(key, task, task.getId());, +                job = new ImageManagerJob(runner, key, task.getId());, +            result = new LoadToken(cb, job, task.getId());, +        private final String tag;, +        public ImageManagerJob(ImageManagerRunner runner, String key, String tag) {, +            this.tag = tag;, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "add callback for tag: " + tag + " total: " + cbs.size(), +                        + " ImageManagerJob: " + hashCode());, +            }, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "Cancel callback from ImageManagerJob for tag: " + tag + " total cbs: " + cbs.size(), +                        + " ImageManagerJob: " + hashCode());, +            }, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "Load complete in ImageManagerJob for tag: " + tag + " total cbs: " + cbs.size(), +                        + " ImageManagerJob: " + hashCode());, +            }, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "Load failed in ImageManagerJob for tag: " + tag + " total cbs: " + cbs.size(), +                        + " ImageManagerJob: " + hashCode());, +            }, +        private final String tag;, +        public ImageManagerRunner(String key, BitmapLoad task, String tag) {, +            this.tag = tag;, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "Cancel job id: " + tag);, +            }, +, +                Log.d(TAG, "Exception loading image tag: " + tag, e);, +        private final String tag;, +        public LoadToken(LoadedCallback cb, ImageManagerJob job, String tag) {, +            this.tag = tag;, +            if (Log.isLoggable(TAG, Log.VERBOSE)) {, +                Log.v(TAG, "Cancel load token tag: " + tag + " cb: " + cb.hashCode());, +            }]