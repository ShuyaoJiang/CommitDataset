[+++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java, +import static org.junit.Assert.assertNull;, +, +    @Test, +    public void testReturnsNullIfGifDecoderReturnsNullFrame() {, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        assertNull(resourceDecoder.decode(gifDecoder, 100, 100));, +    }, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java, +import static org.junit.Assert.assertNull;, +, +    @Test, +    public void testReturnsNullIfGifDecoderReturnsNullFrame() {, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        assertNull(resourceDecoder.decode(gifDecoder, 100, 100));, +    }, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifResourceDecoderTest.java, +    public void testReturnsNullIfGifDecoderFailsToDecodeFirstFrame() {, +        when(gifHeader.getNumFrames()).thenReturn(1);, +        when(gifHeader.getStatus()).thenReturn(GifDecoder.STATUS_OK);, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        assertNull(decoder.decode(new ByteArrayInputStream(new byte[0]), 100, 100));, +    }, +, +    @Test, +    public void testReturnsGifDecoderToPoolWhenGifDecoderReturnsNullFirstFrame() {, +        when(gifHeader.getNumFrames()).thenReturn(1);, +        when(gifHeader.getStatus()).thenReturn(GifDecoder.STATUS_OK);, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        decoder.decode(new ByteArrayInputStream(new byte[0]), 100, 100);, +, +        verify(decoderPool).release(eq(gifDecoder));, +    }, +, +    @Test, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java, +import static org.junit.Assert.assertNull;, +, +    @Test, +    public void testReturnsNullIfGifDecoderReturnsNullFrame() {, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        assertNull(resourceDecoder.decode(gifDecoder, 100, 100));, +    }, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifResourceDecoderTest.java, +    public void testReturnsNullIfGifDecoderFailsToDecodeFirstFrame() {, +        when(gifHeader.getNumFrames()).thenReturn(1);, +        when(gifHeader.getStatus()).thenReturn(GifDecoder.STATUS_OK);, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        assertNull(decoder.decode(new ByteArrayInputStream(new byte[0]), 100, 100));, +    }, +, +    @Test, +    public void testReturnsGifDecoderToPoolWhenGifDecoderReturnsNullFirstFrame() {, +        when(gifHeader.getNumFrames()).thenReturn(1);, +        when(gifHeader.getStatus()).thenReturn(GifDecoder.STATUS_OK);, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        decoder.decode(new ByteArrayInputStream(new byte[0]), 100, 100);, +, +        verify(decoderPool).release(eq(gifDecoder));, +    }, +, +    @Test, +++ b/library/src/main/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoder.java, +        if (bitmap == null) {, +            return null;, +        } else {, +    }, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifFrameResourceDecoderTest.java, +import static org.junit.Assert.assertNull;, +, +    @Test, +    public void testReturnsNullIfGifDecoderReturnsNullFrame() {, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        assertNull(resourceDecoder.decode(gifDecoder, 100, 100));, +    }, +++ b/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/GifResourceDecoderTest.java, +    public void testReturnsNullIfGifDecoderFailsToDecodeFirstFrame() {, +        when(gifHeader.getNumFrames()).thenReturn(1);, +        when(gifHeader.getStatus()).thenReturn(GifDecoder.STATUS_OK);, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        assertNull(decoder.decode(new ByteArrayInputStream(new byte[0]), 100, 100));, +    }, +, +    @Test, +    public void testReturnsGifDecoderToPoolWhenGifDecoderReturnsNullFirstFrame() {, +        when(gifHeader.getNumFrames()).thenReturn(1);, +        when(gifHeader.getStatus()).thenReturn(GifDecoder.STATUS_OK);, +        when(gifDecoder.getNextFrame()).thenReturn(null);, +, +        decoder.decode(new ByteArrayInputStream(new byte[0]), 100, 100);, +]