[+++ b/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java, +    super.onLoadStarted(placeholder);, +    super.onLoadFailed(errorDrawable);, +    super.onLoadCleared(placeholder);, +++ b/library/src/main/java/com/bumptech/glide/request/target/ImageViewTarget.java, +    super.onLoadStarted(placeholder);, +    super.onLoadFailed(errorDrawable);, +    super.onLoadCleared(placeholder);, +++ b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java, +import android.graphics.drawable.Drawable;, + * <p> Subclasses must call super in {@link #onLoadCleared(Drawable)} </p>, + *, +  @Override, +  public void onLoadCleared(Drawable placeholder) {, +    super.onLoadCleared(placeholder);, +    sizeDeterminer.clearCallbacksAndListener();, +  }, +, +      clearCallbacksAndListener();, +    void getSize(SizeReadyCallback cb) {, +    void clearCallbacksAndListener() {, +      // Keep a reference to the layout listener and remove it here, +      // rather than having the observer remove itself because the observer, +      // we add the listener to will be almost immediately merged into, +      // another observer and will therefore never be alive. If we instead, +      // keep a reference to the listener and remove it here, we get the, +      // current view tree observer and should succeed., +      ViewTreeObserver observer = view.getViewTreeObserver();, +      if (observer.isAlive()) {, +        observer.removeOnPreDrawListener(layoutListener);, +      }, +      layoutListener = null;, +      cbs.clear();, +    }, +]