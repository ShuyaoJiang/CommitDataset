[+++ b/README.md, +    compile('com.github.bumptech.glide:glide:3.3.0a'), +  <artifactId>glide</artifactId>, +  <version>3.3.0</version>, +Volley, +-------, +Volley is now an optional dependency that can be included via a utility library. To use Volley to fetch media over http/https:, +, +With Gradle:, +, +```groovy, +dependencies {, +    compile 'com.github.bumptech.glide:volley-integration:3.3.0', +    compile 'com.mcxiaoke.volley:library:1.0.+', +}, +```, +, +Or with Maven:, +, +```xml, +<dependency>, +    <groupId>com.github.bumptech.glide</groupId>, +    <artifactId>volley-integration</artifactId>, +    <version>3.3.0</version>, +    <type>jar</type>, +</dependency>, +<dependency>, +    <groupId>com.mcxiaoke.volley</groupId>, +    <artifactId>library</artifactId>, +    <version>1.0.5</version>, +    <type>aar</type>, +</dependency>, +```, +, +Then in your Activity or Application, register the Volley based model loader:, +```java, +public void onCreate() {, +  Glide.get(this).register(GlideUrl.class, InputStream.class, new VolleyUrlLoader.Factory(yourRequestQueue));, +  ..., +}, +```, +, +After the call to register any requests using http or https will go through Volley., +, +OkHttp, +------, +In addition to Volley, Glide also includes support for fetching media using OkHttp. To use OkHttp to fetch media over http/https:, +, +With Gradle:, +, +```groovy, +dependencies {, +    compile 'com.github.bumptech.glide:okhttp-integration:3.3.0', +    compile 'com.squareup.okhttp:okhttp:2.0.+', +}, +```, +, +Or with Maven:, +, +```xml, +<dependency>, +    <groupId>com.github.bumptech.glide</groupId>, +    <artifactId>okhttp-integration</artifactId>, +    <version>3.3.0</version>, +    <type>jar</type>, +</dependency>, +<dependency>, +    <groupId>com.squareup.okhttp</groupId>, +    <artifactId>okhttp</artifactId>, +    <version>2.0.0</version>, +    <type>jar</type>, +</dependency>, +```, +, +Then in your Activity or Application, register the OkHttp based model loader:, +```java, +public void onCreate() {, +  Glide.get(this).register(GlideUrl.class, InputStream.class, new OkHttpUrlLoader.Factory(yourOkHttpClient));, +  ..., +}, +```, +, +Glide was used at Bump for around a year in two of our Android apps at version 1.0. Version 2.0 was the first public release with a stable api. Version 3.0 is in the beta stage with a nearly final api and is used in multiple open source projects at Google including in the Android Camera app and in the 2014 Google IO app. Comments/bugs/questions/pull requests welcome!, +./gradlew jar, +Development, +-----------, +Follow the steps in the 'Build' section to setup the project and then edit the files however you wish. Intellij's [IDEA 14 early access build](http://confluence.jetbrains.com/display/IDEADEV/IDEA+14+EAP) cleanly imports both Glide's source and tests and is the recommended way to work with Glide. Earlier versions of intellij do not import the gradle project cleanly. Although Android Studio imports the source cleanly, it is not possible to run or debug the tests without manually modifying the tests' classpath., +]