[+++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformTest.java, +  private static final UndeclaredThrowableException WRAPPED_EXCEPTION =, +      new UndeclaredThrowableException(EXCEPTION);, +        throw WRAPPED_EXCEPTION;, +    listener.assertException(WRAPPED_EXCEPTION);, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformTest.java, +  private static final UndeclaredThrowableException WRAPPED_EXCEPTION =, +      new UndeclaredThrowableException(EXCEPTION);, +        throw WRAPPED_EXCEPTION;, +    listener.assertException(WRAPPED_EXCEPTION);, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractTransformFuture.java, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformTest.java, +  private static final UndeclaredThrowableException WRAPPED_EXCEPTION =, +      new UndeclaredThrowableException(EXCEPTION);, +        throw WRAPPED_EXCEPTION;, +    listener.assertException(WRAPPED_EXCEPTION);, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractTransformFuture.java, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformTest.java, +  private static final UndeclaredThrowableException WRAPPED_EXCEPTION =, +      new UndeclaredThrowableException(EXCEPTION);, +        throw WRAPPED_EXCEPTION;, +    listener.assertException(WRAPPED_EXCEPTION);, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractTransformFuture.java, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesTransformTest.java, +  private static final UndeclaredThrowableException WRAPPED_EXCEPTION =, +      new UndeclaredThrowableException(EXCEPTION);, +        throw WRAPPED_EXCEPTION;, +    listener.assertException(WRAPPED_EXCEPTION);, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/android/guava-tests/test/com/google/common/util/concurrent/FuturesTransformTest.java, +  private static final UndeclaredThrowableException WRAPPED_EXCEPTION =, +      new UndeclaredThrowableException(EXCEPTION);, +        throw WRAPPED_EXCEPTION;, +    listener.assertException(WRAPPED_EXCEPTION);, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractTransformFuture.java, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesTransformAsyncTest.java, +    public ListenableFuture<String> apply(Integer input) throws Exception {, +        case EXCEPTION_DATA:, +          throw EXCEPTION;, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesTransformTest.java, +  private static final UndeclaredThrowableException WRAPPED_EXCEPTION =, +      new UndeclaredThrowableException(EXCEPTION);, +        throw WRAPPED_EXCEPTION;, +    listener.assertException(WRAPPED_EXCEPTION);, +++ b/guava/src/com/google/common/util/concurrent/AbstractTransformFuture.java]