[+++ b/guava/src/com/google/common/cache/LocalCache.java, +import com.google.common.base.Function;, +        ListenableFuture<V> newValue = loader.reload(key, previousValue);, +        if (newValue == null) {, +          return Futures.immediateFuture(null);, +        }, +        // To avoid a race, make sure the refreshed value is set into loadingValueReference, +        // *before* returning newValue from the cache query., +        return Futures.transform(newValue, new Function<V, V>() {, +          @Override, +          public V apply(V newValue) {, +            LoadingValueReference.this.set(newValue);, +            return newValue;, +          }, +        });]