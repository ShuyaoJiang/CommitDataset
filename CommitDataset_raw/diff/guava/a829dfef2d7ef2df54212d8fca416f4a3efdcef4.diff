[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +import com.google.common.annotations.Beta;, +   * Returns {@link ListMultimap#asMap multimap.asMap()}, with its type, +   * corrected from {@code Map<K, Collection<V>>} to {@code Map<K, List<V>>}., +   *, +   * @since 15.0, +   */, +  @Beta, +  @SuppressWarnings("unchecked"), +  // safe by specification of ListMultimap.asMap(), +  public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap) {, +    return (Map<K, List<V>>) (Map<K, ?>) multimap.asMap();, +  }, +, +  /**, +   * Returns {@link SetMultimap#asMap multimap.asMap()}, with its type corrected, +   * from {@code Map<K, Collection<V>>} to {@code Map<K, Set<V>>}., +   *, +   * @since 15.0, +   */, +  @Beta, +  @SuppressWarnings("unchecked"), +  // safe by specification of SetMultimap.asMap(), +  public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap) {, +    return (Map<K, Set<V>>) (Map<K, ?>) multimap.asMap();, +  }, +, +  /**, +   * Returns {@link SortedSetMultimap#asMap multimap.asMap()}, with its type, +   * corrected from {@code Map<K, Collection<V>>} to, +   * {@code Map<K, SortedSet<V>>}., +   *, +   * @since 15.0, +   */, +  @Beta, +  @SuppressWarnings("unchecked"), +  // safe by specification of SortedSetMultimap.asMap(), +  public static <K, V> Map<K, SortedSet<V>> asMap(, +      SortedSetMultimap<K, V> multimap) {, +    return (Map<K, SortedSet<V>>) (Map<K, ?>) multimap.asMap();, +  }, +, +  /**, +   * Returns {@link Multimap#asMap multimap.asMap()}. This is provided for, +   * parity with the other more strongly-typed {@code asMap()} implementations., +   *, +   * @since 15.0, +   */, +  @Beta, +  public static <K, V> Map<K, Collection<V>> asMap(Multimap<K, V> multimap) {, +    return multimap.asMap();, +  }, +, +  /**, +  abstract static class Entries<K, V> extends, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +import com.google.common.annotations.Beta;, +   * Returns {@link ListMultimap#asMap multimap.asMap()}, with its type, +   * corrected from {@code Map<K, Collection<V>>} to {@code Map<K, List<V>>}., +   *, +   * @since 15.0, +   */, +  @Beta, +  @SuppressWarnings("unchecked"), +  // safe by specification of ListMultimap.asMap(), +  public static <K, V> Map<K, List<V>> asMap(ListMultimap<K, V> multimap) {, +    return (Map<K, List<V>>) (Map<K, ?>) multimap.asMap();, +  }, +, +  /**, +   * Returns {@link SetMultimap#asMap multimap.asMap()}, with its type corrected, +   * from {@code Map<K, Collection<V>>} to {@code Map<K, Set<V>>}., +   *, +   * @since 15.0, +   */, +  @Beta, +  @SuppressWarnings("unchecked"), +  // safe by specification of SetMultimap.asMap(), +  public static <K, V> Map<K, Set<V>> asMap(SetMultimap<K, V> multimap) {, +    return (Map<K, Set<V>>) (Map<K, ?>) multimap.asMap();, +  }, +, +  /**, +   * Returns {@link SortedSetMultimap#asMap multimap.asMap()}, with its type, +   * corrected from {@code Map<K, Collection<V>>} to, +   * {@code Map<K, SortedSet<V>>}., +   *, +   * @since 15.0, +   */, +  @Beta, +  @SuppressWarnings("unchecked"), +  // safe by specification of SortedSetMultimap.asMap(), +  public static <K, V> Map<K, SortedSet<V>> asMap(, +      SortedSetMultimap<K, V> multimap) {, +    return (Map<K, SortedSet<V>>) (Map<K, ?>) multimap.asMap();, +  }, +, +  /**, +   * Returns {@link Multimap#asMap multimap.asMap()}. This is provided for, +   * parity with the other more strongly-typed {@code asMap()} implementations.]