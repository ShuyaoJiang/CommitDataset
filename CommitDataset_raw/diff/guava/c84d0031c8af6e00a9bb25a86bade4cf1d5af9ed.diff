[+++ b/guava-testlib/src/com/google/common/collect/testing/testers/NavigableMapNavigationTester.java, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testHeadMapExclusive() {, +    assertFalse(navigableMap.headMap(a.getKey(), false).containsKey(a.getKey()));, +  }, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testHeadMapInclusive() {, +    assertTrue(navigableMap.headMap(a.getKey(), true).containsKey(a.getKey()));, +  }, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testTailMapExclusive() {, +    assertFalse(navigableMap.tailMap(a.getKey(), false).containsKey(a.getKey()));, +  }, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testTailMapInclusive() {, +    assertTrue(navigableMap.tailMap(a.getKey(), true).containsKey(a.getKey()));, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/testers/NavigableMapNavigationTester.java, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testHeadMapExclusive() {, +    assertFalse(navigableMap.headMap(a.getKey(), false).containsKey(a.getKey()));, +  }, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testHeadMapInclusive() {, +    assertTrue(navigableMap.headMap(a.getKey(), true).containsKey(a.getKey()));, +  }, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testTailMapExclusive() {, +    assertFalse(navigableMap.tailMap(a.getKey(), false).containsKey(a.getKey()));, +  }, +  , +  @CollectionSize.Require(absent = ZERO), +  public void testTailMapInclusive() {, +    assertTrue(navigableMap.tailMap(a.getKey(), true).containsKey(a.getKey()));, +  }, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultimap.java, +      return new NavigableAsMap(sortedMap().headMap(toKey, inclusive));]