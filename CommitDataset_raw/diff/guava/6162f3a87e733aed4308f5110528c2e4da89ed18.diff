[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        @Override, +        public String trimLeadingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +        @Override, +        public String trimTrailingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +    for (int first = 0; first < len; first++) {, +    }, +    return "";, +  }, +    for (int last = len - 1; last >= 0; last--) {, +    }, +    return "";, +  }, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        @Override, +        public String trimLeadingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +        @Override, +        public String trimTrailingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +    for (int first = 0; first < len; first++) {, +    }, +    return "";, +  }, +    for (int last = len - 1; last >= 0; last--) {, +    }, +    return "";, +  }, +++ b/guava-gwt/src-super/com/google/common/io/super/com/google/common/io/BaseEncoding.java, +    chars = padding().trimTrailingFrom(chars);, +  abstract CharMatcher padding();, +, +    @Override, +    CharMatcher padding() {, +      return (int) ((alphabet.bitsPerChar * (long) chars + 7L) / 8L);, +        final CharMatcher paddingMatcher = padding();, +      checkArgument(padding().or(alphabet).matchesNoneOf(separator),, +    CharMatcher padding() {, +      return delegate.padding();, +    }, +, +    @Override, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        @Override, +        public String trimLeadingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +        @Override, +        public String trimTrailingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +    for (int first = 0; first < len; first++) {, +    }, +    return "";, +  }, +    for (int last = len - 1; last >= 0; last--) {, +    }, +    return "";, +  }, +++ b/guava-gwt/src-super/com/google/common/io/super/com/google/common/io/BaseEncoding.java, +    chars = padding().trimTrailingFrom(chars);, +  abstract CharMatcher padding();, +, +    @Override, +    CharMatcher padding() {, +      return (int) ((alphabet.bitsPerChar * (long) chars + 7L) / 8L);, +        final CharMatcher paddingMatcher = padding();, +      checkArgument(padding().or(alphabet).matchesNoneOf(separator),, +    CharMatcher padding() {, +      return delegate.padding();, +    }, +, +    @Override, +++ b/guava/src/com/google/common/base/CharMatcher.java, +        @Override, +        public String trimLeadingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +        @Override, +        public String trimTrailingFrom(CharSequence sequence) {, +          return sequence.toString();, +        }, +, +    for (int first = 0; first < len; first++) {, +    }, +    return "";, +  }]