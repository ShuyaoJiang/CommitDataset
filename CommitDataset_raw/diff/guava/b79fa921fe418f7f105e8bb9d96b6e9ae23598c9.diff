[+++ b/guava-tests/test/com/google/common/collect/ContiguousSetTest.java, +import java.util.Collection;, +    assertFalse(set.contains((Object) "blah"));, +    assertFalse(set.containsAll((Collection<?>) ImmutableSet.of("blah")));, +++ b/guava-tests/test/com/google/common/collect/ContiguousSetTest.java, +import java.util.Collection;, +    assertFalse(set.contains((Object) "blah"));, +    assertFalse(set.containsAll((Collection<?>) ImmutableSet.of("blah")));, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +    forward.remove((Object) Object.class);, +    forward.removeFirstOccurrence((Object) Object.class);, +    forward.removeLastOccurrence((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ContiguousSetTest.java, +import java.util.Collection;, +    assertFalse(set.contains((Object) "blah"));, +    assertFalse(set.containsAll((Collection<?>) ImmutableSet.of("blah")));, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +    forward.remove((Object) Object.class);, +    forward.removeFirstOccurrence((Object) Object.class);, +    forward.removeLastOccurrence((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ForwardingQueueTest.java, +    forward.remove((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ContiguousSetTest.java, +import java.util.Collection;, +    assertFalse(set.contains((Object) "blah"));, +    assertFalse(set.containsAll((Collection<?>) ImmutableSet.of("blah")));, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +    forward.remove((Object) Object.class);, +    forward.removeFirstOccurrence((Object) Object.class);, +    forward.removeLastOccurrence((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ForwardingQueueTest.java, +    forward.remove((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ImmutableSortedSetTest.java, +    assertFalse(set.contains((Object) 3.7));, +    assertFalse(set.containsAll((Collection<?>) unexpected));, +++ b/guava-tests/test/com/google/common/collect/ContiguousSetTest.java, +import java.util.Collection;, +    assertFalse(set.contains((Object) "blah"));, +    assertFalse(set.containsAll((Collection<?>) ImmutableSet.of("blah")));, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +    forward.remove((Object) Object.class);, +    forward.removeFirstOccurrence((Object) Object.class);, +    forward.removeLastOccurrence((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ForwardingQueueTest.java, +    forward.remove((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ImmutableSortedSetTest.java, +    assertFalse(set.contains((Object) 3.7));, +    assertFalse(set.containsAll((Collection<?>) unexpected));, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      unmod.remove((Object) "four");, +++ b/guava-tests/test/com/google/common/collect/ContiguousSetTest.java, +import java.util.Collection;, +    assertFalse(set.contains((Object) "blah"));, +    assertFalse(set.containsAll((Collection<?>) ImmutableSet.of("blah")));, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +    forward.remove((Object) Object.class);, +    forward.removeFirstOccurrence((Object) Object.class);, +    forward.removeLastOccurrence((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ForwardingQueueTest.java, +    forward.remove((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ImmutableSortedSetTest.java, +    assertFalse(set.contains((Object) 3.7));, +    assertFalse(set.containsAll((Collection<?>) unexpected));, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      unmod.remove((Object) "four");, +++ b/guava-tests/test/com/google/common/collect/MultimapsTest.java, +    assertFalse(entries.contains((Object) 4.5));, +    assertFalse(entries.remove((Object) 4.5));, +++ b/guava-tests/test/com/google/common/collect/ContiguousSetTest.java, +import java.util.Collection;, +    assertFalse(set.contains((Object) "blah"));, +    assertFalse(set.containsAll((Collection<?>) ImmutableSet.of("blah")));, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +    forward.remove((Object) Object.class);, +    forward.removeFirstOccurrence((Object) Object.class);, +    forward.removeLastOccurrence((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ForwardingQueueTest.java, +    forward.remove((Object) Object.class);, +++ b/guava-tests/test/com/google/common/collect/ImmutableSortedSetTest.java, +    assertFalse(set.contains((Object) 3.7));, +    assertFalse(set.containsAll((Collection<?>) unexpected));, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      unmod.remove((Object) "four");, +++ b/guava-tests/test/com/google/common/collect/MultimapsTest.java, +    assertFalse(entries.contains((Object) 4.5));, +    assertFalse(entries.remove((Object) 4.5));, +++ b/guava-tests/test/com/google/common/collect/SetsTest.java, +    assertFalse(powerSet.contains((Object) "notASet"));]