[+++ b/guava/src/com/google/common/hash/Hashing.java, +   * Used to randomize {@link #goodFastHash} instances, so that programs which persist anything, +  // Used by goodFastHash when minimumBits == 32., +  private static final HashFunction GOOD_FAST_HASH_FUNCTION_32 = murmur3_32(GOOD_FAST_HASH_SEED);, +, +  // Used by goodFastHash when 32 < minimumBits <= 128., +  private static final HashFunction GOOD_FAST_HASH_FUNCTION_128 = murmur3_128(GOOD_FAST_HASH_SEED);, +, +   * <p>Repeated calls to {@link #goodFastHash} with the same {@code minimumBits} value will, +   * return {@link HashFunction} instances with identical behavior (but not necessarily the, +   * same instance) for the duration of the current virtual machine., +   *, +      return GOOD_FAST_HASH_FUNCTION_32;, +    }, +    if (bits <= 128) {, +      return GOOD_FAST_HASH_FUNCTION_128;, +    }, +, +    // Otherwise, join together some 128-bit murmur3s, +    hashFunctions[0] = GOOD_FAST_HASH_FUNCTION_128;, +    for (int i = 1; i < hashFunctionsNeeded; i++) {, +      hashFunctions[i] = murmur3_128(seed);]