[+++ b/android/guava-tests/test/com/google/common/util/concurrent/RateLimiterTest.java, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter r = RateLimiter.create(Double.MIN_VALUE, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(2.0, 4000, MILLISECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 10.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(2.0, 4000, MILLISECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 10.0, stopwatch);, +    RateLimiter rateLimiter = RateLimiter.create(1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter rateLimiter = RateLimiter.create(1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, 10, SECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, 10, SECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(1.0, stopwatch);, +          RateLimiter rateLimiter =, +              RateLimiter.create(qps, warmupMillis, MILLISECONDS, coldFactor, stopwatch);, +    tester.testInstanceMethods(RateLimiter.create(5.0, stopwatch), Visibility.PACKAGE);, +    RateLimiter rateLimiter = RateLimiter.create(Double.MIN_VALUE, stopwatch);, +++ b/android/guava-tests/test/com/google/common/util/concurrent/RateLimiterTest.java, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter r = RateLimiter.create(Double.MIN_VALUE, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(2.0, 4000, MILLISECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 10.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(2.0, 4000, MILLISECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 10.0, stopwatch);, +    RateLimiter rateLimiter = RateLimiter.create(1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter rateLimiter = RateLimiter.create(1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, 10, SECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, 10, SECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(1.0, stopwatch);, +          RateLimiter rateLimiter =, +              RateLimiter.create(qps, warmupMillis, MILLISECONDS, coldFactor, stopwatch);, +    tester.testInstanceMethods(RateLimiter.create(5.0, stopwatch), Visibility.PACKAGE);, +    RateLimiter rateLimiter = RateLimiter.create(Double.MIN_VALUE, stopwatch);, +++ b/android/guava/src/com/google/common/util/concurrent/RateLimiter.java, +    return create(permitsPerSecond, SleepingStopwatch.createFromSystemTimer());, +  static RateLimiter create(double permitsPerSecond, SleepingStopwatch stopwatch) {, +        permitsPerSecond, warmupPeriod, unit, 3.0, SleepingStopwatch.createFromSystemTimer());, +      double coldFactor,, +      SleepingStopwatch stopwatch) {, +++ b/android/guava-tests/test/com/google/common/util/concurrent/RateLimiterTest.java, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter r = RateLimiter.create(Double.MIN_VALUE, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(2.0, 4000, MILLISECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 10.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(2.0, 4000, MILLISECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, 4000, MILLISECONDS, 10.0, stopwatch);, +    RateLimiter rateLimiter = RateLimiter.create(1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter rateLimiter = RateLimiter.create(1.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, 10, SECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(Double.POSITIVE_INFINITY, 10, SECONDS, 3.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(1.0, stopwatch);, +          RateLimiter rateLimiter =, +              RateLimiter.create(qps, warmupMillis, MILLISECONDS, coldFactor, stopwatch);, +    tester.testInstanceMethods(RateLimiter.create(5.0, stopwatch), Visibility.PACKAGE);, +    RateLimiter rateLimiter = RateLimiter.create(Double.MIN_VALUE, stopwatch);, +++ b/android/guava/src/com/google/common/util/concurrent/RateLimiter.java, +    return create(permitsPerSecond, SleepingStopwatch.createFromSystemTimer());, +  static RateLimiter create(double permitsPerSecond, SleepingStopwatch stopwatch) {, +        permitsPerSecond, warmupPeriod, unit, 3.0, SleepingStopwatch.createFromSystemTimer());, +      double coldFactor,, +      SleepingStopwatch stopwatch) {, +++ b/guava-tests/test/com/google/common/util/concurrent/RateLimiterTest.java, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter r = RateLimiter.create(Double.MIN_VALUE, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);, +    RateLimiter limiter = RateLimiter.create(5.0, stopwatch);]