[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMap.java, +    @Override public Builder<K, V> put(Map.Entry<? extends K, ? extends V> entry) {, +      super.put(entry);, +      return this;, +    }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMap.java, +    @Override public Builder<K, V> put(Map.Entry<? extends K, ? extends V> entry) {, +      super.put(entry);, +      return this;, +    }, +, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMapTest.java, +    public void testBuilder_withImmutableEntry() {, +      ImmutableBiMap<String, Integer> map = new Builder<String, Integer>(), +          .put(Maps.immutableEntry("one", 1)), +          .build();, +      assertMapEquals(map, "one", 1);, +    }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMap.java, +    @Override public Builder<K, V> put(Map.Entry<? extends K, ? extends V> entry) {, +      super.put(entry);, +      return this;, +    }, +, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMapTest.java, +    public void testBuilder_withImmutableEntry() {, +      ImmutableBiMap<String, Integer> map = new Builder<String, Integer>(), +          .put(Maps.immutableEntry("one", 1)), +          .build();, +      assertMapEquals(map, "one", 1);, +    }, +, +++ b/guava-gwt/test/com/google/common/collect/ImmutableBiMapTest_gwt.java, +public void testBuilder_withImmutableEntry__CreationTests() throws Exception {, +  com.google.common.collect.ImmutableBiMapTest.CreationTests testCase = new com.google.common.collect.ImmutableBiMapTest.CreationTests();, +  testCase.testBuilder_withImmutableEntry();, +}, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMap.java, +    @Override public Builder<K, V> put(Map.Entry<? extends K, ? extends V> entry) {, +      super.put(entry);, +      return this;, +    }, +, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMapTest.java, +    public void testBuilder_withImmutableEntry() {, +      ImmutableBiMap<String, Integer> map = new Builder<String, Integer>(), +          .put(Maps.immutableEntry("one", 1)), +          .build();, +      assertMapEquals(map, "one", 1);, +    }, +, +++ b/guava-gwt/test/com/google/common/collect/ImmutableBiMapTest_gwt.java, +public void testBuilder_withImmutableEntry__CreationTests() throws Exception {, +  com.google.common.collect.ImmutableBiMapTest.CreationTests testCase = new com.google.common.collect.ImmutableBiMapTest.CreationTests();, +  testCase.testBuilder_withImmutableEntry();, +}, +, +++ b/guava-tests/test/com/google/common/collect/ImmutableBiMapTest.java, +    public void testBuilder_withImmutableEntry() {, +      ImmutableBiMap<String, Integer> map = new Builder<String, Integer>(), +          .put(Maps.immutableEntry("one", 1)), +          .build();, +      assertMapEquals(map, "one", 1);, +    }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMap.java, +    @Override public Builder<K, V> put(Map.Entry<? extends K, ? extends V> entry) {, +      super.put(entry);, +      return this;, +    }, +, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ImmutableBiMapTest.java, +    public void testBuilder_withImmutableEntry() {, +      ImmutableBiMap<String, Integer> map = new Builder<String, Integer>(), +          .put(Maps.immutableEntry("one", 1)), +          .build();, +      assertMapEquals(map, "one", 1);, +    }, +, +++ b/guava-gwt/test/com/google/common/collect/ImmutableBiMapTest_gwt.java, +public void testBuilder_withImmutableEntry__CreationTests() throws Exception {, +  com.google.common.collect.ImmutableBiMapTest.CreationTests testCase = new com.google.common.collect.ImmutableBiMapTest.CreationTests();, +  testCase.testBuilder_withImmutableEntry();, +}, +, +++ b/guava-tests/test/com/google/common/collect/ImmutableBiMapTest.java, +    public void testBuilder_withImmutableEntry() {, +      ImmutableBiMap<String, Integer> map = new Builder<String, Integer>(), +          .put(Maps.immutableEntry("one", 1)), +          .build();, +      assertMapEquals(map, "one", 1);, +    }, +, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +import com.google.common.collect.ImmutableMap.Builder;, +import java.util.Map.Entry;, +     * Adds the given {@code entry} to the bimap.  Duplicate keys or values]