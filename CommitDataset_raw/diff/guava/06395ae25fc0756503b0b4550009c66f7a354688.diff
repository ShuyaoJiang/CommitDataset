[+++ b/android/guava-testlib/src/com/google/common/collect/testing/testers/MapSerializationTester.java, +import com.google.common.testing.EqualsTester;, +import java.util.Map;, +    Map<K, V> deserialized = SerializableTester.reserialize(getMap());, +    new EqualsTester().addEqualityGroup(getMap(), deserialized).testEquals();, +++ b/android/guava-testlib/src/com/google/common/collect/testing/testers/MapSerializationTester.java, +import com.google.common.testing.EqualsTester;, +import java.util.Map;, +    Map<K, V> deserialized = SerializableTester.reserialize(getMap());, +    new EqualsTester().addEqualityGroup(getMap(), deserialized).testEquals();, +++ b/android/guava/src/com/google/common/collect/ImmutableMap.java, +      throw conflictException(conflictDescription, entry1, entry2);, +  static IllegalArgumentException conflictException(, +      String conflictDescription, Object entry1, Object entry2) {, +    return new IllegalArgumentException(, +        "Multiple entries with same " + conflictDescription + ": " + entry1 + " and " + entry2);, +  }, +, +++ b/android/guava-testlib/src/com/google/common/collect/testing/testers/MapSerializationTester.java, +import com.google.common.testing.EqualsTester;, +import java.util.Map;, +    Map<K, V> deserialized = SerializableTester.reserialize(getMap());, +    new EqualsTester().addEqualityGroup(getMap(), deserialized).testEquals();, +++ b/android/guava/src/com/google/common/collect/ImmutableMap.java, +      throw conflictException(conflictDescription, entry1, entry2);, +  static IllegalArgumentException conflictException(, +      String conflictDescription, Object entry1, Object entry2) {, +    return new IllegalArgumentException(, +        "Multiple entries with same " + conflictDescription + ": " + entry1 + " and " + entry2);, +  }, +, +++ b/android/guava/src/com/google/common/collect/ImmutableMapEntrySet.java, +    private final transient ImmutableList<Entry<K, V>> entries;, +      this(map, ImmutableList.<Entry<K, V>>asImmutableList(entries));, +    }, +, +    RegularEntrySet(ImmutableMap<K, V> map, ImmutableList<Entry<K, V>> entries) {, +      return entries.copyIntoArray(dst, offset);, +      return entries.iterator();, +      return entries;, +++ b/android/guava-testlib/src/com/google/common/collect/testing/testers/MapSerializationTester.java, +import com.google.common.testing.EqualsTester;, +import java.util.Map;, +    Map<K, V> deserialized = SerializableTester.reserialize(getMap());, +    new EqualsTester().addEqualityGroup(getMap(), deserialized).testEquals();, +++ b/android/guava/src/com/google/common/collect/ImmutableMap.java, +      throw conflictException(conflictDescription, entry1, entry2);, +  static IllegalArgumentException conflictException(, +      String conflictDescription, Object entry1, Object entry2) {, +    return new IllegalArgumentException(, +        "Multiple entries with same " + conflictDescription + ": " + entry1 + " and " + entry2);, +  }, +, +++ b/android/guava/src/com/google/common/collect/ImmutableMapEntrySet.java, +    private final transient ImmutableList<Entry<K, V>> entries;, +      this(map, ImmutableList.<Entry<K, V>>asImmutableList(entries));, +    }, +, +    RegularEntrySet(ImmutableMap<K, V> map, ImmutableList<Entry<K, V>> entries) {, +      return entries.copyIntoArray(dst, offset);, +      return entries.iterator();, +      return entries;, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +, +    ImmutableMap<K, V> buildJdkBacked() {, +      return build();, +    }, +++ b/android/guava-testlib/src/com/google/common/collect/testing/testers/MapSerializationTester.java, +import com.google.common.testing.EqualsTester;, +import java.util.Map;, +    Map<K, V> deserialized = SerializableTester.reserialize(getMap());, +    new EqualsTester().addEqualityGroup(getMap(), deserialized).testEquals();, +++ b/android/guava/src/com/google/common/collect/ImmutableMap.java, +      throw conflictException(conflictDescription, entry1, entry2);, +  static IllegalArgumentException conflictException(, +      String conflictDescription, Object entry1, Object entry2) {, +    return new IllegalArgumentException(, +        "Multiple entries with same " + conflictDescription + ": " + entry1 + " and " + entry2);, +  }, +, +++ b/android/guava/src/com/google/common/collect/ImmutableMapEntrySet.java, +    private final transient ImmutableList<Entry<K, V>> entries;, +      this(map, ImmutableList.<Entry<K, V>>asImmutableList(entries));, +    }, +, +    RegularEntrySet(ImmutableMap<K, V> map, ImmutableList<Entry<K, V>> entries) {, +      return entries.copyIntoArray(dst, offset);, +      return entries.iterator();, +      return entries;, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +, +    ImmutableMap<K, V> buildJdkBacked() {, +      return build();, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/JdkBackedImmutableMap.java, +/*, + * Copyright (C) 2018 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License.]