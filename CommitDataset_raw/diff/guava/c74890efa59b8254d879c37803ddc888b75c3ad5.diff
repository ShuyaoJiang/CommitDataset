[+++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * Static utility methods pertaining to {@code Predicate} instances., +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * Static utility methods pertaining to {@code Predicate} instances., +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableList.java, +import com.google.common.collect.Lists;, +, +  public ImmutableList<E> reverse(){, +    List<E> list = Lists.newArrayList(this);, +    Collections.reverse(list);, +    return unsafeDelegateList(list);, +  }, +, +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * Static utility methods pertaining to {@code Predicate} instances., +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableList.java, +import com.google.common.collect.Lists;, +, +  public ImmutableList<E> reverse(){, +    List<E> list = Lists.newArrayList(this);, +    Collections.reverse(list);, +    return unsafeDelegateList(list);, +  }, +, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   * Returns an iterator over the iterators of the given iterables., +   */, +  static <T> UnmodifiableIterator<Iterator<? extends T>> iterators(, +      Iterable<? extends Iterable<? extends T>> iterables) {, +    final Iterator<? extends Iterable<? extends T>> iterableIterator =, +        iterables.iterator();, +    return new UnmodifiableIterator<Iterator<? extends T>>() {, +      public boolean hasNext() {, +        return iterableIterator.hasNext();, +      }, +      public Iterator<? extends T> next() {, +        return iterableIterator.next().iterator();, +      }, +    };, +  }, +, +  /**, +      final Iterable<? extends Iterable<? extends T>> inputs) {, +    checkNotNull(inputs);, +        return Iterators.concat(iterators(inputs));, +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * Static utility methods pertaining to {@code Predicate} instances., +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableList.java, +import com.google.common.collect.Lists;, +, +  public ImmutableList<E> reverse(){, +    List<E> list = Lists.newArrayList(this);, +    Collections.reverse(list);, +    return unsafeDelegateList(list);, +  }, +, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   * Returns an iterator over the iterators of the given iterables., +   */, +  static <T> UnmodifiableIterator<Iterator<? extends T>> iterators(, +      Iterable<? extends Iterable<? extends T>> iterables) {, +    final Iterator<? extends Iterable<? extends T>> iterableIterator =, +        iterables.iterator();, +    return new UnmodifiableIterator<Iterator<? extends T>>() {, +      public boolean hasNext() {, +        return iterableIterator.hasNext();, +      }, +      public Iterator<? extends T> next() {, +        return iterableIterator.next().iterator();, +      }, +    };, +  }, +, +  /**, +      final Iterable<? extends Iterable<? extends T>> inputs) {, +    checkNotNull(inputs);, +        return Iterators.concat(iterators(inputs));, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   *, +   * <p><b>Warning:</b> {@code keyPredicate} must be <i>consistent with, +   * equals</i>, as documented at {@link Predicate#apply}. Do not provide a, +   * predicate such as {@code Predicates.instanceOf(ArrayList.class)}, which is, +   * inconsistent with equals., +   *, +   * <p><b>Warning:</b> {@code valuePredicate} must be <i>consistent with, +   * equals</i>, as documented at {@link Predicate#apply}. Do not provide a, +   * predicate such as {@code Predicates.instanceOf(ArrayList.class)}, which is, +   * inconsistent with equals., +   *, +   * <p><b>Warning:</b> {@code valuePredicate} must be <i>consistent with, +   * equals</i>, as documented at {@link Predicate#apply}., +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * Static utility methods pertaining to {@code Predicate} instances., +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableList.java, +import com.google.common.collect.Lists;, +, +  public ImmutableList<E> reverse(){, +    List<E> list = Lists.newArrayList(this);, +    Collections.reverse(list);, +    return unsafeDelegateList(list);]