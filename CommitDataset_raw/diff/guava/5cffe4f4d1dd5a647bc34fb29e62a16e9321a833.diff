[+++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Synchronized.java, +import java.util.SortedMap;, +  static class SynchronizedObject implements Serializable {, +  static class SynchronizedSet<E>, +    , +    SynchronizedSet(Set<E> delegate, @Nullable Object mutex) {, +  static class SynchronizedSortedSet<E> extends SynchronizedSet<E>, +    SynchronizedMap(Map<K, V> delegate, @Nullable Object mutex) {, +  static <K, V> SortedMap<K, V> sortedMap(, +      SortedMap<K, V> sortedMap, @Nullable Object mutex) {, +    return new SynchronizedSortedMap<K, V>(sortedMap, mutex);, +  }, +  , +  static class SynchronizedSortedMap<K, V> extends SynchronizedMap<K, V>, +      implements SortedMap<K, V> {, +, +    SynchronizedSortedMap(SortedMap<K, V> delegate, @Nullable Object mutex) {, +      super(delegate, mutex);, +    }, +, +    @Override SortedMap<K, V> delegate() {, +      return (SortedMap<K, V>) super.delegate();, +    }, +, +    @Override public Comparator<? super K> comparator() {, +      synchronized (mutex) {, +        return delegate().comparator();, +      }, +    }, +, +    @Override public K firstKey() {, +      synchronized (mutex) {, +        return delegate().firstKey();, +      }, +    }, +, +    @Override public SortedMap<K, V> headMap(K toKey) {, +      synchronized (mutex) {, +        return sortedMap(delegate().headMap(toKey), mutex);, +      }, +    }, +, +    @Override public K lastKey() {, +      synchronized (mutex) {, +        return delegate().lastKey();, +      }, +    }, +, +    @Override public SortedMap<K, V> subMap(K fromKey, K toKey) {, +      synchronized (mutex) {, +        return sortedMap(delegate().subMap(fromKey, toKey), mutex);, +      }, +    }, +, +    @Override public SortedMap<K, V> tailMap(K fromKey) {, +      synchronized (mutex) {, +        return sortedMap(delegate().tailMap(fromKey), mutex);, +      }, +    }, +, +    private static final long serialVersionUID = 0;, +  }, +, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Synchronized.java, +import java.util.SortedMap;, +  static class SynchronizedObject implements Serializable {, +  static class SynchronizedSet<E>, +    , +    SynchronizedSet(Set<E> delegate, @Nullable Object mutex) {, +  static class SynchronizedSortedSet<E> extends SynchronizedSet<E>, +    SynchronizedMap(Map<K, V> delegate, @Nullable Object mutex) {, +  static <K, V> SortedMap<K, V> sortedMap(, +      SortedMap<K, V> sortedMap, @Nullable Object mutex) {, +    return new SynchronizedSortedMap<K, V>(sortedMap, mutex);, +  }, +  , +  static class SynchronizedSortedMap<K, V> extends SynchronizedMap<K, V>, +      implements SortedMap<K, V> {, +, +    SynchronizedSortedMap(SortedMap<K, V> delegate, @Nullable Object mutex) {, +      super(delegate, mutex);, +    }, +, +    @Override SortedMap<K, V> delegate() {, +      return (SortedMap<K, V>) super.delegate();, +    }, +, +    @Override public Comparator<? super K> comparator() {, +      synchronized (mutex) {, +        return delegate().comparator();, +      }, +    }, +, +    @Override public K firstKey() {, +      synchronized (mutex) {, +        return delegate().firstKey();, +      }, +    }, +, +    @Override public SortedMap<K, V> headMap(K toKey) {]