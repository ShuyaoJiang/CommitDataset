[+++ b/guava/src/com/google/common/net/InternetDomainName.java, +      CharMatcher.javaLetterOrDigit().or(DASH_MATCHER);, +    String asciiChars = CharMatcher.ascii().retainFrom(part);, +    if (isFinalPart && CharMatcher.digit().matches(part.charAt(0))) {, +++ b/guava/src/com/google/common/net/InternetDomainName.java, +      CharMatcher.javaLetterOrDigit().or(DASH_MATCHER);, +    String asciiChars = CharMatcher.ascii().retainFrom(part);, +    if (isFinalPart && CharMatcher.digit().matches(part.charAt(0))) {, +++ b/guava/src/com/google/common/net/MediaType.java, +import static com.google.common.base.CharMatcher.ascii;, +import static com.google.common.base.CharMatcher.javaIsoControl;, +  private static final CharMatcher TOKEN_MATCHER = ascii().and(javaIsoControl().negate()), +  private static final CharMatcher QUOTED_TEXT_MATCHER = ascii(), +              valueBuilder.append(tokenizer.consumeCharacter(ascii()));, +++ b/guava/src/com/google/common/net/InternetDomainName.java, +      CharMatcher.javaLetterOrDigit().or(DASH_MATCHER);, +    String asciiChars = CharMatcher.ascii().retainFrom(part);, +    if (isFinalPart && CharMatcher.digit().matches(part.charAt(0))) {, +++ b/guava/src/com/google/common/net/MediaType.java, +import static com.google.common.base.CharMatcher.ascii;, +import static com.google.common.base.CharMatcher.javaIsoControl;, +  private static final CharMatcher TOKEN_MATCHER = ascii().and(javaIsoControl().negate()), +  private static final CharMatcher QUOTED_TEXT_MATCHER = ascii(), +              valueBuilder.append(tokenizer.consumeCharacter(ascii()));, +++ b/guava/src/com/google/common/reflect/ClassPath.java, +        return CharMatcher.digit().trimLeadingFrom(innerClassName);]