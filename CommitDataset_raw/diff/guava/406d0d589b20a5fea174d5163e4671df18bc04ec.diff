[+++ b/guava-testlib/pom.xml, +      <groupId>org.truth0</groupId>, +      <version>0.10</version>, +++ b/guava-testlib/pom.xml, +      <groupId>org.truth0</groupId>, +      <version>0.10</version>, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractListMultimapTester.java, +import static org.truth0.Truth.ASSERT;, +import java.util.Arrays;, +import java.util.Collection;, +, +  protected void assertGet(K key, V... values) {, +    assertGet(key, Arrays.asList(values));, +  }, +  protected void assertGet(K key, Collection<V> values) {, +    ASSERT.that(multimap().get(key)).has().allFrom(values).inOrder();, +, +    if (!values.isEmpty()) {, +      ASSERT.that(multimap().asMap().get(key)).has().allFrom(values).inOrder();, +    assertEquals(values.size(), multimap().get(key).size());, +    assertEquals(values.size() > 0, multimap().containsKey(key));, +    assertEquals(values.size() > 0, multimap().keySet().contains(key));, +    assertEquals(values.size() > 0, multimap().keys().contains(key));, +++ b/guava-testlib/pom.xml, +      <groupId>org.truth0</groupId>, +      <version>0.10</version>, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractListMultimapTester.java, +import static org.truth0.Truth.ASSERT;, +import java.util.Arrays;, +import java.util.Collection;, +, +  protected void assertGet(K key, V... values) {, +    assertGet(key, Arrays.asList(values));, +  }, +  protected void assertGet(K key, Collection<V> values) {, +    ASSERT.that(multimap().get(key)).has().allFrom(values).inOrder();, +, +    if (!values.isEmpty()) {, +      ASSERT.that(multimap().asMap().get(key)).has().allFrom(values).inOrder();, +    assertEquals(values.size(), multimap().get(key).size());, +    assertEquals(values.size() > 0, multimap().containsKey(key));, +    assertEquals(values.size() > 0, multimap().keySet().contains(key));, +    assertEquals(values.size() > 0, multimap().keys().contains(key));, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +import static java.util.Arrays.asList;, +import static org.truth0.Truth.ASSERT;, +import java.util.Arrays;, +  protected void assertGet(K key, V... values) {, +    assertGet(key, Arrays.asList(values));, +  }, +  protected void assertGet(K key, Collection<V> values) {, +    ASSERT.that(multimap().get(key)).has().allFrom(values);, +, +    if (!values.isEmpty()) {, +      ASSERT.that(multimap().asMap().get(key)).has().allFrom(values);, +    // TODO(user): Add proper overrides to prevent autoboxing., +    ASSERT.that(multimap().get(key).size()).is((long) values.size());, +    assertEquals(values.size() > 0, multimap().containsKey(key));, +    assertEquals(values.size() > 0, multimap().keySet().contains(key));, +    assertEquals(values.size() > 0, multimap().keys().contains(key));, +++ b/guava-testlib/pom.xml, +      <groupId>org.truth0</groupId>, +      <version>0.10</version>, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractListMultimapTester.java, +import static org.truth0.Truth.ASSERT;, +import java.util.Arrays;, +import java.util.Collection;, +, +  protected void assertGet(K key, V... values) {, +    assertGet(key, Arrays.asList(values));, +  }, +  protected void assertGet(K key, Collection<V> values) {, +    ASSERT.that(multimap().get(key)).has().allFrom(values).inOrder();, +, +    if (!values.isEmpty()) {, +      ASSERT.that(multimap().asMap().get(key)).has().allFrom(values).inOrder();, +    assertEquals(values.size(), multimap().get(key).size());, +    assertEquals(values.size() > 0, multimap().containsKey(key));, +    assertEquals(values.size() > 0, multimap().keySet().contains(key));, +    assertEquals(values.size() > 0, multimap().keys().contains(key));, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +import static java.util.Arrays.asList;, +import static org.truth0.Truth.ASSERT;, +import java.util.Arrays;, +  protected void assertGet(K key, V... values) {, +    assertGet(key, Arrays.asList(values));, +  }, +  protected void assertGet(K key, Collection<V> values) {, +    ASSERT.that(multimap().get(key)).has().allFrom(values);, +, +    if (!values.isEmpty()) {, +      ASSERT.that(multimap().asMap().get(key)).has().allFrom(values);, +    // TODO(user): Add proper overrides to prevent autoboxing., +    ASSERT.that(multimap().get(key).size()).is((long) values.size());, +    assertEquals(values.size() > 0, multimap().containsKey(key));, +    assertEquals(values.size() > 0, multimap().keySet().contains(key));, +    assertEquals(values.size() > 0, multimap().keys().contains(key));, +++ b/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapPutAllTester.java, +      assertGet(k, expectedValues);, +++ b/guava-testlib/pom.xml]