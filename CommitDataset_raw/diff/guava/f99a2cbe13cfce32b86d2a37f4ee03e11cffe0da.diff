[+++ b/guava-tests/test/com/google/common/base/JoinerTest.java, +import com.google.common.collect.Iterators;, +    NullPointerTester tester = new NullPointerTester(), +        // This is necessary because of the generics hackery we have to temporarily support, +        // parameters which implement both Iterator and Iterable.;, +        .setDefault(Object.class, Iterators.emptyIterator());, +    tester.testInstanceMethods(Joiner.on(","), NullPointerTester.Visibility.PACKAGE);, +    tester.testInstanceMethods(Joiner.on(",").skipNulls(), NullPointerTester.Visibility.PACKAGE);, +    tester.testInstanceMethods(, +        Joiner.on(",").useForNull("x"), NullPointerTester.Visibility.PACKAGE);, +    tester.testInstanceMethods(, +        Joiner.on(",").withKeyValueSeparator("="), NullPointerTester.Visibility.PACKAGE);, +++ b/guava-tests/test/com/google/common/base/JoinerTest.java, +import com.google.common.collect.Iterators;, +    NullPointerTester tester = new NullPointerTester(), +        // This is necessary because of the generics hackery we have to temporarily support, +        // parameters which implement both Iterator and Iterable.;, +        .setDefault(Object.class, Iterators.emptyIterator());, +    tester.testInstanceMethods(Joiner.on(","), NullPointerTester.Visibility.PACKAGE);, +    tester.testInstanceMethods(Joiner.on(",").skipNulls(), NullPointerTester.Visibility.PACKAGE);, +    tester.testInstanceMethods(, +        Joiner.on(",").useForNull("x"), NullPointerTester.Visibility.PACKAGE);, +    tester.testInstanceMethods(, +        Joiner.on(",").withKeyValueSeparator("="), NullPointerTester.Visibility.PACKAGE);, +++ b/guava/src/com/google/common/base/Joiner.java, +      @Override CharSequence toString(@Nullable Object part) {]