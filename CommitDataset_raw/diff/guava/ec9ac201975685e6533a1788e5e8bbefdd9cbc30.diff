[+++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +   *     call, or switch to a {@code HashMap<K, ArrayList<V>>}., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +   *     call, or switch to a {@code HashMap<K, ArrayList<V>>}., +++ b/android/guava/src/com/google/common/collect/ForwardingBlockingDeque.java, + *     com.google.common.util.concurrent.ForwardingBlockingDeque} instead., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +   *     call, or switch to a {@code HashMap<K, ArrayList<V>>}., +++ b/android/guava/src/com/google/common/collect/ForwardingBlockingDeque.java, + *     com.google.common.util.concurrent.ForwardingBlockingDeque} instead., +++ b/android/guava/src/com/google/common/collect/Ordering.java, +   * @deprecated Use {@link Collections#binarySearch(List, Object, Comparator)} directly., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +   *     call, or switch to a {@code HashMap<K, ArrayList<V>>}., +++ b/android/guava/src/com/google/common/collect/ForwardingBlockingDeque.java, + *     com.google.common.util.concurrent.ForwardingBlockingDeque} instead., +++ b/android/guava/src/com/google/common/collect/Ordering.java, +   * @deprecated Use {@link Collections#binarySearch(List, Object, Comparator)} directly., +++ b/android/guava/src/com/google/common/collect/Sets.java, +   * @deprecated Use {@link Collections#newSetFromMap} instead., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +   *     call, or switch to a {@code HashMap<K, ArrayList<V>>}., +++ b/android/guava/src/com/google/common/collect/ForwardingBlockingDeque.java, + *     com.google.common.util.concurrent.ForwardingBlockingDeque} instead., +++ b/android/guava/src/com/google/common/collect/Ordering.java, +   * @deprecated Use {@link Collections#binarySearch(List, Object, Comparator)} directly., +++ b/android/guava/src/com/google/common/collect/Sets.java, +   * @deprecated Use {@link Collections#newSetFromMap} instead., +++ b/android/guava/src/com/google/common/collect/TreeBasedTable.java, +   * @deprecated Use {@code table.rowKeySet().comparator()} instead., +   *     {@code ((SortedMap<C, V>) table.rowMap().values().iterator().next()).comparator();}., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +   *     call, or switch to a {@code HashMap<K, ArrayList<V>>}., +++ b/android/guava/src/com/google/common/collect/ForwardingBlockingDeque.java, + *     com.google.common.util.concurrent.ForwardingBlockingDeque} instead., +++ b/android/guava/src/com/google/common/collect/Ordering.java, +   * @deprecated Use {@link Collections#binarySearch(List, Object, Comparator)} directly., +++ b/android/guava/src/com/google/common/collect/Sets.java, +   * @deprecated Use {@link Collections#newSetFromMap} instead., +++ b/android/guava/src/com/google/common/collect/TreeBasedTable.java, +   * @deprecated Use {@code table.rowKeySet().comparator()} instead., +   *     {@code ((SortedMap<C, V>) table.rowMap().values().iterator().next()).comparator();}., +++ b/android/guava/src/com/google/common/collect/TreeMultimap.java, +   * @deprecated Use {@code ((NavigableSet<K>) multimap.keySet()).comparator()} instead., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}., +   *     null}., +   *     {@code Throwables.propagate}</a>., +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +   *     call, or switch to a {@code HashMap<K, ArrayList<V>>}., +++ b/android/guava/src/com/google/common/collect/ForwardingBlockingDeque.java, + *     com.google.common.util.concurrent.ForwardingBlockingDeque} instead., +++ b/android/guava/src/com/google/common/collect/Ordering.java, +   * @deprecated Use {@link Collections#binarySearch(List, Object, Comparator)} directly., +++ b/android/guava/src/com/google/common/collect/Sets.java, +   * @deprecated Use {@link Collections#newSetFromMap} instead., +++ b/android/guava/src/com/google/common/collect/TreeBasedTable.java, +   * @deprecated Use {@code table.rowKeySet().comparator()} instead., +   *     {@code ((SortedMap<C, V>) table.rowMap().values().iterator().next()).comparator();}., +++ b/android/guava/src/com/google/common/collect/TreeMultimap.java, +   * @deprecated Use {@code ((NavigableSet<K>) multimap.keySet()).comparator()} instead., +++ b/android/guava/src/com/google/common/io/Files.java, +   * @deprecated Prefer {@code asCharSource(file, charset).read()}., +   * @deprecated Prefer {@code asCharSink(to, charset).write(from)}., +   * @deprecated Prefer {@code asCharSink(to, charset, FileWriteMode.APPEND).write(from)}., +   * @deprecated Prefer {@code asCharSource(from, charset).copyTo(to)}., +   * @deprecated Prefer {@code asCharSource(file, charset).readFirstLine()}., +   * @deprecated Prefer {@code asCharSource(file, charset).readLines(callback)}., +   * @deprecated Prefer {@code asByteSource(file).read(processor)}., +   * @deprecated Prefer {@code asByteSource(file).hash(hashFunction)}., +++ b/android/guava/src/com/google/common/base/Throwables.java, +   *     null}.]