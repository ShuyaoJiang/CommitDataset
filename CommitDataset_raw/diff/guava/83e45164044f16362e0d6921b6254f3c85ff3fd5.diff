[+++ b/guava-tests/test/com/google/common/io/CleanPathTest.java, +import static com.google.common.io.Files.simplifyPath;, +, +    assertEquals("", simplifyPath("."));, +    assertEquals(".", simplifyPath(""));, +    assertEquals(" ", simplifyPath(" "));, +    assertEquals("x", simplifyPath("x"));, +    assertEquals("/a/b/c/d", simplifyPath("/a/b/c/d"));, +    assertEquals("/a/b/c/d", simplifyPath("/a/b/c/d/"));, +    assertEquals("/a/b", simplifyPath("/a//b"));, +    assertEquals("/a/b", simplifyPath("//a//b/"));, +    assertEquals("/", simplifyPath("/.."));, +    assertEquals("/", simplifyPath("/././././"));, +    assertEquals("/a", simplifyPath("/a/b/.."));, +    assertEquals("/", simplifyPath("/a/b/../../.."));, +    assertEquals("/", simplifyPath("//a//b/..////../..//"));, +    assertEquals("/x", simplifyPath("//a//../x//"));, +    assertEquals("../c", simplifyPath("a/b/../../../c"));, +    assertEquals("..", simplifyPath(".."));, +    assertEquals("..", simplifyPath("../"));, +    assertEquals("..", simplifyPath("a/../.."));, +    assertEquals("..", simplifyPath("a/../../"));, +    assertEquals("../..", simplifyPath("a/../../.."));, +    assertEquals("../../..", simplifyPath("a/../../../.."));, +    assertEquals("../this", simplifyPath("../this"));, +    assertEquals("../this/is/ok", simplifyPath("../this/is/ok"));, +    assertEquals("../ok", simplifyPath("../this/../ok"));, +    assertEquals("../b", simplifyPath("x/../../b"));, +    assertEquals("b", simplifyPath("x/../b"));, +    assertEquals("b", simplifyPath("./b"));, +    assertEquals("b", simplifyPath("./b/."));, +    assertEquals("b", simplifyPath("././b/./."));, +    assertEquals("b", simplifyPath("././b"));, +    assertEquals("a/b", simplifyPath("./a/b"));, +    assertEquals(".b", simplifyPath(".b"));, +    assertEquals(".b", simplifyPath("./.b"));, +    assertEquals(".metadata/b", simplifyPath(".metadata/b"));, +    assertEquals(".metadata/b", simplifyPath("./.metadata/b"));, +    assertEquals("..a", simplifyPath("..a"));, +    assertEquals("/..a", simplifyPath("/..a"));, +    assertEquals("/..a/..b", simplifyPath("/..a/..b"));, +    assertEquals("/.....a/..b", simplifyPath("/.....a/..b"));, +    assertEquals("..../....", simplifyPath("..../...."));, +    assertEquals("..a../..b..", simplifyPath("..a../..b.."));, +    assertEquals("/", simplifyPath("/."));    , +  /*, +   * We co-opt some URI resolution tests for our purposes., +   * Some of the tests have queries and anchors that are a little silly here., +   */, +  , +  /** http://gbiv.com/protocols/uri/rfc/rfc2396.html#rfc.section.C.1 */, +  public void testRfc2396Normal() {, +    assertEquals("/a/b/c/g", simplifyPath("/a/b/c/g"));, +    assertEquals("/a/b/c/g", simplifyPath("/a/b/c/./g"));, +    assertEquals("/a/b/c/g", simplifyPath("/a/b/c/g/"));, +, +    assertEquals("/a/b/c/g?y", simplifyPath("/a/b/c/g?y"));, +    assertEquals("/a/b/c/g#s", simplifyPath("/a/b/c/g#s"));, +    assertEquals("/a/b/c/g?y#s", simplifyPath("/a/b/c/g?y#s"));, +    assertEquals("/a/b/c/;x", simplifyPath("/a/b/c/;x"));, +    assertEquals("/a/b/c/g;x", simplifyPath("/a/b/c/g;x"));, +    assertEquals("/a/b/c/g;x?y#s", simplifyPath("/a/b/c/g;x?y#s"));, +    assertEquals("/a/b/c", simplifyPath("/a/b/c/."));, +    assertEquals("/a/b/c", simplifyPath("/a/b/c/./"));, +    assertEquals("/a/b", simplifyPath("/a/b/c/.."));, +    assertEquals("/a/b", simplifyPath("/a/b/c/../"));, +    assertEquals("/a/b/g", simplifyPath("/a/b/c/../g"));, +    assertEquals("/a", simplifyPath("/a/b/c/../.."));, +    assertEquals("/a", simplifyPath("/a/b/c/../../"));, +    assertEquals("/a/g", simplifyPath("/a/b/c/../../g"));, +  }, +, +  /** http://gbiv.com/protocols/uri/rfc/rfc2396.html#rfc.section.C.2 */, +  public void testRfc2396Abnormal() {, +    assertEquals("/a/b/c/g.", simplifyPath("/a/b/c/g."));, +    assertEquals("/a/b/c/.g", simplifyPath("/a/b/c/.g"));, +    assertEquals("/a/b/c/g..", simplifyPath("/a/b/c/g.."));, +    assertEquals("/a/b/c/..g", simplifyPath("/a/b/c/..g"));, +    assertEquals("/a/b/g", simplifyPath("/a/b/c/./../g"));, +    assertEquals("/a/b/c/g", simplifyPath("/a/b/c/./g/."));, +    assertEquals("/a/b/c/g/h", simplifyPath("/a/b/c/g/./h"));, +    assertEquals("/a/b/c/h", simplifyPath("/a/b/c/g/../h"));, +    assertEquals("/a/b/c/g;x=1/y", simplifyPath("/a/b/c/g;x=1/./y"));, +    assertEquals("/a/b/c/y", simplifyPath("/a/b/c/g;x=1/../y"));, +  }, +, +  /** http://gbiv.com/protocols/uri/rfc/rfc3986.html#relative-normal */, +  public void testRfc3986Normal() {, +    assertEquals("/a/b/c/g", simplifyPath("/a/b/c/g"));, +    assertEquals("/a/b/c/g", simplifyPath("/a/b/c/./g"));, +    assertEquals("/a/b/c/g", simplifyPath("/a/b/c/g/"));, +, +    assertEquals("/a/b/c/g?y", simplifyPath("/a/b/c/g?y"));, +    assertEquals("/a/b/c/g#s", simplifyPath("/a/b/c/g#s"));, +    assertEquals("/a/b/c/g?y#s", simplifyPath("/a/b/c/g?y#s"));, +    assertEquals("/a/b/c/;x", simplifyPath("/a/b/c/;x"));, +    assertEquals("/a/b/c/g;x", simplifyPath("/a/b/c/g;x"));, +    assertEquals("/a/b/c/g;x?y#s", simplifyPath("/a/b/c/g;x?y#s"));, +, +    assertEquals("/a/b/c", simplifyPath("/a/b/c/."));]