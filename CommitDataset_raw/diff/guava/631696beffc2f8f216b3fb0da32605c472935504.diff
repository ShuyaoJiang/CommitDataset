[+++ b/android/guava/src/com/google/common/base/Verify.java, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(boolean expression, @Nullable String errorMessageTemplate, char p1) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1));, +    }, +  }, +, +  /**, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(boolean expression, @Nullable String errorMessageTemplate, int p1) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1));, +    }, +  }, +, +  /**, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(boolean expression, @Nullable String errorMessageTemplate, long p1) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1));, +    }, +  }, +, +  /**, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(, +      boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1));, +    }, +  }, +, +  /**, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(, +      boolean expression, @Nullable String errorMessageTemplate, char p1, char p2) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1, p2));, +    }, +  }, +, +  /**, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(, +      boolean expression, @Nullable String errorMessageTemplate, int p1, char p2) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1, p2));, +    }, +  }, +, +  /**, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(, +      boolean expression, @Nullable String errorMessageTemplate, long p1, char p2) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1, p2));, +    }, +  }, +, +  /**, +   * Ensures that {@code expression} is {@code true}, throwing a {@code VerifyException} with a, +   * custom message otherwise., +   *, +   * <p>See {@link #verify(boolean, String, Object...)} for details., +   */, +  public static void verify(, +      boolean expression, @Nullable String errorMessageTemplate, @Nullable Object p1, char p2) {, +    if (!expression) {, +      throw new VerifyException(format(errorMessageTemplate, p1, p2));, +    }, +  }]