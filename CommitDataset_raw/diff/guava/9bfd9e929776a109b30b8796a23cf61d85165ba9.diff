[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    if (iterable1 instanceof Collection && iterable2 instanceof Collection) {, +      Collection<?> collection1 = (Collection<?>) iterable1;, +      Collection<?> collection2 = (Collection<?>) iterable2;, +      if (collection1.size() != collection2.size()) {, +        return false;, +      }, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    if (iterable1 instanceof Collection && iterable2 instanceof Collection) {, +      Collection<?> collection1 = (Collection<?>) iterable1;, +      Collection<?> collection2 = (Collection<?>) iterable2;, +      if (collection1.size() != collection2.size()) {, +        return false;, +      }, +    }, +++ b/guava-tests/test/com/google/common/collect/ListsTest.java, +    EasyMock.expect(listMock.size()).andReturn(SOME_SEQUENTIAL_LIST.size());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    if (iterable1 instanceof Collection && iterable2 instanceof Collection) {, +      Collection<?> collection1 = (Collection<?>) iterable1;, +      Collection<?> collection2 = (Collection<?>) iterable2;, +      if (collection1.size() != collection2.size()) {, +        return false;, +      }, +    }, +++ b/guava-tests/test/com/google/common/collect/ListsTest.java, +    EasyMock.expect(listMock.size()).andReturn(SOME_SEQUENTIAL_LIST.size());, +++ b/guava/src/com/google/common/collect/Iterables.java, +    if (iterable1 instanceof Collection && iterable2 instanceof Collection) {, +      Collection<?> collection1 = (Collection<?>) iterable1;, +      Collection<?> collection2 = (Collection<?>) iterable2;, +      if (collection1.size() != collection2.size()) {, +        return false;, +      }, +    }]