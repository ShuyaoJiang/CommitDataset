[+++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.incidentEdges(node)).hasSize(graph.degree(node));, +        assertThat(graph.inEdges(node)).hasSize(graph.inDegree(node));, +        assertThat(graph.outEdges(node)).hasSize(graph.outDegree(node));, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.incidentEdges(node)).hasSize(graph.degree(node));, +        assertThat(graph.inEdges(node)).hasSize(graph.inDegree(node));, +        assertThat(graph.outEdges(node)).hasSize(graph.outDegree(node));, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +  public int degree(Object node) {, +  public int inDegree(Object node) {, +  public int outDegree(Object node) {, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.incidentEdges(node)).hasSize(graph.degree(node));, +        assertThat(graph.inEdges(node)).hasSize(graph.inDegree(node));, +        assertThat(graph.outEdges(node)).hasSize(graph.outDegree(node));, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +  public int degree(Object node) {, +  public int inDegree(Object node) {, +  public int outDegree(Object node) {, +++ b/guava/src/com/google/common/graph/Graph.java, +   * to {@code node}.  If this node has more than {@code Integer.MAX_VALUE} incident edges, +   * in this graph, returns {@code Integer.MAX_VALUE}., +  int degree(Object node);, +   * of {@code node}.  If this node has more than {@code Integer.MAX_VALUE} incoming edges, +   * in this graph, returns {@code Integer.MAX_VALUE}., +  int inDegree(Object node);, +   * of {@code node}.  If this node has more than {@code Integer.MAX_VALUE} outgoing edges, +   * in this graph, returns {@code Integer.MAX_VALUE}., +  int outDegree(Object node);]