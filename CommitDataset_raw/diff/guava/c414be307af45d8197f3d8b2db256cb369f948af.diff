[+++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +++ b/guava/src/com/google/common/cache/CacheLoader.java, +   * <p>This method should be overridden when bulk retrieval is significantly more efficient than, +   * to {@link LoadingCache#get} if this method is not overridden., +++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +++ b/guava/src/com/google/common/cache/CacheLoader.java, +   * <p>This method should be overridden when bulk retrieval is significantly more efficient than, +   * to {@link LoadingCache#get} if this method is not overridden., +++ b/guava/src/com/google/common/cache/LocalCache.java, +     * Notify pending loads that a new value was set. This is only relevant to loading value, +   * {@code ReferenceEntry}, upon which it relies to perform its linking., +   * Serializes the configuration of a LocalCache, reconstituting it as a Cache using CacheBuilder, +   * Serializes the configuration of a LocalCache, reconstituting it as an LoadingCache using, +++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +++ b/guava/src/com/google/common/cache/CacheLoader.java, +   * <p>This method should be overridden when bulk retrieval is significantly more efficient than, +   * to {@link LoadingCache#get} if this method is not overridden., +++ b/guava/src/com/google/common/cache/LocalCache.java, +     * Notify pending loads that a new value was set. This is only relevant to loading value, +   * {@code ReferenceEntry}, upon which it relies to perform its linking., +   * Serializes the configuration of a LocalCache, reconstituting it as a Cache using CacheBuilder, +   * Serializes the configuration of a LocalCache, reconstituting it as an LoadingCache using, +++ b/guava/src/com/google/common/cache/RemovalListener.java, + * resulting in notification could have occurred to an entry being manually removed or replaced, or, +++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +++ b/guava/src/com/google/common/cache/CacheLoader.java, +   * <p>This method should be overridden when bulk retrieval is significantly more efficient than, +   * to {@link LoadingCache#get} if this method is not overridden., +++ b/guava/src/com/google/common/cache/LocalCache.java, +     * Notify pending loads that a new value was set. This is only relevant to loading value, +   * {@code ReferenceEntry}, upon which it relies to perform its linking., +   * Serializes the configuration of a LocalCache, reconstituting it as a Cache using CacheBuilder, +   * Serializes the configuration of a LocalCache, reconstituting it as an LoadingCache using, +++ b/guava/src/com/google/common/cache/RemovalListener.java, + * resulting in notification could have occurred to an entry being manually removed or replaced, or, +++ b/guava/src/com/google/common/collect/MapMaker.java, +   * string is not specified., +++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +++ b/guava/src/com/google/common/cache/CacheLoader.java, +   * <p>This method should be overridden when bulk retrieval is significantly more efficient than, +   * to {@link LoadingCache#get} if this method is not overridden., +++ b/guava/src/com/google/common/cache/LocalCache.java, +     * Notify pending loads that a new value was set. This is only relevant to loading value, +   * {@code ReferenceEntry}, upon which it relies to perform its linking., +   * Serializes the configuration of a LocalCache, reconstituting it as a Cache using CacheBuilder, +   * Serializes the configuration of a LocalCache, reconstituting it as an LoadingCache using, +++ b/guava/src/com/google/common/cache/RemovalListener.java, + * resulting in notification could have occurred to an entry being manually removed or replaced, or, +++ b/guava/src/com/google/common/collect/MapMaker.java, +   * string is not specified., +++ b/guava/src/com/google/common/collect/Maps.java, +   * @return a synchronized view of the specified bimap, +++ b/guava/src/com/google/common/base/Function.java, + * <p>The {@link Functions} class provides common functions and related utilities., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +   * maximumSize}{@code (0)}, ignoring any otherwise-specified maximum size or weight. This can be, +++ b/guava/src/com/google/common/cache/CacheLoader.java, +   * <p>This method should be overridden when bulk retrieval is significantly more efficient than, +   * to {@link LoadingCache#get} if this method is not overridden., +++ b/guava/src/com/google/common/cache/LocalCache.java, +     * Notify pending loads that a new value was set. This is only relevant to loading value, +   * {@code ReferenceEntry}, upon which it relies to perform its linking., +   * Serializes the configuration of a LocalCache, reconstituting it as a Cache using CacheBuilder, +   * Serializes the configuration of a LocalCache, reconstituting it as an LoadingCache using, +++ b/guava/src/com/google/common/cache/RemovalListener.java, + * resulting in notification could have occurred to an entry being manually removed or replaced, or, +++ b/guava/src/com/google/common/collect/MapMaker.java, +   * string is not specified., +++ b/guava/src/com/google/common/collect/Maps.java, +   * @return a synchronized view of the specified bimap, +++ b/guava/src/com/google/common/collect/MinMaxPriorityQueue.java, + * <li>The enqueuing and dequeuing operations ({@link #offer}, {@link #add}, and]