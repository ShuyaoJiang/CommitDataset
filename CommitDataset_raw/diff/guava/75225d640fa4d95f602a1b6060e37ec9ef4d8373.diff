[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EmptyImmutableList.java, +import java.util.List;, +, +  private EmptyImmutableList() {, +  }, +, +  @Override List<Object> delegateList() {, +    return emptyList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EmptyImmutableList.java, +import java.util.List;, +, +  private EmptyImmutableList() {, +  }, +, +  @Override List<Object> delegateList() {, +    return emptyList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ForwardingImmutableList.java, +  ForwardingImmutableList() {, +  abstract List<E> delegateList();, +, +    return delegateList().indexOf(object);, +    return delegateList().lastIndexOf(object);, +    return delegateList().get(index);, +    return unsafeDelegateList(delegateList().subList(fromIndex, toIndex));, +    return Iterators.unmodifiableListIterator(delegateList().listIterator());, +    return Iterators.unmodifiableListIterator(delegateList().listIterator(index));, +    return delegateList().toArray(new Object[size()]);, +    return delegateList().equals(obj);, +    return delegateList().hashCode();, +    return Iterators.unmodifiableIterator(delegateList().iterator());, +    return object != null && delegateList().contains(object);, +    return delegateList().containsAll(targets);, +    return delegateList().size();, +    return delegateList().isEmpty();, +    return delegateList().toArray(other);, +    return delegateList().toString();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EmptyImmutableList.java, +import java.util.List;, +, +  private EmptyImmutableList() {, +  }, +, +  @Override List<Object> delegateList() {, +    return emptyList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ForwardingImmutableList.java, +  ForwardingImmutableList() {, +  abstract List<E> delegateList();, +, +    return delegateList().indexOf(object);, +    return delegateList().lastIndexOf(object);, +    return delegateList().get(index);, +    return unsafeDelegateList(delegateList().subList(fromIndex, toIndex));, +    return Iterators.unmodifiableListIterator(delegateList().listIterator());, +    return Iterators.unmodifiableListIterator(delegateList().listIterator(index));, +    return delegateList().toArray(new Object[size()]);, +    return delegateList().equals(obj);, +    return delegateList().hashCode();, +    return Iterators.unmodifiableIterator(delegateList().iterator());, +    return object != null && delegateList().contains(object);, +    return delegateList().containsAll(targets);, +    return delegateList().size();, +    return delegateList().isEmpty();, +    return delegateList().toArray(other);, +    return delegateList().toString();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableAsList.java, + * Copyright (C) 2009 The Guava Authors, +import com.google.common.annotations.GwtCompatible;, + * List returned by {@link ImmutableCollection#asList} that delegates {@code contains} checks, + * to the backing collection., + * @author Jared Levy, + * @author Louis Wasserman, +@GwtCompatible(serializable = true, emulated = true), +@SuppressWarnings("serial"), +abstract class ImmutableAsList<E> extends ImmutableList<E> {, +  abstract ImmutableCollection<E> delegateCollection();, +, +  @Override public boolean contains(Object target) {, +    // The collection's contains() is at least as fast as ImmutableList's, +    // and is often faster., +    return delegateCollection().contains(target);, +  }, +, +  @Override, +  public int size() {, +    return delegateCollection().size();, +  }, +, +  @Override, +  public boolean isEmpty() {, +    return delegateCollection().isEmpty();, +  }, +, +  @Override, +  boolean isPartialView() {, +    return delegateCollection().isPartialView();, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EmptyImmutableList.java, +import java.util.List;, +, +  private EmptyImmutableList() {]