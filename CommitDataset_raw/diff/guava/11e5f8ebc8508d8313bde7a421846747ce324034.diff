[+++ b/android/guava-tests/test/com/google/common/hash/ChecksumHashFunctionTest.java, +  private static void assertChecksum(ImmutableSupplier<Checksum> supplier, String input) {, +  private static void assertHash32(, +      int expected, ImmutableSupplier<Checksum> supplier, String input) {, +++ b/android/guava-tests/test/com/google/common/hash/ChecksumHashFunctionTest.java, +  private static void assertChecksum(ImmutableSupplier<Checksum> supplier, String input) {, +  private static void assertHash32(, +      int expected, ImmutableSupplier<Checksum> supplier, String input) {, +++ b/android/guava/src/com/google/common/hash/AbstractCompositeHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +, +  @SuppressWarnings("Immutable") // array not modified after creation, +++ b/android/guava-tests/test/com/google/common/hash/ChecksumHashFunctionTest.java, +  private static void assertChecksum(ImmutableSupplier<Checksum> supplier, String input) {, +  private static void assertHash32(, +      int expected, ImmutableSupplier<Checksum> supplier, String input) {, +++ b/android/guava/src/com/google/common/hash/AbstractCompositeHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +, +  @SuppressWarnings("Immutable") // array not modified after creation, +++ b/android/guava/src/com/google/common/hash/AbstractHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava-tests/test/com/google/common/hash/ChecksumHashFunctionTest.java, +  private static void assertChecksum(ImmutableSupplier<Checksum> supplier, String input) {, +  private static void assertHash32(, +      int expected, ImmutableSupplier<Checksum> supplier, String input) {, +++ b/android/guava/src/com/google/common/hash/AbstractCompositeHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +, +  @SuppressWarnings("Immutable") // array not modified after creation, +++ b/android/guava/src/com/google/common/hash/AbstractHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava-tests/test/com/google/common/hash/ChecksumHashFunctionTest.java, +  private static void assertChecksum(ImmutableSupplier<Checksum> supplier, String input) {, +  private static void assertHash32(, +      int expected, ImmutableSupplier<Checksum> supplier, String input) {, +++ b/android/guava/src/com/google/common/hash/AbstractCompositeHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +, +  @SuppressWarnings("Immutable") // array not modified after creation, +++ b/android/guava/src/com/google/common/hash/AbstractHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava/src/com/google/common/hash/ChecksumHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +  private final ImmutableSupplier<? extends Checksum> checksumSupplier;, +  ChecksumHashFunction(, +      ImmutableSupplier<? extends Checksum> checksumSupplier, int bits, String toString) {, +++ b/android/guava-tests/test/com/google/common/hash/ChecksumHashFunctionTest.java, +  private static void assertChecksum(ImmutableSupplier<Checksum> supplier, String input) {, +  private static void assertHash32(, +      int expected, ImmutableSupplier<Checksum> supplier, String input) {, +++ b/android/guava/src/com/google/common/hash/AbstractCompositeHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +, +  @SuppressWarnings("Immutable") // array not modified after creation, +++ b/android/guava/src/com/google/common/hash/AbstractHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava/src/com/google/common/hash/ChecksumHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +  private final ImmutableSupplier<? extends Checksum> checksumSupplier;, +  ChecksumHashFunction(, +      ImmutableSupplier<? extends Checksum> checksumSupplier, int bits, String toString) {, +++ b/android/guava/src/com/google/common/hash/Crc32cHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +, +@Immutable, +++ b/android/guava-tests/test/com/google/common/hash/ChecksumHashFunctionTest.java, +  private static void assertChecksum(ImmutableSupplier<Checksum> supplier, String input) {, +  private static void assertHash32(, +      int expected, ImmutableSupplier<Checksum> supplier, String input) {, +++ b/android/guava/src/com/google/common/hash/AbstractCompositeHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +, +  @SuppressWarnings("Immutable") // array not modified after creation, +++ b/android/guava/src/com/google/common/hash/AbstractHashFunction.java, +import com.google.errorprone.annotations.Immutable;, +@Immutable, +++ b/android/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java, +import com.google.errorprone.annotations.Immutable;]