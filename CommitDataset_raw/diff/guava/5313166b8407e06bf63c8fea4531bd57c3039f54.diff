[+++ b/guava-gwt/test-super/com/google/common/net/super/com/google/common/net/InternetDomainNameTest.java, +import com.google.common.base.Ascii;, +import com.google.common.collect.ImmutableSet;, +  private static final ImmutableSet<String> VALID_NAME = ImmutableSet.of(, +  private static final ImmutableSet<String> INVALID_NAME = ImmutableSet.of(, +  private static final ImmutableSet<String> PS = ImmutableSet.of(, +  private static final ImmutableSet<String> NO_PS = ImmutableSet.of(, +  private static final ImmutableSet<String> NON_PS = ImmutableSet.of(, +  private static final ImmutableSet<String> TOP_PRIVATE_DOMAIN =, +      ImmutableSet.of("google.com", "foo.Co.uk", "foo.ca.us.");, +  private static final ImmutableSet<String> UNDER_PRIVATE_DOMAIN =, +      ImmutableSet.of("foo.bar.google.com", "a.b.co.uk", "x.y.ca.us");, +  private static final ImmutableSet<String> VALID_IP_ADDRS = ImmutableSet.of(, +  private static final ImmutableSet<String> INVALID_IP_ADDRS = ImmutableSet.of(, +  private static final ImmutableSet<String> SOMEWHERE_UNDER_PS =, +      ImmutableSet.of(, +    ImmutableSet<String> badCookieDomains =, +        ImmutableSet.of("co.uk", "foo", "com");, +  public void testToString() {, +    for (String inputName : SOMEWHERE_UNDER_PS) {, +      InternetDomainName domain = InternetDomainName.from(inputName);, +, +      /*, +       * We would ordinarily use constants for the expected results, but, +       * doing it by derivation allows us to reuse the test case definitions, +       * used in other tests., +       */, +, +      String expectedName = Ascii.toLowerCase(inputName);, +      expectedName = expectedName.replaceAll("[\u3002\uFF0E\uFF61]", ".");, +, +      if (expectedName.endsWith(".")) {, +        expectedName = expectedName.substring(0, expectedName.length() - 1);, +      }, +, +      assertEquals(expectedName, domain.toString());, +    }, +  }, +++ b/guava-gwt/test-super/com/google/common/net/super/com/google/common/net/InternetDomainNameTest.java, +import com.google.common.base.Ascii;, +import com.google.common.collect.ImmutableSet;, +  private static final ImmutableSet<String> VALID_NAME = ImmutableSet.of(, +  private static final ImmutableSet<String> INVALID_NAME = ImmutableSet.of(, +  private static final ImmutableSet<String> PS = ImmutableSet.of(, +  private static final ImmutableSet<String> NO_PS = ImmutableSet.of(, +  private static final ImmutableSet<String> NON_PS = ImmutableSet.of(, +  private static final ImmutableSet<String> TOP_PRIVATE_DOMAIN =, +      ImmutableSet.of("google.com", "foo.Co.uk", "foo.ca.us.");, +  private static final ImmutableSet<String> UNDER_PRIVATE_DOMAIN =, +      ImmutableSet.of("foo.bar.google.com", "a.b.co.uk", "x.y.ca.us");, +  private static final ImmutableSet<String> VALID_IP_ADDRS = ImmutableSet.of(, +  private static final ImmutableSet<String> INVALID_IP_ADDRS = ImmutableSet.of(, +  private static final ImmutableSet<String> SOMEWHERE_UNDER_PS =, +      ImmutableSet.of(, +    ImmutableSet<String> badCookieDomains =, +        ImmutableSet.of("co.uk", "foo", "com");, +  public void testToString() {, +    for (String inputName : SOMEWHERE_UNDER_PS) {, +      InternetDomainName domain = InternetDomainName.from(inputName);, +, +      /*, +       * We would ordinarily use constants for the expected results, but, +       * doing it by derivation allows us to reuse the test case definitions, +       * used in other tests., +       */, +, +      String expectedName = Ascii.toLowerCase(inputName);, +      expectedName = expectedName.replaceAll("[\u3002\uFF0E\uFF61]", ".");, +, +      if (expectedName.endsWith(".")) {, +        expectedName = expectedName.substring(0, expectedName.length() - 1);, +      }, +, +      assertEquals(expectedName, domain.toString());, +    }, +  }, +++ b/guava-gwt/test/com/google/common/net/InternetDomainNameTest_gwt.java, +public void testToString() throws Exception {, +  com.google.common.net.InternetDomainNameTest testCase = new com.google.common.net.InternetDomainNameTest();, +  testCase.testToString();, +}, +, +++ b/guava-gwt/test-super/com/google/common/net/super/com/google/common/net/InternetDomainNameTest.java, +import com.google.common.base.Ascii;, +import com.google.common.collect.ImmutableSet;, +  private static final ImmutableSet<String> VALID_NAME = ImmutableSet.of(, +  private static final ImmutableSet<String> INVALID_NAME = ImmutableSet.of(, +  private static final ImmutableSet<String> PS = ImmutableSet.of(, +  private static final ImmutableSet<String> NO_PS = ImmutableSet.of(, +  private static final ImmutableSet<String> NON_PS = ImmutableSet.of(, +  private static final ImmutableSet<String> TOP_PRIVATE_DOMAIN =, +      ImmutableSet.of("google.com", "foo.Co.uk", "foo.ca.us.");, +  private static final ImmutableSet<String> UNDER_PRIVATE_DOMAIN =, +      ImmutableSet.of("foo.bar.google.com", "a.b.co.uk", "x.y.ca.us");, +  private static final ImmutableSet<String> VALID_IP_ADDRS = ImmutableSet.of(, +  private static final ImmutableSet<String> INVALID_IP_ADDRS = ImmutableSet.of(, +  private static final ImmutableSet<String> SOMEWHERE_UNDER_PS =, +      ImmutableSet.of(, +    ImmutableSet<String> badCookieDomains =, +        ImmutableSet.of("co.uk", "foo", "com");]