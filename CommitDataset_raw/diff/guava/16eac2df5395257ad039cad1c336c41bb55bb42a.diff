[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    return Iterators.addAll(addTo, checkNotNull(elementsToAdd).iterator());, +        return getLastInNonemptyList(Lists.cast(iterable));, +          int toSkip = Math.min(list.size(), numberToSkip);, +          return list.subList(toSkip, list.size()).iterator();, +            T result = iterator.next();, +            atStart = false; // not called if next() fails, +            return result;, +            Iterators.checkRemove(!atStart);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    return Iterators.addAll(addTo, checkNotNull(elementsToAdd).iterator());, +        return getLastInNonemptyList(Lists.cast(iterable));, +          int toSkip = Math.min(list.size(), numberToSkip);, +          return list.subList(toSkip, list.size()).iterator();, +            T result = iterator.next();, +            atStart = false; // not called if next() fails, +            return result;, +            Iterators.checkRemove(!atStart);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +    checkNotNull(iterator);, +        checkRemove(removeFrom != null);, +    return concat(ImmutableList.of(a, b).iterator());, +    return concat(ImmutableList.of(a, b, c).iterator());, +    return concat(ImmutableList.of(a, b, c, d).iterator());, +        checkRemove(removeFrom != null);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    return Iterators.addAll(addTo, checkNotNull(elementsToAdd).iterator());, +        return getLastInNonemptyList(Lists.cast(iterable));, +          int toSkip = Math.min(list.size(), numberToSkip);, +          return list.subList(toSkip, list.size()).iterator();, +            T result = iterator.next();, +            atStart = false; // not called if next() fails, +            return result;, +            Iterators.checkRemove(!atStart);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +    checkNotNull(iterator);, +        checkRemove(removeFrom != null);, +    return concat(ImmutableList.of(a, b).iterator());, +    return concat(ImmutableList.of(a, b, c).iterator());, +    return concat(ImmutableList.of(a, b, c, d).iterator());, +        checkRemove(removeFrom != null);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +import com.google.common.math.IntMath;, +import java.math.RoundingMode;, +    Iterators.addAll(list, elements);, +    Iterables.addAll(list, elements);, +      checkElementIndex(index, size());, +      return IntMath.divide(list.size(), size, RoundingMode.CEILING);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    return Iterators.addAll(addTo, checkNotNull(elementsToAdd).iterator());, +        return getLastInNonemptyList(Lists.cast(iterable));, +          int toSkip = Math.min(list.size(), numberToSkip);, +          return list.subList(toSkip, list.size()).iterator();, +            T result = iterator.next();, +            atStart = false; // not called if next() fails, +            return result;, +            Iterators.checkRemove(!atStart);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +    checkNotNull(iterator);, +        checkRemove(removeFrom != null);, +    return concat(ImmutableList.of(a, b).iterator());, +    return concat(ImmutableList.of(a, b, c).iterator());, +    return concat(ImmutableList.of(a, b, c, d).iterator());, +        checkRemove(removeFrom != null);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +import com.google.common.math.IntMath;, +import java.math.RoundingMode;, +    Iterators.addAll(list, elements);, +    Iterables.addAll(list, elements);, +      checkElementIndex(index, size());, +      return IntMath.divide(list.size(), size, RoundingMode.CEILING);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +    Iterators.addAll(set, elements);, +    Iterables.addAll(set, elements);, +    Iterables.addAll(set, elements);, +      return Iterators.removeAll(set.iterator(), collection);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +    return Iterators.addAll(addTo, checkNotNull(elementsToAdd).iterator());, +        return getLastInNonemptyList(Lists.cast(iterable));, +          int toSkip = Math.min(list.size(), numberToSkip);, +          return list.subList(toSkip, list.size()).iterator();, +            T result = iterator.next();, +            atStart = false; // not called if next() fails, +            return result;, +            Iterators.checkRemove(!atStart);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +    checkNotNull(iterator);, +        checkRemove(removeFrom != null);, +    return concat(ImmutableList.of(a, b).iterator());, +    return concat(ImmutableList.of(a, b, c).iterator());, +    return concat(ImmutableList.of(a, b, c, d).iterator());, +        checkRemove(removeFrom != null);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +import com.google.common.math.IntMath;, +import java.math.RoundingMode;, +    Iterators.addAll(list, elements);, +    Iterables.addAll(list, elements);, +      checkElementIndex(index, size());, +      return IntMath.divide(list.size(), size, RoundingMode.CEILING);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java]