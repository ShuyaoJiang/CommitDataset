[+++ b/android/guava-testlib/src/com/google/common/collect/testing/TestsForMapsInJavaUtil.java, +    return asList(, +        MapEntrySetTester.getSetValueMethod(),, +        MapEntrySetTester.getSetValueWithNullValuesAbsentMethod(),, +        MapEntrySetTester.getSetValueWithNullValuesPresentMethod());, +++ b/android/guava-testlib/src/com/google/common/collect/testing/TestsForMapsInJavaUtil.java, +    return asList(, +        MapEntrySetTester.getSetValueMethod(),, +        MapEntrySetTester.getSetValueWithNullValuesAbsentMethod(),, +        MapEntrySetTester.getSetValueWithNullValuesPresentMethod());, +++ b/android/guava-testlib/src/com/google/common/collect/testing/testers/MapEntrySetTester.java, +  @MapFeature.Require({SUPPORTS_PUT, ALLOWS_NULL_VALUES}), +  @CollectionSize.Require(absent = ZERO), +  public void testSetValueWithNullValuesPresent() {, +    for (Entry<K, V> entry : getMap().entrySet()) {, +      if (entry.getKey().equals(k0())) {, +        assertEquals("entry.setValue() should return the old value", v0(), entry.setValue(null));, +        break;, +      }, +    }, +    expectReplacement(entry(k0(), (V) null));, +  }, +, +  @MapFeature.Require(value = SUPPORTS_PUT, absent = ALLOWS_NULL_VALUES), +  @CollectionSize.Require(absent = ZERO), +  public void testSetValueWithNullValuesAbsent() {, +    for (Entry<K, V> entry : getMap().entrySet()) {, +      try {, +        entry.setValue(null);, +        fail("Expected NullPointerException");, +      } catch (NullPointerException exception) {, +        break;, +      }, +    }, +    expectUnchanged();, +  }, +, +, +  @GwtIncompatible // reflection, +  public static Method getSetValueWithNullValuesPresentMethod() {, +    return Helpers.getMethod(MapEntrySetTester.class, "testSetValueWithNullValuesPresent");, +  }, +, +  @GwtIncompatible // reflection, +  public static Method getSetValueWithNullValuesAbsentMethod() {, +    return Helpers.getMethod(MapEntrySetTester.class, "testSetValueWithNullValuesAbsent");, +  }, +++ b/android/guava-testlib/src/com/google/common/collect/testing/TestsForMapsInJavaUtil.java, +    return asList(, +        MapEntrySetTester.getSetValueMethod(),, +        MapEntrySetTester.getSetValueWithNullValuesAbsentMethod(),, +        MapEntrySetTester.getSetValueWithNullValuesPresentMethod());, +++ b/android/guava-testlib/src/com/google/common/collect/testing/testers/MapEntrySetTester.java, +  @MapFeature.Require({SUPPORTS_PUT, ALLOWS_NULL_VALUES}), +  @CollectionSize.Require(absent = ZERO), +  public void testSetValueWithNullValuesPresent() {, +    for (Entry<K, V> entry : getMap().entrySet()) {, +      if (entry.getKey().equals(k0())) {, +        assertEquals("entry.setValue() should return the old value", v0(), entry.setValue(null));, +        break;, +      }, +    }, +    expectReplacement(entry(k0(), (V) null));, +  }, +, +  @MapFeature.Require(value = SUPPORTS_PUT, absent = ALLOWS_NULL_VALUES), +  @CollectionSize.Require(absent = ZERO), +  public void testSetValueWithNullValuesAbsent() {, +    for (Entry<K, V> entry : getMap().entrySet()) {, +      try {, +        entry.setValue(null);, +        fail("Expected NullPointerException");, +      } catch (NullPointerException exception) {, +        break;, +      }, +    }, +    expectUnchanged();, +  }, +, +, +  @GwtIncompatible // reflection, +  public static Method getSetValueWithNullValuesPresentMethod() {, +    return Helpers.getMethod(MapEntrySetTester.class, "testSetValueWithNullValuesPresent");, +  }, +, +  @GwtIncompatible // reflection, +  public static Method getSetValueWithNullValuesAbsentMethod() {, +    return Helpers.getMethod(MapEntrySetTester.class, "testSetValueWithNullValuesAbsent");, +  }, +++ b/android/guava-testlib/test/com/google/common/collect/testing/MapTestSuiteBuilderTests.java, +import java.util.AbstractSet;, +import java.util.Collection;, +import java.util.Iterator;, +, +                return new EntrySet();, +              }, +, +              @Override, +              public int hashCode() {, +                return map.hashCode();]