[+++ b/guava-gwt/test/com/google/common/net/HostAndPortTest_gwt.java, +public void testFromHost() throws Exception {, +  com.google.common.net.HostAndPortTest testCase = new com.google.common.net.HostAndPortTest();, +  testCase.testFromHost();, +}, +, +++ b/guava-gwt/test/com/google/common/net/HostAndPortTest_gwt.java, +public void testFromHost() throws Exception {, +  com.google.common.net.HostAndPortTest testCase = new com.google.common.net.HostAndPortTest();, +  testCase.testFromHost();, +}, +, +++ b/guava-tests/test/com/google/common/net/HostAndPortTest.java, +  public void testFromHost() {, +    HostAndPort hp = HostAndPort.fromHost("gmail.com");, +    assertEquals("gmail.com", hp.getHostText());, +    assertFalse(hp.hasPort());, +, +    hp = HostAndPort.fromHost("[::1]");, +    assertEquals("::1", hp.getHostText());, +    assertFalse(hp.hasPort());, +, +    try {, +      HostAndPort.fromHost("gmail.com:80");, +      fail("Expected IllegalArgumentException");, +    } catch (IllegalArgumentException expected) {, +    }, +, +    try {, +      HostAndPort.fromHost("[gmail.com]");, +      fail("Expected IllegalArgumentException");, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +++ b/guava-gwt/test/com/google/common/net/HostAndPortTest_gwt.java, +public void testFromHost() throws Exception {, +  com.google.common.net.HostAndPortTest testCase = new com.google.common.net.HostAndPortTest();, +  testCase.testFromHost();, +}, +, +++ b/guava-tests/test/com/google/common/net/HostAndPortTest.java, +  public void testFromHost() {, +    HostAndPort hp = HostAndPort.fromHost("gmail.com");, +    assertEquals("gmail.com", hp.getHostText());, +    assertFalse(hp.hasPort());, +, +    hp = HostAndPort.fromHost("[::1]");, +    assertEquals("::1", hp.getHostText());, +    assertFalse(hp.hasPort());, +, +    try {, +      HostAndPort.fromHost("gmail.com:80");, +      fail("Expected IllegalArgumentException");, +    } catch (IllegalArgumentException expected) {, +    }, +, +    try {, +      HostAndPort.fromHost("[gmail.com]");, +      fail("Expected IllegalArgumentException");, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +++ b/guava/src/com/google/common/net/HostAndPort.java, +   * Build a HostAndPort instance from a host only., +   *, +   * <p>Note: Non-bracketed IPv6 literals are allowed., +   * Use {@link #requireBracketsForIPv6()} to prohibit these., +   *, +   * @param host the host-only string to parse.  Must not contain a port number., +   * @return if parsing was successful, a populated HostAndPort object., +   * @throws IllegalArgumentException if {@code host} contains a port number., +   * @since 17.0, +   */, +  public static HostAndPort fromHost(String host) {, +    HostAndPort parsedHost = fromString(host);, +    checkArgument(!parsedHost.hasPort(), "Host has a port: %s", host);, +    return parsedHost;, +  }, +, +  /**, +    // "[]:12345" requires 8 extra bytes., +    StringBuilder builder = new StringBuilder(host.length() + 8);]