[+++ b/guava-tests/test/com/google/common/io/LittleEndianDataInputStreamTest.java, +import com.google.testing.util.MoreAsserts;, +, +import java.io.EOFException;, +  private byte[] data;, +, +  @Override, +  protected void setUp() throws Exception {, +    super.setUp();, +    , +    initializeData(out);, +, +    data = baos.toByteArray();, +  }, +, +  private void initializeData(DataOutputStream out) throws IOException {, +  }, +  public void testReadFully() throws IOException {, +    DataInput in = new LittleEndianDataInputStream(new ByteArrayInputStream(data));, +    byte[] b = new byte[data.length];, +    in.readFully(b);, +    MoreAsserts.assertEquals(data, b);, +  }, +  public void testReadUnsignedByte_eof() throws IOException {, +    DataInput in = new LittleEndianDataInputStream(new ByteArrayInputStream(new byte[0]));, +    try {, +      in.readUnsignedByte();, +      fail();, +    } catch (EOFException expected) {, +    }, +  }, +  , +  public void testReadUnsignedShort_eof() throws IOException {, +    byte[] buf = {23};, +    DataInput in = new LittleEndianDataInputStream(new ByteArrayInputStream(buf));, +    try {, +      in.readUnsignedShort();, +      fail();, +    } catch (EOFException expected) {}, +  }, +  , +  public void testReadLine() throws IOException {, +    DataInput in = new LittleEndianDataInputStream(new ByteArrayInputStream(data));, +    try {, +      in.readLine();, +      fail();, +    } catch (UnsupportedOperationException expected) {, +      assertEquals("readLine is not supported", expected.getMessage()); , +    }, +  }, +  , +  public void testReadLittleEndian() throws IOException {, +    DataInput in = new LittleEndianDataInputStream(new ByteArrayInputStream(data));, +  , +  public void testSkipBytes() throws IOException {, +    ByteArrayOutputStream baos = new ByteArrayOutputStream();, +    DataOutputStream out = new DataOutputStream(baos);, +, +    /* Write out various test values NORMALLY */, +    out.write(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}); // 10 bytes of junk to skip, +    initializeData(out);, +, +    byte[] data = baos.toByteArray();, +, +    DataInput in = new LittleEndianDataInputStream(new ByteArrayInputStream(data));, +    int bytesSkipped = 0;, +    while (bytesSkipped < 10) {, +      bytesSkipped += in.skipBytes(10 - bytesSkipped);, +    }, +    , +    /* Read in various values in LITTLE ENDIAN FORMAT */, +    byte[] b = new byte[2];, +    in.readFully(b);, +    assertEquals(-100, b[0]);, +    assertEquals(100, b[1]);, +    assertTrue(in.readBoolean());, +    assertFalse(in.readBoolean());, +  }]