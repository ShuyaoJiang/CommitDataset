[+++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultimapTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultimapTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedListMultimapTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/MultimapsTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/MultimapsTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/TreeMultimapExplicitTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/MultimapsTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/TreeMultimapExplicitTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/TreeMultimapNaturalTest_gwt.java, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultimapTest.java, +++ b/guava-gwt/test/com/google/common/collect/ArrayListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/ConstrainedSetMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedListMultimapTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/MultimapsTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/TreeMultimapExplicitTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/TreeMultimapNaturalTest_gwt.java, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MultimapReplaceValuesTester.java, +import static com.google.common.collect.testing.features.MapFeature.ALLOWS_NULL_KEYS;, +import static com.google.common.collect.testing.features.MapFeature.ALLOWS_NULL_VALUES;, +import java.util.ArrayList;, +, +  @MapFeature.Require({SUPPORTS_PUT, SUPPORTS_REMOVE, ALLOWS_NULL_VALUES}), +  public void testReplaceValuesWithNullValue() {, +    int size = multimap().size();, +    K key = sampleKeys().e0;, +    @SuppressWarnings("unchecked"), +    List<V> values = Arrays.asList(sampleValues().e0, null, sampleValues().e3);, +    multimap().replaceValues(key, values);, +    assertGet(key, values);, +  }, +  , +  @MapFeature.Require({SUPPORTS_PUT, SUPPORTS_REMOVE, ALLOWS_NULL_KEYS}), +  public void testReplaceValuesWithNullKey() {, +    int size = multimap().size();, +    K key = null;, +    @SuppressWarnings("unchecked"), +    List<V> values = Arrays.asList(sampleValues().e0, sampleValues().e2, sampleValues().e3);, +    multimap().replaceValues(key, values);, +    assertGet(key, values);, +  }, +  , +  @MapFeature.Require({SUPPORTS_PUT, SUPPORTS_REMOVE}), +  public void testReplaceValuesWithEmpty() {, +    int size = multimap().size();, +    K key = sampleKeys().e0;, +    List<V> oldValues = new ArrayList<V>(multimap().get(key));, +    @SuppressWarnings("unchecked"), +    List<V> values = Collections.emptyList();, +    assertEquals(oldValues, new ArrayList<V>(multimap().replaceValues(key, values)));, +    assertGet(key);, +    assertEquals(size - oldValues.size(), multimap().size());, +  }, +  , +  @MapFeature.Require({SUPPORTS_PUT, SUPPORTS_REMOVE}), +  public void testReplaceValuesWithDuplicates() {, +    int size = multimap().size();, +    K key = sampleKeys().e0;, +    List<V> oldValues = new ArrayList<V>(multimap().get(key));, +    List<V> values = Arrays.asList(, +        sampleValues().e0,, +        sampleValues().e3,, +        sampleValues().e0);]