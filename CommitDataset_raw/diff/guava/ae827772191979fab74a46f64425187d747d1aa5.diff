[+++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/Utf8Test.java, +  public void testLength_validStrings() {, +    assertEquals(0, Utf8.length(""));, +    assertEquals(11, Utf8.length("Hello world"));, +    assertEquals(8, Utf8.length("Résumé"));, +    assertEquals(461, Utf8.length("威廉·莎士比亞（William Shakespeare，", +    assertEquals(4, Utf8.length(, +  public void testLength_invalidStrings() {, +    testLengthFails(newString(Character.MIN_HIGH_SURROGATE), 0);, +    testLengthFails("foobar" + newString(Character.MIN_HIGH_SURROGATE), 6);, +    testLengthFails(newString(Character.MIN_LOW_SURROGATE), 0);, +    testLengthFails("foobar" + newString(Character.MIN_LOW_SURROGATE), 6);, +    testLengthFails(, +  private static void testLengthFails(String invalidString,, +      Utf8.length(invalidString);, +    } catch (IllegalArgumentException expected) {, +      assertEquals("Unpaired surrogate at index " + invalidCodePointIndex,, +          expected.getMessage());, +, +  public void testIsWellFormed_4BytesSamples() {, +    assertWellFormed(0xF0, 0xA4, 0xAD, 0xA2);, +    assertNotWellFormed(0xF0, 0xA4, 0xAD, 0x7F);, +    assertNotWellFormed(0xF0, 0xA4, 0xAD, 0xC0);, +    assertNotWellFormed(0xF0, 0x8F, 0xAD, 0xA2);, +    assertNotWellFormed(0xF4, 0x90, 0xAD, 0xA2);, +    assertWellFormed();, +    assertWellFormed(0x00, 0x61, 0x62, 0x63, 0x7F); // "\u0000abc\u007f", +    assertWellFormed(0xC2, 0xA2, 0xC2, 0xA2); // "\u00a2\u00a2", +    assertWellFormed(0xc8, 0x8a, 0x63, 0xc8, 0x8a, 0x63); // "\u020ac\u020ac", +    assertWellFormed(0xc9, 0x8b, 0x36, 0x32, 0xc9, 0x8b, 0x36, 0x32);, +    assertWellFormed(0x61, 0xc8, 0x8a, 0x63, 0xc2, 0xa2, 0x62, 0x5c, 0x75, 0x30,, +    assertNotWellFormed(-1, 0, -1, 0);, +  private void assertWellFormed(int... bytes) {, +    assertTrue(Utf8.isWellFormed(toByteArray(bytes)));, +  private void assertNotWellFormed(int... bytes) {, +    assertFalse(Utf8.isWellFormed(toByteArray(bytes)));, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/Utf8Test.java, +  public void testLength_validStrings() {, +    assertEquals(0, Utf8.length(""));, +    assertEquals(11, Utf8.length("Hello world"));, +    assertEquals(8, Utf8.length("Résumé"));, +    assertEquals(461, Utf8.length("威廉·莎士比亞（William Shakespeare，", +    assertEquals(4, Utf8.length(, +  public void testLength_invalidStrings() {, +    testLengthFails(newString(Character.MIN_HIGH_SURROGATE), 0);, +    testLengthFails("foobar" + newString(Character.MIN_HIGH_SURROGATE), 6);, +    testLengthFails(newString(Character.MIN_LOW_SURROGATE), 0);, +    testLengthFails("foobar" + newString(Character.MIN_LOW_SURROGATE), 6);, +    testLengthFails(, +  private static void testLengthFails(String invalidString,, +      Utf8.length(invalidString);, +    } catch (IllegalArgumentException expected) {, +      assertEquals("Unpaired surrogate at index " + invalidCodePointIndex,, +          expected.getMessage());, +, +  public void testIsWellFormed_4BytesSamples() {, +    assertWellFormed(0xF0, 0xA4, 0xAD, 0xA2);, +    assertNotWellFormed(0xF0, 0xA4, 0xAD, 0x7F);, +    assertNotWellFormed(0xF0, 0xA4, 0xAD, 0xC0);, +    assertNotWellFormed(0xF0, 0x8F, 0xAD, 0xA2);, +    assertNotWellFormed(0xF4, 0x90, 0xAD, 0xA2);, +    assertWellFormed();, +    assertWellFormed(0x00, 0x61, 0x62, 0x63, 0x7F); // "\u0000abc\u007f", +    assertWellFormed(0xC2, 0xA2, 0xC2, 0xA2); // "\u00a2\u00a2", +    assertWellFormed(0xc8, 0x8a, 0x63, 0xc8, 0x8a, 0x63); // "\u020ac\u020ac", +    assertWellFormed(0xc9, 0x8b, 0x36, 0x32, 0xc9, 0x8b, 0x36, 0x32);, +    assertWellFormed(0x61, 0xc8, 0x8a, 0x63, 0xc2, 0xa2, 0x62, 0x5c, 0x75, 0x30,, +    assertNotWellFormed(-1, 0, -1, 0);, +  private void assertWellFormed(int... bytes) {, +    assertTrue(Utf8.isWellFormed(toByteArray(bytes)));, +  private void assertNotWellFormed(int... bytes) {, +    assertFalse(Utf8.isWellFormed(toByteArray(bytes)));, +++ b/guava-gwt/test/com/google/common/base/Utf8Test_gwt.java, +public void testIsWellFormed_4BytesSamples() throws Exception {, +  testCase.testIsWellFormed_4BytesSamples();, +}, +, +public void testLength_invalidStrings() throws Exception {, +  com.google.common.base.Utf8Test testCase = new com.google.common.base.Utf8Test();, +  testCase.testLength_invalidStrings();, +}, +, +public void testLength_validStrings() throws Exception {, +  com.google.common.base.Utf8Test testCase = new com.google.common.base.Utf8Test();, +  testCase.testLength_validStrings();, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/Utf8Test.java, +  public void testLength_validStrings() {, +    assertEquals(0, Utf8.length(""));, +    assertEquals(11, Utf8.length("Hello world"));, +    assertEquals(8, Utf8.length("Résumé"));, +    assertEquals(461, Utf8.length("威廉·莎士比亞（William Shakespeare，", +    assertEquals(4, Utf8.length(, +  public void testLength_invalidStrings() {, +    testLengthFails(newString(Character.MIN_HIGH_SURROGATE), 0);, +    testLengthFails("foobar" + newString(Character.MIN_HIGH_SURROGATE), 6);, +    testLengthFails(newString(Character.MIN_LOW_SURROGATE), 0);, +    testLengthFails("foobar" + newString(Character.MIN_LOW_SURROGATE), 6);, +    testLengthFails(, +  private static void testLengthFails(String invalidString,, +      Utf8.length(invalidString);]