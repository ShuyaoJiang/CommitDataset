[+++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-tests/test/com/google/common/io/CountingInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // calling read() to skip a byte, +++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-tests/test/com/google/common/io/CountingInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // calling read() to skip a byte, +++ b/guava-tests/test/com/google/common/io/IoTestCase.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +  @CanIgnoreReturnValue, +++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-tests/test/com/google/common/io/CountingInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // calling read() to skip a byte, +++ b/guava-tests/test/com/google/common/io/IoTestCase.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +  @CanIgnoreReturnValue, +++ b/guava-tests/test/com/google/common/io/MultiInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // these calls to skip always return 0, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(0));, +++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-tests/test/com/google/common/io/CountingInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // calling read() to skip a byte, +++ b/guava-tests/test/com/google/common/io/IoTestCase.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +  @CanIgnoreReturnValue, +++ b/guava-tests/test/com/google/common/io/MultiInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // these calls to skip always return 0, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(0));, +++ b/guava-tests/test/com/google/common/io/SourceSinkFactories.java, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-tests/test/com/google/common/io/CountingInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // calling read() to skip a byte, +++ b/guava-tests/test/com/google/common/io/IoTestCase.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +  @CanIgnoreReturnValue, +++ b/guava-tests/test/com/google/common/io/MultiInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // these calls to skip always return 0, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(0));, +++ b/guava-tests/test/com/google/common/io/SourceSinkFactories.java, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +++ b/guava/src/com/google/common/io/BaseEncoding.java, +   */ final byte[] decodeChecked(CharSequence chars), +++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-tests/test/com/google/common/io/CountingInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // calling read() to skip a byte, +++ b/guava-tests/test/com/google/common/io/IoTestCase.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +  @CanIgnoreReturnValue, +++ b/guava-tests/test/com/google/common/io/MultiInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // these calls to skip always return 0, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(0));, +++ b/guava-tests/test/com/google/common/io/SourceSinkFactories.java, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +++ b/guava/src/com/google/common/io/BaseEncoding.java, +   */ final byte[] decodeChecked(CharSequence chars), +++ b/guava/src/com/google/common/io/ByteArrayDataInput.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +  // not guaranteed to skip n bytes so result should NOT be ignored, +  // use ByteStreams.skipFully or one of the read methods instead, +  @CanIgnoreReturnValue // to skip a byte, +  @CanIgnoreReturnValue // to skip a byte, +  @CanIgnoreReturnValue // to skip a byte, +  @CanIgnoreReturnValue // to skip some bytes, +  @CanIgnoreReturnValue // to skip some bytes, +  @CanIgnoreReturnValue // to skip some bytes, +  @CanIgnoreReturnValue // to skip some bytes, +  @CanIgnoreReturnValue // to skip some bytes, +  @CanIgnoreReturnValue // to skip some bytes, +  @CanIgnoreReturnValue // to skip some bytes, +  @CanIgnoreReturnValue // to skip a line, +  @CanIgnoreReturnValue // to skip a field, +++ b/guava-gwt/src/com/google/common/io/Io.gwt.xml, +++ b/guava-tests/test/com/google/common/io/CountingInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // calling read() to skip a byte, +++ b/guava-tests/test/com/google/common/io/IoTestCase.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +  @CanIgnoreReturnValue, +++ b/guava-tests/test/com/google/common/io/MultiInputStreamTest.java, +  @SuppressWarnings("CheckReturnValue") // these calls to skip always return 0, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(-1));, +    assertEquals(0, multi.skip(0));, +++ b/guava-tests/test/com/google/common/io/SourceSinkFactories.java, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +    @SuppressWarnings("CheckReturnValue") // only using super.createSource to create a file, +++ b/guava/src/com/google/common/io/BaseEncoding.java, +   */ final byte[] decodeChecked(CharSequence chars), +++ b/guava/src/com/google/common/io/ByteArrayDataInput.java]