[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +  }, +, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +  }, +, +++ b/guava-gwt/src-super/com/google/common/math/super/com/google/common/math/IntMath.java, +      default:, +        // continue below to handle the general case, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +  }, +, +++ b/guava-gwt/src-super/com/google/common/math/super/com/google/common/math/IntMath.java, +      default:, +        // continue below to handle the general case, +++ b/guava/src/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +      case 2:, +      default:, +        return isSmall(totalCharacters, table.length()), +            ? SmallCharMatcher.from(table, description), +            : new BitSetMatcher(table, description);, +, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +  }, +, +++ b/guava-gwt/src-super/com/google/common/math/super/com/google/common/math/IntMath.java, +      default:, +        // continue below to handle the general case, +++ b/guava/src/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +      case 2:, +      default:, +        return isSmall(totalCharacters, table.length()), +            ? SmallCharMatcher.from(table, description), +            : new BitSetMatcher(table, description);, +, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +      case 1:, +      default:, +        // continue below to handle the general case, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +  }, +, +++ b/guava-gwt/src-super/com/google/common/math/super/com/google/common/math/IntMath.java, +      default:, +        // continue below to handle the general case, +++ b/guava/src/com/google/common/base/CharMatcher.java, +      default:, +        // continue below to handle the general case, +      case 2:, +      default:, +        return isSmall(totalCharacters, table.length()), +            ? SmallCharMatcher.from(table, description), +            : new BitSetMatcher(table, description);, +, +  private static boolean isSmall(int totalCharacters, int tableLength) {, +    return totalCharacters <= SmallCharMatcher.MAX_SIZE, +        && tableLength > (totalCharacters * Character.SIZE);, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +      case 1:, +      default:, +        // continue below to handle the general case, +++ b/guava/src/com/google/common/math/IntMath.java, +      default:, +        // continue below to handle the general case, +      default:]