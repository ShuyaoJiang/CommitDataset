[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSet.java, +  // This declaration is needed to make Set.iterator() and, +  // ImmutableCollection.iterator() appear consistent to javac's type inference., +  @Override, +  public abstract UnmodifiableIterator<E> iterator();, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSet.java, +  // This declaration is needed to make Set.iterator() and, +  // ImmutableCollection.iterator() appear consistent to javac's type inference., +  @Override, +  public abstract UnmodifiableIterator<E> iterator();, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +, +import jsinterop.annotations.JsFunction;, +import jsinterop.annotations.JsMethod;, +import jsinterop.annotations.JsPackage;, +      setTimeout(new Callback() {, +      }, (int) expirationMillis);, +    @JsFunction, +    private interface Callback {, +      void run();, +    }, +, +    // TODO(user): Move this logic to a common location., +    @JsMethod(name = "setTimeout", namespace = JsPackage.GLOBAL), +    private static native void setTimeout(Callback callback, int delayInMs);, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSet.java, +  // This declaration is needed to make Set.iterator() and, +  // ImmutableCollection.iterator() appear consistent to javac's type inference., +  @Override, +  public abstract UnmodifiableIterator<E> iterator();, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +, +import jsinterop.annotations.JsFunction;, +import jsinterop.annotations.JsMethod;, +import jsinterop.annotations.JsPackage;, +      setTimeout(new Callback() {, +      }, (int) expirationMillis);, +    @JsFunction, +    private interface Callback {, +      void run();, +    }, +, +    // TODO(user): Move this logic to a common location., +    @JsMethod(name = "setTimeout", namespace = JsPackage.GLOBAL), +    private static native void setTimeout(Callback callback, int delayInMs);, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Platform.java, +import jsinterop.annotations.JsPackage;, +import jsinterop.annotations.JsProperty;, +import jsinterop.annotations.JsType;, +, +  private static void resizeArray(Object array, int newSize) {, +    ((NativeArray) array).setLength(newSize);, +  }, +, +  // TODO(user): Move this logic to a utility class., +  @JsType(isNative = true, name = "Array", namespace = JsPackage.GLOBAL), +  private interface NativeArray {, +    @JsProperty, +    void setLength(int length);, +  }]