[+++ b/guava-gwt/test/com/google/common/collect/EvictingQueueTest_gwt.java, +public void testAddAll_largeList() throws Exception {, +  com.google.common.collect.EvictingQueueTest testCase = new com.google.common.collect.EvictingQueueTest();, +  testCase.testAddAll_largeList();, +}, +, +++ b/guava-gwt/test/com/google/common/collect/EvictingQueueTest_gwt.java, +public void testAddAll_largeList() throws Exception {, +  com.google.common.collect.EvictingQueueTest testCase = new com.google.common.collect.EvictingQueueTest();, +  testCase.testAddAll_largeList();, +}, +, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +import java.util.AbstractList;, +import java.util.List;, +    assertTrue(queue.addAll(ImmutableList.of("one", "two", "three")));, +    assertTrue(queue.addAll(ImmutableList.of("four")));, +  public void testAddAll_largeList() {, +    final List<String> list = ImmutableList.of("one", "two", "three", "four", "five");, +    List<String> misbehavingList =, +        new AbstractList<String>() {, +          @Override, +          public int size() {, +            return list.size();, +          }, +, +          @Override, +          public String get(int index) {, +            if (index < 2) {, +              throw new AssertionError();, +            }, +            return list.get(index);, +          }, +        };, +, +    EvictingQueue<String> queue = EvictingQueue.create(3);, +    assertTrue(queue.addAll(misbehavingList));, +, +    assertEquals("three", queue.remove());, +    assertEquals("four", queue.remove());, +    assertEquals("five", queue.remove());, +    assertTrue(queue.isEmpty());, +  }, +, +++ b/guava-gwt/test/com/google/common/collect/EvictingQueueTest_gwt.java, +public void testAddAll_largeList() throws Exception {, +  com.google.common.collect.EvictingQueueTest testCase = new com.google.common.collect.EvictingQueueTest();, +  testCase.testAddAll_largeList();, +}, +, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +import java.util.AbstractList;, +import java.util.List;, +    assertTrue(queue.addAll(ImmutableList.of("one", "two", "three")));, +    assertTrue(queue.addAll(ImmutableList.of("four")));, +  public void testAddAll_largeList() {, +    final List<String> list = ImmutableList.of("one", "two", "three", "four", "five");, +    List<String> misbehavingList =, +        new AbstractList<String>() {, +          @Override, +          public int size() {, +            return list.size();, +          }, +, +          @Override, +          public String get(int index) {, +            if (index < 2) {, +              throw new AssertionError();, +            }, +            return list.get(index);, +          }, +        };, +, +    EvictingQueue<String> queue = EvictingQueue.create(3);, +    assertTrue(queue.addAll(misbehavingList));, +, +    assertEquals("three", queue.remove());, +    assertEquals("four", queue.remove());, +    assertEquals("five", queue.remove());, +    assertTrue(queue.isEmpty());, +  }, +, +++ b/guava/src/com/google/common/collect/EvictingQueue.java, +    int size = collection.size();, +    if (size >= maxSize) {, +      clear();, +      return Iterables.addAll(this, Iterables.skip(collection, size - maxSize));, +    }]