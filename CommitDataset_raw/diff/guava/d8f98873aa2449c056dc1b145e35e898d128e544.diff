[+++ /dev/null, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return ImmutableBiMap.of();, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return ImmutableBiMap.of();, +++ /dev/null, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return ImmutableBiMap.of();, +++ /dev/null, +++ b/guava/src/com/google/common/collect/EmptyImmutableBiMap.java, +import java.util.Map;, +, +import javax.annotation.Nullable;, +, +  , +  @Override, +  public int size() {, +    return 0;, +  }, +, +  @Override, +  public ImmutableSet<Object> values() {, +    return ImmutableSet.of();, +  }, +, +  @Override, +  public boolean isEmpty() {, +    return true;, +  }, +, +  @Override, +  public boolean containsKey(@Nullable Object key) {, +, +  @Override, +  public boolean containsValue(@Nullable Object value) {, +    return false;, +  }, +, +  @Override, +  public Object get(@Nullable Object key) {, +    return null;, +  }, +, +  @Override, +  public ImmutableSet<Entry<Object, Object>> entrySet() {, +    return ImmutableSet.of();, +  }, +, +  @Override, +  ImmutableSet<Entry<Object, Object>> createEntrySet() {, +    throw new AssertionError("should never be called");, +  }, +, +  @Override, +  public ImmutableSet<Object> keySet() {, +    return ImmutableSet.of();, +  }, +, +  @Override, +  public boolean equals(@Nullable Object object) {, +    if (object instanceof Map) {, +      Map<?, ?> map = (Map<?, ?>) object;, +      return map.isEmpty();, +    }, +    return false;, +  }, +, +  @Override, +  public int hashCode() {, +    return 0;, +  }, +, +  @Override, +  boolean isPartialView() {, +    return false;, +  }, +  , +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return ImmutableBiMap.of();, +++ /dev/null, +++ b/guava/src/com/google/common/collect/EmptyImmutableBiMap.java, +import java.util.Map;, +, +import javax.annotation.Nullable;, +, +  , +  @Override, +  public int size() {, +    return 0;, +  }, +, +  @Override, +  public ImmutableSet<Object> values() {, +    return ImmutableSet.of();, +  }, +]