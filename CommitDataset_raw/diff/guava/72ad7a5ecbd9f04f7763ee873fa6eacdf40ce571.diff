[+++ b/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java, +    validateNetwork(network);, +  }, +, +  static <N, E> void validateNetwork(Network<N, E> network) {, +    Graph<N, Set<E>> asGraph = network.asGraph();, +    for (E edge : network.edges()) {, +      assertThat(edgeString).contains(edge.toString());, +      Endpoints<N> endpoints = network.incidentNodes(edge);, +      N nodeA = endpoints.nodeA();, +      N nodeB = endpoints.nodeB();, +      for (N incidentNode : ImmutableSet.of(, +        for (E adjacentEdge : network.incidentEdges(incidentNode)) {, +    for (N node : network.nodes()) {, +      for (N otherNode : network.nodes()) {, +        Set<E> edgesConnecting = network.edgesConnecting(node, otherNode);, +        for (E edge : edgesConnecting) {, +      for (E incidentEdge : network.incidentEdges(node)) {, +      for (E inEdge : network.inEdges(node)) {, +      for (E outEdge : network.outEdges(node)) {, +      for (N adjacentNode : network.adjacentNodes(node)) {, +      for (N predecessor : network.predecessors(node)) {, +      for (N successor : network.successors(node)) {]