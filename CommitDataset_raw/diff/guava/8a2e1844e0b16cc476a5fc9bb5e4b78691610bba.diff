[+++ b/guava/src/com/google/common/graph/AbstractConfigurableGraph.java, +import java.util.TreeMap;, +    // Prefer the heavier "MapRetrievalCache" for nodes if lookup is expensive., +    this.nodeConnections = (nodeConnections instanceof TreeMap), +        ? new MapRetrievalCache<N, NodeAdjacencies<N>>(nodeConnections), +        : new MapIteratorCache<N, NodeAdjacencies<N>>(nodeConnections);, +++ b/guava/src/com/google/common/graph/AbstractConfigurableGraph.java, +import java.util.TreeMap;, +    // Prefer the heavier "MapRetrievalCache" for nodes if lookup is expensive., +    this.nodeConnections = (nodeConnections instanceof TreeMap), +        ? new MapRetrievalCache<N, NodeAdjacencies<N>>(nodeConnections), +        : new MapIteratorCache<N, NodeAdjacencies<N>>(nodeConnections);, +++ b/guava/src/com/google/common/graph/AbstractConfigurableNetwork.java, +import java.util.TreeMap;, +    // Prefer the heavier "MapRetrievalCache" for nodes if lookup is expensive. This optimizes, +    // methods that access the same node(s) repeatedly, such as Graphs.removeEdgesConnecting()., +    this.nodeConnections = (nodeConnections instanceof TreeMap), +        ? new MapRetrievalCache<N, NodeConnections<N, E>>(nodeConnections), +        : new MapIteratorCache<N, NodeConnections<N, E>>(nodeConnections);]