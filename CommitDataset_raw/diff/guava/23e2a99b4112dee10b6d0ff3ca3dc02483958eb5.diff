[+++ b/guava-tests/test/com/google/common/primitives/UnsignedIntsTest.java, +  }, +, +  public void testJoin() {, +    assertEquals("", join());, +    assertEquals("1", join(1));, +    assertEquals("1,2", join(1, 2));, +    assertEquals("4294967295,2147483648", join(-1, Integer.MIN_VALUE));, +, +    assertEquals("123", UnsignedInts.join("", 1, 2, 3));, +  }, +, +  private static String join(int... values) {, +    return UnsignedInts.join(",", values);, +++ b/guava-tests/test/com/google/common/primitives/UnsignedIntsTest.java, +  }, +, +  public void testJoin() {, +    assertEquals("", join());, +    assertEquals("1", join(1));, +    assertEquals("1,2", join(1, 2));, +    assertEquals("4294967295,2147483648", join(-1, Integer.MIN_VALUE));, +, +    assertEquals("123", UnsignedInts.join("", 1, 2, 3));, +  }, +, +  private static String join(int... values) {, +    return UnsignedInts.join(",", values);, +++ b/guava-tests/test/com/google/common/primitives/UnsignedLongsTest.java, +  }, +, +  public void testJoin() {, +    assertEquals("", join());, +    assertEquals("1", join(1));, +    assertEquals("1,2", join(1, 2));, +    assertEquals("18446744073709551615,9223372036854775808", join(-1, Long.MIN_VALUE));, +, +    assertEquals("123", UnsignedLongs.join("", 1, 2, 3));, +  }, +, +  private static String join(long... values) {, +    return UnsignedLongs.join(",", values);, +++ b/guava-tests/test/com/google/common/primitives/UnsignedIntsTest.java, +  }, +, +  public void testJoin() {, +    assertEquals("", join());, +    assertEquals("1", join(1));, +    assertEquals("1,2", join(1, 2));, +    assertEquals("4294967295,2147483648", join(-1, Integer.MIN_VALUE));, +, +    assertEquals("123", UnsignedInts.join("", 1, 2, 3));, +  }, +, +  private static String join(int... values) {, +    return UnsignedInts.join(",", values);, +++ b/guava-tests/test/com/google/common/primitives/UnsignedLongsTest.java, +  }, +, +  public void testJoin() {, +    assertEquals("", join());, +    assertEquals("1", join(1));, +    assertEquals("1,2", join(1, 2));, +    assertEquals("18446744073709551615,9223372036854775808", join(-1, Long.MIN_VALUE));, +, +    assertEquals("123", UnsignedLongs.join("", 1, 2, 3));, +  }, +, +  private static String join(long... values) {, +    return UnsignedLongs.join(",", values);, +++ b/guava/src/com/google/common/primitives/UnsignedInts.java, +    builder.append(toString(array[0]));, +++ b/guava-tests/test/com/google/common/primitives/UnsignedIntsTest.java, +  }, +, +  public void testJoin() {, +    assertEquals("", join());, +    assertEquals("1", join(1));, +    assertEquals("1,2", join(1, 2));, +    assertEquals("4294967295,2147483648", join(-1, Integer.MIN_VALUE));, +, +    assertEquals("123", UnsignedInts.join("", 1, 2, 3));, +  }, +, +  private static String join(int... values) {, +    return UnsignedInts.join(",", values);, +++ b/guava-tests/test/com/google/common/primitives/UnsignedLongsTest.java, +  }, +, +  public void testJoin() {, +    assertEquals("", join());, +    assertEquals("1", join(1));, +    assertEquals("1,2", join(1, 2));, +    assertEquals("18446744073709551615,9223372036854775808", join(-1, Long.MIN_VALUE));, +, +    assertEquals("123", UnsignedLongs.join("", 1, 2, 3));, +  }, +, +  private static String join(long... values) {, +    return UnsignedLongs.join(",", values);]