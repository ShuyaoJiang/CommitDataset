[+++ b/guava/src/com/google/common/collect/ImmutableSortedMultiset.java, +    return new RegularImmutableSortedMultiset<E>(elementSet, cumulativeCounts, 0, 1);, +      cumulativeCounts[i + 1] = cumulativeCounts[i] + entry.getCount();, +        cumulativeCounts, 0, entries.size());, +++ b/guava/src/com/google/common/collect/ImmutableSortedMultiset.java, +    return new RegularImmutableSortedMultiset<E>(elementSet, cumulativeCounts, 0, 1);, +      cumulativeCounts[i + 1] = cumulativeCounts[i] + entry.getCount();, +        cumulativeCounts, 0, entries.size());, +++ b/guava/src/com/google/common/collect/RegularImmutableSortedMultiset.java, +  private int getCount(int index) {, +    return (int) (cumulativeCounts[offset + index + 1] - cumulativeCounts[offset + index]);, +  }, +, +    return Multisets.immutableEntry(elementSet.asList().get(index), getCount(index));, +    return (index >= 0) ? getCount(index) : 0;, +          subElementSet, cumulativeCounts, offset + from, to - from);, +    return offset > 0 || length < cumulativeCounts.length - 1;]