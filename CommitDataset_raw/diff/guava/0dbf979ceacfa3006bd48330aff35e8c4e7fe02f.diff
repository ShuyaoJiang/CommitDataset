[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +  /**, +   * Deletes and returns the next value from the iterator, or returns, +   * {@code defaultValue} if there is no such value., +   */, +  @Nullable, +  static <T> T pollNext(Iterator<T> iterator) {, +    if (iterator.hasNext()) {, +      T result = iterator.next();, +      iterator.remove();, +      return result;, +    } else {, +      return null;, +    }, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +  /**, +   * Deletes and returns the next value from the iterator, or returns, +   * {@code defaultValue} if there is no such value., +   */, +  @Nullable, +  static <T> T pollNext(Iterator<T> iterator) {, +    if (iterator.hasNext()) {, +      T result = iterator.next();, +      iterator.remove();, +      return result;, +    } else {, +      return null;, +    }, +  }, +, +++ b/guava/src/com/google/common/collect/ForwardingNavigableMap.java, +    return Iterators.pollNext(entrySet().iterator());, +    return Iterators.pollNext(descendingMap().entrySet().iterator());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +  /**, +   * Deletes and returns the next value from the iterator, or returns, +   * {@code defaultValue} if there is no such value., +   */, +  @Nullable, +  static <T> T pollNext(Iterator<T> iterator) {, +    if (iterator.hasNext()) {, +      T result = iterator.next();, +      iterator.remove();, +      return result;, +    } else {, +      return null;, +    }, +  }, +, +++ b/guava/src/com/google/common/collect/ForwardingNavigableMap.java, +    return Iterators.pollNext(entrySet().iterator());, +    return Iterators.pollNext(descendingMap().entrySet().iterator());, +++ b/guava/src/com/google/common/collect/ForwardingNavigableSet.java, +    return Iterators.pollNext(iterator());, +    return Iterators.pollNext(delegate().descendingIterator());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java, +  /**, +   * Deletes and returns the next value from the iterator, or returns, +   * {@code defaultValue} if there is no such value., +   */, +  @Nullable, +  static <T> T pollNext(Iterator<T> iterator) {, +    if (iterator.hasNext()) {, +      T result = iterator.next();, +      iterator.remove();, +      return result;, +    } else {, +      return null;, +    }, +  }, +, +++ b/guava/src/com/google/common/collect/ForwardingNavigableMap.java, +    return Iterators.pollNext(entrySet().iterator());, +    return Iterators.pollNext(descendingMap().entrySet().iterator());, +++ b/guava/src/com/google/common/collect/ForwardingNavigableSet.java, +    return Iterators.pollNext(iterator());, +    return Iterators.pollNext(delegate().descendingIterator());, +++ b/guava/src/com/google/common/collect/Iterators.java, +  /**, +   * Deletes and returns the next value from the iterator, or returns, +   * {@code defaultValue} if there is no such value., +   */, +  @Nullable, +  static <T> T pollNext(Iterator<T> iterator) {, +    if (iterator.hasNext()) {, +      T result = iterator.next();, +      iterator.remove();, +      return result;, +    } else {, +      return null;, +    }, +  }, +]