[+++ b/guava-tests/test/com/google/common/util/concurrent/ThreadFactoryBuilderTest.java, +  public void testNameFormatWithPercentS_custom() {, +    String format = "super-duper-thread-%s";, +    ThreadFactory factory = builder.setNameFormat(format).build();, +    for (int i = 0; i < 11; i++) {, +      assertEquals(String.format(format, i),, +          factory.newThread(monitoredRunnable).getName());, +    }, +  }, +, +  public void testNameFormatWithPercentD_custom() {, +    String format = "super-duper-thread-%d";, +    ThreadFactory factory = builder.setNameFormat(format).build();, +    for (int i = 0; i < 11; i++) {, +      assertEquals(String.format(format, i),, +++ b/guava-tests/test/com/google/common/util/concurrent/ThreadFactoryBuilderTest.java, +  public void testNameFormatWithPercentS_custom() {, +    String format = "super-duper-thread-%s";, +    ThreadFactory factory = builder.setNameFormat(format).build();, +    for (int i = 0; i < 11; i++) {, +      assertEquals(String.format(format, i),, +          factory.newThread(monitoredRunnable).getName());, +    }, +  }, +, +  public void testNameFormatWithPercentD_custom() {, +    String format = "super-duper-thread-%d";, +    ThreadFactory factory = builder.setNameFormat(format).build();, +    for (int i = 0; i < 11; i++) {, +      assertEquals(String.format(format, i),, +++ b/guava/src/com/google/common/util/concurrent/ThreadFactoryBuilder.java, +   *     instance of the ThreadFactory and will be assigned sequentially. For, +   *     example, {@code "rpc-pool-%d"} will generate thread names like, +   *     {@code "rpc-pool-0"}, {@code "rpc-pool-1"}, {@code "rpc-pool-2"}, etc.]