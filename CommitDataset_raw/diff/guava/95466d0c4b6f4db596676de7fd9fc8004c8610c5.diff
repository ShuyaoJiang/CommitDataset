[+++ b/guava/src/com/google/common/collect/Queues.java, +   * Creates an empty {@code ArrayBlockingQueue} with the given (fixed) capacity, +   * and nonfair access policy., +   * Creates an empty {@code ArrayDeque}., +   * Creates an {@code ArrayDeque} containing the elements of the specified iterable,, +   * in the order they are returned by the iterable's iterator., +   * Creates an empty {@code ConcurrentLinkedQueue}., +   * Creates a {@code ConcurrentLinkedQueue} containing the elements of the specified iterable,, +   * in the order they are returned by the iterable's iterator., +   * Creates an empty {@code LinkedBlockingDeque} with a capacity of {@link Integer#MAX_VALUE}., +   * Creates an empty {@code LinkedBlockingDeque} with the given (fixed) capacity., +   * Creates a {@code LinkedBlockingDeque} with a capacity of {@link Integer#MAX_VALUE},, +   * containing the elements of the specified iterable,, +   * in the order they are returned by the iterable's iterator., +   * Creates an empty {@code LinkedBlockingQueue} with a capacity of {@link Integer#MAX_VALUE}., +   * Creates an empty {@code LinkedBlockingQueue} with the given (fixed) capacity., +   * Creates a {@code LinkedBlockingQueue} with a capacity of {@link Integer#MAX_VALUE},, +   * containing the elements of the specified iterable,, +   * in the order they are returned by the iterable's iterator., +   * Creates an empty {@code PriorityBlockingQueue} with the ordering given by its, +   * elements' natural ordering., +  // TODO(user): These should be <E extends Comparable>, +   * Creates a {@code PriorityBlockingQueue} containing the given elements., +   * <b>Note:</b> If the specified iterable is a {@code SortedSet} or a {@code PriorityQueue},, +   * this priority queue will be ordered according to the same ordering., +   * Creates an empty {@code PriorityQueue} with the ordering given by its, +   * elements' natural ordering., +   * Creates a {@code PriorityQueue} containing the given elements., +   * <b>Note:</b> If the specified iterable is a {@code SortedSet} or a {@code PriorityQueue},, +   * this priority queue will be ordered according to the same ordering., +   * Creates an empty {@code SynchronousQueue} with nonfair access policy.]