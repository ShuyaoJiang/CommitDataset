[+++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import static com.google.common.truth.Truth.assertThat;, +, +    MathPreconditions.checkNoOverflow(true, "testCheckNoOverflow_success", 0, 0);, +      MathPreconditions.checkNoOverflow(false, "testCheckNoOverflow_failure", 0, 0);, +      assertThat(expected).hasMessageThat().contains("testCheckNoOverflow_failure(0, 0)");, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import static com.google.common.truth.Truth.assertThat;, +, +    MathPreconditions.checkNoOverflow(true, "testCheckNoOverflow_success", 0, 0);, +      MathPreconditions.checkNoOverflow(false, "testCheckNoOverflow_failure", 0, 0);, +      assertThat(expected).hasMessageThat().contains("testCheckNoOverflow_failure(0, 0)");, +++ b/android/guava/src/com/google/common/math/IntMath.java, +    checkNoOverflow(result == (int) result, "checkedAdd", a, b);, +    checkNoOverflow(result == (int) result, "checkedSubtract", a, b);, +    checkNoOverflow(result == (int) result, "checkedMultiply", a, b);, +        checkNoOverflow(k < Integer.SIZE - 1, "checkedPow", b, k);, +        checkNoOverflow(k < Integer.SIZE, "checkedPow", b, k);, +            checkNoOverflow(-FLOOR_SQRT_MAX_INT <= b & b <= FLOOR_SQRT_MAX_INT, "checkedPow", b, k);, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import static com.google.common.truth.Truth.assertThat;, +, +    MathPreconditions.checkNoOverflow(true, "testCheckNoOverflow_success", 0, 0);, +      MathPreconditions.checkNoOverflow(false, "testCheckNoOverflow_failure", 0, 0);, +      assertThat(expected).hasMessageThat().contains("testCheckNoOverflow_failure(0, 0)");, +++ b/android/guava/src/com/google/common/math/IntMath.java, +    checkNoOverflow(result == (int) result, "checkedAdd", a, b);, +    checkNoOverflow(result == (int) result, "checkedSubtract", a, b);, +    checkNoOverflow(result == (int) result, "checkedMultiply", a, b);, +        checkNoOverflow(k < Integer.SIZE - 1, "checkedPow", b, k);, +        checkNoOverflow(k < Integer.SIZE, "checkedPow", b, k);, +            checkNoOverflow(-FLOOR_SQRT_MAX_INT <= b & b <= FLOOR_SQRT_MAX_INT, "checkedPow", b, k);, +++ b/android/guava/src/com/google/common/math/LongMath.java, +    checkNoOverflow((a ^ b) < 0 | (a ^ result) >= 0, "checkedAdd", a, b);, +    checkNoOverflow((a ^ b) >= 0 | (a ^ result) >= 0, "checkedSubtract", a, b);, +    checkNoOverflow(leadingZeros >= Long.SIZE, "checkedMultiply", a, b);, +    checkNoOverflow(a >= 0 | b != Long.MIN_VALUE, "checkedMultiply", a, b);, +    checkNoOverflow(a == 0 || result / a == b, "checkedMultiply", a, b);, +          checkNoOverflow(k < Long.SIZE - 1, "checkedPow", b, k);, +          checkNoOverflow(k < Long.SIZE, "checkedPow", b, k);, +            checkNoOverflow(, +                -FLOOR_SQRT_MAX_LONG <= b && b <= FLOOR_SQRT_MAX_LONG, "checkedPow", b, k);, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import static com.google.common.truth.Truth.assertThat;, +, +    MathPreconditions.checkNoOverflow(true, "testCheckNoOverflow_success", 0, 0);, +      MathPreconditions.checkNoOverflow(false, "testCheckNoOverflow_failure", 0, 0);, +      assertThat(expected).hasMessageThat().contains("testCheckNoOverflow_failure(0, 0)");, +++ b/android/guava/src/com/google/common/math/IntMath.java, +    checkNoOverflow(result == (int) result, "checkedAdd", a, b);, +    checkNoOverflow(result == (int) result, "checkedSubtract", a, b);, +    checkNoOverflow(result == (int) result, "checkedMultiply", a, b);, +        checkNoOverflow(k < Integer.SIZE - 1, "checkedPow", b, k);, +        checkNoOverflow(k < Integer.SIZE, "checkedPow", b, k);, +            checkNoOverflow(-FLOOR_SQRT_MAX_INT <= b & b <= FLOOR_SQRT_MAX_INT, "checkedPow", b, k);, +++ b/android/guava/src/com/google/common/math/LongMath.java, +    checkNoOverflow((a ^ b) < 0 | (a ^ result) >= 0, "checkedAdd", a, b);, +    checkNoOverflow((a ^ b) >= 0 | (a ^ result) >= 0, "checkedSubtract", a, b);, +    checkNoOverflow(leadingZeros >= Long.SIZE, "checkedMultiply", a, b);, +    checkNoOverflow(a >= 0 | b != Long.MIN_VALUE, "checkedMultiply", a, b);, +    checkNoOverflow(a == 0 || result / a == b, "checkedMultiply", a, b);, +          checkNoOverflow(k < Long.SIZE - 1, "checkedPow", b, k);, +          checkNoOverflow(k < Long.SIZE, "checkedPow", b, k);, +            checkNoOverflow(, +                -FLOOR_SQRT_MAX_LONG <= b && b <= FLOOR_SQRT_MAX_LONG, "checkedPow", b, k);, +++ b/android/guava/src/com/google/common/math/MathPreconditions.java, +  static void checkNoOverflow(boolean condition, String methodName, int a, int b) {, +      throw new ArithmeticException("overflow: " + methodName + "(" + a + ", " + b + ")");, +    }, +  }, +, +  static void checkNoOverflow(boolean condition, String methodName, long a, long b) {, +    if (!condition) {, +      throw new ArithmeticException("overflow: " + methodName + "(" + a + ", " + b + ")");, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import static com.google.common.truth.Truth.assertThat;, +, +    MathPreconditions.checkNoOverflow(true, "testCheckNoOverflow_success", 0, 0);, +      MathPreconditions.checkNoOverflow(false, "testCheckNoOverflow_failure", 0, 0);, +      assertThat(expected).hasMessageThat().contains("testCheckNoOverflow_failure(0, 0)");, +++ b/android/guava/src/com/google/common/math/IntMath.java, +    checkNoOverflow(result == (int) result, "checkedAdd", a, b);, +    checkNoOverflow(result == (int) result, "checkedSubtract", a, b);, +    checkNoOverflow(result == (int) result, "checkedMultiply", a, b);, +        checkNoOverflow(k < Integer.SIZE - 1, "checkedPow", b, k);, +        checkNoOverflow(k < Integer.SIZE, "checkedPow", b, k);, +            checkNoOverflow(-FLOOR_SQRT_MAX_INT <= b & b <= FLOOR_SQRT_MAX_INT, "checkedPow", b, k);, +++ b/android/guava/src/com/google/common/math/LongMath.java, +    checkNoOverflow((a ^ b) < 0 | (a ^ result) >= 0, "checkedAdd", a, b);, +    checkNoOverflow((a ^ b) >= 0 | (a ^ result) >= 0, "checkedSubtract", a, b);, +    checkNoOverflow(leadingZeros >= Long.SIZE, "checkedMultiply", a, b);, +    checkNoOverflow(a >= 0 | b != Long.MIN_VALUE, "checkedMultiply", a, b);, +    checkNoOverflow(a == 0 || result / a == b, "checkedMultiply", a, b);, +          checkNoOverflow(k < Long.SIZE - 1, "checkedPow", b, k);, +          checkNoOverflow(k < Long.SIZE, "checkedPow", b, k);, +            checkNoOverflow(, +                -FLOOR_SQRT_MAX_LONG <= b && b <= FLOOR_SQRT_MAX_LONG, "checkedPow", b, k);, +++ b/android/guava/src/com/google/common/math/MathPreconditions.java, +  static void checkNoOverflow(boolean condition, String methodName, int a, int b) {, +      throw new ArithmeticException("overflow: " + methodName + "(" + a + ", " + b + ")");]