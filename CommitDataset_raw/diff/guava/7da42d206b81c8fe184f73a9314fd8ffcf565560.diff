[+++ b/android/guava-tests/test/com/google/common/net/MediaTypeTest.java, +import com.google.common.collect.ImmutableSet;, +import java.util.Arrays;, +  public void testWithParametersIterable() {, +    assertEquals(, +        MediaType.parse("text/plain"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("a", ImmutableSet.<String>of()));, +    assertEquals(, +        MediaType.parse("text/plain; a=1"),, +        MediaType.parse("text/plain").withParameters("a", ImmutableSet.of("1")));, +    assertEquals(, +        MediaType.parse("text/plain; a=1"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("a", ImmutableSet.of("1")));, +    assertEquals(, +        MediaType.parse("text/plain; a=1; a=3"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("a", ImmutableSet.of("1", "3")));, +    assertEquals(, +        MediaType.parse("text/plain; a=1; a=2; b=3; b=4"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("b", ImmutableSet.of("3", "4")));, +  }, +, +  public void testWithParametersIterable_invalidAttribute() {, +    MediaType mediaType = MediaType.parse("text/plain");, +    try {, +      mediaType.withParameters("@", ImmutableSet.of("2"));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +  public void testWithParametersIterable_nullValue() {, +    MediaType mediaType = MediaType.parse("text/plain");, +    try {, +      mediaType.withParameters("a", Arrays.asList((String) null));, +      fail();, +    } catch (NullPointerException expected) {, +    }, +  }, +, +++ b/android/guava-tests/test/com/google/common/net/MediaTypeTest.java, +import com.google.common.collect.ImmutableSet;, +import java.util.Arrays;, +  public void testWithParametersIterable() {, +    assertEquals(, +        MediaType.parse("text/plain"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("a", ImmutableSet.<String>of()));, +    assertEquals(, +        MediaType.parse("text/plain; a=1"),, +        MediaType.parse("text/plain").withParameters("a", ImmutableSet.of("1")));, +    assertEquals(, +        MediaType.parse("text/plain; a=1"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("a", ImmutableSet.of("1")));, +    assertEquals(, +        MediaType.parse("text/plain; a=1; a=3"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("a", ImmutableSet.of("1", "3")));, +    assertEquals(, +        MediaType.parse("text/plain; a=1; a=2; b=3; b=4"),, +        MediaType.parse("text/plain; a=1; a=2").withParameters("b", ImmutableSet.of("3", "4")));, +  }, +, +  public void testWithParametersIterable_invalidAttribute() {, +    MediaType mediaType = MediaType.parse("text/plain");, +    try {, +      mediaType.withParameters("@", ImmutableSet.of("2"));, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +, +  public void testWithParametersIterable_nullValue() {, +    MediaType mediaType = MediaType.parse("text/plain");, +    try {, +      mediaType.withParameters("a", Arrays.asList((String) null));, +      fail();, +    } catch (NullPointerException expected) {, +    }, +  }, +, +++ b/android/guava/src/com/google/common/net/MediaType.java, +import com.google.common.collect.ImmutableSet;, +   * <em>Replaces</em> all parameters with the given attribute with parameters using the given, +   * values. If there are no values, any existing parameters with the given attribute are, +   * removed., +   * @throws IllegalArgumentException if either {@code attribute} or {@code values} is invalid, +   * @since NEXT, +  public MediaType withParameters(String attribute, Iterable<String> values) {, +    checkNotNull(values);, +    for (String value : values) {, +    }, +   * <em>Replaces</em> all parameters with the given attribute with a single parameter with the, +   * given value. If multiple parameters with the same attributes are necessary use {@link, +   * #withParameters(String, Iterable)}. Prefer {@link #withCharset} for setting the {@code charset}, +   * parameter when using a {@link Charset} object., +   *, +   * @throws IllegalArgumentException if either {@code attribute} or {@code value} is invalid, +   */, +  public MediaType withParameter(String attribute, String value) {, +    return withParameters(attribute, ImmutableSet.of(value));, +  }, +]