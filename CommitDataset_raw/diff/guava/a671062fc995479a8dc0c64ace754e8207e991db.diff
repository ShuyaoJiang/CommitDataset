[+++ b/guava-tests/test/com/google/common/collect/ImmutableRangeMapTest.java, +import com.google.common.testing.SerializableTester;, +          SerializableTester.reserializeAndAssert(asMap);, +++ b/guava-tests/test/com/google/common/collect/ImmutableRangeMapTest.java, +import com.google.common.testing.SerializableTester;, +          SerializableTester.reserializeAndAssert(asMap);, +++ b/guava-tests/test/com/google/common/collect/ImmutableRangeSetTest.java, +      SerializableTester.reserializeAndAssert(built.asRanges());, +++ b/guava-tests/test/com/google/common/collect/ImmutableRangeMapTest.java, +import com.google.common.testing.SerializableTester;, +          SerializableTester.reserializeAndAssert(asMap);, +++ b/guava-tests/test/com/google/common/collect/ImmutableRangeSetTest.java, +      SerializableTester.reserializeAndAssert(built.asRanges());, +++ b/guava/src/com/google/common/collect/Range.java, +  static final Ordering<Range<?>> RANGE_LEX_ORDERING = new RangeLexOrdering();, +  /**, +   * Needed to serialize sorted collections of Ranges., +    */, +  private static class RangeLexOrdering extends Ordering<Range<?>> implements Serializable {, +, +    @Override, +    public int compare(Range<?> left, Range<?> right) {, +      return ComparisonChain.start(), +          .compare(left.lowerBound, right.lowerBound), +          .compare(left.upperBound, right.upperBound), +          .result();, +    }, +, +    private static final long serialVersionUID = 0;, +  }, +]