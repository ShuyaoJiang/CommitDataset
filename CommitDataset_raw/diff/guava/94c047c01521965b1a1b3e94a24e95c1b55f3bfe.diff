[+++ b/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +/*, + * Copyright (C) 2012 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.testing;, +, +import static com.google.common.base.Preconditions.checkArgument;, +, +import com.google.common.annotations.Beta;, +import com.google.common.base.CharMatcher;, +import com.google.common.base.Charsets;, +import com.google.common.base.Defaults;, +import com.google.common.base.Equivalence;, +import com.google.common.base.Equivalences;, +import com.google.common.base.Joiner;, +import com.google.common.base.Optional;, +import com.google.common.base.Predicate;, +import com.google.common.base.Predicates;, +import com.google.common.base.Splitter;, +import com.google.common.base.Ticker;, +import com.google.common.collect.BiMap;, +import com.google.common.collect.ClassToInstanceMap;, +import com.google.common.collect.Constraint;, +import com.google.common.collect.Constraints;, +import com.google.common.collect.ImmutableBiMap;, +import com.google.common.collect.ImmutableClassToInstanceMap;, +import com.google.common.collect.ImmutableCollection;, +import com.google.common.collect.ImmutableList;, +import com.google.common.collect.ImmutableListMultimap;, +import com.google.common.collect.ImmutableMap;, +import com.google.common.collect.ImmutableMultimap;, +import com.google.common.collect.ImmutableMultiset;, +import com.google.common.collect.ImmutableSet;, +import com.google.common.collect.ImmutableSetMultimap;, +import com.google.common.collect.ImmutableSortedMap;, +import com.google.common.collect.ImmutableSortedSet;, +import com.google.common.collect.ImmutableTable;, +import com.google.common.collect.Iterators;, +import com.google.common.collect.ListMultimap;, +import com.google.common.collect.MapConstraint;, +import com.google.common.collect.MapConstraints;, +import com.google.common.collect.MapDifference;, +import com.google.common.collect.Maps;, +import com.google.common.collect.Multimap;, +import com.google.common.collect.Multimaps;, +import com.google.common.collect.Multiset;, +import com.google.common.collect.Multisets;, +import com.google.common.collect.Ordering;, +import com.google.common.collect.PeekingIterator;, +import com.google.common.collect.Range;, +import com.google.common.collect.Ranges;, +import com.google.common.collect.RowSortedTable;, +import com.google.common.collect.SetMultimap;, +import com.google.common.collect.Sets;, +import com.google.common.collect.SortedMapDifference;, +import com.google.common.collect.SortedMultiset;, +import com.google.common.collect.SortedSetMultimap;, +import com.google.common.collect.Table;, +import com.google.common.collect.Tables;, +import com.google.common.collect.TreeBasedTable;, +import com.google.common.collect.TreeMultimap;, +import com.google.common.collect.TreeMultiset;, +import com.google.common.primitives.Primitives;, +import com.google.common.primitives.UnsignedInteger;, +import com.google.common.primitives.UnsignedLong;, +, +import java.io.ByteArrayInputStream;, +import java.io.ByteArrayOutputStream;, +import java.io.File;, +import java.io.InputStream;, +import java.io.OutputStream;, +import java.io.PrintStream;, +import java.io.PrintWriter;, +import java.io.Reader;, +import java.io.StringReader;, +import java.io.StringWriter;, +import java.io.Writer;, +import java.lang.reflect.AnnotatedElement;, +import java.lang.reflect.Array;, +import java.lang.reflect.Constructor;, +import java.lang.reflect.GenericDeclaration;, +import java.lang.reflect.InvocationTargetException;, +import java.lang.reflect.Modifier;, +import java.lang.reflect.Type;, +import java.math.BigDecimal;, +import java.math.BigInteger;, +import java.nio.Buffer;]