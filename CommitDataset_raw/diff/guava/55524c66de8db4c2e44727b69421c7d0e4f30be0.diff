[+++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +  public void testPatternSplitWordBoundary_singleCharInput() {, +    String string = "f";, +    Iterable<String> words = Splitter.on(Pattern.compile("\\b")).split(string);, +    assertThat(words).containsExactly("f").inOrder();, +  }, +, +  @AndroidIncompatible // Apparently Gingerbread's regex API is buggy., +  @GwtIncompatible // java.util.regex.Pattern, +  public void testPatternSplitWordBoundary_singleWordInput() {, +    String string = "foo";, +    Iterable<String> words = Splitter.on(Pattern.compile("\\b")).split(string);, +    assertThat(words).containsExactly("foo").inOrder();, +  }, +, +  @GwtIncompatible // java.util.regex.Pattern, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +  public void testPatternSplitWordBoundary_singleCharInput() {, +    String string = "f";, +    Iterable<String> words = Splitter.on(Pattern.compile("\\b")).split(string);, +    assertThat(words).containsExactly("f").inOrder();, +  }, +, +  @AndroidIncompatible // Apparently Gingerbread's regex API is buggy., +  @GwtIncompatible // java.util.regex.Pattern, +  public void testPatternSplitWordBoundary_singleWordInput() {, +    String string = "foo";, +    Iterable<String> words = Splitter.on(Pattern.compile("\\b")).split(string);, +    assertThat(words).containsExactly("foo").inOrder();, +  }, +, +  @GwtIncompatible // java.util.regex.Pattern, +++ b/guava/src/com/google/common/base/Splitter.java, +          if (offset > toSplit.length()) {]