[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +        asMap = result = new AsMap<K, V>() {, +          @Override, +          Multimap<K, V> multimap() {, +            return MapMultimap.this;, +          @Override, +          public int size() {, +          @Override, +          Iterator<Map.Entry<K, Collection<V>>> entryIterator() {, +        };, +      return result;, +    @Override public boolean equals(@Nullable Object object) {, +      return Multimaps.equalsImpl(this, object);, +    @Override public int hashCode() {, +      return map.hashCode();, +    @Override public String toString() {, +      return asMap().toString();, +  static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object) {, +    if (object == multimap) {, +      return true;, +    }, +    if (object instanceof Multimap) {, +      Multimap<?, ?> that = (Multimap<?, ?>) object;, +      return multimap.asMap().equals(that.asMap());, +    }, +    return false;, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +        asMap = result = new AsMap<K, V>() {, +          @Override, +          Multimap<K, V> multimap() {, +            return MapMultimap.this;, +          @Override, +          public int size() {, +          @Override, +          Iterator<Map.Entry<K, Collection<V>>> entryIterator() {, +        };, +      return result;, +    @Override public boolean equals(@Nullable Object object) {, +      return Multimaps.equalsImpl(this, object);, +    @Override public int hashCode() {, +      return map.hashCode();, +    @Override public String toString() {, +      return asMap().toString();, +  static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object) {, +    if (object == multimap) {, +      return true;, +    }, +    if (object instanceof Multimap) {, +      Multimap<?, ?> that = (Multimap<?, ?>) object;, +      return multimap.asMap().equals(that.asMap());, +    }, +    return false;, +  }, +, +++ b/guava/src/com/google/common/collect/AbstractMultimap.java, +      return new EntrySet();, +    } else {, +      return new Entries();, +    }, +  }, +  , +  private class Entries extends Multimaps.Entries<K, V> {, +  , +  private class EntrySet extends Entries implements Set<Entry<K, V>> {, +    public int hashCode() {, +      return Sets.hashCodeImpl(this);, +    public boolean equals(@Nullable Object obj) {, +      return Sets.equalsImpl(this, obj);, +    return Multimaps.equalsImpl(this, object);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +        asMap = result = new AsMap<K, V>() {, +          @Override, +          Multimap<K, V> multimap() {, +            return MapMultimap.this;, +          @Override, +          public int size() {, +          @Override, +          Iterator<Map.Entry<K, Collection<V>>> entryIterator() {, +        };, +      return result;, +    @Override public boolean equals(@Nullable Object object) {, +      return Multimaps.equalsImpl(this, object);, +    @Override public int hashCode() {, +      return map.hashCode();, +    @Override public String toString() {, +      return asMap().toString();, +  static boolean equalsImpl(Multimap<?, ?> multimap, @Nullable Object object) {, +    if (object == multimap) {, +      return true;, +    }, +    if (object instanceof Multimap) {, +      Multimap<?, ?> that = (Multimap<?, ?>) object;, +      return multimap.asMap().equals(that.asMap());, +    }, +    return false;, +  }, +, +++ b/guava/src/com/google/common/collect/AbstractMultimap.java]