[+++ b/guava/src/com/google/common/base/CaseFormat.java, +    @Override String convert(CaseFormat format, String s) {, +      if (format == LOWER_UNDERSCORE) {, +        return s.replace('-', '_');, +      }, +      if (format == UPPER_UNDERSCORE) {, +        return Ascii.toUpperCase(s.replace('-', '_'));, +      }, +      return super.convert(format, s);, +    }, +    @Override String convert(CaseFormat format, String s) {, +      if (format == LOWER_HYPHEN) {, +        return s.replace('_', '-');, +      }, +      if (format == UPPER_UNDERSCORE) {, +        return Ascii.toUpperCase(s);, +      }, +      return super.convert(format, s);, +    }, +    @Override String convert(CaseFormat format, String s) {, +      if (format == LOWER_HYPHEN) {, +        return Ascii.toLowerCase(s.replace('_', '-'));, +      }, +      if (format == LOWER_UNDERSCORE) {, +        return Ascii.toLowerCase(s);, +      }, +      return super.convert(format, s);, +    }, +   * Converts the specified {@code String str} from this format to the specified {@code format}. A, +   * "best effort" approach is taken; if {@code str} does not conform to the assumed format, then, +   * the behavior of this method is undefined but we make a reasonable effort at converting anyway., +  public final String to(CaseFormat format, String str) {, +    checkNotNull(str);, +    return (format == this) ? str : convert(format, str);, +  /**, +   * Enum values can override for performance reasons., +   */, +  String convert(CaseFormat format, String s) {, +    // deal with camel conversion, +    return (i == 0), +      ? format.normalizeFirstWord(s), +      : out.append(format.normalizeWord(s.substring(i))).toString();]