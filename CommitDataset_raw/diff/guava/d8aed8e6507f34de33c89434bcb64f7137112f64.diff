[+++ b/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +import static com.google.common.collect.testing.Helpers.mapEntry;, +, +import com.google.common.collect.testing.TestStringListGenerator;, +  public static class ImmutableMapKeyListGenerator extends TestStringListGenerator {, +    public List<String> create(String[] elements) {, +      ImmutableMap.Builder<String, Integer> builder = ImmutableMap.builder();, +      for (int i = 0; i < elements.length; i++) {, +        builder.put(elements[i], i);, +      }, +      return builder.build().keySet().asList();, +    }, +  public static class ImmutableMapValueListGenerator extends TestStringListGenerator {, +    public List<String> create(String[] elements) {, +        builder.put(i, elements[i]);, +  }, +, +  public static class ImmutableMapEntryListGenerator, +      implements TestListGenerator<Entry<String, Integer>> {, +    public SampleElements<Entry<String, Integer>> samples() {, +      return new SampleElements<Entry<String, Integer>>(, +          mapEntry("foo", 5),, +          mapEntry("bar", 3),, +          mapEntry("baz", 17),, +          mapEntry("quux", 1),, +          mapEntry("toaster", -2));, +    }, +, +    @SuppressWarnings("unchecked"), +    @Override, +    public Entry<String, Integer>[] createArray(int length) {, +      return new Entry[length];, +    public Iterable<Entry<String, Integer>> order(List<Entry<String, Integer>> insertionOrder) {, +, +    @Override, +    public List<Entry<String, Integer>> create(Object... elements) {, +      ImmutableMap.Builder<String, Integer> builder = ImmutableMap.builder();, +      for (Object o : elements) {, +        @SuppressWarnings("unchecked"), +        Entry<String, Integer> entry = (Entry<String, Integer>) o;, +        builder.put(entry);, +      }, +      return builder.build().entrySet().asList();, +    }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +import static com.google.common.collect.testing.Helpers.mapEntry;, +, +import com.google.common.collect.testing.TestStringListGenerator;, +  public static class ImmutableMapKeyListGenerator extends TestStringListGenerator {, +    public List<String> create(String[] elements) {, +      ImmutableMap.Builder<String, Integer> builder = ImmutableMap.builder();, +      for (int i = 0; i < elements.length; i++) {, +        builder.put(elements[i], i);, +      }, +      return builder.build().keySet().asList();, +    }, +  public static class ImmutableMapValueListGenerator extends TestStringListGenerator {, +    public List<String> create(String[] elements) {, +        builder.put(i, elements[i]);, +  }, +, +  public static class ImmutableMapEntryListGenerator, +      implements TestListGenerator<Entry<String, Integer>> {, +    public SampleElements<Entry<String, Integer>> samples() {, +      return new SampleElements<Entry<String, Integer>>(, +          mapEntry("foo", 5),, +          mapEntry("bar", 3),, +          mapEntry("baz", 17),, +          mapEntry("quux", 1),, +          mapEntry("toaster", -2));, +    }, +, +    @SuppressWarnings("unchecked"), +    @Override, +    public Entry<String, Integer>[] createArray(int length) {, +      return new Entry[length];, +    public Iterable<Entry<String, Integer>> order(List<Entry<String, Integer>> insertionOrder) {, +, +    @Override, +    public List<Entry<String, Integer>> create(Object... elements) {, +      ImmutableMap.Builder<String, Integer> builder = ImmutableMap.builder();, +      for (Object o : elements) {, +        @SuppressWarnings("unchecked"), +        Entry<String, Integer> entry = (Entry<String, Integer>) o;, +        builder.put(entry);, +      }, +      return builder.build().entrySet().asList();, +    }, +++ b/guava-tests/test/com/google/common/collect/ImmutableMapTest.java, +import com.google.common.collect.testing.google.MapGenerators.ImmutableMapEntryListGenerator;, +import com.google.common.collect.testing.google.MapGenerators.ImmutableMapKeyListGenerator;, +        new ImmutableMapKeyListGenerator()), +        .named("ImmutableMap.keySet.asList"), +        .withFeatures(CollectionSize.ANY,, +            CollectionFeature.SERIALIZABLE,, +            CollectionFeature.REJECTS_DUPLICATES_AT_CREATION,, +            CollectionFeature.ALLOWS_NULL_QUERIES), +        .createTestSuite());, +, +    suite.addTest(ListTestSuiteBuilder.using(]