[+++ b/guava-tests/test/com/google/common/math/PairedStatsTest.java, +  public void testToString() {, +    assertThat(EMPTY_PAIRED_STATS.toString()), +        .isEqualTo("PairedStats{xStats=Stats{count=0}, yStats=Stats{count=0}}");, +    assertThat(MANY_VALUES_PAIRED_STATS.toString()), +        .isEqualTo(, +            "PairedStats{xStats=", +                + MANY_VALUES_PAIRED_STATS.xStats(), +                + ", yStats=", +                + MANY_VALUES_PAIRED_STATS.yStats(), +                + ", populationCovariance=", +                + MANY_VALUES_PAIRED_STATS.populationCovariance(), +                + "}");, +  }, +, +++ b/guava-tests/test/com/google/common/math/PairedStatsTest.java, +  public void testToString() {, +    assertThat(EMPTY_PAIRED_STATS.toString()), +        .isEqualTo("PairedStats{xStats=Stats{count=0}, yStats=Stats{count=0}}");, +    assertThat(MANY_VALUES_PAIRED_STATS.toString()), +        .isEqualTo(, +            "PairedStats{xStats=", +                + MANY_VALUES_PAIRED_STATS.xStats(), +                + ", yStats=", +                + MANY_VALUES_PAIRED_STATS.yStats(), +                + ", populationCovariance=", +                + MANY_VALUES_PAIRED_STATS.populationCovariance(), +                + "}");, +  }, +, +++ b/guava-tests/test/com/google/common/math/StatsTest.java, +  public void testToString() {, +    assertThat(EMPTY_STATS_VARARGS.toString()).isEqualTo("Stats{count=0}");, +    assertThat(MANY_VALUES_STATS_ITERABLE.toString()), +        .isEqualTo(, +            "Stats{count=", +                + MANY_VALUES_STATS_ITERABLE.count(), +                + ", mean=", +                + MANY_VALUES_STATS_ITERABLE.mean(), +                + ", populationStandardDeviation=", +                + MANY_VALUES_STATS_ITERABLE.populationStandardDeviation(), +                + ", min=", +                + MANY_VALUES_STATS_ITERABLE.min(), +                + ", max=", +                + MANY_VALUES_STATS_ITERABLE.max(), +                + "}");, +  }, +, +++ b/guava-tests/test/com/google/common/math/PairedStatsTest.java, +  public void testToString() {, +    assertThat(EMPTY_PAIRED_STATS.toString()), +        .isEqualTo("PairedStats{xStats=Stats{count=0}, yStats=Stats{count=0}}");, +    assertThat(MANY_VALUES_PAIRED_STATS.toString()), +        .isEqualTo(, +            "PairedStats{xStats=", +                + MANY_VALUES_PAIRED_STATS.xStats(), +                + ", yStats=", +                + MANY_VALUES_PAIRED_STATS.yStats(), +                + ", populationCovariance=", +                + MANY_VALUES_PAIRED_STATS.populationCovariance(), +                + "}");, +  }, +, +++ b/guava-tests/test/com/google/common/math/StatsTest.java, +  public void testToString() {, +    assertThat(EMPTY_STATS_VARARGS.toString()).isEqualTo("Stats{count=0}");, +    assertThat(MANY_VALUES_STATS_ITERABLE.toString()), +        .isEqualTo(, +            "Stats{count=", +                + MANY_VALUES_STATS_ITERABLE.count(), +                + ", mean=", +                + MANY_VALUES_STATS_ITERABLE.mean(), +                + ", populationStandardDeviation=", +                + MANY_VALUES_STATS_ITERABLE.populationStandardDeviation(), +                + ", min=", +                + MANY_VALUES_STATS_ITERABLE.min(), +                + ", max=", +                + MANY_VALUES_STATS_ITERABLE.max(), +                + "}");, +  }, +, +++ b/guava/src/com/google/common/math/PairedStats.java, +    if (count() > 0) {, +    } else {, +      return MoreObjects.toStringHelper(this), +          .add("xStats", xStats), +          .add("yStats", yStats), +          .toString();, +    }, +++ b/guava-tests/test/com/google/common/math/PairedStatsTest.java, +  public void testToString() {, +    assertThat(EMPTY_PAIRED_STATS.toString()), +        .isEqualTo("PairedStats{xStats=Stats{count=0}, yStats=Stats{count=0}}");, +    assertThat(MANY_VALUES_PAIRED_STATS.toString()), +        .isEqualTo(, +            "PairedStats{xStats=", +                + MANY_VALUES_PAIRED_STATS.xStats(), +                + ", yStats=", +                + MANY_VALUES_PAIRED_STATS.yStats(), +                + ", populationCovariance="]