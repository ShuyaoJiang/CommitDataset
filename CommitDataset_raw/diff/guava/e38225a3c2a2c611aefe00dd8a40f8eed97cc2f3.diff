[+++ b/guava/src/com/google/common/collect/AbstractMapBasedMultimap.java, +@GwtCompatible, +    if (collection instanceof NavigableSet) {, +      return new WrappedNavigableSet(key, (NavigableSet<V>) collection, null);, +    } else if (collection instanceof SortedSet) {, +    if (map instanceof NavigableMap) {, +      return new NavigableKeySet((NavigableMap<K, Collection<V>>) map);, +    } else if (map instanceof SortedMap) {, +      return new SortedKeySet((SortedMap<K, Collection<V>>) map);, +    } else {, +      return new KeySet(map);, +    }, +    if (map instanceof NavigableMap) {, +      return new NavigableAsMap((NavigableMap<K, Collection<V>>) map);, +    } else if (map instanceof SortedMap) {, +      return new SortedAsMap((SortedMap<K, Collection<V>>) map);, +    } else {, +      return new AsMap(map);, +    }, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultimap.java, +@GwtCompatible, +    if (collection instanceof NavigableSet) {, +      return new WrappedNavigableSet(key, (NavigableSet<V>) collection, null);, +    } else if (collection instanceof SortedSet) {, +    if (map instanceof NavigableMap) {, +      return new NavigableKeySet((NavigableMap<K, Collection<V>>) map);, +    } else if (map instanceof SortedMap) {, +      return new SortedKeySet((SortedMap<K, Collection<V>>) map);, +    } else {, +      return new KeySet(map);, +    }, +    if (map instanceof NavigableMap) {, +      return new NavigableAsMap((NavigableMap<K, Collection<V>>) map);, +    } else if (map instanceof SortedMap) {, +      return new SortedAsMap((SortedMap<K, Collection<V>>) map);, +    } else {, +      return new AsMap(map);, +    }, +++ b/guava/src/com/google/common/collect/TreeMultimap.java]