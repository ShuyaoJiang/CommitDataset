[+++ b/guava-tests/test/com/google/common/collect/TreeRangeSetTest.java, +  public void testCreateCopy() {, +    for (Range<Integer> range1 : QUERY_RANGES) {, +      for (Range<Integer> range2 : QUERY_RANGES) {, +        TreeRangeSet<Integer> rangeSet = TreeRangeSet.create();, +        rangeSet.add(range1);, +        rangeSet.add(range2);, +        , +        assertEquals(rangeSet, TreeRangeSet.create(rangeSet));, +      }, +    }, +  }, +, +++ b/guava-tests/test/com/google/common/collect/TreeRangeSetTest.java, +  public void testCreateCopy() {, +    for (Range<Integer> range1 : QUERY_RANGES) {, +      for (Range<Integer> range2 : QUERY_RANGES) {, +        TreeRangeSet<Integer> rangeSet = TreeRangeSet.create();, +        rangeSet.add(range1);, +        rangeSet.add(range2);, +        , +        assertEquals(rangeSet, TreeRangeSet.create(rangeSet));, +      }, +    }, +  }, +, +++ b/guava/src/com/google/common/collect/TreeRangeSet.java, +  /**, +   * Returns a {@code TreeRangeSet} initialized with the ranges in the specified range set., +   */, +  public static <C extends Comparable<?>> TreeRangeSet<C> create(RangeSet<C> rangeSet) {, +    TreeRangeSet<C> result = create();, +    result.addAll(rangeSet);, +    return result;, +  }, +]