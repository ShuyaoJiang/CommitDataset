[+++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ArrayListMultimapTest.java, +    assertThat(multimap.get("foo")).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(sublist).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(multimap.get("foo")).containsExactly(1, 2).inOrder();, +    assertThat(multimap.get("bar")).contains(3);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ArrayListMultimapTest.java, +    assertThat(multimap.get("foo")).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(sublist).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(multimap.get("foo")).containsExactly(1, 2).inOrder();, +    assertThat(multimap.get("bar")).contains(3);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/Collections2Test.java, +    assertThat(permutationSet).contains(list);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ArrayListMultimapTest.java, +    assertThat(multimap.get("foo")).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(sublist).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(multimap.get("foo")).containsExactly(1, 2).inOrder();, +    assertThat(multimap.get("bar")).contains(3);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/Collections2Test.java, +    assertThat(permutationSet).contains(list);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ContiguousSetTest.java, +    assertThat(set.headSet(2)).contains(1);, +    assertThat(set.headSet(3)).containsExactly(1, 2).inOrder();, +    assertThat(set.headSet(4)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(Integer.MAX_VALUE)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(1, true)).contains(1);, +    assertThat(set.headSet(2, true)).containsExactly(1, 2).inOrder();, +    assertThat(set.headSet(3, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(4, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(Integer.MAX_VALUE, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(Integer.MIN_VALUE)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(1)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(2)).containsExactly(2, 3).inOrder();, +    assertThat(set.tailSet(3)).contains(3);, +    assertThat(set.tailSet(Integer.MIN_VALUE, false)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(1, false)).containsExactly(2, 3).inOrder();, +    assertThat(set.tailSet(2, false)).contains(3);, +    assertThat(set.subSet(1, 4)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.subSet(2, 4)).containsExactly(2, 3).inOrder();, +    assertThat(set.subSet(3, 4)).contains(3);, +    assertThat(set.subSet(2, 3)).contains(2);, +    assertThat(set.subSet(1, 3)).containsExactly(1, 2).inOrder();, +    assertThat(set.subSet(1, 2)).contains(1);, +    assertThat(set.subSet(Integer.MIN_VALUE, Integer.MAX_VALUE)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.subSet(1, true, 3, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.subSet(1, false, 3, true)).containsExactly(2, 3).inOrder();, +    assertThat(set.subSet(1, true, 3, false)).containsExactly(1, 2).inOrder();, +    assertThat(set.subSet(1, false, 3, false)).contains(2);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ArrayListMultimapTest.java, +    assertThat(multimap.get("foo")).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(sublist).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(multimap.get("foo")).containsExactly(1, 2).inOrder();, +    assertThat(multimap.get("bar")).contains(3);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/Collections2Test.java, +    assertThat(permutationSet).contains(list);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ContiguousSetTest.java, +    assertThat(set.headSet(2)).contains(1);, +    assertThat(set.headSet(3)).containsExactly(1, 2).inOrder();, +    assertThat(set.headSet(4)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(Integer.MAX_VALUE)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(1, true)).contains(1);, +    assertThat(set.headSet(2, true)).containsExactly(1, 2).inOrder();, +    assertThat(set.headSet(3, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(4, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.headSet(Integer.MAX_VALUE, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(Integer.MIN_VALUE)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(1)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(2)).containsExactly(2, 3).inOrder();, +    assertThat(set.tailSet(3)).contains(3);, +    assertThat(set.tailSet(Integer.MIN_VALUE, false)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.tailSet(1, false)).containsExactly(2, 3).inOrder();, +    assertThat(set.tailSet(2, false)).contains(3);, +    assertThat(set.subSet(1, 4)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.subSet(2, 4)).containsExactly(2, 3).inOrder();, +    assertThat(set.subSet(3, 4)).contains(3);, +    assertThat(set.subSet(2, 3)).contains(2);, +    assertThat(set.subSet(1, 3)).containsExactly(1, 2).inOrder();, +    assertThat(set.subSet(1, 2)).contains(1);, +    assertThat(set.subSet(Integer.MIN_VALUE, Integer.MAX_VALUE)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.subSet(1, true, 3, true)).containsExactly(1, 2, 3).inOrder();, +    assertThat(set.subSet(1, false, 3, true)).containsExactly(2, 3).inOrder();, +    assertThat(set.subSet(1, true, 3, false)).containsExactly(1, 2).inOrder();, +    assertThat(set.subSet(1, false, 3, false)).contains(2);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedMapTest.java, +    assertThat(map.entrySet()).containsExactly(, +    assertThat(map.entrySet()).containsExactly(Maps.immutableEntry("one", 1));, +    assertThat(map.entrySet()).containsExactly(Maps.immutableEntry("three", 3),, +    assertThat(map.entrySet()).containsExactly(Maps.immutableEntry("two", 2));, +    assertThat(map.entrySet()).containsExactly(Maps.immutableEntry("three", 3));, +    assertThat(map.entrySet()).containsExactly(Maps.immutableEntry("one", 1),, +    assertThat(map.entrySet()).containsExactly(Maps.immutableEntry("three", 3),, +    assertThat(map.entrySet()).containsExactly(Maps.immutableEntry("one", 1),, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ArrayListMultimapTest.java, +    assertThat(multimap.get("foo")).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(sublist).containsExactly(1, 2, 3, 4, 5).inOrder();, +    assertThat(multimap.get("foo")).containsExactly(1, 2).inOrder();, +    assertThat(multimap.get("bar")).contains(3);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/Collections2Test.java, +    assertThat(permutationSet).contains(list);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/ContiguousSetTest.java, +    assertThat(set.headSet(2)).contains(1);]