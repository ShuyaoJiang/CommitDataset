[+++ b/guava-tests/test/com/google/common/reflect/TypeTokenTest.java, +  public void testMethod_equals() throws NoSuchMethodException {, +    Method getMethod = List.class.getMethod("get", int.class);, +    Method setMethod = List.class.getMethod("set", int.class, Object.class);, +    new EqualsTester(), +        .addEqualityGroup(Invokable.from(getMethod), Invokable.from(getMethod)), +        .addEqualityGroup(Invokable.from(setMethod)), +        .addEqualityGroup(new TypeToken<List<Integer>>() {}.method(getMethod)), +        .addEqualityGroup(new TypeToken<List<String>>() {}.method(getMethod)), +        .addEqualityGroup(new TypeToken<List<Integer>>() {}.method(setMethod)), +        .addEqualityGroup(new TypeToken<List<String>>() {}.method(setMethod)), +        .testEquals();, +  }, +, +  public void testConstructor_equals() throws NoSuchMethodException {, +    Constructor<?> defaultConstructor = ArrayList.class.getConstructor();, +    Constructor<?> oneArgConstructor = ArrayList.class.getConstructor(int.class);, +    new EqualsTester(), +        .addEqualityGroup(Invokable.from(defaultConstructor), Invokable.from(defaultConstructor)), +        .addEqualityGroup(Invokable.from(oneArgConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<Integer>>() {}.constructor(defaultConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<String>>() {}.constructor(defaultConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<Integer>>() {}.constructor(oneArgConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<String>>() {}.constructor(oneArgConstructor)), +        .testEquals();, +  }, +, +++ b/guava-tests/test/com/google/common/reflect/TypeTokenTest.java, +  public void testMethod_equals() throws NoSuchMethodException {, +    Method getMethod = List.class.getMethod("get", int.class);, +    Method setMethod = List.class.getMethod("set", int.class, Object.class);, +    new EqualsTester(), +        .addEqualityGroup(Invokable.from(getMethod), Invokable.from(getMethod)), +        .addEqualityGroup(Invokable.from(setMethod)), +        .addEqualityGroup(new TypeToken<List<Integer>>() {}.method(getMethod)), +        .addEqualityGroup(new TypeToken<List<String>>() {}.method(getMethod)), +        .addEqualityGroup(new TypeToken<List<Integer>>() {}.method(setMethod)), +        .addEqualityGroup(new TypeToken<List<String>>() {}.method(setMethod)), +        .testEquals();, +  }, +, +  public void testConstructor_equals() throws NoSuchMethodException {, +    Constructor<?> defaultConstructor = ArrayList.class.getConstructor();, +    Constructor<?> oneArgConstructor = ArrayList.class.getConstructor(int.class);, +    new EqualsTester(), +        .addEqualityGroup(Invokable.from(defaultConstructor), Invokable.from(defaultConstructor)), +        .addEqualityGroup(Invokable.from(oneArgConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<Integer>>() {}.constructor(defaultConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<String>>() {}.constructor(defaultConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<Integer>>() {}.constructor(oneArgConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<String>>() {}.constructor(oneArgConstructor)), +        .testEquals();, +  }, +, +++ b/guava/src/com/google/common/reflect/Element.java, +  public TypeToken<?> getOwnerType() {, +    return TypeToken.of(getDeclaringClass());, +  }, +, +      return getOwnerType().equals(that.getOwnerType()) && member.equals(that.member);, +++ b/guava-tests/test/com/google/common/reflect/TypeTokenTest.java, +  public void testMethod_equals() throws NoSuchMethodException {, +    Method getMethod = List.class.getMethod("get", int.class);, +    Method setMethod = List.class.getMethod("set", int.class, Object.class);, +    new EqualsTester(), +        .addEqualityGroup(Invokable.from(getMethod), Invokable.from(getMethod)), +        .addEqualityGroup(Invokable.from(setMethod)), +        .addEqualityGroup(new TypeToken<List<Integer>>() {}.method(getMethod)), +        .addEqualityGroup(new TypeToken<List<String>>() {}.method(getMethod)), +        .addEqualityGroup(new TypeToken<List<Integer>>() {}.method(setMethod)), +        .addEqualityGroup(new TypeToken<List<String>>() {}.method(setMethod)), +        .testEquals();, +  }, +, +  public void testConstructor_equals() throws NoSuchMethodException {, +    Constructor<?> defaultConstructor = ArrayList.class.getConstructor();, +    Constructor<?> oneArgConstructor = ArrayList.class.getConstructor(int.class);, +    new EqualsTester(), +        .addEqualityGroup(Invokable.from(defaultConstructor), Invokable.from(defaultConstructor)), +        .addEqualityGroup(Invokable.from(oneArgConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<Integer>>() {}.constructor(defaultConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<String>>() {}.constructor(defaultConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<Integer>>() {}.constructor(oneArgConstructor)), +        .addEqualityGroup(new TypeToken<ArrayList<String>>() {}.constructor(oneArgConstructor)), +        .testEquals();, +  }, +, +++ b/guava/src/com/google/common/reflect/Element.java, +  public TypeToken<?> getOwnerType() {, +    return TypeToken.of(getDeclaringClass());, +  }, +, +      return getOwnerType().equals(that.getOwnerType()) && member.equals(that.member);, +++ b/guava/src/com/google/common/reflect/Invokable.java, +  @Override public TypeToken<T> getOwnerType() {, +    final Method method;, +    final Constructor<?> constructor;, +++ b/guava-tests/test/com/google/common/reflect/TypeTokenTest.java, +  public void testMethod_equals() throws NoSuchMethodException {, +    Method getMethod = List.class.getMethod("get", int.class);]