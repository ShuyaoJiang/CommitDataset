[+++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java, +  private static final class ImmediateFailedFuture<V> extends AbstractFuture.TrustedFuture<V> {, +      setException(thrown);, +++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java, +  private static final class ImmediateFailedFuture<V> extends AbstractFuture.TrustedFuture<V> {, +      setException(thrown);, +++ b/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +  private static CancellationException cancellationExceptionWithCause(, +++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java, +  private static final class ImmediateFailedFuture<V> extends AbstractFuture.TrustedFuture<V> {, +      setException(thrown);, +++ b/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +  private static CancellationException cancellationExceptionWithCause(, +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +  private static final class ImmediateFailedFuture<V> extends AbstractFuture.TrustedFuture<V> {, +      setException(thrown);, +  private static final class ImmediateCancelledFuture<V>  extends AbstractFuture.TrustedFuture<V> {, +      cancel(false);, +    @Override protected Throwable newCancellationCause() {, +      return new CancellationException("Immediate cancelled future.");]