[+++ b/guava/src/com/google/common/graph/Graph.java, + * <li>This framework supports multiple mechanisms for storing the topology of a graph,, + *      including:, + *   <ul>, + *   <li>the Graph implementation stores the topology (for example, by storing a, + *       {@code Map<N, N>} that maps nodes onto their adjacent nodes); this implies that the nodes, + *       are just keys, and can be shared among graphs, + *   <li>the nodes store the topology (for example, by storing a {@code List<E>} of adjacent nodes);, + *       this (usually) implies that nodes are graph-specific, + *   <li>a separate data repository (for example, a database) stores the topology, + *   </ul>, +++ b/guava/src/com/google/common/graph/Graph.java, + * <li>This framework supports multiple mechanisms for storing the topology of a graph,, + *      including:, + *   <ul>, + *   <li>the Graph implementation stores the topology (for example, by storing a, + *       {@code Map<N, N>} that maps nodes onto their adjacent nodes); this implies that the nodes, + *       are just keys, and can be shared among graphs, + *   <li>the nodes store the topology (for example, by storing a {@code List<E>} of adjacent nodes);, + *       this (usually) implies that nodes are graph-specific, + *   <li>a separate data repository (for example, a database) stores the topology, + *   </ul>, +++ b/guava/src/com/google/common/graph/Network.java, + * <li>This framework supports multiple mechanisms for storing the topology of a graph, including:, + *   <ul>, + *   <li>the Graph implementation stores the topology (for example, by storing a {@code Map<N, E>}, + *       that maps nodes onto their incident edges); this implies that the nodes and edges, + *       are just keys, and can be shared among graphs, + *   <li>the nodes store the topology (for example, by storing a {@code List<E>} of incident edges);, + *       this (usually) implies that nodes are graph-specific, + *   <li>a separate data repository (for example, a database) stores the topology, + *   </ul>]