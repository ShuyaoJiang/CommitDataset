[+++ b/android/guava/src/com/google/common/reflect/Types.java, +import java.util.Map;, +      if (ownerType != null && JavaVersion.CURRENT.jdkTypeDuplicatesOwnerName()) {, +  // TODO(benyu): Once behavior is the same for all Java versions we support, delete this., +    },, +    JAVA9 {, +      @Override, +      Type newArrayType(Type componentType) {, +        return JAVA8.newArrayType(componentType);, +      }, +, +      @Override, +      Type usedInGenericType(Type type) {, +        return JAVA8.usedInGenericType(type);, +      }, +, +      @Override, +      String typeName(Type type) {, +        return JAVA8.typeName(type);, +      }, +, +      @Override, +      boolean jdkTypeDuplicatesOwnerName() {, +        return false;, +      }, +        if (new TypeCapture<Map.Entry<String, int[][]>>() {}.capture(), +            .toString(), +            .contains("java.util.Map.java.util.Map")) {, +        } else {, +          CURRENT = JAVA9;, +        }, +    boolean jdkTypeDuplicatesOwnerName() {, +      return true;, +    }, +, +++ b/android/guava/src/com/google/common/reflect/Types.java, +import java.util.Map;, +      if (ownerType != null && JavaVersion.CURRENT.jdkTypeDuplicatesOwnerName()) {, +  // TODO(benyu): Once behavior is the same for all Java versions we support, delete this., +    },, +    JAVA9 {, +      @Override, +      Type newArrayType(Type componentType) {, +        return JAVA8.newArrayType(componentType);, +      }, +, +      @Override, +      Type usedInGenericType(Type type) {, +        return JAVA8.usedInGenericType(type);, +      }, +, +      @Override, +      String typeName(Type type) {, +        return JAVA8.typeName(type);, +      }, +, +      @Override, +      boolean jdkTypeDuplicatesOwnerName() {, +        return false;, +      }, +        if (new TypeCapture<Map.Entry<String, int[][]>>() {}.capture(), +            .toString(), +            .contains("java.util.Map.java.util.Map")) {, +        } else {, +          CURRENT = JAVA9;, +        }, +    boolean jdkTypeDuplicatesOwnerName() {, +      return true;, +    }, +, +++ b/guava/src/com/google/common/reflect/Types.java, +import java.util.Map;, +      if (ownerType != null && JavaVersion.CURRENT.jdkTypeDuplicatesOwnerName()) {, +  // TODO(benyu): Once behavior is the same for all Java versions we support, delete this., +    },, +    JAVA9 {, +      @Override, +      Type newArrayType(Type componentType) {, +        return JAVA8.newArrayType(componentType);, +      }, +, +      @Override, +      Type usedInGenericType(Type type) {, +        return JAVA8.usedInGenericType(type);, +      }, +, +      @Override, +      String typeName(Type type) {, +        return JAVA8.typeName(type);, +      }, +, +      @Override, +      boolean jdkTypeDuplicatesOwnerName() {, +        return false;, +      }, +        if (new TypeCapture<Map.Entry<String, int[][]>>() {}.capture(), +            .toString(), +            .contains("java.util.Map.java.util.Map")) {, +        } else {, +          CURRENT = JAVA9;]