[+++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapGenerators.java, +import com.google.common.collect.Maps;, +import java.util.Map;, +  , +  public static class ImmutableBiMapCopyOfGenerator extends TestStringBiMapGenerator {, +    @Override protected BiMap<String, String> create(Entry<String, String>[] entries) {, +      Map<String, String> builder = Maps.newLinkedHashMap();, +      for (Entry<String, String> entry : entries) {, +        builder.put(entry.getKey(), entry.getValue());, +      }, +      return ImmutableBiMap.copyOf(builder);, +    }, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapGenerators.java, +import com.google.common.collect.Maps;, +import java.util.Map;, +  , +  public static class ImmutableBiMapCopyOfGenerator extends TestStringBiMapGenerator {, +    @Override protected BiMap<String, String> create(Entry<String, String>[] entries) {, +      Map<String, String> builder = Maps.newLinkedHashMap();, +      for (Entry<String, String> entry : entries) {, +        builder.put(entry.getKey(), entry.getValue());, +      }, +      return ImmutableBiMap.copyOf(builder);, +    }, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +  , +  public static class ImmutableMapCopyOfGenerator, +      extends TestStringMapGenerator {, +    @Override protected Map<String, String> create(Entry<String, String>[] entries) {, +      Map<String, String> builder = Maps.newLinkedHashMap();, +      for (Entry<String, String> entry : entries) {, +        builder.put(entry.getKey(), entry.getValue());, +      }, +      return ImmutableMap.copyOf(builder);, +    }, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapGenerators.java, +import com.google.common.collect.Maps;, +import java.util.Map;, +  , +  public static class ImmutableBiMapCopyOfGenerator extends TestStringBiMapGenerator {, +    @Override protected BiMap<String, String> create(Entry<String, String>[] entries) {, +      Map<String, String> builder = Maps.newLinkedHashMap();, +      for (Entry<String, String> entry : entries) {, +        builder.put(entry.getKey(), entry.getValue());, +      }, +      return ImmutableBiMap.copyOf(builder);, +    }, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +  , +  public static class ImmutableMapCopyOfGenerator, +      extends TestStringMapGenerator {, +    @Override protected Map<String, String> create(Entry<String, String>[] entries) {, +      Map<String, String> builder = Maps.newLinkedHashMap();, +      for (Entry<String, String> entry : entries) {, +        builder.put(entry.getKey(), entry.getValue());, +      }, +      return ImmutableMap.copyOf(builder);, +    }, +  }, +++ b/guava-tests/test/com/google/common/collect/ImmutableBiMapTest.java, +import com.google.common.collect.testing.google.BiMapGenerators.ImmutableBiMapCopyOfGenerator;, +    suite.addTest(BiMapTestSuiteBuilder.using(new ImmutableBiMapCopyOfGenerator()), +        .named("ImmutableBiMap.copyOf"), +        .withFeatures(CollectionSize.ANY,, +            CollectionFeature.SERIALIZABLE,, +            CollectionFeature.KNOWN_ORDER,, +            MapFeature.ALLOWS_NULL_QUERIES), +        .suppressing(BiMapInverseTester.getInverseSameAfterSerializingMethods()), +        .createTestSuite());, +++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapGenerators.java, +import com.google.common.collect.Maps;, +import java.util.Map;, +  , +  public static class ImmutableBiMapCopyOfGenerator extends TestStringBiMapGenerator {, +    @Override protected BiMap<String, String> create(Entry<String, String>[] entries) {, +      Map<String, String> builder = Maps.newLinkedHashMap();, +      for (Entry<String, String> entry : entries) {, +        builder.put(entry.getKey(), entry.getValue());, +      }, +      return ImmutableBiMap.copyOf(builder);, +    }, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +  , +  public static class ImmutableMapCopyOfGenerator, +      extends TestStringMapGenerator {, +    @Override protected Map<String, String> create(Entry<String, String>[] entries) {, +      Map<String, String> builder = Maps.newLinkedHashMap();, +      for (Entry<String, String> entry : entries) {, +        builder.put(entry.getKey(), entry.getValue());, +      }, +      return ImmutableMap.copyOf(builder);, +    }, +  }, +++ b/guava-tests/test/com/google/common/collect/ImmutableBiMapTest.java, +import com.google.common.collect.testing.google.BiMapGenerators.ImmutableBiMapCopyOfGenerator;]