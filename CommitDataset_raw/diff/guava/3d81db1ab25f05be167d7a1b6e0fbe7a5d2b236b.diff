[+++ b/guava/src/com/google/common/collect/Collections2.java, + * <p><b>Java 8 users:</b> several common uses for this class are now more comprehensively addressed, + * by the new {@link java.util.stream.Stream} library. Read the method documentation below for, + * comparisons. These methods are not being deprecated, but we gently encourage you to migrate to, + * streams., + *, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#filter}., +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#map}., +++ b/guava/src/com/google/common/collect/Collections2.java, + * <p><b>Java 8 users:</b> several common uses for this class are now more comprehensively addressed, + * by the new {@link java.util.stream.Stream} library. Read the method documentation below for, + * comparisons. These methods are not being deprecated, but we gently encourage you to migrate to, + * streams., + *, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#filter}., +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#map}., +++ b/guava/src/com/google/common/collect/Iterables.java, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#filter}., +   * <p><b>{@code Stream} equivalent:</b> {@code stream.filter(predicate).findFirst().get()}, +   *, +   * <p><b>{@code Stream} equivalent:</b>, +   * {@code stream.filter(predicate).findFirst().orElse(defaultValue)}, +   *, +   * <p><b>{@code Stream} equivalent:</b>, +   * {@code stream.filter(predicate).findFirst()}, +   *, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#map}, +   * <p><b>{@code Stream} equivalent:</b> {@code stream.skip(position).findFirst().get()}, +   * (throws {@code NoSuchElementException} if out of bounds), +   *, +   * <p><b>{@code Stream} equivalent:</b>, +   * {@code stream.skip(position).findFirst().orElse(defaultValue)}, +   * (returns the default value if the index is out of bounds), +   *, +   * <p><b>{@code Stream} equivalent:</b> {@code stream.findFirst().orElse(defaultValue)}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Streams#findLast Streams.findLast(stream).get()}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@code Streams.findLast(stream).orElse(defaultValue)}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#skip}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#limit}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@code !stream.findAny().isPresent()}, +   *, +++ b/guava/src/com/google/common/collect/Collections2.java, + * <p><b>Java 8 users:</b> several common uses for this class are now more comprehensively addressed, + * by the new {@link java.util.stream.Stream} library. Read the method documentation below for, + * comparisons. These methods are not being deprecated, but we gently encourage you to migrate to, + * streams., + *, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#filter}., +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#map}., +++ b/guava/src/com/google/common/collect/Iterables.java, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#filter}., +   * <p><b>{@code Stream} equivalent:</b> {@code stream.filter(predicate).findFirst().get()}, +   *, +   * <p><b>{@code Stream} equivalent:</b>, +   * {@code stream.filter(predicate).findFirst().orElse(defaultValue)}, +   *, +   * <p><b>{@code Stream} equivalent:</b>, +   * {@code stream.filter(predicate).findFirst()}, +   *, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#map}, +   * <p><b>{@code Stream} equivalent:</b> {@code stream.skip(position).findFirst().get()}, +   * (throws {@code NoSuchElementException} if out of bounds), +   *, +   * <p><b>{@code Stream} equivalent:</b>, +   * {@code stream.skip(position).findFirst().orElse(defaultValue)}, +   * (returns the default value if the index is out of bounds), +   *, +   * <p><b>{@code Stream} equivalent:</b> {@code stream.findFirst().orElse(defaultValue)}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Streams#findLast Streams.findLast(stream).get()}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@code Streams.findLast(stream).orElse(defaultValue)}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#skip}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@link Stream#limit}, +   *, +   * <p><b>{@code Stream} equivalent:</b> {@code !stream.findAny().isPresent()}, +   *, +++ b/guava/src/com/google/common/collect/Lists.java, +   *, +   * <p><b>Java 8 users:</b> many use cases for this method are better addressed, +   *  by {@link java.util.stream.Stream#map}. This method is not being, +   * deprecated, but we gently encourage you to migrate to streams., +++ b/guava/src/com/google/common/collect/Collections2.java, + * <p><b>Java 8 users:</b> several common uses for this class are now more comprehensively addressed, + * by the new {@link java.util.stream.Stream} library. Read the method documentation below for]