[+++ b/android/guava/src/com/google/common/collect/BinaryTreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods except, + *     for {@link #inOrderTraversal} have their equivalent on the result of {@code, + *     Traverser.forTree(tree)} where {@code tree} implements {@code SuccessorsFunction}, which has, + *     a similar API as {@link #children}., + *     <p>This class is scheduled to be removed in January 2018., +@Deprecated, +++ b/android/guava/src/com/google/common/collect/BinaryTreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods except, + *     for {@link #inOrderTraversal} have their equivalent on the result of {@code, + *     Traverser.forTree(tree)} where {@code tree} implements {@code SuccessorsFunction}, which has, + *     a similar API as {@link #children}., + *     <p>This class is scheduled to be removed in January 2018., +@Deprecated, +++ b/android/guava/src/com/google/common/collect/TreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods have, + *     their equivalent on the result of {@code Traverser.forTree(tree)} where {@code tree}, + *     implements {@code SuccessorsFunction}, which has a similar API as {@link #children} or can be, + *     the same lambda function as passed into {@link #using(Function)}., + *     <p>This class is scheduled to be removed in January 2018., +@Deprecated, +   * @deprecated Use {@link com.google.common.graph.Traverser#forTree} instead. If you are using a, +   *     lambda, these methods have exactly the same signature., +  @Deprecated, +   * Returns an unmodifiable iterable over the nodes in a tree structure, using pre-order traversal., +   * That is, each node's subtrees are traversed after the node itself is returned., +   * <p>No guarantees are made about the behavior of the traversal when nodes change while iteration, +   * is in progress or when the iterators generated by {@link #children} are advanced., +   *, +   * @deprecated Use {@link com.google.common.graph.Traverser#depthFirstPreOrder} instead, which has, +   *     the same behavior., +  @Deprecated, +   * <p>No guarantees are made about the behavior of the traversal when nodes change while iteration, +   * is in progress or when the iterators generated by {@link #children} are advanced., +   *, +   * @deprecated Use {@link com.google.common.graph.Traverser#depthFirstPostOrder} instead, which, +   *     has the same behavior., +  @Deprecated, +   * <p>No guarantees are made about the behavior of the traversal when nodes change while iteration, +   * is in progress or when the iterators generated by {@link #children} are advanced., +   *, +   * @deprecated Use {@link com.google.common.graph.Traverser#breadthFirst} instead, which has the, +   *     same behavior., +  @Deprecated, +++ b/android/guava/src/com/google/common/collect/BinaryTreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods except, + *     for {@link #inOrderTraversal} have their equivalent on the result of {@code, + *     Traverser.forTree(tree)} where {@code tree} implements {@code SuccessorsFunction}, which has, + *     a similar API as {@link #children}., + *     <p>This class is scheduled to be removed in January 2018., +@Deprecated, +++ b/android/guava/src/com/google/common/collect/TreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods have, + *     their equivalent on the result of {@code Traverser.forTree(tree)} where {@code tree}, + *     implements {@code SuccessorsFunction}, which has a similar API as {@link #children} or can be, + *     the same lambda function as passed into {@link #using(Function)}., + *     <p>This class is scheduled to be removed in January 2018., +@Deprecated, +   * @deprecated Use {@link com.google.common.graph.Traverser#forTree} instead. If you are using a, +   *     lambda, these methods have exactly the same signature., +  @Deprecated, +   * Returns an unmodifiable iterable over the nodes in a tree structure, using pre-order traversal., +   * That is, each node's subtrees are traversed after the node itself is returned., +   * <p>No guarantees are made about the behavior of the traversal when nodes change while iteration, +   * is in progress or when the iterators generated by {@link #children} are advanced., +   *, +   * @deprecated Use {@link com.google.common.graph.Traverser#depthFirstPreOrder} instead, which has, +   *     the same behavior., +  @Deprecated, +   * <p>No guarantees are made about the behavior of the traversal when nodes change while iteration, +   * is in progress or when the iterators generated by {@link #children} are advanced., +   *, +   * @deprecated Use {@link com.google.common.graph.Traverser#depthFirstPostOrder} instead, which, +   *     has the same behavior., +  @Deprecated, +   * <p>No guarantees are made about the behavior of the traversal when nodes change while iteration, +   * is in progress or when the iterators generated by {@link #children} are advanced., +   *, +   * @deprecated Use {@link com.google.common.graph.Traverser#breadthFirst} instead, which has the, +   *     same behavior., +  @Deprecated, +++ b/guava/src/com/google/common/collect/BinaryTreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods except, + *     for {@link #inOrderTraversal} have their equivalent on the result of {@code, + *     Traverser.forTree(tree)} where {@code tree} implements {@code SuccessorsFunction}, which has, + *     a similar API as {@link #children}., + *     <p>This class is scheduled to be removed in January 2018., +@Deprecated, +++ b/android/guava/src/com/google/common/collect/BinaryTreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods except, + *     for {@link #inOrderTraversal} have their equivalent on the result of {@code, + *     Traverser.forTree(tree)} where {@code tree} implements {@code SuccessorsFunction}, which has, + *     a similar API as {@link #children}., + *     <p>This class is scheduled to be removed in January 2018., +@Deprecated, +++ b/android/guava/src/com/google/common/collect/TreeTraverser.java, + * @deprecated Use {@link com.google.common.graph.Traverser} instead. All instance methods have, + *     their equivalent on the result of {@code Traverser.forTree(tree)} where {@code tree}, + *     implements {@code SuccessorsFunction}, which has a similar API as {@link #children} or can be, + *     the same lambda function as passed into {@link #using(Function)}.]