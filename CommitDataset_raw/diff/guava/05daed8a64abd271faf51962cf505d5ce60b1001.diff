[+++ b/guava-gwt/src-super/java/util/super/java/util/concurrent/TimeUnit.java, +    public long toMicros(long d)  { return d / C1_C0; }, +    public long toMillis(long d)  { return d / C2_C0; }, +    public long toSeconds(long d) { return d / C3_C0; }, +    public long toMinutes(long d) { return d / C4_C0; }, +    public long toHours(long d)   { return d / C5_C0; }, +    public long toDays(long d)    { return d / C6_C0; }, +    public long toNanos(long d)   { return x(d, C1_C0, MAX_C1_C0); }, +    public long toMillis(long d)  { return d / C2_C1; }, +    public long toSeconds(long d) { return d / C3_C1; }, +    public long toMinutes(long d) { return d / C4_C1; }, +    public long toHours(long d)   { return d / C5_C1; }, +    public long toDays(long d)    { return d / C6_C1; }, +    public long toNanos(long d)   { return x(d, C2_C0, MAX_C2_C0); }, +    public long toMicros(long d)  { return x(d, C2_C1, MAX_C2_C1); }, +    public long toSeconds(long d) { return d / C3_C2; }, +    public long toMinutes(long d) { return d / C4_C2; }, +    public long toHours(long d)   { return d / C5_C2; }, +    public long toDays(long d)    { return d / C6_C2; }, +    public long toNanos(long d)   { return x(d, C3_C0, MAX_C3_C0); }, +    public long toMicros(long d)  { return x(d, C3_C1, MAX_C3_C1); }, +    public long toMillis(long d)  { return x(d, C3_C2, MAX_C3_C2); }, +    public long toMinutes(long d) { return d / C4_C3; }, +    public long toHours(long d)   { return d / C5_C3; }, +    public long toDays(long d)    { return d / C6_C3; }, +    public long toNanos(long d)   { return x(d, C4_C0, MAX_C4_C0); }, +    public long toMicros(long d)  { return x(d, C4_C1, MAX_C4_C1); }, +    public long toMillis(long d)  { return x(d, C4_C2, MAX_C4_C2); }, +    public long toSeconds(long d) { return x(d, C4_C3, MAX_C4_C3); }, +    public long toHours(long d)   { return d / C5_C4; }, +    public long toDays(long d)    { return d / C6_C4; }, +    public long toNanos(long d)   { return x(d, C5_C0, MAX_C5_C0); }, +    public long toMicros(long d)  { return x(d, C5_C1, MAX_C5_C1); }, +    public long toMillis(long d)  { return x(d, C5_C2, MAX_C5_C2); }, +    public long toSeconds(long d) { return x(d, C5_C3, MAX_C5_C3); }, +    public long toMinutes(long d) { return x(d, C5_C4, MAX_C5_C4); }, +    public long toDays(long d)    { return d / C6_C5; }, +    public long toNanos(long d)   { return x(d, C6_C0, MAX_C6_C0); }, +    public long toMicros(long d)  { return x(d, C6_C1, MAX_C6_C1); }, +    public long toMillis(long d)  { return x(d, C6_C2, MAX_C6_C2); }, +    public long toSeconds(long d) { return x(d, C6_C3, MAX_C6_C3); }, +    public long toMinutes(long d) { return x(d, C6_C4, MAX_C6_C4); }, +    public long toHours(long d)   { return x(d, C6_C5, MAX_C6_C5); }, +  static final long C6_C0 = C6 / C0;, +  static final long C6_C1 = C6 / C1;, +  static final long C6_C2 = C6 / C2;, +  static final long C6_C3 = C6 / C3;, +  static final long C6_C4 = C6 / C4;, +  static final long C6_C5 = C6 / C5;, +, +  static final long C5_C0 = C5 / C0;, +  static final long C5_C1 = C5 / C1;, +  static final long C5_C2 = C5 / C2;, +  static final long C5_C3 = C5 / C3;, +  static final long C5_C4 = C5 / C4;, +, +  static final long C4_C0 = C4 / C0;, +  static final long C4_C1 = C4 / C1;, +  static final long C4_C2 = C4 / C2;, +  static final long C4_C3 = C4 / C3;, +  , +  static final long C3_C0 = C3 / C0;, +  static final long C3_C1 = C3 / C1;, +  static final long C3_C2 = C3 / C2;, +  , +  static final long C2_C0 = C2 / C0;, +  static final long C2_C1 = C2 / C1;, +  , +  static final long C1_C0 = C1 / C0;, +, +  static final long MAX_C6_C0 = MAX / C6_C0;, +  static final long MAX_C6_C1 = MAX / C6_C1;, +  static final long MAX_C6_C2 = MAX / C6_C2;, +  static final long MAX_C6_C3 = MAX / C6_C3;, +  static final long MAX_C6_C4 = MAX / C6_C4;, +  static final long MAX_C6_C5 = MAX / C6_C5;, +, +  static final long MAX_C5_C0 = MAX / C5_C0;, +  static final long MAX_C5_C1 = MAX / C5_C1;, +  static final long MAX_C5_C2 = MAX / C5_C2;, +  static final long MAX_C5_C3 = MAX / C5_C3;, +  static final long MAX_C5_C4 = MAX / C5_C4;, +, +  static final long MAX_C4_C0 = MAX / C4_C0;, +  static final long MAX_C4_C1 = MAX / C4_C1;, +  static final long MAX_C4_C2 = MAX / C4_C2;, +  static final long MAX_C4_C3 = MAX / C4_C3;, +, +  static final long MAX_C3_C0 = MAX / C3_C0;, +  static final long MAX_C3_C1 = MAX / C3_C1;, +  static final long MAX_C3_C2 = MAX / C3_C2;, +, +  static final long MAX_C2_C0 = MAX / C2_C0;, +  static final long MAX_C2_C1 = MAX / C2_C1;, +, +  static final long MAX_C1_C0 = MAX / C1_C0;, +  ]