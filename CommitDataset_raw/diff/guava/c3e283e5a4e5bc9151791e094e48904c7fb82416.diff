[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/GenericMapMaker.java, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +          .keyEquivalence(keyEquivalence), +          .valueEquivalence(valueEquivalence), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +          .keyEquivalence(keyEquivalence), +          .valueEquivalence(valueEquivalence), +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +  /**, +   * See {@link MapMaker#keyEquivalence}., +   */, +  @GwtIncompatible("To be supported"), +  abstract GenericMapMaker<K0, V0> keyEquivalence(Equivalence<Object> equivalence);, +, +  /**, +   * See {@link MapMaker#valueEquivalence}., +   */, +  @GwtIncompatible("To be supported"), +  abstract GenericMapMaker<K0, V0> valueEquivalence(Equivalence<Object> equivalence);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +          .keyEquivalence(keyEquivalence), +          .valueEquivalence(valueEquivalence), +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +  /**, +   * See {@link MapMaker#keyEquivalence}., +   */, +  @GwtIncompatible("To be supported"), +  abstract GenericMapMaker<K0, V0> keyEquivalence(Equivalence<Object> equivalence);, +, +  /**, +   * See {@link MapMaker#valueEquivalence}., +   */, +  @GwtIncompatible("To be supported"), +  abstract GenericMapMaker<K0, V0> valueEquivalence(Equivalence<Object> equivalence);, +++ b/guava/src/com/google/common/collect/Interners.java, +          .keyEquivalence(Equivalences.equals()), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +          .keyEquivalence(keyEquivalence), +          .valueEquivalence(valueEquivalence), +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +  /**, +   * See {@link MapMaker#keyEquivalence}., +   */, +  @GwtIncompatible("To be supported"), +  abstract GenericMapMaker<K0, V0> keyEquivalence(Equivalence<Object> equivalence);, +, +  /**, +   * See {@link MapMaker#valueEquivalence}., +   */, +  @GwtIncompatible("To be supported"), +  abstract GenericMapMaker<K0, V0> valueEquivalence(Equivalence<Object> equivalence);, +++ b/guava/src/com/google/common/collect/Interners.java, +          .keyEquivalence(Equivalences.equals()), +++ b/guava/src/com/google/common/collect/MapMaker.java, +import com.google.common.base.Equivalences;, +  /**, +   * Sets a custom {@code Equivalence} strategy for comparing keys., +   *, +   * <p>By default, the map uses {@link Equivalences#identity} to determine key equality when, +   * {@link #weakKeys} or {@link #softKeys} is specified, and {@link Equivalences#equals()}, +   * otherwise., +   */, +  @GwtIncompatible("To be supported"), +  MapMaker keyEquivalence(Equivalence<Object> equivalence) {, +  /**, +   * Sets a custom {@code Equivalence} strategy for comparing values., +   *, +   * <p>By default, the map uses {@link Equivalences#identity} to determine value equality when, +   * {@link #weakValues} or {@link #softValues} is specified, and {@link Equivalences#equals()}, +   * otherwise., +   */, +  @GwtIncompatible("To be supported"), +  @Override, +  MapMaker valueEquivalence(Equivalence<Object> equivalence) {]