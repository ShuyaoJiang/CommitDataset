[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +   * Returns an {@code ImmutableMultiset} containing all of the elements from this fluent iterable., +   *, +   * @since 19.0, +   */, +  public final ImmutableMultiset<E> toMultiset() {, +    return ImmutableMultiset.copyOf(iterable);, +  }, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +   * Returns an {@code ImmutableMultiset} containing all of the elements from this fluent iterable., +   *, +   * @since 19.0, +   */, +  public final ImmutableMultiset<E> toMultiset() {, +    return ImmutableMultiset.copyOf(iterable);, +  }, +, +  /**, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +  public void testToMultiset() {, +    assertThat(fluent(1, 2, 1, 3, 2, 4).toMultiset()).containsExactly(1, 1, 2, 2, 3, 4).inOrder();, +  }, +, +  public void testToMultiset_empty() {, +    assertThat(fluent().toMultiset()).isEmpty();, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +   * Returns an {@code ImmutableMultiset} containing all of the elements from this fluent iterable., +   *, +   * @since 19.0, +   */, +  public final ImmutableMultiset<E> toMultiset() {, +    return ImmutableMultiset.copyOf(iterable);, +  }, +, +  /**, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +  public void testToMultiset() {, +    assertThat(fluent(1, 2, 1, 3, 2, 4).toMultiset()).containsExactly(1, 1, 2, 2, 3, 4).inOrder();, +  }, +, +  public void testToMultiset_empty() {, +    assertThat(fluent().toMultiset()).isEmpty();, +  }, +, +++ b/guava/src/com/google/common/collect/FluentIterable.java, +   * Returns an {@code ImmutableMultiset} containing all of the elements from this fluent iterable., +   *, +   * @since 19.0, +   */, +  public final ImmutableMultiset<E> toMultiset() {, +    return ImmutableMultiset.copyOf(iterable);, +  }, +, +  /**]