[+++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/ForwardingService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/ForwardingService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +   * <b>Soon to be removed (for Guava release 11), use, +  // TODO(user): Make this package-private internally, +  @Deprecated, +        return Uninterruptibles.getUninterruptibly(future, timeout, unit);, +        return Uninterruptibles.getUninterruptibly(future);, +++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/ForwardingService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +   * <b>Soon to be removed (for Guava release 11), use, +  // TODO(user): Make this package-private internally, +  @Deprecated, +        return Uninterruptibles.getUninterruptibly(future, timeout, unit);, +        return Uninterruptibles.getUninterruptibly(future);, +++ b/guava/src/com/google/common/util/concurrent/SimpleTimeLimiter.java, +        return Uninterruptibles.getUninterruptibly(future, , +            timeoutDuration, timeoutUnit);, +++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/ForwardingService.java, +      return Uninterruptibles.getUninterruptibly(start());, +      return Uninterruptibles.getUninterruptibly(stop());, +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +   * <b>Soon to be removed (for Guava release 11), use, +  // TODO(user): Make this package-private internally, +  @Deprecated, +        return Uninterruptibles.getUninterruptibly(future, timeout, unit);, +        return Uninterruptibles.getUninterruptibly(future);, +++ b/guava/src/com/google/common/util/concurrent/SimpleTimeLimiter.java, +        return Uninterruptibles.getUninterruptibly(future, , +            timeoutDuration, timeoutUnit);, +++ b/guava/src/com/google/common/util/concurrent/UninterruptibleFuture.java, + * <b>Soon to be removed (in Guava release 11),, + * prefer using {@link Uninterruptibles#getUninterruptibly(Future)}</b>., +// TODO(user): Make this package-private internally, +@Deprecated]