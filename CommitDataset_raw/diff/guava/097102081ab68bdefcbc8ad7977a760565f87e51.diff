[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava/src/com/google/common/collect/Collections2.java, +import java.util.List;, +   *, +   * <p>If the input {@code Collection} is known to be a {@code List}, consider, +   * {@link Lists#transform}. If only an {@code Iterable} is available, use, +   * {@link Iterables#transform}., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava/src/com/google/common/collect/Collections2.java, +import java.util.List;, +   *, +   * <p>If the input {@code Collection} is known to be a {@code List}, consider, +   * {@link Lists#transform}. If only an {@code Iterable} is available, use, +   * {@link Iterables#transform}., +++ b/guava/src/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava/src/com/google/common/collect/Collections2.java, +import java.util.List;, +   *, +   * <p>If the input {@code Collection} is known to be a {@code List}, consider, +   * {@link Lists#transform}. If only an {@code Iterable} is available, use, +   * {@link Iterables#transform}., +++ b/guava/src/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava/src/com/google/common/collect/Lists.java, +   *, +   * <p>If only a {@code Collection} or {@code Iterable} input is available, use, +   * {@link Collections2#transform} or {@link Iterables#transform}., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava/src/com/google/common/collect/Collections2.java, +import java.util.List;, +   *, +   * <p>If the input {@code Collection} is known to be a {@code List}, consider, +   * {@link Lists#transform}. If only an {@code Iterable} is available, use, +   * {@link Iterables#transform}., +++ b/guava/src/com/google/common/collect/Iterables.java, +   *, +   * <p>If the input {@code Iterable} is known to be a {@code List} or other, +   * {@code Collection}, consider {@link Lists#transform} and {@link, +   * Collections2#transform}., +++ b/guava/src/com/google/common/collect/Lists.java, +   *, +   * <p>If only a {@code Collection} or {@code Iterable} input is available, use, +   * {@link Collections2#transform} or {@link Iterables#transform}., +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +      throw new UncheckedExecutionException(cause);, +   * code, will not fail. This gives it exception-handling behavior similar to, +   * that of {@code ForkJoinTask.join}.]