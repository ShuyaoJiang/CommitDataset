[+++ b/guava-testlib/src/com/google/common/collect/testing/ListTestSuiteBuilder.java, +    withFeatures(CollectionFeature.KNOWN_ORDER);, +++ b/guava-testlib/src/com/google/common/collect/testing/ListTestSuiteBuilder.java, +    withFeatures(CollectionFeature.KNOWN_ORDER);, +++ b/guava-testlib/src/com/google/common/collect/testing/google/SortedMultisetTestSuiteBuilder.java, +    withFeatures(CollectionFeature.KNOWN_ORDER);, +++ b/guava-testlib/src/com/google/common/collect/testing/ListTestSuiteBuilder.java, +    withFeatures(CollectionFeature.KNOWN_ORDER);, +++ b/guava-testlib/src/com/google/common/collect/testing/google/SortedMultisetTestSuiteBuilder.java, +    withFeatures(CollectionFeature.KNOWN_ORDER);, +++ b/guava-tests/test/com/google/common/collect/ImmutableSortedMultisetTest.java, +import static com.google.common.base.Preconditions.checkArgument;, +import com.google.common.collect.testing.ListTestSuiteBuilder;, +import com.google.common.collect.testing.TestStringListGenerator;, +      }), +      .named("ImmutableSortedMultiset"), +      .withFeatures(CollectionSize.ANY,, +    suite.addTest(ListTestSuiteBuilder.using(new TestStringListGenerator() {, +        protected List<String> create(String[] elements) {, +          return ImmutableSortedMultiset.copyOf(elements).asList();, +          return Ordering.natural().sortedCopy(insertionOrder);, +      }), +      .named("ImmutableSortedMultiset.asList"), +      .withFeatures(CollectionSize.ANY,, +          CollectionFeature.SERIALIZABLE,, +          CollectionFeature.ALLOWS_NULL_QUERIES), +        .createTestSuite());, +, +    suite.addTest(ListTestSuiteBuilder.using(new TestStringListGenerator() {, +        @Override, +        protected List<String> create(String[] elements) {, +          Set<String> set = Sets.newHashSet();, +          ImmutableSortedMultiset.Builder<String> builder = ImmutableSortedMultiset.naturalOrder();, +          for (String s : elements) {, +            checkArgument(set.add(s));, +            builder.addCopies(s, 2);, +          }, +          return builder.build().elementSet().asList();, +        }, +, +        @Override, +        public List<String> order(List<String> insertionOrder) {, +          return Ordering.natural().sortedCopy(insertionOrder);, +        }, +      }), +      .named("ImmutableSortedMultiset.elementSet.asList"), +      .withFeatures(CollectionSize.ANY,, +          CollectionFeature.REJECTS_DUPLICATES_AT_CREATION,, +          CollectionFeature.SERIALIZABLE,]