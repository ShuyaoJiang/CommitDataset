[+++ b/guava/src/com/google/common/base/Converter.java, +  @Nullable, +  public final B convert(@Nullable A a) {, +  @Nullable, +  B correctedDoForward(@Nullable A a) {, +  @Nullable, +  A correctedDoBackward(@Nullable B b) {, +, +          @Override, +          public boolean hasNext() {, +, +          @Override, +          public B next() {, +, +          @Override, +          public void remove() {, +    @Override, +    protected A doForward(B b) {, +    @Override, +    protected B doBackward(A a) {, +    @Override, +    @Nullable, +    A correctedDoForward(@Nullable B b) {, +    @Override, +    @Nullable, +    B correctedDoBackward(@Nullable A a) {, +    @Override, +    public Converter<A, B> reverse() {, +    @Override, +    public boolean equals(@Nullable Object object) {, +    @Override, +    public int hashCode() {, +    @Override, +    public String toString() {, +    @Override, +    protected C doForward(A a) {, +    @Override, +    protected A doBackward(C c) {, +    @Override, +    @Nullable, +    C correctedDoForward(@Nullable A a) {, +    @Override, +    @Nullable, +    A correctedDoBackward(@Nullable C c) {, +    @Override, +    public boolean equals(@Nullable Object object) {, +    @Override, +    public int hashCode() {, +    @Override, +    public String toString() {, +  @Nullable, +  public final B apply(@Nullable A a) {, +    @Override, +    protected B doForward(A a) {, +    @Override, +    protected A doBackward(B b) {, +    @Override, +    public boolean equals(@Nullable Object object) {, +    @Override, +    public int hashCode() {, +    @Override, +    public String toString() {, +    @Override, +    protected T doForward(T t) {, +    @Override, +    protected T doBackward(T t) {, +    @Override, +    public IdentityConverter<T> reverse() {, +    @Override, +    public <S> Converter<T, S> andThen(Converter<T, S> otherConverter) {, +    @Override, +    public String toString() {]