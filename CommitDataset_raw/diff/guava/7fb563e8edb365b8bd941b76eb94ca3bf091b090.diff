[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * "http://code.google.com/p/guava-libraries/wiki/FunctionalExplained">the, + * use of {@code Predicate}</a>., +      // add a random number to avoid collisions with OrPredicate, +      // add a random number to avoid collisions with AndPredicate, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * "http://code.google.com/p/guava-libraries/wiki/FunctionalExplained">the, + * use of {@code Predicate}</a>., +      // add a random number to avoid collisions with OrPredicate, +      // add a random number to avoid collisions with AndPredicate, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumHashBiMap.java, +  // Overriding these 3 methods to show that values may be null (but not keys), +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * "http://code.google.com/p/guava-libraries/wiki/FunctionalExplained">the, + * use of {@code Predicate}</a>., +      // add a random number to avoid collisions with OrPredicate, +      // add a random number to avoid collisions with AndPredicate, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumHashBiMap.java, +  // Overriding these 3 methods to show that values may be null (but not keys), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +   * <p>Because an inverse of a list multimap can contain multiple pairs with, +   * the same key and value, this method returns an {@code, +   * ImmutableListMultimap} rather than the {@code ImmutableMultimap} specified, +   * in the {@code ImmutableMultimap} class., +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * "http://code.google.com/p/guava-libraries/wiki/FunctionalExplained">the, + * use of {@code Predicate}</a>., +      // add a random number to avoid collisions with OrPredicate, +      // add a random number to avoid collisions with AndPredicate, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumHashBiMap.java, +  // Overriding these 3 methods to show that values may be null (but not keys), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +   * <p>Because an inverse of a list multimap can contain multiple pairs with, +   * the same key and value, this method returns an {@code, +   * ImmutableListMultimap} rather than the {@code ImmutableMultimap} specified, +   * in the {@code ImmutableMultimap} class., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +   * @since 11.0, +, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * "http://code.google.com/p/guava-libraries/wiki/FunctionalExplained">the, + * use of {@code Predicate}</a>., +      // add a random number to avoid collisions with OrPredicate, +      // add a random number to avoid collisions with AndPredicate, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumHashBiMap.java, +  // Overriding these 3 methods to show that values may be null (but not keys), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +   * <p>Because an inverse of a list multimap can contain multiple pairs with, +   * the same key and value, this method returns an {@code, +   * ImmutableListMultimap} rather than the {@code ImmutableMultimap} specified, +   * in the {@code ImmutableMultimap} class., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +   * @since 11.0, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSetMultimap.java, +   * <p>Because an inverse of a set multimap cannot contain multiple pairs with, +   * the same key and value, this method returns an {@code ImmutableSetMultimap}, +   * rather than the {@code ImmutableMultimap} specified in the {@code, +   * ImmutableMultimap} class., +   * @since 11.0, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * "http://code.google.com/p/guava-libraries/wiki/FunctionalExplained">the, + * use of {@code Predicate}</a>., +      // add a random number to avoid collisions with OrPredicate, +      // add a random number to avoid collisions with AndPredicate, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumHashBiMap.java, +  // Overriding these 3 methods to show that values may be null (but not keys), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +   * <p>Because an inverse of a list multimap can contain multiple pairs with, +   * the same key and value, this method returns an {@code, +   * ImmutableListMultimap} rather than the {@code ImmutableMultimap} specified, +   * in the {@code ImmutableMultimap} class., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +   * @since 11.0, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSetMultimap.java, +   * <p>Because an inverse of a set multimap cannot contain multiple pairs with, +   * the same key and value, this method returns an {@code ImmutableSetMultimap}, +   * rather than the {@code ImmutableMultimap} specified in the {@code, +   * ImmutableMultimap} class., +   * @since 11.0, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Chars.java, +      // checkNotNull for GWT (do not optimize), +      array[start + index] = checkNotNull(element);, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, + * "http://code.google.com/p/guava-libraries/wiki/FunctionalExplained">the, + * use of {@code Predicate}</a>., +      // add a random number to avoid collisions with OrPredicate, +      // add a random number to avoid collisions with AndPredicate, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumHashBiMap.java, +  // Overriding these 3 methods to show that values may be null (but not keys), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +   * <p>Because an inverse of a list multimap can contain multiple pairs with, +   * the same key and value, this method returns an {@code, +   * ImmutableListMultimap} rather than the {@code ImmutableMultimap} specified, +   * in the {@code ImmutableMultimap} class., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +   * @since 11.0, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSetMultimap.java]