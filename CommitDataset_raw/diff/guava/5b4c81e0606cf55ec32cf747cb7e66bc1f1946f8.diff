[+++ b/guava-tests/test/com/google/common/net/MediaTypeTest.java, +import static com.google.common.net.MediaType.ANY_APPLICATION_TYPE;, +import static com.google.common.net.MediaType.ANY_AUDIO_TYPE;, +import static com.google.common.net.MediaType.ANY_IMAGE_TYPE;, +import static com.google.common.net.MediaType.ANY_TEXT_TYPE;, +import static com.google.common.net.MediaType.ANY_TYPE;, +import static com.google.common.net.MediaType.ANY_VIDEO_TYPE;, +import static com.google.common.net.MediaType.HTML_UTF_8;, +import static com.google.common.net.MediaType.JPEG;, +import static com.google.common.net.MediaType.PLAIN_TEXT_UTF_8;, +import static java.util.Arrays.asList;, +import static java.lang.reflect.Modifier.isFinal;, +import static java.lang.reflect.Modifier.isPublic;, +import static java.lang.reflect.Modifier.isStatic;, +import com.google.common.base.Function;, +import com.google.common.base.Predicate;, +import com.google.common.base.Throwables;, +import com.google.common.collect.FluentIterable;, +import java.lang.reflect.Field;, +import java.nio.charset.Charset;, +  @GwtIncompatible("reflection") public void testParse_useConstants() throws Exception {, +    for (MediaType constant : getConstants()) {, +      assertSame(constant, MediaType.parse(constant.toString()));, +    }, +  }, +, +  @GwtIncompatible("reflection") public void testCreate_useConstants() throws Exception {, +    for (MediaType constant : getConstants()) {, +      assertSame(constant, MediaType.create(constant.type(), constant.subtype()), +          .withParameters(constant.parameters()));, +    }, +  }, +, +  @GwtIncompatible("reflection") public void testConstants_charset() throws Exception {, +    for (Field field : getConstantFields()) {, +      Optional<Charset> charset = ((MediaType) field.get(null)).charset();, +      if (field.getName().endsWith("_UTF_8")) {, +        assertEquals(Optional.of(UTF_8), charset);, +      } else {, +        assertEquals(Optional.absent(), charset);, +      }, +    }, +  }, +, +  @GwtIncompatible("reflection") private static FluentIterable<Field> getConstantFields() {, +    return FluentIterable.from(asList(MediaType.class.getDeclaredFields())), +        .filter(new Predicate<Field>() {, +          @Override public boolean apply(Field input) {, +            int modifiers = input.getModifiers();, +            return isPublic(modifiers) && isStatic(modifiers) && isFinal(modifiers), +                && MediaType.class.equals(input.getType());, +          }, +        });, +  }, +, +  @GwtIncompatible("reflection") private static FluentIterable<MediaType> getConstants() {, +    return getConstantFields(), +        .transform(new Function<Field, MediaType>() {, +          @Override public MediaType apply(Field input) {, +            try {, +              return (MediaType) input.get(null);, +            } catch (Exception e) {, +              throw Throwables.propagate(e);, +            }, +          }, +        });, +  }, +++ b/guava-tests/test/com/google/common/net/MediaTypeTest.java, +import static com.google.common.net.MediaType.ANY_APPLICATION_TYPE;, +import static com.google.common.net.MediaType.ANY_AUDIO_TYPE;, +import static com.google.common.net.MediaType.ANY_IMAGE_TYPE;, +import static com.google.common.net.MediaType.ANY_TEXT_TYPE;, +import static com.google.common.net.MediaType.ANY_TYPE;, +import static com.google.common.net.MediaType.ANY_VIDEO_TYPE;, +import static com.google.common.net.MediaType.HTML_UTF_8;, +import static com.google.common.net.MediaType.JPEG;, +import static com.google.common.net.MediaType.PLAIN_TEXT_UTF_8;, +import static java.util.Arrays.asList;, +import static java.lang.reflect.Modifier.isFinal;, +import static java.lang.reflect.Modifier.isPublic;, +import static java.lang.reflect.Modifier.isStatic;, +import com.google.common.base.Function;, +import com.google.common.base.Predicate;, +import com.google.common.base.Throwables;, +import com.google.common.collect.FluentIterable;, +import java.lang.reflect.Field;, +import java.nio.charset.Charset;, +  @GwtIncompatible("reflection") public void testParse_useConstants() throws Exception {, +    for (MediaType constant : getConstants()) {, +      assertSame(constant, MediaType.parse(constant.toString()));, +    }, +  }, +, +  @GwtIncompatible("reflection") public void testCreate_useConstants() throws Exception {, +    for (MediaType constant : getConstants()) {, +      assertSame(constant, MediaType.create(constant.type(), constant.subtype()), +          .withParameters(constant.parameters()));, +    }, +  }, +]