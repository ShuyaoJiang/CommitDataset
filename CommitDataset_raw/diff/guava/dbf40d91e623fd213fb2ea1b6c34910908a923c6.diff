[+++ b/guava-tests/test/com/google/common/base/SuppliersTest.java, +import com.google.common.testing.ClassSanityTester;, +import com.google.common.testing.EqualsTester;, +  @GwtIncompatible("reflection"), +  public void testSuppliersNullChecks() throws Exception {, +    new ClassSanityTester().forAllPublicStaticMethods(Suppliers.class), +        .testNulls();, +  }, +, +  @GwtIncompatible("reflection"), +  public void testSuppliersSerializable() throws Exception {, +    new ClassSanityTester().forAllPublicStaticMethods(Suppliers.class), +        .testSerializable();, +  }, +, +  public void testOfInstance_equals() {, +    new EqualsTester(), +        .addEqualityGroup(, +            Suppliers.ofInstance("foo"), Suppliers.ofInstance("foo")), +        .addEqualityGroup(Suppliers.ofInstance("bar")), +        .testEquals();, +  }, +, +  public void testCompose_equals() {, +    new EqualsTester(), +        .addEqualityGroup(, +            Suppliers.compose(Functions.constant(1), Suppliers.ofInstance("foo")),, +            Suppliers.compose(Functions.constant(1), Suppliers.ofInstance("foo"))), +        .addEqualityGroup(, +            Suppliers.compose(Functions.constant(2), Suppliers.ofInstance("foo"))), +        .addEqualityGroup(, +            Suppliers.compose(Functions.constant(1), Suppliers.ofInstance("bar"))), +        .testEquals();, +++ b/guava-tests/test/com/google/common/base/SuppliersTest.java, +import com.google.common.testing.ClassSanityTester;, +import com.google.common.testing.EqualsTester;, +  @GwtIncompatible("reflection"), +  public void testSuppliersNullChecks() throws Exception {, +    new ClassSanityTester().forAllPublicStaticMethods(Suppliers.class), +        .testNulls();, +  }, +, +  @GwtIncompatible("reflection"), +  public void testSuppliersSerializable() throws Exception {, +    new ClassSanityTester().forAllPublicStaticMethods(Suppliers.class), +        .testSerializable();, +  }, +, +  public void testOfInstance_equals() {, +    new EqualsTester(), +        .addEqualityGroup(, +            Suppliers.ofInstance("foo"), Suppliers.ofInstance("foo")), +        .addEqualityGroup(Suppliers.ofInstance("bar")), +        .testEquals();, +  }, +, +  public void testCompose_equals() {, +    new EqualsTester(), +        .addEqualityGroup(, +            Suppliers.compose(Functions.constant(1), Suppliers.ofInstance("foo")),, +            Suppliers.compose(Functions.constant(1), Suppliers.ofInstance("foo"))), +        .addEqualityGroup(, +            Suppliers.compose(Functions.constant(2), Suppliers.ofInstance("foo"))), +        .addEqualityGroup(, +            Suppliers.compose(Functions.constant(1), Suppliers.ofInstance("bar"))), +        .testEquals();, +++ b/guava/src/com/google/common/base/Suppliers.java, +    @Override public T get() {, +    @Override public boolean equals(@Nullable Object obj) {, +      if (obj instanceof SupplierComposition) {, +        SupplierComposition<?, ?> that = (SupplierComposition<?, ?>) obj;, +        return function.equals(that.function) && supplier.equals(that.supplier);, +      }, +      return false;, +    }, +, +    @Override public int hashCode() {, +      return Objects.hashCode(function, supplier);, +    }, +, +    @Override public String toString() {, +    @Override public T get() {, +    @Override public String toString() {, +    @Override public T get() {, +    @Override public String toString() {, +    @Override public T get() {, +    @Override public boolean equals(@Nullable Object obj) {, +      if (obj instanceof SupplierOfInstance) {, +        SupplierOfInstance<?> that = (SupplierOfInstance<?>) obj;, +        return Objects.equal(instance, that.instance);, +      }, +      return false;, +    }, +, +    @Override public int hashCode() {, +      return Objects.hashCode(instance);, +    }, +, +    @Override public String toString() {, +    @Override public T get() {]