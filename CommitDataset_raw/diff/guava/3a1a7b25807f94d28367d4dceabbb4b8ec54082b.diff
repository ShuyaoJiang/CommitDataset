[+++ b/android/guava/src/com/google/common/base/Suppliers.java, +   * most once unless the underlying {@code get()} throws an exception. The supplier's serialized, +   * form does not contain the cached value, which will be recalculated when {@code get()} is called, +   * on the reserialized instance., +   *, +   * <p>When the underlying delegate throws an exception then this memoizing supplier will keep, +   * delegating calls until it returns valid data., +   * retrieved, cached, and returned. See: <a, +   * href="http://en.wikipedia.org/wiki/Memoization">memoization</a>, +   * cached value, which will be recalculated when {@code get()} is called on the reserialized, +   * instance. The actual memoization does not happen when the underlying delegate throws an, +   * exception., +   *, +   * <p>When the underlying delegate throws an exception then this memoizing supplier will keep, +   * delegating calls until it returns valid data., +++ b/android/guava/src/com/google/common/base/Suppliers.java, +   * most once unless the underlying {@code get()} throws an exception. The supplier's serialized, +   * form does not contain the cached value, which will be recalculated when {@code get()} is called, +   * on the reserialized instance., +   *, +   * <p>When the underlying delegate throws an exception then this memoizing supplier will keep, +   * delegating calls until it returns valid data., +   * retrieved, cached, and returned. See: <a, +   * href="http://en.wikipedia.org/wiki/Memoization">memoization</a>, +   * cached value, which will be recalculated when {@code get()} is called on the reserialized, +   * instance. The actual memoization does not happen when the underlying delegate throws an, +   * exception., +   *, +   * <p>When the underlying delegate throws an exception then this memoizing supplier will keep, +   * delegating calls until it returns valid data., +++ b/guava/src/com/google/common/base/Suppliers.java, +   * most once unless the underlying {@code get()} throws an exception. The supplier's serialized, +   * form does not contain the cached value, which will be recalculated when {@code get()} is called, +   * on the reserialized instance., +   *, +   * <p>When the underlying delegate throws an exception then this memoizing supplier will keep, +   * delegating calls until it returns valid data., +   * retrieved, cached, and returned. See: <a, +   * href="http://en.wikipedia.org/wiki/Memoization">memoization</a>, +   * cached value, which will be recalculated when {@code get()} is called on the reserialized, +   * instance. The actual memoization does not happen when the underlying delegate throws an, +   * exception., +   *, +   * <p>When the underlying delegate throws an exception then this memoizing supplier will keep, +   * delegating calls until it returns valid data.]