[+++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/android/guava/src/com/google/common/math/DoubleMath.java, +import static com.google.common.math.MathPreconditions.checkInRangeForRoundingInputs;, +    checkInRangeForRoundingInputs(, +        z > MIN_INT_AS_DOUBLE - 1.0 & z < MAX_INT_AS_DOUBLE + 1.0, x, mode);, +    checkInRangeForRoundingInputs(, +        MIN_LONG_AS_DOUBLE - z < 1.0 & z < MAX_LONG_AS_DOUBLE_PLUS_ONE, x, mode);, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/android/guava/src/com/google/common/math/DoubleMath.java, +import static com.google.common.math.MathPreconditions.checkInRangeForRoundingInputs;, +    checkInRangeForRoundingInputs(, +        z > MIN_INT_AS_DOUBLE - 1.0 & z < MAX_INT_AS_DOUBLE + 1.0, x, mode);, +    checkInRangeForRoundingInputs(, +        MIN_LONG_AS_DOUBLE - z < 1.0 & z < MAX_LONG_AS_DOUBLE_PLUS_ONE, x, mode);, +++ b/android/guava/src/com/google/common/math/MathPreconditions.java, +import java.math.RoundingMode;, +  static void checkInRangeForRoundingInputs(boolean condition, double input, RoundingMode mode) {, +      throw new ArithmeticException(, +          "rounded value is out of range for input " + input + " and rounding mode " + mode);, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/android/guava/src/com/google/common/math/DoubleMath.java, +import static com.google.common.math.MathPreconditions.checkInRangeForRoundingInputs;, +    checkInRangeForRoundingInputs(, +        z > MIN_INT_AS_DOUBLE - 1.0 & z < MAX_INT_AS_DOUBLE + 1.0, x, mode);, +    checkInRangeForRoundingInputs(, +        MIN_LONG_AS_DOUBLE - z < 1.0 & z < MAX_LONG_AS_DOUBLE_PLUS_ONE, x, mode);, +++ b/android/guava/src/com/google/common/math/MathPreconditions.java, +import java.math.RoundingMode;, +  static void checkInRangeForRoundingInputs(boolean condition, double input, RoundingMode mode) {, +      throw new ArithmeticException(, +          "rounded value is out of range for input " + input + " and rounding mode " + mode);, +++ b/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/android/guava/src/com/google/common/math/DoubleMath.java, +import static com.google.common.math.MathPreconditions.checkInRangeForRoundingInputs;, +    checkInRangeForRoundingInputs(, +        z > MIN_INT_AS_DOUBLE - 1.0 & z < MAX_INT_AS_DOUBLE + 1.0, x, mode);, +    checkInRangeForRoundingInputs(, +        MIN_LONG_AS_DOUBLE - z < 1.0 & z < MAX_LONG_AS_DOUBLE_PLUS_ONE, x, mode);, +++ b/android/guava/src/com/google/common/math/MathPreconditions.java, +import java.math.RoundingMode;, +  static void checkInRangeForRoundingInputs(boolean condition, double input, RoundingMode mode) {, +      throw new ArithmeticException(, +          "rounded value is out of range for input " + input + " and rounding mode " + mode);, +++ b/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/guava/src/com/google/common/math/DoubleMath.java, +import static com.google.common.math.MathPreconditions.checkInRangeForRoundingInputs;, +    checkInRangeForRoundingInputs(, +        z > MIN_INT_AS_DOUBLE - 1.0 & z < MAX_INT_AS_DOUBLE + 1.0, x, mode);, +    checkInRangeForRoundingInputs(, +        MIN_LONG_AS_DOUBLE - z < 1.0 & z < MAX_LONG_AS_DOUBLE_PLUS_ONE, x, mode);, +++ b/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java, +import java.math.RoundingMode;, +    MathPreconditions.checkInRangeForRoundingInputs(true, 1.0, RoundingMode.UP);, +      MathPreconditions.checkInRangeForRoundingInputs(false, 1.0, RoundingMode.UP);, +      assertThat(expected).hasMessageThat().contains("1.0");, +      assertThat(expected).hasMessageThat().contains("UP");, +++ b/android/guava/src/com/google/common/math/DoubleMath.java, +import static com.google.common.math.MathPreconditions.checkInRangeForRoundingInputs;, +    checkInRangeForRoundingInputs(, +        z > MIN_INT_AS_DOUBLE - 1.0 & z < MAX_INT_AS_DOUBLE + 1.0, x, mode);, +    checkInRangeForRoundingInputs(, +        MIN_LONG_AS_DOUBLE - z < 1.0 & z < MAX_LONG_AS_DOUBLE_PLUS_ONE, x, mode);, +++ b/android/guava/src/com/google/common/math/MathPreconditions.java]