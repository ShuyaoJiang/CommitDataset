[+++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +    void enqueueNotification(@Nullable K key, int hash, @Nullable V value, RemovalCause cause) {, +++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +    void enqueueNotification(@Nullable K key, int hash, @Nullable V value, RemovalCause cause) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableList.java, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +    void enqueueNotification(@Nullable K key, int hash, @Nullable V value, RemovalCause cause) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableList.java, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedSet.java, +  @Override int indexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +    void enqueueNotification(@Nullable K key, int hash, @Nullable V value, RemovalCause cause) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableList.java, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedSet.java, +  @Override int indexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ImmutableSortedAsList.java, +  @Override public boolean contains(@Nullable Object target) {, +    // TODO: why not contains(target)?, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +    void enqueueNotification(@Nullable K key, int hash, @Nullable V value, RemovalCause cause) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableList.java, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedSet.java, +  @Override int indexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ImmutableSortedAsList.java, +  @Override public boolean contains(@Nullable Object target) {, +    // TODO: why not contains(target)?, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ImmutableSortedSet.java, +import javax.annotation.Nullable;, +, +  abstract int indexOf(@Nullable Object target);, +++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +    void enqueueNotification(@Nullable K key, int hash, @Nullable V value, RemovalCause cause) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableList.java, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedSet.java, +  @Override int indexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ImmutableSortedAsList.java, +  @Override public boolean contains(@Nullable Object target) {, +    // TODO: why not contains(target)?, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ImmutableSortedSet.java, +import javax.annotation.Nullable;, +, +  abstract int indexOf(@Nullable Object target);, +++ b/guava/src/com/google/common/collect/RegularImmutableList.java, +  @Override public boolean contains(@Nullable Object target) {, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ContiguousSet.java, +  // TODO: ImmutableSortedSet.indexOf and contains allow null; shouldn't we?, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +    void enqueueNotification(@Nullable K key, int hash, @Nullable V value, RemovalCause cause) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableList.java, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedSet.java, +  @Override int indexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ImmutableSortedAsList.java, +  @Override public boolean contains(@Nullable Object target) {, +    // TODO: why not contains(target)?, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/ImmutableSortedSet.java, +import javax.annotation.Nullable;, +, +  abstract int indexOf(@Nullable Object target);, +++ b/guava/src/com/google/common/collect/RegularImmutableList.java, +  @Override public boolean contains(@Nullable Object target) {, +  @Override public int indexOf(@Nullable Object target) {, +  @Override public int lastIndexOf(@Nullable Object target) {, +++ b/guava/src/com/google/common/collect/RegularImmutableSortedSet.java, +  @Override int indexOf(@Nullable Object target) {]