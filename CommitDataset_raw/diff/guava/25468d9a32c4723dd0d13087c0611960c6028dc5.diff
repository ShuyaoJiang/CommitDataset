[+++ b/guava-tests/test/com/google/common/graph/ElementOrderTest.java, +  public void nodeOrder_none() throws Exception {, +        .nodeOrder(unordered()), +  public void nodeOrder_insertion() throws Exception {, +        .nodeOrder(insertion()), +  public void nodeOrder_default() throws Exception {, +  public void nodeOrder_natural() throws Exception {, +        .nodeOrder(ElementOrder.<Integer>natural()), +  public void nodeOrder_sorted() throws Exception {, +        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse())), +  public void edgeOrder_none() throws Exception {, +        .edgeOrder(unordered()), +  public void edgeOrder_insertion() throws Exception {, +        .edgeOrder(insertion()), +  public void edgeOrder_default() throws Exception {, +  public void edgeOrder_natural() throws Exception {, +        .edgeOrder(ElementOrder.<String>natural()), +  public void edgeOrder_sorted() throws Exception {, +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +  public void nodeOrderUnorderedandEdgesSorted() throws Exception {, +        .nodeOrder(unordered()), +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +++ b/guava-tests/test/com/google/common/graph/ElementOrderTest.java, +  public void nodeOrder_none() throws Exception {, +        .nodeOrder(unordered()), +  public void nodeOrder_insertion() throws Exception {, +        .nodeOrder(insertion()), +  public void nodeOrder_default() throws Exception {, +  public void nodeOrder_natural() throws Exception {, +        .nodeOrder(ElementOrder.<Integer>natural()), +  public void nodeOrder_sorted() throws Exception {, +        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse())), +  public void edgeOrder_none() throws Exception {, +        .edgeOrder(unordered()), +  public void edgeOrder_insertion() throws Exception {, +        .edgeOrder(insertion()), +  public void edgeOrder_default() throws Exception {, +  public void edgeOrder_natural() throws Exception {, +        .edgeOrder(ElementOrder.<String>natural()), +  public void edgeOrder_sorted() throws Exception {, +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +  public void nodeOrderUnorderedandEdgesSorted() throws Exception {, +        .nodeOrder(unordered()), +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +++ b/guava/src/com/google/common/graph/ElementOrder.java, + *       = GraphBuilder.directed().nodeOrder(ElementOrder.natural()).build();, +++ b/guava-tests/test/com/google/common/graph/ElementOrderTest.java, +  public void nodeOrder_none() throws Exception {, +        .nodeOrder(unordered()), +  public void nodeOrder_insertion() throws Exception {, +        .nodeOrder(insertion()), +  public void nodeOrder_default() throws Exception {, +  public void nodeOrder_natural() throws Exception {, +        .nodeOrder(ElementOrder.<Integer>natural()), +  public void nodeOrder_sorted() throws Exception {, +        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse())), +  public void edgeOrder_none() throws Exception {, +        .edgeOrder(unordered()), +  public void edgeOrder_insertion() throws Exception {, +        .edgeOrder(insertion()), +  public void edgeOrder_default() throws Exception {, +  public void edgeOrder_natural() throws Exception {, +        .edgeOrder(ElementOrder.<String>natural()), +  public void edgeOrder_sorted() throws Exception {, +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +  public void nodeOrderUnorderedandEdgesSorted() throws Exception {, +        .nodeOrder(unordered()), +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +++ b/guava/src/com/google/common/graph/ElementOrder.java, + *       = GraphBuilder.directed().nodeOrder(ElementOrder.natural()).build();, +++ b/guava/src/com/google/common/graph/GraphBuilder.java, +        .nodeOrder(graph.nodeOrder()), +  public <N1 extends N> GraphBuilder<N1> nodeOrder(ElementOrder<N1> nodeOrder) {, +++ b/guava-tests/test/com/google/common/graph/ElementOrderTest.java, +  public void nodeOrder_none() throws Exception {, +        .nodeOrder(unordered()), +  public void nodeOrder_insertion() throws Exception {, +        .nodeOrder(insertion()), +  public void nodeOrder_default() throws Exception {, +  public void nodeOrder_natural() throws Exception {, +        .nodeOrder(ElementOrder.<Integer>natural()), +  public void nodeOrder_sorted() throws Exception {, +        .nodeOrder(ElementOrder.sorted(Ordering.<Integer>natural().reverse())), +  public void edgeOrder_none() throws Exception {, +        .edgeOrder(unordered()), +  public void edgeOrder_insertion() throws Exception {, +        .edgeOrder(insertion()), +  public void edgeOrder_default() throws Exception {, +  public void edgeOrder_natural() throws Exception {, +        .edgeOrder(ElementOrder.<String>natural()), +  public void edgeOrder_sorted() throws Exception {, +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +  public void nodeOrderUnorderedandEdgesSorted() throws Exception {, +        .nodeOrder(unordered()), +        .edgeOrder(ElementOrder.sorted(Ordering.<String>natural().reverse())), +++ b/guava/src/com/google/common/graph/ElementOrder.java, + *       = GraphBuilder.directed().nodeOrder(ElementOrder.natural()).build();, +++ b/guava/src/com/google/common/graph/GraphBuilder.java, +        .nodeOrder(graph.nodeOrder()), +  public <N1 extends N> GraphBuilder<N1> nodeOrder(ElementOrder<N1> nodeOrder) {]