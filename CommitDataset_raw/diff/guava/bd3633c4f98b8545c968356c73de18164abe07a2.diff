[+++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +import com.google.common.base.Function;, +import com.google.common.testing.ForwardingWrapperTester;, +import junit.framework.TestCase;, +public class ForwardingDequeTest extends TestCase {, +  @SuppressWarnings("rawtypes"), +  public void testForwarding() {, +    new ForwardingWrapperTester(), +        .testForwarding(Deque.class, new Function<Deque, Deque>() {, +          @Override public Deque apply(Deque delegate) {, +            return wrap(delegate);, +          }, +        });, +  }, +, +  private static <T> Deque<T> wrap(final Deque<T> delegate) {, +    return new ForwardingDeque<T>() {, +      @Override protected Deque<T> delegate() {, +        return delegate;, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +import com.google.common.base.Function;, +import com.google.common.testing.ForwardingWrapperTester;, +import junit.framework.TestCase;, +public class ForwardingDequeTest extends TestCase {, +  @SuppressWarnings("rawtypes"), +  public void testForwarding() {, +    new ForwardingWrapperTester(), +        .testForwarding(Deque.class, new Function<Deque, Deque>() {, +          @Override public Deque apply(Deque delegate) {, +            return wrap(delegate);, +          }, +        });, +  }, +, +  private static <T> Deque<T> wrap(final Deque<T> delegate) {, +    return new ForwardingDeque<T>() {, +      @Override protected Deque<T> delegate() {, +        return delegate;, +++ b/guava-tests/test/com/google/common/collect/ForwardingListIteratorTest.java, +import com.google.common.base.Function;, +import com.google.common.testing.ForwardingWrapperTester;, +import junit.framework.TestCase;, +public class ForwardingListIteratorTest extends TestCase {, +  @SuppressWarnings("rawtypes"), +  public void testForwarding() {, +    new ForwardingWrapperTester(), +        .testForwarding(ListIterator.class, new Function<ListIterator, ListIterator>() {, +          @Override public ListIterator apply(ListIterator delegate) {, +            return wrap(delegate);, +          }, +        });, +  }, +  private static <T> ListIterator<T> wrap(final ListIterator<T> delegate) {, +    return new ForwardingListIterator<T>() {, +      @Override protected ListIterator<T> delegate() {, +        return delegate;, +++ b/guava-tests/test/com/google/common/collect/ForwardingDequeTest.java, +import com.google.common.base.Function;, +import com.google.common.testing.ForwardingWrapperTester;, +import junit.framework.TestCase;, +public class ForwardingDequeTest extends TestCase {, +  @SuppressWarnings("rawtypes"), +  public void testForwarding() {, +    new ForwardingWrapperTester(), +        .testForwarding(Deque.class, new Function<Deque, Deque>() {, +          @Override public Deque apply(Deque delegate) {, +            return wrap(delegate);, +          }, +        });, +  }, +, +  private static <T> Deque<T> wrap(final Deque<T> delegate) {, +    return new ForwardingDeque<T>() {, +      @Override protected Deque<T> delegate() {, +        return delegate;, +++ b/guava-tests/test/com/google/common/collect/ForwardingListIteratorTest.java, +import com.google.common.base.Function;, +import com.google.common.testing.ForwardingWrapperTester;, +import junit.framework.TestCase;, +public class ForwardingListIteratorTest extends TestCase {, +  @SuppressWarnings("rawtypes"), +  public void testForwarding() {, +    new ForwardingWrapperTester(), +        .testForwarding(ListIterator.class, new Function<ListIterator, ListIterator>() {, +          @Override public ListIterator apply(ListIterator delegate) {, +            return wrap(delegate);, +          }, +        });, +  }, +  private static <T> ListIterator<T> wrap(final ListIterator<T> delegate) {, +    return new ForwardingListIterator<T>() {, +      @Override protected ListIterator<T> delegate() {, +        return delegate;, +++ b/guava-tests/test/com/google/common/collect/ForwardingTableTest.java, +import com.google.common.base.Function;, +import com.google.common.testing.EqualsTester;, +import com.google.common.testing.ForwardingWrapperTester;, +import junit.framework.TestCase;, +public class ForwardingTableTest extends TestCase {, +  @SuppressWarnings("rawtypes")]