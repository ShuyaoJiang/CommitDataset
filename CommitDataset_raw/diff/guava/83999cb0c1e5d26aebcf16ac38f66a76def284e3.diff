[+++ b/guava-tests/test/com/google/common/graph/GraphConfigTest.java, +, +  @Test, +  public void compatibleWith_default() {, +    assertThat(Graphs.config().compatibleWith(Graphs.config())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_multigraph_compatible() {, +    assertThat(Graphs.config().multigraph().compatibleWith(, +        Graphs.config().multigraph())).isTrue();, +, +    assertThat(Graphs.config().multigraph().compatibleWith(, +      Graphs.config())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_multigraph_incompatible() {, +    assertThat(Graphs.config().compatibleWith(, +        Graphs.config().multigraph())).isFalse();, +  }, +, +  @Test, +  public void compatibleWith_selfLoops_compatible() {, +    assertThat(Graphs.config().noSelfLoops().compatibleWith(, +        Graphs.config().noSelfLoops())).isTrue();, +, +    assertThat(Graphs.config().compatibleWith(, +        Graphs.config().noSelfLoops())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_selfLoops_incompatible() {, +    assertThat(Graphs.config().noSelfLoops().compatibleWith(, +        Graphs.config())).isFalse();, +  }, +++ b/guava-tests/test/com/google/common/graph/GraphConfigTest.java, +, +  @Test, +  public void compatibleWith_default() {, +    assertThat(Graphs.config().compatibleWith(Graphs.config())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_multigraph_compatible() {, +    assertThat(Graphs.config().multigraph().compatibleWith(, +        Graphs.config().multigraph())).isTrue();, +, +    assertThat(Graphs.config().multigraph().compatibleWith(, +      Graphs.config())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_multigraph_incompatible() {, +    assertThat(Graphs.config().compatibleWith(, +        Graphs.config().multigraph())).isFalse();, +  }, +, +  @Test, +  public void compatibleWith_selfLoops_compatible() {, +    assertThat(Graphs.config().noSelfLoops().compatibleWith(, +        Graphs.config().noSelfLoops())).isTrue();, +, +    assertThat(Graphs.config().compatibleWith(, +        Graphs.config().noSelfLoops())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_selfLoops_incompatible() {, +    assertThat(Graphs.config().noSelfLoops().compatibleWith(, +        Graphs.config())).isFalse();, +  }, +++ b/guava-tests/test/com/google/common/graph/ImmutableSimpleDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphConfigTest.java, +, +  @Test, +  public void compatibleWith_default() {, +    assertThat(Graphs.config().compatibleWith(Graphs.config())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_multigraph_compatible() {, +    assertThat(Graphs.config().multigraph().compatibleWith(, +        Graphs.config().multigraph())).isTrue();, +, +    assertThat(Graphs.config().multigraph().compatibleWith(, +      Graphs.config())).isTrue();, +  }, +, +  @Test, +  public void compatibleWith_multigraph_incompatible() {, +    assertThat(Graphs.config().compatibleWith(, +        Graphs.config().multigraph())).isFalse();, +  }, +, +  @Test, +  public void compatibleWith_selfLoops_compatible() {, +    assertThat(Graphs.config().noSelfLoops().compatibleWith(, +        Graphs.config().noSelfLoops())).isTrue();, +]