[+++ b/guava-tests/test/com/google/common/reflect/TypesTest.java, +  public void testNewTypeVariable() throws Exception {, +    TypeVariable<?> noBoundJvmType =, +        WithTypeVariable.getTypeVariable("withoutBound");, +    TypeVariable<?> objectBoundJvmType =, +        WithTypeVariable.getTypeVariable("withObjectBound");, +    TypeVariable<?> upperBoundJvmType =, +        WithTypeVariable.getTypeVariable("withUpperBound");, +    TypeVariable<?> noBound = withBounds(noBoundJvmType);, +    TypeVariable<?> objectBound = withBounds(objectBoundJvmType, Object.class);, +    TypeVariable<?> upperBound = withBounds(, +        upperBoundJvmType, Number.class, CharSequence.class);, +, +    assertEqualTypeVariable(noBoundJvmType, noBound);, +    assertEqualTypeVariable(noBoundJvmType,, +        withBounds(noBoundJvmType, Object.class));, +    assertEqualTypeVariable(objectBoundJvmType, objectBound);, +    assertEqualTypeVariable(upperBoundJvmType, upperBound);, +, +    new TypeVariableEqualsTester(), +        .addEqualityGroup(noBoundJvmType, noBound), +        .addEqualityGroup(objectBoundJvmType, objectBound), +        .addEqualityGroup(upperBoundJvmType, upperBound), +        .testEquals();, +  }, +]