[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava/src/com/google/common/collect/EmptyImmutableMultiset.java, +  public ImmutableSet<Object> elementSet() {, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava/src/com/google/common/collect/EmptyImmutableMultiset.java, +  public ImmutableSet<Object> elementSet() {, +++ b/guava/src/com/google/common/collect/ImmutableMultiset.java, +import java.util.Collection;, +  @Override, +  public boolean containsAll(Collection<?> targets) {, +    return elementSet().containsAll(targets);, +  }, +, +    transient final ImmutableMultiset<E> multiset;, +    // We can't label this with @Override, because it doesn't override anything, +    // in the GWT emulated version., +    Object writeReplace() {, +      return new EntrySetSerializedForm<E>(multiset);, +    }, +, +    static class EntrySetSerializedForm<E> implements Serializable {, +      final ImmutableMultiset<E> multiset;, +, +      EntrySetSerializedForm(ImmutableMultiset<E> multiset) {, +        this.multiset = multiset;, +      }, +, +      Object readResolve() {, +        return multiset.entrySet();, +      }, +    }, +, +   * times to build multiple multisets in series., +  public static class Builder<E> extends ImmutableCollection.Builder<E> {, +    final Multiset<E> contents;, +    public Builder() {, +      this(LinkedHashMultiset.<E>create());, +    }, +, +    Builder(Multiset<E> contents) {, +      this.contents = contents;, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;, +    } catch (ClassCastException e) {, +      return 0;, +    }, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java, +    try {, +    } catch (NullPointerException e) {, +      return 0;]