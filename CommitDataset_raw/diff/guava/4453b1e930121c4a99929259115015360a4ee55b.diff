[+++ b/guava/src/com/google/common/collect/SortedMultiset.java, +/*, + * Copyright (C) 2011 The Guava Authors, + * , + * Licensed under the Apache License, Version 2.0 (the "License"); you may not, + * use this file except in compliance with the License. You may obtain a copy of, + * the License at, + * , + * http://www.apache.org/licenses/LICENSE-2.0, + * , + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT, + * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the, + * License for the specific language governing permissions and limitations under, + * the License., + */, +import com.google.common.collect.Range.BoundType;, + * <p>, + * <b>Warning:</b> The comparison must be <i>consistent with equals</i> as, +@Beta interface SortedMultiset<E> extends Multiset<E> {, +   * {@inheritDoc}, +   * , +   * <p>, +   * The iterator returns the elements in ascending order according to this, +   * multiset's comparator., +  @Override Iterator<E> iterator();, +   * Returns a view of this multiset restricted to the elements less than, +   * {@code upperBound}, optionally including {@code upperBound} itself. The, +   * returned multiset is a view of this multiset, so changes to one will be, +   * reflected in the other. The returned multiset supports all operations that, +   * this multiset supports., +  SortedMultiset<E> headMultiset(E upperBound, BoundType boundType);, +   * Returns a view of this multiset restricted to the range between, +   * {@code lowerBound} and {@code upperBound}. The returned multiset is a view, +   * of this multiset, so changes to one will be reflected in the other. The, +   * returned multiset supports all operations that this multiset supports., +   * <p>This method is equivalent to, +   * {@code tailMultiset(lowerBound, lowerBoundType).headMultiset(upperBound,, +   * upperBoundType)}., +  SortedMultiset<E> subMultiset(E lowerBound, BoundType lowerBoundType,, +      E upperBound, BoundType upperBoundType);, +   * Returns a view of this multiset restricted to the elements greater than, +   * {@code lowerBound}, optionally including {@code lowerBound} itself. The, +   * returned multiset is a view of this multiset, so changes to one will be, +   * reflected in the other. The returned multiset supports all operations that, +   * this multiset supports., +  SortedMultiset<E> tailMultiset(E lowerBound, BoundType boundType);]