[+++ b/guava-testlib/src/com/google/common/collect/testing/google/MultisetTestSuiteBuilder.java, +  static Set<Feature<?>> computeElementSetFeatures(, +    derivedSuites.add(createElementSetTestSuite(parentBuilder));, +  TestSuite createElementSetTestSuite(FeatureSpecificTestSuiteBuilder<, +      ?, ? extends OneSizeTestContainerGenerator<Collection<E>, E>> parentBuilder) {, +    return SetTestSuiteBuilder, +        .using(new ElementSetGenerator<E>(parentBuilder.getSubjectGenerator())), +        .named(getName() + ".elementSet"), +        .withFeatures(computeElementSetFeatures(parentBuilder.getFeatures())), +        .suppressing(parentBuilder.getSuppressedTests()), +        .createTestSuite();, +  }, +, +    ElementSetGenerator(OneSizeTestContainerGenerator<Collection<E>, E> gen) {, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MultisetTestSuiteBuilder.java, +  static Set<Feature<?>> computeElementSetFeatures(, +    derivedSuites.add(createElementSetTestSuite(parentBuilder));, +  TestSuite createElementSetTestSuite(FeatureSpecificTestSuiteBuilder<, +      ?, ? extends OneSizeTestContainerGenerator<Collection<E>, E>> parentBuilder) {, +    return SetTestSuiteBuilder, +        .using(new ElementSetGenerator<E>(parentBuilder.getSubjectGenerator())), +        .named(getName() + ".elementSet"), +        .withFeatures(computeElementSetFeatures(parentBuilder.getFeatures())), +        .suppressing(parentBuilder.getSuppressedTests()), +        .createTestSuite();, +  }, +, +    ElementSetGenerator(OneSizeTestContainerGenerator<Collection<E>, E> gen) {, +++ b/guava-testlib/src/com/google/common/collect/testing/google/SortedMultisetTestSuiteBuilder.java, +import com.google.common.collect.testing.FeatureSpecificTestSuiteBuilder;, +import com.google.common.collect.testing.OneSizeTestContainerGenerator;, +import com.google.common.collect.testing.SortedSetTestSuiteBuilder;, +import java.util.Collection;, +  @Override, +  TestSuite createElementSetTestSuite(FeatureSpecificTestSuiteBuilder<, +      ?, ? extends OneSizeTestContainerGenerator<Collection<E>, E>> parentBuilder) {, +    return SortedSetTestSuiteBuilder, +        .using(new ElementSetGenerator<E>(parentBuilder.getSubjectGenerator())), +        .named(getName() + ".elementSet"), +        .withFeatures(computeElementSetFeatures(parentBuilder.getFeatures())), +        .suppressing(parentBuilder.getSuppressedTests()), +        .createTestSuite();, +  }, +]