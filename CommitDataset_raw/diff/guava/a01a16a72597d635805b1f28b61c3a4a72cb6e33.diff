[+++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.degree(node)).isEqualTo(graph.inDegree(node) + graph.outDegree(node));, +        int selfLoopCount = graph.adjacentNodes(node).contains(node) ? 1 : 0;, +        assertThat(graph.degree(node)).isEqualTo(graph.adjacentNodes(node).size() + selfLoopCount);, +        assertThat(graph.predecessors(node)).isEqualTo(graph.adjacentNodes(node));, +        assertThat(graph.successors(node)).isEqualTo(graph.adjacentNodes(node));, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.degree(node)).isEqualTo(graph.inDegree(node) + graph.outDegree(node));, +        int selfLoopCount = graph.adjacentNodes(node).contains(node) ? 1 : 0;, +        assertThat(graph.degree(node)).isEqualTo(graph.adjacentNodes(node).size() + selfLoopCount);, +        assertThat(graph.predecessors(node)).isEqualTo(graph.adjacentNodes(node));, +        assertThat(graph.successors(node)).isEqualTo(graph.adjacentNodes(node));, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +        return IntMath.saturatedAdd(inEdgeMap.size(), outEdgeMap.size() - selfLoopCount);, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.degree(node)).isEqualTo(graph.inDegree(node) + graph.outDegree(node));, +        int selfLoopCount = graph.adjacentNodes(node).contains(node) ? 1 : 0;, +        assertThat(graph.degree(node)).isEqualTo(graph.adjacentNodes(node).size() + selfLoopCount);, +        assertThat(graph.predecessors(node)).isEqualTo(graph.adjacentNodes(node));, +        assertThat(graph.successors(node)).isEqualTo(graph.adjacentNodes(node));, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +        return IntMath.saturatedAdd(inEdgeMap.size(), outEdgeMap.size() - selfLoopCount);, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +      int selfLoopCount = (allowsSelfLoops() && neighbors.contains(node)) ? 1 : 0;, +      return IntMath.saturatedAdd(neighbors.size(), selfLoopCount);]