[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +    BiMap<V, K> inverse;, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +    BiMap<V, K> inverse;, +++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapTestSuiteBuilder.java, +import com.google.common.collect.testing.testers.SetCreationTester;, +        .suppressing(SetCreationTester.class.getMethods()), +           // BiMap.entrySet() duplicate-handling behavior is too confusing for SetCreationTester, +        .suppressing(SetCreationTester.class.getMethods()), +          // BiMap.values() duplicate-handling behavior is too confusing for SetCreationTester, +    inverseFeatures.add(MapFeature.REJECTS_DUPLICATES_AT_CREATION);, +    valuesCollectionFeatures.add(CollectionFeature.REJECTS_DUPLICATES_AT_CREATION);, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +    BiMap<V, K> inverse;, +++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapTestSuiteBuilder.java, +import com.google.common.collect.testing.testers.SetCreationTester;, +        .suppressing(SetCreationTester.class.getMethods()), +           // BiMap.entrySet() duplicate-handling behavior is too confusing for SetCreationTester, +        .suppressing(SetCreationTester.class.getMethods()), +          // BiMap.values() duplicate-handling behavior is too confusing for SetCreationTester, +    inverseFeatures.add(MapFeature.REJECTS_DUPLICATES_AT_CREATION);, +    valuesCollectionFeatures.add(CollectionFeature.REJECTS_DUPLICATES_AT_CREATION);, +, +++ b/guava-testlib/src/com/google/common/collect/testing/testers/MapCreationTester.java, +    entries[0] = entry(null, entries[0].getValue());, +    entries[0] = entry(samples.e1.getKey(), samples.e0.getValue());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +    BiMap<V, K> inverse;, +++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapTestSuiteBuilder.java, +import com.google.common.collect.testing.testers.SetCreationTester;, +        .suppressing(SetCreationTester.class.getMethods()), +           // BiMap.entrySet() duplicate-handling behavior is too confusing for SetCreationTester, +        .suppressing(SetCreationTester.class.getMethods()), +          // BiMap.values() duplicate-handling behavior is too confusing for SetCreationTester, +    inverseFeatures.add(MapFeature.REJECTS_DUPLICATES_AT_CREATION);, +    valuesCollectionFeatures.add(CollectionFeature.REJECTS_DUPLICATES_AT_CREATION);, +, +++ b/guava-testlib/src/com/google/common/collect/testing/testers/MapCreationTester.java, +    entries[0] = entry(null, entries[0].getValue());, +    entries[0] = entry(samples.e1.getKey(), samples.e0.getValue());, +++ b/guava-tests/test/com/google/common/collect/BiMapCollectionTest.java, +  public static final class UnmodifiableBiMapGenerator extends TestStringBiMapGenerator {, +    @Override, +    protected BiMap<String, String> create(Entry<String, String>[] entries) {, +      BiMap<String, String> result = HashBiMap.create();, +      for (Entry<String, String> entry : entries) {, +        result.put(entry.getKey(), entry.getValue());, +      }, +      return Maps.unmodifiableBiMap(result);, +    }, +  }, +, +            MapFeature.GENERAL_PURPOSE), +            CollectionFeature.KNOWN_ORDER), +            CollectionFeature.KNOWN_ORDER), +        .createTestSuite());, +    suite.addTest(BiMapTestSuiteBuilder.using(new UnmodifiableBiMapGenerator()), +        .named("unmodifiableBiMap[HashBiMap]"), +        .withFeatures(CollectionSize.ANY,, +            CollectionFeature.SERIALIZABLE,, +            MapFeature.ALLOWS_NULL_KEYS,, +            MapFeature.ALLOWS_NULL_VALUES), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +    BiMap<V, K> inverse;, +++ b/guava-testlib/src/com/google/common/collect/testing/google/BiMapTestSuiteBuilder.java, +import com.google.common.collect.testing.testers.SetCreationTester;, +        .suppressing(SetCreationTester.class.getMethods()), +           // BiMap.entrySet() duplicate-handling behavior is too confusing for SetCreationTester, +        .suppressing(SetCreationTester.class.getMethods()), +          // BiMap.values() duplicate-handling behavior is too confusing for SetCreationTester, +    inverseFeatures.add(MapFeature.REJECTS_DUPLICATES_AT_CREATION);, +    valuesCollectionFeatures.add(CollectionFeature.REJECTS_DUPLICATES_AT_CREATION);, +, +++ b/guava-testlib/src/com/google/common/collect/testing/testers/MapCreationTester.java, +    entries[0] = entry(null, entries[0].getValue());, +    entries[0] = entry(samples.e1.getKey(), samples.e0.getValue());, +++ b/guava-tests/test/com/google/common/collect/BiMapCollectionTest.java, +  public static final class UnmodifiableBiMapGenerator extends TestStringBiMapGenerator {, +    @Override, +    protected BiMap<String, String> create(Entry<String, String>[] entries) {, +      BiMap<String, String> result = HashBiMap.create();, +      for (Entry<String, String> entry : entries) {, +        result.put(entry.getKey(), entry.getValue());, +      }, +      return Maps.unmodifiableBiMap(result);, +    }, +  }, +, +            MapFeature.GENERAL_PURPOSE), +            CollectionFeature.KNOWN_ORDER), +            CollectionFeature.KNOWN_ORDER), +        .createTestSuite());, +    suite.addTest(BiMapTestSuiteBuilder.using(new UnmodifiableBiMapGenerator()), +        .named("unmodifiableBiMap[HashBiMap]"), +        .withFeatures(CollectionSize.ANY,, +            CollectionFeature.SERIALIZABLE,, +            MapFeature.ALLOWS_NULL_KEYS,, +            MapFeature.ALLOWS_NULL_VALUES), +++ /dev/null]