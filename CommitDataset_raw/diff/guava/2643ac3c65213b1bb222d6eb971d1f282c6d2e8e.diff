[+++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +import junit.framework.TestSuite;, +, +  public static TestSuite suite() {, +    TestSuite suite = new TestSuite();, +    suite.addTest(ByteSourceTester.tests("ByteSource.wrap[byte[]]",, +        SourceSinkFactories.byteArraySourceFactory(), true));, +    suite.addTestSuite(ByteSourceTest.class);, +    return suite;, +  }, +, +++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +import junit.framework.TestSuite;, +, +  public static TestSuite suite() {, +    TestSuite suite = new TestSuite();, +    suite.addTest(ByteSourceTester.tests("ByteSource.wrap[byte[]]",, +        SourceSinkFactories.byteArraySourceFactory(), true));, +    suite.addTestSuite(ByteSourceTest.class);, +    return suite;, +  }, +, +++ b/guava-tests/test/com/google/common/io/ByteStreamsTest.java, +++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +import junit.framework.TestSuite;, +, +  public static TestSuite suite() {, +    TestSuite suite = new TestSuite();, +    suite.addTest(ByteSourceTester.tests("ByteSource.wrap[byte[]]",, +        SourceSinkFactories.byteArraySourceFactory(), true));, +    suite.addTestSuite(ByteSourceTest.class);, +    return suite;, +  }, +, +++ b/guava-tests/test/com/google/common/io/ByteStreamsTest.java, +++ b/guava-tests/test/com/google/common/io/CharSequenceReaderTest.java, +/*, + * Copyright (C) 2013 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.io;, +, +import junit.framework.TestCase;, +, +import java.io.IOException;, +import java.nio.CharBuffer;, +, +/**, + * Tests for {@link CharSequenceReader}., + *, + * @author Colin Decker, + */, +public class CharSequenceReaderTest extends TestCase {, +, +  public void testReadEmptyString() throws IOException {, +    assertReadsCorrectly("");, +  }, +, +  public void testReadsStringsCorrectly() throws IOException {, +    assertReadsCorrectly("abc");, +    assertReadsCorrectly("abcde");, +    assertReadsCorrectly("abcdefghijkl");, +    assertReadsCorrectly("", +        + "abcdefghijklmnopqrstuvwxyz\n", +        + "ABCDEFGHIJKLMNOPQRSTUVWXYZ\r", +        + "0123456789\r\n", +        + "!@#$%^&*()-=_+\t[]{};':\",./<>?\\| ");, +  }, +, +  public void testMarkAndReset() throws IOException {, +    String string = "abcdefghijklmnopqrstuvwxyz";, +    CharSequenceReader reader = new CharSequenceReader(string);, +    assertTrue(reader.markSupported());, +, +    assertEquals(string, readFully(reader));, +    assertFullyRead(reader);, +, +    // reset and read again, +    reader.reset();, +    assertEquals(string, readFully(reader));, +    assertFullyRead(reader);, +, +    // reset, skip, mark, then read the rest, +    reader.reset();, +    assertEquals(5, reader.skip(5));, +    reader.mark(Integer.MAX_VALUE);, +    assertEquals(string.substring(5), readFully(reader));, +    assertFullyRead(reader);]