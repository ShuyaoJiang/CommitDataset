[+++ b/guava/src/com/google/common/collect/StandardTable.java, +import com.google.common.collect.Maps.ImprovedAbstractMap;, +import com.google.common.collect.Sets.ImprovedAbstractSet;, +  private abstract class TableSet<T> extends ImprovedAbstractSet<T> {, +  class Row extends ImprovedAbstractMap<C, V> {, +    protected Set<Entry<C, V>> createEntrySet() {, +      return new RowEntrySet();, +  private class Column extends ImprovedAbstractMap<R, V> {, +    class EntrySet extends ImprovedAbstractSet<Entry<R, V>> {, +    class KeySet extends ImprovedAbstractSet<R> {, +  class RowMap extends ImprovedAbstractMap<R, Map<C, V>> {, +  private class ColumnMap extends ImprovedAbstractMap<C, Map<R, V>> {, +        /*, +         * We can't inherit the normal implementation (which calls, +         * Sets.removeAllImpl(Set, *Collection*) because, under some, +         * circumstances, it attempts to call columnKeySet().iterator().remove,, +         * which is unsupported., +         */, +        checkNotNull(c);, +        return Sets.removeAllImpl(this, c.iterator());, +        checkNotNull(c);]