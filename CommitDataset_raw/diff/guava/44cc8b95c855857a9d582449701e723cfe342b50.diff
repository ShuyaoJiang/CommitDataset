[+++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * at a time, but since read operations and cache loading computations can proceed concurrently,, +   * this still yields higher concurrency than full synchronization., +   * <p> Defaults to 4. <b>Note:</b>The default may change in the future. If you care about this, +   * value, you should always choose it explicitly., +   *, +   * <p>The current implementation uses the concurrency level to create a fixed number of hashtable, +   * segments, each governed by its own write lock. The segment lock is taken once for each explicit, +   * write, and twice for each cache loading computation (once prior to loading the new value,, +   * and once after loading completes). Much internal cache management is performed at the segment, +   * granularity. For example, access queues and write queues are kept per segment when they are, +   * required by the selected eviction algorithm. As such, when writing unit tests it is not, +   * uncommon to specify {@code concurrencyLevel(1)} in order to achieve more deterministic eviction, +   * behavior., +   *, +   * <p>Note that future implementations may abandon segment locking in favor of more advanced, +   * concurrency controls.]