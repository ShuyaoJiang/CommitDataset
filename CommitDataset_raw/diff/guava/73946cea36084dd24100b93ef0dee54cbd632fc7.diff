[+++ b/guava-tests/test/com/google/common/reflect/ClassPathTest.java, +import java.util.jar.JarFile;, +      ASSERT.that(resource.getResourceName()).isNotEqualTo(JarFile.MANIFEST_NAME);, +      ASSERT.that(resource.toString()).isNotEqualTo(JarFile.MANIFEST_NAME);, +++ b/guava-tests/test/com/google/common/reflect/ClassPathTest.java, +import java.util.jar.JarFile;, +      ASSERT.that(resource.getResourceName()).isNotEqualTo(JarFile.MANIFEST_NAME);, +      ASSERT.that(resource.toString()).isNotEqualTo(JarFile.MANIFEST_NAME);, +++ b/guava/src/com/google/common/reflect/ClassPath.java, +import com.google.common.collect.FluentIterable;, + * Scans the source of a {@link ClassLoader} and finds all loadable classes and resources., +   * loadable classes but excluding the "META-INF/MANIFEST.MF" file., +    return FluentIterable.from(resources).filter(ClassInfo.class).toSet();, +    /**, +     * Loads (but doesn't link or initialize) the class., +     *, +     * @throws LinkageError when there were errors in loading classes that this class depends on., +     *         For example, {@link NoClassDefFoundError}., +     */, +        if (!resourceName.equals(JarFile.MANIFEST_NAME)) {, +  }, +        if (entry.isDirectory() || entry.getName().equals(JarFile.MANIFEST_NAME)) {]