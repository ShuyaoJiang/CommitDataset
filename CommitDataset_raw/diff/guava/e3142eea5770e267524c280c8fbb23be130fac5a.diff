[+++ b/guava/src/com/google/common/util/concurrent/SettableFuture.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * A {@link ListenableFuture} whose result can be set by a {@link #set(Object)}, {@link, + * #setException(Throwable)} or {@link #setFuture(ListenableFuture)} call. It can also, like any, + * other {@code Future}, be {@linkplain #cancel cancelled}., + *, + * <p>{@code SettableFuture} is the recommended {@code ListenableFuture} implementation when your, + * task is not a good fit for a {@link ListeningExecutorService} task. If your needs are more, + * complex than {@code SettableFuture} supports, use {@link AbstractFuture}, which offers an, + * extensible version of the API., +   * Creates a new {@code SettableFuture} that can be completed or cancelled by a later method call., +, +  private SettableFuture() {}]