[+++ b/guava/src/com/google/common/util/concurrent/AbstractScheduledService.java, + * <p>Subclasses are guaranteed that the life cycle methods ({@link #runOneIteration}, {@link , + * #startUp} and {@link #shutDown}) will never run concurrently. Notably, if any execution of {@link, + * #runOneIteration} takes longer than its schedule defines, then subsequent executions may start , + * late.  Also, all life cycle methods are executed with a lock held, so subclasses can safely , + * modify shared state without additional synchronization necessary for visibility to later , + * executions of the life cycle methods., + * , + *   protected Scheduler scheduler() {, + *     return Scheduler.newFixedRateSchedule(0, 1, TimeUnit.SECONDS);]