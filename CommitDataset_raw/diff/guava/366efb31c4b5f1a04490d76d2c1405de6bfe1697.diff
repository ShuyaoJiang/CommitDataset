[+++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +, +  protected final K k0() {, +    return e0().getKey();, +  }, +, +  protected final V v0() {, +    return e0().getValue();, +  }, +, +  protected final K k1() {, +    return e1().getKey();, +  }, +, +  protected final V v1() {, +    return e1().getValue();, +  }, +, +  protected final K k2() {, +    return e2().getKey();, +  }, +, +  protected final V v2() {, +    return e2().getValue();, +  }, +, +  protected final K k3() {, +    return e3().getKey();, +  }, +, +  protected final V v3() {, +    return e3().getValue();, +  }, +, +  protected final K k4() {, +    return e4().getKey();, +  }, +, +  protected final V v4() {, +    return e4().getValue();, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +, +  protected final K k0() {, +    return e0().getKey();, +  }, +, +  protected final V v0() {, +    return e0().getValue();, +  }, +, +  protected final K k1() {, +    return e1().getKey();, +  }, +, +  protected final V v1() {, +    return e1().getValue();, +  }, +, +  protected final K k2() {, +    return e2().getKey();, +  }, +, +  protected final V v2() {, +    return e2().getValue();, +  }, +, +  protected final K k3() {, +    return e3().getKey();, +  }, +, +  protected final V v3() {, +    return e3().getValue();, +  }, +, +  protected final K k4() {, +    return e4().getKey();, +  }, +, +  protected final V v4() {, +    return e4().getValue();, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/ListMultimapAsMapTester.java, +        Helpers.mapEntry(k0(), v0()),, +        Helpers.mapEntry(k1(), v0()),, +        Helpers.mapEntry(k0(), v3()));, +    expected.put(k0(), Lists.newArrayList(v0(), v3()));, +    expected.put(k1(), Lists.newArrayList(v0()));, +        Helpers.mapEntry(k0(), v0()),, +        Helpers.mapEntry(k1(), v0()),, +        Helpers.mapEntry(k0(), v3()));, +        k0(), , +        (Collection<V>) Lists.newArrayList(v0(), v3())));, +        k1(), , +        (Collection<V>) Lists.newArrayList(v0())));, +        Helpers.mapEntry(k0(), v0()),, +        Helpers.mapEntry(k1(), v0()),, +        Helpers.mapEntry(k0(), v3()));, +    assertTrue(multimap().asMap().values().remove(Collections.singletonList(v0())));, +            k0(), Lists.newArrayList(v0(), v3())),]