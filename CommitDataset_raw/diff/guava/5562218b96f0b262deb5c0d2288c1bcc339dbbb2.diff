[+++ b/guava-gwt/test/com/google/common/collect/ImmutableTableTest_gwt.java, +public void testSerialization_bothOrders() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_bothOrders();, +}, +, +public void testSerialization_columnOrder() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_columnOrder();, +}, +, +public void testSerialization_empty() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_empty();, +}, +, +public void testSerialization_manualOrder() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_manualOrder();, +}, +, +public void testSerialization_rowOrder() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_rowOrder();, +}, +, +public void testSerialization_singleElement() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_singleElement();, +}, +, +++ b/guava-gwt/test/com/google/common/collect/ImmutableTableTest_gwt.java, +public void testSerialization_bothOrders() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_bothOrders();, +}, +, +public void testSerialization_columnOrder() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_columnOrder();, +}, +, +public void testSerialization_empty() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_empty();, +}, +, +public void testSerialization_manualOrder() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_manualOrder();, +}, +, +public void testSerialization_rowOrder() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_rowOrder();, +}, +, +public void testSerialization_singleElement() throws Exception {, +  com.google.common.collect.ImmutableTableTest testCase = new com.google.common.collect.ImmutableTableTest();, +  testCase.setUp();, +  testCase.testSerialization_singleElement();, +}, +, +++ b/guava-tests/test/com/google/common/collect/ImmutableTableTest.java, +import com.google.common.testing.SerializableTester;, +    assertThat(copy.cellSet()).containsExactlyElementsIn(original.cellSet()).inOrder();, +    assertThat(copy.rowKeySet()).containsExactlyElementsIn(original.rowKeySet()).inOrder();, +    assertThat(copy.values()).containsExactlyElementsIn(original.values()).inOrder();, +  public void testSerialization_empty() {, +    validateReserialization(ImmutableTable.of());, +  }, +, +  public void testSerialization_singleElement() {, +    validateReserialization(ImmutableTable.of('a', 2, "foo"));, +  }, +, +  public void testSerialization_manualOrder() {, +    ImmutableTable.Builder<Character, Integer, String> builder = ImmutableTable.builder();, +    builder.put('b', 2, "foo");, +    builder.put('b', 1, "bar");, +    builder.put('a', 2, "baz");, +    validateReserialization(builder.build());, +  }, +, +  public void testSerialization_rowOrder() {, +    ImmutableTable.Builder<Character, Integer, String> builder = ImmutableTable.builder();, +    builder.orderRowsBy(Ordering.<Character>natural());, +    builder.put('b', 2, "foo");, +    builder.put('b', 1, "bar");]