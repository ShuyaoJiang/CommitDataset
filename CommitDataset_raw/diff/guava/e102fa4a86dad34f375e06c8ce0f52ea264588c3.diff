[+++ b/guava-testlib/src/com/google/common/collect/testing/Helpers.java, +   *, +   *   <li><i>reflexivity</i>: {@code comparator.compare(t, t) = 0} for all {@code t} in {@code, +   *       valuesInExpectedOrder}; and, +   *   <li><i>consistency</i>: {@code comparator.compare(ti, tj) < 0} and {@code, +   *       comparator.compare(tj, ti) > 0} for {@code i < j}, where {@code ti =, +   *       valuesInExpectedOrder.get(i)} and {@code tj = valuesInExpectedOrder.get(j)}., +   * </ul>, +++ b/guava-testlib/src/com/google/common/collect/testing/Helpers.java, +   *, +   *   <li><i>reflexivity</i>: {@code comparator.compare(t, t) = 0} for all {@code t} in {@code, +   *       valuesInExpectedOrder}; and, +   *   <li><i>consistency</i>: {@code comparator.compare(ti, tj) < 0} and {@code, +   *       comparator.compare(tj, ti) > 0} for {@code i < j}, where {@code ti =, +   *       valuesInExpectedOrder.get(i)} and {@code tj = valuesInExpectedOrder.get(j)}., +   * </ul>, +++ b/guava-testlib/src/com/google/common/collect/testing/MapInterfaceTest.java, + * Tests representing the contract of {@link Map}. Concrete subclasses of this base class test, + * conformance of concrete {@link Map} subclasses to that contract., +// TODO: Descriptive assertion messages, with hints as to probable fixes., +// TODO: Add another constructor parameter indicating whether the class under test is ordered, and, +// check the order if so., +// TODO: Refactor to share code with SetTestBuilder etc., +++ b/guava-testlib/src/com/google/common/collect/testing/Helpers.java, +   *, +   *   <li><i>reflexivity</i>: {@code comparator.compare(t, t) = 0} for all {@code t} in {@code, +   *       valuesInExpectedOrder}; and, +   *   <li><i>consistency</i>: {@code comparator.compare(ti, tj) < 0} and {@code, +   *       comparator.compare(tj, ti) > 0} for {@code i < j}, where {@code ti =, +   *       valuesInExpectedOrder.get(i)} and {@code tj = valuesInExpectedOrder.get(j)}., +   * </ul>, +++ b/guava-testlib/src/com/google/common/collect/testing/MapInterfaceTest.java, + * Tests representing the contract of {@link Map}. Concrete subclasses of this base class test, + * conformance of concrete {@link Map} subclasses to that contract., +// TODO: Descriptive assertion messages, with hints as to probable fixes., +// TODO: Add another constructor parameter indicating whether the class under test is ordered, and, +// check the order if so., +// TODO: Refactor to share code with SetTestBuilder etc., +++ b/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveAllTester.java, +  /** Trigger the {@code other.size() >= this.size()} case in {@link AbstractSet#removeAll()}. */, +++ b/guava-testlib/src/com/google/common/collect/testing/Helpers.java, +   *, +   *   <li><i>reflexivity</i>: {@code comparator.compare(t, t) = 0} for all {@code t} in {@code, +   *       valuesInExpectedOrder}; and, +   *   <li><i>consistency</i>: {@code comparator.compare(ti, tj) < 0} and {@code, +   *       comparator.compare(tj, ti) > 0} for {@code i < j}, where {@code ti =, +   *       valuesInExpectedOrder.get(i)} and {@code tj = valuesInExpectedOrder.get(j)}., +   * </ul>, +++ b/guava-testlib/src/com/google/common/collect/testing/MapInterfaceTest.java, + * Tests representing the contract of {@link Map}. Concrete subclasses of this base class test, + * conformance of concrete {@link Map} subclasses to that contract., +// TODO: Descriptive assertion messages, with hints as to probable fixes., +// TODO: Add another constructor parameter indicating whether the class under test is ordered, and, +// check the order if so., +// TODO: Refactor to share code with SetTestBuilder etc., +++ b/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveAllTester.java, +  /** Trigger the {@code other.size() >= this.size()} case in {@link AbstractSet#removeAll()}. */, +++ b/guava-testlib/src/com/google/common/escape/testing/EscaperAsserts.java, +++ b/guava-testlib/src/com/google/common/collect/testing/Helpers.java, +   *, +   *   <li><i>reflexivity</i>: {@code comparator.compare(t, t) = 0} for all {@code t} in {@code, +   *       valuesInExpectedOrder}; and, +   *   <li><i>consistency</i>: {@code comparator.compare(ti, tj) < 0} and {@code, +   *       comparator.compare(tj, ti) > 0} for {@code i < j}, where {@code ti =, +   *       valuesInExpectedOrder.get(i)} and {@code tj = valuesInExpectedOrder.get(j)}., +   * </ul>, +++ b/guava-testlib/src/com/google/common/collect/testing/MapInterfaceTest.java, + * Tests representing the contract of {@link Map}. Concrete subclasses of this base class test, + * conformance of concrete {@link Map} subclasses to that contract., +// TODO: Descriptive assertion messages, with hints as to probable fixes., +// TODO: Add another constructor parameter indicating whether the class under test is ordered, and, +// check the order if so., +// TODO: Refactor to share code with SetTestBuilder etc., +++ b/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveAllTester.java, +  /** Trigger the {@code other.size() >= this.size()} case in {@link AbstractSet#removeAll()}. */, +++ b/guava-testlib/src/com/google/common/escape/testing/EscaperAsserts.java, +++ b/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +   * type → implementation. Inherently mutable interfaces and abstract classes are mapped to their, +++ b/guava-testlib/src/com/google/common/collect/testing/Helpers.java, +   *, +   *   <li><i>reflexivity</i>: {@code comparator.compare(t, t) = 0} for all {@code t} in {@code, +   *       valuesInExpectedOrder}; and, +   *   <li><i>consistency</i>: {@code comparator.compare(ti, tj) < 0} and {@code, +   *       comparator.compare(tj, ti) > 0} for {@code i < j}, where {@code ti =, +   *       valuesInExpectedOrder.get(i)} and {@code tj = valuesInExpectedOrder.get(j)}., +   * </ul>, +++ b/guava-testlib/src/com/google/common/collect/testing/MapInterfaceTest.java, + * Tests representing the contract of {@link Map}. Concrete subclasses of this base class test, + * conformance of concrete {@link Map} subclasses to that contract., +// TODO: Descriptive assertion messages, with hints as to probable fixes., +// TODO: Add another constructor parameter indicating whether the class under test is ordered, and, +// check the order if so., +// TODO: Refactor to share code with SetTestBuilder etc., +++ b/guava-testlib/src/com/google/common/collect/testing/testers/CollectionRemoveAllTester.java, +  /** Trigger the {@code other.size() >= this.size()} case in {@link AbstractSet#removeAll()}. */, +++ b/guava-testlib/src/com/google/common/escape/testing/EscaperAsserts.java, +++ b/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +   * type → implementation. Inherently mutable interfaces and abstract classes are mapped to their, +++ b/guava-testlib/src/com/google/common/testing/ClusterException.java, + * An {@link ClusterException} is a data structure that allows for some code to "throw multiple]