[+++ b/guava-testlib/src/com/google/common/collect/testing/TestsForMapsInJavaUtil.java, +    suite.addTest(testsForSynchronizedNavigableMap());, +  protected Collection<Method> suppressForSynchronizedNavigableMap() {, +    return Collections.emptySet();, +  }, +, +  /**, +   * Tests regular NavigableMap behavior of synchronizedNavigableMap(treeMap);, +   * does not test the fact that it's synchronized., +   */, +  public Test testsForSynchronizedNavigableMap() {, +    return NavigableMapTestSuiteBuilder.using(, +            new TestStringSortedMapGenerator() {, +              @Override, +              protected SortedMap<String, String> create(Entry<String, String>[] entries) {, +                NavigableMap<String, String> delegate = populate(new TreeMap<>(), entries);, +                return Collections.synchronizedNavigableMap(delegate);, +              }, +            }), +        .named("synchronizedNavigableMap/TreeMap, natural"), +        .withFeatures(, +            MapFeature.GENERAL_PURPOSE,, +            MapFeature.ALLOWS_NULL_VALUES,, +            MapFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,, +            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,, +            CollectionFeature.KNOWN_ORDER,, +            CollectionFeature.SERIALIZABLE,, +            CollectionSize.ANY), +        .suppressing(suppressForSynchronizedNavigableMap()), +        .createTestSuite();, +  }, +, +++ b/guava-testlib/src/com/google/common/collect/testing/TestsForMapsInJavaUtil.java, +    suite.addTest(testsForSynchronizedNavigableMap());, +  protected Collection<Method> suppressForSynchronizedNavigableMap() {, +    return Collections.emptySet();, +  }, +, +  /**, +   * Tests regular NavigableMap behavior of synchronizedNavigableMap(treeMap);, +   * does not test the fact that it's synchronized., +   */, +  public Test testsForSynchronizedNavigableMap() {, +    return NavigableMapTestSuiteBuilder.using(, +            new TestStringSortedMapGenerator() {, +              @Override, +              protected SortedMap<String, String> create(Entry<String, String>[] entries) {, +                NavigableMap<String, String> delegate = populate(new TreeMap<>(), entries);, +                return Collections.synchronizedNavigableMap(delegate);, +              }, +            }), +        .named("synchronizedNavigableMap/TreeMap, natural"), +        .withFeatures(, +            MapFeature.GENERAL_PURPOSE,, +            MapFeature.ALLOWS_NULL_VALUES,, +            MapFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,, +            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,, +            CollectionFeature.KNOWN_ORDER,, +            CollectionFeature.SERIALIZABLE,, +            CollectionSize.ANY), +        .suppressing(suppressForSynchronizedNavigableMap()), +        .createTestSuite();, +  }, +, +++ b/guava-testlib/src/com/google/common/collect/testing/TestsForSetsInJavaUtil.java, +    suite.addTest(testsForSynchronizedNavigableSet());, +  protected Collection<Method> suppressForSynchronizedNavigableSet() {, +    return Collections.emptySet();, +  }, +, +  /**, +   * Tests regular NavigableSet behavior of synchronizedNavigableSet(treeSet);, +   * does not test the fact that it's synchronized., +   */, +  public Test testsForSynchronizedNavigableSet() {, +    return NavigableSetTestSuiteBuilder.using(, +            new TestStringSortedSetGenerator() {, +              @Override, +              public SortedSet<String> create(String[] elements) {, +                NavigableSet<String> delegate = new TreeSet<>(MinimalCollection.of(elements));, +                return Collections.synchronizedNavigableSet(delegate);, +              }, +            }), +        .named("synchronizedNavigableSet/TreeSet, natural"), +        .withFeatures(, +            SetFeature.GENERAL_PURPOSE,, +            CollectionFeature.SERIALIZABLE,, +            CollectionFeature.KNOWN_ORDER,, +            CollectionFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,, +            CollectionSize.ANY), +        .suppressing(suppressForSynchronizedNavigableSet()), +        .createTestSuite();, +, +  }, +]