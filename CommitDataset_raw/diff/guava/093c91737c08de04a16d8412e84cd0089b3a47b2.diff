[+++ b/guava/src/com/google/common/util/concurrent/Futures.java, +   * @deprecated Prefer to create {@code ListenableFuture} instances with {@link, +   *     SettableFuture}, {@link MoreExecutors#listeningDecorator(, +   *     java.util.concurrent.ExecutorService)}, {@link ListenableFutureTask},, +   *     {@link AbstractFuture}, and other utilities over creating plain {@code, +   *     Future} instances to be upgraded to {@code ListenableFuture} after the, +   *     fact. <b>This method is scheduled for deletion in Guava release 11.</b>, +   *, +   * @deprecated Use {@link #makeChecked(ListenableFuture, Function)} by, +   *     ensuring that your input implements {@code ListenableFuture} by, +   *     creating it with {@link SettableFuture}, {@link, +   *     MoreExecutors#listeningDecorator(, +   *     java.util.concurrent.ExecutorService)}, {@link ListenableFutureTask},, +   *     {@link AbstractFuture}, and other utilities instead of creating plain, +   *     {@code Future} instances to be upgraded to {@code ListenableFuture}, +   *     after the fact. <b>This method is scheduled for deletion in Guava, +   *     release 11.</b>, +  @Deprecated, +  public, +  static <V, X extends Exception> CheckedFuture<V, X> makeChecked(]