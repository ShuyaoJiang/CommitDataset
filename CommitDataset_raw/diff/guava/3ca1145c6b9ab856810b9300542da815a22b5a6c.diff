[+++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +    this.inEdgeMap = checkNotNull(inEdgeMap);, +    this.outEdgeMap = checkNotNull(outEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +    this.inEdgeMap = checkNotNull(inEdgeMap);, +    this.outEdgeMap = checkNotNull(outEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java, +    this.incidentEdgeMap = checkNotNull(incidentEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +    this.inEdgeMap = checkNotNull(inEdgeMap);, +    this.outEdgeMap = checkNotNull(outEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java, +    this.incidentEdgeMap = checkNotNull(incidentEdgeMap);, +++ b/guava/src/com/google/common/graph/ConfigurableMutableNetwork.java, +    checkNotNull(edge, "edge");, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +    this.inEdgeMap = checkNotNull(inEdgeMap);, +    this.outEdgeMap = checkNotNull(outEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java, +    this.incidentEdgeMap = checkNotNull(incidentEdgeMap);, +++ b/guava/src/com/google/common/graph/ConfigurableMutableNetwork.java, +    checkNotNull(edge, "edge");, +++ b/guava/src/com/google/common/graph/ConfigurableNetwork.java, +    if (connections == null) {, +      checkNotNull(node);, +      throw new IllegalArgumentException(String.format(NODE_NOT_IN_GRAPH, node));, +    }, +    if (referenceNode == null) {, +      checkNotNull(edge);, +      throw new IllegalArgumentException(String.format(EDGE_NOT_IN_GRAPH, edge));, +    }, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +    this.inEdgeMap = checkNotNull(inEdgeMap);, +    this.outEdgeMap = checkNotNull(outEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java, +    this.incidentEdgeMap = checkNotNull(incidentEdgeMap);, +++ b/guava/src/com/google/common/graph/ConfigurableMutableNetwork.java, +    checkNotNull(edge, "edge");, +++ b/guava/src/com/google/common/graph/ConfigurableNetwork.java, +    if (connections == null) {, +      checkNotNull(node);, +      throw new IllegalArgumentException(String.format(NODE_NOT_IN_GRAPH, node));, +    }, +    if (referenceNode == null) {, +      checkNotNull(edge);, +      throw new IllegalArgumentException(String.format(EDGE_NOT_IN_GRAPH, edge));, +    }, +++ b/guava/src/com/google/common/graph/ConfigurableValueGraph.java, +    if (connections == null) {, +      checkNotNull(node);, +      throw new IllegalArgumentException(String.format(NODE_NOT_IN_GRAPH, node));, +    }, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +    this.inEdgeMap = checkNotNull(inEdgeMap);, +    this.outEdgeMap = checkNotNull(outEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java, +    this.incidentEdgeMap = checkNotNull(incidentEdgeMap);, +++ b/guava/src/com/google/common/graph/ConfigurableMutableNetwork.java, +    checkNotNull(edge, "edge");, +++ b/guava/src/com/google/common/graph/ConfigurableNetwork.java, +    if (connections == null) {, +      checkNotNull(node);, +      throw new IllegalArgumentException(String.format(NODE_NOT_IN_GRAPH, node));, +    }, +    if (referenceNode == null) {, +      checkNotNull(edge);, +      throw new IllegalArgumentException(String.format(EDGE_NOT_IN_GRAPH, edge));, +    }, +++ b/guava/src/com/google/common/graph/ConfigurableValueGraph.java, +    if (connections == null) {, +      checkNotNull(node);, +      throw new IllegalArgumentException(String.format(NODE_NOT_IN_GRAPH, node));, +    }, +++ b/guava/src/com/google/common/graph/DirectedGraphConnections.java, +    this.adjacentNodeValues = checkNotNull(adjacentNodeValues);, +++ b/guava/src/com/google/common/graph/AbstractDirectedNetworkConnections.java, +    this.inEdgeMap = checkNotNull(inEdgeMap);, +    this.outEdgeMap = checkNotNull(outEdgeMap);, +++ b/guava/src/com/google/common/graph/AbstractUndirectedNetworkConnections.java, +    this.incidentEdgeMap = checkNotNull(incidentEdgeMap);, +++ b/guava/src/com/google/common/graph/ConfigurableMutableNetwork.java, +    checkNotNull(edge, "edge");, +++ b/guava/src/com/google/common/graph/ConfigurableNetwork.java, +    if (connections == null) {, +      checkNotNull(node);, +      throw new IllegalArgumentException(String.format(NODE_NOT_IN_GRAPH, node));, +    }, +    if (referenceNode == null) {, +      checkNotNull(edge);, +      throw new IllegalArgumentException(String.format(EDGE_NOT_IN_GRAPH, edge));, +    }, +++ b/guava/src/com/google/common/graph/ConfigurableValueGraph.java, +    if (connections == null) {, +      checkNotNull(node);, +      throw new IllegalArgumentException(String.format(NODE_NOT_IN_GRAPH, node));, +    }, +++ b/guava/src/com/google/common/graph/DirectedGraphConnections.java, +    this.adjacentNodeValues = checkNotNull(adjacentNodeValues);, +++ b/guava/src/com/google/common/graph/ElementOrder.java, +import static com.google.common.base.Preconditions.checkArgument;]