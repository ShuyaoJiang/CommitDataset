[+++ b/android/guava-testlib/test/com/google/common/collect/testing/IteratorTesterTest.java, +      new IteratorTester<Integer>(, +          4, MODIFIABLE, newArrayList(1, 2), IteratorTester.KnownOrder.KNOWN_ORDER) {, +        @Override, +        protected Iterator<Integer> newTargetIterator() {, +          return new IteratorWithSunJavaBug6529795<>(iterator);, +        new IteratorTester<Integer>(, +            1, MODIFIABLE, newArrayList(1), IteratorTester.KnownOrder.KNOWN_ORDER) {, +          @Override, +          protected Iterator<Integer> newTargetIterator() {, +            return new ThrowingIterator<>(new IllegalStateException());, +++ b/android/guava-testlib/test/com/google/common/collect/testing/IteratorTesterTest.java, +      new IteratorTester<Integer>(, +          4, MODIFIABLE, newArrayList(1, 2), IteratorTester.KnownOrder.KNOWN_ORDER) {, +        @Override, +        protected Iterator<Integer> newTargetIterator() {, +          return new IteratorWithSunJavaBug6529795<>(iterator);, +        new IteratorTester<Integer>(, +            1, MODIFIABLE, newArrayList(1), IteratorTester.KnownOrder.KNOWN_ORDER) {, +          @Override, +          protected Iterator<Integer> newTargetIterator() {, +            return new ThrowingIterator<>(new IllegalStateException());, +++ b/android/guava-testlib/test/com/google/common/collect/testing/SafeTreeMapTest.java, +        NavigableMapTestSuiteBuilder.using(, +                new TestStringSortedMapGenerator() {, +                  @Override, +                  protected SortedMap<String, String> create(Entry<String, String>[] entries) {, +                    NavigableMap<String, String> map = new SafeTreeMap<>(Ordering.natural());, +                }), +            .withFeatures(, +                CollectionSize.ANY,, +                CollectionFeature.KNOWN_ORDER,, +                CollectionFeature.SERIALIZABLE,, +                MapFeature.ALLOWS_NULL_VALUES,, +                CollectionFeature.SUPPORTS_ITERATOR_REMOVE,, +                MapFeature.GENERAL_PURPOSE), +            .named("SafeTreeMap with natural comparator"), +            .createTestSuite());, +    suite.addTest(, +        NavigableMapTestSuiteBuilder.using(, +                new TestStringSortedMapGenerator() {, +                  @Override, +                  protected SortedMap<String, String> create(Entry<String, String>[] entries) {, +                    NavigableMap<String, String> map = new SafeTreeMap<>(NullsBeforeTwo.INSTANCE);, +                  public Iterable<Entry<String, String>> order(, +                      List<Entry<String, String>> insertionOrder) {, +                    sort(, +                        insertionOrder,, +                        Helpers.<String, String>entryComparator(NullsBeforeTwo.INSTANCE));, +                }), +            .withFeatures(, +                CollectionSize.ANY,, +                CollectionFeature.KNOWN_ORDER,, +                MapFeature.ALLOWS_NULL_KEYS,, +                MapFeature.ALLOWS_NULL_VALUES,, +                MapFeature.ALLOWS_ANY_NULL_QUERIES,, +                MapFeature.GENERAL_PURPOSE,, +                CollectionFeature.SUPPORTS_ITERATOR_REMOVE,, +                CollectionFeature.SERIALIZABLE), +            .named("SafeTreeMap with null-friendly comparator"), +            .createTestSuite());, +      NavigableMap<String, Integer> map = new SafeTreeMap<>();, +      NavigableMap<String, Integer> map = new SafeTreeMap<>();, +++ b/android/guava-testlib/test/com/google/common/collect/testing/IteratorTesterTest.java, +      new IteratorTester<Integer>(, +          4, MODIFIABLE, newArrayList(1, 2), IteratorTester.KnownOrder.KNOWN_ORDER) {, +        @Override, +        protected Iterator<Integer> newTargetIterator() {, +          return new IteratorWithSunJavaBug6529795<>(iterator);, +        new IteratorTester<Integer>(, +            1, MODIFIABLE, newArrayList(1), IteratorTester.KnownOrder.KNOWN_ORDER) {, +          @Override, +          protected Iterator<Integer> newTargetIterator() {, +            return new ThrowingIterator<>(new IllegalStateException());, +++ b/android/guava-testlib/test/com/google/common/collect/testing/SafeTreeMapTest.java, +        NavigableMapTestSuiteBuilder.using(, +                new TestStringSortedMapGenerator() {, +                  @Override, +                  protected SortedMap<String, String> create(Entry<String, String>[] entries) {, +                    NavigableMap<String, String> map = new SafeTreeMap<>(Ordering.natural());, +                }), +            .withFeatures(, +                CollectionSize.ANY,, +                CollectionFeature.KNOWN_ORDER,, +                CollectionFeature.SERIALIZABLE,, +                MapFeature.ALLOWS_NULL_VALUES,, +                CollectionFeature.SUPPORTS_ITERATOR_REMOVE,, +                MapFeature.GENERAL_PURPOSE), +            .named("SafeTreeMap with natural comparator"), +            .createTestSuite());, +    suite.addTest(, +        NavigableMapTestSuiteBuilder.using(, +                new TestStringSortedMapGenerator() {, +                  @Override, +                  protected SortedMap<String, String> create(Entry<String, String>[] entries) {, +                    NavigableMap<String, String> map = new SafeTreeMap<>(NullsBeforeTwo.INSTANCE);, +                  public Iterable<Entry<String, String>> order(, +                      List<Entry<String, String>> insertionOrder) {, +                    sort(, +                        insertionOrder,]