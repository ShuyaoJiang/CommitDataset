[+++ b/src/com/google/common/base/Predicates.java, +    return ObjectPredicate.ALWAYS_TRUE.withNarrowedType();, +    return ObjectPredicate.ALWAYS_FALSE.withNarrowedType();, +  @GwtCompatible(serializable = true), +    return ObjectPredicate.IS_NULL.withNarrowedType();, +  @GwtCompatible(serializable = true), +    return ObjectPredicate.NOT_NULL.withNarrowedType();, +  enum ObjectPredicate implements Predicate<Object> {, +    ALWAYS_TRUE {, +      @Override public boolean apply(@Nullable Object o) {, +    },, +    ALWAYS_FALSE {, +      @Override public boolean apply(@Nullable Object o) {, +    },, +    IS_NULL {, +      @Override public boolean apply(@Nullable Object o) {, +        return o == null;, +      }, +    },, +    NOT_NULL {, +      @Override public boolean apply(@Nullable Object o) {, +        return o != null;, +      }, +    };, +    , +    @SuppressWarnings("unchecked") // these Object predicates work for any T, +    <T> Predicate<T> withNarrowedType() {, +      return (Predicate<T>) this;, +++ b/src/com/google/common/base/Predicates.java, +    return ObjectPredicate.ALWAYS_TRUE.withNarrowedType();, +    return ObjectPredicate.ALWAYS_FALSE.withNarrowedType();, +  @GwtCompatible(serializable = true), +    return ObjectPredicate.IS_NULL.withNarrowedType();, +  @GwtCompatible(serializable = true), +    return ObjectPredicate.NOT_NULL.withNarrowedType();, +  enum ObjectPredicate implements Predicate<Object> {, +    ALWAYS_TRUE {, +      @Override public boolean apply(@Nullable Object o) {, +    },, +    ALWAYS_FALSE {, +      @Override public boolean apply(@Nullable Object o) {, +    },, +    IS_NULL {, +      @Override public boolean apply(@Nullable Object o) {, +        return o == null;, +      }, +    },, +    NOT_NULL {, +      @Override public boolean apply(@Nullable Object o) {, +        return o != null;, +      }, +    };, +    , +    @SuppressWarnings("unchecked") // these Object predicates work for any T, +    <T> Predicate<T> withNarrowedType() {, +      return (Predicate<T>) this;, +++ b/src/com/google/common/base/Suppliers.java, +   *, +   * <p>If {@code delegate} is an instance created by an earlier call to {@code, +   * memoize}, it is returned directly., +    return (delegate instanceof MemoizingSupplier), +        ? delegate, +        : new MemoizingSupplier<T>(Preconditions.checkNotNull(delegate));, +++ b/src/com/google/common/base/Predicates.java, +    return ObjectPredicate.ALWAYS_TRUE.withNarrowedType();, +    return ObjectPredicate.ALWAYS_FALSE.withNarrowedType();, +  @GwtCompatible(serializable = true), +    return ObjectPredicate.IS_NULL.withNarrowedType();, +  @GwtCompatible(serializable = true), +    return ObjectPredicate.NOT_NULL.withNarrowedType();, +  enum ObjectPredicate implements Predicate<Object> {, +    ALWAYS_TRUE {, +      @Override public boolean apply(@Nullable Object o) {, +    },, +    ALWAYS_FALSE {, +      @Override public boolean apply(@Nullable Object o) {, +    },, +    IS_NULL {, +      @Override public boolean apply(@Nullable Object o) {, +        return o == null;, +      }, +    },, +    NOT_NULL {, +      @Override public boolean apply(@Nullable Object o) {, +        return o != null;, +      }, +    };, +    , +    @SuppressWarnings("unchecked") // these Object predicates work for any T, +    <T> Predicate<T> withNarrowedType() {, +      return (Predicate<T>) this;, +++ b/src/com/google/common/base/Suppliers.java, +   *, +   * <p>If {@code delegate} is an instance created by an earlier call to {@code, +   * memoize}, it is returned directly., +    return (delegate instanceof MemoizingSupplier), +        ? delegate, +        : new MemoizingSupplier<T>(Preconditions.checkNotNull(delegate));, +++ b/src/com/google/common/collect/AbstractMultimap.java, +    ]