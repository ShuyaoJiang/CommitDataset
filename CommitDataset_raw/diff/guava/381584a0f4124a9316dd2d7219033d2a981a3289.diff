[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +  @Nullable, +  static <K> K keyOrNull(@Nullable Entry<K, ?> entry) {, +    return (entry == null) ? null : entry.getKey();, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +  @Nullable, +  static <K> K keyOrNull(@Nullable Entry<K, ?> entry) {, +    return (entry == null) ? null : entry.getKey();, +  }, +, +++ b/guava-tests/test/com/google/common/collect/ForwardingNavigableMapTest.java, +/*, + * Copyright (C) 2011 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.collect;, +, +import com.google.common.collect.testing.NavigableMapTestSuiteBuilder;, +import com.google.common.collect.testing.SafeTreeMap;, +import com.google.common.collect.testing.TestStringMapGenerator;, +import com.google.common.collect.testing.features.CollectionFeature;, +import com.google.common.collect.testing.features.CollectionSize;, +import com.google.common.collect.testing.features.MapFeature;, +, +import java.util.Collection;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +import java.util.Map.Entry;, +import java.util.NavigableMap;, +import java.util.NavigableSet;, +import java.util.Set;, +import java.util.SortedMap;, +, +import junit.framework.Test;, +import junit.framework.TestSuite;, +, +/**, + * Tests for {@code ForwardingNavigableMap}., + *, + * @author Robert Konigsberg, + * @author Louis Wasserman, + */, +public class ForwardingNavigableMapTest extends ForwardingSortedMapTest {, +  static class StandardImplForwardingNavigableMap<K, V>, +      extends ForwardingNavigableMap<K, V> {, +    private final NavigableMap<K, V> backingMap;, +, +    StandardImplForwardingNavigableMap(NavigableMap<K, V> backingMap) {, +      this.backingMap = backingMap;, +    }, +, +    @Override protected NavigableMap<K, V> delegate() {, +      return backingMap;, +    }, +, +    @Override public boolean containsKey(Object key) {, +      return standardContainsKey(key);, +    }, +, +    @Override public boolean containsValue(Object value) {, +      return standardContainsValue(value);, +    }, +, +    @Override public void putAll(Map<? extends K, ? extends V> map) {, +      standardPutAll(map);, +    }, +, +    @Override public V remove(Object object) {, +      return standardRemove(object);, +    }, +, +    @Override public boolean equals(Object object) {, +      return standardEquals(object);, +    }, +, +    @Override public int hashCode() {, +      return standardHashCode();, +    }, +, +    @Override public Set<K> keySet() {, +      return new StandardKeySet();, +    }, +, +    @Override public Collection<V> values() {, +      return new StandardValues();]