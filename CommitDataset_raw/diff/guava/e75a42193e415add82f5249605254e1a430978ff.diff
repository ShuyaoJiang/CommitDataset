[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-testlib/src/com/google/common/testing/TearDown.java, +   * is thrown from one of its {@link TearDown} instances, but this is subject to, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-testlib/src/com/google/common/testing/TearDown.java, +   * is thrown from one of its {@link TearDown} instances, but this is subject to, +++ b/guava/src/com/google/common/collect/DiscreteDomain.java, + * {@link Integer} instances. A discrete domain is one that supports the three basic, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-testlib/src/com/google/common/testing/TearDown.java, +   * is thrown from one of its {@link TearDown} instances, but this is subject to, +++ b/guava/src/com/google/common/collect/DiscreteDomain.java, + * {@link Integer} instances. A discrete domain is one that supports the three basic, +++ b/guava/src/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-testlib/src/com/google/common/testing/TearDown.java, +   * is thrown from one of its {@link TearDown} instances, but this is subject to, +++ b/guava/src/com/google/common/collect/DiscreteDomain.java, + * {@link Integer} instances. A discrete domain is one that supports the three basic, +++ b/guava/src/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +   * <p>The value {@code Map<R, V>} instances in the returned map are, +   * {@link ImmutableMap} instances as well., +   * <p>The value {@code Map<C, V>} instances in the returned map are, +   * {@link ImmutableMap} instances as well., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-testlib/src/com/google/common/testing/TearDown.java, +   * is thrown from one of its {@link TearDown} instances, but this is subject to, +++ b/guava/src/com/google/common/collect/DiscreteDomain.java, + * {@link Integer} instances. A discrete domain is one that supports the three basic, +++ b/guava/src/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +   * <p>The value {@code Map<R, V>} instances in the returned map are, +   * {@link ImmutableMap} instances as well., +   * <p>The value {@code Map<C, V>} instances in the returned map are, +   * {@link ImmutableMap} instances as well., +++ b/guava/src/com/google/common/eventbus/EventHandler.java, +   *     {@link Throwable} that is not an {@link Error} ({@code Error} instances are, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-testlib/src/com/google/common/testing/TearDown.java, +   * is thrown from one of its {@link TearDown} instances, but this is subject to, +++ b/guava/src/com/google/common/collect/DiscreteDomain.java, + * {@link Integer} instances. A discrete domain is one that supports the three basic, +++ b/guava/src/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +   * <p>The value {@code Map<R, V>} instances in the returned map are, +   * {@link ImmutableMap} instances as well., +   * <p>The value {@code Map<C, V>} instances in the returned map are, +   * {@link ImmutableMap} instances as well., +++ b/guava/src/com/google/common/eventbus/EventHandler.java, +   *     {@link Throwable} that is not an {@link Error} ({@code Error} instances are, +++ b/guava/src/com/google/common/eventbus/HandlerFindingStrategy.java, +   * by the type of event they handle, and wraps them in {@link EventHandler} instances., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava-testlib/src/com/google/common/testing/TearDown.java, +   * is thrown from one of its {@link TearDown} instances, but this is subject to, +++ b/guava/src/com/google/common/collect/DiscreteDomain.java, + * {@link Integer} instances. A discrete domain is one that supports the three basic, +++ b/guava/src/com/google/common/collect/FluentIterable.java, + * {@code FluentIterable} provides a rich interface for manipulating {@code Iterable} instances in a, + * chained fashion. A {@code FluentIterable} can be created from an {@code Iterable}, or from a set, + * of elements. The following types of methods are provided on {@code FluentIterable}:, +++ b/guava/src/com/google/common/collect/ImmutableTable.java]