[+++ b/android/guava-testlib/src/com/google/common/collect/testing/google/BiMapPutTester.java, +import static com.google.common.collect.testing.features.CollectionSize.ONE;, +import static com.google.common.collect.testing.features.CollectionSize.SEVERAL;, +import static com.google.common.collect.testing.features.MapFeature.ALLOWS_NULL_KEYS;, +import static com.google.common.collect.testing.features.MapFeature.ALLOWS_NULL_VALUES;, +/** Tester for {@code BiMap.put} and {@code BiMap.forcePut}. */, +  @CollectionSize.Require(ONE), +  public void testForcePutKeyPresent() {, +    getMap().forcePut(k0(), v1());, +    expectContents(Helpers.mapEntry(k0(), v1()));, +    assertFalse(getMap().containsValue(v0()));, +    assertNull(getMap().inverse().get(v0()));, +    assertEquals(1, getMap().size());, +    assertTrue(getMap().containsKey(k0()));, +  @CollectionSize.Require(ONE), +  public void testForcePutValuePresent() {, +    getMap().forcePut(k1(), v0());, +    expectContents(Helpers.mapEntry(k1(), v0()));, +    assertEquals(k1(), getMap().inverse().get(v0()));, +    assertEquals(1, getMap().size());, +    assertFalse(getMap().containsKey(k0()));, +  }, +, +  @SuppressWarnings("unchecked"), +  @MapFeature.Require(SUPPORTS_PUT), +  @CollectionSize.Require(SEVERAL), +  public void testForcePutKeyAndValuePresent() {, +    getMap().forcePut(k0(), v1());, +    expectContents(Helpers.mapEntry(k0(), v1()), Helpers.mapEntry(k2(), v2()));, +    assertEquals(2, getMap().size());, +    assertFalse(getMap().containsKey(k1()));, +    assertFalse(getMap().containsValue(v0()));, +  }, +, +  @SuppressWarnings("unchecked"), +  @MapFeature.Require({SUPPORTS_PUT, ALLOWS_NULL_KEYS}), +  @CollectionSize.Require(ONE), +  public void testForcePutNullKeyPresent() {, +    initMapWithNullKey();, +, +    getMap().forcePut(null, v1());, +, +    expectContents(Helpers.mapEntry((K) null, v1()));, +, +    assertFalse(getMap().containsValue(v0()));, +, +    assertTrue(getMap().containsValue(v1()));, +    assertTrue(getMap().inverse().containsKey(v1()));, +    assertNull(getMap().inverse().get(v1()));, +    assertEquals(v1(), getMap().get(null));, +    assertEquals(1, getMap().size());, +  }, +, +  @SuppressWarnings("unchecked"), +  @MapFeature.Require({SUPPORTS_PUT, ALLOWS_NULL_VALUES}), +  @CollectionSize.Require(ONE), +  public void testForcePutNullValuePresent() {, +    initMapWithNullValue();, +, +    getMap().forcePut(k1(), null);, +, +    expectContents(Helpers.mapEntry(k1(), (V) null));, +, +    assertFalse(getMap().containsKey(k0()));, +, +    assertTrue(getMap().containsKey(k1()));, +    assertTrue(getMap().inverse().containsKey(null));, +    assertNull(getMap().get(k1()));, +    assertEquals(k1(), getMap().inverse().get(null));, +    assertEquals(1, getMap().size());, +  }, +, +  // nb: inverse is run through its own entire suite, +, +  @SuppressWarnings("unchecked"), +  @MapFeature.Require(SUPPORTS_PUT), +++ b/android/guava-testlib/src/com/google/common/collect/testing/google/BiMapPutTester.java, +import static com.google.common.collect.testing.features.CollectionSize.ONE;, +import static com.google.common.collect.testing.features.CollectionSize.SEVERAL;, +import static com.google.common.collect.testing.features.MapFeature.ALLOWS_NULL_KEYS;, +import static com.google.common.collect.testing.features.MapFeature.ALLOWS_NULL_VALUES;, +/** Tester for {@code BiMap.put} and {@code BiMap.forcePut}. */, +  @CollectionSize.Require(ONE), +  public void testForcePutKeyPresent() {, +    getMap().forcePut(k0(), v1());, +    expectContents(Helpers.mapEntry(k0(), v1()));, +    assertFalse(getMap().containsValue(v0()));, +    assertNull(getMap().inverse().get(v0()));, +    assertEquals(1, getMap().size());, +    assertTrue(getMap().containsKey(k0()));, +  @CollectionSize.Require(ONE), +  public void testForcePutValuePresent() {, +    getMap().forcePut(k1(), v0());, +    expectContents(Helpers.mapEntry(k1(), v0()));, +    assertEquals(k1(), getMap().inverse().get(v0()));, +    assertEquals(1, getMap().size());, +    assertFalse(getMap().containsKey(k0()));, +  }, +, +  @SuppressWarnings("unchecked")]