[+++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +  private enum Color {, +  private enum Gender {, +    MALE, FEMALE, +  }, +, +, +  // Wrapper of EnumMultiset factory methods, because we need to skip create(Class)., +  // create(Enum1.class) is equal to create(Enum2.class) but testEquals() expects otherwise., +  // For the same reason, we need to skip create(Iterable, Class)., +  private static class EnumMultisetFactory {, +    public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements) {, +      return EnumMultiset.create(elements);, +    }, +  }, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +  private enum Color {, +  private enum Gender {, +    MALE, FEMALE, +  }, +, +, +  // Wrapper of EnumMultiset factory methods, because we need to skip create(Class)., +  // create(Enum1.class) is equal to create(Enum2.class) but testEquals() expects otherwise., +  // For the same reason, we need to skip create(Iterable, Class)., +  private static class EnumMultisetFactory {, +    public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements) {, +      return EnumMultiset.create(elements);, +    }, +  }, +++ b/guava-tests/test/com/google/common/collect/EnumMultisetTest.java, +  private enum Color {, +  private enum Gender {, +    MALE, FEMALE, +  }, +, +  // Wrapper of EnumMultiset factory methods, because we need to skip create(Class)., +  // create(Enum1.class) is equal to create(Enum2.class) but testEquals() expects otherwise., +  // For the same reason, we need to skip create(Iterable, Class)., +  private static class EnumMultisetFactory {, +    public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> elements) {, +      return EnumMultiset.create(elements);, +    }, +  }, +, +        .setDistinctValues(Class.class, Color.class, Gender.class), +        .setDistinctValues(Enum.class, Color.BLUE, Color.RED), +        .forAllPublicStaticMethods(EnumMultisetFactory.class)]