[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +      return "Predicates.not(" + predicate + ")";, +      // TODO(cpovirk): maybe make this look like the method call does ("Predicates.compose(...)"), +      return p + "(" + f + ")";, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +      return "Predicates.not(" + predicate + ")";, +      // TODO(cpovirk): maybe make this look like the method call does ("Predicates.compose(...)"), +      return p + "(" + f + ")";, +++ b/guava/src/com/google/common/base/Functions.java, +      return "Functions.toStringFunction()";, +      return "Functions.identity()";, +      return "Functions.forMap(" + map + ")";, +      // TODO(cpovirk): maybe remove "defaultValue=" to make this look like the method call does, +      return "Functions.forMap(" + map + ", defaultValue=" + defaultValue + ")";, +      // TODO(cpovirk): maybe make this look like the method call does ("Functions.compose(...)"), +      return "Functions.forPredicate(" + predicate + ")";, +      return "Functions.constant(" + value + ")";, +      return "Functions.forSupplier(" + supplier + ")";, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +      return "Predicates.not(" + predicate + ")";, +      // TODO(cpovirk): maybe make this look like the method call does ("Predicates.compose(...)"), +      return p + "(" + f + ")";, +++ b/guava/src/com/google/common/base/Functions.java, +      return "Functions.toStringFunction()";, +      return "Functions.identity()";, +      return "Functions.forMap(" + map + ")";, +      // TODO(cpovirk): maybe remove "defaultValue=" to make this look like the method call does, +      return "Functions.forMap(" + map + ", defaultValue=" + defaultValue + ")";, +      // TODO(cpovirk): maybe make this look like the method call does ("Functions.compose(...)"), +      return "Functions.forPredicate(" + predicate + ")";, +      return "Functions.constant(" + value + ")";, +      return "Functions.forSupplier(" + supplier + ")";, +++ b/guava/src/com/google/common/base/Predicates.java, +      return "Predicates.not(" + predicate + ")";, +      // TODO(cpovirk): maybe make this look like the method call does ("Predicates.compose(...)"), +      return p + "(" + f + ")";]