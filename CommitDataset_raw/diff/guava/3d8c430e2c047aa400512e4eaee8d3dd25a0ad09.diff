[+++ b/guava/src/com/google/common/util/concurrent/RateLimiter.java, +  public abstract double getRate();, +      if (!canAcquire(nowMicros, nowMicros + timeoutMicros)) {, +  abstract boolean canAcquire(long nowMicros, long deadlineMicros);, +    volatile double stableIntervalMicros;, +    public final double getRate() {, +    final boolean canAcquire(long nowMicros, long deadlineMicros) {, +      return nextFreeTicketMicros <= deadlineMicros;, +        public void sleepMicrosUninterruptibly(long micros) {]