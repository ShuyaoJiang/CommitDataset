[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +    // TODO(cgruber): Add proper overrides to prevent autoboxing., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +    // TODO(cgruber): Add proper overrides to prevent autoboxing., +++ b/guava-tests/test/com/google/common/cache/LocalLoadingCacheTest.java, +    //TODO(cgruber): Confirm with fry@ that this is a reasonable substitute., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +    // TODO(cgruber): Add proper overrides to prevent autoboxing., +++ b/guava-tests/test/com/google/common/cache/LocalLoadingCacheTest.java, +    //TODO(cgruber): Confirm with fry@ that this is a reasonable substitute., +++ b/guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +    // TODO(kak): Use assertThat(startupTimes.get(b)).isAtLeast(353);, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +    // TODO(cgruber): Add proper overrides to prevent autoboxing., +++ b/guava-tests/test/com/google/common/cache/LocalLoadingCacheTest.java, +    //TODO(cgruber): Confirm with fry@ that this is a reasonable substitute., +++ b/guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +    // TODO(kak): Use assertThat(startupTimes.get(b)).isAtLeast(353);, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +++ b/guava/src/com/google/common/base/Converter.java, +  // TODO(kak): Make this method final, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +    // TODO(cgruber): Add proper overrides to prevent autoboxing., +++ b/guava-tests/test/com/google/common/cache/LocalLoadingCacheTest.java, +    //TODO(cgruber): Confirm with fry@ that this is a reasonable substitute., +++ b/guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +    // TODO(kak): Use assertThat(startupTimes.get(b)).isAtLeast(353);, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +++ b/guava/src/com/google/common/base/Converter.java, +  // TODO(kak): Make this method final, +++ b/guava/src/com/google/common/collect/EvictingQueue.java, +  // TODO(kak): Do we want to checkNotNull each element in containsAll, removeAll, and retainAll?, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +    // TODO(cgruber): Add proper overrides to prevent autoboxing., +++ b/guava-tests/test/com/google/common/cache/LocalLoadingCacheTest.java, +    //TODO(cgruber): Confirm with fry@ that this is a reasonable substitute., +++ b/guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +    // TODO(kak): Use assertThat(startupTimes.get(b)).isAtLeast(353);, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +++ b/guava/src/com/google/common/base/Converter.java, +  // TODO(kak): Make this method final, +++ b/guava/src/com/google/common/collect/EvictingQueue.java, +  // TODO(kak): Do we want to checkNotNull each element in containsAll, removeAll, and retainAll?, +++ b/guava/src/com/google/common/hash/Murmur3_32HashFunction.java, +  // TODO(kak): Maybe implement #hashBytes instead?, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/MapMaker.java, +  // TODO(fry,kak): ConcurrentHashMap never throws a CME when mutating the map during iteration, but, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractMultimapTester.java, +    // TODO(cgruber): Add proper overrides to prevent autoboxing., +++ b/guava-tests/test/com/google/common/cache/LocalLoadingCacheTest.java, +    //TODO(cgruber): Confirm with fry@ that this is a reasonable substitute., +++ b/guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +    // TODO(kak): Use assertThat(startupTimes.get(b)).isAtLeast(353);, +    // TODO(kak): Use assertThat(startupTimes.get(a)).isAtLeast(150);, +++ b/guava/src/com/google/common/base/Converter.java, +  // TODO(kak): Make this method final, +++ b/guava/src/com/google/common/collect/EvictingQueue.java, +  // TODO(kak): Do we want to checkNotNull each element in containsAll, removeAll, and retainAll?, +++ b/guava/src/com/google/common/hash/Murmur3_32HashFunction.java, +  // TODO(kak): Maybe implement #hashBytes instead?, +++ b/guava/src/com/google/common/hash/SipHashFunction.java, +  // TODO(kak): Implement and benchmark the hashFoo() shortcuts.]