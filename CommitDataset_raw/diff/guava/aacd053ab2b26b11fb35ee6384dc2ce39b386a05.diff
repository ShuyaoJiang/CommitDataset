[+++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java, +import static com.google.common.base.CharMatcher.BREAKING_WHITESPACE;, +import static com.google.common.base.CharMatcher.WHITESPACE;, +  public void testWhitespaceBreakingWhitespaceSubset() throws Exception {, +    for (int c = 0; c <= Character.MAX_VALUE; c++) {, +      if (BREAKING_WHITESPACE.apply((char) c)) {, +        assertTrue(Integer.toHexString(c), WHITESPACE.apply((char) c));, +      }, +    }, +  }, +, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java, +import static com.google.common.base.CharMatcher.BREAKING_WHITESPACE;, +import static com.google.common.base.CharMatcher.WHITESPACE;, +  public void testWhitespaceBreakingWhitespaceSubset() throws Exception {, +    for (int c = 0; c <= Character.MAX_VALUE; c++) {, +      if (BREAKING_WHITESPACE.apply((char) c)) {, +        assertTrue(Integer.toHexString(c), WHITESPACE.apply((char) c));, +      }, +    }, +  }, +, +++ b/guava-gwt/test/com/google/common/base/CharMatcherTest_gwt.java, +, +public void testWhitespaceBreakingWhitespaceSubset() throws Exception {, +  com.google.common.base.CharMatcherTest testCase = new com.google.common.base.CharMatcherTest();, +  testCase.testWhitespaceBreakingWhitespaceSubset();, +}, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/CharMatcherTest.java, +import static com.google.common.base.CharMatcher.BREAKING_WHITESPACE;, +import static com.google.common.base.CharMatcher.WHITESPACE;, +  public void testWhitespaceBreakingWhitespaceSubset() throws Exception {, +    for (int c = 0; c <= Character.MAX_VALUE; c++) {, +      if (BREAKING_WHITESPACE.apply((char) c)) {, +        assertTrue(Integer.toHexString(c), WHITESPACE.apply((char) c));, +      }, +    }, +  }, +, +++ b/guava-gwt/test/com/google/common/base/CharMatcherTest_gwt.java, +, +public void testWhitespaceBreakingWhitespaceSubset() throws Exception {, +  com.google.common.base.CharMatcherTest testCase = new com.google.common.base.CharMatcherTest();, +  testCase.testWhitespaceBreakingWhitespaceSubset();, +}, +++ b/guava-tests/test/com/google/common/base/CharMatcherTest.java, +import static com.google.common.base.CharMatcher.BREAKING_WHITESPACE;, +import static com.google.common.base.CharMatcher.WHITESPACE;, +  public void testWhitespaceBreakingWhitespaceSubset() throws Exception {, +    for (int c = 0; c <= Character.MAX_VALUE; c++) {, +      if (BREAKING_WHITESPACE.apply((char) c)) {, +        assertTrue(Integer.toHexString(c), WHITESPACE.apply((char) c));, +      }, +    }, +  }, +]