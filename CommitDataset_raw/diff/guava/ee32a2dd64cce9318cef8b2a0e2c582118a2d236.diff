[+++ /dev/null, +++ /dev/null, +++ b/guava-tests/test/com/google/common/collect/EmptyImmutableTableTest.java, +++ /dev/null, +++ b/guava-tests/test/com/google/common/collect/EmptyImmutableTableTest.java, +++ b/guava-tests/test/com/google/common/collect/SingletonImmutableTableTest.java, +        .addEqualityGroup(ImmutableTable.of(), HashBasedTable.create()), +++ /dev/null, +++ b/guava-tests/test/com/google/common/collect/EmptyImmutableTableTest.java, +++ b/guava-tests/test/com/google/common/collect/SingletonImmutableTableTest.java, +        .addEqualityGroup(ImmutableTable.of(), HashBasedTable.create()), +++ /dev/null, +++ /dev/null, +++ b/guava-tests/test/com/google/common/collect/EmptyImmutableTableTest.java, +++ b/guava-tests/test/com/google/common/collect/SingletonImmutableTableTest.java, +        .addEqualityGroup(ImmutableTable.of(), HashBasedTable.create()), +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +  private static final ImmutableTable<Object, Object, Object> EMPTY, +    = new SparseImmutableTable<Object, Object, Object>(, +        ImmutableList.<Cell<Object, Object, Object>>of(),, +        ImmutableSet.of(), ImmutableSet.of());, +  , +    return (ImmutableTable<R, C, V>) EMPTY;, +++ /dev/null, +++ b/guava-tests/test/com/google/common/collect/EmptyImmutableTableTest.java, +++ b/guava-tests/test/com/google/common/collect/SingletonImmutableTableTest.java, +        .addEqualityGroup(ImmutableTable.of(), HashBasedTable.create()), +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +  private static final ImmutableTable<Object, Object, Object> EMPTY, +    = new SparseImmutableTable<Object, Object, Object>(, +        ImmutableList.<Cell<Object, Object, Object>>of(),, +        ImmutableSet.of(), ImmutableSet.of());, +  , +    return (ImmutableTable<R, C, V>) EMPTY;, +++ b/guava/src/com/google/common/collect/RegularImmutableTable.java, +++ /dev/null, +++ b/guava-tests/test/com/google/common/collect/EmptyImmutableTableTest.java, +++ b/guava-tests/test/com/google/common/collect/SingletonImmutableTableTest.java, +        .addEqualityGroup(ImmutableTable.of(), HashBasedTable.create()), +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +  private static final ImmutableTable<Object, Object, Object> EMPTY, +    = new SparseImmutableTable<Object, Object, Object>(, +        ImmutableList.<Cell<Object, Object, Object>>of(),, +        ImmutableSet.of(), ImmutableSet.of());, +  , +    return (ImmutableTable<R, C, V>) EMPTY;, +++ b/guava/src/com/google/common/collect/RegularImmutableTable.java, +++ b/guava/src/com/google/common/collect/SparseImmutableTable.java, +    return rowMap.isEmpty() ? ImmutableList.<V>of() : new SparseValues();, +  }, +  , +  private final class SparseValues extends ImmutableList<V> {, +    return rowMap.isEmpty() ? ImmutableSet.<Cell<R, C, V>>of() : new SparseCellSet();, +  private final class SparseCellSet extends CellSet {]