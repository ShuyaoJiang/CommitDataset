[+++ b/android/guava-tests/test/com/google/common/primitives/DoublesTest.java, +    if (sortWorksWithNaN()) {, +  }, +    if (sortWorksWithNaN()) {, +  }, +  @GwtIncompatible // works with real browsers but fails with HtmlUnit, +  public void testSortWorksWithNaNNonGwt() {, +    assertTrue(sortWorksWithNaN());, +  }, +, +, +  // HtmlUnit looks to be sorting double[] wrongly. We detect that and skip our tests there., +  private static boolean sortWorksWithNaN() {, +    double[] array = new double[] {NaN, 0};, +    Arrays.sort(array);, +    return array[0] == 0;, +  }, +++ b/android/guava-tests/test/com/google/common/primitives/DoublesTest.java, +    if (sortWorksWithNaN()) {, +  }, +    if (sortWorksWithNaN()) {, +  }, +  @GwtIncompatible // works with real browsers but fails with HtmlUnit, +  public void testSortWorksWithNaNNonGwt() {, +    assertTrue(sortWorksWithNaN());, +  }, +, +, +  // HtmlUnit looks to be sorting double[] wrongly. We detect that and skip our tests there., +  private static boolean sortWorksWithNaN() {, +    double[] array = new double[] {NaN, 0};, +    Arrays.sort(array);, +    return array[0] == 0;, +  }, +++ b/android/guava-tests/test/com/google/common/primitives/FloatsTest.java, +    if (sortWorksWithNaN()) {, +  }, +    if (sortWorksWithNaN()) {, +  }, +  @GwtIncompatible // works with real browsers but fails with HtmlUnit, +  public void testSortWorksWithNaNNonGwt() {, +    assertTrue(sortWorksWithNaN());, +  }, +, +, +  // HtmlUnit looks to be sorting float[] wrongly. We detect that and skip our tests there., +  private static boolean sortWorksWithNaN() {, +    float[] array = new float[] {NaN, 0};, +    Arrays.sort(array);, +    return array[0] == 0;, +  }, +++ b/android/guava-tests/test/com/google/common/primitives/DoublesTest.java, +    if (sortWorksWithNaN()) {, +  }, +    if (sortWorksWithNaN()) {, +  }, +  @GwtIncompatible // works with real browsers but fails with HtmlUnit, +  public void testSortWorksWithNaNNonGwt() {, +    assertTrue(sortWorksWithNaN());, +  }, +, +, +  // HtmlUnit looks to be sorting double[] wrongly. We detect that and skip our tests there., +  private static boolean sortWorksWithNaN() {, +    double[] array = new double[] {NaN, 0};, +    Arrays.sort(array);, +    return array[0] == 0;, +  }, +++ b/android/guava-tests/test/com/google/common/primitives/FloatsTest.java, +    if (sortWorksWithNaN()) {, +  }, +    if (sortWorksWithNaN()) {, +  }, +  @GwtIncompatible // works with real browsers but fails with HtmlUnit, +  public void testSortWorksWithNaNNonGwt() {, +    assertTrue(sortWorksWithNaN());, +  }, +, +, +  // HtmlUnit looks to be sorting float[] wrongly. We detect that and skip our tests there., +  private static boolean sortWorksWithNaN() {, +    float[] array = new float[] {NaN, 0};, +    Arrays.sort(array);, +    return array[0] == 0;, +  }, +++ b/guava-tests/test/com/google/common/primitives/DoublesTest.java, +    if (sortWorksWithNaN()) {, +  }, +    if (sortWorksWithNaN()) {, +  }, +  @GwtIncompatible // works with real browsers but fails with HtmlUnit, +  public void testSortWorksWithNaNNonGwt() {, +    assertTrue(sortWorksWithNaN());, +  }, +, +, +  // HtmlUnit looks to be sorting double[] wrongly. We detect that and skip our tests there., +  private static boolean sortWorksWithNaN() {, +    double[] array = new double[] {NaN, 0};, +    Arrays.sort(array);]