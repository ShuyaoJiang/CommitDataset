[+++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +  private static final Joiner COMMA_JOINER = Joiner.on(",");, +      return "And(" + COMMA_JOINER.join(components) + ")";, +      return "Or(" + COMMA_JOINER.join(components) + ")";, +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +  private static final Joiner COMMA_JOINER = Joiner.on(",");, +      return "And(" + COMMA_JOINER.join(components) + ")";, +      return "Or(" + COMMA_JOINER.join(components) + ")";, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/AbstractBiMap.java, +      return standardRemoveAll(keysToRemove);, +      return standardRetainAll(keysToRetain);, +      return standardToArray();, +      return standardToArray(array);, +      return standardToString();, +      return standardToArray();, +      return standardToArray(array);, +      return standardContainsAll(c);, +      return standardRemoveAll(c);, +      return standardRetainAll(c);, +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +  private static final Joiner COMMA_JOINER = Joiner.on(",");, +      return "And(" + COMMA_JOINER.join(components) + ")";, +      return "Or(" + COMMA_JOINER.join(components) + ")";, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/AbstractBiMap.java, +      return standardRemoveAll(keysToRemove);, +      return standardRetainAll(keysToRetain);, +      return standardToArray();, +      return standardToArray(array);, +      return standardToString();, +      return standardToArray();, +      return standardToArray(array);, +      return standardContainsAll(c);, +      return standardRemoveAll(c);, +      return standardRetainAll(c);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableSet.java, +    return Sets.equalsImpl(this, obj);, +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +  private static final Joiner COMMA_JOINER = Joiner.on(",");, +      return "And(" + COMMA_JOINER.join(components) + ")";, +      return "Or(" + COMMA_JOINER.join(components) + ")";, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/AbstractBiMap.java, +      return standardRemoveAll(keysToRemove);, +      return standardRetainAll(keysToRetain);, +      return standardToArray();, +      return standardToArray(array);, +      return standardToString();, +      return standardToArray();, +      return standardToArray(array);, +      return standardContainsAll(c);, +      return standardRemoveAll(c);, +      return standardRetainAll(c);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableSet.java, +    return Sets.equalsImpl(this, obj);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   * <p>Note: the method (Lists.reverse) can always be used in place of this, +   * one. This method will be deprecated shortly., +   *, +    return Lists.reverse(list);, +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +  private static final Joiner COMMA_JOINER = Joiner.on(",");, +      return "And(" + COMMA_JOINER.join(components) + ")";, +      return "Or(" + COMMA_JOINER.join(components) + ")";, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/AbstractBiMap.java, +      return standardRemoveAll(keysToRemove);, +      return standardRetainAll(keysToRetain);, +      return standardToArray();, +      return standardToArray(array);, +      return standardToString();, +      return standardToArray();, +      return standardToArray(array);, +      return standardContainsAll(c);, +      return standardRemoveAll(c);, +      return standardRetainAll(c);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableSet.java, +    return Sets.equalsImpl(this, obj);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +   * <p>Note: the method (Lists.reverse) can always be used in place of this, +   * one. This method will be deprecated shortly., +   *, +    return Lists.reverse(list);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +        @Override public void remove() {, +          throw new UnsupportedOperationException();, +        }, +, +    @Override public boolean add(Entry<K, V> element) {, +      throw new UnsupportedOperationException();, +    }, +, +    @Override public boolean addAll(, +        Collection<? extends Entry<K, V>> collection) {, +      throw new UnsupportedOperationException();, +    }, +, +    @Override public void clear() {, +      throw new UnsupportedOperationException();, +    }, +, +    @Override public boolean remove(Object object) {, +      throw new UnsupportedOperationException();]