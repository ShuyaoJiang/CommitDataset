[+++ b/guava/src/com/google/common/collect/Ordering.java, +   * <p>This implementation copies {@code iterable} to an array, sorts the , +   * array, and creates an {@code ArrayList} from the array, incurring two , +   * copies. The traditional implementation of copying to an {@code ArrayList}, +   * and using {@code Collections.sort} incurs three copies, as , +   * {@code Collections.sort} internally copies the elements to an array,, +   * sorts them, and dumps them back., +   *, +   * <p>This implementation copies {@code iterable} to an array, sorts the , +   * array, and returns an {@code ImmutableList} view of the array, incurring , +   * one copy. In contrast, the "traditional" implementation of copying , +   * {@code iterable} to an {@code ArrayList}, using {@code Collections.sort},, +   * and using {@code ImmutableList.copyOf} would perform four copies of the , +   * data., +   *]