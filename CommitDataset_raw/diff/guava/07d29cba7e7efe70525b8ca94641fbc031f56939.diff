[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSetMultimap.java, +        ? (entries = new EntrySet<K, V>(this)), +  , +  private static final class EntrySet<K, V> extends ImmutableSet<Entry<K, V>> {, +    private transient final ImmutableSetMultimap<K, V> multimap;, +    , +    EntrySet(ImmutableSetMultimap<K, V> multimap) {, +      this.multimap = multimap;, +    }, +, +    @Override, +    public boolean contains(@Nullable Object object) {, +      if (object instanceof Entry) {, +        Entry<?, ?> entry = (Entry<?, ?>) object;, +        return multimap.containsEntry(entry.getKey(), entry.getValue());, +      }, +      return false;, +    }, +, +    @Override, +    public int size() {, +      return multimap.size();, +    }, +, +    @Override, +    public UnmodifiableIterator<Entry<K, V>> iterator() {, +      return multimap.entryIterator();, +    }, +, +    @Override, +    boolean isPartialView() {, +      return false;, +    }    , +  }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSetMultimap.java, +        ? (entries = new EntrySet<K, V>(this)), +  , +  private static final class EntrySet<K, V> extends ImmutableSet<Entry<K, V>> {, +    private transient final ImmutableSetMultimap<K, V> multimap;, +    , +    EntrySet(ImmutableSetMultimap<K, V> multimap) {, +      this.multimap = multimap;, +    }, +, +    @Override, +    public boolean contains(@Nullable Object object) {, +      if (object instanceof Entry) {, +        Entry<?, ?> entry = (Entry<?, ?>) object;, +        return multimap.containsEntry(entry.getKey(), entry.getValue());, +      }, +      return false;, +    }, +, +    @Override, +    public int size() {, +      return multimap.size();, +    }, +, +    @Override, +    public UnmodifiableIterator<Entry<K, V>> iterator() {, +      return multimap.entryIterator();, +    }, +, +    @Override, +    boolean isPartialView() {, +      return false;, +    }    , +  }, +++ b/guava/src/com/google/common/collect/ImmutableSetMultimap.java, +        ? (entries = new EntrySet<K, V>(this)), +  private static final class EntrySet<K, V> extends ImmutableSet<Entry<K, V>> {, +    private transient final ImmutableSetMultimap<K, V> multimap;, +    , +    EntrySet(ImmutableSetMultimap<K, V> multimap) {, +      this.multimap = multimap;, +    }, +, +    @Override, +    public boolean contains(@Nullable Object object) {, +      if (object instanceof Entry) {, +        Entry<?, ?> entry = (Entry<?, ?>) object;, +        return multimap.containsEntry(entry.getKey(), entry.getValue());, +      }, +      return false;, +    }, +, +    @Override, +    public int size() {, +      return multimap.size();, +    }, +, +    @Override, +    public UnmodifiableIterator<Entry<K, V>> iterator() {, +      return multimap.entryIterator();, +    }, +, +    @Override, +    boolean isPartialView() {, +      return false;, +    }    ]