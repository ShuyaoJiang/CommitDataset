[+++ b/guava-tests/test/com/google/common/reflect/ClassPathTest.java, +import com.google.common.reflect.subpackage.ClassInSubPackage;, +    Set<String> packageNames = Sets.newHashSet();, +    for (ClassInfo classInfo : classpath.getClasses(ClassPathTest.class.getPackage().getName())) {, +      packageNames.add(classInfo.getPackageName());, +    ASSERT.that(packageNames).containsAllOf(ClassPath.class.getPackage().getName());, +    assertFalse(classes.contains(ClassInSubPackage.class));, +  }, +, +  public void testGetClassesRecursive() throws Exception {, +    Set<Class<?>> classes = Sets.newHashSet();, +    ClassPath classpath = ClassPath.from(ClassPathTest.class.getClassLoader());, +    for (ClassInfo classInfo, +        : classpath.getClassesRecursive(ClassPathTest.class.getPackage().getName())) {, +      classes.add(classInfo.load());, +    }, +    ASSERT.that(classes).containsAllOf(ClassPathTest.class, ClassInSubPackage.class);, +++ b/guava-tests/test/com/google/common/reflect/ClassPathTest.java, +import com.google.common.reflect.subpackage.ClassInSubPackage;, +    Set<String> packageNames = Sets.newHashSet();, +    for (ClassInfo classInfo : classpath.getClasses(ClassPathTest.class.getPackage().getName())) {, +      packageNames.add(classInfo.getPackageName());, +    ASSERT.that(packageNames).containsAllOf(ClassPath.class.getPackage().getName());, +    assertFalse(classes.contains(ClassInSubPackage.class));, +  }, +, +  public void testGetClassesRecursive() throws Exception {, +    Set<Class<?>> classes = Sets.newHashSet();, +    ClassPath classpath = ClassPath.from(ClassPathTest.class.getClassLoader());, +    for (ClassInfo classInfo, +        : classpath.getClassesRecursive(ClassPathTest.class.getPackage().getName())) {, +      classes.add(classInfo.load());, +    }, +    ASSERT.that(classes).containsAllOf(ClassPathTest.class, ClassInSubPackage.class);, +++ b/guava-tests/test/com/google/common/reflect/subpackage/ClassInSubPackage.java, +/*, + * Copyright (C) 2012 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.reflect.subpackage;, +, +public class ClassInSubPackage {}, +++ b/guava-tests/test/com/google/common/reflect/ClassPathTest.java, +import com.google.common.reflect.subpackage.ClassInSubPackage;, +    Set<String> packageNames = Sets.newHashSet();, +    for (ClassInfo classInfo : classpath.getClasses(ClassPathTest.class.getPackage().getName())) {, +      packageNames.add(classInfo.getPackageName());, +    ASSERT.that(packageNames).containsAllOf(ClassPath.class.getPackage().getName());, +    assertFalse(classes.contains(ClassInSubPackage.class));, +  }, +, +  public void testGetClassesRecursive() throws Exception {, +    Set<Class<?>> classes = Sets.newHashSet();, +    ClassPath classpath = ClassPath.from(ClassPathTest.class.getClassLoader());, +    for (ClassInfo classInfo, +        : classpath.getClassesRecursive(ClassPathTest.class.getPackage().getName())) {, +      classes.add(classInfo.load());, +    }, +    ASSERT.that(classes).containsAllOf(ClassPathTest.class, ClassInSubPackage.class);, +++ b/guava-tests/test/com/google/common/reflect/subpackage/ClassInSubPackage.java, +/*, + * Copyright (C) 2012 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.reflect.subpackage;, +, +public class ClassInSubPackage {}, +++ b/guava/src/com/google/common/reflect/ClassPath.java, +  /** Returns all top level classes whose package name is {@code packageName}. */, +  /**, +   * Returns all top level classes whose package name is {@code packageName} or starts with, +   * {@code packageName} followed by a '.'., +   */, +  public ImmutableSet<ClassInfo> getClassesRecursive(String packageName) {, +    checkNotNull(packageName);, +    String packagePrefix = packageName + '.';]