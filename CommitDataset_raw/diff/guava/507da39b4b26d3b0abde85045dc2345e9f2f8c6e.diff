[+++ b/guava-tests/test/com/google/common/primitives/UnsignedLongsTest.java, +import com.google.common.collect.testing.Helpers;, +import java.util.Arrays;, +import java.util.Comparator;, +import java.util.List;, +  private static final long LEAST = 0L;, +  private static final long GREATEST = 0xffffffffffffffffL;, +  public void testMax_noArgs() {, +    try {, +      UnsignedLongs.max();, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +  , +  public void testMax() {, +    assertEquals(LEAST, UnsignedLongs.max(LEAST));, +    assertEquals(GREATEST, UnsignedLongs.max(GREATEST));, +    assertEquals(0xff1a618b7f65ea12L, UnsignedLongs.max(, +        0x5a4316b8c153ac4dL, 8L, 100L,, +        0L, 0x6cf78a4b139a4e2aL, 0xff1a618b7f65ea12L));, +  }, +  , +  public void testMin_noArgs() {, +    try {, +      UnsignedLongs.min();, +      fail();, +    } catch (IllegalArgumentException expected) {, +    }, +  }, +  , +  public void testMin() {, +    assertEquals(LEAST, UnsignedLongs.min(LEAST));, +    assertEquals(GREATEST, UnsignedLongs.min(GREATEST));, +    assertEquals(0L, UnsignedLongs.min(, +        0x5a4316b8c153ac4dL, 8L, 100L,, +        0L, 0x6cf78a4b139a4e2aL, 0xff1a618b7f65ea12L));, +  }, +  , +  public void testLexicographicalComparator() {, +    List<long[]> ordered = Arrays.asList(, +        new long[] {},, +        new long[] {LEAST},, +        new long[] {LEAST, LEAST},, +        new long[] {LEAST, (long) 1},, +        new long[] {(long) 1},, +        new long[] {(long) 1, LEAST},, +        new long[] {GREATEST, GREATEST - (long) 1},, +        new long[] {GREATEST, GREATEST},, +        new long[] {GREATEST, GREATEST, GREATEST});, +    , +    Comparator<long[]> comparator = UnsignedLongs.lexicographicalComparator();, +    Helpers.testComparator(comparator, ordered);, +  }, +]