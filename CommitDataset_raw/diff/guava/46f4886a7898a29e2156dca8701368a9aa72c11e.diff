[+++ b/android/guava/src/com/google/common/collect/CompactHashMap.java, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] entries;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] keys;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] values;, +++ b/android/guava/src/com/google/common/collect/CompactHashMap.java, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] entries;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] keys;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] values;, +++ b/android/guava/src/com/google/common/collect/CompactLinkedHashMap.java, +   * <p>A node with "prev" pointer equal to {@code ENDPOINT} is the first node in the linked list,, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] links;, +  /** Pointer to the first node in the linked list, or {@code ENDPOINT} if there are no entries. */, +++ b/android/guava/src/com/google/common/collect/CompactHashMap.java, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] entries;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] keys;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] values;, +++ b/android/guava/src/com/google/common/collect/CompactLinkedHashMap.java, +   * <p>A node with "prev" pointer equal to {@code ENDPOINT} is the first node in the linked list,, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] links;, +  /** Pointer to the first node in the linked list, or {@code ENDPOINT} if there are no entries. */, +++ b/guava/src/com/google/common/base/Converter.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @LazyInit private transient @MonotonicNonNull Converter<B, A> reverse;, +++ b/android/guava/src/com/google/common/collect/CompactHashMap.java, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] entries;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] keys;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] values;, +++ b/android/guava/src/com/google/common/collect/CompactLinkedHashMap.java, +   * <p>A node with "prev" pointer equal to {@code ENDPOINT} is the first node in the linked list,, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] links;, +  /** Pointer to the first node in the linked list, or {@code ENDPOINT} if there are no entries. */, +++ b/guava/src/com/google/common/base/Converter.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @LazyInit private transient @MonotonicNonNull Converter<B, A> reverse;, +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @MonotonicNonNull Weigher<? super K, ? super V> weigher;, +  @MonotonicNonNull Strength keyStrength;, +  @MonotonicNonNull Strength valueStrength;, +  @MonotonicNonNull Equivalence<Object> keyEquivalence;, +  @MonotonicNonNull Equivalence<Object> valueEquivalence;, +  @MonotonicNonNull RemovalListener<? super K, ? super V> removalListener;, +  @MonotonicNonNull Ticker ticker;, +++ b/android/guava/src/com/google/common/collect/CompactHashMap.java, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] entries;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] keys;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] values;, +++ b/android/guava/src/com/google/common/collect/CompactLinkedHashMap.java, +   * <p>A node with "prev" pointer equal to {@code ENDPOINT} is the first node in the linked list,, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] links;, +  /** Pointer to the first node in the linked list, or {@code ENDPOINT} if there are no entries. */, +++ b/guava/src/com/google/common/base/Converter.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @LazyInit private transient @MonotonicNonNull Converter<B, A> reverse;, +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @MonotonicNonNull Weigher<? super K, ? super V> weigher;, +  @MonotonicNonNull Strength keyStrength;, +  @MonotonicNonNull Strength valueStrength;, +  @MonotonicNonNull Equivalence<Object> keyEquivalence;, +  @MonotonicNonNull Equivalence<Object> valueEquivalence;, +  @MonotonicNonNull RemovalListener<? super K, ? super V> removalListener;, +  @MonotonicNonNull Ticker ticker;, +++ b/guava/src/com/google/common/cache/CacheBuilderSpec.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @MonotonicNonNull @VisibleForTesting Integer initialCapacity;, +  @MonotonicNonNull @VisibleForTesting Long maximumSize;, +  @MonotonicNonNull @VisibleForTesting Long maximumWeight;, +  @MonotonicNonNull @VisibleForTesting Integer concurrencyLevel;, +  @MonotonicNonNull @VisibleForTesting Strength keyStrength;, +  @MonotonicNonNull @VisibleForTesting Strength valueStrength;, +  @MonotonicNonNull @VisibleForTesting Boolean recordStats;, +  @MonotonicNonNull @VisibleForTesting TimeUnit writeExpirationTimeUnit;, +  @MonotonicNonNull @VisibleForTesting TimeUnit accessExpirationTimeUnit;, +  @MonotonicNonNull @VisibleForTesting TimeUnit refreshTimeUnit;, +++ b/android/guava/src/com/google/common/collect/CompactHashMap.java, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] entries;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] keys;, +  @VisibleForTesting @MonotonicNonNullDecl transient Object[] values;, +++ b/android/guava/src/com/google/common/collect/CompactLinkedHashMap.java, +   * <p>A node with "prev" pointer equal to {@code ENDPOINT} is the first node in the linked list,, +  @VisibleForTesting @MonotonicNonNullDecl transient long[] links;, +  /** Pointer to the first node in the linked list, or {@code ENDPOINT} if there are no entries. */, +++ b/guava/src/com/google/common/base/Converter.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @LazyInit private transient @MonotonicNonNull Converter<B, A> reverse;, +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @MonotonicNonNull Weigher<? super K, ? super V> weigher;, +  @MonotonicNonNull Strength keyStrength;, +  @MonotonicNonNull Strength valueStrength;, +  @MonotonicNonNull Equivalence<Object> keyEquivalence;, +  @MonotonicNonNull Equivalence<Object> valueEquivalence;, +  @MonotonicNonNull RemovalListener<? super K, ? super V> removalListener;, +  @MonotonicNonNull Ticker ticker;, +++ b/guava/src/com/google/common/cache/CacheBuilderSpec.java, +import org.checkerframework.checker.nullness.qual.MonotonicNonNull;, +  @MonotonicNonNull @VisibleForTesting Integer initialCapacity;, +  @MonotonicNonNull @VisibleForTesting Long maximumSize;, +  @MonotonicNonNull @VisibleForTesting Long maximumWeight;]