[+++ b/guava/src/com/google/common/util/concurrent/ListenableFuture.java, +   * any thread, consider {@link MoreExecutors#directExecutor}. Otherwise, avoid, +   * it. Heavyweight {@code directExecutor} listeners can cause problems, and, +   * these problems can be difficult to reproduce because they depend on timing., +   * For example:, +   * <li>The listener may be executed by the caller of {@code addListener}. That, +   * caller may be a UI thread or other latency-sensitive thread. This can harm, +   * UI responsiveness., +   * <li>The listener may be executed by the thread that completes this {@code, +   * Future}. That thread may be an internal system thread such as an RPC, +   * network thread. Blocking that thread may stall progress of the whole, +   * system., +   * <li>The listener may delay other listeners, even listeners that are not, +   * themselves {@code directExecutor} listeners., +   * performed using listeners, see {@link Futures}. For a simplified but, +   * general listener interface, see {@link Futures#addCallback addCallback()}.]