[+++ b/guava/src/com/google/common/hash/Hashing.java, +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">32-bit murmur3, +   * algorithm, x86 variant</a> (little-endian variant), using the given seed value., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">32-bit murmur3, +   * algorithm, x86 variant</a> (little-endian variant), using a seed value of zero., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">128-bit murmur3, +   * algorithm, x64 variant</a> (little-endian variant), using the given seed value., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">128-bit murmur3, +   * algorithm, x64 variant</a> (little-endian variant), using a seed value of zero., +++ b/guava/src/com/google/common/hash/Hashing.java, +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">32-bit murmur3, +   * algorithm, x86 variant</a> (little-endian variant), using the given seed value., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">32-bit murmur3, +   * algorithm, x86 variant</a> (little-endian variant), using a seed value of zero., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">128-bit murmur3, +   * algorithm, x64 variant</a> (little-endian variant), using the given seed value., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">128-bit murmur3, +   * algorithm, x64 variant</a> (little-endian variant), using a seed value of zero., +++ b/guava/src/com/google/common/hash/Murmur3_128HashFunction.java, + * https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp, +++ b/guava/src/com/google/common/hash/Hashing.java, +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">32-bit murmur3, +   * algorithm, x86 variant</a> (little-endian variant), using the given seed value., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">32-bit murmur3, +   * algorithm, x86 variant</a> (little-endian variant), using a seed value of zero., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">128-bit murmur3, +   * algorithm, x64 variant</a> (little-endian variant), using the given seed value., +   * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">128-bit murmur3, +   * algorithm, x64 variant</a> (little-endian variant), using a seed value of zero., +++ b/guava/src/com/google/common/hash/Murmur3_128HashFunction.java, + * https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp, +++ b/guava/src/com/google/common/hash/Murmur3_32HashFunction.java, + * See MurmurHash3_x86_32 in, + * <a href="https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp">the C++, + * implementation</a>.]