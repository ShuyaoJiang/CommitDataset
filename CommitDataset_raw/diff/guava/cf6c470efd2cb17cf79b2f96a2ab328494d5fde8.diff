[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +import com.google.common.primitives.Ints;, +        (int) Math.min(Ints.MAX_POWER_OF_TWO, ((long) expectedKeys) * expectedValuesPerKey));, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +import com.google.common.primitives.Ints;, +        (int) Math.min(Ints.MAX_POWER_OF_TWO, ((long) expectedKeys) * expectedValuesPerKey));, +++ b/guava/src/com/google/common/collect/Collections2.java, +import com.google.common.primitives.Ints;, +    return new StringBuilder((int) Math.min(size * 8L, Ints.MAX_POWER_OF_TWO));, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +import com.google.common.primitives.Ints;, +        (int) Math.min(Ints.MAX_POWER_OF_TWO, ((long) expectedKeys) * expectedValuesPerKey));, +++ b/guava/src/com/google/common/collect/Collections2.java, +import com.google.common.primitives.Ints;, +    return new StringBuilder((int) Math.min(size * 8L, Ints.MAX_POWER_OF_TWO));, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +  static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +import com.google.common.primitives.Ints;, +        (int) Math.min(Ints.MAX_POWER_OF_TWO, ((long) expectedKeys) * expectedValuesPerKey));, +++ b/guava/src/com/google/common/collect/Collections2.java, +import com.google.common.primitives.Ints;, +    return new StringBuilder((int) Math.min(size * 8L, Ints.MAX_POWER_OF_TWO));, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +  static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +import com.google.common.primitives.Ints;, +  static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +import com.google.common.primitives.Ints;, +        (int) Math.min(Ints.MAX_POWER_OF_TWO, ((long) expectedKeys) * expectedValuesPerKey));, +++ b/guava/src/com/google/common/collect/Collections2.java, +import com.google.common.primitives.Ints;, +    return new StringBuilder((int) Math.min(size * 8L, Ints.MAX_POWER_OF_TWO));, +++ b/guava/src/com/google/common/collect/CustomConcurrentHashMap.java, +  static final int MAXIMUM_CAPACITY = Ints.MAX_POWER_OF_TWO;, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +import com.google.common.primitives.Ints;, +  static final int MAX_TABLE_SIZE = Ints.MAX_POWER_OF_TWO;, +++ b/guava/src/com/google/common/collect/LinkedHashMultimap.java, +import com.google.common.primitives.Ints;, +        (int) Math.min(Ints.MAX_POWER_OF_TWO, ((long) expectedKeys) * expectedValuesPerKey));]