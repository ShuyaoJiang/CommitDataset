[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      // This is the calculation used in JDK8 to resize when a putAll, +      // happens; it seems to be the most conservative calculation we, +      // can make.  0,75 is the default load factor., +      return (int) ((float) expectedSize / 0.75F + 1.0F);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      // This is the calculation used in JDK8 to resize when a putAll, +      // happens; it seems to be the most conservative calculation we, +      // can make.  0,75 is the default load factor., +      return (int) ((float) expectedSize / 0.75F + 1.0F);, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      assertEquals("table size after adding " + size + " elements: ",, +    // In JDK8, table is set lazily, so it may be null., +    return table == null ? 0 : table.length;, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      // This is the calculation used in JDK8 to resize when a putAll, +      // happens; it seems to be the most conservative calculation we, +      // can make.  0,75 is the default load factor., +      return (int) ((float) expectedSize / 0.75F + 1.0F);, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      assertEquals("table size after adding " + size + " elements: ",, +    // In JDK8, table is set lazily, so it may be null., +    return table == null ? 0 : table.length;, +++ b/guava/src/com/google/common/collect/Maps.java, +      // This is the calculation used in JDK8 to resize when a putAll, +      // happens; it seems to be the most conservative calculation we, +      // can make.  0,75 is the default load factor., +      return (int) ((float) expectedSize / 0.75F + 1.0F);]