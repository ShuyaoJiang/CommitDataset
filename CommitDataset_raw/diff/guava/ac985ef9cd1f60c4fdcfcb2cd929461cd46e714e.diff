[+++ b/android/guava/src/com/google/common/collect/ImmutableList.java, +import static com.google.common.base.Preconditions.checkPositionIndex;, +  /** A singleton implementation of iterator() for the empty ImmutableList. */, +  private static final UnmodifiableListIterator<Object> EMPTY_ITR =, +      new Itr<Object>(RegularImmutableList.EMPTY, 0);, +, +  @SuppressWarnings("unchecked"), +    checkPositionIndex(index, size());, +    if (isEmpty()) {, +      return (UnmodifiableListIterator<E>) EMPTY_ITR;, +    } else {, +      return new Itr<E>(this, index);, +    }, +  }, +, +  static class Itr<E> extends AbstractIndexedListIterator<E> {, +    private final ImmutableList<E> list;, +, +    Itr(ImmutableList<E> list, int index) {, +      super(list.size(), index);, +      this.list = list;, +    }, +, +      return list.get(index);, +++ b/android/guava/src/com/google/common/collect/ImmutableList.java, +import static com.google.common.base.Preconditions.checkPositionIndex;, +  /** A singleton implementation of iterator() for the empty ImmutableList. */, +  private static final UnmodifiableListIterator<Object> EMPTY_ITR =, +      new Itr<Object>(RegularImmutableList.EMPTY, 0);, +, +  @SuppressWarnings("unchecked"), +    checkPositionIndex(index, size());, +    if (isEmpty()) {, +      return (UnmodifiableListIterator<E>) EMPTY_ITR;, +    } else {, +      return new Itr<E>(this, index);, +    }, +  }, +, +  static class Itr<E> extends AbstractIndexedListIterator<E> {, +    private final ImmutableList<E> list;, +, +    Itr(ImmutableList<E> list, int index) {, +      super(list.size(), index);, +      this.list = list;, +    }, +, +      return list.get(index);, +++ b/android/guava/src/com/google/common/collect/RegularImmutableList.java, +++ b/android/guava/src/com/google/common/collect/ImmutableList.java, +import static com.google.common.base.Preconditions.checkPositionIndex;, +  /** A singleton implementation of iterator() for the empty ImmutableList. */, +  private static final UnmodifiableListIterator<Object> EMPTY_ITR =, +      new Itr<Object>(RegularImmutableList.EMPTY, 0);, +, +  @SuppressWarnings("unchecked"), +    checkPositionIndex(index, size());, +    if (isEmpty()) {, +      return (UnmodifiableListIterator<E>) EMPTY_ITR;, +    } else {, +      return new Itr<E>(this, index);, +    }, +  }, +, +  static class Itr<E> extends AbstractIndexedListIterator<E> {, +    private final ImmutableList<E> list;, +, +    Itr(ImmutableList<E> list, int index) {, +      super(list.size(), index);, +      this.list = list;, +    }, +, +      return list.get(index);, +++ b/android/guava/src/com/google/common/collect/RegularImmutableList.java, +++ b/android/guava/src/com/google/common/collect/RegularImmutableSet.java, +    return asList().iterator();]