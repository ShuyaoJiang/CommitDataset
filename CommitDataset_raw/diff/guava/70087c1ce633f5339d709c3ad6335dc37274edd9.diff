[+++ b/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +import com.google.common.collect.Sets;, +import com.google.common.reflect.Reflection;, +import junit.framework.AssertionFailedError;, +import java.util.Set;, +    return new FactoryMethodReturnValueTester(cls, builder.build());, +    private final Set<String> packagesToTest = Sets.newHashSet();, +    private FactoryMethodReturnValueTester(, +        Class<?> declaringClass, ImmutableList<Invokable<?, ?>> factories) {, +      packagesToTest.add(Reflection.getPackageName(declaringClass));, +        if (instance != null, +            && packagesToTest.contains(Reflection.getPackageName(instance.getClass()))) {, +          try {, +          } catch (AssertionError e) {, +            AssertionError error = new AssertionFailedError(, +                "Null check failed on return value of " + factory);, +            error.initCause(e);, +            throw error;, +          }, +          try {, +          } catch (RuntimeException e) {, +            AssertionError error = new AssertionFailedError(, +                "Serialization failed on return value of " + factory);, +            error.initCause(e.getCause());, +            throw error;, +          }, +          try {, +          } catch (RuntimeException e) {, +            AssertionError error = new AssertionFailedError(, +                "Serialization failed on return value of " + factory);, +            error.initCause(e.getCause());, +            throw error;, +          } catch (AssertionFailedError e) {, +            AssertionError error = new AssertionFailedError(, +                "Return value of " + factory + " reserialized to an unequal value");, +            error.initCause(e);, +            throw error;, +          }, +++ b/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +import com.google.common.collect.Sets;, +import com.google.common.reflect.Reflection;, +import junit.framework.AssertionFailedError;, +import java.util.Set;, +    return new FactoryMethodReturnValueTester(cls, builder.build());, +    private final Set<String> packagesToTest = Sets.newHashSet();, +    private FactoryMethodReturnValueTester(, +        Class<?> declaringClass, ImmutableList<Invokable<?, ?>> factories) {, +      packagesToTest.add(Reflection.getPackageName(declaringClass));, +        if (instance != null, +            && packagesToTest.contains(Reflection.getPackageName(instance.getClass()))) {, +          try {, +          } catch (AssertionError e) {, +            AssertionError error = new AssertionFailedError(, +                "Null check failed on return value of " + factory);, +            error.initCause(e);, +            throw error;, +          }, +          try {, +          } catch (RuntimeException e) {, +            AssertionError error = new AssertionFailedError(, +                "Serialization failed on return value of " + factory);, +            error.initCause(e.getCause());, +            throw error;, +          }, +          try {, +          } catch (RuntimeException e) {, +            AssertionError error = new AssertionFailedError(, +                "Serialization failed on return value of " + factory);, +            error.initCause(e.getCause());, +            throw error;, +          } catch (AssertionFailedError e) {, +            AssertionError error = new AssertionFailedError(, +                "Return value of " + factory + " reserialized to an unequal value");, +            error.initCause(e);, +            throw error;, +          }, +++ b/guava-testlib/test/com/google/common/testing/ClassSanityTesterTest.java, +import java.util.ArrayList;, +    } catch (AssertionError expected) {, +      return;, +    }, +    } catch (AssertionError expected) {, +    }, +    fail("should have failed");, +  public void testReturnValuesFromAnotherPackageIgnoredForNullTests() throws Exception {, +    new ClassSanityTester().forAllPublicStaticMethods(JdkObjectFactory.class).testNulls();, +  }, +, +  /** String doesn't check nulls as we expect. But the framework should ignore. */, +  public static class JdkObjectFactory {, +    public static Object create() {, +      return new ArrayList<String>();, +    }, +  }, +, +++ b/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +import com.google.common.collect.Sets;, +import com.google.common.reflect.Reflection;, +import junit.framework.AssertionFailedError;, +import java.util.Set;]