[+++ b/guava-testlib/src/com/google/common/testing/NullPointerTester.java, +, +   * Runs {@link #testConstructor} on every constructor in class {@code c} that, +   * has at least {@code minimalVisibility}., +  public void testConstructors(Class<?> c, Visibility minimalVisibility) {, +      if (minimalVisibility.isVisible(constructor) && !isIgnored(constructor)) {, +   * Runs {@link #testConstructor} on every public constructor in class {@code, +   * c}., +  public void testAllPublicConstructors(Class<?> c) {, +    testConstructors(c, Visibility.PUBLIC);, +  }, +, +  /**, +   * Runs {@link #testMethod} on every static method declared in class {@code c}, +   * that has at least {@code minimalVisibility}., +   */, +  public void testStaticMethods(Class<?> c, Visibility minimalVisibility) {, +      if (minimalVisibility.isVisible(method), +          && isStatic(method), +          && !isIgnored(method)) {, +   * Runs {@link #testMethod} on every public static method declared by class, +   * {@code c}., +  public void testAllPublicStaticMethods(Class<?> c) {, +    testStaticMethods(c, Visibility.PUBLIC);, +  }, +, +  /**, +   * Runs {@link #testMethod} on every instance method declared by the class, +   * of {@code instance} with at least {@code minimalVisibility}., +   */, +  public void testInstanceMethods(, +      Object instance, Visibility minimalVisibility) {, +      if (minimalVisibility.isVisible(method), +          && !isStatic(method), +          && !isIgnored(method)) {, +   * Runs {@link #testMethod} on every public instance method declared by the, +   * class of {@code instance}., +   */, +  public void testAllPublicInstanceMethods(Object instance) {, +    testInstanceMethods(instance, Visibility.PUBLIC);, +  }, +, +  /**, +  /** Visibility of any method or constructor. */, +  public enum Visibility {, +, +    PACKAGE {, +      @Override boolean isVisible(int modifiers) {, +        return !Modifier.isPrivate(modifiers);, +      }, +    },, +, +    PROTECTED {, +      @Override boolean isVisible(int modifiers) {, +        return Modifier.isPublic(modifiers) || Modifier.isProtected(modifiers);, +      }, +    },, +, +    PUBLIC {, +      @Override boolean isVisible(int modifiers) {, +        return Modifier.isPublic(modifiers);, +      }, +    };, +, +    abstract boolean isVisible(int modifiers);, +, +    /**, +     * Returns {@code true} if {@code member} is visible under {@code this}, +     * visibility., +     */, +    final boolean isVisible(Member member) {, +      return isVisible(member.getModifiers());, +    }, +  }, +, +++ b/guava-testlib/src/com/google/common/testing/NullPointerTester.java, +, +   * Runs {@link #testConstructor} on every constructor in class {@code c} that, +   * has at least {@code minimalVisibility}., +  public void testConstructors(Class<?> c, Visibility minimalVisibility) {, +      if (minimalVisibility.isVisible(constructor) && !isIgnored(constructor)) {, +   * Runs {@link #testConstructor} on every public constructor in class {@code, +   * c}., +  public void testAllPublicConstructors(Class<?> c) {, +    testConstructors(c, Visibility.PUBLIC);, +  }, +, +  /**, +   * Runs {@link #testMethod} on every static method declared in class {@code c}, +   * that has at least {@code minimalVisibility}., +   */, +  public void testStaticMethods(Class<?> c, Visibility minimalVisibility) {, +      if (minimalVisibility.isVisible(method), +          && isStatic(method), +          && !isIgnored(method)) {, +   * Runs {@link #testMethod} on every public static method declared by class, +   * {@code c}., +  public void testAllPublicStaticMethods(Class<?> c) {, +    testStaticMethods(c, Visibility.PUBLIC);, +  }]