[+++ b/guava/src/com/google/common/collect/Queues.java, +   * Drains the queue as {@link BlockingQueue#drainTo(Collection, int)}, but if the requested, +   * {@code numElements} elements are not available, it will wait for them up to the specified, +   * timeout., +   * @param numElements the number of elements to be waited for, +  public static <E> int drain(BlockingQueue<E> q, Collection<? super E> buffer, int numElements,, +    while (added < numElements) {, +      added += q.drainTo(buffer, numElements - added);, +      if (added < numElements) { // not enough elements immediately available; will have to poll, +   * Drains the queue as {@linkplain #drain(BlockingQueue, Collection, int, long, TimeUnit)},, +   * but with a different behavior in case it is interrupted while waiting. In that case, the, +   * operation will continue as usual, and in the end the thread's interruption status will be set, +   * (no {@code InterruptedException} is thrown)., +   * @param numElements the number of elements to be waited for, +      int numElements, long timeout, TimeUnit unit) {, +      while (added < numElements) {, +        added += q.drainTo(buffer, numElements - added);, +        if (added < numElements) { // not enough elements immediately available; will have to poll]