[+++ b/guava-tests/test/com/google/common/hash/HashTestUtils.java, +      // originally was 2 * Math.log(...), making it try more times to avoid flakiness issues, +      int maxCount = (int) (4 * Math.log(2 * keyBits * hashBits) + 1);, +++ b/guava-tests/test/com/google/common/hash/HashTestUtils.java, +      // originally was 2 * Math.log(...), making it try more times to avoid flakiness issues, +      int maxCount = (int) (4 * Math.log(2 * keyBits * hashBits) + 1);, +++ b/guava/src/com/google/common/hash/Hashing.java, +   * Used to randomize goodFastHash() instances, so that programs which persist anything, +   * dependent on hashcodes of those, will fail sooner than later., +   */, +  private static final int GOOD_FAST_HASH_SEED = (int) System.currentTimeMillis();, +, +  /**, +      return murmur3_32(GOOD_FAST_HASH_SEED);, +      return murmur3_128(GOOD_FAST_HASH_SEED);, +      int seed = GOOD_FAST_HASH_SEED;, +        hashFunctions[i] = murmur3_128(seed);, +        seed += 1500450271; // a prime; shouldn't matter]