[+++ b/guava-tests/test/com/google/common/hash/FunnelsTest.java, +import static org.mockito.Mockito.inOrder;, +import org.mockito.InOrder;, +, +import java.util.Arrays;, +  public void testSequential() {, +    @SuppressWarnings("unchecked"), +    Funnel<Object> elementFunnel = mock(Funnel.class);, +    PrimitiveSink primitiveSink = mock(PrimitiveSink.class);, +    Funnel<Iterable<? extends Object>> sequential = Funnels.sequentialFunnel(elementFunnel);, +    sequential.funnel(Arrays.asList("foo", "bar", "baz", "quux"), primitiveSink);, +    InOrder inOrder = inOrder(elementFunnel);, +    inOrder.verify(elementFunnel).funnel("foo", primitiveSink);, +    inOrder.verify(elementFunnel).funnel("bar", primitiveSink);, +    inOrder.verify(elementFunnel).funnel("baz", primitiveSink);, +    inOrder.verify(elementFunnel).funnel("quux", primitiveSink);, +  }, +, +++ b/guava-tests/test/com/google/common/hash/FunnelsTest.java, +import static org.mockito.Mockito.inOrder;, +import org.mockito.InOrder;, +, +import java.util.Arrays;, +  public void testSequential() {, +    @SuppressWarnings("unchecked"), +    Funnel<Object> elementFunnel = mock(Funnel.class);, +    PrimitiveSink primitiveSink = mock(PrimitiveSink.class);, +    Funnel<Iterable<? extends Object>> sequential = Funnels.sequentialFunnel(elementFunnel);, +    sequential.funnel(Arrays.asList("foo", "bar", "baz", "quux"), primitiveSink);, +    InOrder inOrder = inOrder(elementFunnel);, +    inOrder.verify(elementFunnel).funnel("foo", primitiveSink);, +    inOrder.verify(elementFunnel).funnel("bar", primitiveSink);, +    inOrder.verify(elementFunnel).funnel("baz", primitiveSink);, +    inOrder.verify(elementFunnel).funnel("quux", primitiveSink);, +  }, +, +++ b/guava/src/com/google/common/hash/Funnels.java]