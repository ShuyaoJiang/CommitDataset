[+++ b/guava-tests/test/com/google/common/io/ByteStreamsTest.java, +  }, +, +  public void testToByteArray_withSize_givenCorrectSize() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 100);, +    assertEquals(100, b.length);, +  }, +, +  public void testToByteArray_withSize_givenSmallerSize() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 80);, +    assertEquals(100, b.length);, +  }, +, +  public void testToByteArray_withSize_givenLargerSize() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 120);, +    assertEquals(100, b.length);, +  }, +, +  public void testToByteArray_withSize_givenSizeZero() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 0);, +    assertEquals(100, b.length);, +++ b/guava-tests/test/com/google/common/io/ByteStreamsTest.java, +  }, +, +  public void testToByteArray_withSize_givenCorrectSize() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 100);, +    assertEquals(100, b.length);, +  }, +, +  public void testToByteArray_withSize_givenSmallerSize() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 80);, +    assertEquals(100, b.length);, +  }, +, +  public void testToByteArray_withSize_givenLargerSize() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 120);, +    assertEquals(100, b.length);, +  }, +, +  public void testToByteArray_withSize_givenSizeZero() throws IOException {, +    InputStream in = newTestStream(100);, +    byte[] b = ByteStreams.toByteArray(in, 0);, +    assertEquals(100, b.length);, +++ b/guava-tests/test/com/google/common/io/FilesTest.java, +import java.io.FileInputStream;, +import java.io.InputStream;, +  }, +  public void testReadFile_withCorrectSize() throws IOException {, +    File asciiFile = getTestFile("ascii.txt");, +    Closer closer = Closer.create();, +      InputStream in = closer.register(new FileInputStream(asciiFile));, +      byte[] bytes = Files.readFile(in, asciiFile.length());, +      assertTrue(Arrays.equals(ASCII.getBytes(Charsets.US_ASCII), bytes));, +    } catch (Throwable e) {, +      throw closer.rethrow(e);, +    } finally {, +      closer.close();, +    }, +  }, +, +  public void testReadFile_withSmallerSize() throws IOException {, +    File asciiFile = getTestFile("ascii.txt");, +, +    Closer closer = Closer.create();, +    try {, +      InputStream in = closer.register(new FileInputStream(asciiFile));, +      byte[] bytes = Files.readFile(in, 10);, +      assertTrue(Arrays.equals(ASCII.getBytes(Charsets.US_ASCII), bytes));, +    } catch (Throwable e) {, +      throw closer.rethrow(e);, +    } finally {, +      closer.close();, +    }, +  }, +, +  public void testReadFile_withLargerSize() throws IOException {, +    File asciiFile = getTestFile("ascii.txt");, +, +    Closer closer = Closer.create();, +    try {, +      InputStream in = closer.register(new FileInputStream(asciiFile));, +      byte[] bytes = Files.readFile(in, 500);, +      assertTrue(Arrays.equals(ASCII.getBytes(Charsets.US_ASCII), bytes));, +    } catch (Throwable e) {, +      throw closer.rethrow(e);, +    } finally {, +      closer.close();, +    }, +  }, +, +  public void testReadFile_withSizeZero() throws IOException {, +    File asciiFile = getTestFile("ascii.txt");, +]