[+++ /dev/null, +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableSortedMultiset.java, +      new RegularImmutableSortedMultiset<Comparable>(NATURAL_ORDER);, +      return (ImmutableSortedMultiset<E>) NATURAL_EMPTY_MULTISET;, +    } else {, +      return new RegularImmutableSortedMultiset<E>(comparator);, +      return descendingMultiset = this.isEmpty(), +          ? emptyMultiset(Ordering.from(comparator()).reverse()), +          : new DescendingImmutableSortedMultiset<E>(this);, +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableSortedMultiset.java, +      new RegularImmutableSortedMultiset<Comparable>(NATURAL_ORDER);, +      return (ImmutableSortedMultiset<E>) NATURAL_EMPTY_MULTISET;, +    } else {, +      return new RegularImmutableSortedMultiset<E>(comparator);, +      return descendingMultiset = this.isEmpty(), +          ? emptyMultiset(Ordering.from(comparator()).reverse()), +          : new DescendingImmutableSortedMultiset<E>(this);, +++ b/guava/src/com/google/common/collect/RegularImmutableSortedMultiset.java, +import java.util.Comparator;, +, +  private static final long[] ZERO_CUMULATIVE_COUNTS = {0};, +  , +  RegularImmutableSortedMultiset(Comparator<? super E> comparator) {, +    this.elementSet = ImmutableSortedSet.emptySet(comparator);, +    this.cumulativeCounts = ZERO_CUMULATIVE_COUNTS;, +    this.offset = 0;, +    this.length = 0;, +  }, +, +    return isEmpty() ? null : getEntry(0);, +    return isEmpty() ? null : getEntry(length - 1);]