[+++ b/guava-tests/test/com/google/common/util/concurrent/MoreExecutorsTest.java, +/*, + * Portions of this file are modified versions of, + * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/test/tck/AbstractExecutorServiceTest.java?revision=1.30, + * which contained the following notice:, + *, + * Written by Doug Lea with assistance from members of JCP JSR-166, + * Expert Group and released to the public domain, as explained at, + * http://creativecommons.org/publicdomain/zero/1.0/, + * Other contributors include Andrew Wright, Jeffrey Hayes,, + * Pat Fisher, Mike Judd., + */, +, +import static com.google.common.util.concurrent.MoreExecutors.invokeAnyImpl;, +import java.util.ArrayList;, +import java.util.concurrent.ExecutionException;, +public class MoreExecutorsTest extends JSR166TestCase {, +  /**, +   * invokeAny(null) throws NPE, +   */, +  public void testInvokeAnyImpl_nullTasks() throws Exception {, +    ListeningExecutorService e = sameThreadExecutor();, +    try {, +      invokeAnyImpl(e, null, false, 0);, +      shouldThrow();, +    } catch (NullPointerException success) {, +    } finally {, +      joinPool(e);, +    }, +  }, +, +  /**, +   * invokeAny(empty collection) throws IAE, +   */, +  public void testInvokeAnyImpl_emptyTasks() throws Exception {, +    ListeningExecutorService e = sameThreadExecutor();, +    try {, +      invokeAnyImpl(e, new ArrayList<Callable<String>>(), false, 0);, +      shouldThrow();, +    } catch (IllegalArgumentException success) {, +    } finally {, +      joinPool(e);, +    }, +  }, +, +  /**, +   * invokeAny(c) throws NPE if c has null elements, +   */, +  public void testInvokeAnyImpl_nullElement() throws Exception {, +    ListeningExecutorService e = sameThreadExecutor();, +    List<Callable<Integer>> l = new ArrayList<Callable<Integer>>();, +    l.add(new Callable<Integer>() {, +      @Override public Integer call() {, +          throw new ArithmeticException("/ by zero");, +      }, +    });, +    l.add(null);, +    try {, +      invokeAnyImpl(e, l, false, 0);, +      shouldThrow();, +    } catch (NullPointerException success) {, +    } finally {, +      joinPool(e);, +    }, +  }, +, +  /**, +   * invokeAny(c) throws ExecutionException if no task in c completes, +   */, +  public void testInvokeAnyImpl_noTaskCompletes() throws Exception {, +    ListeningExecutorService e = sameThreadExecutor();, +    List<Callable<String>> l = new ArrayList<Callable<String>>();, +    l.add(new NPETask());, +    try {, +      invokeAnyImpl(e, l, false, 0);, +      shouldThrow();, +    } catch (ExecutionException success) {, +      assertTrue(success.getCause() instanceof NullPointerException);, +    } finally {, +      joinPool(e);, +    }, +  }, +, +  /**, +   * invokeAny(c) returns result of some task in c if at least one completes, +   */, +  public void testInvokeAnyImpl() throws Exception {, +    ListeningExecutorService e = sameThreadExecutor();, +    try {, +      List<Callable<String>> l = new ArrayList<Callable<String>>();, +      l.add(new StringTask());, +      l.add(new StringTask());, +      String result = invokeAnyImpl(e, l, false, 0);, +      assertSame(TEST_STRING, result);, +    } finally {, +      joinPool(e);, +    }, +  }, +, +++ b/guava-tests/test/com/google/common/util/concurrent/MoreExecutorsTest.java]