[+++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      Collection<? extends T> c = Collections2.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      Collection<? extends T> c = Collections2.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +    return (elements instanceof Collection), +        ? new HashSet<E>(Collections2.cast(elements)), +        : newHashSet(elements.iterator());, +      return new LinkedHashSet<E>(Collections2.cast(elements));, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      Collection<? extends T> c = Collections2.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +    return (elements instanceof Collection), +        ? new HashSet<E>(Collections2.cast(elements)), +        : newHashSet(elements.iterator());, +      return new LinkedHashSet<E>(Collections2.cast(elements));, +++ b/src/com/google/common/collect/AbstractMultimap.java, +      Collection<? extends V> c = Collections2.cast(values);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      Collection<? extends T> c = Collections2.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +    return (elements instanceof Collection), +        ? new HashSet<E>(Collections2.cast(elements)), +        : newHashSet(elements.iterator());, +      return new LinkedHashSet<E>(Collections2.cast(elements));, +++ b/src/com/google/common/collect/AbstractMultimap.java, +      Collection<? extends V> c = Collections2.cast(values);, +++ b/src/com/google/common/collect/AbstractMultiset.java, +      Multiset<? extends E> that = Multisets.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      Collection<? extends T> c = Collections2.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +    return (elements instanceof Collection), +        ? new HashSet<E>(Collections2.cast(elements)), +        : newHashSet(elements.iterator());, +      return new LinkedHashSet<E>(Collections2.cast(elements));, +++ b/src/com/google/common/collect/AbstractMultimap.java, +      Collection<? extends V> c = Collections2.cast(values);, +++ b/src/com/google/common/collect/AbstractMultiset.java, +      Multiset<? extends E> that = Multisets.cast(elementsToAdd);, +++ b/src/com/google/common/collect/Collections2.java, +  /**, +   * Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557, +   */, +  static <T> Collection<T> cast(Iterable<T> iterable) {, +    return (Collection<T>) iterable;, +  }, +, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      Collection<? extends T> c = Collections2.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +    return (elements instanceof Collection), +        ? new HashSet<E>(Collections2.cast(elements)), +        : newHashSet(elements.iterator());, +      return new LinkedHashSet<E>(Collections2.cast(elements));, +++ b/src/com/google/common/collect/AbstractMultimap.java, +      Collection<? extends V> c = Collections2.cast(values);, +++ b/src/com/google/common/collect/AbstractMultiset.java, +      Multiset<? extends E> that = Multisets.cast(elementsToAdd);, +++ b/src/com/google/common/collect/Collections2.java, +  /**, +   * Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557, +   */, +  static <T> Collection<T> cast(Iterable<T> iterable) {, +    return (Collection<T>) iterable;, +  }, +, +++ b/src/com/google/common/collect/ImmutableList.java, +    checkNotNull(elements); // TODO(kevinb): is this here only for GWT?, +      ? copyOf(Collections2.cast(elements)), +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +        ? Multisets.cast(elements), +        Multiset<? extends E> multiset = Multisets.cast(elements);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      Collection<? extends T> c = Collections2.cast(elementsToAdd);, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +    return (elements instanceof Collection), +        ? new HashSet<E>(Collections2.cast(elements)), +        : newHashSet(elements.iterator());]