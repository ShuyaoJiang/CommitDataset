[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * Returns a live {@link Map} view whose keys are the contents of {@code set}, +   * and whose values are computed on demand using {@code function}. To get an, +   * immutable <i>copy</i> instead, use {@link #toMap(Iterable, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +   *, +   * <p>If {@code keys} is a {@link Set}, a live view can be obtained instead of, +   * a copy using {@link Maps#asMap(Set, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * Returns a live {@link Map} view whose keys are the contents of {@code set}, +   * and whose values are computed on demand using {@code function}. To get an, +   * immutable <i>copy</i> instead, use {@link #toMap(Iterable, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +   *, +   * <p>If {@code keys} is a {@link Set}, a live view can be obtained instead of, +   * a copy using {@link Maps#asMap(Set, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +++ b/guava/src/com/google/common/collect/Maps.java, +   * Returns a live {@link Map} view whose keys are the contents of {@code set}, +   * and whose values are computed on demand using {@code function}. To get an, +   * immutable <i>copy</i> instead, use {@link #toMap(Iterable, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +   *, +   * <p>If {@code keys} is a {@link Set}, a live view can be obtained instead of, +   * a copy using {@link Maps#asMap(Set, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * Returns a live {@link Map} view whose keys are the contents of {@code set}, +   * and whose values are computed on demand using {@code function}. To get an, +   * immutable <i>copy</i> instead, use {@link #toMap(Iterable, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +   *, +   * <p>If {@code keys} is a {@link Set}, a live view can be obtained instead of, +   * a copy using {@link Maps#asMap(Set, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +++ b/guava/src/com/google/common/collect/Maps.java, +   * Returns a live {@link Map} view whose keys are the contents of {@code set}, +   * and whose values are computed on demand using {@code function}. To get an, +   * immutable <i>copy</i> instead, use {@link #toMap(Iterable, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +   *, +   * <p>If {@code keys} is a {@link Set}, a live view can be obtained instead of, +   * a copy using {@link Maps#asMap(Set, Function)}., +   * Returns an immutable map whose keys are the distinct elements of {@code, +   * keys} and whose value for each key was computed by {@code valueFunction}., +   * The map's iteration order is the order of the first appearance of each key, +   * in {@code keys}., +++ b/guava/src/com/google/common/collect/Ordering.java, + * FluentIterable} is an enriched {@link Iterable}., + * <p>The common ways to get an instance of {@code Ordering} are:, + * <ul>, + * <li>Subclass it and implement {@link #compare} instead of implementing, + *     {@link Comparator} directly, + * <li>Pass a <i>pre-existing</i> {@link Comparator} instance to {@link, + *     #from(Comparator)}, + * <li>Use the natural ordering, {@link Ordering#natural}, + * </ul>, + * <p>Then you can use the <i>chaining</i> methods to get an altered version of, + * that {@code Ordering}, including:, + *, + * <ul>, + * <li>{@link #reverse}, + * <li>{@link #compound(Comparator)}, + * <li>{@link #onResultOf(Function)}, + * <li>{@link #nullsFirst} / {@link #nullsLast}, + * </ul>, + *, + * <p>Finally, use the resulting {@code Ordering} anywhere a {@link Comparator}, + * is required, or use any of its special operations, such as:</p>, + *, + * <ul>, + * <li>{@link #immutableSortedCopy}]