[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractBiMap.java, +  transient AbstractBiMap<V, K> inverse;, +   * Returns its input, or throws an exception if this is not a valid key., +   */, +  K checkKey(K key) {, +    return key;, +  }, +  , +  /**, +   * Returns its input, or throws an exception if this is not a valid value., +   */, +  V checkValue(V value) {, +    return value;, +  }, +, +  /**, +    checkKey(key);, +    checkValue(value);, +, +    @Override, +    K checkKey(K key) {, +      return inverse.checkValue(key);, +    }, +, +    @Override, +    V checkValue(V value) {, +      return inverse.checkKey(value);, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractBiMap.java, +  transient AbstractBiMap<V, K> inverse;, +   * Returns its input, or throws an exception if this is not a valid key., +   */, +  K checkKey(K key) {, +    return key;, +  }, +  , +  /**, +   * Returns its input, or throws an exception if this is not a valid value., +   */, +  V checkValue(V value) {, +    return value;, +  }, +, +  /**, +    checkKey(key);, +    checkValue(value);, +, +    @Override, +    K checkKey(K key) {, +      return inverse.checkValue(key);, +    }, +, +    @Override, +    V checkValue(V value) {, +      return inverse.checkKey(value);, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumBiMap.java, +import static com.google.common.base.Preconditions.checkNotNull;, +, +  @Override, +  K checkKey(K key) {, +    return checkNotNull(key);, +  }, +, +  @Override, +  V checkValue(V value) {, +    return checkNotNull(value);, +  }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractBiMap.java, +  transient AbstractBiMap<V, K> inverse;, +   * Returns its input, or throws an exception if this is not a valid key., +   */, +  K checkKey(K key) {, +    return key;, +  }, +  , +  /**, +   * Returns its input, or throws an exception if this is not a valid value., +   */, +  V checkValue(V value) {, +    return value;, +  }, +, +  /**, +    checkKey(key);, +    checkValue(value);, +, +    @Override, +    K checkKey(K key) {, +      return inverse.checkValue(key);, +    }, +, +    @Override, +    V checkValue(V value) {, +      return inverse.checkKey(value);, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/EnumBiMap.java, +import static com.google.common.base.Preconditions.checkNotNull;, +, +  @Override]