[+++ b/guava/src/com/google/common/collect/DenseImmutableTable.java, +  @Override, +  public ImmutableMap<R, Map<C, V>> rowMap() {, +    return rowMap;, +++ b/guava/src/com/google/common/collect/DenseImmutableTable.java, +  @Override, +  public ImmutableMap<R, Map<C, V>> rowMap() {, +    return rowMap;, +++ b/guava/src/com/google/common/collect/EmptyImmutableTable.java, +++ b/guava/src/com/google/common/collect/DenseImmutableTable.java, +  @Override, +  public ImmutableMap<R, Map<C, V>> rowMap() {, +    return rowMap;, +++ b/guava/src/com/google/common/collect/EmptyImmutableTable.java, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +import com.google.common.base.Objects;, +  @Override public ImmutableMap<R, V> column(C columnKey) {, +    checkNotNull(columnKey);, +    return Objects.firstNonNull(, +        (ImmutableMap<R, V>) columnMap().get(columnKey),, +        ImmutableMap.<R, V>of());, +  }, +  @Override public ImmutableSet<C> columnKeySet() {, +    return columnMap().keySet();, +  }, +  @Override public ImmutableMap<C, V> row(R rowKey) {, +    checkNotNull(rowKey);, +    return Objects.firstNonNull(, +        (ImmutableMap<C, V>) rowMap().get(rowKey),, +        ImmutableMap.<C, V>of());, +  }, +  @Override public ImmutableSet<R> rowKeySet() {, +    return rowMap().keySet();, +  }, +  @Override, +  public boolean contains(@Nullable Object rowKey, @Nullable Object columnKey) {, +    return get(rowKey, columnKey) != null;    , +  }, +, +  @Override, +  public boolean containsRow(@Nullable Object rowKey) {, +    return rowMap().containsKey(rowKey);, +  }, +, +  @Override, +  public boolean containsColumn(@Nullable Object columnKey) {, +    return columnMap().containsKey(columnKey);, +  }, +, +  @Override, +  public boolean containsValue(@Nullable Object value) {, +    return values().contains(value);, +  }, +, +  @Override, +  public boolean isEmpty() {, +    return size() == 0;, +  }, +, +  @Override, +  public abstract ImmutableCollection<V> values();, +, +    return Tables.equalsImpl(this, obj);, +++ b/guava/src/com/google/common/collect/DenseImmutableTable.java, +  @Override, +  public ImmutableMap<R, Map<C, V>> rowMap() {, +    return rowMap;, +++ b/guava/src/com/google/common/collect/EmptyImmutableTable.java, +++ b/guava/src/com/google/common/collect/ImmutableTable.java, +import com.google.common.base.Objects;, +  @Override public ImmutableMap<R, V> column(C columnKey) {, +    checkNotNull(columnKey);, +    return Objects.firstNonNull(, +        (ImmutableMap<R, V>) columnMap().get(columnKey),, +        ImmutableMap.<R, V>of());, +  }, +  @Override public ImmutableSet<C> columnKeySet() {, +    return columnMap().keySet();, +  }, +  @Override public ImmutableMap<C, V> row(R rowKey) {, +    checkNotNull(rowKey);, +    return Objects.firstNonNull(, +        (ImmutableMap<C, V>) rowMap().get(rowKey),, +        ImmutableMap.<C, V>of());, +  }, +  @Override public ImmutableSet<R> rowKeySet() {, +    return rowMap().keySet();, +  }, +  @Override, +  public boolean contains(@Nullable Object rowKey, @Nullable Object columnKey) {, +    return get(rowKey, columnKey) != null;    , +  }, +, +  @Override, +  public boolean containsRow(@Nullable Object rowKey) {, +    return rowMap().containsKey(rowKey);, +  }, +, +  @Override, +  public boolean containsColumn(@Nullable Object columnKey) {]