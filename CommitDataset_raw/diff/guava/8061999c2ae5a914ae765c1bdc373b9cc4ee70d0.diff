[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * Returns a map from the ith element of list to i., +   */, +  static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list) {, +    ImmutableMap.Builder<E, Integer> builder =, +        new ImmutableMap.Builder<E, Integer>(list.size());, +    int i = 0;, +    for (E e : list) {, +      builder.put(e, i++);, +    }, +    return builder.build();, +  }, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * Returns a map from the ith element of list to i., +   */, +  static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list) {, +    ImmutableMap.Builder<E, Integer> builder =, +        new ImmutableMap.Builder<E, Integer>(list.size());, +    int i = 0;, +    for (E e : list) {, +      builder.put(e, i++);, +    }, +    return builder.build();, +  }, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +      this.inputSet = Lists.indexMap(input);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * Returns a map from the ith element of list to i., +   */, +  static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list) {, +    ImmutableMap.Builder<E, Integer> builder =, +        new ImmutableMap.Builder<E, Integer>(list.size());, +    int i = 0;, +    for (E e : list) {, +      builder.put(e, i++);, +    }, +    return builder.build();, +  }, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +      this.inputSet = Lists.indexMap(input);, +++ b/guava/src/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * Returns a map from the ith element of list to i., +   */, +  static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list) {, +    ImmutableMap.Builder<E, Integer> builder =, +        new ImmutableMap.Builder<E, Integer>(list.size());, +    int i = 0;, +    for (E e : list) {, +      builder.put(e, i++);, +    }, +    return builder.build();, +  }, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +      this.inputSet = Lists.indexMap(input);, +++ b/guava/src/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava/src/com/google/common/collect/DenseImmutableTable.java, +    this.rowKeyToIndex = Lists.indexMap(rowSpace.asList());, +    this.columnKeyToIndex = Lists.indexMap(columnSpace.asList());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    rowKeyToIndex = Lists.indexMap(rowList);, +    columnKeyToIndex = Lists.indexMap(columnList);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * Returns a map from the ith element of list to i., +   */, +  static <E> ImmutableMap<E, Integer> indexMap(Collection<E> list) {, +    ImmutableMap.Builder<E, Integer> builder =, +        new ImmutableMap.Builder<E, Integer>(list.size());, +    int i = 0;, +    for (E e : list) {, +      builder.put(e, i++);, +    }, +    return builder.build();]