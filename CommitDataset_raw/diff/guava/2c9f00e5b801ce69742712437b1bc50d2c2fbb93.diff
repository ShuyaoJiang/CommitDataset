[+++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-testlib/src/com/google/common/collect/testing/IteratorTester.java, + * <p>This particular order of operations may be unrealistic, and testing all 3^5, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-testlib/src/com/google/common/collect/testing/IteratorTester.java, + * <p>This particular order of operations may be unrealistic, and testing all 3^5, +++ b/guava-testlib/src/com/google/common/collect/testing/MinimalIterable.java, + * <p>Because of this situation, any public method accepting an iterable should, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-testlib/src/com/google/common/collect/testing/IteratorTester.java, + * <p>This particular order of operations may be unrealistic, and testing all 3^5, +++ b/guava-testlib/src/com/google/common/collect/testing/MinimalIterable.java, + * <p>Because of this situation, any public method accepting an iterable should, +++ b/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   * <p>In all cases, if {@code C} needs custom logic for testing serialization, you can add an, +   * <p>In all cases, if {@code C} needs custom logic for testing nulls, you can add an explicit, +   * {@code testNulls()} test in the corresponding {@code CTest} class, and {@code C} will be, +   * excluded from the automated null tests performed by this method., +   * <p>In all cases, if {@code C} needs custom logic for testing {@code equals()}, you can add an, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-testlib/src/com/google/common/collect/testing/IteratorTester.java, + * <p>This particular order of operations may be unrealistic, and testing all 3^5, +++ b/guava-testlib/src/com/google/common/collect/testing/MinimalIterable.java, + * <p>Because of this situation, any public method accepting an iterable should, +++ b/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   * <p>In all cases, if {@code C} needs custom logic for testing serialization, you can add an, +   * <p>In all cases, if {@code C} needs custom logic for testing nulls, you can add an explicit, +   * {@code testNulls()} test in the corresponding {@code CTest} class, and {@code C} will be, +   * excluded from the automated null tests performed by this method., +   * <p>In all cases, if {@code C} needs custom logic for testing {@code equals()}, you can add an, +++ b/guava/src/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Sets.java, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +   * <p>The result is guaranteed to be in the "traditional", lexicographical, +++ b/guava-testlib/src/com/google/common/collect/testing/IteratorTester.java, + * <p>This particular order of operations may be unrealistic, and testing all 3^5, +++ b/guava-testlib/src/com/google/common/collect/testing/MinimalIterable.java, + * <p>Because of this situation, any public method accepting an iterable should, +++ b/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   * <p>In all cases, if {@code C} needs custom logic for testing serialization, you can add an, +   * <p>In all cases, if {@code C} needs custom logic for testing nulls, you can add an explicit, +   * {@code testNulls()} test in the corresponding {@code CTest} class, and {@code C} will be, +   * excluded from the automated null tests performed by this method., +   * <p>In all cases, if {@code C} needs custom logic for testing {@code equals()}, you can add an, +++ b/guava/src/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava/src/com/google/common/cache/CacheBuilderSpec.java, + * <p>The set of supported keys will grow as {@code CacheBuilder} evolves, but existing keys, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, + * <p>These features are all optional; caches can be created using all or none of them. By default, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java]