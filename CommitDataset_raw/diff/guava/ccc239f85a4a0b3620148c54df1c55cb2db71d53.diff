[+++ b/android/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/android/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    Map<K, Collection<V>> map = CompactHashMap.create();, +++ b/android/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    Map<K, Collection<V>> map = CompactHashMap.create();, +++ b/android/guava/src/com/google/common/collect/HashMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));, +    return Platform.<V>newHashSetWithExpectedSize(expectedValuesPerKey);, +    Map<K, Collection<V>> map = Platform.newHashMapWithExpectedSize(12);, +++ b/android/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    Map<K, Collection<V>> map = CompactHashMap.create();, +++ b/android/guava/src/com/google/common/collect/HashMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));, +    return Platform.<V>newHashSetWithExpectedSize(expectedValuesPerKey);, +    Map<K, Collection<V>> map = Platform.newHashMapWithExpectedSize(12);, +++ b/android/guava/src/com/google/common/collect/LinkedHashMultimap.java, +    super(Platform.<K, Collection<V>>newLinkedHashMapWithExpectedSize(keyCapacity));, +    return Platform.newLinkedHashSetWithExpectedSize(valueSetCapacity);, +    Map<K, Collection<V>> map = Platform.newLinkedHashMapWithExpectedSize(12);, +++ b/android/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    Map<K, Collection<V>> map = CompactHashMap.create();, +++ b/android/guava/src/com/google/common/collect/HashMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));, +    return Platform.<V>newHashSetWithExpectedSize(expectedValuesPerKey);, +    Map<K, Collection<V>> map = Platform.newHashMapWithExpectedSize(12);, +++ b/android/guava/src/com/google/common/collect/LinkedHashMultimap.java, +    super(Platform.<K, Collection<V>>newLinkedHashMapWithExpectedSize(keyCapacity));, +    return Platform.newLinkedHashSetWithExpectedSize(valueSetCapacity);, +    Map<K, Collection<V>> map = Platform.newLinkedHashMapWithExpectedSize(12);, +++ b/android/guava/src/com/google/common/collect/LinkedListMultimap.java, +    this(12);, +    keyToKeyList = Platform.newHashMapWithExpectedSize(expectedKeys);, +    keyToKeyList = CompactLinkedHashMap.create();, +++ b/android/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    Map<K, Collection<V>> map = CompactHashMap.create();, +++ b/android/guava/src/com/google/common/collect/HashMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));, +    return Platform.<V>newHashSetWithExpectedSize(expectedValuesPerKey);, +    Map<K, Collection<V>> map = Platform.newHashMapWithExpectedSize(12);, +++ b/android/guava/src/com/google/common/collect/LinkedHashMultimap.java, +    super(Platform.<K, Collection<V>>newLinkedHashMapWithExpectedSize(keyCapacity));, +    return Platform.newLinkedHashSetWithExpectedSize(valueSetCapacity);, +    Map<K, Collection<V>> map = Platform.newLinkedHashMapWithExpectedSize(12);, +++ b/android/guava/src/com/google/common/collect/LinkedListMultimap.java, +    this(12);, +    keyToKeyList = Platform.newHashMapWithExpectedSize(expectedKeys);, +    keyToKeyList = CompactLinkedHashMap.create();, +++ b/android/guava/src/com/google/common/collect/MultimapBuilder.java, +  /** Uses a hash table to map keys to value collections. */, +   * Uses a hash table to map keys to value collections, initialized to expect the specified, +        return Platform.newHashMapWithExpectedSize(expectedKeys);, +   * Uses a hash table to map keys to value collections., +   * Uses an hash table to map keys to value collections, initialized to expect the, +        return Platform.newLinkedHashMapWithExpectedSize(expectedKeys);, +      return Platform.newHashSetWithExpectedSize(expectedValuesPerKey);, +      return Platform.newLinkedHashSetWithExpectedSize(expectedValuesPerKey);, +    /** Uses a hash-based {@code Set} to store value collections. */, +     * Uses a hash-based {@code Set} to store value collections, initialized to expect the specified number, +    /** Uses an insertion-ordered hash-based {@code Set} to store value collections. */, +     * Uses an insertion-ordered hash-based {@code Set} to store value collections, initialized to expect the specified, +++ b/android/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/android/guava/src/com/google/common/collect/ArrayListMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    Map<K, Collection<V>> map = CompactHashMap.create();, +++ b/android/guava/src/com/google/common/collect/HashMultimap.java, +    this(12, DEFAULT_VALUES_PER_KEY);, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(expectedKeys));, +    super(Platform.<K, Collection<V>>newHashMapWithExpectedSize(multimap.keySet().size()));, +    return Platform.<V>newHashSetWithExpectedSize(expectedValuesPerKey);, +    Map<K, Collection<V>> map = Platform.newHashMapWithExpectedSize(12);, +++ b/android/guava/src/com/google/common/collect/LinkedHashMultimap.java, +    super(Platform.<K, Collection<V>>newLinkedHashMapWithExpectedSize(keyCapacity));, +    return Platform.newLinkedHashSetWithExpectedSize(valueSetCapacity);, +    Map<K, Collection<V>> map = Platform.newLinkedHashMapWithExpectedSize(12);, +++ b/android/guava/src/com/google/common/collect/LinkedListMultimap.java, +    this(12);]