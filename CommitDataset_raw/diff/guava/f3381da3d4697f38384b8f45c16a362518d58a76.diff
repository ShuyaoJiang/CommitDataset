[+++ b/cycle_whitelist.txt, +FIELD com.google.common.collect.ImmutableMultiset.asList, +FIELD com.google.common.collect.ImmutableSet.asList, +++ b/cycle_whitelist.txt, +FIELD com.google.common.collect.ImmutableMultiset.asList, +FIELD com.google.common.collect.ImmutableSet.asList, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +++ b/cycle_whitelist.txt, +FIELD com.google.common.collect.ImmutableMultiset.asList, +FIELD com.google.common.collect.ImmutableSet.asList, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +++ b/guava/src/com/google/common/collect/ImmutableMapValues.java, +  public ImmutableList<V> asList() {, +++ b/cycle_whitelist.txt, +FIELD com.google.common.collect.ImmutableMultiset.asList, +FIELD com.google.common.collect.ImmutableSet.asList, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +++ b/guava/src/com/google/common/collect/ImmutableMapValues.java, +  public ImmutableList<V> asList() {, +++ b/guava/src/com/google/common/collect/ImmutableMultiset.java, +  private transient ImmutableList<E> asList;, +, +  @Override, +  public ImmutableList<E> asList() {, +    ImmutableList<E> result = asList;, +    return (result == null) ? asList = createAsList() : result;, +  }, +, +  ImmutableList<E> createAsList() {, +    if (isEmpty()) {, +      return ImmutableList.of();, +    }, +    return new RegularImmutableAsList<E>(this, toArray());, +  }, +, +++ b/cycle_whitelist.txt, +FIELD com.google.common.collect.ImmutableMultiset.asList, +FIELD com.google.common.collect.ImmutableSet.asList, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +++ b/guava/src/com/google/common/collect/ImmutableMapValues.java, +  public ImmutableList<V> asList() {, +++ b/guava/src/com/google/common/collect/ImmutableMultiset.java, +  private transient ImmutableList<E> asList;, +, +  @Override, +  public ImmutableList<E> asList() {, +    ImmutableList<E> result = asList;, +    return (result == null) ? asList = createAsList() : result;, +  }, +, +  ImmutableList<E> createAsList() {, +    if (isEmpty()) {, +      return ImmutableList.of();, +    }, +    return new RegularImmutableAsList<E>(this, toArray());, +  }, +, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +  private transient ImmutableList<E> asList;, +, +  @Override, +  public ImmutableList<E> asList() {, +    ImmutableList<E> result = asList;, +    return (result == null) ? asList = createAsList() : result;, +  }, +, +  ImmutableList<E> createAsList() {, +    return new RegularImmutableAsList<E>(this, toArray());, +  }, +, +++ b/cycle_whitelist.txt, +FIELD com.google.common.collect.ImmutableMultiset.asList, +FIELD com.google.common.collect.ImmutableSet.asList, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +++ b/guava/src/com/google/common/collect/ImmutableMapValues.java, +  public ImmutableList<V> asList() {, +++ b/guava/src/com/google/common/collect/ImmutableMultiset.java, +  private transient ImmutableList<E> asList;, +, +  @Override, +  public ImmutableList<E> asList() {, +    ImmutableList<E> result = asList;, +    return (result == null) ? asList = createAsList() : result;, +  }, +, +  ImmutableList<E> createAsList() {, +    if (isEmpty()) {, +      return ImmutableList.of();, +    }, +    return new RegularImmutableAsList<E>(this, toArray());, +  }, +, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +  private transient ImmutableList<E> asList;, +, +  @Override, +  public ImmutableList<E> asList() {, +    ImmutableList<E> result = asList;, +    return (result == null) ? asList = createAsList() : result;, +  }]