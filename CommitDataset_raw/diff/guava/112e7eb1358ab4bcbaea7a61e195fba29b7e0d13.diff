[+++ b/guava/src/com/google/common/graph/Graphs.java, +import com.google.common.collect.Iterables;, +import java.util.LinkedHashSet;, +  // TODO(b/31438252): Consider potential optimizations for this algorithm., +          Set<N> reachableNodes = reachableNodes(graph, node);, +          int pairwiseMatch = 1; // start at 1 to include self-loops, +          for (N nodeU : reachableNodes) {, +            for (N nodeV : Iterables.limit(reachableNodes, pairwiseMatch++)) {, +  @SuppressWarnings("unchecked") // Safe because we only cast if node is an element of the graph., +    Set<N> visitedNodes = new LinkedHashSet<N>();]