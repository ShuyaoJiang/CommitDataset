[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * {@link BiMap#inverse bimap.inverse()}{@code .get()}., +   * <p>To use a plain {@link Map} as a {@link Function}, see, +   * {@link com.google.common.base.Functions#forMap(Map)} or, +   * {@link com.google.common.base.Functions#forMap(Map, Object)}., +   *, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * {@link BiMap#inverse bimap.inverse()}{@code .get()}., +   * <p>To use a plain {@link Map} as a {@link Function}, see, +   * {@link com.google.common.base.Functions#forMap(Map)} or, +   * {@link com.google.common.base.Functions#forMap(Map, Object)}., +   *, +++ b/guava/src/com/google/common/base/Functions.java, +   * IllegalArgumentException} if given a key that does not exist in the map. See also {@link, +   * #forMap(Map, Object)}, which returns a default value in this case., +   *, +   * <p>Note: if {@code map} is a {@link com.google.common.collect.BiMap BiMap} (or can be one), you, +   * can use {@link com.google.common.collect.Maps#asConverter Maps.asConverter} instead to get a, +   * function that also supports reverse conversion., +   * set. See also {@link #forMap(Map)}, which throws an exception in this case., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * {@link BiMap#inverse bimap.inverse()}{@code .get()}., +   * <p>To use a plain {@link Map} as a {@link Function}, see, +   * {@link com.google.common.base.Functions#forMap(Map)} or, +   * {@link com.google.common.base.Functions#forMap(Map, Object)}., +   *, +++ b/guava/src/com/google/common/base/Functions.java, +   * IllegalArgumentException} if given a key that does not exist in the map. See also {@link, +   * #forMap(Map, Object)}, which returns a default value in this case., +   *, +   * <p>Note: if {@code map} is a {@link com.google.common.collect.BiMap BiMap} (or can be one), you, +   * can use {@link com.google.common.collect.Maps#asConverter Maps.asConverter} instead to get a, +   * function that also supports reverse conversion., +   * set. See also {@link #forMap(Map)}, which throws an exception in this case., +++ b/guava/src/com/google/common/collect/Maps.java, +   * {@link BiMap#inverse bimap.inverse()}{@code .get()}., +   * <p>To use a plain {@link Map} as a {@link Function}, see, +   * {@link com.google.common.base.Functions#forMap(Map)} or, +   * {@link com.google.common.base.Functions#forMap(Map, Object)}., +   *]