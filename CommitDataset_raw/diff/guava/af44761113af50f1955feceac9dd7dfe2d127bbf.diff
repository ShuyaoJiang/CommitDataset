[+++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedMultigraphTest.java, +    assertThat(directedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A);, +    assertThat(directedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedMultigraphTest.java, +    assertThat(directedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A);, +    assertThat(directedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/ImmutableUndirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.inEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.predecessors(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedMultigraphTest.java, +    assertThat(directedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A);, +    assertThat(directedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/ImmutableUndirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.inEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.predecessors(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableUndirectedMultigraphTest.java, +    assertThat(undirectedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A, E21);, +    assertThat(undirectedGraph.edgesConnecting(N2, N1)).containsExactly(E12, E12_A, E21);, +    assertThat(undirectedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedMultigraphTest.java, +    assertThat(directedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A);, +    assertThat(directedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/ImmutableUndirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.inEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.predecessors(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableUndirectedMultigraphTest.java, +    assertThat(undirectedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A, E21);, +    assertThat(undirectedGraph.edgesConnecting(N2, N1)).containsExactly(E12, E12_A, E21);, +    assertThat(undirectedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/IncidenceSetDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableDirectedMultigraphTest.java, +    assertThat(directedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A);, +    assertThat(directedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/ImmutableUndirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.inEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(undirectedGraph.predecessors(N1)).containsExactly(N1, N2);, +    assertThat(undirectedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/ImmutableUndirectedMultigraphTest.java, +    assertThat(undirectedGraph.edgesConnecting(N1, N2)).containsExactly(E12, E12_A, E21);, +    assertThat(undirectedGraph.edgesConnecting(N2, N1)).containsExactly(E12, E12_A, E21);, +    assertThat(undirectedGraph.edgesConnecting(N1, N1)).containsExactly(E11, E11_A);, +++ b/guava-tests/test/com/google/common/graph/IncidenceSetDirectedGraphTest.java, +    assertThat(graph.adjacentNodes(N1)).containsExactly(N1, N2);, +    assertThat(directedGraph.inEdges(N1)).containsExactly(E11, E41);, +    assertThat(directedGraph.outEdges(N1)).containsExactly(E11, E12);, +    assertThat(directedGraph.predecessors(N1)).containsExactly(N1, N4);, +    assertThat(directedGraph.successors(N1)).containsExactly(N1, N2);, +++ b/guava-tests/test/com/google/common/graph/IncidenceSetDirectedMultigraphTest.java]