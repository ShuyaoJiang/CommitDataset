[+++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Enums.java, +      enumConstantCache = new WeakHashMap<>();, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Enums.java, +      enumConstantCache = new WeakHashMap<>();, +++ b/android/guava/src/com/google/common/base/Equivalence.java, +    return new FunctionalEquivalence<>(function, this);, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Enums.java, +      enumConstantCache = new WeakHashMap<>();, +++ b/android/guava/src/com/google/common/base/Equivalence.java, +    return new FunctionalEquivalence<>(function, this);, +++ b/android/guava/src/com/google/common/base/FinalizableReferenceQueue.java, +    queue = new ReferenceQueue<>();, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Enums.java, +      enumConstantCache = new WeakHashMap<>();, +++ b/android/guava/src/com/google/common/base/Equivalence.java, +    return new FunctionalEquivalence<>(function, this);, +++ b/android/guava/src/com/google/common/base/FinalizableReferenceQueue.java, +    queue = new ReferenceQueue<>();, +++ b/android/guava/src/com/google/common/base/Functions.java, +    return new FunctionForMapNoDefault<>(map);, +    return new ForMapWithDefault<>(map, defaultValue);, +    return new FunctionComposition<>(g, f);, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Enums.java, +      enumConstantCache = new WeakHashMap<>();, +++ b/android/guava/src/com/google/common/base/Equivalence.java, +    return new FunctionalEquivalence<>(function, this);, +++ b/android/guava/src/com/google/common/base/FinalizableReferenceQueue.java, +    queue = new ReferenceQueue<>();, +++ b/android/guava/src/com/google/common/base/Functions.java, +    return new FunctionForMapNoDefault<>(map);, +    return new ForMapWithDefault<>(map, defaultValue);, +    return new FunctionComposition<>(g, f);, +++ b/android/guava/src/com/google/common/base/Predicates.java, +    return new CompositionPredicate<>(predicate, function);, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Enums.java, +      enumConstantCache = new WeakHashMap<>();, +++ b/android/guava/src/com/google/common/base/Equivalence.java, +    return new FunctionalEquivalence<>(function, this);, +++ b/android/guava/src/com/google/common/base/FinalizableReferenceQueue.java, +    queue = new ReferenceQueue<>();, +++ b/android/guava/src/com/google/common/base/Functions.java, +    return new FunctionForMapNoDefault<>(map);, +    return new ForMapWithDefault<>(map, defaultValue);, +    return new FunctionComposition<>(g, f);, +++ b/android/guava/src/com/google/common/base/Predicates.java, +    return new CompositionPredicate<>(predicate, function);, +++ b/android/guava/src/com/google/common/base/Splitter.java, +    List<String> result = new ArrayList<>();, +      Map<String, String> map = new LinkedHashMap<>();, +++ b/android/guava/src/com/google/common/base/Absent.java, +  static final Absent<Object> INSTANCE = new Absent<>();, +++ b/android/guava/src/com/google/common/base/Converter.java, +    return (result == null) ? reverse = new ReverseConverter<>(this) : result;, +    return new ConverterComposition<>(this, checkNotNull(secondConverter));, +    return new FunctionBasedConverter<>(forwardFunction, backwardFunction);, +++ b/android/guava/src/com/google/common/base/Enums.java]