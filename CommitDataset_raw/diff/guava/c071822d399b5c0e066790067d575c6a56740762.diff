[+++ b/guava/src/com/google/common/primitives/Ints.java, +   * Returns a serializable converter object that converts between strings and integers using {@link, +   * Integer#decode} and {@link Integer#toString()}. The returned converter throws {@link, +   * NumberFormatException} if the input string is invalid., +   *, +   * <p><b>Warning:</b> please see {@link Integer#decode} to understand exactly how strings are, +   * parsed. For example, the string {@code "0123"} is treated as <i>octal</i> and converted to the, +   * value {@code 83}., +++ b/guava/src/com/google/common/primitives/Ints.java, +   * Returns a serializable converter object that converts between strings and integers using {@link, +   * Integer#decode} and {@link Integer#toString()}. The returned converter throws {@link, +   * NumberFormatException} if the input string is invalid., +   *, +   * <p><b>Warning:</b> please see {@link Integer#decode} to understand exactly how strings are, +   * parsed. For example, the string {@code "0123"} is treated as <i>octal</i> and converted to the, +   * value {@code 83}., +++ b/guava/src/com/google/common/primitives/Longs.java, +   * Returns a serializable converter object that converts between strings and longs using {@link, +   * Long#decode} and {@link Long#toString()}. The returned converter throws {@link, +   * NumberFormatException} if the input string is invalid., +   *, +   * <p><b>Warning:</b> please see {@link Long#decode} to understand exactly how strings are parsed., +   * For example, the string {@code "0123"} is treated as <i>octal</i> and converted to the value, +   * {@code 83L}., +++ b/guava/src/com/google/common/primitives/Ints.java, +   * Returns a serializable converter object that converts between strings and integers using {@link, +   * Integer#decode} and {@link Integer#toString()}. The returned converter throws {@link, +   * NumberFormatException} if the input string is invalid., +   *, +   * <p><b>Warning:</b> please see {@link Integer#decode} to understand exactly how strings are, +   * parsed. For example, the string {@code "0123"} is treated as <i>octal</i> and converted to the, +   * value {@code 83}., +++ b/guava/src/com/google/common/primitives/Longs.java, +   * Returns a serializable converter object that converts between strings and longs using {@link, +   * Long#decode} and {@link Long#toString()}. The returned converter throws {@link, +   * NumberFormatException} if the input string is invalid., +   *, +   * <p><b>Warning:</b> please see {@link Long#decode} to understand exactly how strings are parsed., +   * For example, the string {@code "0123"} is treated as <i>octal</i> and converted to the value, +   * {@code 83L}., +++ b/guava/src/com/google/common/primitives/Shorts.java, +   * Returns a serializable converter object that converts between strings and shorts using {@link, +   * Short#decode} and {@link Short#toString()}. The returned converter throws {@link, +   * NumberFormatException} if the input string is invalid., +   *, +   * <p><b>Warning:</b> please see {@link Short#decode} to understand exactly how strings are, +   * parsed. For example, the string {@code "0123"} is treated as <i>octal</i> and converted to the, +   * value {@code 83}.]