[+++ b/guava/src/com/google/common/graph/DirectedNodeAdjacencies.java, +import com.google.common.collect.AbstractIterator;, +import java.util.Map.Entry;, +import javax.annotation.Nullable;, +, +        final Iterator<Entry<N, Adjacency>> entries = adjacentNodes.entrySet().iterator();, +        return new AbstractIterator<N>() {, +          protected N computeNext() {, +            while (entries.hasNext()) {, +              Entry<N, Adjacency> entry = entries.next();, +              if (isPredecessor(entry.getValue())) {, +                return entry.getKey();, +            }, +            return endOfData();, +          }, +        };, +      public boolean contains(Object obj) {, +        return isPredecessor(adjacentNodes.get(obj));, +        final Iterator<Entry<N, Adjacency>> entries = adjacentNodes.entrySet().iterator();, +        return new AbstractIterator<N>() {, +          protected N computeNext() {, +            while (entries.hasNext()) {, +              Entry<N, Adjacency> entry = entries.next();, +              if (isSuccessor(entry.getValue())) {, +                return entry.getKey();, +            }, +            return endOfData();, +          }, +        };, +      public boolean contains(Object obj) {, +        return isSuccessor(adjacentNodes.get(obj));, +  private static boolean isPredecessor(@Nullable Adjacency adjacency) {, +  private static boolean isSuccessor(@Nullable Adjacency adjacency) {]