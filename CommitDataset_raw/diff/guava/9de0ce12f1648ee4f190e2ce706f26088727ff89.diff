[+++ b/guava-tests/test/com/google/common/base/FinalizableReferenceQueueClassLoaderUnloadingTest.java, +    @Override, +++ b/guava-tests/test/com/google/common/base/FinalizableReferenceQueueClassLoaderUnloadingTest.java, +    @Override, +++ b/guava-tests/test/com/google/common/base/FinalizableReferenceQueueTest.java, +import java.util.Arrays;, +import java.util.Collections;, +, +  public void testFinalizeClassHasNoNestedClases() throws Exception {, +    // Ensure that the Finalizer class has no nested classes., +    // See https://code.google.com/p/guava-libraries/issues/detail?id=1505, +    assertEquals(Collections.emptyList(), Arrays.asList(Finalizer.class.getDeclaredClasses()));, +  }, +++ b/guava-tests/test/com/google/common/base/FinalizableReferenceQueueClassLoaderUnloadingTest.java, +    @Override, +++ b/guava-tests/test/com/google/common/base/FinalizableReferenceQueueTest.java, +import java.util.Arrays;, +import java.util.Collections;, +, +  public void testFinalizeClassHasNoNestedClases() throws Exception {, +    // Ensure that the Finalizer class has no nested classes., +    // See https://code.google.com/p/guava-libraries/issues/detail?id=1505, +    assertEquals(Collections.emptyList(), Arrays.asList(Finalizer.class.getDeclaredClasses()));, +  }, +++ b/guava/src/com/google/common/base/internal/Finalizer.java, +        if (!cleanUp(queue.remove())) {, +          break;, +        }, +   * @return true if the caller should continue, false if the associated FinalizableReferenceQueue, +   * is no longer referenced., +  private boolean cleanUp(Reference<?> reference) {, +    if (finalizeReferentMethod == null) {, +      return false;, +    }, +        return false;, +    return true;, +  private Method getFinalizeReferentMethod() {, +      return null;]