[+++ b/guava/src/com/google/common/graph/AbstractConfigurableGraph.java, +import javax.annotation.Nullable;, +, +, +  protected boolean containsNode(@Nullable Object node) {, +    return nodeConnections.containsKey(node);, +  }, +++ b/guava/src/com/google/common/graph/AbstractConfigurableGraph.java, +import javax.annotation.Nullable;, +, +, +  protected boolean containsNode(@Nullable Object node) {, +    return nodeConnections.containsKey(node);, +  }, +++ b/guava/src/com/google/common/graph/AbstractConfigurableNetwork.java, +import javax.annotation.Nullable;, +, +    checkArgument(containsNode(node2), NODE_NOT_IN_GRAPH, node2);, +, +  protected boolean containsNode(@Nullable Object node) {, +    return nodeConnections.containsKey(node);, +  }, +, +  protected boolean containsEdge(@Nullable Object edge) {, +    return edgeToReferenceNode.containsKey(edge);, +  }, +++ b/guava/src/com/google/common/graph/AbstractConfigurableGraph.java, +import javax.annotation.Nullable;, +, +, +  protected boolean containsNode(@Nullable Object node) {, +    return nodeConnections.containsKey(node);, +  }, +++ b/guava/src/com/google/common/graph/AbstractConfigurableNetwork.java, +import javax.annotation.Nullable;, +, +    checkArgument(containsNode(node2), NODE_NOT_IN_GRAPH, node2);, +, +  protected boolean containsNode(@Nullable Object node) {, +    return nodeConnections.containsKey(node);, +  }, +, +  protected boolean containsEdge(@Nullable Object edge) {, +    return edgeToReferenceNode.containsKey(edge);, +  }, +++ b/guava/src/com/google/common/graph/ConfigurableGraph.java, +    if (containsNode(node)) {, +    boolean containsN1 = containsNode(node1);, +    boolean containsN2 = containsNode(node2);, +++ b/guava/src/com/google/common/graph/AbstractConfigurableGraph.java, +import javax.annotation.Nullable;, +, +, +  protected boolean containsNode(@Nullable Object node) {, +    return nodeConnections.containsKey(node);, +  }, +++ b/guava/src/com/google/common/graph/AbstractConfigurableNetwork.java, +import javax.annotation.Nullable;, +, +    checkArgument(containsNode(node2), NODE_NOT_IN_GRAPH, node2);, +, +  protected boolean containsNode(@Nullable Object node) {, +    return nodeConnections.containsKey(node);, +  }, +, +  protected boolean containsEdge(@Nullable Object edge) {, +    return edgeToReferenceNode.containsKey(edge);, +  }, +++ b/guava/src/com/google/common/graph/ConfigurableGraph.java, +    if (containsNode(node)) {, +    boolean containsN1 = containsNode(node1);, +    boolean containsN2 = containsNode(node2);, +++ b/guava/src/com/google/common/graph/ConfigurableNetwork.java, +    if (containsNode(node)) {, +    boolean containsN1 = containsNode(node1);, +    boolean containsN2 = containsNode(node2);, +    if (containsEdge(edge)) {, +    if (!containsNode(node)) {]