[+++ b/README, +=====================================, +Requires JDK 1.5 or higher., +File a bug or feature request here:, +  http://code.google.com/p/guava-libraries/issues/entry, +Ask "how-to" and "why-didn't-it-work" questions at:, +  http://www.stackoverflow.com/questions/ask (use the "guava" tag), +, +For open-ended questions and discussion:, +IMPORTANT WARNINGS, +------------------, +1. APIs marked with the @Beta annotation at the class or method level, +are subject to change. They can be modified in any way, or even, +removed, at any time. If your code is a library itself (i.e. it is, +used on the CLASSPATH of users outside your own control), you should, +not use beta APIs, unless you repackage them (e.g. using ProGuard)., +2. Deprecated non-beta APIs will be removed eighteen months after the, +release in which they are first deprecated. You must fix your, +references before this time. If you don't, any manner of breakage, +could result (you are not guaranteed a compilation error)., +, +3. Serialized forms of ALL objects are subject to change. Do not, +persist these and assume they can be read by a future version of the, +library., +++ b/README, +=====================================, +Requires JDK 1.5 or higher., +File a bug or feature request here:, +  http://code.google.com/p/guava-libraries/issues/entry, +Ask "how-to" and "why-didn't-it-work" questions at:, +  http://www.stackoverflow.com/questions/ask (use the "guava" tag), +, +For open-ended questions and discussion:, +IMPORTANT WARNINGS, +------------------, +1. APIs marked with the @Beta annotation at the class or method level, +are subject to change. They can be modified in any way, or even, +removed, at any time. If your code is a library itself (i.e. it is, +used on the CLASSPATH of users outside your own control), you should, +not use beta APIs, unless you repackage them (e.g. using ProGuard)., +2. Deprecated non-beta APIs will be removed eighteen months after the, +release in which they are first deprecated. You must fix your, +references before this time. If you don't, any manner of breakage, +could result (you are not guaranteed a compilation error)., +, +3. Serialized forms of ALL objects are subject to change. Do not, +persist these and assume they can be read by a future version of the, +library., +++ b/build.xml, +<!--, +  Currently, guava source files are required to be UTF-8 encoded, but, +  non-ASCII characters are permitted only in comments, so that they, +  can also be built by tools that use the historic -encoding=ISO-8859-1, +  (which works only because *any* byte sequence is valid ISO-8859-1.), +  Hopefully the comment restriction will be lifted in a future release., +-->, +, +         encoding="UTF-8", +      <compilerarg value="-XDignore.symbol.file"/>, +         additionalparam="-XDignore.symbol.file", +      <link href="http://download.oracle.com/javase/6/docs/api"/>, +         additionalparam="-XDignore.symbol.file -apiname 'Guava ${release}' -apidir build/javadoc/jdiff", +         destdir="build/javadoc/jdiff", +         encoding="UTF-8">, +           destdir="build/gwt-classes", +           encoding="UTF-8">, +      <link href="http://download.oracle.com/javase/6/docs/api"/>, +           destdir="build/gwt-test-classes", +           encoding="UTF-8">, +++ b/README, +=====================================, +Requires JDK 1.5 or higher., +File a bug or feature request here:, +  http://code.google.com/p/guava-libraries/issues/entry, +Ask "how-to" and "why-didn't-it-work" questions at:, +  http://www.stackoverflow.com/questions/ask (use the "guava" tag), +, +For open-ended questions and discussion:, +IMPORTANT WARNINGS, +------------------, +1. APIs marked with the @Beta annotation at the class or method level, +are subject to change. They can be modified in any way, or even, +removed, at any time. If your code is a library itself (i.e. it is, +used on the CLASSPATH of users outside your own control), you should, +not use beta APIs, unless you repackage them (e.g. using ProGuard)., +2. Deprecated non-beta APIs will be removed eighteen months after the, +release in which they are first deprecated. You must fix your, +references before this time. If you don't, any manner of breakage, +could result (you are not guaranteed a compilation error)., +, +3. Serialized forms of ALL objects are subject to change. Do not, +persist these and assume they can be read by a future version of the, +library., +++ b/build.xml, +<!--, +  Currently, guava source files are required to be UTF-8 encoded, but, +  non-ASCII characters are permitted only in comments, so that they, +  can also be built by tools that use the historic -encoding=ISO-8859-1, +  (which works only because *any* byte sequence is valid ISO-8859-1.), +  Hopefully the comment restriction will be lifted in a future release.]