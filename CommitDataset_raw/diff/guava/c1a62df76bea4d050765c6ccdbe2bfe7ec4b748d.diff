[+++ b/guava-tests/test/com/google/common/io/ByteStreamsTest.java, +  public void testCopySuppliersExceptions() {, +    TestLogHandler logHandler = new TestLogHandler();, +    Closeables.logger.addHandler(logHandler);, +    try {, +      for (InputSupplier<InputStream> in : BROKEN_INPUTS) {, +        runFailureTest(in, newByteArrayOutputStreamSupplier());, +        assertTrue(logHandler.getStoredLogRecords().isEmpty());, +, +        runFailureTest(in, BROKEN_CLOSE_OUTPUT);, +        assertEquals((in == BROKEN_GET_INPUT) ? 0 : 1, getAndResetRecords(logHandler));, +      }, +, +      for (OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {, +        runFailureTest(newInputStreamSupplier(new byte[10]), out);, +        assertTrue(logHandler.getStoredLogRecords().isEmpty());, +, +        runFailureTest(BROKEN_CLOSE_INPUT, out);, +        assertEquals(1, getAndResetRecords(logHandler));, +      }, +, +      for (InputSupplier<InputStream> in : BROKEN_INPUTS) {, +        for (OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {, +          runFailureTest(in, out);, +          assertTrue(getAndResetRecords(logHandler) <= 1);, +        }, +      }, +    } finally {, +      Closeables.logger.removeHandler(logHandler);, +    }, +  }, +, +++ b/guava-tests/test/com/google/common/io/ByteStreamsTest.java, +  public void testCopySuppliersExceptions() {, +    TestLogHandler logHandler = new TestLogHandler();, +    Closeables.logger.addHandler(logHandler);, +    try {, +      for (InputSupplier<InputStream> in : BROKEN_INPUTS) {, +        runFailureTest(in, newByteArrayOutputStreamSupplier());, +        assertTrue(logHandler.getStoredLogRecords().isEmpty());, +, +        runFailureTest(in, BROKEN_CLOSE_OUTPUT);, +        assertEquals((in == BROKEN_GET_INPUT) ? 0 : 1, getAndResetRecords(logHandler));, +      }, +, +      for (OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {, +        runFailureTest(newInputStreamSupplier(new byte[10]), out);, +        assertTrue(logHandler.getStoredLogRecords().isEmpty());, +, +        runFailureTest(BROKEN_CLOSE_INPUT, out);, +        assertEquals(1, getAndResetRecords(logHandler));, +      }, +, +      for (InputSupplier<InputStream> in : BROKEN_INPUTS) {, +        for (OutputSupplier<OutputStream> out : BROKEN_OUTPUTS) {, +          runFailureTest(in, out);, +          assertTrue(getAndResetRecords(logHandler) <= 1);, +        }, +      }, +    } finally {, +      Closeables.logger.removeHandler(logHandler);, +    }, +  }, +, +++ b/guava-tests/test/com/google/common/io/CharStreamsTest.java, +  }, +, +  public void testCopySuppliersExceptions() {, +    TestLogHandler logHandler = new TestLogHandler();, +    Closeables.logger.addHandler(logHandler);, +    try {, +      for (InputSupplier<? extends Reader> in : BROKEN_INPUTS) {, +        runFailureTest(in, newStringWriterSupplier());, +        assertTrue(logHandler.getStoredLogRecords().isEmpty());, +, +        runFailureTest(in, BROKEN_CLOSE_OUTPUT);, +        assertEquals((in == BROKEN_GET_INPUT) ? 0 : 1, getAndResetRecords(logHandler));, +      }, +, +      for (OutputSupplier<? extends Writer> out : BROKEN_OUTPUTS) {, +        runFailureTest(newReaderSupplier("ABC"), out);, +        assertTrue(logHandler.getStoredLogRecords().isEmpty());, +, +        runFailureTest(BROKEN_CLOSE_INPUT, out);, +        assertEquals(1, getAndResetRecords(logHandler));, +      }, +, +      for (InputSupplier<? extends Reader> in : BROKEN_INPUTS) {, +        for (OutputSupplier<? extends Writer> out : BROKEN_OUTPUTS) {, +          runFailureTest(in, out);, +          assertTrue(getAndResetRecords(logHandler) <= 1);, +        }, +      }, +    } finally {, +      Closeables.logger.removeHandler(logHandler);, +    }]