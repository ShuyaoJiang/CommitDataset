[+++ b/guava-testlib/src/com/google/common/testing/GcFinalization.java, + *   x = null;  // Hint to the JIT that x is stack-unreachable, + * <p>Even if your non-test code does not use finalization, you can, + * use this class to test for leaks, by ensuring that objects are no, + * longer strongly referenced:, + *, + * <pre> {@code, + * // Helper function keeps victim stack-unreachable., + * private WeakReference<Foo> fooWeakRef() {, + *   Foo x = ....;, + *   WeakReference<Foo> weakRef = new WeakReference<Foo>(x);, + *   // ... use x ..., + *   x = null;  // Hint to the JIT that x is stack-unreachable, + *   return weakRef;, + * }, + * public void testFooLeak() {, + *   GcFinalization.awaitClear(fooWeakRef());, + * }</pre>, + *]