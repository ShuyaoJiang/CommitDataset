[+++ b/guava-tests/test/com/google/common/collect/RangeTest.java, +    assertEquals("(4..8)", range.toString());, +    assertEquals("[5..7]", range.toString());, +    assertEquals("(4..7]", range.toString());, +    assertEquals("[5..8)", range.toString());, +    assertEquals("[4..4]", range.toString());, +    assertEquals("[4..4)", range.toString());, +    assertEquals("(4..4]", range.toString());, +    assertEquals("(-\u221e..5)", range.toString());, +    assertEquals("(5..+\u221e)", range.toString());, +    assertEquals("[6..+\u221e)", range.toString());, +    assertEquals("(-\u221e..4]", range.toString());, +    assertEquals("(-\u221e..+\u221e)", range.toString());, +++ b/guava-tests/test/com/google/common/collect/RangeTest.java, +    assertEquals("(4..8)", range.toString());, +    assertEquals("[5..7]", range.toString());, +    assertEquals("(4..7]", range.toString());, +    assertEquals("[5..8)", range.toString());, +    assertEquals("[4..4]", range.toString());, +    assertEquals("[4..4)", range.toString());, +    assertEquals("(4..4]", range.toString());, +    assertEquals("(-\u221e..5)", range.toString());, +    assertEquals("(5..+\u221e)", range.toString());, +    assertEquals("[6..+\u221e)", range.toString());, +    assertEquals("(-\u221e..4]", range.toString());, +    assertEquals("(-\u221e..+\u221e)", range.toString());, +++ b/guava/src/com/google/common/collect/Range.java, +    sb.append("..");, +++ b/guava-tests/test/com/google/common/collect/RangeTest.java, +    assertEquals("(4..8)", range.toString());, +    assertEquals("[5..7]", range.toString());, +    assertEquals("(4..7]", range.toString());, +    assertEquals("[5..8)", range.toString());, +    assertEquals("[4..4]", range.toString());, +    assertEquals("[4..4)", range.toString());, +    assertEquals("(4..4]", range.toString());, +    assertEquals("(-\u221e..5)", range.toString());, +    assertEquals("(5..+\u221e)", range.toString());, +    assertEquals("[6..+\u221e)", range.toString());, +    assertEquals("(-\u221e..4]", range.toString());, +    assertEquals("(-\u221e..+\u221e)", range.toString());, +++ b/guava/src/com/google/common/collect/Range.java, +    sb.append("..");, +++ b/guava/src/com/google/common/collect/RangeMap.java, +   * {@code [1, 5] => "foo", (6, 8) => "bar", (10, ∞) => "baz"}, +++ b/guava-tests/test/com/google/common/collect/RangeTest.java, +    assertEquals("(4..8)", range.toString());, +    assertEquals("[5..7]", range.toString());, +    assertEquals("(4..7]", range.toString());, +    assertEquals("[5..8)", range.toString());, +    assertEquals("[4..4]", range.toString());, +    assertEquals("[4..4)", range.toString());, +    assertEquals("(4..4]", range.toString());, +    assertEquals("(-\u221e..5)", range.toString());, +    assertEquals("(5..+\u221e)", range.toString());, +    assertEquals("[6..+\u221e)", range.toString());, +    assertEquals("(-\u221e..4]", range.toString());, +    assertEquals("(-\u221e..+\u221e)", range.toString());, +++ b/guava/src/com/google/common/collect/Range.java, +    sb.append("..");, +++ b/guava/src/com/google/common/collect/RangeMap.java, +   * {@code [1, 5] => "foo", (6, 8) => "bar", (10, ∞) => "baz"}, +++ b/guava/src/com/google/common/collect/RangeSet.java, +   * this might return {@code " [1..3](4..+∞)}"}.]