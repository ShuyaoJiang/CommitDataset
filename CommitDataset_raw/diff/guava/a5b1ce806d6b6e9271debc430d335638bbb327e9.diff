[+++ b/guava/src/com/google/common/collect/Ordering.java, +import java.util.concurrent.ConcurrentMap;, +    private final AtomicInteger counter = new AtomicInteger(0);, +    private final ConcurrentMap<Object, Integer> uids =, +        Platform.tryWeakKeys(new MapMaker()).makeMap();, +    private Integer getUid(Object obj) {, +      Integer uid = uids.get(obj);, +      if (uid == null) {, +        // One or more integer values could be skipped in the event of a race, +        // to generate a UID for the same object from multiple threads, but, +        // that shouldn't be a problem., +        uid = counter.getAndIncrement();, +        Integer alreadySet = uids.putIfAbsent(obj, uid);, +        if (alreadySet != null) {, +          uid = alreadySet;, +      }, +      return uid;, +    }, +      int result = getUid(left).compareTo(getUid(right));]