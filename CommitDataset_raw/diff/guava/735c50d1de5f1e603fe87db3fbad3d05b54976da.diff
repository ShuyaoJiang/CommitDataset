[+++ b/guava/src/com/google/common/collect/SingletonImmutableSet.java, +  // This is transient because it will be recalculated on the first, +  // call to hashCode()., +  //, +  // A race condition is avoided since threads will either see that the value, +  // is zero and recalculate it themselves, or two threads will see it at, +  // the same time, and both recalculate it.  If the cachedHashCode is 0,, +  // it will always be recalculated, unfortunately., +  private transient int cachedHashCode;, +    // Racy single-check., +    int code = cachedHashCode;, +    if (code == 0) {, +      cachedHashCode = code = element.hashCode();, +    return cachedHashCode != 0;]