[+++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +import java.util.Arrays;, +            Arrays.copyOf(, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +import java.util.Arrays;, +            Arrays.copyOf(, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +          elements = Arrays.copyOf(elements, length);, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +import java.util.Arrays;, +            Arrays.copyOf(, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +          elements = Arrays.copyOf(elements, length);, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +            Arrays.copyOf(, +              entries = Arrays.copyOf(entries, size);, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +import java.util.Arrays;, +            Arrays.copyOf(, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +          elements = Arrays.copyOf(elements, length);, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +            Arrays.copyOf(, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +          (uniques < elements.length) ? Arrays.copyOf(elements, uniques) : elements;, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +import java.util.Arrays;, +            Arrays.copyOf(, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +          elements = Arrays.copyOf(elements, length);, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +            Arrays.copyOf(, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +          (uniques < elements.length) ? Arrays.copyOf(elements, uniques) : elements;, +++ b/guava/src/com/google/common/collect/ObjectArrays.java, +import java.util.Arrays;, +    T[] result = Arrays.copyOf(array, array.length + 1);, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +import java.util.Arrays;, +            Arrays.copyOf(, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +          elements = Arrays.copyOf(elements, length);, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +            Arrays.copyOf(, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableSet.java, +          (uniques < elements.length) ? Arrays.copyOf(elements, uniques) : elements;, +++ b/guava/src/com/google/common/collect/ObjectArrays.java, +import java.util.Arrays;, +    T[] result = Arrays.copyOf(array, array.length + 1);, +++ b/guava/src/com/google/common/collect/Ordering.java, +          array = Arrays.copyOf(array, k);, +++ b/guava-tests/test/com/google/common/collect/ObjectArraysTest.java, +    Integer[] starting = Arrays.copyOf(array1, array1.length);, +    Integer[] array2 = Arrays.copyOf(array1, array1.length);, +++ b/guava/src/com/google/common/collect/ImmutableBiMap.java, +              entries = Arrays.copyOf(entries, size);, +++ b/guava/src/com/google/common/collect/ImmutableCollection.java, +import java.util.Arrays;, +            Arrays.copyOf(]