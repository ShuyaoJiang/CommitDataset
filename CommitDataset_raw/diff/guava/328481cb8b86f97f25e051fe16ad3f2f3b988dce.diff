[+++ b/android/guava-testlib/src/com/google/common/collect/testing/AbstractMapTester.java, +    extends AbstractContainerTester<Map<K, V>, Entry<K, V>> {, +  protected Collection<Entry<K, V>> actualContents() {, +  protected Entry<K, V>[] createArrayWithNullKey() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullKeyLocation];, +  protected Entry<K, V>[] createArrayWithNullValue() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullValueLocation];, +  protected MinimalCollection<Entry<K, V>> createDisjointCollection() {, +  protected Collection<Entry<K, V>> getSampleEntries(int howMany) {, +  protected Collection<Entry<K, V>> getSampleEntries() {, +++ b/android/guava-testlib/src/com/google/common/collect/testing/AbstractMapTester.java, +    extends AbstractContainerTester<Map<K, V>, Entry<K, V>> {, +  protected Collection<Entry<K, V>> actualContents() {, +  protected Entry<K, V>[] createArrayWithNullKey() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullKeyLocation];, +  protected Entry<K, V>[] createArrayWithNullValue() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullValueLocation];, +  protected MinimalCollection<Entry<K, V>> createDisjointCollection() {, +  protected Collection<Entry<K, V>> getSampleEntries(int howMany) {, +  protected Collection<Entry<K, V>> getSampleEntries() {, +++ b/android/guava-testlib/src/com/google/common/collect/testing/DerivedCollectionGenerators.java, +      implements TestSetGenerator<Entry<K, V>>, DerivedGenerator {, +    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;, +        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +    public SampleElements<Entry<K, V>> samples() {, +    public Set<Entry<K, V>> create(Object... elements) {, +    public Entry<K, V>[] createArray(int length) {, +    public Iterable<Entry<K, V>> order(List<Entry<K, V>> insertionOrder) {, +    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {, +      OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;, +        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +      final SampleElements<Entry<K, V>> mapSamples = this.mapGenerator.samples();, +      Collection<Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);, +      Collection<Entry<K, V>> entries = new ArrayList<>(elements.length);, +      for (Entry<K, V> entry : originalEntries) {, +    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {, +    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;, +        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +      final SampleElements<Entry<K, V>> mapSamples = this.mapGenerator.samples();, +      Collection<Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);, +      Collection<Entry<K, V>> entries = new ArrayList<>(elements.length);, +      for (Entry<K, V> entry : originalEntries) {, +    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {, +++ b/android/guava-testlib/src/com/google/common/collect/testing/AbstractMapTester.java, +    extends AbstractContainerTester<Map<K, V>, Entry<K, V>> {, +  protected Collection<Entry<K, V>> actualContents() {, +  protected Entry<K, V>[] createArrayWithNullKey() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullKeyLocation];, +  protected Entry<K, V>[] createArrayWithNullValue() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullValueLocation];, +  protected MinimalCollection<Entry<K, V>> createDisjointCollection() {, +  protected Collection<Entry<K, V>> getSampleEntries(int howMany) {, +  protected Collection<Entry<K, V>> getSampleEntries() {, +++ b/android/guava-testlib/src/com/google/common/collect/testing/DerivedCollectionGenerators.java, +      implements TestSetGenerator<Entry<K, V>>, DerivedGenerator {, +    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;, +        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +    public SampleElements<Entry<K, V>> samples() {, +    public Set<Entry<K, V>> create(Object... elements) {, +    public Entry<K, V>[] createArray(int length) {, +    public Iterable<Entry<K, V>> order(List<Entry<K, V>> insertionOrder) {, +    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {, +      OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;, +        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +      final SampleElements<Entry<K, V>> mapSamples = this.mapGenerator.samples();, +      Collection<Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);, +      Collection<Entry<K, V>> entries = new ArrayList<>(elements.length);, +      for (Entry<K, V> entry : originalEntries) {, +    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {, +    private final OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator;, +        OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> mapGenerator) {, +      final SampleElements<Entry<K, V>> mapSamples = this.mapGenerator.samples();, +      Collection<Entry<K, V>> originalEntries = mapGenerator.getSampleElements(elements.length);, +      Collection<Entry<K, V>> entries = new ArrayList<>(elements.length);, +      for (Entry<K, V> entry : originalEntries) {, +    public OneSizeTestContainerGenerator<Map<K, V>, Entry<K, V>> getInnerGenerator() {, +++ b/android/guava-testlib/src/com/google/common/collect/testing/Helpers.java, +  public static <K, V> Entry<K, V> nefariousMapEntry(final K key, final V value) {, +    return new Entry<K, V>() {, +        if (o instanceof Entry) {, +          Entry<K, V> e = (Entry<K, V>) o;, +++ b/android/guava-testlib/src/com/google/common/collect/testing/AbstractMapTester.java, +    extends AbstractContainerTester<Map<K, V>, Entry<K, V>> {, +  protected Collection<Entry<K, V>> actualContents() {, +  protected Entry<K, V>[] createArrayWithNullKey() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullKeyLocation];, +  protected Entry<K, V>[] createArrayWithNullValue() {, +    Entry<K, V>[] array = createSamplesArray();, +    final Entry<K, V> oldEntry = array[nullValueLocation];, +  protected MinimalCollection<Entry<K, V>> createDisjointCollection() {, +  protected Collection<Entry<K, V>> getSampleEntries(int howMany) {]