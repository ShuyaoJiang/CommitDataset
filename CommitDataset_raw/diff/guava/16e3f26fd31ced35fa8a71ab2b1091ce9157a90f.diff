[+++ b/guava-gwt/test/com/google/common/primitives/BooleansTest_gwt.java, +public void testFalseFirst() throws Exception {, +  com.google.common.primitives.BooleansTest testCase = new com.google.common.primitives.BooleansTest();, +  testCase.testFalseFirst();, +}, +, +, +public void testTrueFirst() throws Exception {, +  com.google.common.primitives.BooleansTest testCase = new com.google.common.primitives.BooleansTest();, +  testCase.testTrueFirst();, +}, +++ b/guava-gwt/test/com/google/common/primitives/BooleansTest_gwt.java, +public void testFalseFirst() throws Exception {, +  com.google.common.primitives.BooleansTest testCase = new com.google.common.primitives.BooleansTest();, +  testCase.testFalseFirst();, +}, +, +, +public void testTrueFirst() throws Exception {, +  com.google.common.primitives.BooleansTest testCase = new com.google.common.primitives.BooleansTest();, +  testCase.testTrueFirst();, +}, +++ b/guava-tests/test/com/google/common/primitives/BooleansTest.java, +  public void testTrueFirst() {, +    assertEquals(0, Booleans.trueFirst().compare(true, true));, +    assertEquals(0, Booleans.trueFirst().compare(false, false));, +    assertTrue(Booleans.trueFirst().compare(true, false) < 0);, +    assertTrue(Booleans.trueFirst().compare(false, true) > 0);, +  }, +, +  public void testFalseFirst() {, +    assertEquals(0, Booleans.falseFirst().compare(true, true));, +    assertEquals(0, Booleans.falseFirst().compare(false, false));, +    assertTrue(Booleans.falseFirst().compare(false, true) < 0);, +    assertTrue(Booleans.falseFirst().compare(true, false) > 0);, +  }, +, +++ b/guava-gwt/test/com/google/common/primitives/BooleansTest_gwt.java, +public void testFalseFirst() throws Exception {, +  com.google.common.primitives.BooleansTest testCase = new com.google.common.primitives.BooleansTest();, +  testCase.testFalseFirst();, +}, +, +, +public void testTrueFirst() throws Exception {, +  com.google.common.primitives.BooleansTest testCase = new com.google.common.primitives.BooleansTest();, +  testCase.testTrueFirst();, +}, +++ b/guava-tests/test/com/google/common/primitives/BooleansTest.java, +  public void testTrueFirst() {, +    assertEquals(0, Booleans.trueFirst().compare(true, true));, +    assertEquals(0, Booleans.trueFirst().compare(false, false));, +    assertTrue(Booleans.trueFirst().compare(true, false) < 0);, +    assertTrue(Booleans.trueFirst().compare(false, true) > 0);, +  }, +, +  public void testFalseFirst() {, +    assertEquals(0, Booleans.falseFirst().compare(true, true));, +    assertEquals(0, Booleans.falseFirst().compare(false, false));, +    assertTrue(Booleans.falseFirst().compare(false, true) < 0);, +    assertTrue(Booleans.falseFirst().compare(true, false) > 0);, +  }, +, +++ b/guava/src/com/google/common/primitives/Booleans.java, +   * Comparators for {@code Boolean} values., +   */, +  private enum BooleanComparator implements Comparator<Boolean> {, +    TRUE_FIRST(1, "Booleans.trueFirst()"),, +    FALSE_FIRST(-1, "Booleans.falseFirst()");, +, +    private final int trueValue;, +    private final String toString;, +, +    BooleanComparator(int trueValue, String toString) {, +      this.trueValue = trueValue;, +      this.toString = toString;, +    }, +, +    @Override, +    public int compare(Boolean a, Boolean b) {, +      int aVal = a ? trueValue : 0;, +      int bVal = b ? trueValue : 0;, +      return bVal - aVal;, +    }, +, +    @Override, +    public String toString() {, +      return toString;, +    }, +  }, +, +  /**, +   * Returns a {@code Comparator<Boolean>} that sorts {@code true} before {@code false}., +   *, +   * <p>This is particularly useful in Java 8+ in combination with {@code Comparators.comparing},, +   * e.g. {@code Comparators.comparing(Foo::hasBar, trueFirst())}., +   *, +   * @since 21.0, +   */, +  @Beta]