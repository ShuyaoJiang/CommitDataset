[+++ b/guava-testlib/test/com/google/common/testing/NullPointerTesterTest.java, +  private static final class HardToCreate {, +    private HardToCreate(HardToCreate x) {}, +  }, +, +  @SuppressWarnings("unused") // used by reflection, +  private static class CanCreateDefault {, +    public void foo(@Nullable HardToCreate ignored, String required) {, +      checkNotNull(required);, +    }, +  }, +, +  public void testCanCreateDefault() {, +    shouldPass(new CanCreateDefault());, +  }, +, +  @SuppressWarnings("unused") // used by reflection, +  private static class CannotCreateDefault {, +    public void foo(HardToCreate ignored, String required) {, +      checkNotNull(ignored);, +      checkNotNull(required);, +    }, +  }, +, +  public void testCannotCreateDefault() {, +    shouldFail(new CannotCreateDefault());, +  }, +, +  // TODO(cpovirk): eliminate surprising Object/Class overloading of shouldFail, +, +  private static void shouldFail(Class<?> cls) {, +    shouldFail(cls, Visibility.PACKAGE);]