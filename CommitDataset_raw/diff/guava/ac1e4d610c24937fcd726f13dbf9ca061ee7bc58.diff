[+++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/HashBiMapTest.java, +  , +  public void testInverseEntrySetValue() {, +    BiMap<Integer, String> map = HashBiMap.create();, +    map.put(1, "one");, +    Entry<String, Integer> inverseEntry = Iterables.getOnlyElement(map.inverse().entrySet());, +    inverseEntry.setValue(2);, +    assertEquals(Integer.valueOf(2), inverseEntry.getValue());, +  }, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/HashBiMapTest.java, +  , +  public void testInverseEntrySetValue() {, +    BiMap<Integer, String> map = HashBiMap.create();, +    map.put(1, "one");, +    Entry<String, Integer> inverseEntry = Iterables.getOnlyElement(map.inverse().entrySet());, +    inverseEntry.setValue(2);, +    assertEquals(Integer.valueOf(2), inverseEntry.getValue());, +  }, +++ b/guava-gwt/test/com/google/common/collect/HashBiMapTest_gwt.java, +public void testInverseEntrySetValue() throws Exception {, +  com.google.common.collect.HashBiMapTest testCase = new com.google.common.collect.HashBiMapTest();, +  testCase.testInverseEntrySetValue();, +}, +, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/HashBiMapTest.java, +  , +  public void testInverseEntrySetValue() {, +    BiMap<Integer, String> map = HashBiMap.create();, +    map.put(1, "one");, +    Entry<String, Integer> inverseEntry = Iterables.getOnlyElement(map.inverse().entrySet());, +    inverseEntry.setValue(2);, +    assertEquals(Integer.valueOf(2), inverseEntry.getValue());, +  }, +++ b/guava-gwt/test/com/google/common/collect/HashBiMapTest_gwt.java, +public void testInverseEntrySetValue() throws Exception {, +  com.google.common.collect.HashBiMapTest testCase = new com.google.common.collect.HashBiMapTest();, +  testCase.testInverseEntrySetValue();, +}, +, +++ b/guava-tests/test/com/google/common/collect/HashBiMapTest.java, +, +  public void testInverseEntrySetValue() {, +    BiMap<Integer, String> map = HashBiMap.create();, +    map.put(1, "one");, +    Entry<String, Integer> inverseEntry = Iterables.getOnlyElement(map.inverse().entrySet());, +    inverseEntry.setValue(2);, +    assertEquals(Integer.valueOf(2), inverseEntry.getValue());, +  }, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/HashBiMapTest.java, +  , +  public void testInverseEntrySetValue() {, +    BiMap<Integer, String> map = HashBiMap.create();, +    map.put(1, "one");, +    Entry<String, Integer> inverseEntry = Iterables.getOnlyElement(map.inverse().entrySet());, +    inverseEntry.setValue(2);, +    assertEquals(Integer.valueOf(2), inverseEntry.getValue());, +  }, +++ b/guava-gwt/test/com/google/common/collect/HashBiMapTest_gwt.java, +public void testInverseEntrySetValue() throws Exception {, +  com.google.common.collect.HashBiMapTest testCase = new com.google.common.collect.HashBiMapTest();, +  testCase.testInverseEntrySetValue();, +}, +, +++ b/guava-tests/test/com/google/common/collect/HashBiMapTest.java, +, +  public void testInverseEntrySetValue() {, +    BiMap<Integer, String> map = HashBiMap.create();, +    map.put(1, "one");, +    Entry<String, Integer> inverseEntry = Iterables.getOnlyElement(map.inverse().entrySet());, +    inverseEntry.setValue(2);, +    assertEquals(Integer.valueOf(2), inverseEntry.getValue());, +  }, +++ b/guava/src/com/google/common/collect/HashBiMap.java, +                delegate = newEntry;]