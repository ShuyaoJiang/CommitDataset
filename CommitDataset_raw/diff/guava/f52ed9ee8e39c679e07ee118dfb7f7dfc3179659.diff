[+++ b/guava/src/com/google/common/net/InetAddresses.java, +    String[] address = ipString.split("\\.", IPV4_PART_COUNT + 1);, +        bytes[i] = parseOctet(address[i]);, +          rawBytes.putShort(2 * i, parseHextet(parts[i]));, +            rawBytes.putShort(bytesIndex, parseHextet(parts[partsIndex]));, +  private static byte parseOctet(String ipPart) {, +    int octet = Integer.parseInt(ipPart);, +    // Disallow negatives (including -0), and values that don't fit in 8 bits., +    // Also disallow leading zeroes, because no clear standard exists on, +    // whether these should be interpreted as decimal or octal., +    if (ipPart.startsWith("-") || octet > 255 ||, +        (ipPart.startsWith("0") && ipPart.length() > 1)) {, +      throw new NumberFormatException();, +    }, +    return (byte) octet;, +  }, +, +  private static short parseHextet(String ipPart) {, +    int hextet = Integer.parseInt(ipPart, 16);, +    // Disallow negatives (including -0), and values that don't fit in 16 bits., +    if (ipPart.startsWith("-") || hextet > 0xffff) {, +      throw new NumberFormatException();, +    }, +    return (short) hextet;, +  }, +]