[+++ b/android/guava-tests/test/com/google/common/collect/IteratorsTest.java, +  public void testConcatPartiallyAdvanced() {, +    Iterator<String> itr1 = Iterators.concat(Iterators.singletonIterator("a"), Iterators.forArray("b", "c"));, +    assertEquals("a", itr1.next());, +    assertEquals("b", itr1.next());, +    Iterator<String> itr2 = Iterators.concat(Iterators.singletonIterator("d"), itr1);, +    assertEquals("d", itr2.next());, +    assertEquals("c", itr2.next());, +  }, +, +++ b/android/guava-tests/test/com/google/common/collect/IteratorsTest.java, +  public void testConcatPartiallyAdvanced() {, +    Iterator<String> itr1 = Iterators.concat(Iterators.singletonIterator("a"), Iterators.forArray("b", "c"));, +    assertEquals("a", itr1.next());, +    assertEquals("b", itr1.next());, +    Iterator<String> itr2 = Iterators.concat(Iterators.singletonIterator("d"), itr1);, +    assertEquals("d", itr2.next());, +    assertEquals("c", itr2.next());, +  }, +, +++ b/android/guava/src/com/google/common/collect/Iterators.java, +            if (!concatIterator.current.hasNext()) {, +          return Iterators.singletonIterator(iterator);, +        }, +++ b/android/guava-tests/test/com/google/common/collect/IteratorsTest.java, +  public void testConcatPartiallyAdvanced() {, +    Iterator<String> itr1 = Iterators.concat(Iterators.singletonIterator("a"), Iterators.forArray("b", "c"));, +    assertEquals("a", itr1.next());, +    assertEquals("b", itr1.next());, +    Iterator<String> itr2 = Iterators.concat(Iterators.singletonIterator("d"), itr1);, +    assertEquals("d", itr2.next());, +    assertEquals("c", itr2.next());, +  }, +, +++ b/android/guava/src/com/google/common/collect/Iterators.java, +            if (!concatIterator.current.hasNext()) {, +          return Iterators.singletonIterator(iterator);, +        }, +++ b/android/guava/src/com/google/common/collect/MultitransformedIterator.java, +  Iterator<? extends T> current = Iterators.emptyIterator();, +++ b/android/guava-tests/test/com/google/common/collect/IteratorsTest.java, +  public void testConcatPartiallyAdvanced() {, +    Iterator<String> itr1 = Iterators.concat(Iterators.singletonIterator("a"), Iterators.forArray("b", "c"));, +    assertEquals("a", itr1.next());, +    assertEquals("b", itr1.next());, +    Iterator<String> itr2 = Iterators.concat(Iterators.singletonIterator("d"), itr1);, +    assertEquals("d", itr2.next());, +    assertEquals("c", itr2.next());, +  }, +, +++ b/android/guava/src/com/google/common/collect/Iterators.java, +            if (!concatIterator.current.hasNext()) {, +          return Iterators.singletonIterator(iterator);, +        }, +++ b/android/guava/src/com/google/common/collect/MultitransformedIterator.java, +  Iterator<? extends T> current = Iterators.emptyIterator();, +++ b/guava-gwt/test/com/google/common/collect/IteratorsTest_gwt.java, +public void testConcatPartiallyAdvanced() throws Exception {, +  com.google.common.collect.IteratorsTest testCase = new com.google.common.collect.IteratorsTest();, +  testCase.testConcatPartiallyAdvanced();, +}, +, +++ b/android/guava-tests/test/com/google/common/collect/IteratorsTest.java, +  public void testConcatPartiallyAdvanced() {, +    Iterator<String> itr1 = Iterators.concat(Iterators.singletonIterator("a"), Iterators.forArray("b", "c"));, +    assertEquals("a", itr1.next());, +    assertEquals("b", itr1.next());, +    Iterator<String> itr2 = Iterators.concat(Iterators.singletonIterator("d"), itr1);, +    assertEquals("d", itr2.next());, +    assertEquals("c", itr2.next());, +  }, +, +++ b/android/guava/src/com/google/common/collect/Iterators.java, +            if (!concatIterator.current.hasNext()) {, +          return Iterators.singletonIterator(iterator);, +        }, +++ b/android/guava/src/com/google/common/collect/MultitransformedIterator.java, +  Iterator<? extends T> current = Iterators.emptyIterator();, +++ b/guava-gwt/test/com/google/common/collect/IteratorsTest_gwt.java, +public void testConcatPartiallyAdvanced() throws Exception {, +  com.google.common.collect.IteratorsTest testCase = new com.google.common.collect.IteratorsTest();, +  testCase.testConcatPartiallyAdvanced();, +}, +, +++ b/guava-tests/test/com/google/common/collect/IteratorsTest.java, +  public void testConcatPartiallyAdvanced() {, +    Iterator<String> itr1 = Iterators.concat(Iterators.singletonIterator("a"), Iterators.forArray("b", "c"));, +    assertEquals("a", itr1.next());, +    assertEquals("b", itr1.next());, +    Iterator<String> itr2 = Iterators.concat(Iterators.singletonIterator("d"), itr1);, +    assertEquals("d", itr2.next());, +    assertEquals("c", itr2.next());, +  }, +, +++ b/android/guava-tests/test/com/google/common/collect/IteratorsTest.java, +  public void testConcatPartiallyAdvanced() {, +    Iterator<String> itr1 = Iterators.concat(Iterators.singletonIterator("a"), Iterators.forArray("b", "c"));, +    assertEquals("a", itr1.next());, +    assertEquals("b", itr1.next());, +    Iterator<String> itr2 = Iterators.concat(Iterators.singletonIterator("d"), itr1);]