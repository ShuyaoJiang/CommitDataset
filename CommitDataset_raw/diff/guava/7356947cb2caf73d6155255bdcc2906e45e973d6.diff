[+++ b/guava/src/com/google/common/io/Files.java, + * Provides utility methods for working with {@linkplain File files}., + * <p>{@link java.nio.file.Path} users will find similar utilities in {@link MoreFiles} and the, + * JDK's {@link java.nio.file.Files} class., +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#newBufferedReader(java.nio.file.Path, Charset)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#newBufferedWriter(java.nio.file.Path, Charset,, +   * java.nio.file.OpenOption...)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link java.nio.file.Files#readAllBytes}., +   *, +   * @deprecated Prefer {@code asCharSource(file, charset).read()}. This method is scheduled to be, +   *     removed in January 2019., +  @Deprecated, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#write(java.nio.file.Path, byte[], java.nio.file.OpenOption...)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#copy(java.nio.file.Path, OutputStream)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)}., +   *, +   * @deprecated Prefer {@code asCharSink(to, charset).write(from)}. This method is scheduled to be, +   *     removed in January 2019., +  @Deprecated, +   * @deprecated Prefer {@code asCharSink(to, charset, FileWriteMode.APPEND).write(from)}. This, +   *     method is scheduled to be removed in January 2019., +  @Deprecated, +    asCharSink(to, charset, FileWriteMode.APPEND).write(from);, +   * @deprecated Prefer {@code asCharSource(from, charset).copyTo(to)}. This method is scheduled to, +   *     be removed in January 2019., +  @Deprecated, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#createTempDirectory}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link java.nio.file.Files#move}., +   *, +   * @deprecated Prefer {@code asCharSource(file, charset).readFirstLine()}. This method is, +   *     scheduled to be removed in January 2019., +  @Deprecated, +   * <p>This method returns a mutable {@code List}. For an {@code ImmutableList}, use {@code, +   * Files.asCharSource(file, charset).readLines()}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#readAllLines(java.nio.file.Path, Charset)}., +    return asCharSource(file, charset), +        .readLines(, +   * @deprecated Prefer {@code asCharSource(file, charset).readLines(callback)}. This method is, +   *     scheduled to be removed in January 2019., +  @Deprecated, +   * @deprecated Prefer {@code asByteSource(file).read(processor)}. This method is scheduled to be, +   *     removed in January 2019., +  @Deprecated, +   * @deprecated Prefer {@code asByteSource(file).hash(hashFunction)}. This method is scheduled to, +   *     be removed in January 2019., +  @Deprecated, +++ b/guava/src/com/google/common/io/Files.java, + * Provides utility methods for working with {@linkplain File files}., + * <p>{@link java.nio.file.Path} users will find similar utilities in {@link MoreFiles} and the, + * JDK's {@link java.nio.file.Files} class., +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#newBufferedReader(java.nio.file.Path, Charset)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#newBufferedWriter(java.nio.file.Path, Charset,, +   * java.nio.file.OpenOption...)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link java.nio.file.Files#readAllBytes}., +   *, +   * @deprecated Prefer {@code asCharSource(file, charset).read()}. This method is scheduled to be, +   *     removed in January 2019., +  @Deprecated, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#write(java.nio.file.Path, byte[], java.nio.file.OpenOption...)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#copy(java.nio.file.Path, OutputStream)}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)}., +   *, +   * @deprecated Prefer {@code asCharSink(to, charset).write(from)}. This method is scheduled to be, +   *     removed in January 2019., +  @Deprecated, +   * @deprecated Prefer {@code asCharSink(to, charset, FileWriteMode.APPEND).write(from)}. This, +   *     method is scheduled to be removed in January 2019., +  @Deprecated, +    asCharSink(to, charset, FileWriteMode.APPEND).write(from);, +   * @deprecated Prefer {@code asCharSource(from, charset).copyTo(to)}. This method is scheduled to, +   *     be removed in January 2019., +  @Deprecated, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link, +   * java.nio.file.Files#createTempDirectory}., +   *, +   * <p><b>{@link java.nio.file.Path} equivalent:</b> {@link java.nio.file.Files#move}., +   *, +   * @deprecated Prefer {@code asCharSource(file, charset).readFirstLine()}. This method is]