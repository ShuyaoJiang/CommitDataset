[+++ b/src/com/google/common/util/concurrent/ForwardingService.java, +import com.google.common.base.Throwables;, +import java.util.concurrent.ExecutionException;, +, +  /**, +   * A sensible default implementation of {@link #startAndWait()}, in terms of, +   * {@link #start}. If you override {@link #start}, you may wish to override, +   * {@link #startAndWait()} to forward to this implementation., +   */, +  protected State standardStartAndWait() {, +    try {, +      return Futures.makeUninterruptible(start()).get();, +    } catch (ExecutionException e) {, +      throw Throwables.propagate(e.getCause());, +    }, +  }, +, +  /**, +   * A sensible default implementation of {@link #stopAndWait()}, in terms of, +   * {@link #stop}. If you override {@link #stop}, you may wish to override, +   * {@link #stopAndWait()} to forward to this implementation., +   */, +  protected State standardStopAndWait() {, +    try {, +      return Futures.makeUninterruptible(stop()).get();, +    } catch (ExecutionException e) {, +      throw Throwables.propagate(e.getCause());, +    }, +  }]