[+++ b/guava-tests/test/com/google/common/base/EquivalencesTest.java, +import com.google.common.annotations.GwtIncompatible;, +import com.google.common.testing.SerializableTester;, +@GwtCompatible(emulated = true), +, +  @GwtIncompatible("SerializableTester"), +  public void testSerialization() {, +    SerializableTester.reserializeAndAssert(Equivalences.equals());, +    SerializableTester.reserializeAndAssert(Equivalences.identity());, +  }, +++ b/guava-tests/test/com/google/common/base/EquivalencesTest.java, +import com.google.common.annotations.GwtIncompatible;, +import com.google.common.testing.SerializableTester;, +@GwtCompatible(emulated = true), +, +  @GwtIncompatible("SerializableTester"), +  public void testSerialization() {, +    SerializableTester.reserializeAndAssert(Equivalences.equals());, +    SerializableTester.reserializeAndAssert(Equivalences.identity());, +  }, +++ b/guava/src/com/google/common/base/Enums.java, +import java.io.Serializable;, +, +import javax.annotation.Nullable;, +, +      Function<String, T>, Serializable {, +, +    @Override public boolean equals(@Nullable Object obj) {, +      return obj instanceof ValueOfFunction &&, +          enumClass.equals(((ValueOfFunction) obj).enumClass);, +    }, +, +    @Override public int hashCode() {, +      return enumClass.hashCode();, +    }, +, +    @Override public String toString() {, +      return "Enums.valueOf(" + enumClass + ")";, +    }, +, +    private static final long serialVersionUID = 0;, +++ b/guava-tests/test/com/google/common/base/EquivalencesTest.java, +import com.google.common.annotations.GwtIncompatible;, +import com.google.common.testing.SerializableTester;, +@GwtCompatible(emulated = true), +, +  @GwtIncompatible("SerializableTester"), +  public void testSerialization() {, +    SerializableTester.reserializeAndAssert(Equivalences.equals());, +    SerializableTester.reserializeAndAssert(Equivalences.identity());, +  }, +++ b/guava/src/com/google/common/base/Enums.java, +import java.io.Serializable;, +, +import javax.annotation.Nullable;, +, +      Function<String, T>, Serializable {, +, +    @Override public boolean equals(@Nullable Object obj) {, +      return obj instanceof ValueOfFunction &&, +          enumClass.equals(((ValueOfFunction) obj).enumClass);, +    }, +, +    @Override public int hashCode() {, +      return enumClass.hashCode();, +    }, +, +    @Override public String toString() {, +      return "Enums.valueOf(" + enumClass + ")";, +    }, +, +    private static final long serialVersionUID = 0;, +++ b/guava/src/com/google/common/base/Equivalence.java, +  public static final class Wrapper<T> implements Serializable {, +, +    private static final long serialVersionUID = 0;, +++ b/guava-tests/test/com/google/common/base/EquivalencesTest.java, +import com.google.common.annotations.GwtIncompatible;, +import com.google.common.testing.SerializableTester;, +@GwtCompatible(emulated = true), +, +  @GwtIncompatible("SerializableTester"), +  public void testSerialization() {, +    SerializableTester.reserializeAndAssert(Equivalences.equals());, +    SerializableTester.reserializeAndAssert(Equivalences.identity());, +  }, +++ b/guava/src/com/google/common/base/Enums.java, +import java.io.Serializable;, +, +import javax.annotation.Nullable;, +, +      Function<String, T>, Serializable {, +, +    @Override public boolean equals(@Nullable Object obj) {, +      return obj instanceof ValueOfFunction &&, +          enumClass.equals(((ValueOfFunction) obj).enumClass);, +    }, +, +    @Override public int hashCode() {, +      return enumClass.hashCode();]