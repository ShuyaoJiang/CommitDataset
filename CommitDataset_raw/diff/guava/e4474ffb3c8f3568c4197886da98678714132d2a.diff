[+++ b/android/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +   * Tag interface marking trusted subclasses. This enables some optimizations., +   * The implementation of this interface must also be an AbstractureFuture and, +   * must not override or expose for overriding all the public methods of ListenableFuture., +   * */, +  interface Trusted<V> extends ListenableFuture<V> {}, +, +  /**, +  abstract static class TrustedFuture<V> extends AbstractFuture<V> implements Trusted<V> {, +            if (futureToPropagateTo instanceof Trusted) {, +    if (future instanceof Trusted) {, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +   * Tag interface marking trusted subclasses. This enables some optimizations., +   * The implementation of this interface must also be an AbstractureFuture and, +   * must not override or expose for overriding all the public methods of ListenableFuture., +   * */, +  interface Trusted<V> extends ListenableFuture<V> {}, +, +  /**, +  abstract static class TrustedFuture<V> extends AbstractFuture<V> implements Trusted<V> {, +            if (futureToPropagateTo instanceof Trusted) {, +    if (future instanceof Trusted) {, +++ b/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +   * Tag interface marking trusted subclasses. This enables some optimizations., +   * The implementation of this interface must also be an AbstractureFuture and, +   * must not override or expose for overriding all the public methods of ListenableFuture., +   * */, +  interface Trusted<V> extends ListenableFuture<V> {}, +, +  /**, +  abstract static class TrustedFuture<V> extends AbstractFuture<V> implements Trusted<V> {, +            if (futureToPropagateTo instanceof Trusted) {, +    if (future instanceof Trusted) {]