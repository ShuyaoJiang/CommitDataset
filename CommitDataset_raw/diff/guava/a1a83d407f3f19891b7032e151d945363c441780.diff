[+++ b/guava-tests/test/com/google/common/collect/ComparatorsTest.java, +import static java.util.Comparator.comparing;, +import java.util.Optional;, +, +  public void testEmptiesFirst() {, +    Optional<String> empty = Optional.empty();, +    Optional<String> abc = Optional.of("abc");, +    Optional<String> z = Optional.of("z");, +, +    Comparator<Optional<String>> comparator = Comparators.emptiesFirst(comparing(String::length));, +    Helpers.testComparator(comparator, empty, z, abc);, +  }, +++ b/guava-tests/test/com/google/common/collect/ComparatorsTest.java, +import static java.util.Comparator.comparing;, +import java.util.Optional;, +, +  public void testEmptiesFirst() {, +    Optional<String> empty = Optional.empty();, +    Optional<String> abc = Optional.of("abc");, +    Optional<String> z = Optional.of("z");, +, +    Comparator<Optional<String>> comparator = Comparators.emptiesFirst(comparing(String::length));, +    Helpers.testComparator(comparator, empty, z, abc);, +  }, +++ b/guava/src/com/google/common/collect/Comparators.java, +import java.util.Optional;, +, +  /**, +   * Returns a comparator of {@link Optional} values which treats {@link Optional#empty} as less, +   * than all other values, and orders the rest using {@code valueComparator} on the contained, +   * value., +   *, +   * @since 22.0, +   */, +  @Beta, +  public static <T> Comparator<Optional<T>> emptiesFirst(Comparator<T> valueComparator) {, +    checkNotNull(valueComparator);, +    return Comparator.comparing(o -> o.orElse(null), Comparator.nullsFirst(valueComparator));, +  }, +, +  /**, +   * Returns a comparator of {@link Optional} values which treats {@link Optional#empty} as greater, +   * than all other values, and orders the rest using {@code valueComparator} on the contained, +   * value., +   *, +   * @since 22.0, +   */, +  @Beta, +  public static <T> Comparator<Optional<T>> emptiesLast(Comparator<T> valueComparator) {, +    checkNotNull(valueComparator);, +    return Comparator.comparing(o -> o.orElse(null), Comparator.nullsLast(valueComparator));, +  }]