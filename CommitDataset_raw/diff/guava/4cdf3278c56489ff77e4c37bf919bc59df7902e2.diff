[+++ b/src/com/google/common/collect/CustomConcurrentHashMap.java, +    return segmentFor(entry.getHash()).getLiveValue(entry) != null;, +    /**, +     * Gets the value from an entry. Returns null if the entry is invalid,, +     * partially-collected, computing, or expired., +     */, +    V getLiveValue(ReferenceEntry<K, V> entry) {, +      if (entry.getKey() == null) {, +        return null;, +      }, +      V value = entry.getValueReference().get();, +      if (value == null) {, +        return null;, +      }, +      if (expires() && isExpired(entry)) {, +        // cleanup expired entries when the lock is available, +        if (tryLock()) {, +          try {, +            expireEntries();, +          } finally {, +            unlock();, +          }, +        }, +        return null;, +      }, +      return value;, +    }, +, +      // TODO(user): call getLiveValue when it's moved out of Segment, +      V value = entry.getValueReference().get();, +      if (key != null && value != null &&, +          !(expires() && isExpired(entry))) {]