[+++ b/guava-tests/benchmark/com/google/common/base/Utf8Benchmark.java, +        } else if (userFriendly.matches("(?i)(?:Branch.*Prediction.*Hostile)")) {, +          // Defeat branch predictor for: c < 0x80 ; branch taken 50% of the time., +          return 0x100;, +  @Param({"0x80", "0x90", "0x100", "0x800", "0x10000", "0x10ffff"}) MaxCodePoint maxCodePoint;, +  @Param({"100"}) int stringCount;, +  private CharSequence[] seqs;  // actually, all StringBuilders, +  private String[] strings;, +  /**, +   * Compute arrays of valid unicode text, and store it in 3 forms:, +   * byte arrays, Strings, and StringBuilders (in a CharSequence[] to, +   * make it a little harder for the JVM)., +   */, +    seqs = new CharSequence[stringCount];, +    strings = new String[stringCount];, +    byteArrays = new byte[stringCount][];, +    for (int i = 0; i < stringCount; i++) {, +        // discard illegal surrogate "codepoints", +      seqs[i] = sb;, +      strings[i] = sb.toString();, +      byteArrays[i] = strings[i].getBytes(Charsets.UTF_8);, +  /**, +   * Benchmarks {@link Utf8#length} on valid strings containing, +   * pseudo-randomly-generated codePoints less than {@code, +   * maxCodePoint}.  A constant seed is used, so separate runs perform, +   * identical computations., +   */, +  @Benchmark void lengthOfString(int reps) {, +    for (int i = 0; i < reps; i++) {, +      for (String string : strings) {, +        if (Utf8.encodedLength(string) == 1237482374) {, +          throw new Error("Unlikely! We're just defeating the optimizer!");, +        }, +      }, +    }, +  }, +, +  /**, +   * Benchmarks {@link Utf8#length} on valid StringBuilders containing, +   * pseudo-randomly-generated codePoints less than {@code, +   * maxCodePoint}.  A constant seed is used, so separate runs perform, +   * identical computations., +   */, +  @Benchmark void lengthOfStringBuilder(int reps) {, +    for (int i = 0; i < reps; i++) {, +      for (CharSequence seq : seqs) {, +        if (Utf8.encodedLength(seq) == 1237482374) {, +          throw new Error("Unlikely! We're just defeating the optimizer!");, +        }, +      }, +    }, +  }, +]