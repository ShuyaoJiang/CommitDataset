[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Splitter.java, +   * and splits entries into keys and values using the specified separator., +   *, +   * @since 14.0, +   */, +  @CheckReturnValue, +  @Beta, +  public MapSplitter withKeyValueSeparator(char separator) {, +    return withKeyValueSeparator(on(separator));, +  }, +, +  /**, +   * Returns a {@code MapSplitter} which splits entries based on this splitter,, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Splitter.java, +   * and splits entries into keys and values using the specified separator., +   *, +   * @since 14.0, +   */, +  @CheckReturnValue, +  @Beta, +  public MapSplitter withKeyValueSeparator(char separator) {, +    return withKeyValueSeparator(on(separator));, +  }, +, +  /**, +   * Returns a {@code MapSplitter} which splits entries based on this splitter,, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +  public void testMapSplitter_CharacterSeparator() {, +    // try different delimiters., +    Map<String, String> m = Splitter, +        .on(","), +        .withKeyValueSeparator(':'), +        .split("boy:tom,girl:tina,cat:kitty,dog:tommy");, +    ImmutableMap<String, String> expected =, +        ImmutableMap.of("boy", "tom", "girl", "tina", "cat", "kitty", "dog", "tommy");, +, +    ASSERT.that(m).isEqualTo(expected);, +    ASSERT.that(asList(m.entrySet())).is(asList(expected.entrySet()));, +  }, +, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Splitter.java, +   * and splits entries into keys and values using the specified separator., +   *, +   * @since 14.0, +   */, +  @CheckReturnValue, +  @Beta, +  public MapSplitter withKeyValueSeparator(char separator) {, +    return withKeyValueSeparator(on(separator));, +  }, +, +  /**, +   * Returns a {@code MapSplitter} which splits entries based on this splitter,, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +  public void testMapSplitter_CharacterSeparator() {, +    // try different delimiters., +    Map<String, String> m = Splitter, +        .on(","), +        .withKeyValueSeparator(':'), +        .split("boy:tom,girl:tina,cat:kitty,dog:tommy");, +    ImmutableMap<String, String> expected =, +        ImmutableMap.of("boy", "tom", "girl", "tina", "cat", "kitty", "dog", "tommy");, +, +    ASSERT.that(m).isEqualTo(expected);, +    ASSERT.that(asList(m.entrySet())).is(asList(expected.entrySet()));, +  }, +, +++ b/guava/src/com/google/common/base/Splitter.java, +   * and splits entries into keys and values using the specified separator., +   *, +   * @since 14.0, +   */, +  @CheckReturnValue, +  @Beta, +  public MapSplitter withKeyValueSeparator(char separator) {, +    return withKeyValueSeparator(on(separator));, +  }, +, +  /**, +   * Returns a {@code MapSplitter} which splits entries based on this splitter,]