[+++ /dev/null, +++ /dev/null, +++ b/src/com/google/common/util/concurrent/AbstractService.java, +import com.google.common.util.concurrent.Service.State; // javadoc needs this, +++ /dev/null, +++ b/src/com/google/common/util/concurrent/AbstractService.java, +import com.google.common.util.concurrent.Service.State; // javadoc needs this, +++ b/src/com/google/common/util/concurrent/Service.java, +public interface Service {, +  /**, +   * The lifecycle states of a service., +   *, +   * @since 9 (in version 1 as {@code com.google.common.base.Service.State}), +   */, +  @Beta // should come out of Beta when Service does, +  enum State {, +    /**, +     * A service in this state is inactive. It does minimal work and consumes, +     * minimal resources., +     */, +    NEW,, +, +    /**, +     * A service in this state is transitioning to {@link #RUNNING}., +     */, +    STARTING,, +, +    /**, +     * A service in this state is operational., +     */, +    RUNNING,, +, +    /**, +     * A service in this state is transitioning to {@link #TERMINATED}., +     */, +    STOPPING,, +, +    /**, +     * A service in this state has completed execution normally. It does minimal, +     * work and consumes minimal resources., +     */, +    TERMINATED,, +, +    /**, +     * A service in this state has encountered a problem and may not be, +     * operational. It cannot be started nor stopped., +     */, +    FAILED, +  }]