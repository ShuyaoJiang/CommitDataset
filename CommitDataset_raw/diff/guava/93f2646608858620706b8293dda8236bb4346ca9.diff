[+++ b/guava-gwt/test/com/google/common/collect/ComparisonChainTest_gwt.java, +public void testCompareBooleans() throws Exception {, +  com.google.common.collect.ComparisonChainTest testCase = new com.google.common.collect.ComparisonChainTest();, +  testCase.testCompareBooleans();, +}, +, +++ b/guava-gwt/test/com/google/common/collect/ComparisonChainTest_gwt.java, +public void testCompareBooleans() throws Exception {, +  com.google.common.collect.ComparisonChainTest testCase = new com.google.common.collect.ComparisonChainTest();, +  testCase.testCompareBooleans();, +}, +, +++ b/guava-tests/test/com/google/common/collect/ComparisonChainTest.java, +  public void testCompareBooleans() {, +    assertEquals(0, ComparisonChain.start(), +        .compare(true, true), +        .compare(true, Boolean.TRUE), +        .compare(Boolean.TRUE, true), +        .compare(Boolean.TRUE, Boolean.TRUE), +        .result());, +  }, +, +++ b/guava-gwt/test/com/google/common/collect/ComparisonChainTest_gwt.java, +public void testCompareBooleans() throws Exception {, +  com.google.common.collect.ComparisonChainTest testCase = new com.google.common.collect.ComparisonChainTest();, +  testCase.testCompareBooleans();, +}, +, +++ b/guava-tests/test/com/google/common/collect/ComparisonChainTest.java, +  public void testCompareBooleans() {, +    assertEquals(0, ComparisonChain.start(), +        .compare(true, true), +        .compare(true, Boolean.TRUE), +        .compare(Boolean.TRUE, true), +        .compare(Boolean.TRUE, Boolean.TRUE), +        .result());, +  }, +, +++ b/guava/src/com/google/common/collect/ComparisonChain.java, +   * Discouraged synonym for {@link #compareFalseFirst}., +   *, +   * @deprecated Use {@link #compareFalseFirst}; or, if the parameters passed, +   *     are being either negated or reversed, undo the negation or reversal and, +   *     use {@link #compareTrueFirst}., +   */, +  @Deprecated, +  public final ComparisonChain compare(Boolean left, Boolean right) {, +    return compareFalseFirst(left, right);, +  }, +, +  /**]