[+++ b/guava-testlib/src/com/google/common/testing/NullPointerTester.java, +   * Ignore {@code constructor} in the tests that follow. Returns this object., +   *, +   * @since 22.0, +   */, +  public NullPointerTester ignore(Constructor<?> constructor) {, +    ignoredMembers.add(checkNotNull(constructor));, +    return this;, +  }, +, +  /**, +++ b/guava-testlib/src/com/google/common/testing/NullPointerTester.java, +   * Ignore {@code constructor} in the tests that follow. Returns this object., +   *, +   * @since 22.0, +   */, +  public NullPointerTester ignore(Constructor<?> constructor) {, +    ignoredMembers.add(checkNotNull(constructor));, +    return this;, +  }, +, +  /**, +++ b/guava-testlib/test/com/google/common/testing/NullPointerTesterTest.java, +, +  private static final class FailOnOneOfTwoConstructors {, +    @SuppressWarnings("unused") // Called by reflection, +    public FailOnOneOfTwoConstructors(String s) {}, +, +    @SuppressWarnings("unused") // Called by reflection, +    public FailOnOneOfTwoConstructors(Object o) {, +      checkNotNull(o);, +    }, +  }, +, +  public void testConstructor_Ignored_ShouldPass() throws Exception {, +    new NullPointerTester(), +        .ignore(FailOnOneOfTwoConstructors.class.getDeclaredConstructor(String.class)), +        .testAllPublicConstructors(FailOnOneOfTwoConstructors.class);, +  }, +, +  public void testConstructor_ShouldFail() throws Exception {, +    try {, +      new NullPointerTester().testAllPublicConstructors(FailOnOneOfTwoConstructors.class);, +    } catch (AssertionFailedError expected) {, +      return;, +    }, +    fail("Should detect problem in " + FailOnOneOfTwoConstructors.class.getSimpleName());, +  }]