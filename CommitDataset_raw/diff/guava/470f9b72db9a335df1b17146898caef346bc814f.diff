[+++ b/guava-testlib/src/com/google/common/collect/testing/google/MultimapPutIterableTester.java, +import static com.google.common.base.Preconditions.checkState;, +import com.google.common.collect.Iterators;, +  , +  @MapFeature.Require(SUPPORTS_PUT), +  public void testPutAllOnlyCallsIteratorOnce() {, +    Iterable<V> iterable = new Iterable<V>() {, +      private boolean calledIteratorAlready = false;, +, +      @Override, +      public Iterator<V> iterator() {, +        checkState(!calledIteratorAlready);, +        calledIteratorAlready = true;, +        return Iterators.forArray(sampleValues().e3);, +      }, +    };, +    , +    multimap().putAll(sampleKeys().e3, iterable);, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MultimapPutIterableTester.java, +import static com.google.common.base.Preconditions.checkState;, +import com.google.common.collect.Iterators;, +  , +  @MapFeature.Require(SUPPORTS_PUT), +  public void testPutAllOnlyCallsIteratorOnce() {, +    Iterable<V> iterable = new Iterable<V>() {, +      private boolean calledIteratorAlready = false;, +, +      @Override, +      public Iterator<V> iterator() {, +        checkState(!calledIteratorAlready);, +        calledIteratorAlready = true;, +        return Iterators.forArray(sampleValues().e3);, +      }, +    };, +    , +    multimap().putAll(sampleKeys().e3, iterable);, +  }, +++ b/guava/src/com/google/common/collect/AbstractMultimap.java, +    // make sure we only call values.iterator() once, +    // and we only call get(key) if values is nonempty, +    if (values instanceof Collection) {, +      Collection<? extends V> valueCollection = (Collection<? extends V>) values;, +      return !valueCollection.isEmpty() && get(key).addAll(valueCollection);, +    } else {, +      Iterator<? extends V> valueItr = values.iterator();, +      return valueItr.hasNext() && Iterators.addAll(get(key), valueItr);, +    }]