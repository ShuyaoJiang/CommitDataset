[+++ b/android/guava/src/com/google/common/collect/ImmutableCollection.java, +    return toArray(EMPTY_ARRAY);, +, +      Object[] internal = internalArray();, +      if (internal != null) {, +        return Platform.copy(internal, internalArrayStart(), internalArrayEnd(), other);, +      }, +  /** If this collection is backed by an array of its elements in insertion order, returns it. */, +  Object[] internalArray() {, +    return null;, +  }, +, +  /**, +   * If this collection is backed by an array of its elements in insertion order, returns the offset, +   * where this collection's elements start., +   */, +  int internalArrayStart() {, +    throw new UnsupportedOperationException();, +  }, +, +  /**, +   * If this collection is backed by an array of its elements in insertion order, returns the offset, +   * where this collection's elements end., +   */, +  int internalArrayEnd() {, +    throw new UnsupportedOperationException();, +  }, +, +++ b/android/guava/src/com/google/common/collect/ImmutableCollection.java, +    return toArray(EMPTY_ARRAY);, +, +      Object[] internal = internalArray();, +      if (internal != null) {, +        return Platform.copy(internal, internalArrayStart(), internalArrayEnd(), other);, +      }, +  /** If this collection is backed by an array of its elements in insertion order, returns it. */, +  Object[] internalArray() {, +    return null;, +  }, +, +  /**, +   * If this collection is backed by an array of its elements in insertion order, returns the offset, +   * where this collection's elements start., +   */, +  int internalArrayStart() {, +    throw new UnsupportedOperationException();, +  }, +, +  /**, +   * If this collection is backed by an array of its elements in insertion order, returns the offset, +   * where this collection's elements end., +   */, +  int internalArrayEnd() {, +    throw new UnsupportedOperationException();, +  }, +, +++ b/android/guava/src/com/google/common/collect/ImmutableList.java, +    Object[] internalArray() {, +      return ImmutableList.this.internalArray();, +    }, +, +    @Override, +    int internalArrayStart() {, +      return ImmutableList.this.internalArrayStart() + offset;, +    }, +, +    @Override, +    int internalArrayEnd() {, +      return ImmutableList.this.internalArrayStart() + offset + length;, +    }, +, +    @Override, +++ b/android/guava/src/com/google/common/collect/ImmutableCollection.java, +    return toArray(EMPTY_ARRAY);, +, +      Object[] internal = internalArray();, +      if (internal != null) {, +        return Platform.copy(internal, internalArrayStart(), internalArrayEnd(), other);, +      }, +  /** If this collection is backed by an array of its elements in insertion order, returns it. */, +  Object[] internalArray() {, +    return null;, +  }, +, +  /**, +   * If this collection is backed by an array of its elements in insertion order, returns the offset, +   * where this collection's elements start., +   */, +  int internalArrayStart() {, +    throw new UnsupportedOperationException();, +  }, +, +  /**, +   * If this collection is backed by an array of its elements in insertion order, returns the offset, +   * where this collection's elements end., +   */, +  int internalArrayEnd() {, +    throw new UnsupportedOperationException();, +  }, +]