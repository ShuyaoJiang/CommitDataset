[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      return new UnmodifiableIterator<Entry<K, V>>() {, +        @Override, +        public boolean hasNext() {, +          return delegate.hasNext();, +        }, +, +          return unmodifiableEntry(delegate.next());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      return new UnmodifiableIterator<Entry<K, V>>() {, +        @Override, +        public boolean hasNext() {, +          return delegate.hasNext();, +        }, +, +          return unmodifiableEntry(delegate.next());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +        result = map = Collections.unmodifiableMap(, +            Maps.transformValues(delegate.asMap(), new Function<Collection<V>, Collection<V>>() {, +              @Override, +              public Collection<V> apply(Collection<V> collection) {, +                return unmodifiableValueCollection(collection);, +            }));, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      return new UnmodifiableIterator<Entry<K, V>>() {, +        @Override, +        public boolean hasNext() {, +          return delegate.hasNext();, +        }, +, +          return unmodifiableEntry(delegate.next());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +        result = map = Collections.unmodifiableMap(, +            Maps.transformValues(delegate.asMap(), new Function<Collection<V>, Collection<V>>() {, +              @Override, +              public Collection<V> apply(Collection<V> collection) {, +                return unmodifiableValueCollection(collection);, +            }));, +++ b/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      return new UnmodifiableIterator<Entry<K, V>>() {, +        @Override, +        public boolean hasNext() {, +          return delegate.hasNext();, +        }, +, +          return unmodifiableEntry(delegate.next());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +        result = map = Collections.unmodifiableMap(, +            Maps.transformValues(delegate.asMap(), new Function<Collection<V>, Collection<V>>() {, +              @Override, +              public Collection<V> apply(Collection<V> collection) {, +                return unmodifiableValueCollection(collection);, +            }));, +++ b/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/guava/src/com/google/common/collect/Maps.java, +      return new UnmodifiableIterator<Entry<K, V>>() {, +        @Override, +        public boolean hasNext() {, +          return delegate.hasNext();, +        }, +, +          return unmodifiableEntry(delegate.next());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +      return new UnmodifiableIterator<Entry<K, V>>() {, +        @Override, +        public boolean hasNext() {, +          return delegate.hasNext();, +        }, +, +          return unmodifiableEntry(delegate.next());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Multimaps.java, +        result = map = Collections.unmodifiableMap(, +            Maps.transformValues(delegate.asMap(), new Function<Collection<V>, Collection<V>>() {, +              @Override, +              public Collection<V> apply(Collection<V> collection) {, +                return unmodifiableValueCollection(collection);, +            }));, +++ b/guava-tests/test/com/google/common/collect/MultimapsTest.java, +++ b/guava/src/com/google/common/collect/Maps.java, +      return new UnmodifiableIterator<Entry<K, V>>() {, +        @Override, +        public boolean hasNext() {, +          return delegate.hasNext();, +        }, +, +          return unmodifiableEntry(delegate.next());, +++ b/guava/src/com/google/common/collect/Multimaps.java, +        result = map = Collections.unmodifiableMap(, +            Maps.transformValues(delegate.asMap(), new Function<Collection<V>, Collection<V>>() {, +              @Override, +              public Collection<V> apply(Collection<V> collection) {, +                return unmodifiableValueCollection(collection);, +            }));]