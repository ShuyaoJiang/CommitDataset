[+++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * Returns an iterable containing all combinations weakKeys and weakValues., +    return ImmutableList.of(, +        createMapMaker(),, +        createMapMaker().weakKeys().weakValues());, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * Returns an iterable containing all combinations weakKeys and weakValues., +    return ImmutableList.of(, +        createMapMaker(),, +        createMapMaker().weakKeys().weakValues());, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * Returns an iterable containing all combinations weakKeys and weakValues., +    return ImmutableList.of(, +        createMapMaker(),, +        createMapMaker().weakKeys().weakValues());, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/MapMaker.java, + * <p>A builder of {@link ConcurrentMap} instances that can have keys or values automatically, + * wrapped in {@linkplain WeakReference weak} references., + * {@link #weakValues} was specified, the map uses identity comparisons for values., + * <p>If {@link #weakKeys} or {@link #weakValues} are requested, it is possible for a key or value, + * present in the map to be reclaimed by the, + * used weak references, the entries are reconstructed as they were, but it's not unlikely they'll, + * be quickly garbage-collected before they are ever accessed., +    return new MapMakerInternalMap<K, V>(this);, +    return new MapMaker.ComputingMapAdapter<K, V>(this, computingFunction);, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * Returns an iterable containing all combinations weakKeys and weakValues., +    return ImmutableList.of(, +        createMapMaker(),, +        createMapMaker().weakKeys().weakValues());, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/MapMaker.java, + * <p>A builder of {@link ConcurrentMap} instances that can have keys or values automatically, + * wrapped in {@linkplain WeakReference weak} references., + * {@link #weakValues} was specified, the map uses identity comparisons for values., + * <p>If {@link #weakKeys} or {@link #weakValues} are requested, it is possible for a key or value, + * present in the map to be reclaimed by the, + * used weak references, the entries are reconstructed as they were, but it's not unlikely they'll, + * be quickly garbage-collected before they are ever accessed., +    return new MapMakerInternalMap<K, V>(this);, +    return new MapMaker.ComputingMapAdapter<K, V>(this, computingFunction);, +++ b/guava/src/com/google/common/collect/MapMakerInternalMap.java]