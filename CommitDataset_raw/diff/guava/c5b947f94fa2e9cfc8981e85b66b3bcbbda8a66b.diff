[+++ b/guava/src/com/google/common/util/concurrent/Futures.java, +   * Returns a new {@code Future} whose result is asynchronously derived from the result of the, +   * given {@code Future}. If the given {@code Future} fails, the returned {@code Future} fails with, +   * the same exception (and the function is not invoked)., +   *, +   * <p>More precisely, the returned {@code Future} takes its result from a {@code Future} produced, +   * by applying the given {@code AsyncFunction} to the result of the original {@code Future}., +   * Example usage:, +   * Returns a new {@code Future} whose result is asynchronously derived from the result of the, +   * given {@code Future}. If the given {@code Future} fails, the returned {@code Future} fails with, +   * the same exception (and the function is not invoked)., +   *, +   * <p>More precisely, the returned {@code Future} takes its result from a {@code Future} produced, +   * by applying the given {@code AsyncFunction} to the result of the original {@code Future}., +   * Example usage:, +   * Returns a new {@code Future} whose result is derived from the result of the given {@code, +   * Future}. If {@code input} fails, the returned {@code Future} fails with the same exception (and, +   * the function is not invoked). Example usage:, +   * Returns a new {@code Future} whose result is derived from the result of the given {@code, +   * Future}. If {@code input} fails, the returned {@code Future} fails with the same exception (and, +   * the function is not invoked). Example usage:]