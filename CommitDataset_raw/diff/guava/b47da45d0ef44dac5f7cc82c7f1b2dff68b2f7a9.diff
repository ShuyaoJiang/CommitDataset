[+++ b/guava/src/com/google/common/eventbus/AllowConcurrentEvents.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * Marks an event subscriber method as being thread-safe. This annotation indicates that EventBus, + * may invoke the event subscriber simultaneously from multiple threads., + * <p>This does not mark the method, and so should be used in combination with {@link Subscribe}., +public @interface AllowConcurrentEvents {}, +++ b/guava/src/com/google/common/eventbus/AllowConcurrentEvents.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * Marks an event subscriber method as being thread-safe. This annotation indicates that EventBus, + * may invoke the event subscriber simultaneously from multiple threads., + * <p>This does not mark the method, and so should be used in combination with {@link Subscribe}., +public @interface AllowConcurrentEvents {}, +++ b/guava/src/com/google/common/eventbus/AsyncEventBus.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * An {@link EventBus} that takes the Executor of your choice and uses it to dispatch events,, + * allowing dispatch to occur asynchronously., +   * Creates a new AsyncEventBus that will use {@code executor} to dispatch events. Assigns, +   * {@code identifier} as the bus's name for logging purposes., +   * @param executor Executor to use to dispatch events. It is the caller's responsibility to shut, +   *     down the executor after the last event has been posted to this event bus., +   * Creates a new AsyncEventBus that will use {@code executor} to dispatch events., +   * @param executor Executor to use to dispatch events. It is the caller's responsibility to shut, +   *     down the executor after the last event has been posted to this event bus., +   * Creates a new AsyncEventBus that will use {@code executor} to dispatch events., +   * @param executor Executor to use to dispatch events. It is the caller's responsibility to shut, +   *     down the executor after the last event has been posted to this event bus., +++ b/guava/src/com/google/common/eventbus/AllowConcurrentEvents.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * Marks an event subscriber method as being thread-safe. This annotation indicates that EventBus, + * may invoke the event subscriber simultaneously from multiple threads., + * <p>This does not mark the method, and so should be used in combination with {@link Subscribe}., +public @interface AllowConcurrentEvents {}, +++ b/guava/src/com/google/common/eventbus/AsyncEventBus.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * An {@link EventBus} that takes the Executor of your choice and uses it to dispatch events,, + * allowing dispatch to occur asynchronously., +   * Creates a new AsyncEventBus that will use {@code executor} to dispatch events. Assigns, +   * {@code identifier} as the bus's name for logging purposes., +   * @param executor Executor to use to dispatch events. It is the caller's responsibility to shut, +   *     down the executor after the last event has been posted to this event bus., +   * Creates a new AsyncEventBus that will use {@code executor} to dispatch events., +   * @param executor Executor to use to dispatch events. It is the caller's responsibility to shut, +   *     down the executor after the last event has been posted to this event bus., +   * Creates a new AsyncEventBus that will use {@code executor} to dispatch events., +   * @param executor Executor to use to dispatch events. It is the caller's responsibility to shut, +   *     down the executor after the last event has been posted to this event bus., +++ b/guava/src/com/google/common/eventbus/DeadEvent.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * Wraps an event that was posted, but which had no subscribers and thus could not be delivered., + * <p>Registering a DeadEvent subscriber is useful for debugging or logging, as it can detect, + * misconfigurations in a system's event distribution., +   * @param source object broadcasting the DeadEvent (generally the {@link EventBus})., +   * Returns the object that originated this event (<em>not</em> the object that originated the, +   * wrapped event). This is generally an {@link EventBus}., +   * Returns the wrapped, 'dead' event, which the system was unable to deliver to any registered, +   * subscriber., +++ b/guava/src/com/google/common/eventbus/AllowConcurrentEvents.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + * Marks an event subscriber method as being thread-safe. This annotation indicates that EventBus, + * may invoke the event subscriber simultaneously from multiple threads., + * <p>This does not mark the method, and so should be used in combination with {@link Subscribe}., +public @interface AllowConcurrentEvents {}, +++ b/guava/src/com/google/common/eventbus/AsyncEventBus.java, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at]