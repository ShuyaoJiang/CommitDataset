[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +   * Copies all the elements from this fluent iterable to {@code collection}. This is equivalent to, +   * calling {@code Iterables.addAll(collection, this)}., +   * @param collection the collection to copy elements to, +   * @return {@code collection}, for convenience, +  public final <C extends Collection<? super E>> C copyInto(C collection) {, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +   * Copies all the elements from this fluent iterable to {@code collection}. This is equivalent to, +   * calling {@code Iterables.addAll(collection, this)}., +   * @param collection the collection to copy elements to, +   * @return {@code collection}, for convenience, +  public final <C extends Collection<? super E>> C copyInto(C collection) {, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +  public void testCopyInto_List() {, +    ASSERT.that(fluent(1, 3, 5).copyInto(Lists.newArrayList(1, 2))), +  public void testCopyInto_Set() {, +    ASSERT.that(fluent(1, 3, 5).copyInto(Sets.newHashSet(1, 2))), +  public void testCopyInto_SetAllDuplicates() {, +    ASSERT.that(fluent(1, 3, 5).copyInto(Sets.newHashSet(1, 2, 3, 5))), +  public void testCopyInto_NonCollection() {, +    ASSERT.that(FluentIterable.from(iterable).copyInto(list)), +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +   * Copies all the elements from this fluent iterable to {@code collection}. This is equivalent to, +   * calling {@code Iterables.addAll(collection, this)}., +   * @param collection the collection to copy elements to, +   * @return {@code collection}, for convenience, +  public final <C extends Collection<? super E>> C copyInto(C collection) {, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +  public void testCopyInto_List() {, +    ASSERT.that(fluent(1, 3, 5).copyInto(Lists.newArrayList(1, 2))), +  public void testCopyInto_Set() {, +    ASSERT.that(fluent(1, 3, 5).copyInto(Sets.newHashSet(1, 2))), +  public void testCopyInto_SetAllDuplicates() {, +    ASSERT.that(fluent(1, 3, 5).copyInto(Sets.newHashSet(1, 2, 3, 5))), +  public void testCopyInto_NonCollection() {, +    ASSERT.that(FluentIterable.from(iterable).copyInto(list)), +++ b/guava/src/com/google/common/collect/FluentIterable.java, +   * Copies all the elements from this fluent iterable to {@code collection}. This is equivalent to, +   * calling {@code Iterables.addAll(collection, this)}., +   * @param collection the collection to copy elements to, +   * @return {@code collection}, for convenience, +  public final <C extends Collection<? super E>> C copyInto(C collection) {]