[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +            Count count = mapEntry.getValue();, +            if (count == null || count.get() == 0) {, +                return frequency.get();, +            return (count == null) ? 0 : count.get();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +            Count count = mapEntry.getValue();, +            if (count == null || count.get() == 0) {, +                return frequency.get();, +            return (count == null) ? 0 : count.get();, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultisetTest.java, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +            Count count = mapEntry.getValue();, +            if (count == null || count.get() == 0) {, +                return frequency.get();, +            return (count == null) ? 0 : count.get();, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultisetTest.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultisetTest_gwt.java, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +            Count count = mapEntry.getValue();, +            if (count == null || count.get() == 0) {, +                return frequency.get();, +            return (count == null) ? 0 : count.get();, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultisetTest.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultisetTest_gwt.java, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +            Count count = mapEntry.getValue();, +            if (count == null || count.get() == 0) {, +                return frequency.get();, +            return (count == null) ? 0 : count.get();, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultisetTest.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/SimpleAbstractMultisetTest_gwt.java, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +            Count count = mapEntry.getValue();, +            if (count == null || count.get() == 0) {, +                return frequency.get();, +            return (count == null) ? 0 : count.get();, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultisetTest.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/SimpleAbstractMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/TreeMultisetTest_gwt.java, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +            Count count = mapEntry.getValue();, +            if (count == null || count.get() == 0) {, +                return frequency.get();, +            return (count == null) ? 0 : count.get();, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/AbstractMultisetTest.java, +++ b/guava-gwt/test/com/google/common/collect/HashMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/LinkedHashMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/SimpleAbstractMultisetTest_gwt.java, +++ b/guava-gwt/test/com/google/common/collect/TreeMultisetTest_gwt.java, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MultisetEntrySetTester.java, +/*, + * Copyright (C) 2008 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.collect.testing.google;, +, +import static com.google.common.collect.testing.features.CollectionFeature.SUPPORTS_ADD;, +import static com.google.common.collect.testing.features.CollectionFeature.SUPPORTS_ITERATOR_REMOVE;, +import static com.google.common.collect.testing.features.CollectionFeature.SUPPORTS_REMOVE;, +import static com.google.common.collect.testing.features.CollectionSize.ONE;, +import static com.google.common.collect.testing.features.CollectionSize.SEVERAL;, +import static com.google.common.collect.testing.features.CollectionSize.ZERO;, +import static com.google.common.collect.testing.google.MultisetFeature.ENTRIES_ARE_VIEWS;, +, +import com.google.common.annotations.GwtCompatible;, +import com.google.common.collect.Iterables;, +import com.google.common.collect.Multiset;, +import com.google.common.collect.Multisets;, +import com.google.common.collect.testing.features.CollectionFeature;, +import com.google.common.collect.testing.features.CollectionSize;, +, +import java.util.Collections;, +import java.util.Iterator;, +, +/**, + * Tests for {@code Multiset.entrySet}., + *, + * @author Jared Levy, + */, +@GwtCompatible, +public class MultisetEntrySetTester<E> extends AbstractMultisetTester<E> {, +]