[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java, +  public static void deserialize(SerializationStreamReader reader, Absent<?> instance) {}, +  public static Absent<?> instantiate(SerializationStreamReader reader) {, +  public static void serialize(SerializationStreamWriter writer, Absent<?> instance) {}, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java, +  public static void deserialize(SerializationStreamReader reader, Absent<?> instance) {}, +  public static Absent<?> instantiate(SerializationStreamReader reader) {, +  public static void serialize(SerializationStreamWriter writer, Absent<?> instance) {}, +++ b/guava-gwt/src/com/google/common/base/GwtSerializationDependencies.java, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java, +  public static void deserialize(SerializationStreamReader reader, Absent<?> instance) {}, +  public static Absent<?> instantiate(SerializationStreamReader reader) {, +  public static void serialize(SerializationStreamWriter writer, Absent<?> instance) {}, +++ b/guava-gwt/src/com/google/common/base/GwtSerializationDependencies.java, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/AbstractIteratorTest.java, +      @SuppressWarnings("unchecked") // intentionally unsafe for test, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java, +  public static void deserialize(SerializationStreamReader reader, Absent<?> instance) {}, +  public static Absent<?> instantiate(SerializationStreamReader reader) {, +  public static void serialize(SerializationStreamWriter writer, Absent<?> instance) {}, +++ b/guava-gwt/src/com/google/common/base/GwtSerializationDependencies.java, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/AbstractIteratorTest.java, +      @SuppressWarnings("unchecked") // intentionally unsafe for test, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/EquivalenceTest.java, +  @SuppressWarnings("unchecked") // varargs, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java, +  public static void deserialize(SerializationStreamReader reader, Absent<?> instance) {}, +  public static Absent<?> instantiate(SerializationStreamReader reader) {, +  public static void serialize(SerializationStreamWriter writer, Absent<?> instance) {}, +++ b/guava-gwt/src/com/google/common/base/GwtSerializationDependencies.java, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/AbstractIteratorTest.java, +      @SuppressWarnings("unchecked") // intentionally unsafe for test, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/EquivalenceTest.java, +  @SuppressWarnings("unchecked") // varargs, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("ReturnValueIgnored") // testing for exception, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java, +  public static void deserialize(SerializationStreamReader reader, Absent<?> instance) {}, +  public static Absent<?> instantiate(SerializationStreamReader reader) {, +  public static void serialize(SerializationStreamWriter writer, Absent<?> instance) {}, +++ b/guava-gwt/src/com/google/common/base/GwtSerializationDependencies.java, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/AbstractIteratorTest.java, +      @SuppressWarnings("unchecked") // intentionally unsafe for test, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/EquivalenceTest.java, +  @SuppressWarnings("unchecked") // varargs, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("ReturnValueIgnored") // testing for exception, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/OptionalTest.java, +  @SuppressWarnings("unused") // compilation test, +  @SuppressWarnings("unused") // compilation test, +  @SuppressWarnings("unused") // compilation test, +    Optional<Number> optionalInt = Optional.of((Number) 1);, +  @SuppressWarnings("unused") // compilation test, +, +    // Sadly, the following is what users will have to do in some circumstances., +, +    @SuppressWarnings("unchecked") // safe covariant cast, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Predicates.java, +    @SuppressWarnings("unchecked") // safe contravariant cast, +    // TODO(kevinb): understand why we still get a warning despite @SafeVarargs!, +++ b/guava-gwt/src/com/google/common/base/Absent_CustomFieldSerializer.java, +  public static void deserialize(SerializationStreamReader reader, Absent<?> instance) {}, +  public static Absent<?> instantiate(SerializationStreamReader reader) {, +  public static void serialize(SerializationStreamWriter writer, Absent<?> instance) {}, +++ b/guava-gwt/src/com/google/common/base/GwtSerializationDependencies.java, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/AbstractIteratorTest.java, +      @SuppressWarnings("unchecked") // intentionally unsafe for test, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/EquivalenceTest.java, +  @SuppressWarnings("unchecked") // varargs, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("ReturnValueIgnored") // testing for exception, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/OptionalTest.java, +  @SuppressWarnings("unused") // compilation test, +  @SuppressWarnings("unused") // compilation test, +  @SuppressWarnings("unused") // compilation test, +    Optional<Number> optionalInt = Optional.of((Number) 1);, +  @SuppressWarnings("unused") // compilation test, +, +    // Sadly, the following is what users will have to do in some circumstances.]