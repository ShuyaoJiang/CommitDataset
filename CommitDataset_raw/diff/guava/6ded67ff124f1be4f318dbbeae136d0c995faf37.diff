[+++ b/guava/src/com/google/common/graph/AbstractGraph.java, +    return new GraphEdges();, +, +  private class GraphEdges extends AbstractSet<EndpointPair<N>> {, +    @Override, +    public UnmodifiableIterator<EndpointPair<N>> iterator() {, +      return EndpointPairIterator.of(AbstractGraph.this);, +    }, +, +    @Override, +    public int size() {, +      return Ints.saturatedCast(edgeCount());, +    }, +, +    @Override, +    public boolean contains(@Nullable Object obj) {, +      if (!(obj instanceof EndpointPair)) {, +        return false;, +      }, +      EndpointPair<?> endpointPair = (EndpointPair<?>) obj;, +      return isDirected() == endpointPair.isOrdered(), +          && contains(endpointPair.nodeU(), endpointPair.nodeV());, +    }, +, +    /** Returns true iff this set contains an edge connecting {@code nodeU} to {@code nodeV}. */, +    private boolean contains(@Nullable Object nodeU, @Nullable Object nodeV) {, +      return nodes().contains(nodeU) && successors(nodeU).contains(nodeV);, +    }, +  }]