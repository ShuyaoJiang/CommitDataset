[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Enums.java, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Enums.java, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Enums.java, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/StringsTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Enums.java, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/StringsTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-testlib/test/com/google/common/testing/ArbitraryInstancesTest.java, +    assertNotNull(ArbitraryInstances.get(Joiner.class).join(ImmutableList.of("a")));, +    assertNotNull(ArbitraryInstances.get(Splitter.class).split("a,b"));, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Enums.java, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/StringsTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-testlib/test/com/google/common/testing/ArbitraryInstancesTest.java, +    assertNotNull(ArbitraryInstances.get(Joiner.class).join(ImmutableList.of("a")));, +    assertNotNull(ArbitraryInstances.get(Splitter.class).split("a,b"));, +++ b/guava-tests/benchmark/com/google/common/base/EnumsBenchmark.java, +  boolean getIfPresent(int repetitions) {, +    boolean retVal = false;, +      retVal &= Enums.getIfPresent(enumType, sampleData[i & 255]).isPresent();, +    return retVal;, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Enums.java, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/StringsTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-testlib/test/com/google/common/testing/ArbitraryInstancesTest.java, +    assertNotNull(ArbitraryInstances.get(Joiner.class).join(ImmutableList.of("a")));, +    assertNotNull(ArbitraryInstances.get(Splitter.class).split("a,b"));, +++ b/guava-tests/benchmark/com/google/common/base/EnumsBenchmark.java, +  boolean getIfPresent(int repetitions) {, +    boolean retVal = false;, +      retVal &= Enums.getIfPresent(enumType, sampleData[i & 255]).isPresent();, +    return retVal;, +++ b/guava-tests/test/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/Enums.java, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/JoinerTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/StringsTest.java, +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +  @SuppressWarnings("CheckReturnValue"), +++ b/guava-testlib/test/com/google/common/testing/ArbitraryInstancesTest.java, +    assertNotNull(ArbitraryInstances.get(Joiner.class).join(ImmutableList.of("a")));, +    assertNotNull(ArbitraryInstances.get(Splitter.class).split("a,b"));, +++ b/guava-tests/benchmark/com/google/common/base/EnumsBenchmark.java, +  boolean getIfPresent(int repetitions) {, +    boolean retVal = false;, +      retVal &= Enums.getIfPresent(enumType, sampleData[i & 255]).isPresent();]