[+++ b/guava/src/com/google/common/base/CaseFormat.java, +import static com.google.common.base.Preconditions.checkNotNull;, +, +  LOWER_HYPHEN(CharMatcher.is('-'), "-") {, +    @Override String normalizeWord(String word) {, +      return Ascii.toLowerCase(word);, +    }, +  },, +  LOWER_UNDERSCORE(CharMatcher.is('_'), "_") {, +    @Override String normalizeWord(String word) {, +      return Ascii.toLowerCase(word);, +    }, +  },, +  LOWER_CAMEL(CharMatcher.inRange('A', 'Z'), "") {, +    @Override String normalizeWord(String word) {, +      return firstCharOnlyToUpper(word);, +    }, +  },, +  UPPER_CAMEL(CharMatcher.inRange('A', 'Z'), "") {, +    @Override String normalizeWord(String word) {, +      return firstCharOnlyToUpper(word);, +    }, +  },, +  UPPER_UNDERSCORE(CharMatcher.is('_'), "_") {, +    @Override String normalizeWord(String word) {, +      return Ascii.toUpperCase(word);, +    }, +  };, +    checkNotNull(format);, +    checkNotNull(s);, +    // TODO(user): Get rid of this switch and use enum methods instead?, +, +    // optimize cases where no camel conversion is required, +  abstract String normalizeWord(String word);, +  private String normalizeFirstWord(String word) {, +    return (this == LOWER_CAMEL) ? Ascii.toLowerCase(word) : normalizeWord(word);, +    return (word.isEmpty()), +        ? word, +        : new StringBuilder(word.length())]