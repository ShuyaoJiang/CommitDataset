[+++ b/android/guava-tests/test/com/google/common/collect/ImmutableListTest.java, +    @GwtIncompatible, +    public void testBuilderExactlySizedReusesArray() {, +      ImmutableList.Builder<Integer> builder = ImmutableList.builderWithExpectedSize(10);, +      Object[] builderArray = builder.contents;, +      for (int i = 0; i < 10; i++) {, +        builder.add(i);, +      }, +      Object[] builderArrayAfterAdds = builder.contents;, +      RegularImmutableList<Integer> list = (RegularImmutableList<Integer>) builder.build();, +      Object[] listInternalArray = list.array;, +      assertSame(builderArray, builderArrayAfterAdds);, +      assertSame(builderArray, listInternalArray);, +    }, +, +++ b/android/guava-tests/test/com/google/common/collect/ImmutableListTest.java, +    @GwtIncompatible, +    public void testBuilderExactlySizedReusesArray() {, +      ImmutableList.Builder<Integer> builder = ImmutableList.builderWithExpectedSize(10);, +      Object[] builderArray = builder.contents;, +      for (int i = 0; i < 10; i++) {, +        builder.add(i);, +      }, +      Object[] builderArrayAfterAdds = builder.contents;, +      RegularImmutableList<Integer> list = (RegularImmutableList<Integer>) builder.build();, +      Object[] listInternalArray = list.array;, +      assertSame(builderArray, builderArrayAfterAdds);, +      assertSame(builderArray, listInternalArray);, +    }, +, +++ b/android/guava/src/com/google/common/collect/ImmutableList.java, +import static com.google.common.collect.CollectPreconditions.checkNonnegative;, +import com.google.common.annotations.Beta;, +   * Returns a new builder, expecting the specified number of elements to be added., +   *, +   * <p>If {@code expectedSize} is exactly the number of elements added to the builder before {@link, +   * Builder#build} is called, the builder is likely to perform better than an unsized {@link, +   * #builder()} would have., +   *, +   * <p>It is not specified if any performance benefits apply if {@code expectedSize} is close to,, +   * but not exactly, the number of elements added to the builder., +   *, +   * @since 24.0, +   */, +  @Beta, +  public static <E> Builder<E> builderWithExpectedSize(int expectedSize) {, +    checkNonnegative(expectedSize, "expectedSize");, +    return new ImmutableList.Builder<E>(expectedSize);, +  }, +, +  /**, +++ b/android/guava-tests/test/com/google/common/collect/ImmutableListTest.java, +    @GwtIncompatible, +    public void testBuilderExactlySizedReusesArray() {, +      ImmutableList.Builder<Integer> builder = ImmutableList.builderWithExpectedSize(10);, +      Object[] builderArray = builder.contents;, +      for (int i = 0; i < 10; i++) {, +        builder.add(i);, +      }, +      Object[] builderArrayAfterAdds = builder.contents;, +      RegularImmutableList<Integer> list = (RegularImmutableList<Integer>) builder.build();, +      Object[] listInternalArray = list.array;, +      assertSame(builderArray, builderArrayAfterAdds);, +      assertSame(builderArray, listInternalArray);, +    }, +, +++ b/android/guava/src/com/google/common/collect/ImmutableList.java, +import static com.google.common.collect.CollectPreconditions.checkNonnegative;, +import com.google.common.annotations.Beta;, +   * Returns a new builder, expecting the specified number of elements to be added., +   *, +   * <p>If {@code expectedSize} is exactly the number of elements added to the builder before {@link, +   * Builder#build} is called, the builder is likely to perform better than an unsized {@link, +   * #builder()} would have., +   *, +   * <p>It is not specified if any performance benefits apply if {@code expectedSize} is close to,, +   * but not exactly, the number of elements added to the builder., +   *, +   * @since 24.0, +   */, +  @Beta, +  public static <E> Builder<E> builderWithExpectedSize(int expectedSize) {, +    checkNonnegative(expectedSize, "expectedSize");, +    return new ImmutableList.Builder<E>(expectedSize);, +  }, +, +  /**, +++ b/android/guava/src/com/google/common/collect/RegularImmutableList.java, +  @VisibleForTesting, +  final transient Object[] array;, +++ b/android/guava-tests/test/com/google/common/collect/ImmutableListTest.java, +    @GwtIncompatible, +    public void testBuilderExactlySizedReusesArray() {, +      ImmutableList.Builder<Integer> builder = ImmutableList.builderWithExpectedSize(10);, +      Object[] builderArray = builder.contents;, +      for (int i = 0; i < 10; i++) {, +        builder.add(i);, +      }, +      Object[] builderArrayAfterAdds = builder.contents;, +      RegularImmutableList<Integer> list = (RegularImmutableList<Integer>) builder.build();]