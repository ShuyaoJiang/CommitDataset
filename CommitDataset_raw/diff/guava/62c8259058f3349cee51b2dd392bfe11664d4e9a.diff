[+++ b/guava-testlib/src/com/google/common/graph/testing/TestNetworkBuilder.java, +    graph.addEdge(nodeA, nodeB, edge);, +++ b/guava-testlib/src/com/google/common/graph/testing/TestNetworkBuilder.java, +    graph.addEdge(nodeA, nodeB, edge);, +++ b/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java, +    return network.addEdge(n1, n2, e);, +++ b/guava-testlib/src/com/google/common/graph/testing/TestNetworkBuilder.java, +    graph.addEdge(nodeA, nodeB, edge);, +++ b/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java, +    return network.addEdge(n1, n2, e);, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-testlib/src/com/google/common/graph/testing/TestNetworkBuilder.java, +    graph.addEdge(nodeA, nodeB, edge);, +++ b/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java, +    return network.addEdge(n1, n2, e);, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-testlib/src/com/google/common/graph/testing/TestNetworkBuilder.java, +    graph.addEdge(nodeA, nodeB, edge);, +++ b/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java, +    return network.addEdge(n1, n2, e);, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-tests/test/com/google/common/graph/ElementOrderTest.java, +    graph.addEdge(3, 1, "i");, +    graph.addEdge(1, 4, "e");, +    graph.addEdge(4, 3, "p");, +++ b/guava-testlib/src/com/google/common/graph/testing/TestNetworkBuilder.java, +    graph.addEdge(nodeA, nodeB, edge);, +++ b/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java, +    return network.addEdge(n1, n2, e);, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-tests/test/com/google/common/graph/ElementOrderTest.java, +    graph.addEdge(3, 1, "i");, +    graph.addEdge(1, 4, "e");, +    graph.addEdge(4, 3, "p");, +++ b/guava-tests/test/com/google/common/graph/EndpointsTest.java, +      graph.addEdge(1, 2, "1-2");, +    directedNetwork.addEdge(N1, N2, E12);, +    directedNetwork.addEdge(N2, N1, E21);, +    directedNetwork.addEdge(N1, N3, E13);, +    directedNetwork.addEdge(N4, N4, E44);, +    undirectedNetwork.addEdge(N1, N2, E12);, +    undirectedNetwork.addEdge(N2, N1, E12_A); // adds parallel edge, won't be in Graph edges, +    undirectedNetwork.addEdge(N1, N3, E13);, +    undirectedNetwork.addEdge(N4, N4, E44);, +++ b/guava-testlib/src/com/google/common/graph/testing/TestNetworkBuilder.java, +    graph.addEdge(nodeA, nodeB, edge);, +++ b/guava-tests/test/com/google/common/graph/AbstractNetworkTest.java, +    return network.addEdge(n1, n2, e);, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedNetworkTest.java, +    assertTrue(network.addEdge(N1, N5, E15));, +    assertTrue(network.addEdge(N4, N1, E41));, +    assertTrue(network.addEdge(N2, N3, E23));, +++ b/guava-tests/test/com/google/common/graph/ElementOrderTest.java, +    graph.addEdge(3, 1, "i");, +    graph.addEdge(1, 4, "e");, +    graph.addEdge(4, 3, "p");, +++ b/guava-tests/test/com/google/common/graph/EndpointsTest.java, +      graph.addEdge(1, 2, "1-2");, +    directedNetwork.addEdge(N1, N2, E12);, +    directedNetwork.addEdge(N2, N1, E21);, +    directedNetwork.addEdge(N1, N3, E13);, +    directedNetwork.addEdge(N4, N4, E44);, +    undirectedNetwork.addEdge(N1, N2, E12);, +    undirectedNetwork.addEdge(N2, N1, E12_A); // adds parallel edge, won't be in Graph edges, +    undirectedNetwork.addEdge(N1, N3, E13);, +    undirectedNetwork.addEdge(N4, N4, E44);, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +    directedGraph.addEdge(N1, N2, E12);, +    directedGraph.addEdge(N1, N2, E12_A);, +    directedGraph.addEdge(N2, N1, E21);, +    directedGraph.addEdge(N1, N1, E11);, +    directedGraph.addEdge(N1, N1, E11_A);]