[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +  /**, +   * Returns {@code true} if this immutable multimap's implementation contains references to, +   * user-created objects that aren't accessible via this multimap's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +  /**, +   * Returns {@code true} if this immutable multimap's implementation contains references to, +   * user-created objects that aren't accessible via this multimap's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +  /**, +   * Returns {@code true} if this immutable map's implementation contains references to, +   * user-created objects that aren't accessible via this map's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +  /**, +   * Returns {@code true} if this immutable multimap's implementation contains references to, +   * user-created objects that aren't accessible via this multimap's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +  /**, +   * Returns {@code true} if this immutable map's implementation contains references to, +   * user-created objects that aren't accessible via this map's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava/src/com/google/common/collect/ImmutableMultimap.java, +  /**, +   * Returns {@code true} if this immutable multimap's implementation contains references to, +   * user-created objects that aren't accessible via this multimap's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, +  /**, +   * Returns {@code true} if this immutable multimap's implementation contains references to, +   * user-created objects that aren't accessible via this multimap's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +  /**, +   * Returns {@code true} if this immutable map's implementation contains references to, +   * user-created objects that aren't accessible via this map's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava/src/com/google/common/collect/ImmutableMultimap.java, +  /**, +   * Returns {@code true} if this immutable multimap's implementation contains references to, +   * user-created objects that aren't accessible via this multimap's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */, +++ b/guava/src/com/google/common/collect/ImmutableRangeSet.java, +  /**, +   * Returns {@code true} if this immutable range set's implementation contains references to, +   * user-created objects that aren't accessible via this range set's methods. This is generally, +   * used to determine whether {@code copyOf} implementations should make an explicit copy to avoid, +   * memory leaks., +   */]