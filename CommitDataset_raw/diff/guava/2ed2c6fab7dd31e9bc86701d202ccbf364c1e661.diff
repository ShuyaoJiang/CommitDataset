[+++ b/android/guava/src/com/google/common/cache/CacheBuilder.java, +import java.util.IdentityHashMap;, +import java.util.Map;, +   * Specifies that each key (not value) stored in the cache should be wrapped in a {@link, +   * WeakReference} (by default, strong references are used)., +   * comparison to determine equality of keys. Its {@link Cache#asMap} view will therefore, +   * technically violate the {@link Map} specification (in the same way that {@link IdentityHashMap}, +   * does)., +++ b/android/guava/src/com/google/common/cache/CacheBuilder.java, +import java.util.IdentityHashMap;, +import java.util.Map;, +   * Specifies that each key (not value) stored in the cache should be wrapped in a {@link, +   * WeakReference} (by default, strong references are used)., +   * comparison to determine equality of keys. Its {@link Cache#asMap} view will therefore, +   * technically violate the {@link Map} specification (in the same way that {@link IdentityHashMap}, +   * does)., +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +import java.util.IdentityHashMap;, +import java.util.Map;, +   * Specifies that each key (not value) stored in the cache should be wrapped in a {@link, +   * WeakReference} (by default, strong references are used)., +   * comparison to determine equality of keys. Its {@link Cache#asMap} view will therefore, +   * technically violate the {@link Map} specification (in the same way that {@link IdentityHashMap}, +   * does).]