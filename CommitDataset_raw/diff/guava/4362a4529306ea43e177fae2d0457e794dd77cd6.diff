[+++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractBiMapTester.java, +      assertFalse(, +          "Inverse should not contain entry " + reversed, inv.entrySet().contains(reversed));, +      assertFalse(, +          "Inverse should not contain key " + reversed.getKey(),, +          inv.containsKey(reversed.getKey()));, +      assertFalse(, +          "Inverse should not contain value " + reversed.getValue(),, +          inv.containsValue(reversed.getValue()));, +      /*, +       * TODO(cpovirk): This is a bit stronger than super.expectMissing(), which permits a <key,, +       * someOtherValue> pair., +       */, +      assertNull(, +          "Inverse should not return a mapping for key " + reversed.getKey(),, +          inv.get(reversed.getKey()));, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractBiMapTester.java, +      assertFalse(, +          "Inverse should not contain entry " + reversed, inv.entrySet().contains(reversed));, +      assertFalse(, +          "Inverse should not contain key " + reversed.getKey(),, +          inv.containsKey(reversed.getKey()));, +      assertFalse(, +          "Inverse should not contain value " + reversed.getValue(),, +          inv.containsValue(reversed.getValue()));, +      /*, +       * TODO(cpovirk): This is a bit stronger than super.expectMissing(), which permits a <key,, +       * someOtherValue> pair., +       */, +      assertNull(, +          "Inverse should not return a mapping for key " + reversed.getKey(),, +          inv.get(reversed.getKey()));, +++ b/guava/src/com/google/common/reflect/TypeResolver.java, +    static TypeVariableKey forLookup(Type t) {, +++ b/guava-testlib/src/com/google/common/collect/testing/google/AbstractBiMapTester.java, +      assertFalse(, +          "Inverse should not contain entry " + reversed, inv.entrySet().contains(reversed));, +      assertFalse(, +          "Inverse should not contain key " + reversed.getKey(),, +          inv.containsKey(reversed.getKey()));, +      assertFalse(, +          "Inverse should not contain value " + reversed.getValue(),, +          inv.containsValue(reversed.getValue()));, +      /*, +       * TODO(cpovirk): This is a bit stronger than super.expectMissing(), which permits a <key,, +       * someOtherValue> pair., +       */, +      assertNull(, +          "Inverse should not return a mapping for key " + reversed.getKey(),, +          inv.get(reversed.getKey()));, +++ b/guava/src/com/google/common/reflect/TypeResolver.java, +    static TypeVariableKey forLookup(Type t) {, +++ b/guava/src/com/google/common/reflect/TypeToken.java, +      Integer existing = map.get(type);]