[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * Returns a map with the given {@code values}, indexed by keys derived from, +   * those values. In other words, each input value produces an entry in the map, +   * whose key is the result of applying {@code keyFunction} to that value., +   * These entries appear in the same order as the input values. Example usage:, +   * <pre>   {@code, +   *, +   *   Color red = new Color("red", 255, 0, 0);, +   *   ..., +   *   ImmutableSet<Color> allColors = ImmutableSet.of(red, green, blue);, +   *, +   *   Map<String, Color> colorForName =, +   *       uniqueIndex(allColors, toStringFunction());, +   *   assertThat(colorForName).containsEntry("red", red);}</pre>, +   *, +   * <p>If your index may associate multiple values with each key, use {@link, +   * Multimaps#index(Iterable, Function) Multimaps.index}., +   * Returns a map with the given {@code values}, indexed by keys derived from, +   * those values. In other words, each input value produces an entry in the map, +   * whose key is the result of applying {@code keyFunction} to that value., +   * These entries appear in the same order as the input values. Example usage:, +   * <pre>   {@code, +   *, +   *   Color red = new Color("red", 255, 0, 0);, +   *   ..., +   *   Iterator<Color> allColors = ImmutableSet.of(red, green, blue).iterator();, +   *, +   *   Map<String, Color> colorForName =, +   *       uniqueIndex(allColors, toStringFunction());, +   *   assertThat(colorForName).containsEntry("red", red);}</pre>, +   *, +   * <p>If your index may associate multiple values with each key, use {@link, +   * Multimaps#index(Iterator, Function) Multimaps.index}., +    try {, +    } catch (IllegalArgumentException duplicateKeys) {, +      throw new IllegalArgumentException(duplicateKeys.getMessage(), +          + ". To index multiple values under a key, use Multimaps.index.");, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * Returns a map with the given {@code values}, indexed by keys derived from, +   * those values. In other words, each input value produces an entry in the map, +   * whose key is the result of applying {@code keyFunction} to that value., +   * These entries appear in the same order as the input values. Example usage:, +   * <pre>   {@code, +   *, +   *   Color red = new Color("red", 255, 0, 0);, +   *   ..., +   *   ImmutableSet<Color> allColors = ImmutableSet.of(red, green, blue);, +   *, +   *   Map<String, Color> colorForName =, +   *       uniqueIndex(allColors, toStringFunction());, +   *   assertThat(colorForName).containsEntry("red", red);}</pre>, +   *, +   * <p>If your index may associate multiple values with each key, use {@link, +   * Multimaps#index(Iterable, Function) Multimaps.index}., +   * Returns a map with the given {@code values}, indexed by keys derived from, +   * those values. In other words, each input value produces an entry in the map, +   * whose key is the result of applying {@code keyFunction} to that value., +   * These entries appear in the same order as the input values. Example usage:, +   * <pre>   {@code, +   *, +   *   Color red = new Color("red", 255, 0, 0);, +   *   ..., +   *   Iterator<Color> allColors = ImmutableSet.of(red, green, blue).iterator();, +   *, +   *   Map<String, Color> colorForName =, +   *       uniqueIndex(allColors, toStringFunction());, +   *   assertThat(colorForName).containsEntry("red", red);}</pre>, +   *, +   * <p>If your index may associate multiple values with each key, use {@link, +   * Multimaps#index(Iterator, Function) Multimaps.index}., +    try {, +    } catch (IllegalArgumentException duplicateKeys) {, +      throw new IllegalArgumentException(duplicateKeys.getMessage(), +          + ". To index multiple values under a key, use Multimaps.index.");, +    }, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/MapsTest.java, +    } catch (IllegalArgumentException expected) {, +      assertThat(expected.getMessage()).contains("Multimaps.index");, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +   * Returns a map with the given {@code values}, indexed by keys derived from, +   * those values. In other words, each input value produces an entry in the map, +   * whose key is the result of applying {@code keyFunction} to that value., +   * These entries appear in the same order as the input values. Example usage:, +   * <pre>   {@code, +   *, +   *   Color red = new Color("red", 255, 0, 0);, +   *   ..., +   *   ImmutableSet<Color> allColors = ImmutableSet.of(red, green, blue);, +   *, +   *   Map<String, Color> colorForName =, +   *       uniqueIndex(allColors, toStringFunction());, +   *   assertThat(colorForName).containsEntry("red", red);}</pre>, +   *, +   * <p>If your index may associate multiple values with each key, use {@link, +   * Multimaps#index(Iterable, Function) Multimaps.index}., +   * Returns a map with the given {@code values}, indexed by keys derived from, +   * those values. In other words, each input value produces an entry in the map, +   * whose key is the result of applying {@code keyFunction} to that value., +   * These entries appear in the same order as the input values. Example usage:]