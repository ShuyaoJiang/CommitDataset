[+++ b/android/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +          mapEntry("one", collectionOf(10000)),, +          mapEntry("two", collectionOf(-2000)),, +          mapEntry("three", collectionOf(300)),, +          mapEntry("four", collectionOf(-40)),, +          mapEntry("five", collectionOf(5)));, +    }, +, +    // javac7 can't infer the type parameters correctly in samples(), +    private static Collection<Integer> collectionOf(int item) {, +      return ImmutableSet.of(item);, +++ b/android/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +          mapEntry("one", collectionOf(10000)),, +          mapEntry("two", collectionOf(-2000)),, +          mapEntry("three", collectionOf(300)),, +          mapEntry("four", collectionOf(-40)),, +          mapEntry("five", collectionOf(5)));, +    }, +, +    // javac7 can't infer the type parameters correctly in samples(), +    private static Collection<Integer> collectionOf(int item) {, +      return ImmutableSet.of(item);, +++ b/android/guava-tests/benchmark/com/google/common/collect/MapsMemoryBenchmark.java, +          Iterables.<MapsImplEnum>concat(, +++ b/android/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +          mapEntry("one", collectionOf(10000)),, +          mapEntry("two", collectionOf(-2000)),, +          mapEntry("three", collectionOf(300)),, +          mapEntry("four", collectionOf(-40)),, +          mapEntry("five", collectionOf(5)));, +    }, +, +    // javac7 can't infer the type parameters correctly in samples(), +    private static Collection<Integer> collectionOf(int item) {, +      return ImmutableSet.of(item);, +++ b/android/guava-tests/benchmark/com/google/common/collect/MapsMemoryBenchmark.java, +          Iterables.<MapsImplEnum>concat(, +++ b/android/guava-tests/test/com/google/common/collect/TreeRangeMapTest.java, +          return Range.<Integer>rangeLexOrdering().onKeys(), +          return Range.<Integer>rangeLexOrdering().onKeys(), +          return Range.<Integer>rangeLexOrdering().reverse().onKeys(), +          return Range.<Integer>rangeLexOrdering().reverse().onKeys(), +++ b/android/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +          mapEntry("one", collectionOf(10000)),, +          mapEntry("two", collectionOf(-2000)),, +          mapEntry("three", collectionOf(300)),, +          mapEntry("four", collectionOf(-40)),, +          mapEntry("five", collectionOf(5)));, +    }, +, +    // javac7 can't infer the type parameters correctly in samples(), +    private static Collection<Integer> collectionOf(int item) {, +      return ImmutableSet.of(item);, +++ b/android/guava-tests/benchmark/com/google/common/collect/MapsMemoryBenchmark.java, +          Iterables.<MapsImplEnum>concat(, +++ b/android/guava-tests/test/com/google/common/collect/TreeRangeMapTest.java, +          return Range.<Integer>rangeLexOrdering().onKeys(), +          return Range.<Integer>rangeLexOrdering().onKeys(), +          return Range.<Integer>rangeLexOrdering().reverse().onKeys(), +          return Range.<Integer>rangeLexOrdering().reverse().onKeys(), +++ b/android/guava/src/com/google/common/collect/ImmutableRangeMap.java, +      Collections.sort(entries, Range.<K>rangeLexOrdering().onKeys());, +        new RegularImmutableSortedSet<Range<K>>(ranges, Range.<K>rangeLexOrdering());, +            ranges.reverse(), Range.<K>rangeLexOrdering().reverse());, +++ b/android/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +          mapEntry("one", collectionOf(10000)),, +          mapEntry("two", collectionOf(-2000)),, +          mapEntry("three", collectionOf(300)),, +          mapEntry("four", collectionOf(-40)),, +          mapEntry("five", collectionOf(5)));, +    }, +, +    // javac7 can't infer the type parameters correctly in samples(), +    private static Collection<Integer> collectionOf(int item) {, +      return ImmutableSet.of(item);, +++ b/android/guava-tests/benchmark/com/google/common/collect/MapsMemoryBenchmark.java, +          Iterables.<MapsImplEnum>concat(, +++ b/android/guava-tests/test/com/google/common/collect/TreeRangeMapTest.java, +          return Range.<Integer>rangeLexOrdering().onKeys(), +          return Range.<Integer>rangeLexOrdering().onKeys(), +          return Range.<Integer>rangeLexOrdering().reverse().onKeys(), +          return Range.<Integer>rangeLexOrdering().reverse().onKeys(), +++ b/android/guava/src/com/google/common/collect/ImmutableRangeMap.java, +      Collections.sort(entries, Range.<K>rangeLexOrdering().onKeys());, +        new RegularImmutableSortedSet<Range<K>>(ranges, Range.<K>rangeLexOrdering());, +            ranges.reverse(), Range.<K>rangeLexOrdering().reverse());, +++ b/android/guava/src/com/google/common/collect/ImmutableRangeSet.java, +    return new RegularImmutableSortedSet<Range<C>>(ranges, Range.<C>rangeLexOrdering());, +        ranges.reverse(), Range.<C>rangeLexOrdering().reverse());, +      Collections.sort(ranges, Range.<C>rangeLexOrdering());, +++ b/android/guava-testlib/src/com/google/common/collect/testing/google/MapGenerators.java, +          mapEntry("one", collectionOf(10000)),, +          mapEntry("two", collectionOf(-2000)),, +          mapEntry("three", collectionOf(300)),, +          mapEntry("four", collectionOf(-40)),, +          mapEntry("five", collectionOf(5)));, +    }, +, +    // javac7 can't infer the type parameters correctly in samples(), +    private static Collection<Integer> collectionOf(int item) {]