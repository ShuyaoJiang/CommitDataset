[+++ b/guava-tests/test/com/google/common/hash/BloomFilterTest.java, +    assertFalse(bf.apply(new Object()));, +      assertTrue(bf.apply(o));, +++ b/guava-tests/test/com/google/common/hash/BloomFilterTest.java, +    assertFalse(bf.apply(new Object()));, +      assertTrue(bf.apply(o));, +++ b/guava/src/com/google/common/hash/BloomFilter.java, +import com.google.common.base.Predicate;, +public final class BloomFilter<T> implements Predicate<T>, Serializable {, +   * Equivalent to {@link #mightContain}; provided only to satisfy the {@link Predicate} interface., +   * When using a reference of type {@code BloomFilter}, always invoke {@link #mightContain}, +   * directly instead., +   */, +  @Override public boolean apply(T input) {, +    return mightContain(input);, +  }, +, +  /**]