[+++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +    String graphString = graph.toString();, +    assertThat(graphString).contains("isDirected: " + graph.isDirected());, +    assertThat(graphString).contains("allowsParallelEdges: " + graph.allowsParallelEdges());, +    assertThat(graphString).contains("allowsSelfLoops: " + graph.allowsSelfLoops());, +, +    int nodeStart = graphString.indexOf("nodes:");, +    int edgeStart = graphString.indexOf("edges:");, +    String nodeString = graphString.substring(nodeStart, edgeStart);, +    String edgeString = graphString.substring(edgeStart);, +, +      // TODO(b/27817069): Consider verifying the edge's incident nodes in the string., +      assertThat(edgeString).contains(edge);, +, +      assertThat(nodeString).contains(node.toString());, +, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +    String graphString = graph.toString();, +    assertThat(graphString).contains("isDirected: " + graph.isDirected());, +    assertThat(graphString).contains("allowsParallelEdges: " + graph.allowsParallelEdges());, +    assertThat(graphString).contains("allowsSelfLoops: " + graph.allowsSelfLoops());, +, +    int nodeStart = graphString.indexOf("nodes:");, +    int edgeStart = graphString.indexOf("edges:");, +    String nodeString = graphString.substring(nodeStart, edgeStart);, +    String edgeString = graphString.substring(edgeStart);, +, +      // TODO(b/27817069): Consider verifying the edge's incident nodes in the string., +      assertThat(edgeString).contains(edge);, +, +      assertThat(nodeString).contains(node.toString());, +, +++ b/guava-tests/test/com/google/common/graph/AbstractUndirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +    String graphString = graph.toString();, +    assertThat(graphString).contains("isDirected: " + graph.isDirected());, +    assertThat(graphString).contains("allowsParallelEdges: " + graph.allowsParallelEdges());, +    assertThat(graphString).contains("allowsSelfLoops: " + graph.allowsSelfLoops());, +, +    int nodeStart = graphString.indexOf("nodes:");, +    int edgeStart = graphString.indexOf("edges:");, +    String nodeString = graphString.substring(nodeStart, edgeStart);, +    String edgeString = graphString.substring(edgeStart);, +, +      // TODO(b/27817069): Consider verifying the edge's incident nodes in the string., +      assertThat(edgeString).contains(edge);, +, +      assertThat(nodeString).contains(node.toString());, +, +++ b/guava-tests/test/com/google/common/graph/AbstractUndirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +    String graphString = graph.toString();, +    assertThat(graphString).contains("isDirected: " + graph.isDirected());, +    assertThat(graphString).contains("allowsParallelEdges: " + graph.allowsParallelEdges());, +    assertThat(graphString).contains("allowsSelfLoops: " + graph.allowsSelfLoops());, +, +    int nodeStart = graphString.indexOf("nodes:");, +    int edgeStart = graphString.indexOf("edges:");, +    String nodeString = graphString.substring(nodeStart, edgeStart);, +    String edgeString = graphString.substring(edgeStart);, +, +      // TODO(b/27817069): Consider verifying the edge's incident nodes in the string., +      assertThat(edgeString).contains(edge);, +, +      assertThat(nodeString).contains(node.toString());, +, +++ b/guava-tests/test/com/google/common/graph/AbstractUndirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultigraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +    String graphString = graph.toString();, +    assertThat(graphString).contains("isDirected: " + graph.isDirected());, +    assertThat(graphString).contains("allowsParallelEdges: " + graph.allowsParallelEdges());, +    assertThat(graphString).contains("allowsSelfLoops: " + graph.allowsSelfLoops());, +, +    int nodeStart = graphString.indexOf("nodes:");, +    int edgeStart = graphString.indexOf("edges:");, +    String nodeString = graphString.substring(nodeStart, edgeStart);, +    String edgeString = graphString.substring(edgeStart);, +, +      // TODO(b/27817069): Consider verifying the edge's incident nodes in the string., +      assertThat(edgeString).contains(edge);, +, +      assertThat(nodeString).contains(node.toString());, +, +++ b/guava-tests/test/com/google/common/graph/AbstractUndirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultigraphTest.java, +++ b/guava-tests/test/com/google/common/graph/ConfigurableUndirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +    String graphString = graph.toString();, +    assertThat(graphString).contains("isDirected: " + graph.isDirected());]