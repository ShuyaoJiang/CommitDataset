[+++ b/guava-tests/test/com/google/common/graph/GraphEqualsTest.java, +, +import com.google.common.testing.EqualsTester;, +    new EqualsTester().addEqualityGroup(graph).addEqualityGroup(g2).testEquals();, +    new EqualsTester().addEqualityGroup(graph).addEqualityGroup(g2).testEquals();, +    new EqualsTester().addEqualityGroup(graph).addEqualityGroup(g2).testEquals();, +    new EqualsTester().addEqualityGroup(graph).addEqualityGroup(g2).testEquals();, +    new EqualsTester().addEqualityGroup(graph, g2).testEquals();, +    new EqualsTester().addEqualityGroup(g1, g2).testEquals();, +  }, +, +  @Test, +  public void equals_edgeDirectionsDiffer() {, +    graph.addEdge(E12, N1, N2);, +, +    Graph<Integer, String> g2 = createGraph();, +    g2.addEdge(E12, N2, N1);, +, +    switch (graphType) {, +      case UNDIRECTED:, +        new EqualsTester().addEqualityGroup(graph, g2).testEquals();, +        break;, +      case DIRECTED:, +        new EqualsTester().addEqualityGroup(graph).addEqualityGroup(g2).testEquals();, +        break;, +      default:, +        throw new IllegalStateException("Unexpected graph type: " + graphType);, +    }]