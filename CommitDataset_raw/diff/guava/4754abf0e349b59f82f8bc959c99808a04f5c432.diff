[+++ b/guava-testlib/test/com/google/common/testing/FakeTickerTest.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          executorService.submit(, +              new Callable<Void>() {, +++ b/guava-testlib/test/com/google/common/testing/FakeTickerTest.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          executorService.submit(, +              new Callable<Void>() {, +++ b/guava-tests/benchmark/com/google/common/util/concurrent/ExecutionListBenchmark.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          executorService.submit(, +              new Runnable() {, +                @Override, +                public void run() {, +        @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +        Future<?> possiblyIgnoredError = executorService.submit(addTask);, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError = executorService.submit(executeTask);, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError = executorService.submit(executeTask);, +        @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +        Future<?> possiblyIgnoredError1 = executorService.submit(addTask);, +++ b/guava-testlib/test/com/google/common/testing/FakeTickerTest.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          executorService.submit(, +              new Callable<Void>() {, +++ b/guava-tests/benchmark/com/google/common/util/concurrent/ExecutionListBenchmark.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          executorService.submit(, +              new Runnable() {, +                @Override, +                public void run() {, +        @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +        Future<?> possiblyIgnoredError = executorService.submit(addTask);, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError = executorService.submit(executeTask);, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError = executorService.submit(executeTask);, +        @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +        Future<?> possiblyIgnoredError1 = executorService.submit(addTask);, +++ b/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          threadPool.submit(, +              new Runnable() {, +                @Override, +                public void run() {, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          threadPool.submit(, +              new Runnable() {, +                @Override, +                public void run() {, +++ b/guava-testlib/test/com/google/common/testing/FakeTickerTest.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          executorService.submit(, +              new Callable<Void>() {, +++ b/guava-tests/benchmark/com/google/common/util/concurrent/ExecutionListBenchmark.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          executorService.submit(, +              new Runnable() {, +                @Override, +                public void run() {, +        @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +        Future<?> possiblyIgnoredError = executorService.submit(addTask);, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError = executorService.submit(executeTask);, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError = executorService.submit(executeTask);, +        @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +        Future<?> possiblyIgnoredError1 = executorService.submit(addTask);, +++ b/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +import java.util.concurrent.Future;, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          threadPool.submit(, +              new Runnable() {, +                @Override, +                public void run() {, +      @SuppressWarnings({"unused", "nullness"}) // go/futurereturn-lsc, +      Future<?> possiblyIgnoredError =, +          threadPool.submit(, +              new Runnable() {, +                @Override, +                public void run() {]