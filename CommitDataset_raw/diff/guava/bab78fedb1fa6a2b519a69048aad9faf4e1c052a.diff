[+++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java, +    static final ImmediateSuccessfulFuture<Object> NULL =, +        new ImmediateSuccessfulFuture<Object>(null);, +    if (value == null) {, +      // This cast is safe because null is assignable to V for all V (i.e. it is covariant), +      @SuppressWarnings({"unchecked", "rawtypes"}), +      ListenableFuture<V> typedNull = (ListenableFuture) ImmediateSuccessfulFuture.NULL;, +      return typedNull;, +    }, +++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/Futures.java, +    static final ImmediateSuccessfulFuture<Object> NULL =, +        new ImmediateSuccessfulFuture<Object>(null);, +    if (value == null) {, +      // This cast is safe because null is assignable to V for all V (i.e. it is covariant), +      @SuppressWarnings({"unchecked", "rawtypes"}), +      ListenableFuture<V> typedNull = (ListenableFuture) ImmediateSuccessfulFuture.NULL;, +      return typedNull;, +    }, +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +    static final ImmediateSuccessfulFuture<Object> NULL =, +        new ImmediateSuccessfulFuture<Object>(null);, +    if (value == null) {, +      // This cast is safe because null is assignable to V for all V (i.e. it is covariant), +      @SuppressWarnings({"unchecked", "rawtypes"}), +      ListenableFuture<V> typedNull = (ListenableFuture) ImmediateSuccessfulFuture.NULL;, +      return typedNull;, +    }]