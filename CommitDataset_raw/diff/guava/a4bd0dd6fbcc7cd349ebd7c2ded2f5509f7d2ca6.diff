[+++ b/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java, +  @Override public <T> HashCode hashObject(T instance, Funnel<? super T> funnel) {, +    return newHasher().putObject(instance, funnel).hash();, +  }, +, +++ b/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java, +  @Override public <T> HashCode hashObject(T instance, Funnel<? super T> funnel) {, +    return newHasher().putObject(instance, funnel).hash();, +  }, +, +++ b/guava/src/com/google/common/hash/AbstractStreamingHashFunction.java, +  @Override public <T> HashCode hashObject(T instance, Funnel<? super T> funnel) {, +    return newHasher().putObject(instance, funnel).hash();, +  }, +, +++ b/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java, +  @Override public <T> HashCode hashObject(T instance, Funnel<? super T> funnel) {, +    return newHasher().putObject(instance, funnel).hash();, +  }, +, +++ b/guava/src/com/google/common/hash/AbstractStreamingHashFunction.java, +  @Override public <T> HashCode hashObject(T instance, Funnel<? super T> funnel) {, +    return newHasher().putObject(instance, funnel).hash();, +  }, +, +++ b/guava/src/com/google/common/hash/HashFunction.java, +   * Shortcut for {@code newHasher().putObject(instance, funnel).hash()}. The implementation, +   * <i>might</i> perform better than its longhand equivalent, but should not perform worse., +   *, +   * @since 14.0, +   */, +  <T> HashCode hashObject(T instance, Funnel<? super T> funnel);, +, +  /**]