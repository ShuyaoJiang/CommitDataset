[+++ b/android/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +, +    String futureToString = toString();, +    // It's confusing to see a completed future in a timeout message; if isDone() returns false,, +    // then we know it must have given a pending toString value earlier. If not, then the future, +    // completed after the timeout expired, and the message might be success., +    if (isDone()) {, +          "Waited " + timeout + " " + Ascii.toLowerCase(unit.toString()), +              + " but future completed as timeout expired");, +    }, +    throw new TimeoutException(, +        "Waited " + timeout + " " + Ascii.toLowerCase(unit.toString()) + " for " + futureToString);, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +, +    String futureToString = toString();, +    // It's confusing to see a completed future in a timeout message; if isDone() returns false,, +    // then we know it must have given a pending toString value earlier. If not, then the future, +    // completed after the timeout expired, and the message might be success., +    if (isDone()) {, +          "Waited " + timeout + " " + Ascii.toLowerCase(unit.toString()), +              + " but future completed as timeout expired");, +    }, +    throw new TimeoutException(, +        "Waited " + timeout + " " + Ascii.toLowerCase(unit.toString()) + " for " + futureToString);, +++ b/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +, +    String futureToString = toString();, +    // It's confusing to see a completed future in a timeout message; if isDone() returns false,, +    // then we know it must have given a pending toString value earlier. If not, then the future, +    // completed after the timeout expired, and the message might be success., +    if (isDone()) {, +          "Waited " + timeout + " " + Ascii.toLowerCase(unit.toString()), +              + " but future completed as timeout expired");, +    }, +    throw new TimeoutException(, +        "Waited " + timeout + " " + Ascii.toLowerCase(unit.toString()) + " for " + futureToString);]