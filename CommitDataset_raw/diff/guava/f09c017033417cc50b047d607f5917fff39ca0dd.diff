[+++ b/android/guava-tests/benchmark/com/google/common/collect/BinaryTreeTraverserBenchmark.java, +++ b/android/guava-tests/benchmark/com/google/common/collect/BinaryTreeTraverserBenchmark.java, +++ b/android/guava-tests/test/com/google/common/base/StringsTest.java, +        .matches("boiler <.*> plate");, +++ b/android/guava-tests/benchmark/com/google/common/collect/BinaryTreeTraverserBenchmark.java, +++ b/android/guava-tests/test/com/google/common/base/StringsTest.java, +        .matches("boiler <.*> plate");, +++ b/android/guava-tests/test/com/google/common/collect/CompactHashMapTest.java, +    suite.addTest(, +        MapTestSuiteBuilder.using(, +                new TestStringMapGenerator() {, +                CollectionSize.ANY,, +                MapFeature.GENERAL_PURPOSE,, +                MapFeature.ALLOWS_NULL_KEYS,, +                MapFeature.ALLOWS_NULL_VALUES,, +                CollectionFeature.SERIALIZABLE,, +++ b/android/guava-tests/benchmark/com/google/common/collect/BinaryTreeTraverserBenchmark.java, +++ b/android/guava-tests/test/com/google/common/base/StringsTest.java, +        .matches("boiler <.*> plate");, +++ b/android/guava-tests/test/com/google/common/collect/CompactHashMapTest.java, +    suite.addTest(, +        MapTestSuiteBuilder.using(, +                new TestStringMapGenerator() {, +                CollectionSize.ANY,, +                MapFeature.GENERAL_PURPOSE,, +                MapFeature.ALLOWS_NULL_KEYS,, +                MapFeature.ALLOWS_NULL_VALUES,, +                CollectionFeature.SERIALIZABLE,, +++ b/android/guava-tests/test/com/google/common/collect/CompactHashSetTest.java, +    List<Feature<?>> allFeatures =, +        Arrays.<Feature<?>>asList(, +    suite.addTest(, +        SetTestSuiteBuilder.using(, +                new TestStringSetGenerator() {, +                  @Override, +                  protected Set<String> create(String[] elements) {, +                }), +            .named("CompactHashSet"), +    suite.addTest(, +        SetTestSuiteBuilder.using(, +                new TestStringSetGenerator() {, +                  @Override, +                  protected Set<String> create(String[] elements) {, +                }), +            .named("CompactHashSet#TrimToSize"), +++ b/android/guava-tests/benchmark/com/google/common/collect/BinaryTreeTraverserBenchmark.java, +++ b/android/guava-tests/test/com/google/common/base/StringsTest.java, +        .matches("boiler <.*> plate");, +++ b/android/guava-tests/test/com/google/common/collect/CompactHashMapTest.java, +    suite.addTest(, +        MapTestSuiteBuilder.using(, +                new TestStringMapGenerator() {, +                CollectionSize.ANY,, +                MapFeature.GENERAL_PURPOSE,, +                MapFeature.ALLOWS_NULL_KEYS,, +                MapFeature.ALLOWS_NULL_VALUES,, +                CollectionFeature.SERIALIZABLE,, +++ b/android/guava-tests/test/com/google/common/collect/CompactHashSetTest.java, +    List<Feature<?>> allFeatures =, +        Arrays.<Feature<?>>asList(, +    suite.addTest(, +        SetTestSuiteBuilder.using(, +                new TestStringSetGenerator() {, +                  @Override, +                  protected Set<String> create(String[] elements) {, +                }), +            .named("CompactHashSet"), +    suite.addTest(, +        SetTestSuiteBuilder.using(, +                new TestStringSetGenerator() {, +                  @Override, +                  protected Set<String> create(String[] elements) {, +                }), +            .named("CompactHashSet#TrimToSize"), +++ b/android/guava-tests/test/com/google/common/collect/CompactLinkedHashMapTest.java, +    suite.addTest(, +        MapTestSuiteBuilder.using(, +                new TestStringMapGenerator() {, +                }), +            .named("CompactLinkedHashMap"), +            .withFeatures(, +                CollectionSize.ANY,, +                CollectionFeature.KNOWN_ORDER), +            .createTestSuite());, +  private void testHasMapEntriesInOrder(Map<?, ?> map, Object... alternatingKeysAndValues) {, +      Entry<Object, Object> expectedEntry = Maps.immutableEntry(expectedKey, expectedValue);, +++ b/android/guava-tests/benchmark/com/google/common/collect/BinaryTreeTraverserBenchmark.java, +++ b/android/guava-tests/test/com/google/common/base/StringsTest.java, +        .matches("boiler <.*> plate");, +++ b/android/guava-tests/test/com/google/common/collect/CompactHashMapTest.java, +    suite.addTest(, +        MapTestSuiteBuilder.using(, +                new TestStringMapGenerator() {, +                CollectionSize.ANY,, +                MapFeature.GENERAL_PURPOSE,, +                MapFeature.ALLOWS_NULL_KEYS,, +                MapFeature.ALLOWS_NULL_VALUES,, +                CollectionFeature.SERIALIZABLE,, +++ b/android/guava-tests/test/com/google/common/collect/CompactHashSetTest.java, +    List<Feature<?>> allFeatures =]