[+++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +++ b/guava/src/com/google/common/graph/ConfigurableMutableGraph.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +++ b/guava/src/com/google/common/graph/ConfigurableMutableGraph.java, +++ b/guava/src/com/google/common/graph/GraphBuilder.java, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +++ b/guava/src/com/google/common/graph/ConfigurableMutableGraph.java, +++ b/guava/src/com/google/common/graph/GraphBuilder.java, +++ b/guava/src/com/google/common/graph/Graphs.java, +    // TODO(user): Consider dropping this restriction. Would this do what users expect?, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +++ b/guava/src/com/google/common/graph/ConfigurableMutableGraph.java, +++ b/guava/src/com/google/common/graph/GraphBuilder.java, +++ b/guava/src/com/google/common/graph/Graphs.java, +    // TODO(user): Consider dropping this restriction. Would this do what users expect?, +++ b/guava/src/com/google/common/graph/ImmutableGraph.java, +    // TODO(user): Consider dropping this restriction. Would this do what users expect?, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +++ b/guava/src/com/google/common/graph/ConfigurableMutableGraph.java, +++ b/guava/src/com/google/common/graph/GraphBuilder.java, +++ b/guava/src/com/google/common/graph/Graphs.java, +    // TODO(user): Consider dropping this restriction. Would this do what users expect?, +++ b/guava/src/com/google/common/graph/ImmutableGraph.java, +    // TODO(user): Consider dropping this restriction. Would this do what users expect?, +++ b/guava/src/com/google/common/graph/MutableGraph.java, +   * Adds {@code node} to this graph if it is not already present., +   * Adds an (implicit) edge connecting {@code nodeA} to {@code nodeB} to this graph, if such an, +   * edge is not already present., +   * Removes the edge connecting {@code nodeA} to {@code nodeB} from this graph, if it is present., +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +++ b/guava-tests/test/com/google/common/graph/GraphsTest.java, +++ b/guava/src/com/google/common/graph/AbstractGraph.java, +++ b/guava/src/com/google/common/graph/ConfigurableMutableGraph.java, +++ b/guava/src/com/google/common/graph/GraphBuilder.java, +++ b/guava/src/com/google/common/graph/Graphs.java, +    // TODO(user): Consider dropping this restriction. Would this do what users expect?, +++ b/guava/src/com/google/common/graph/ImmutableGraph.java, +    // TODO(user): Consider dropping this restriction. Would this do what users expect?, +++ b/guava/src/com/google/common/graph/MutableGraph.java, +   * Adds {@code node} to this graph if it is not already present., +   * Adds an (implicit) edge connecting {@code nodeA} to {@code nodeB} to this graph, if such an, +   * edge is not already present., +   * Removes the edge connecting {@code nodeA} to {@code nodeB} from this graph, if it is present., +++ b/guava/src/com/google/common/graph/MutableNetwork.java, +   * Adds {@code node} to this graph if it is not already present., +   * <p>If {@code edge} already connects {@code nodeA} to {@code nodeB} in this graph, +   * (in the specified order if order is significant, as for directed graphs, else in any order),, +   * then this method will have no effect and will return {@code false}., +   *, +   * @throws IllegalArgumentException if {@code edge} already exists and does not connect, +   *     {@code nodeA} to {@code nodeB}, or if the introduction of the edge would violate]