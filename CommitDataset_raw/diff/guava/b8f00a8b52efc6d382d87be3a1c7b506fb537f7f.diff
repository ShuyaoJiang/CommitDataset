[+++ b/android/guava-tests/test/com/google/common/util/concurrent/AbstractFutureTest.java, +  public void testToString_allUnique() throws Exception {, +  }, +  public void testToString_notDone() throws Exception {, +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[cause=\\[Because this test isn't done\\]\\]\\]");, +  }, +, +  public void testToString_completed() throws Exception {, +    assertThat(testFuture3.toString()), +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[setFuture=", +                + "\\[[^\\[]+\\[status=PENDING, info=\\[cause=\\[Someday...\\]\\]\\]\\]\\]\\]");, +    assertThat(testFuture3.toString()), +        .matches("[^\\[]+\\[status=SUCCESS, result=\\[result string\\]\\]");, +  }, +  public void testToString_cancelled() throws Exception {, +    assertThat(Futures.immediateCancelledFuture().toString()), +        .matches("[^\\[]+\\[status=CANCELLED\\]");, +  }, +, +  public void testToString_failed() {, +    assertThat(Futures.immediateFailedFuture(new RuntimeException("foo")).toString()), +        .matches("[^\\[]+\\[status=FAILURE, cause=\\[java.lang.RuntimeException: foo\\]\\]");, +  }, +, +  public void testToString_misbehaving() throws Exception {, +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[Exception thrown from implementation: ", +                + "class java.lang.RuntimeException\\]\\]");, +++ b/android/guava-tests/test/com/google/common/util/concurrent/AbstractFutureTest.java, +  public void testToString_allUnique() throws Exception {, +  }, +  public void testToString_notDone() throws Exception {, +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[cause=\\[Because this test isn't done\\]\\]\\]");, +  }, +, +  public void testToString_completed() throws Exception {, +    assertThat(testFuture3.toString()), +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[setFuture=", +                + "\\[[^\\[]+\\[status=PENDING, info=\\[cause=\\[Someday...\\]\\]\\]\\]\\]\\]");, +    assertThat(testFuture3.toString()), +        .matches("[^\\[]+\\[status=SUCCESS, result=\\[result string\\]\\]");, +  }, +  public void testToString_cancelled() throws Exception {, +    assertThat(Futures.immediateCancelledFuture().toString()), +        .matches("[^\\[]+\\[status=CANCELLED\\]");, +  }, +, +  public void testToString_failed() {, +    assertThat(Futures.immediateFailedFuture(new RuntimeException("foo")).toString()), +        .matches("[^\\[]+\\[status=FAILURE, cause=\\[java.lang.RuntimeException: foo\\]\\]");, +  }, +, +  public void testToString_misbehaving() throws Exception {, +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[Exception thrown from implementation: ", +                + "class java.lang.RuntimeException\\]\\]");, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +      V value = getDone(this);, +      builder.append("SUCCESS, result=[").append(value).append("]");, +      builder.append("CANCELLED"); // shouldn't be reachable, +++ b/android/guava-tests/test/com/google/common/util/concurrent/AbstractFutureTest.java, +  public void testToString_allUnique() throws Exception {, +  }, +  public void testToString_notDone() throws Exception {, +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[cause=\\[Because this test isn't done\\]\\]\\]");, +  }, +, +  public void testToString_completed() throws Exception {, +    assertThat(testFuture3.toString()), +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[setFuture=", +                + "\\[[^\\[]+\\[status=PENDING, info=\\[cause=\\[Someday...\\]\\]\\]\\]\\]\\]");, +    assertThat(testFuture3.toString()), +        .matches("[^\\[]+\\[status=SUCCESS, result=\\[result string\\]\\]");, +  }, +  public void testToString_cancelled() throws Exception {, +    assertThat(Futures.immediateCancelledFuture().toString()), +        .matches("[^\\[]+\\[status=CANCELLED\\]");, +  }, +, +  public void testToString_failed() {, +    assertThat(Futures.immediateFailedFuture(new RuntimeException("foo")).toString()), +        .matches("[^\\[]+\\[status=FAILURE, cause=\\[java.lang.RuntimeException: foo\\]\\]");, +  }, +, +  public void testToString_misbehaving() throws Exception {, +        .matches(, +            "[^\\[]+\\[status=PENDING, info=\\[Exception thrown from implementation: ", +                + "class java.lang.RuntimeException\\]\\]");, +++ b/android/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +      V value = getDone(this);, +      builder.append("SUCCESS, result=[").append(value).append("]");, +      builder.append("CANCELLED"); // shouldn't be reachable, +++ b/guava-tests/test/com/google/common/util/concurrent/AbstractFutureTest.java, +  public void testToString_allUnique() throws Exception {]