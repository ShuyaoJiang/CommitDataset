[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +public abstract class ImmutableMap<K, V> extends Maps.ImprovedAbstractMap<K, V>, +    implements Serializable {, +    return value != null && super.containsValue(value);, +    return new ForwardingImmutableSet<K>(super.keySet()) {};, +  ImmutableCollection<V> createValues() {, +    return new ForwardingImmutableCollection<V>(super.values());, +  }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +public abstract class ImmutableMap<K, V> extends Maps.ImprovedAbstractMap<K, V>, +    implements Serializable {, +    return value != null && super.containsValue(value);, +    return new ForwardingImmutableSet<K>(super.keySet()) {};, +  ImmutableCollection<V> createValues() {, +    return new ForwardingImmutableCollection<V>(super.values());, +  }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapEntrySet.java, +import static com.google.common.base.Preconditions.checkNotNull;, +, +  final ImmutableMap<K, V> map;, +  ImmutableMapEntrySet(ImmutableMap<K, V> map) {, +    this.map = checkNotNull(map);, +  }, +    return map.size();, +      V value = map.get(entry.getKey());, +    return map.isPartialView();, +  }, +  , +  abstract static class IndexedEntrySet<K, V> extends ImmutableMapEntrySet<K, V> {, +    IndexedEntrySet(ImmutableMap<K, V> map) {, +      super(map);, +    }, +, +    abstract Entry<K, V> getEntry(int index);, +    , +    @Override public int hashCode() {, +      return map.hashCode();, +    }, +, +    @Override, +    public UnmodifiableIterator<Entry<K, V>> iterator() {, +      return asList().iterator();, +    }, +, +    @Override, +    ImmutableList<Entry<K, V>> createAsList() {, +      return new ImmutableAsList<Entry<K, V>>() {, +        @Override, +        public Entry<K, V> get(int index) {, +          return getEntry(index);, +        }, +, +        @Override, +        ImmutableCollection<Entry<K, V>> delegateCollection() {, +          return IndexedEntrySet.this;, +        }, +      };, +    }, +  }, +  , +  static final class ArrayEntrySet<K, V> extends IndexedEntrySet<K, V> {, +    private final Entry<K, V>[] entries;, +, +    ArrayEntrySet(ImmutableMap<K, V> map, Entry<K, V>[] entries) {, +      super(map);, +      this.entries = entries;, +    }, +, +    @Override, +    Entry<K, V> getEntry(int index) {, +      return entries[index];, +    }, +, +    @Override, +    ImmutableList<Entry<K, V>> createAsList() {, +      return new RegularImmutableAsList<Entry<K, V>>(this, entries);, +    }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +public abstract class ImmutableMap<K, V> extends Maps.ImprovedAbstractMap<K, V>, +    implements Serializable {, +    return value != null && super.containsValue(value);, +    return new ForwardingImmutableSet<K>(super.keySet()) {};, +  ImmutableCollection<V> createValues() {, +    return new ForwardingImmutableCollection<V>(super.values());, +  }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapEntrySet.java, +import static com.google.common.base.Preconditions.checkNotNull;, +, +  final ImmutableMap<K, V> map;, +  ImmutableMapEntrySet(ImmutableMap<K, V> map) {, +    this.map = checkNotNull(map);, +  }, +    return map.size();, +      V value = map.get(entry.getKey());, +    return map.isPartialView();, +  }, +  , +  abstract static class IndexedEntrySet<K, V> extends ImmutableMapEntrySet<K, V> {, +    IndexedEntrySet(ImmutableMap<K, V> map) {, +      super(map);]