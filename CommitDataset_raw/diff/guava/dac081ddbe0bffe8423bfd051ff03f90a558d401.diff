[+++ b/guava-tests/test/com/google/common/collect/SynchronizedNavigableSetTest.java, +import com.google.common.collect.testing.TestStringSortedSetGenerator;, +import junit.framework.TestCase;, +public class SynchronizedNavigableSetTest extends TestCase {, +  private static final Object MUTEX = new Integer(1); // something Serializable, +  , +  protected <E> NavigableSet<E> create() {, +        new TreeSet<E>((Comparator<E>) Ordering.natural().nullsFirst()), MUTEX);, +        Synchronized.navigableSet(inner, MUTEX);, +        NavigableSetTestSuiteBuilder.using(new TestStringSortedSetGenerator() {, +          @Override protected NavigableSet<String> create(String[] elements) {, +            TestSet<String> inner = new TestSet<String>(innermost, MUTEX);, +                Synchronized.navigableSet(inner, MUTEX);, +                CollectionFeature.GENERAL_PURPOSE, CollectionFeature.SERIALIZABLE), +            .createTestSuite());, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) descendingSet).mutex);, +    assertSame(MUTEX, ((SynchronizedSortedSet<String>) headSet).mutex);, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) headSet).mutex);, +    assertSame(MUTEX, ((SynchronizedSortedSet<String>) subSet).mutex);, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) subSet).mutex);, +    assertSame(MUTEX, ((SynchronizedSortedSet<String>) tailSet).mutex);, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) tailSet).mutex);, +++ b/guava-tests/test/com/google/common/collect/SynchronizedNavigableSetTest.java, +import com.google.common.collect.testing.TestStringSortedSetGenerator;, +import junit.framework.TestCase;, +public class SynchronizedNavigableSetTest extends TestCase {, +  private static final Object MUTEX = new Integer(1); // something Serializable, +  , +  protected <E> NavigableSet<E> create() {, +        new TreeSet<E>((Comparator<E>) Ordering.natural().nullsFirst()), MUTEX);, +        Synchronized.navigableSet(inner, MUTEX);, +        NavigableSetTestSuiteBuilder.using(new TestStringSortedSetGenerator() {, +          @Override protected NavigableSet<String> create(String[] elements) {, +            TestSet<String> inner = new TestSet<String>(innermost, MUTEX);, +                Synchronized.navigableSet(inner, MUTEX);, +                CollectionFeature.GENERAL_PURPOSE, CollectionFeature.SERIALIZABLE), +            .createTestSuite());, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) descendingSet).mutex);, +    assertSame(MUTEX, ((SynchronizedSortedSet<String>) headSet).mutex);, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) headSet).mutex);, +    assertSame(MUTEX, ((SynchronizedSortedSet<String>) subSet).mutex);, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) subSet).mutex);, +    assertSame(MUTEX, ((SynchronizedSortedSet<String>) tailSet).mutex);, +    assertSame(MUTEX, ((SynchronizedNavigableSet<String>) tailSet).mutex);, +++ b/guava-tests/test/com/google/common/collect/SynchronizedSetTest.java, +import com.google.common.collect.testing.SetTestSuiteBuilder;, +import com.google.common.collect.testing.TestStringSetGenerator;, +import com.google.common.collect.testing.features.CollectionFeature;, +import com.google.common.collect.testing.features.CollectionSize;, +, +import junit.framework.Test;, +import junit.framework.TestCase;, +public class SynchronizedSetTest extends TestCase {, +  public static final Object MUTEX = new Integer(1); // something Serializable, +  , +  public static Test suite() {, +    return SetTestSuiteBuilder.using(new TestStringSetGenerator() {, +          @Override, +          protected Set<String> create(String[] elements) {, +            TestSet<String> inner = new TestSet<String>(new HashSet<String>(), MUTEX);, +            Set<String> outer = Synchronized.set(inner, inner.mutex);, +            for (String e : elements) {, +              outer.add(e);, +            }, +        }), +        .named("Synchronized.set"), +        .withFeatures(CollectionFeature.GENERAL_PURPOSE,, +            CollectionFeature.ALLOWS_NULL_VALUES,, +            CollectionSize.ANY,, +            CollectionFeature.SERIALIZABLE), +        .createTestSuite();]