[+++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing self-loops., +    return NetworkBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing self-loops., +    return NetworkBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedGraphTest.java, + * (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing self-loops., +    return NetworkBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedGraphTest.java, + * (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    return NetworkBuilder.directed().allowsParallelEdges(false).allowsSelfLoops(false).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing self-loops., +    return NetworkBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedGraphTest.java, + * (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    return NetworkBuilder.directed().allowsParallelEdges(false).allowsSelfLoops(false).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedGraphTest.java, + * graph (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing self-loops., +    return NetworkBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedGraphTest.java, + * (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    return NetworkBuilder.directed().allowsParallelEdges(false).allowsSelfLoops(false).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedGraphTest.java, + * graph (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedNetworkTest.java, +    return NetworkBuilder.undirected().allowsParallelEdges(false).allowsSelfLoops(false).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing self-loops., +    return NetworkBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedGraphTest.java, + * (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleDirectedNetworkTest.java, +    return NetworkBuilder.directed().allowsParallelEdges(false).allowsSelfLoops(false).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedGraphTest.java, + * graph (self-loop edges are not allowed)., +++ b/guava-tests/test/com/google/common/graph/ConfigurableSimpleUndirectedNetworkTest.java, +    return NetworkBuilder.undirected().allowsParallelEdges(false).allowsSelfLoops(false).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableUndirectedGraphTest.java, + * Tests for an undirected {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.undirected().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedGraphTest.java, + * Tests for a directed {@link ConfigurableMutableBasicGraph} allowing self-loops., +    return BasicGraphBuilder.directed().allowsSelfLoops(true).build();, +++ b/guava-tests/test/com/google/common/graph/ConfigurableDirectedMultiNetworkTest.java, + * Tests for a directed {@link ConfigurableMutableNetwork} allowing parallel edges and self-loops., +    return NetworkBuilder.directed().allowsParallelEdges(true).allowsSelfLoops(true).build();]