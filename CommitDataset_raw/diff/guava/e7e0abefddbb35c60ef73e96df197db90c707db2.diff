[+++ /dev/null, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Object>(new TreeSet<Object>(NATURAL_ORDER), false);, +      return of();, +      return new RegularImmutableSortedSet<E>(new TreeSet<E>(comparator), false);, +  @SuppressWarnings("unchecked"), +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Object>(new TreeSet<Object>(NATURAL_ORDER), false);, +      return of();, +      return new RegularImmutableSortedSet<E>(new TreeSet<E>(comparator), false);, +  @SuppressWarnings("unchecked"), +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Object>(new TreeSet<Object>(NATURAL_ORDER), false);, +      return of();, +      return new RegularImmutableSortedSet<E>(new TreeSet<E>(comparator), false);, +  @SuppressWarnings("unchecked"), +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ b/guava/src/com/google/common/collect/EmptyContiguousSet.java, +    return ImmutableSortedSet.emptySet(Ordering.natural().reverse());, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Object>(new TreeSet<Object>(NATURAL_ORDER), false);, +      return of();, +      return new RegularImmutableSortedSet<E>(new TreeSet<E>(comparator), false);, +  @SuppressWarnings("unchecked"), +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ b/guava/src/com/google/common/collect/EmptyContiguousSet.java, +    return ImmutableSortedSet.emptySet(Ordering.natural().reverse());, +++ /dev/null, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Object>(new TreeSet<Object>(NATURAL_ORDER), false);, +      return of();, +      return new RegularImmutableSortedSet<E>(new TreeSet<E>(comparator), false);, +  @SuppressWarnings("unchecked"), +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ b/guava/src/com/google/common/collect/EmptyContiguousSet.java, +    return ImmutableSortedSet.emptySet(Ordering.natural().reverse());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +    return (size() <= 1) ? this : new ReverseImmutableList<E>(this);, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Object>(new TreeSet<Object>(NATURAL_ORDER), false);, +      return of();, +      return new RegularImmutableSortedSet<E>(new TreeSet<E>(comparator), false);, +  @SuppressWarnings("unchecked"), +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ b/guava/src/com/google/common/collect/EmptyContiguousSet.java, +    return ImmutableSortedSet.emptySet(Ordering.natural().reverse());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +    return (size() <= 1) ? this : new ReverseImmutableList<E>(this);, +++ b/guava/src/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Comparable>(, +          ImmutableList.<Comparable>of(), NATURAL_ORDER);, +      return of();, +      return new RegularImmutableSortedSet<E>(ImmutableList.<E>of(), comparator);, +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Object>(new TreeSet<Object>(NATURAL_ORDER), false);, +      return of();, +      return new RegularImmutableSortedSet<E>(new TreeSet<E>(comparator), false);, +  @SuppressWarnings("unchecked"), +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ /dev/null, +++ b/guava/src/com/google/common/collect/EmptyContiguousSet.java, +    return ImmutableSortedSet.emptySet(Ordering.natural().reverse());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +    return (size() <= 1) ? this : new ReverseImmutableList<E>(this);, +++ b/guava/src/com/google/common/collect/ImmutableSortedSet.java, +      new RegularImmutableSortedSet<Comparable>(, +          ImmutableList.<Comparable>of(), NATURAL_ORDER);, +      return of();, +      return new RegularImmutableSortedSet<E>(ImmutableList.<E>of(), comparator);, +    return (ImmutableSortedSet<E>) NATURAL_EMPTY_SET;, +++ b/guava/src/com/google/common/collect/RegularImmutableSortedSet.java, +  @Override public boolean contains(@Nullable Object o) {, +    } else if (isEmpty()) {, +      return true;, +    if (isEmpty()) {, +      throw new NoSuchElementException();, +    }, +    if (isEmpty()) {, +      throw new NoSuchElementException();, +    }, +    return (size() <= 1) ? elements : new ImmutableSortedAsList<E>(this, elements);, +    Ordering<E> reversedOrder = Ordering.from(comparator).reverse();]