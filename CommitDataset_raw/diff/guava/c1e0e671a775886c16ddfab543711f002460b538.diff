[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +import java.util.Collections;, +    return (ImmutableMultiset<E>) RegularImmutableMultiset.EMPTY;, +    return copyFromElements(element);, +    return copyFromElements(e1, e2);, +    return copyFromElements(e1, e2, e3);, +    return copyFromElements(e1, e2, e3, e4);, +    return copyFromElements(e1, e2, e3, e4, e5);, +    return copyFromElements(elements);, +    return copyFromEntries(multiset.entrySet());, +  private static <E> ImmutableMultiset<E> copyFromElements(E... elements) {, +    Multiset<E> multiset = LinkedHashMultiset.create();, +    Collections.addAll(multiset, elements);, +    if (entries.isEmpty()) {, +    } else {, +      return new RegularImmutableMultiset<E>(entries);, +    return copyFromEntries(multiset.entrySet());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +import java.util.Collections;, +    return (ImmutableMultiset<E>) RegularImmutableMultiset.EMPTY;, +    return copyFromElements(element);, +    return copyFromElements(e1, e2);, +    return copyFromElements(e1, e2, e3);, +    return copyFromElements(e1, e2, e3, e4);, +    return copyFromElements(e1, e2, e3, e4, e5);, +    return copyFromElements(elements);, +    return copyFromEntries(multiset.entrySet());, +  private static <E> ImmutableMultiset<E> copyFromElements(E... elements) {, +    Multiset<E> multiset = LinkedHashMultiset.create();, +    Collections.addAll(multiset, elements);, +    if (entries.isEmpty()) {, +    } else {, +      return new RegularImmutableMultiset<E>(entries);, +    return copyFromEntries(multiset.entrySet());, +++ b/guava/src/com/google/common/collect/ImmutableMultiset.java, +import java.util.Collections;, +    return (ImmutableMultiset<E>) RegularImmutableMultiset.EMPTY;, +    return copyFromElements(element);, +    return copyFromElements(e1, e2);, +    return copyFromElements(e1, e2, e3);, +    return copyFromElements(e1, e2, e3, e4);, +    return copyFromElements(e1, e2, e3, e4, e5);, +    return copyFromElements(elements);, +    return copyFromEntries(multiset.entrySet());, +  private static <E> ImmutableMultiset<E> copyFromElements(E... elements) {, +    Multiset<E> multiset = LinkedHashMultiset.create();, +    Collections.addAll(multiset, elements);, +    if (entries.isEmpty()) {, +    } else {, +      return new RegularImmutableMultiset<E>(entries);, +    return copyFromEntries(multiset.entrySet());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +import java.util.Collections;, +    return (ImmutableMultiset<E>) RegularImmutableMultiset.EMPTY;, +    return copyFromElements(element);, +    return copyFromElements(e1, e2);, +    return copyFromElements(e1, e2, e3);, +    return copyFromElements(e1, e2, e3, e4);, +    return copyFromElements(e1, e2, e3, e4, e5);, +    return copyFromElements(elements);, +    return copyFromEntries(multiset.entrySet());, +  private static <E> ImmutableMultiset<E> copyFromElements(E... elements) {, +    Multiset<E> multiset = LinkedHashMultiset.create();, +    Collections.addAll(multiset, elements);, +    if (entries.isEmpty()) {, +    } else {, +      return new RegularImmutableMultiset<E>(entries);, +    return copyFromEntries(multiset.entrySet());, +++ b/guava/src/com/google/common/collect/ImmutableMultiset.java, +import java.util.Collections;, +    return (ImmutableMultiset<E>) RegularImmutableMultiset.EMPTY;, +    return copyFromElements(element);, +    return copyFromElements(e1, e2);, +    return copyFromElements(e1, e2, e3);, +    return copyFromElements(e1, e2, e3, e4);, +    return copyFromElements(e1, e2, e3, e4, e5);, +    return copyFromElements(elements);, +    return copyFromEntries(multiset.entrySet());, +  private static <E> ImmutableMultiset<E> copyFromElements(E... elements) {, +    Multiset<E> multiset = LinkedHashMultiset.create();, +    Collections.addAll(multiset, elements);, +    if (entries.isEmpty()) {, +    } else {, +      return new RegularImmutableMultiset<E>(entries);, +    return copyFromEntries(multiset.entrySet());, +++ b/guava/src/com/google/common/collect/Multisets.java, +  static class ImmutableEntry<E> extends AbstractEntry<E> implements, +    @Nullable private final E element;, +    private final int count;, +    @Nullable public final E getElement() {, +    public final int getCount() {, +    public ImmutableEntry<E> nextInBucket() {, +      return null;, +    }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +import java.util.Collections;, +    return (ImmutableMultiset<E>) RegularImmutableMultiset.EMPTY;, +    return copyFromElements(element);, +    return copyFromElements(e1, e2);]