[+++ b/guava/src/com/google/common/io/Files.java, +          return Arrays.copyOf(bytes, off);, +, +        // otherwise, exactly size bytes were read, +, +        int b = in.read(); // check for EOF, +        if (b == -1) {, +          // EOF; the file did not change size, so return the original array, +          return bytes;, +        }, +, +        // the file got larger, so read the rest normally, +        InternalByteArrayOutputStream out, +            = new InternalByteArrayOutputStream();, +        out.write(b); // write the byte we read when testing for EOF, +        ByteStreams.copy(in, out);, +, +        byte[] result = new byte[bytes.length + out.size()];, +        System.arraycopy(bytes, 0, result, 0, bytes.length);, +        out.writeTo(result, bytes.length);, +   * BAOS subclass for direct access to its internal buffer., +   */, +  private static final class InternalByteArrayOutputStream, +      extends ByteArrayOutputStream {, +    /**, +     * Writes the contents of the internal buffer to the given array starting, +     * at the given offset. Assumes the array has space to hold count bytes., +     */, +    void writeTo(byte[] b, int off) {, +      System.arraycopy(buf, 0, b, off, count);, +    }, +  }, +, +  /**]