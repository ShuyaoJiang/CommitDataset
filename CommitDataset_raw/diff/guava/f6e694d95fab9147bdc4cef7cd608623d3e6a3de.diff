[+++ b/guava-gwt/src-super/com/google/common/io/super/com/google/common/io/BaseEncoding.java, +        return this;, +        return new Alphabet(name + ".upperCase()", upperCased);, +        return this;, +        return new Alphabet(name + ".lowerCase()", lowerCased);, +    private transient BaseEncoding upperCase;, +    private transient BaseEncoding lowerCase;, +, +      BaseEncoding result = upperCase;, +      if (result == null) {, +        result = upperCase =, +            (upper == alphabet) ? this : new StandardBaseEncoding(upper, paddingChar);, +      }, +      return result;, +      BaseEncoding result = lowerCase;, +      if (result == null) {, +        result = lowerCase =, +            (lower == alphabet) ? this : new StandardBaseEncoding(lower, paddingChar);, +      }, +      return result;, +++ b/guava-gwt/src-super/com/google/common/io/super/com/google/common/io/BaseEncoding.java, +        return this;, +        return new Alphabet(name + ".upperCase()", upperCased);, +        return this;, +        return new Alphabet(name + ".lowerCase()", lowerCased);, +    private transient BaseEncoding upperCase;, +    private transient BaseEncoding lowerCase;, +, +      BaseEncoding result = upperCase;, +      if (result == null) {, +        result = upperCase =, +            (upper == alphabet) ? this : new StandardBaseEncoding(upper, paddingChar);, +      }, +      return result;, +      BaseEncoding result = lowerCase;, +      if (result == null) {, +        result = lowerCase =, +            (lower == alphabet) ? this : new StandardBaseEncoding(lower, paddingChar);, +      }, +      return result;, +++ b/guava/src/com/google/common/io/BaseEncoding.java, +        return this;, +        return new Alphabet(name + ".upperCase()", upperCased);, +        return this;, +        return new Alphabet(name + ".lowerCase()", lowerCased);, +    private transient BaseEncoding upperCase;, +    private transient BaseEncoding lowerCase;, +, +      BaseEncoding result = upperCase;, +      if (result == null) {, +        result = upperCase =, +            (upper == alphabet) ? this : new StandardBaseEncoding(upper, paddingChar);, +      }, +      return result;, +      BaseEncoding result = lowerCase;, +      if (result == null) {, +        result = lowerCase =, +            (lower == alphabet) ? this : new StandardBaseEncoding(lower, paddingChar);, +      }, +      return result;]