[+++ b/guava-tests/test/com/google/common/collect/ImmutableMapTest.java, +    assertEquals(1, multimap1.asMap().size());, +++ b/guava-tests/test/com/google/common/collect/ImmutableMapTest.java, +    assertEquals(1, multimap1.asMap().size());, +++ b/guava/src/com/google/common/collect/EmptyImmutableBiMap.java, +  public ImmutableSetMultimap<Object, Object> asMultimap() {, +    return ImmutableSetMultimap.of();, +  }, +, +  @Override, +++ b/guava-tests/test/com/google/common/collect/ImmutableMapTest.java, +    assertEquals(1, multimap1.asMap().size());, +++ b/guava/src/com/google/common/collect/EmptyImmutableBiMap.java, +  public ImmutableSetMultimap<Object, Object> asMultimap() {, +    return ImmutableSetMultimap.of();, +  }, +, +  @Override, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedMap.java, +  public ImmutableSetMultimap<K, V> asMultimap() {, +    return ImmutableSetMultimap.of();, +  }, +, +  @Override, +++ b/guava-tests/test/com/google/common/collect/ImmutableMapTest.java, +    assertEquals(1, multimap1.asMap().size());, +++ b/guava/src/com/google/common/collect/EmptyImmutableBiMap.java, +  public ImmutableSetMultimap<Object, Object> asMultimap() {, +    return ImmutableSetMultimap.of();, +  }, +, +  @Override, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedMap.java, +  public ImmutableSetMultimap<K, V> asMultimap() {, +    return ImmutableSetMultimap.of();, +  }, +, +  @Override, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +  @Override public final ImmutableList<E> asList() {, +++ b/guava-tests/test/com/google/common/collect/ImmutableMapTest.java, +    assertEquals(1, multimap1.asMap().size());, +++ b/guava/src/com/google/common/collect/EmptyImmutableBiMap.java, +  public ImmutableSetMultimap<Object, Object> asMultimap() {, +    return ImmutableSetMultimap.of();, +  }, +, +  @Override, +++ b/guava/src/com/google/common/collect/EmptyImmutableSortedMap.java, +  public ImmutableSetMultimap<K, V> asMultimap() {, +    return ImmutableSetMultimap.of();, +  }, +, +  @Override, +++ b/guava/src/com/google/common/collect/ImmutableList.java, +  @Override public final ImmutableList<E> asList() {, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +import static com.google.common.base.Preconditions.checkNotNull;, +, +    return new MapViewOfValuesAsSingletonSets<K, V>(this);, +  }, +, +  private static final class MapViewOfValuesAsSingletonSets<K, V>, +      extends ImmutableMap<K, ImmutableSet<V>> {, +    private final ImmutableMap<K, V> delegate;, +, +    MapViewOfValuesAsSingletonSets(ImmutableMap<K, V> delegate) {, +      this.delegate = checkNotNull(delegate);, +    }, +, +      return delegate.size();, +      return delegate.containsKey(key);, +      V outerValue = delegate.get(key);, +          final Iterator<Entry<K, V>> backingIterator = delegate.entrySet().iterator();]