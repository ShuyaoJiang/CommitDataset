[+++ b/guava-tests/test/com/google/common/base/ThrowablesTest.java, +  @GwtIncompatible // Throwables.getCauseAs(Throwable, Class), +  public void testGetCauseAs() {, +    SomeCheckedException cause = new SomeCheckedException();, +    SomeChainingException thrown = new SomeChainingException(cause);, +, +    assertThat(thrown.getCause()).isSameAs(cause);, +    assertThat(Throwables.getCauseAs(thrown, SomeCheckedException.class)).isSameAs(cause);, +    assertThat(Throwables.getCauseAs(thrown, Exception.class)).isSameAs(cause);, +, +    try {, +      Throwables.getCauseAs(thrown, IllegalStateException.class);, +      fail("Should have thrown CCE");, +    } catch (ClassCastException expected) {, +      assertThat(expected.getCause()).isSameAs(thrown);, +    }, +  }, +, +++ b/guava-tests/test/com/google/common/base/ThrowablesTest.java, +  @GwtIncompatible // Throwables.getCauseAs(Throwable, Class), +  public void testGetCauseAs() {, +    SomeCheckedException cause = new SomeCheckedException();, +    SomeChainingException thrown = new SomeChainingException(cause);, +, +    assertThat(thrown.getCause()).isSameAs(cause);, +    assertThat(Throwables.getCauseAs(thrown, SomeCheckedException.class)).isSameAs(cause);, +    assertThat(Throwables.getCauseAs(thrown, Exception.class)).isSameAs(cause);, +, +    try {, +      Throwables.getCauseAs(thrown, IllegalStateException.class);, +      fail("Should have thrown CCE");, +    } catch (ClassCastException expected) {, +      assertThat(expected.getCause()).isSameAs(thrown);, +    }, +  }, +, +++ b/guava/src/com/google/common/base/Throwables.java, +  , +  /**, +   * Returns {@code throwable}'s cause, cast to {@code expectedCauseType}., +   *, +   * @throws ClassCastException if the cause cannot be cast to the expected type. The {@link, +   *     ClassCastException}'s cause is {@code throwable}., +   * @since 22.0, +   */, +  @Beta, +  @GwtIncompatible // Class.cast(Object), +  public static <X extends Throwable> X getCauseAs(Throwable throwable, Class<X> expectedCauseType), +      throws ClassCastException {, +    try {, +      return expectedCauseType.cast(throwable.getCause());, +    } catch (ClassCastException e) {, +      e.initCause(throwable);, +      throw e;, +    }, +  }]