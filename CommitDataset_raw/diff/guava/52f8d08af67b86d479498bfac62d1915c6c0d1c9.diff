[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +  @VisibleForTesting, +  final class ValueSet extends Sets.ImprovedAbstractSet<V> implements ValueSetLink<K, V> {, +    /**, +     * The threshold above which the hash table should be rebuilt., +     */, +    @VisibleForTesting int threshold() {, +      return hashTable.length; // load factor of 1.0, +    }, +, +      if (size > threshold() && hashTable.length < MAX_VALUE_SET_TABLE_SIZE) {, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +  @VisibleForTesting, +  final class ValueSet extends Sets.ImprovedAbstractSet<V> implements ValueSetLink<K, V> {, +    /**, +     * The threshold above which the hash table should be rebuilt., +     */, +    @VisibleForTesting int threshold() {, +      return hashTable.length; // load factor of 1.0, +    }, +, +      if (size > threshold() && hashTable.length < MAX_VALUE_SET_TABLE_SIZE) {, +++ b/guava-tests/test/com/google/common/collect/LinkedHashMultimapTest.java, +  public void testValueSetHashTableExpansion() {, +    LinkedHashMultimap<String, Integer> multimap = LinkedHashMultimap.create();, +    for (int z = 1; z <= 100; z++) {, +      multimap.put("a", z);, +      // The Eclipse compiler (and hence GWT) rejects a parameterized cast., +      @SuppressWarnings("unchecked"), +      LinkedHashMultimap<String, Integer>.ValueSet valueSet =, +          (LinkedHashMultimap.ValueSet) multimap.backingMap().get("a");, +      assertEquals(z, valueSet.size());, +      assertTrue(valueSet.size() <= valueSet.threshold());, +    }, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/LinkedHashMultimap.java, +  @VisibleForTesting, +  final class ValueSet extends Sets.ImprovedAbstractSet<V> implements ValueSetLink<K, V> {, +    /**, +     * The threshold above which the hash table should be rebuilt., +     */, +    @VisibleForTesting int threshold() {, +      return hashTable.length; // load factor of 1.0, +    }, +, +      if (size > threshold() && hashTable.length < MAX_VALUE_SET_TABLE_SIZE) {, +++ b/guava-tests/test/com/google/common/collect/LinkedHashMultimapTest.java, +  public void testValueSetHashTableExpansion() {, +    LinkedHashMultimap<String, Integer> multimap = LinkedHashMultimap.create();, +    for (int z = 1; z <= 100; z++) {, +      multimap.put("a", z);, +      // The Eclipse compiler (and hence GWT) rejects a parameterized cast., +      @SuppressWarnings("unchecked"), +      LinkedHashMultimap<String, Integer>.ValueSet valueSet =, +          (LinkedHashMultimap.ValueSet) multimap.backingMap().get("a");, +      assertEquals(z, valueSet.size());, +      assertTrue(valueSet.size() <= valueSet.threshold());, +    }, +  }, +, +++ b/guava/src/com/google/common/collect/LinkedHashMultimap.java, +  @VisibleForTesting, +  final class ValueSet extends Sets.ImprovedAbstractSet<V> implements ValueSetLink<K, V> {, +    /**, +     * The threshold above which the hash table should be rebuilt., +     */, +    @VisibleForTesting int threshold() {, +      return hashTable.length; // load factor of 1.0, +    }, +, +      if (size > threshold() && hashTable.length < MAX_VALUE_SET_TABLE_SIZE) {]