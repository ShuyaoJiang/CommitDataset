[+++ b/guava-tests/test/com/google/common/io/FileBackedOutputStreamTest.java, +    ByteSource source = out.asByteSource();, +      assertTrue(ByteSource.wrap(data).slice(0, chunk1).contentEquals(source));, +    // Check that source returns the right data, +    assertTrue(Arrays.equals(data, source.read()));, +    ByteSource source = out.asByteSource();, +    assertTrue(Arrays.equals(data, source.read()));, +    assertTrue(Arrays.equals(data, source.read()));, +    ByteSource source = out.asByteSource();, +    assertTrue(Arrays.equals(data, source.read()));, +    assertTrue(Arrays.equals(new byte[0], source.read()));, +    assertTrue(Arrays.equals(data, source.read()));, +++ b/guava-tests/test/com/google/common/io/FileBackedOutputStreamTest.java, +    ByteSource source = out.asByteSource();, +      assertTrue(ByteSource.wrap(data).slice(0, chunk1).contentEquals(source));, +    // Check that source returns the right data, +    assertTrue(Arrays.equals(data, source.read()));, +    ByteSource source = out.asByteSource();, +    assertTrue(Arrays.equals(data, source.read()));, +    assertTrue(Arrays.equals(data, source.read()));, +    ByteSource source = out.asByteSource();, +    assertTrue(Arrays.equals(data, source.read()));, +    assertTrue(Arrays.equals(new byte[0], source.read()));, +    assertTrue(Arrays.equals(data, source.read()));, +++ b/guava/src/com/google/common/io/FileBackedOutputStream.java, +  private final ByteSource source;, +   * not reset the data when the {@link ByteSource} returned by, +   * {@link #asByteSource} is finalized., +   * optionally resets the data when the {@link ByteSource} returned, +   * by {@link #asByteSource} is finalized., +   *     be called when the {@link ByteSource} returned by {@link, +   *     #asByteSource} is finalized, +      source = new ByteSource() {, +        public InputStream openStream() throws IOException {, +          return openInputStream();, +      source = new ByteSource() {, +        public InputStream openStream() throws IOException {, +          return openInputStream();, +   * by this stream. This method returns the same object as, +   * {@link #asByteSource()}., +   *, +   * @deprecated Use {@link #asByteSource()} instead. This method is scheduled, +   *     to be removed in Guava 16.0., +  @Deprecated, +    return asByteSource();, +  /**, +   * Returns a readable {@link ByteSource} view of the data that has been, +   * written to this stream., +   *, +   * @since 15.0, +   */, +  public ByteSource asByteSource() {, +    return source;, +  }, +, +  private synchronized InputStream openInputStream() throws IOException {]