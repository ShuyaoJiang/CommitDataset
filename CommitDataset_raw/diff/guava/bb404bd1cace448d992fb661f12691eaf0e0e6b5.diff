[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +import com.google.common.base.Joiner;, +import java.util.Arrays;, +   * Returns a fluent iterable containing {@code elements} in the specified order., +   *, +   * @since 18.0, +   */, +  public static <E> FluentIterable<E> of(E[] elements) {, +    return from(Lists.newArrayList(elements));, +  }, +, +  /**, +   * Returns a fluent iterable whose iterators traverse first the elements of this fluent iterable,, +   * followed by those of {@code other}. The iterators are not polled until necessary., +   *, +   * <p>The returned iterable's {@code Iterator} supports {@code remove()} when the corresponding, +   * {@code Iterator} supports it., +   *, +   * @since 18.0, +   */, +  @CheckReturnValue, +  public final FluentIterable<E> append(Iterable<? extends E> other) {, +    return from(Iterables.concat(iterable, other));, +  }, +, +  /**, +   * Returns a fluent iterable whose iterators traverse first the elements of this fluent iterable,, +   * followed by {@code elements}., +   *, +   * @since 18.0, +   */, +  @CheckReturnValue, +  public final FluentIterable<E> append(E... elements) {, +    return from(Iterables.concat(iterable, Arrays.asList(elements)));, +  }, +, +  /**, +   * Returns a {@link String} containing all of the elements of this fluent iterable joined with, +   * {@code joiner}., +   *, +   * @since 18.0, +   */, +  public final String join(Joiner joiner) {, +    return joiner.join(this);, +  }, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/FluentIterable.java, +import com.google.common.base.Joiner;, +import java.util.Arrays;, +   * Returns a fluent iterable containing {@code elements} in the specified order., +   *, +   * @since 18.0, +   */, +  public static <E> FluentIterable<E> of(E[] elements) {, +    return from(Lists.newArrayList(elements));, +  }, +, +  /**, +   * Returns a fluent iterable whose iterators traverse first the elements of this fluent iterable,, +   * followed by those of {@code other}. The iterators are not polled until necessary., +   *, +   * <p>The returned iterable's {@code Iterator} supports {@code remove()} when the corresponding, +   * {@code Iterator} supports it., +   *, +   * @since 18.0, +   */, +  @CheckReturnValue, +  public final FluentIterable<E> append(Iterable<? extends E> other) {, +    return from(Iterables.concat(iterable, other));, +  }, +, +  /**, +   * Returns a fluent iterable whose iterators traverse first the elements of this fluent iterable,, +   * followed by {@code elements}., +   *, +   * @since 18.0, +   */, +  @CheckReturnValue, +  public final FluentIterable<E> append(E... elements) {, +    return from(Iterables.concat(iterable, Arrays.asList(elements)));, +  }, +, +  /**, +   * Returns a {@link String} containing all of the elements of this fluent iterable joined with, +   * {@code joiner}., +   *, +   * @since 18.0, +   */, +  public final String join(Joiner joiner) {, +    return joiner.join(this);, +  }, +, +  /**, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +import com.google.common.base.Joiner;, +  public void testOfArray() {, +    assertEquals(ImmutableList.of("1", "2", "3", "4"),, +        Lists.newArrayList(FluentIterable.of(new Object[] {"1", "2", "3", "4"})));, +  }]