[+++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +import com.google.common.testing.SerializableTester;, +, +  public void testSerialization() {, +    EvictingQueue<String> original = EvictingQueue.create(5);, +    original.add("one");, +    original.add("two");, +    original.add("three");, +, +    EvictingQueue<String> copy = SerializableTester.reserialize(original);, +    assertEquals(copy.maxSize, original.maxSize);, +    assertEquals("one", copy.remove());, +    assertEquals("two", copy.remove());, +    assertEquals("three", copy.remove());, +    assertTrue(copy.isEmpty());, +  }, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +import com.google.common.testing.SerializableTester;, +, +  public void testSerialization() {, +    EvictingQueue<String> original = EvictingQueue.create(5);, +    original.add("one");, +    original.add("two");, +    original.add("three");, +, +    EvictingQueue<String> copy = SerializableTester.reserialize(original);, +    assertEquals(copy.maxSize, original.maxSize);, +    assertEquals("one", copy.remove());, +    assertEquals("two", copy.remove());, +    assertEquals("three", copy.remove());, +    assertTrue(copy.isEmpty());, +  }, +++ b/guava/src/com/google/common/collect/EvictingQueue.java, +import com.google.common.annotations.VisibleForTesting;, +import java.io.Serializable;, +public final class EvictingQueue<E> extends ForwardingQueue<E> implements Serializable {, +, +  @VisibleForTesting, +  final int maxSize;, +, +  private static final long serialVersionUID = 0L;]