[+++ b/pom.xml, +    <testSourceDirectory>test</testSourceDirectory>, +++ b/pom.xml, +    <testSourceDirectory>test</testSourceDirectory>, +++ b/src/com/google/common/testing/Assert.java, +/*, + * Copyright (C) 2010 Google Inc., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package com.google.common.testing;, +, +import static java.lang.String.format;, +, +import com.google.common.annotations.Beta;, +, +, +/**, + * A simple collection of assertions used in testing - re-written to, + * avoid junit or testNG dependencies., + *, + * @author cgruber@google.com (Christian Edward Gruber), + * @since r08, + */, +@Beta, +public class Assert {, +, +  /**, +   * Fail with an AssertionFailedError();, +   * @throws AssertionFailedError, +   */, +  public static void fail() {, +    throw new AssertionFailedError();, +  }, +	, +  /**, +   * Fail with an AssertionFailedError and a message which may use String.format if any, +   * subsequent parameters are provided., +   * , +   * @throws AssertionFailedError, +   */, +  public static void fail(String message) {, +    throw new AssertionFailedError(message);, +  }, +  , +  /**, +   * Test the condition and throw a failure exception if false with , +   * a stock message., +   * @throws AssertionFailedError, +   */, +  public static void assertTrue(boolean condition) {, +    if (!condition) fail("Condition exepected to be true but was false.");, +  }, +  , +  /**, +   * Test the condition and throw a failure exception with a , +   * provided message., +   * @throws AssertionFailedError, +   */, +  public static void assertTrue(String message, boolean condition) {, +    if (!condition) fail(message);, +  }, +  , +  /**, +   * Test the negation of the condition and throw a failure exception with a , +   * canned message., +   * @throws AssertionFailedError, +   */, +  public static void assertFalse(boolean condition) {, +    assertTrue("Condition expected to be false but was true.", !condition);, +  }, +  , +  /**, +   * Test the negation of the condition and throw a failure exception with a , +   * provided message., +   * @throws AssertionFailedError, +   */, +  public static void assertFalse(String message, boolean condition) {, +    assertTrue(message, !condition);, +  }, +  , +  /**, +   * Assert the equality of two objects, +   */, +  public static void assertEquals(Object o1, Object o2) {, +    assertEquals(format("Objects '%s' and '%s' are not equal", o1, o2), o1, o2);, +  }, +  , +  /**, +   * Assert the equality of two objects]