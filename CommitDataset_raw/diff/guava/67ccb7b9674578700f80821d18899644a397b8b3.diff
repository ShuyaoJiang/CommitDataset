[+++ b/guava-tests/test/com/google/common/base/ToStringHelperTest.java, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToString_oneIntegerField() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", new Integer(42)), +        .toString();, +    assertEquals("TestClass{field1=42}", toTest);, +  }, +, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToString_nullInteger() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", (Integer) null), +        .toString();, +    assertEquals("TestClass{field1=null}", toTest);, +  }, +, +  public void testToStringLenient_oneIntegerField() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", new Integer(42)), +        .toString();, +    assertTrue(toTest, toTest.matches(".*\\{field1\\=42\\}"));, +  }, +, +  public void testToStringLenient_nullInteger() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", (Integer) null), +        .toString();, +    assertTrue(toTest, toTest.matches(".*\\{field1\\=null\\}"));, +  }, +, +++ b/guava-tests/test/com/google/common/base/ToStringHelperTest.java, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToString_oneIntegerField() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", new Integer(42)), +        .toString();, +    assertEquals("TestClass{field1=42}", toTest);, +  }, +, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToString_nullInteger() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", (Integer) null), +        .toString();, +    assertEquals("TestClass{field1=null}", toTest);, +  }, +, +  public void testToStringLenient_oneIntegerField() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", new Integer(42)), +        .toString();, +    assertTrue(toTest, toTest.matches(".*\\{field1\\=42\\}"));, +  }, +, +  public void testToStringLenient_nullInteger() {, +    String toTest = Objects.toStringHelper(new TestClass()), +        .add("field1", (Integer) null), +        .toString();, +    assertTrue(toTest, toTest.matches(".*\\{field1\\=null\\}"));, +  }, +, +++ b/guava/src/com/google/common/base/Objects.java, +      checkNameAndAppend(name).append(value);, +     * Adds a name/value pair to the formatted output in {@code name=value}, +     * format., +     *, +     * @since 11.0 (source-compatible since 2.0), +     */, +    public ToStringHelper add(String name, boolean value) {, +      checkNameAndAppend(name).append(value);, +      return this;, +    }, +, +    /**, +     * Adds a name/value pair to the formatted output in {@code name=value}, +     * format., +     *, +     * @since 11.0 (source-compatible since 2.0), +     */, +    public ToStringHelper add(String name, char value) {, +      checkNameAndAppend(name).append(value);, +      return this;, +    }, +, +    /**, +     * Adds a name/value pair to the formatted output in {@code name=value}, +     * format., +     *, +     * @since 11.0 (source-compatible since 2.0), +     */, +    public ToStringHelper add(String name, double value) {, +      checkNameAndAppend(name).append(value);, +      return this;, +    }, +, +    /**, +     * Adds a name/value pair to the formatted output in {@code name=value}, +     * format., +     *]