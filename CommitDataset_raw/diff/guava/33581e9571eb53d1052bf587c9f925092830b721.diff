[+++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, +   * Specifies a listener instance that caches should notify each time an entry is removed for any, +   * {@linkplain RemovalCause reason}. Each cache created by this builder will invoke this listener, +   * as part of the routine maintenance described in the class documentation above., +   * <p><b>Warning:</b> after invoking this method, do not continue to use <i>this</i> cache, +   * builder reference; instead use the reference this method <i>returns</i>. At runtime, these, +   * point to the same instance, but only the returned reference has the correct generic type, +   * information so as to ensure type safety. For best results, use the standard method-chaining, +   * idiom illustrated in the class documentation above, configuring a builder and building your, +   * cache in a single statement. Failure to heed this advice can result in a {@link, +   * ClassCastException} being thrown by a cache operation at some <i>undefined</i> point in the, +   * future., +   * <p><b>Warning:</b> any exception thrown by {@code listener} will <i>not</i> be propagated to, +   * the {@code Cache} user, only logged via a {@link Logger}., +   * @return the cache builder reference that should be used instead of {@code this} for any, +   *     remaining configuration and cache building, +++ b/guava-gwt/src-super/com/google/common/cache/super/com/google/common/cache/CacheBuilder.java, +   * Specifies a listener instance that caches should notify each time an entry is removed for any, +   * {@linkplain RemovalCause reason}. Each cache created by this builder will invoke this listener, +   * as part of the routine maintenance described in the class documentation above., +   * <p><b>Warning:</b> after invoking this method, do not continue to use <i>this</i> cache, +   * builder reference; instead use the reference this method <i>returns</i>. At runtime, these, +   * point to the same instance, but only the returned reference has the correct generic type, +   * information so as to ensure type safety. For best results, use the standard method-chaining, +   * idiom illustrated in the class documentation above, configuring a builder and building your, +   * cache in a single statement. Failure to heed this advice can result in a {@link, +   * ClassCastException} being thrown by a cache operation at some <i>undefined</i> point in the, +   * future., +   * <p><b>Warning:</b> any exception thrown by {@code listener} will <i>not</i> be propagated to, +   * the {@code Cache} user, only logged via a {@link Logger}., +   * @return the cache builder reference that should be used instead of {@code this} for any, +   *     remaining configuration and cache building, +++ b/guava/src/com/google/common/cache/CacheBuilder.java, +   * Specifies a listener instance that caches should notify each time an entry is removed for any, +   * {@linkplain RemovalCause reason}. Each cache created by this builder will invoke this listener, +   * as part of the routine maintenance described in the class documentation above., +   * <p><b>Warning:</b> after invoking this method, do not continue to use <i>this</i> cache, +   * builder reference; instead use the reference this method <i>returns</i>. At runtime, these, +   * point to the same instance, but only the returned reference has the correct generic type, +   * information so as to ensure type safety. For best results, use the standard method-chaining, +   * idiom illustrated in the class documentation above, configuring a builder and building your, +   * cache in a single statement. Failure to heed this advice can result in a {@link, +   * ClassCastException} being thrown by a cache operation at some <i>undefined</i> point in the, +   * future., +   * <p><b>Warning:</b> any exception thrown by {@code listener} will <i>not</i> be propagated to, +   * the {@code Cache} user, only logged via a {@link Logger}., +   * @return the cache builder reference that should be used instead of {@code this} for any, +   *     remaining configuration and cache building]