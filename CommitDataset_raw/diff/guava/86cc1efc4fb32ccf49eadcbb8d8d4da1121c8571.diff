[+++ b/src/com/google/common/util/concurrent/Futures.java, +import java.util.List;, +   * Future}. Example:, +   *, +   * <pre>   {@code, +   *   ListenableFuture<RowKey> rowKeyFuture = indexService.lookUp(query);, +   *   Function<RowKey, ListenableFuture<QueryResult>> queryFunction =, +   *       new Function<RowKey, ListenableFuture<QueryResult>>() {, +   *         public ListenableFuture<QueryResult> apply(RowKey rowKey) {, +   *           return dataService.read(rowKey);, +   *         }, +   *       };, +   *   ListenableFuture<QueryResult> queryFuture =, +   *       chain(queryFuture, queryFunction);, +   * }</pre>, +   * Future}. Example:, +   *, +   * <pre>   {@code, +   *   ListenableFuture<RowKey> rowKeyFuture = indexService.lookUp(query);, +   *   Function<RowKey, ListenableFuture<QueryResult>> queryFunction =, +   *       new Function<RowKey, ListenableFuture<QueryResult>>() {, +   *         public ListenableFuture<QueryResult> apply(RowKey rowKey) {, +   *           return dataService.read(rowKey);, +   *         }, +   *       };, +   *   ListenableFuture<QueryResult> queryFuture =, +   *       chain(queryFuture, queryFunction);, +   * }</pre>, +   * Future}. Example:, +   *, +   * <pre>   {@code, +   *   ListenableFuture<QueryResult> queryFuture = ...;, +   *   Function<QueryResult, List<Row>> rowsFunction =, +   *       new Function<QueryResult, List<Row>>() {, +   *         public List<Row> apply(QueryResult queryResult) {, +   *           return queryResult.getRows();, +   *         }, +   *       };, +   *   ListenableFuture<List<Row>> rowsFuture =, +   *       compose(queryFuture, rowsFunction);, +   * }</pre>, +   * Future}. Example:, +   *, +   * <pre>   {@code, +   *   ListenableFuture<QueryResult> queryFuture = ...;, +   *   Function<QueryResult, List<Row>> rowsFunction =, +   *       new Function<QueryResult, List<Row>>() {, +   *         public List<Row> apply(QueryResult queryResult) {, +   *           return queryResult.getRows();, +   *         }, +   *       };, +   *   ListenableFuture<List<Row>> rowsFuture =, +   *       compose(queryFuture, rowsFunction, executor);, +   * }</pre>, +   * given {@code Function} to the result of the given {@code Future}. Example:, +   * <pre>   {@code, +   *   Future<QueryResult> queryFuture = ...;, +   *   Function<QueryResult, List<Row>> rowsFunction =, +   *       new Function<QueryResult, List<Row>>() {, +   *         public List<Row> apply(QueryResult queryResult) {, +   *           return queryResult.getRows();, +   *         }, +   *       };, +   *   Future<List<Row>> rowsFuture = compose(queryFuture, rowsFunction);, +   * }</pre>]