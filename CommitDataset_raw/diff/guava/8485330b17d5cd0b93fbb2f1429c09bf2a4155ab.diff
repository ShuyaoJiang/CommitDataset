[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    Collection<V> collection = Maps.safeRemove(map, key);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    Collection<V> collection = Maps.safeRemove(map, key);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    Count frequency = Maps.safeGet(backingMap, element);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    Collection<V> collection = Maps.safeRemove(map, key);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    Count frequency = Maps.safeGet(backingMap, element);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return new ImmutableMapKeySet<K, V>(this);, +    return new ImmutableMapValues<K, V>(this);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    Collection<V> collection = Maps.safeRemove(map, key);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    Count frequency = Maps.safeGet(backingMap, element);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return new ImmutableMapKeySet<K, V>(this);, +    return new ImmutableMapValues<K, V>(this);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapKeySet.java, +final class ImmutableMapKeySet<K, V> extends ImmutableSet<K> {, +  private final ImmutableMap<K, V> map;, +, +  ImmutableMapKeySet(ImmutableMap<K, V> map) {, +    this.map = map;, +  }, +    return map.size();, +    return map.containsKey(object);, +    final ImmutableList<Entry<K, V>> entryList = map.entrySet().asList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    Collection<V> collection = Maps.safeRemove(map, key);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    Count frequency = Maps.safeGet(backingMap, element);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return new ImmutableMapKeySet<K, V>(this);, +    return new ImmutableMapValues<K, V>(this);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapKeySet.java, +final class ImmutableMapKeySet<K, V> extends ImmutableSet<K> {, +  private final ImmutableMap<K, V> map;, +, +  ImmutableMapKeySet(ImmutableMap<K, V> map) {, +    this.map = map;, +  }, +    return map.size();, +    return map.containsKey(object);, +    final ImmutableList<Entry<K, V>> entryList = map.entrySet().asList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapValues.java, +final class ImmutableMapValues<K, V> extends ImmutableCollection<V> {, +  private final ImmutableMap<K, V> map;, +  ImmutableMapValues(ImmutableMap<K, V> map) {, +    this.map = map;, +  }, +    return map.size();, +    return Maps.valueIterator(map.entrySet().iterator());, +    return map.containsValue(object);, +    final ImmutableList<Entry<K, V>> entryList = map.entrySet().asList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    Collection<V> collection = Maps.safeRemove(map, key);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    Count frequency = Maps.safeGet(backingMap, element);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return new ImmutableMapKeySet<K, V>(this);, +    return new ImmutableMapValues<K, V>(this);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapKeySet.java, +final class ImmutableMapKeySet<K, V> extends ImmutableSet<K> {, +  private final ImmutableMap<K, V> map;, +, +  ImmutableMapKeySet(ImmutableMap<K, V> map) {, +    this.map = map;, +  }, +    return map.size();, +    return map.containsKey(object);, +    final ImmutableList<Entry<K, V>> entryList = map.entrySet().asList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapValues.java, +final class ImmutableMapValues<K, V> extends ImmutableCollection<V> {, +  private final ImmutableMap<K, V> map;, +  ImmutableMapValues(ImmutableMap<K, V> map) {, +    this.map = map;, +  }, +    return map.size();, +    return Maps.valueIterator(map.entrySet().iterator());, +    return map.containsValue(object);, +    final ImmutableList<Entry<K, V>> entryList = map.entrySet().asList();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterables.java, +      return Collections2.safeContains(collection, element);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    Collection<V> collection = Maps.safeRemove(map, key);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultiset.java, +    Count frequency = Maps.safeGet(backingMap, element);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +    return new ImmutableMapKeySet<K, V>(this);, +    return new ImmutableMapValues<K, V>(this);, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapKeySet.java, +final class ImmutableMapKeySet<K, V> extends ImmutableSet<K> {, +  private final ImmutableMap<K, V> map;, +, +  ImmutableMapKeySet(ImmutableMap<K, V> map) {, +    this.map = map;, +  }]