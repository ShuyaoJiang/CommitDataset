[+++ b/guava/src/com/google/common/reflect/TypeToken.java, +   * Constructs a new type token of {@code T} while resolving free type variables in the context of, +   * {@code declaringClass}., +  /** Returns the represented type. */, +   * are substituted by {@code typeArg}. For example, it can be used to construct, +   * are substituted by {@code typeArg}. For example, it can be used to construct, +  /**, +   * Returns true if this type is known to be an array type, such as {@code int[]}, {@code T[]},, +   * {@code <? extends Map<String, Integer>[]>} etc., +   */, +   * Returns the array component type if this type represents an array ({@code int[]}, {@code T[]},, +   * {@code <? extends Map<String, Integer>[]>} etc.), or else {@code null} is returned., +   * Returns true if {@code o} is another {@code TypeToken} that represents the same {@link Type}., +  /** Implemented to support serialization of subclasses. */]