[+++ b/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +    return new FactoryMethodReturnValueTester(cls, builder.build(), "public static methods");, +    private final Class<?> declaringClass;, +    private final String factoryMethodsDescription;, +        Class<?> declaringClass,, +        ImmutableList<Invokable<?, ?>> factories,, +        String factoryMethodsDescription) {, +      this.declaringClass = declaringClass;, +      this.factoryMethodsDescription = factoryMethodsDescription;, +      packagesToTest.add(Reflection.getPackageName(declaringClass));, +      ImmutableList<Invokable<?, ?>> factoriesToTest = builder.build();, +      Assert.assertFalse("No " + factoryMethodsDescription + " that return ", +              + returnTypeToTest.getName() + " or subtype are found in ", +              + declaringClass + ".",, +          factoriesToTest.isEmpty());, +      return factoriesToTest;, +++ b/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +    return new FactoryMethodReturnValueTester(cls, builder.build(), "public static methods");, +    private final Class<?> declaringClass;, +    private final String factoryMethodsDescription;, +        Class<?> declaringClass,, +        ImmutableList<Invokable<?, ?>> factories,, +        String factoryMethodsDescription) {, +      this.declaringClass = declaringClass;, +      this.factoryMethodsDescription = factoryMethodsDescription;, +      packagesToTest.add(Reflection.getPackageName(declaringClass));, +      ImmutableList<Invokable<?, ?>> factoriesToTest = builder.build();, +      Assert.assertFalse("No " + factoryMethodsDescription + " that return ", +              + returnTypeToTest.getName() + " or subtype are found in ", +              + declaringClass + ".",, +          factoriesToTest.isEmpty());, +      return factoriesToTest;, +++ b/guava-testlib/test/com/google/common/testing/ClassSanityTesterTest.java, +  public void testForAllPublicStaticMethods_noPublicStaticMethods() throws Exception {, +    try {, +      tester.forAllPublicStaticMethods(NoPublicStaticMethods.class).testEquals();, +    } catch (AssertionFailedError expected) {, +      assertEquals(, +          "No public static methods that return java.lang.Object or subtype are found in ", +              + NoPublicStaticMethods.class + ".",, +          expected.getMessage());, +      return;, +    }, +    fail();, +  }, +, +    try {, +    } catch (AssertionFailedError expected) {, +      assertEquals(, +          "No public static methods that return java.lang.Iterable or subtype are found in ", +              + BadNullsFactory.class + ".",, +          expected.getMessage());, +      return;, +    }, +    fail();, +, +  private static class NoPublicStaticMethods {, +    static String notPublic() {, +      return "";, +    }, +  }]