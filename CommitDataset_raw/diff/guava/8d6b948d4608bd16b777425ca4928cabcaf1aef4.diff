[+++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/Utf8Test.java, +import static java.lang.Character.MAX_CODE_POINT;, +import static java.lang.Character.MAX_HIGH_SURROGATE;, +import static java.lang.Character.MAX_LOW_SURROGATE;, +import static java.lang.Character.MIN_HIGH_SURROGATE;, +import static java.lang.Character.MIN_LOW_SURROGATE;, +import static java.lang.Character.MIN_SUPPLEMENTARY_CODE_POINT;, +, +import com.google.common.collect.ImmutableList;, +  private static final ImmutableList<String> ILL_FORMED_STRINGS;, +  static {, +    ImmutableList.Builder<String> builder = ImmutableList.builder();, +    char[] surrogates = {, +      MAX_LOW_SURROGATE,, +      MAX_HIGH_SURROGATE,, +      MIN_LOW_SURROGATE,, +      MIN_HIGH_SURROGATE,, +    };, +    for (char surrogate : surrogates) {, +      builder.add(newString(surrogate));, +      builder.add(newString(surrogate, 'n'));, +      builder.add(newString('n', surrogate));, +      builder.add(newString(surrogate, surrogate));, +    }, +    builder.add(newString(MIN_LOW_SURROGATE, MAX_HIGH_SURROGATE));, +    ILL_FORMED_STRINGS = builder.build();, +  }, +, +    assertEquals(4, Utf8.encodedLength(newString(MIN_HIGH_SURROGATE, MIN_LOW_SURROGATE)));, +    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);, +    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);, +    utf8Lengths.put(MAX_CODE_POINT, 4);, +    testEncodedLengthFails(newString(MIN_HIGH_SURROGATE), 0);, +    testEncodedLengthFails("foobar" + newString(MIN_HIGH_SURROGATE), 6);, +    testEncodedLengthFails(newString(MIN_LOW_SURROGATE), 0);, +    testEncodedLengthFails("foobar" + newString(MIN_LOW_SURROGATE), 6);, +    testEncodedLengthFails(newString(MIN_HIGH_SURROGATE, MIN_HIGH_SURROGATE), 0);, +  private static String newString(char... chars) {, +  private static byte[] toByteArray(int... bytes) {, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/Utf8Test.java, +import static java.lang.Character.MAX_CODE_POINT;, +import static java.lang.Character.MAX_HIGH_SURROGATE;, +import static java.lang.Character.MAX_LOW_SURROGATE;, +import static java.lang.Character.MIN_HIGH_SURROGATE;, +import static java.lang.Character.MIN_LOW_SURROGATE;, +import static java.lang.Character.MIN_SUPPLEMENTARY_CODE_POINT;, +, +import com.google.common.collect.ImmutableList;, +  private static final ImmutableList<String> ILL_FORMED_STRINGS;, +  static {, +    ImmutableList.Builder<String> builder = ImmutableList.builder();, +    char[] surrogates = {, +      MAX_LOW_SURROGATE,, +      MAX_HIGH_SURROGATE,, +      MIN_LOW_SURROGATE,, +      MIN_HIGH_SURROGATE,, +    };, +    for (char surrogate : surrogates) {, +      builder.add(newString(surrogate));, +      builder.add(newString(surrogate, 'n'));, +      builder.add(newString('n', surrogate));, +      builder.add(newString(surrogate, surrogate));, +    }, +    builder.add(newString(MIN_LOW_SURROGATE, MAX_HIGH_SURROGATE));, +    ILL_FORMED_STRINGS = builder.build();, +  }, +, +    assertEquals(4, Utf8.encodedLength(newString(MIN_HIGH_SURROGATE, MIN_LOW_SURROGATE)));, +    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT - 1, 3);, +    utf8Lengths.put(MIN_SUPPLEMENTARY_CODE_POINT, 4);, +    utf8Lengths.put(MAX_CODE_POINT, 4);, +    testEncodedLengthFails(newString(MIN_HIGH_SURROGATE), 0);, +    testEncodedLengthFails("foobar" + newString(MIN_HIGH_SURROGATE), 6);, +    testEncodedLengthFails(newString(MIN_LOW_SURROGATE), 0);, +    testEncodedLengthFails("foobar" + newString(MIN_LOW_SURROGATE), 6);, +    testEncodedLengthFails(newString(MIN_HIGH_SURROGATE, MIN_HIGH_SURROGATE), 0);, +  private static String newString(char... chars) {, +  private static byte[] toByteArray(int... bytes) {, +++ b/guava-tests/test/com/google/common/base/Utf8Test.java, +import static java.lang.Character.MAX_CODE_POINT;, +import static java.lang.Character.MAX_HIGH_SURROGATE;, +import static java.lang.Character.MAX_LOW_SURROGATE;, +import static java.lang.Character.MIN_HIGH_SURROGATE;, +import static java.lang.Character.MIN_LOW_SURROGATE;, +import static java.lang.Character.MIN_SUPPLEMENTARY_CODE_POINT;, +, +import com.google.common.collect.ImmutableList;, +  private static final ImmutableList<String> ILL_FORMED_STRINGS;, +  static {, +    ImmutableList.Builder<String> builder = ImmutableList.builder();, +    char[] surrogates = {, +      MAX_LOW_SURROGATE,, +      MAX_HIGH_SURROGATE,, +      MIN_LOW_SURROGATE,, +      MIN_HIGH_SURROGATE,, +    };, +    for (char surrogate : surrogates) {, +      builder.add(newString(surrogate));, +      builder.add(newString(surrogate, 'n'));, +      builder.add(newString('n', surrogate));]