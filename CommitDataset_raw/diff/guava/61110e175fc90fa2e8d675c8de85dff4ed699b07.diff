[+++ b/guava-tests/test/com/google/common/collect/ImmutableSortedMultisetTest.java, +  public void testForEachEntry() {, +    ImmutableSortedMultiset<String> multiset =, +        ImmutableSortedMultiset.<String>naturalOrder().add("a").add("b").add("a").add("c").build();, +    List<Multiset.Entry<String>> entries = new ArrayList<>();, +    multiset.forEachEntry((e, c) -> entries.add(Multisets.immutableEntry(e, c)));, +    assertThat(entries), +        .containsExactly(, +            Multisets.immutableEntry("a", 2),, +            Multisets.immutableEntry("b", 1),, +            Multisets.immutableEntry("c", 1)), +        .inOrder();, +  }, +, +++ b/guava-tests/test/com/google/common/collect/ImmutableSortedMultisetTest.java, +  public void testForEachEntry() {, +    ImmutableSortedMultiset<String> multiset =, +        ImmutableSortedMultiset.<String>naturalOrder().add("a").add("b").add("a").add("c").build();, +    List<Multiset.Entry<String>> entries = new ArrayList<>();, +    multiset.forEachEntry((e, c) -> entries.add(Multisets.immutableEntry(e, c)));, +    assertThat(entries), +        .containsExactly(, +            Multisets.immutableEntry("a", 2),, +            Multisets.immutableEntry("b", 1),, +            Multisets.immutableEntry("c", 1)), +        .inOrder();, +  }, +, +++ b/guava/src/com/google/common/collect/RegularImmutableSortedMultiset.java, +    for (int i = 0; i < length; i++) {]