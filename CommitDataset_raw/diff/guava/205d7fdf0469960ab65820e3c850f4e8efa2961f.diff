[+++ b/guava/src/com/google/common/util/concurrent/AbstractListenableFuture.java, + * Legacy location of {@link AbstractFuture}., + * @deprecated Use {@link AbstractFuture}., +@Deprecated, +++ b/guava/src/com/google/common/util/concurrent/AbstractListenableFuture.java, + * Legacy location of {@link AbstractFuture}., + * @deprecated Use {@link AbstractFuture}., +@Deprecated, +++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +  private class Transition extends AbstractFuture<State> {, +++ b/guava/src/com/google/common/util/concurrent/AbstractListenableFuture.java, + * Legacy location of {@link AbstractFuture}., + * @deprecated Use {@link AbstractFuture}., +@Deprecated, +++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +  private class Transition extends AbstractFuture<State> {, +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +   * {@link ListenableFutureTask}, {@link AbstractFuture}, and other utilities, +   * over creating plain {@code Future} instances to be upgraded to {@code, +   * ListenableFuture} after the fact., +      extends AbstractFuture<O> implements Runnable {, +  private static class ListFuture<T> extends AbstractFuture<List<T>> {, +++ b/guava/src/com/google/common/util/concurrent/AbstractListenableFuture.java, + * Legacy location of {@link AbstractFuture}., + * @deprecated Use {@link AbstractFuture}., +@Deprecated, +++ b/guava/src/com/google/common/util/concurrent/AbstractService.java, +  private class Transition extends AbstractFuture<State> {, +++ b/guava/src/com/google/common/util/concurrent/Futures.java, +   * {@link ListenableFutureTask}, {@link AbstractFuture}, and other utilities, +   * over creating plain {@code Future} instances to be upgraded to {@code, +   * ListenableFuture} after the fact., +      extends AbstractFuture<O> implements Runnable {, +  private static class ListFuture<T> extends AbstractFuture<List<T>> {, +++ b/guava/src/com/google/common/util/concurrent/SettableFuture.java, +public final class SettableFuture<V> extends AbstractFuture<V> {]