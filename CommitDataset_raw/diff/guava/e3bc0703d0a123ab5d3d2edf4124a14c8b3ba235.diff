[+++ b/src/com/google/common/base/Ascii.java, + * {@code 0x7F}), and to strings containing such characters., +++ b/src/com/google/common/base/Ascii.java, + * {@code 0x7F}), and to strings containing such characters., +++ b/src/com/google/common/collect/AbstractMultiset.java, +    return entrySet().hashCode();, +    return entrySet().toString();, +++ b/src/com/google/common/base/Ascii.java, + * {@code 0x7F}), and to strings containing such characters., +++ b/src/com/google/common/collect/AbstractMultiset.java, +    return entrySet().hashCode();, +    return entrySet().toString();, +++ b/src/com/google/common/collect/ForwardingMultiset.java, +  @Override @Beta protected boolean standardContains(@Nullable Object object) {, +   * A sensible definition of {@link #clear} in terms of the {@code iterator}, +   * method of {@link #entrySet}. If you override {@link #entrySet}, you may, +   * wish to override {@link #contains} to forward to this implementation., +   *, +   * @since 7, +   */, +  @Override @Beta protected void standardClear() {, +    Iterator<Entry<E>> entryIterator = entrySet().iterator();, +    while (entryIterator.hasNext()) {, +      entryIterator.next();, +      entryIterator.remove();, +    }, +  }, +, +  /**, +   * A sensible definition of {@link #removeAll} in terms of the {@code, +   * removeAll} method of {@link #elementSet}. If you override {@link, +   * #elementSet}, you may wish to override {@link #removeAll} to forward to, +   * this implementation., +   * A sensible definition of {@link #retainAll} in terms of the {@code, +   * retainAll} method of {@link #elementSet}. If you override {@link, +   * #elementSet}, you may wish to override {@link #retainAll} to forward to, +   * this implementation., +   * A sensible definition of {@link #hashCode} as {@code entrySet().hashCode()}, +   * . If you override {@link #entrySet}, you may wish to override {@link, +    return entrySet().hashCode();, +   * A sensible definition of {@link #toString} as {@code entrySet().toString()}, +   * . If you override {@link #entrySet}, you may wish to override {@link, +++ b/src/com/google/common/base/Ascii.java, + * {@code 0x7F}), and to strings containing such characters., +++ b/src/com/google/common/collect/AbstractMultiset.java, +    return entrySet().hashCode();, +    return entrySet().toString();, +++ b/src/com/google/common/collect/ForwardingMultiset.java, +  @Override @Beta protected boolean standardContains(@Nullable Object object) {, +   * A sensible definition of {@link #clear} in terms of the {@code iterator}, +   * method of {@link #entrySet}. If you override {@link #entrySet}, you may, +   * wish to override {@link #contains} to forward to this implementation., +   *, +   * @since 7, +   */, +  @Override @Beta protected void standardClear() {, +    Iterator<Entry<E>> entryIterator = entrySet().iterator();, +    while (entryIterator.hasNext()) {, +      entryIterator.next();, +      entryIterator.remove();, +    }, +  }, +, +  /**, +   * A sensible definition of {@link #removeAll} in terms of the {@code, +   * removeAll} method of {@link #elementSet}. If you override {@link, +   * #elementSet}, you may wish to override {@link #removeAll} to forward to, +   * this implementation., +   * A sensible definition of {@link #retainAll} in terms of the {@code, +   * retainAll} method of {@link #elementSet}. If you override {@link, +   * #elementSet}, you may wish to override {@link #retainAll} to forward to, +   * this implementation., +   * A sensible definition of {@link #hashCode} as {@code entrySet().hashCode()}, +   * . If you override {@link #entrySet}, you may wish to override {@link, +    return entrySet().hashCode();, +   * A sensible definition of {@link #toString} as {@code entrySet().toString()}, +   * . If you override {@link #entrySet}, you may wish to override {@link, +++ b/src/com/google/common/collect/ForwardingSortedSet.java, +import com.google.common.annotations.Beta;, +import java.util.Iterator;, +import java.util.NoSuchElementException;, +import javax.annotation.Nullable;, +, + * <p><em>Warning</em>: The methods of {@code ForwardingSortedSet} forward, + * <em>indiscriminately</em> to the methods of the delegate. For example,, + * overriding {@link #add} alone <em>will not</em> change the behavior of {@link, + * #addAll}, which can lead to unexpected behavior. In this case, you should, + * override {@code addAll} as well, either providing your own implementation, or, + * delegating to the provided {@code standardAddAll} method., + *, + * <p>Each of the {@code standard} methods, where appropriate, uses the set's, + * comparator (or the natural ordering of the elements, if there is no, + * comparator) to test element equality. As a result, if the comparator is not, + * consistent with equals, some of the standard implementations may violate the, + * {@code Set} contract., + *, + * <p>The {@code standard} methods and the collection views they return are not, + * guaranteed to be thread-safe, even when all of the methods that they depend, + * on are thread-safe., + *]