[+++ b/guava-gwt/test/com/google/common/util/concurrent/AtomicLongMapTest_gwt.java, +public void testRemoveIfZero() throws Exception {, +  com.google.common.util.concurrent.AtomicLongMapTest testCase = new com.google.common.util.concurrent.AtomicLongMapTest();, +  testCase.testRemoveIfZero();, +}, +, +++ b/guava-gwt/test/com/google/common/util/concurrent/AtomicLongMapTest_gwt.java, +public void testRemoveIfZero() throws Exception {, +  com.google.common.util.concurrent.AtomicLongMapTest testCase = new com.google.common.util.concurrent.AtomicLongMapTest();, +  testCase.testRemoveIfZero();, +}, +, +++ b/guava-tests/test/com/google/common/util/concurrent/AtomicLongMapTest.java, +  public void testRemoveIfZero() {, +    AtomicLongMap<String> map = AtomicLongMap.create();, +    String key = "key";, +    assertEquals(0, map.size());, +    assertTrue(map.isEmpty());, +    assertFalse(map.removeIfZero(key));, +, +    assertEquals(1, map.incrementAndGet(key));, +    assertFalse(map.removeIfZero(key));, +    assertEquals(2, map.incrementAndGet(key));, +    assertFalse(map.removeIfZero(key));, +    assertEquals(1, map.decrementAndGet(key));, +    assertFalse(map.removeIfZero(key));, +    assertEquals(0, map.decrementAndGet(key));, +    assertTrue(map.removeIfZero(key));, +    assertFalse(map.containsKey(key));, +  }, +, +++ b/guava-gwt/test/com/google/common/util/concurrent/AtomicLongMapTest_gwt.java, +public void testRemoveIfZero() throws Exception {, +  com.google.common.util.concurrent.AtomicLongMapTest testCase = new com.google.common.util.concurrent.AtomicLongMapTest();, +  testCase.testRemoveIfZero();, +}, +, +++ b/guava-tests/test/com/google/common/util/concurrent/AtomicLongMapTest.java, +  public void testRemoveIfZero() {, +    AtomicLongMap<String> map = AtomicLongMap.create();, +    String key = "key";, +    assertEquals(0, map.size());, +    assertTrue(map.isEmpty());, +    assertFalse(map.removeIfZero(key));, +, +    assertEquals(1, map.incrementAndGet(key));, +    assertFalse(map.removeIfZero(key));, +    assertEquals(2, map.incrementAndGet(key));, +    assertFalse(map.removeIfZero(key));, +    assertEquals(1, map.decrementAndGet(key));, +    assertFalse(map.removeIfZero(key));, +    assertEquals(0, map.decrementAndGet(key));, +    assertTrue(map.removeIfZero(key));, +    assertFalse(map.containsKey(key));, +  }, +, +++ b/guava/src/com/google/common/util/concurrent/AtomicLongMap.java, +   * Atomically remove {@code key} from the map iff its associated value is 0., +   *, +   * @since 20.0, +   */, +  @CanIgnoreReturnValue, +  public boolean removeIfZero(K key) {, +    return remove(key, 0);, +  }, +, +  /**]