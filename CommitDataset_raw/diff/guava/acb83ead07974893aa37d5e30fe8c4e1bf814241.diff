[+++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +    for (boolean asCharSource : new boolean[] {false, true}) {, +          SourceSinkFactories.byteArraySourceFactory(), asCharSource));, +          SourceSinkFactories.emptyByteSourceFactory(), asCharSource));, +    }, +++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +    for (boolean asCharSource : new boolean[] {false, true}) {, +          SourceSinkFactories.byteArraySourceFactory(), asCharSource));, +          SourceSinkFactories.emptyByteSourceFactory(), asCharSource));, +    }, +++ b/guava-tests/test/com/google/common/io/ByteSourceTester.java, +        suite.addTest(suiteForBytes(factory,, +            entry.getValue().getBytes(Charsets.UTF_8), name, entry.getKey(), true));, +  static TestSuite suiteForString(ByteSourceFactory factory, String string,, +    TestSuite suite = suiteForBytes(, +        factory, string.getBytes(Charsets.UTF_8), name, desc, true);, +  static TestSuite suiteForBytes(ByteSourceFactory factory, byte[] bytes,, +++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +    for (boolean asCharSource : new boolean[] {false, true}) {, +          SourceSinkFactories.byteArraySourceFactory(), asCharSource));, +          SourceSinkFactories.emptyByteSourceFactory(), asCharSource));, +    }, +++ b/guava-tests/test/com/google/common/io/ByteSourceTester.java, +        suite.addTest(suiteForBytes(factory,, +            entry.getValue().getBytes(Charsets.UTF_8), name, entry.getKey(), true));, +  static TestSuite suiteForString(ByteSourceFactory factory, String string,, +    TestSuite suite = suiteForBytes(, +        factory, string.getBytes(Charsets.UTF_8), name, desc, true);, +  static TestSuite suiteForBytes(ByteSourceFactory factory, byte[] bytes,, +++ b/guava-tests/test/com/google/common/io/CharSourceTest.java, +    for (boolean asByteSource : new boolean[] {false, true}) {, +          SourceSinkFactories.stringCharSourceFactory(), asByteSource));, +          SourceSinkFactories.emptyCharSourceFactory(), asByteSource));, +    }, +++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +    for (boolean asCharSource : new boolean[] {false, true}) {, +          SourceSinkFactories.byteArraySourceFactory(), asCharSource));, +          SourceSinkFactories.emptyByteSourceFactory(), asCharSource));, +    }, +++ b/guava-tests/test/com/google/common/io/ByteSourceTester.java, +        suite.addTest(suiteForBytes(factory,, +            entry.getValue().getBytes(Charsets.UTF_8), name, entry.getKey(), true));, +  static TestSuite suiteForString(ByteSourceFactory factory, String string,, +    TestSuite suite = suiteForBytes(, +        factory, string.getBytes(Charsets.UTF_8), name, desc, true);, +  static TestSuite suiteForBytes(ByteSourceFactory factory, byte[] bytes,, +++ b/guava-tests/test/com/google/common/io/CharSourceTest.java, +    for (boolean asByteSource : new boolean[] {false, true}) {, +          SourceSinkFactories.stringCharSourceFactory(), asByteSource));, +          SourceSinkFactories.emptyCharSourceFactory(), asByteSource));, +    }, +++ b/guava-tests/test/com/google/common/io/CharSourceTester.java, +import static com.google.common.io.SourceSinkFactory.ByteSourceFactory;, +import com.google.common.base.Charsets;, +  static TestSuite tests(String name, CharSourceFactory factory, boolean testAsByteSource) {, +      if (testAsByteSource) {, +        suite.addTest(suiteForBytes(factory,, +            entry.getValue().getBytes(Charsets.UTF_8), name, entry.getKey(), true));, +      } else {, +    }, +    return suite;, +  }, +, +  static TestSuite suiteForBytes(CharSourceFactory factory, byte[] bytes,, +      String name, String desc, boolean slice) {, +    TestSuite suite = suiteForString(, +        factory, new String(bytes, Charsets.UTF_8), name, desc);, +    ByteSourceFactory byteSourceFactory = SourceSinkFactories.asByteSourceFactory(factory);, +    suite.addTest(ByteSourceTester.suiteForBytes(byteSourceFactory, bytes,, +        name + ".asByteSource[Charset]", desc, slice));, +++ b/guava-tests/test/com/google/common/io/ByteSourceTest.java, +    for (boolean asCharSource : new boolean[] {false, true}) {, +          SourceSinkFactories.byteArraySourceFactory(), asCharSource));, +          SourceSinkFactories.emptyByteSourceFactory(), asCharSource));, +    }, +++ b/guava-tests/test/com/google/common/io/ByteSourceTester.java, +        suite.addTest(suiteForBytes(factory,, +            entry.getValue().getBytes(Charsets.UTF_8), name, entry.getKey(), true));, +  static TestSuite suiteForString(ByteSourceFactory factory, String string,, +    TestSuite suite = suiteForBytes(, +        factory, string.getBytes(Charsets.UTF_8), name, desc, true);, +  static TestSuite suiteForBytes(ByteSourceFactory factory, byte[] bytes,, +++ b/guava-tests/test/com/google/common/io/CharSourceTest.java, +    for (boolean asByteSource : new boolean[] {false, true}) {, +          SourceSinkFactories.stringCharSourceFactory(), asByteSource));, +          SourceSinkFactories.emptyCharSourceFactory(), asByteSource));, +    }, +++ b/guava-tests/test/com/google/common/io/CharSourceTester.java, +import static com.google.common.io.SourceSinkFactory.ByteSourceFactory;, +import com.google.common.base.Charsets;, +  static TestSuite tests(String name, CharSourceFactory factory, boolean testAsByteSource) {, +      if (testAsByteSource) {, +        suite.addTest(suiteForBytes(factory,, +            entry.getValue().getBytes(Charsets.UTF_8), name, entry.getKey(), true));, +      } else {, +    }, +    return suite;, +  }, +, +  static TestSuite suiteForBytes(CharSourceFactory factory, byte[] bytes,]