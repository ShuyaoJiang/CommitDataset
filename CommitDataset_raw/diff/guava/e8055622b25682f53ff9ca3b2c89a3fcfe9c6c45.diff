[+++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and, + *       {@link #toString} behavior you expect, + *   <li>Improved memory compactness and locality, + *   <li>Can be queried without allocating garbage, +     * Returns a new immutable array. The builder can continue to be used after this call, to, +     * append more values and build again., +  // TODO(kevinb): other instance methods to consider if we fork common.primitives:, +  // forEach(IntConsumer), stream(), +    // inherit: isEmpty, containsAll, toArray x2, {,list,spl}iterator, stream, forEach, mutations, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and, + *       {@link #toString} behavior you expect, + *   <li>Improved memory compactness and locality, + *   <li>Can be queried without allocating garbage, +     * Returns a new immutable array. The builder can continue to be used after this call, to, +     * append more values and build again., +  // TODO(kevinb): other instance methods to consider if we fork common.primitives:, +  // forEach(IntConsumer), stream(), +    // inherit: isEmpty, containsAll, toArray x2, {,list,spl}iterator, stream, forEach, mutations, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and, + *       {@link #toString} behavior you expect, + *   <li>Improved memory compactness and locality, + *   <li>Can be queried without allocating garbage, +     * Returns a new immutable array. The builder can continue to be used after this call, to, +     * append more values and build again., +  // TODO(kevinb): other instance methods to consider if we fork common.primitives:, +  // forEach(IntConsumer), stream(), +    // inherit: isEmpty, containsAll, toArray x2, {,list,spl}iterator, stream, forEach, mutations, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and, + *       {@link #toString} behavior you expect, + *   <li>Improved memory compactness and locality, + *   <li>Can be queried without allocating garbage, +     * Returns a new immutable array. The builder can continue to be used after this call, to, +     * append more values and build again., +  // TODO(kevinb): other instance methods to consider if we fork common.primitives:, +  // forEach(IntConsumer), stream(), +    // inherit: isEmpty, containsAll, toArray x2, {,list,spl}iterator, stream, forEach, mutations, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and, + *       {@link #toString} behavior you expect, + *   <li>Improved memory compactness and locality, + *   <li>Can be queried without allocating garbage, +     * Returns a new immutable array. The builder can continue to be used after this call, to, +     * append more values and build again., +  // TODO(kevinb): other instance methods to consider if we fork common.primitives:, +  // forEach(IntConsumer), stream(), +    // inherit: isEmpty, containsAll, toArray x2, {,list,spl}iterator, stream, forEach, mutations, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and, + *       {@link #toString} behavior you expect, + *   <li>Improved memory compactness and locality, + *   <li>Can be queried without allocating garbage, +     * Returns a new immutable array. The builder can continue to be used after this call, to, +     * append more values and build again., +  // TODO(kevinb): other instance methods to consider if we fork common.primitives:, +  // forEach(IntConsumer), stream(), +    // inherit: isEmpty, containsAll, toArray x2, {,list,spl}iterator, stream, forEach, mutations, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and, + *       {@link #toString} behavior you expect, + *   <li>Improved memory compactness and locality, + *   <li>Can be queried without allocating garbage, +     * Returns a new immutable array. The builder can continue to be used after this call, to, +     * append more values and build again., +  // TODO(kevinb): other instance methods to consider if we fork common.primitives:, +  // forEach(IntConsumer), stream(), +    // inherit: isEmpty, containsAll, toArray x2, {,list,spl}iterator, stream, forEach, mutations, +++ b/android/guava-tests/test/com/google/common/primitives/ImmutableIntArrayTest.java, +++ b/android/guava/src/com/google/common/primitives/ImmutableIntArray.java, + *   <li>Has the value-based (not identity-based) {@link #equals}, {@link #hashCode}, and]