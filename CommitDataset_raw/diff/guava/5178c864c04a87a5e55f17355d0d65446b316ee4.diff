[+++ b/guava/src/com/google/common/graph/Graph.java, + * <li><b>Nodes/edges must be useable as {@code Map} keys</b>:, + *   <ul>, + *   <li>They must be unique in a graph: nodes {@code node1} and {@code node2} are considered, + *       different if and only if {@code node1.equals(node2) == false}, and the same for edges., + *   <li>If graph elements have mutable state, both of the following must be true:, + *     <ul>the mutable state must not be reflected in the {@code equals/hashCode} methods, + *         (this is discussed in the {@code Map} documentation in detail), + *     <ul>don't construct multiple elements that are equal to each other and expect them to be, + *         interchangeable.  In particular, when adding such elements to a graph, you should create, + *         them once and store the reference if you will need to refer to those elements more than, + *         once during creation (rather than passing {@code new MyMutableNode(id)} to each, + *         {@code add*()} call)., + *   </ul>, + *   <br>Generally speaking, your design may be more robust if you use immutable nodes/edges and, + * store mutable per-element state in a separate data structure (e.g. an element-to-state map)., + *       this (usually) implies that nodes are graph-specific]