[+++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +      COMMA_SPLITTER.withKeyValueSeparator("=").split("a=1,b,c=2");, +      Splitter.on(',').withKeyValueSeparator(":").split("a:1,b:2,a:3");, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +      COMMA_SPLITTER.withKeyValueSeparator("=").split("a=1,b,c=2");, +      Splitter.on(',').withKeyValueSeparator(":").split("a:1,b:2,a:3");, +++ b/guava-tests/test/com/google/common/collect/ComputingConcurrentHashMapTest.java, +      map.get(new Object());, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +      COMMA_SPLITTER.withKeyValueSeparator("=").split("a=1,b,c=2");, +      Splitter.on(',').withKeyValueSeparator(":").split("a:1,b:2,a:3");, +++ b/guava-tests/test/com/google/common/collect/ComputingConcurrentHashMapTest.java, +      map.get(new Object());, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +      EvictingQueue.create(-1);, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +      COMMA_SPLITTER.withKeyValueSeparator("=").split("a=1,b,c=2");, +      Splitter.on(',').withKeyValueSeparator(":").split("a:1,b:2,a:3");, +++ b/guava-tests/test/com/google/common/collect/ComputingConcurrentHashMapTest.java, +      map.get(new Object());, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +      EvictingQueue.create(-1);, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +      fluent(1, null, 2).toMap(Functions.constant("foo"));, +      fluent(1, 2, 3).toMap(Functions.constant(null));, +      fluent(1, 2, 3).uniqueIndex(Functions.constant(null));, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +      COMMA_SPLITTER.withKeyValueSeparator("=").split("a=1,b,c=2");, +      Splitter.on(',').withKeyValueSeparator(":").split("a:1,b:2,a:3");, +++ b/guava-tests/test/com/google/common/collect/ComputingConcurrentHashMapTest.java, +      map.get(new Object());, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +      EvictingQueue.create(-1);, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +      fluent(1, null, 2).toMap(Functions.constant("foo"));, +      fluent(1, 2, 3).toMap(Functions.constant(null));, +      fluent(1, 2, 3).uniqueIndex(Functions.constant(null));, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      Maps.<SomeEnum, Long>newEnumMap((Class<MapsTest.SomeEnum>) null);, +      Maps.newEnumMap(original);, +      Maps.toMap(strings, Functions.constant("foo"));, +      Maps.toMap(strings, Functions.constant(null));, +      Maps.uniqueIndex(listWithNull, Functions.constant(1));, +      Maps.uniqueIndex(oneStringList, Functions.constant(null));, +      Maps.fromProperties(properties);, +      Maps.fromProperties(properties);, +      Maps.subMap(map, Range.closed(4, 8));, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +      COMMA_SPLITTER.withKeyValueSeparator("=").split("a=1,b,c=2");, +      Splitter.on(',').withKeyValueSeparator(":").split("a:1,b:2,a:3");, +++ b/guava-tests/test/com/google/common/collect/ComputingConcurrentHashMapTest.java, +      map.get(new Object());, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +      EvictingQueue.create(-1);, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +      fluent(1, null, 2).toMap(Functions.constant("foo"));, +      fluent(1, 2, 3).toMap(Functions.constant(null));, +      fluent(1, 2, 3).uniqueIndex(Functions.constant(null));, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      Maps.<SomeEnum, Long>newEnumMap((Class<MapsTest.SomeEnum>) null);, +      Maps.newEnumMap(original);, +      Maps.toMap(strings, Functions.constant("foo"));, +      Maps.toMap(strings, Functions.constant(null));, +      Maps.uniqueIndex(listWithNull, Functions.constant(1));, +      Maps.uniqueIndex(oneStringList, Functions.constant(null));, +      Maps.fromProperties(properties);, +      Maps.fromProperties(properties);, +      Maps.subMap(map, Range.closed(4, 8));, +++ b/guava-tests/test/com/google/common/collect/MultimapsTest.java, +      Multimaps.index(values, Functions.identity());, +    } catch (NullPointerException expected) {, +    }, +      Multimaps.index(values, Functions.constant(null));, +    } catch (NullPointerException expected) {, +    }, +++ b/guava-tests/test/com/google/common/base/SplitterTest.java, +      COMMA_SPLITTER.withKeyValueSeparator("=").split("a=1,b,c=2");, +      Splitter.on(',').withKeyValueSeparator(":").split("a:1,b:2,a:3");, +++ b/guava-tests/test/com/google/common/collect/ComputingConcurrentHashMapTest.java, +      map.get(new Object());, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +      EvictingQueue.create(-1);, +++ b/guava-tests/test/com/google/common/collect/FluentIterableTest.java, +      fluent(1, null, 2).toMap(Functions.constant("foo"));, +      fluent(1, 2, 3).toMap(Functions.constant(null));, +      fluent(1, 2, 3).uniqueIndex(Functions.constant(null));, +++ b/guava-tests/test/com/google/common/collect/MapsTest.java, +      Maps.<SomeEnum, Long>newEnumMap((Class<MapsTest.SomeEnum>) null);, +      Maps.newEnumMap(original);, +      Maps.toMap(strings, Functions.constant("foo"));, +      Maps.toMap(strings, Functions.constant(null));, +      Maps.uniqueIndex(listWithNull, Functions.constant(1));, +      Maps.uniqueIndex(oneStringList, Functions.constant(null));, +      Maps.fromProperties(properties);, +      Maps.fromProperties(properties);, +      Maps.subMap(map, Range.closed(4, 8));, +++ b/guava-tests/test/com/google/common/collect/MultimapsTest.java, +      Multimaps.index(values, Functions.identity());, +    } catch (NullPointerException expected) {, +    }]