[+++ b/android/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   *       not annotated nullable (according to the rules of {@link NullPointerTester}) should throw, +   *       {@link NullPointerException}., +++ b/android/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   *       not annotated nullable (according to the rules of {@link NullPointerTester}) should throw, +   *       {@link NullPointerException}., +++ b/android/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +  @NullableDecl, +  @NullableDecl, +  @NullableDecl, +++ b/android/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   *       not annotated nullable (according to the rules of {@link NullPointerTester}) should throw, +   *       {@link NullPointerException}., +++ b/android/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +  @NullableDecl, +  @NullableDecl, +  @NullableDecl, +++ b/android/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +import static com.google.common.testing.NullPointerTester.isNullable;, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +   * aren't annotated nullable (according to the rules of {@link NullPointerTester}). In details:, +   *       that's not annotated nullable should throw {@link NullPointerException}., +  @NullableDecl, +   * Instantiates using {@code factory}. If {@code factory} is annotated nullable and returns null,, +   * null will be returned., +  @NullableDecl, +  @NullableDecl, +    if (isNullable(param)) {, +      if (isNullable(param)) {, +  @NullableDecl, +          factory + " returns null but it's not annotated with @NullableDecl", isNullable(factory));, +++ b/android/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   *       not annotated nullable (according to the rules of {@link NullPointerTester}) should throw, +   *       {@link NullPointerException}., +++ b/android/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +  @NullableDecl, +  @NullableDecl, +  @NullableDecl, +++ b/android/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +import static com.google.common.testing.NullPointerTester.isNullable;, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +   * aren't annotated nullable (according to the rules of {@link NullPointerTester}). In details:, +   *       that's not annotated nullable should throw {@link NullPointerException}., +  @NullableDecl, +   * Instantiates using {@code factory}. If {@code factory} is annotated nullable and returns null,, +   * null will be returned., +  @NullableDecl, +  @NullableDecl, +    if (isNullable(param)) {, +      if (isNullable(param)) {, +  @NullableDecl, +          factory + " returns null but it's not annotated with @NullableDecl", isNullable(factory));, +++ b/android/guava-testlib/src/com/google/common/testing/DummyProxy.java, +import static com.google.common.testing.NullPointerTester.isNullable;, +        if (!isNullable(param)) {, +++ b/android/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   *       not annotated nullable (according to the rules of {@link NullPointerTester}) should throw, +   *       {@link NullPointerException}., +++ b/android/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +  @NullableDecl, +  @NullableDecl, +  @NullableDecl, +++ b/android/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +import static com.google.common.testing.NullPointerTester.isNullable;, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +   * aren't annotated nullable (according to the rules of {@link NullPointerTester}). In details:, +   *       that's not annotated nullable should throw {@link NullPointerException}., +  @NullableDecl, +   * Instantiates using {@code factory}. If {@code factory} is annotated nullable and returns null,, +   * null will be returned., +  @NullableDecl, +  @NullableDecl, +    if (isNullable(param)) {, +      if (isNullable(param)) {, +  @NullableDecl, +          factory + " returns null but it's not annotated with @NullableDecl", isNullable(factory));, +++ b/android/guava-testlib/src/com/google/common/testing/DummyProxy.java, +import static com.google.common.testing.NullPointerTester.isNullable;, +        if (!isNullable(param)) {, +++ b/android/guava-testlib/src/com/google/common/testing/FreshValueGenerator.java, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +  @NullableDecl, +  @NullableDecl, +    public boolean equals(@NullableDecl Object obj) {, +++ b/android/guava-testlib/src/com/google/common/testing/AbstractPackageSanityTests.java, +   *       not annotated nullable (according to the rules of {@link NullPointerTester}) should throw, +   *       {@link NullPointerException}., +++ b/android/guava-testlib/src/com/google/common/testing/ArbitraryInstances.java, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +  @NullableDecl, +  @NullableDecl, +  @NullableDecl, +++ b/android/guava-testlib/src/com/google/common/testing/ClassSanityTester.java, +import static com.google.common.testing.NullPointerTester.isNullable;, +import org.checkerframework.checker.nullness.compatqual.NullableDecl;, +   * aren't annotated nullable (according to the rules of {@link NullPointerTester}). In details:]