[+++ b/guava-tests/test/com/google/common/util/concurrent/FuturesGetCheckedInputs.java, +      UncheckedThrowingFuture.throwingRuntimeException(RUNTIME_EXCEPTION);, +  static final Future<String> ERROR_FUTURE = UncheckedThrowingFuture.throwingError(ERROR);, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesGetCheckedInputs.java, +      UncheckedThrowingFuture.throwingRuntimeException(RUNTIME_EXCEPTION);, +  static final Future<String> ERROR_FUTURE = UncheckedThrowingFuture.throwingError(ERROR);, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesGetCheckedTest.java, +import static com.google.common.util.concurrent.FuturesGetCheckedInputs.ERROR_FUTURE;, +  public void testGetCheckedUntimed_Error() throws TwoArgConstructorException {, +    try {, +      getChecked(ERROR_FUTURE, TwoArgConstructorException.class);, +    } catch (Error expected) {, +      assertEquals(ERROR, expected);, +      return;, +    }, +    fail();, +  }, +, +  public void testGetCheckedTimed_Error() throws TwoArgConstructorException {, +    try {, +      getChecked(ERROR_FUTURE, TwoArgConstructorException.class, 0, SECONDS);, +    } catch (Error expected) {, +      assertEquals(ERROR, expected);, +      return;, +    }, +    fail();, +  }, +, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesGetCheckedInputs.java, +      UncheckedThrowingFuture.throwingRuntimeException(RUNTIME_EXCEPTION);, +  static final Future<String> ERROR_FUTURE = UncheckedThrowingFuture.throwingError(ERROR);, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesGetCheckedTest.java, +import static com.google.common.util.concurrent.FuturesGetCheckedInputs.ERROR_FUTURE;, +  public void testGetCheckedUntimed_Error() throws TwoArgConstructorException {, +    try {, +      getChecked(ERROR_FUTURE, TwoArgConstructorException.class);, +    } catch (Error expected) {, +      assertEquals(ERROR, expected);, +      return;, +    }, +    fail();, +  }, +, +  public void testGetCheckedTimed_Error() throws TwoArgConstructorException {, +    try {, +      getChecked(ERROR_FUTURE, TwoArgConstructorException.class, 0, SECONDS);, +    } catch (Error expected) {, +      assertEquals(ERROR, expected);, +      return;, +    }, +    fail();, +  }, +, +++ b/guava-tests/test/com/google/common/util/concurrent/FuturesGetUncheckedTest.java, +import static com.google.common.util.concurrent.FuturesGetCheckedInputs.ERROR_FUTURE;, +, +  public void testGetUnchecked_Error() {, +    try {, +      getUnchecked(ERROR_FUTURE);, +    } catch (Error expected) {, +      assertEquals(ERROR, expected);, +      return;, +    }, +    fail();, +  }]