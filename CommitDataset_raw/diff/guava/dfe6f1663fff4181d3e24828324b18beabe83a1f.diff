[+++ b/guava/src/com/google/common/collect/Maps.java, +   * <p>This method's signature will not permit you to convert a {@code NavigableMap<? extends K,, +   * V>} to a {@code NavigableMap<K, V>}. If it permitted this, the returned map's {@code, +   * comparator()} method might return a {@code Comparator<? extends K>}, which works only on a, +   * particular subtype of {@code K}, but promise that it's a {@code Comparator<? super K>}, which, +   * must work on any type of {@code K}., +   *, +  public static <K, V> NavigableMap<K, V> unmodifiableNavigableMap(, +      NavigableMap<K, ? extends V> map) {, +      @SuppressWarnings("unchecked") // covariant, +      NavigableMap<K, V> result = (NavigableMap) map;, +      return result;, +  private static <K, V> Entry<K, V> unmodifiableOrNull(@Nullable Entry<K, ? extends V> entry) {, +    private final NavigableMap<K, ? extends V> delegate;, +    UnmodifiableNavigableMap(NavigableMap<K, ? extends V> delegate) {, +        NavigableMap<K, ? extends V> delegate, UnmodifiableNavigableMap<K, V> descendingMap) {]