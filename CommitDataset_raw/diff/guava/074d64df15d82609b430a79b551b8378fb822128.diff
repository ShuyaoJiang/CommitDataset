[+++ b/guava-gwt/src/com/google/common/primitives/UnsignedLong_CustomFieldSerializer.java, +    return UnsignedLong.fromLongBits(reader.readLong());, +++ b/guava-gwt/src/com/google/common/primitives/UnsignedLong_CustomFieldSerializer.java, +    return UnsignedLong.fromLongBits(reader.readLong());, +++ b/guava-tests/test/com/google/common/primitives/UnsignedLongTest.java, +          UnsignedLongs.toString(value), value, UnsignedLong.fromLongBits(value).longValue());, +          UnsignedLong.fromLongBits(value).bigIntegerValue());, +      UnsignedLong unsignedValue = UnsignedLong.fromLongBits(value);, +        UnsignedLong value = UnsignedLong.fromLongBits(l);, +        UnsignedLong value = UnsignedLong.fromLongBits(l);, +      UnsignedLong unsignedValue = UnsignedLong.fromLongBits(value);, +      UnsignedLong unsignedValue = UnsignedLong.fromLongBits(value);, +  public void testPlus() {, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +        UnsignedLong unsignedSum = aUnsigned.plus(bUnsigned);, +  public void testMinus() {, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +        UnsignedLong unsignedSub = aUnsigned.minus(bUnsigned);, +  public void testTimes() {, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +        UnsignedLong unsignedMul = aUnsigned.times(bUnsigned);, +  public void testDividedBy() {, +          UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +          UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +          UnsignedLong unsignedDiv = aUnsigned.dividedBy(bUnsigned);, +        UnsignedLong.fromLongBits(a).dividedBy(UnsignedLong.ZERO);, +  public void testMod() {, +          UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +          UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +          UnsignedLong unsignedRem = aUnsigned.mod(bUnsigned);, +  public void testModByZero() {, +        UnsignedLong.fromLongBits(a).mod(UnsignedLong.ZERO);, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +      equalsTester.addEqualityGroup(UnsignedLong.fromLongBits(a), UnsignedLong.valueOf(big),, +      UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +      SerializableTester.reserializeAndAssert(UnsignedLong.fromLongBits(a));, +++ b/guava-gwt/src/com/google/common/primitives/UnsignedLong_CustomFieldSerializer.java, +    return UnsignedLong.fromLongBits(reader.readLong());, +++ b/guava-tests/test/com/google/common/primitives/UnsignedLongTest.java, +          UnsignedLongs.toString(value), value, UnsignedLong.fromLongBits(value).longValue());, +          UnsignedLong.fromLongBits(value).bigIntegerValue());, +      UnsignedLong unsignedValue = UnsignedLong.fromLongBits(value);, +        UnsignedLong value = UnsignedLong.fromLongBits(l);, +        UnsignedLong value = UnsignedLong.fromLongBits(l);, +      UnsignedLong unsignedValue = UnsignedLong.fromLongBits(value);, +      UnsignedLong unsignedValue = UnsignedLong.fromLongBits(value);, +  public void testPlus() {, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +        UnsignedLong unsignedSum = aUnsigned.plus(bUnsigned);, +  public void testMinus() {, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +        UnsignedLong unsignedSub = aUnsigned.minus(bUnsigned);, +  public void testTimes() {, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +        UnsignedLong unsignedMul = aUnsigned.times(bUnsigned);, +  public void testDividedBy() {, +          UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +          UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +          UnsignedLong unsignedDiv = aUnsigned.dividedBy(bUnsigned);, +        UnsignedLong.fromLongBits(a).dividedBy(UnsignedLong.ZERO);, +  public void testMod() {, +          UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +          UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +          UnsignedLong unsignedRem = aUnsigned.mod(bUnsigned);, +  public void testModByZero() {, +        UnsignedLong.fromLongBits(a).mod(UnsignedLong.ZERO);, +        UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +        UnsignedLong bUnsigned = UnsignedLong.fromLongBits(b);, +      equalsTester.addEqualityGroup(UnsignedLong.fromLongBits(a), UnsignedLong.valueOf(big),, +      UnsignedLong aUnsigned = UnsignedLong.fromLongBits(a);, +      SerializableTester.reserializeAndAssert(UnsignedLong.fromLongBits(a));, +++ b/guava/src/com/google/common/primitives/UnsignedLong.java, +import javax.annotation.CheckReturnValue;, +    // TODO(user): deprecate this, +    return fromLongBits(value);, +   * Returns an {@code UnsignedLong} corresponding to a given bit representation., +   * The argument is interpreted as an unsigned 64-bit value., +   *, +   * @since 14.0, +   */, +  public static UnsignedLong fromLongBits(long bits) {, +    // TODO(user): consider caching small values, like Long.valueOf, +    return new UnsignedLong(bits);, +  }, +, +  /**, +   * Returns a {@code UnsignedLong} representing the same value as the specified, +   * {@code BigInteger}. This is the inverse operation of {@link #bigIntegerValue()}., +    // TODO(user): deprecate this, +    return plus(val);, +  }, +, +  /**]