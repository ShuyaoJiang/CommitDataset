[+++ b/guava/src/com/google/common/graph/Graph.java, +   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same structural, +   * relationships as those in this graph., +   * <p>Graph properties are <b>not</b> respected by this method. For example, two graphs may, +   * <p>A {@link Graph} cannot be equal to an instance of a subinterface of {@link Graph} that, +   * redefines the definition of equality, such as {@link Network}, even if by this definition they, +   * would otherwise be equal., +++ b/guava/src/com/google/common/graph/Graph.java, +   * Returns {@code true} iff {@code object} is a {@link Graph} that has the same structural, +   * relationships as those in this graph., +   * <p>Graph properties are <b>not</b> respected by this method. For example, two graphs may, +   * <p>A {@link Graph} cannot be equal to an instance of a subinterface of {@link Graph} that, +   * redefines the definition of equality, such as {@link Network}, even if by this definition they, +   * would otherwise be equal., +++ b/guava/src/com/google/common/graph/Network.java, +   * Returns {@code true} iff {@code object} is a {@link Network} that has the same structural, +   * relationships as those in this network., +   * <p>Thus, two networks A and B are equal if <b>all</b> of the following are true:, +   * <p>Network properties are <b>not</b> respected by this method. For example, two networks may be, +   * order in which edges or nodes are added to the network, and the order in which they are, +   * iterated over, are irrelevant., +   * Returns the hash code for this network. The hash code of a network is defined as the hash code, +   * of a map from each of the network's nodes to its outgoing edges.]