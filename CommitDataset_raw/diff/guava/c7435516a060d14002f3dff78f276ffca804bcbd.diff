[+++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/AbstractFuture.java, +  protected final boolean wasInterrupted() {, +    return mayInterruptIfRunning;, +  }, +, +++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/AbstractFuture.java, +  protected final boolean wasInterrupted() {, +    return mayInterruptIfRunning;, +  }, +, +++ b/guava-gwt/test/com/google/common/util/concurrent/TrustedInputFutureTest_gwt.java, +public void testDelegated_afterInterrupted() throws Exception {, +  com.google.common.util.concurrent.TrustedInputFutureTest testCase = new com.google.common.util.concurrent.TrustedInputFutureTest();, +  testCase.setUp();, +  testCase.testDelegated_afterInterrupted();, +}, +, +++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/AbstractFuture.java, +  protected final boolean wasInterrupted() {, +    return mayInterruptIfRunning;, +  }, +, +++ b/guava-gwt/test/com/google/common/util/concurrent/TrustedInputFutureTest_gwt.java, +public void testDelegated_afterInterrupted() throws Exception {, +  com.google.common.util.concurrent.TrustedInputFutureTest testCase = new com.google.common.util.concurrent.TrustedInputFutureTest();, +  testCase.setUp();, +  testCase.testDelegated_afterInterrupted();, +}, +, +++ b/guava-gwt/test/com/google/common/util/concurrent/UntrustedInputFutureTest_gwt.java, +public void testDelegated_afterInterrupted() throws Exception {, +  com.google.common.util.concurrent.UntrustedInputFutureTest testCase = new com.google.common.util.concurrent.UntrustedInputFutureTest();, +  testCase.setUp();, +  testCase.testDelegated_afterInterrupted();, +}, +, +++ b/guava-gwt/src-super/com/google/common/util/concurrent/super/com/google/common/util/concurrent/AbstractFuture.java, +  protected final boolean wasInterrupted() {, +    return mayInterruptIfRunning;, +  }, +, +++ b/guava-gwt/test/com/google/common/util/concurrent/TrustedInputFutureTest_gwt.java, +public void testDelegated_afterInterrupted() throws Exception {, +  com.google.common.util.concurrent.TrustedInputFutureTest testCase = new com.google.common.util.concurrent.TrustedInputFutureTest();, +  testCase.setUp();, +  testCase.testDelegated_afterInterrupted();, +}, +, +++ b/guava-gwt/test/com/google/common/util/concurrent/UntrustedInputFutureTest_gwt.java, +public void testDelegated_afterInterrupted() throws Exception {, +  com.google.common.util.concurrent.UntrustedInputFutureTest testCase = new com.google.common.util.concurrent.UntrustedInputFutureTest();, +  testCase.setUp();, +  testCase.testDelegated_afterInterrupted();, +}, +, +++ b/guava-tests/test/com/google/common/util/concurrent/AbstractAbstractFutureTest.java, +    assertThat(delegate.wasInterrupted()).isFalse();, +    assertThat(future.wasInterrupted()).isFalse();, +    assertThat(future.cancel(true /* mayInterruptIfRunning */)).isTrue();, +    assertThat(delegate.wasInterrupted()).isTrue();, +    assertThat(future.wasInterrupted()).isTrue();, +    assertThat(delegate.wasInterrupted()).isFalse();, +  }, +, +  public void testDelegated_afterInterrupted() throws Exception {, +    future.cancel(true /** mayInterruptIfRunning */);, +, +    assertThat(future.setFuture(delegate)).isFalse();, +, +    assertThat(future.isCancelled()).isTrue();, +    assertThat(delegate.isCancelled()).isTrue();, +    assertThat(delegate.wasInterrupted()).isTrue();]