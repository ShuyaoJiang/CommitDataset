[+++ b/guava-testlib/src/com/google/common/collect/testing/google/MultimapTestSuiteBuilder.java, +    derivedSuites.add(computeValuesTestSuite(parentBuilder));, +        .named(parentBuilder.getName() + ".values"), +++ b/guava-testlib/src/com/google/common/collect/testing/google/MultimapTestSuiteBuilder.java, +    derivedSuites.add(computeValuesTestSuite(parentBuilder));, +        .named(parentBuilder.getName() + ".values"), +++ b/guava/src/com/google/common/collect/FilteredEntryMultimap.java, +  , +  @Override, +  Collection<V> createValues() {, +    return new FilteredMultimapValues<K, V>(this);, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MultimapTestSuiteBuilder.java, +    derivedSuites.add(computeValuesTestSuite(parentBuilder));, +        .named(parentBuilder.getName() + ".values"), +++ b/guava/src/com/google/common/collect/FilteredEntryMultimap.java, +  , +  @Override, +  Collection<V> createValues() {, +    return new FilteredMultimapValues<K, V>(this);, +  }, +++ b/guava/src/com/google/common/collect/FilteredKeyMultimap.java, +  , +  @Override, +  Collection<V> createValues() {, +    return new FilteredMultimapValues<K, V>(this);, +  }, +++ b/guava-testlib/src/com/google/common/collect/testing/google/MultimapTestSuiteBuilder.java, +    derivedSuites.add(computeValuesTestSuite(parentBuilder));, +        .named(parentBuilder.getName() + ".values"), +++ b/guava/src/com/google/common/collect/FilteredEntryMultimap.java, +  , +  @Override, +  Collection<V> createValues() {, +    return new FilteredMultimapValues<K, V>(this);, +  }, +++ b/guava/src/com/google/common/collect/FilteredKeyMultimap.java, +  , +  @Override, +  Collection<V> createValues() {, +    return new FilteredMultimapValues<K, V>(this);, +  }, +++ b/guava/src/com/google/common/collect/FilteredMultimapValues.java, +/*, + * Copyright (C) 2013 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except, + * in compliance with the License. You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software distributed under the License, + * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express, + * or implied. See the License for the specific language governing permissions and limitations under, + * the License., + */, +, +package com.google.common.collect;, +, +import static com.google.common.base.Preconditions.checkNotNull;, +, +import com.google.common.annotations.GwtCompatible;, +import com.google.common.base.Objects;, +import com.google.common.base.Predicate;, +import com.google.common.base.Predicates;, +, +import java.util.AbstractCollection;, +import java.util.Collection;, +import java.util.Iterator;, +import java.util.Map;, +, +import javax.annotation.Nullable;, +, +/**, + * Implementation for {@link FilteredMultimap#values()}., + * , + * @author Louis Wasserman, + */, +@GwtCompatible, +final class FilteredMultimapValues<K, V> extends AbstractCollection<V> {, +  private final FilteredMultimap<K, V> multimap;, +, +  FilteredMultimapValues(FilteredMultimap<K, V> multimap) {, +    this.multimap = checkNotNull(multimap);, +  }, +, +  @Override, +  public Iterator<V> iterator() {, +    return Maps.valueIterator(multimap.entries().iterator());, +  }, +, +  @Override, +  public boolean contains(@Nullable Object o) {, +    return multimap.containsValue(o);, +  }, +, +  @Override, +  public int size() {, +    return multimap.size();, +  }]