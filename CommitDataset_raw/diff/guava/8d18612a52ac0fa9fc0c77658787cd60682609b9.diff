[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, + * <a name="iteration"></a>, + * <p><b>Key-grouped iteration.</b> All view collections follow the same, + * iteration order. In all current implementations, the iteration order always, + * keeps multiple entries with the same key together. Any creation method that, + * would customarily respect insertion order (such as {@link #copyOf(Multimap)}), + * instead preserves key-grouped order by inserting entries for an existing key, + * immediately after the last entry having that key., + *, +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * multimap}, in the "key-grouped" iteration order described in the class, +   * documentation., +   * Returns an immutable set of the distinct keys in this multimap, in the same, +   * order as they appear in this multimap., +   * values in the multimap. Keys and values appear in the same order as in this, +   * multimap., +   * Returns an immutable collection of all key-value pairs in the multimap., +   * Returns an immutable multiset containing all the keys in this multimap, in, +   * the same order and with the same frequencies as they appear in this, +   * multimap; to get only a single occurrence of each key, use {@link #keySet}., +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultimap.java, + * <a name="iteration"></a>, + * <p><b>Key-grouped iteration.</b> All view collections follow the same, + * iteration order. In all current implementations, the iteration order always, + * keeps multiple entries with the same key together. Any creation method that, + * would customarily respect insertion order (such as {@link #copyOf(Multimap)}), + * instead preserves key-grouped order by inserting entries for an existing key, + * immediately after the last entry having that key., + *, +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * multimap}, in the "key-grouped" iteration order described in the class, +   * documentation., +   * Returns an immutable set of the distinct keys in this multimap, in the same, +   * order as they appear in this multimap., +   * values in the multimap. Keys and values appear in the same order as in this, +   * multimap., +   * Returns an immutable collection of all key-value pairs in the multimap., +   * Returns an immutable multiset containing all the keys in this multimap, in, +   * the same order and with the same frequencies as they appear in this, +   * multimap; to get only a single occurrence of each key, use {@link #keySet}., +++ b/guava/src/com/google/common/collect/ImmutableMultimap.java, + * <a name="iteration"></a>, + * <p><b>Key-grouped iteration.</b> All view collections follow the same, + * iteration order. In all current implementations, the iteration order always, + * keeps multiple entries with the same key together. Any creation method that, + * would customarily respect insertion order (such as {@link #copyOf(Multimap)}), + * instead preserves key-grouped order by inserting entries for an existing key, + * immediately after the last entry having that key., + *, +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * Returns an immutable multimap containing the given entries, in the, +   * "key-grouped" insertion order described in the, +   * <a href="#iteration">class documentation</a>., +   * multimap}, in the "key-grouped" iteration order described in the class, +   * documentation., +   * Returns an immutable set of the distinct keys in this multimap, in the same, +   * order as they appear in this multimap., +   * values in the multimap. Keys and values appear in the same order as in this, +   * multimap., +   * Returns an immutable collection of all key-value pairs in the multimap., +   * Returns an immutable multiset containing all the keys in this multimap, in, +   * the same order and with the same frequencies as they appear in this, +   * multimap; to get only a single occurrence of each key, use {@link #keySet}.]