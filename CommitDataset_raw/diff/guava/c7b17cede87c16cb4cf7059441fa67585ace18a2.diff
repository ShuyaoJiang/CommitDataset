[+++ b/guava/src/com/google/common/base/BaseHolder.java, +/*, + * Copyright (C) 2011 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.base;, +, +import javax.annotation.Nullable;, +, +import com.google.common.annotations.GwtCompatible;, +, +/**, + * Common interface for {@link Holder} and {@link Optional}; most users should have no, + * need to refer to this type directly., + *, + * @author Kevin Bourrillion, + */, +@GwtCompatible, +interface BaseHolder<T> {, +  /**, +   * Returns {@code true} if this holder contains a (non-null) instance., +   */, +  boolean isPresent();, +, +  // TODO(kevinb): isAbsent too?, +, +  /**, +   * Returns the contained instance, which must be present. If the instance might be, +   * absent, use {@link #or(Object)} or {@link #orNull} instead., +   *, +   * @throws IllegalStateException if the instance is absent ({@link #isPresent} returns, +   *     {@code false}), +   */, +  T get();, +, +  /**, +   * Returns the contained instance if it is present; {@code defaultValue} otherwise. If, +   * no default value should be required because the instance is known to be present, use, +   * {@link #get()} instead. For a default value of {@code null}, use {@link #orNull}., +   */, +  T or(T defaultValue);, +, +  /**, +   * Returns the contained instance if it is present; {@code null} otherwise. If the, +   * instance is known to be present, use {@link #get()} instead., +   */, +  @Nullable T orNull();, +}, +++ b/guava/src/com/google/common/base/BaseHolder.java, +/*, + * Copyright (C) 2011 The Guava Authors, + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + * http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package com.google.common.base;, +, +import javax.annotation.Nullable;, +, +import com.google.common.annotations.GwtCompatible;, +, +/**, + * Common interface for {@link Holder} and {@link Optional}; most users should have no, + * need to refer to this type directly., + *, + * @author Kevin Bourrillion, + */, +@GwtCompatible, +interface BaseHolder<T> {, +  /**, +   * Returns {@code true} if this holder contains a (non-null) instance., +   */, +  boolean isPresent();, +, +  // TODO(kevinb): isAbsent too?, +, +  /**, +   * Returns the contained instance, which must be present. If the instance might be]