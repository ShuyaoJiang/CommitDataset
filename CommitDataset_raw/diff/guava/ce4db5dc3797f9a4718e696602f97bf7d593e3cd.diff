[+++ b/guava-tests/test/com/google/common/hash/BloomFilterTest.java, +  // https://code.google.com/p/guava-libraries/issues/detail?id=1781, +  public void testOptimalNumOfHashFunctionsRounding() {, +    assertEquals(7, BloomFilter.optimalNumOfHashFunctions(319, 3072));, +  }, +, +++ b/guava-tests/test/com/google/common/hash/BloomFilterTest.java, +  // https://code.google.com/p/guava-libraries/issues/detail?id=1781, +  public void testOptimalNumOfHashFunctionsRounding() {, +    assertEquals(7, BloomFilter.optimalNumOfHashFunctions(319, 3072));, +  }, +, +++ b/guava/src/com/google/common/hash/BloomFilter.java, +    // (m / n) * log(2), but avoid truncation due to division!, +    return Math.max(1, (int) Math.round((double) m / n * Math.log(2)));]