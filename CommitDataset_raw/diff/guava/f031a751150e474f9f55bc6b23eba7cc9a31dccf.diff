[+++ b/guava-tests/test/com/google/common/hash/BloomFilterTest.java, +import static com.google.common.base.Charsets.UTF_8;, +    BloomFilter<String> bf = BloomFilter.create(, +    BloomFilter<String> bf = BloomFilter.create(, +    BloomFilter<String> bf = BloomFilter.create(, +        Funnels.stringFunnel(UTF_8), numInsertions, 0.03,, +    BloomFilter<String> original = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +    BloomFilter<String> copy = original.copy();, +    BloomFilter<String> bf1 = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +    BloomFilter<String> bf2 = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +      BloomFilter<String> bf = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +++ b/guava-tests/test/com/google/common/hash/BloomFilterTest.java, +import static com.google.common.base.Charsets.UTF_8;, +    BloomFilter<String> bf = BloomFilter.create(, +    BloomFilter<String> bf = BloomFilter.create(, +    BloomFilter<String> bf = BloomFilter.create(, +        Funnels.stringFunnel(UTF_8), numInsertions, 0.03,, +    BloomFilter<String> original = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +    BloomFilter<String> copy = original.copy();, +    BloomFilter<String> bf1 = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +    BloomFilter<String> bf2 = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +      BloomFilter<String> bf = BloomFilter.create(Funnels.unencodedCharsFunnel(), 100);, +++ b/guava/src/com/google/common/hash/BloomFilter.java, +  private final Funnel<? super T> funnel;, +  private BloomFilter(BitArray bits, int numHashFunctions, Funnel<? super T> funnel,, +      Funnel<? super T> funnel, int expectedInsertions /* n */, double fpp) {, +      Funnel<? super T> funnel, int expectedInsertions /* n */, double fpp, Strategy strategy) {, +  public static <T> BloomFilter<T> create(, +      Funnel<? super T> funnel, int expectedInsertions /* n */) {, +    final Funnel<? super T> funnel;]