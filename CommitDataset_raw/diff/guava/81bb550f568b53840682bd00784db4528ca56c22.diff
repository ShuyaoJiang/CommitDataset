[+++ b/guava-tests/benchmark/com/google/common/collect/SortedCopyBenchmark.java, +import java.util.LinkedHashSet;, +import java.util.Set;, +import java.util.TreeSet;, +    Set<Integer> set = new LinkedHashSet<Integer>(size);, +    while (set.size() < size) {, +      set.add(random.nextInt());, +    List<Integer> list = new ArrayList<Integer>(set);, +    inputOrder.arrange(list);, +    input = ImmutableList.copyOf(list);, +  @Benchmark, +  int sortedSet(int reps) {, +    int dummy = 0;, +    if (mutable) {, +      for (int i = 0; i < reps; i++) {, +        dummy += new TreeSet<Integer>(input).first();, +      }, +    } else {, +      for (int i = 0; i < reps; i++) {, +        dummy += ImmutableSortedSet.copyOf(input).first();, +      }, +    }, +    return dummy;, +  }, +]