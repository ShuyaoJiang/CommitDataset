[+++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +  public void testRemainingCapacity_maxSize0() {, +    EvictingQueue<String> queue = EvictingQueue.create(0);, +    assertEquals(0, queue.remainingCapacity());, +  }, +, +  public void testRemainingCapacity_maxSize1() {, +    EvictingQueue<String> queue = EvictingQueue.create(1);, +    assertEquals(1, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(0, queue.remainingCapacity());, +  }, +, +  public void testRemainingCapacity_maxSize3() {, +    EvictingQueue<String> queue = EvictingQueue.create(3);, +    assertEquals(3, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(2, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(1, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(0, queue.remainingCapacity());, +  }, +, +    assertEquals(1, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(1, queue.remainingCapacity());, +    assertEquals(3, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(1, queue.remainingCapacity());, +    assertEquals(3, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(1, queue.remainingCapacity());, +++ b/guava-tests/test/com/google/common/collect/EvictingQueueTest.java, +  public void testRemainingCapacity_maxSize0() {, +    EvictingQueue<String> queue = EvictingQueue.create(0);, +    assertEquals(0, queue.remainingCapacity());, +  }, +, +  public void testRemainingCapacity_maxSize1() {, +    EvictingQueue<String> queue = EvictingQueue.create(1);, +    assertEquals(1, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(0, queue.remainingCapacity());, +  }, +, +  public void testRemainingCapacity_maxSize3() {, +    EvictingQueue<String> queue = EvictingQueue.create(3);, +    assertEquals(3, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(2, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(1, queue.remainingCapacity());, +    queue.add("hi");, +    assertEquals(0, queue.remainingCapacity());, +  }, +, +    assertEquals(1, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(1, queue.remainingCapacity());, +    assertEquals(3, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(1, queue.remainingCapacity());, +    assertEquals(3, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(0, queue.remainingCapacity());, +    assertEquals(1, queue.remainingCapacity());, +++ b/guava/src/com/google/common/collect/EvictingQueue.java, +  /**, +   * Returns the number of additional elements that this queue can accept without evicting;, +   * zero if the queue is currently full., +   *, +   * @since 16.0, +   */, +  public int remainingCapacity() {, +    return maxSize - size();, +  }, +]