[+++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +   * <p>This method can technically accept any {@code Collection<?>}, but using, +   * a typed collection helps prevent bugs. This approach doesn't block any, +   * potential users since it is always possible to use {@code, +   * Predicates.<Object>in()}., +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +   * <p>This method can technically accept any {@code Collection<?>}, but using, +   * a typed collection helps prevent bugs. This approach doesn't block any, +   * potential users since it is always possible to use {@code, +   * Predicates.<Object>in()}., +++ b/src/com/google/common/base/Predicates.java, +   * <p>This method can technically accept any {@code Collection<?>}, but using, +   * a typed collection helps prevent bugs. This approach doesn't block any, +   * potential users since it is always possible to use {@code, +   * Predicates.<Object>in()}., +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +   * <p>This method can technically accept any {@code Collection<?>}, but using, +   * a typed collection helps prevent bugs. This approach doesn't block any, +   * potential users since it is always possible to use {@code, +   * Predicates.<Object>in()}., +++ b/src/com/google/common/base/Predicates.java, +   * <p>This method can technically accept any {@code Collection<?>}, but using, +   * a typed collection helps prevent bugs. This approach doesn't block any, +   * potential users since it is always possible to use {@code, +   * Predicates.<Object>in()}., +++ b/src/com/google/common/collect/ForwardingObject.java, + * <p>This class does <i>not</i> forward the {@code hashCode} and {@code equals}, +++ b/gwt-super/com/google/common/base/super/com/google/common/base/Predicates.java, +   * <p>This method can technically accept any {@code Collection<?>}, but using, +   * a typed collection helps prevent bugs. This approach doesn't block any, +   * potential users since it is always possible to use {@code, +   * Predicates.<Object>in()}., +++ b/src/com/google/common/base/Predicates.java, +   * <p>This method can technically accept any {@code Collection<?>}, but using, +   * a typed collection helps prevent bugs. This approach doesn't block any, +   * potential users since it is always possible to use {@code, +   * Predicates.<Object>in()}., +++ b/src/com/google/common/collect/ForwardingObject.java, + * <p>This class does <i>not</i> forward the {@code hashCode} and {@code equals}, +++ b/src/com/google/common/collect/MapMaker.java, + * <p>The returned map is implemented as a hash table with similar performance]