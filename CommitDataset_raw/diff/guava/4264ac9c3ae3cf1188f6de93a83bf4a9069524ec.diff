[+++ b/guava-tests/test/com/google/common/base/ToStringHelperTest.java, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +    assertEquals("{}", toTest);, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToStringHelper_localInnerClass() {, +    // Local inner classes have names ending like "Outer.$1Inner", +    class LocalInnerClass {}, +    String toTest = Objects.toStringHelper(new LocalInnerClass()).toString();, +    assertEquals("LocalInnerClass{}", toTest);, +  }, +, +  public void testToStringHelperLenient_localInnerClass() {, +    class LocalInnerClass {}, +    String toTest = Objects.toStringHelper(new LocalInnerClass()).toString();, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +  }, +, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToStringHelper_localInnerNestedClass() {, +    class LocalInnerClass {, +      class LocalInnerNestedClass {}, +    }, +    String toTest = Objects.toStringHelper(new LocalInnerClass().new LocalInnerNestedClass()), +        .toString();, +    assertEquals("LocalInnerNestedClass{}", toTest);, +  }, +, +  public void testToStringHelperLenient_localInnerNestedClass() {, +    class LocalInnerClass {, +      class LocalInnerNestedClass {}, +    }, +    String toTest = Objects.toStringHelper(new LocalInnerClass().new LocalInnerNestedClass()), +        .toString();, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +  }, +, +  public void testToStringHelper_moreThanNineAnonymousClasses() {, +    // The nth anonymous class has a name ending like "Outer.$n", +    Object o1 = new Object() {};, +    Object o2 = new Object() {};, +    Object o3 = new Object() {};, +    Object o4 = new Object() {};, +    Object o5 = new Object() {};, +    Object o6 = new Object() {};, +    Object o7 = new Object() {};, +    Object o8 = new Object() {};, +    Object o9 = new Object() {};, +    Object o10 = new Object() {};, +    String toTest = Objects.toStringHelper(o10).toString();, +    assertEquals("{}", toTest);, +  }, +, +    assertTrue(toTest, toTest.matches(".*\\{field1\\=Hello\\}"));, +    final String expectedRegex = ".*\\{", +    assertTrue(result, result.matches(".*\\{Hello\\=null\\}"));, +    final String expected = ".*\\{field1\\=1, value1, field2\\=value2, 2\\}";, +    final String expected = ".*\\{null, Hello, null\\}";, +++ b/guava-tests/test/com/google/common/base/ToStringHelperTest.java, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +    assertEquals("{}", toTest);, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToStringHelper_localInnerClass() {, +    // Local inner classes have names ending like "Outer.$1Inner", +    class LocalInnerClass {}, +    String toTest = Objects.toStringHelper(new LocalInnerClass()).toString();, +    assertEquals("LocalInnerClass{}", toTest);, +  }, +, +  public void testToStringHelperLenient_localInnerClass() {, +    class LocalInnerClass {}, +    String toTest = Objects.toStringHelper(new LocalInnerClass()).toString();, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +  }, +, +  @GwtIncompatible("Class names are obfuscated in GWT"), +  public void testToStringHelper_localInnerNestedClass() {, +    class LocalInnerClass {, +      class LocalInnerNestedClass {}, +    }, +    String toTest = Objects.toStringHelper(new LocalInnerClass().new LocalInnerNestedClass()), +        .toString();, +    assertEquals("LocalInnerNestedClass{}", toTest);, +  }, +, +  public void testToStringHelperLenient_localInnerNestedClass() {, +    class LocalInnerClass {, +      class LocalInnerNestedClass {}, +    }, +    String toTest = Objects.toStringHelper(new LocalInnerClass().new LocalInnerNestedClass()), +        .toString();, +    assertTrue(toTest, toTest.matches(".*\\{\\}"));, +  }, +, +  public void testToStringHelper_moreThanNineAnonymousClasses() {, +    // The nth anonymous class has a name ending like "Outer.$n", +    Object o1 = new Object() {};]