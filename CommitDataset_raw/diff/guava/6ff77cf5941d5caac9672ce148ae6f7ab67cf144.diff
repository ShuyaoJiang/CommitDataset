[+++ b/guava-testlib/src/com/google/common/testing/NullPointerTester.java, +      AssertionFailedError error =, +          new AssertionFailedError(, +              String.format(, +                  "wrong exception thrown from %s when passing null to %s parameter at index %s.%n", +                      + "Full parameters: %s%n", +                      + "Actual exception message: %s",, +                  invokable,, +                  invokable.getParameters().get(paramIndex).getType(),, +                  paramIndex,, +                  Arrays.toString(params),, +                  cause));, +++ b/guava-testlib/src/com/google/common/testing/NullPointerTester.java, +      AssertionFailedError error =, +          new AssertionFailedError(, +              String.format(, +                  "wrong exception thrown from %s when passing null to %s parameter at index %s.%n", +                      + "Full parameters: %s%n", +                      + "Actual exception message: %s",, +                  invokable,, +                  invokable.getParameters().get(paramIndex).getType(),, +                  paramIndex,, +                  Arrays.toString(params),, +                  cause));, +++ b/guava-testlib/test/com/google/common/testing/NullPointerTesterTest.java, +  public void testMessageOtherException() throws Exception {, +    Method method = OneArg.class.getMethod("staticOneArgThrowsOtherThanNpe", String.class);, +    boolean foundProblem = false;, +    try {, +      new NullPointerTester().testMethodParameter(new OneArg(), method, 0);, +    } catch (AssertionFailedError expected) {, +      assertThat(expected.getMessage()).contains("index 0");, +      assertThat(expected.getMessage()).contains("[null]");, +      foundProblem = true;, +    }, +    assertTrue("Should report error when different exception is thrown", foundProblem);, +  }, +, +  public void testMessageNoException() throws Exception {, +    Method method = OneArg.class.getMethod("staticOneArgShouldThrowNpeButDoesnt", String.class);, +    boolean foundProblem = false;, +    try {, +      new NullPointerTester().testMethodParameter(new OneArg(), method, 0);, +    } catch (AssertionFailedError expected) {, +      assertThat(expected.getMessage()).contains("index 0");, +      assertThat(expected.getMessage()).contains("[null]");, +      foundProblem = true;, +    }, +    assertTrue("Should report error when no exception is thrown", foundProblem);, +  }, +]