[+++ b/guava/src/com/google/common/util/concurrent/SerializingExecutor.java, +import com.google.j2objc.annotations.WeakOuter;, +  @GuardedBy("queue"), +  @GuardedBy("queue"), +  @GuardedBy("queue"), +  private final QueueWorker worker = new QueueWorker();, +  @Override, +    synchronized (queue) {, +      queue.addLast(task);, +      if (isWorkerRunning || suspensions > 0) {, +        return;, +      }, +      isWorkerRunning = true;, +    synchronized (queue) {, +      if (isWorkerRunning || suspensions > 0) {, +        return;, +      }, +      isWorkerRunning = true;, +    synchronized (queue) {, +    synchronized (queue) {, +      if (isWorkerRunning || suspensions > 0 || queue.isEmpty()) {, +    startQueueWorker();, +  }, +, +  /**, +   * Starts a worker.  This should only be called if:, +   *, +   * <ul>, +   *   <li>{@code suspensions == 0}, +   *   <li>{@code isWorkerRunning == true}, +   *   <li>{@code !queue.isEmpty()}, +   *   <li>the {@link #worker} lock is not held, +   * </ul>, +   */, +  private void startQueueWorker() {, +      executor.execute(worker);, +        synchronized (queue) {, +  @WeakOuter, +        synchronized (queue) {, +        synchronized (queue) {, +            task = queue.pollFirst();]