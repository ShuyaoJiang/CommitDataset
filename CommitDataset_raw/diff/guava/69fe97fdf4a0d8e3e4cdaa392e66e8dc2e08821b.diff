[+++ b/guava/src/com/google/common/graph/EndpointPairIterator.java, +  protected N node = null; // null is safe as an initial value because graphs don't allow null nodes, +  protected Iterator<N> successorIterator = ImmutableSet.<N>of().iterator();, +  private EndpointPairIterator(Graph<N> graph) {, +  protected final boolean advance() {, +   * an edge connecting them., +    private Directed(Graph<N> graph) {, +   * visited twice if there is an edge connecting them. To avoid returning duplicate {@link, +   * EndpointPair}s, we keep track of the nodes that we have visited. When processing endpoint, +   * pairs, we skip if the "other node" is in the visited set, as shown below:, +    private Undirected(Graph<N> graph) {]