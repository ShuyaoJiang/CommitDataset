[+++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/OrderingTest.java, +import com.google.common.primitives.Ints;, +      return Ints.compare(rank, that.rank);, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/OrderingTest.java, +import com.google.common.primitives.Ints;, +      return Ints.compare(rank, that.rank);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/TablesTransformValuesTest.java, +      String value =, +          (data[i + 2] == null) ? null : (data[i + 2] + "transformed");, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/OrderingTest.java, +import com.google.common.primitives.Ints;, +      return Ints.compare(rank, that.rank);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/TablesTransformValuesTest.java, +      String value =, +          (data[i + 2] == null) ? null : (data[i + 2] + "transformed");, +++ b/guava-testlib/test/com/google/common/collect/testing/SafeTreeSetTest.java, +import java.util.Collections;, +        Collections.addAll(set, elements);, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/OrderingTest.java, +import com.google.common.primitives.Ints;, +      return Ints.compare(rank, that.rank);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/TablesTransformValuesTest.java, +      String value =, +          (data[i + 2] == null) ? null : (data[i + 2] + "transformed");, +++ b/guava-testlib/test/com/google/common/collect/testing/SafeTreeSetTest.java, +import java.util.Collections;, +        Collections.addAll(set, elements);, +++ b/guava-testlib/test/com/google/common/testing/EqualsTesterTest.java, +      assertErrorMessage(e, reference + " [group 1, item 1]");, +      assertErrorMessage(e, notEqualObject1 + " [group 1, item 2]");, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/OrderingTest.java, +import com.google.common.primitives.Ints;, +      return Ints.compare(rank, that.rank);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/TablesTransformValuesTest.java, +      String value =, +          (data[i + 2] == null) ? null : (data[i + 2] + "transformed");, +++ b/guava-testlib/test/com/google/common/collect/testing/SafeTreeSetTest.java, +import java.util.Collections;, +        Collections.addAll(set, elements);, +++ b/guava-testlib/test/com/google/common/testing/EqualsTesterTest.java, +      assertErrorMessage(e, reference + " [group 1, item 1]");, +      assertErrorMessage(e, notEqualObject1 + " [group 1, item 2]");, +++ b/guava-testlib/test/com/google/common/testing/TestLogHandlerTest.java, +    LogRecord record = handler.getStoredLogRecords().get(0);, +    for (LogRecord unused : handler.getStoredLogRecords()) {, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/OrderingTest.java, +import com.google.common.primitives.Ints;, +      return Ints.compare(rank, that.rank);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/TablesTransformValuesTest.java, +      String value =, +          (data[i + 2] == null) ? null : (data[i + 2] + "transformed");, +++ b/guava-testlib/test/com/google/common/collect/testing/SafeTreeSetTest.java, +import java.util.Collections;, +        Collections.addAll(set, elements);, +++ b/guava-testlib/test/com/google/common/testing/EqualsTesterTest.java, +      assertErrorMessage(e, reference + " [group 1, item 1]");, +      assertErrorMessage(e, notEqualObject1 + " [group 1, item 2]");, +++ b/guava-testlib/test/com/google/common/testing/TestLogHandlerTest.java, +    LogRecord record = handler.getStoredLogRecords().get(0);, +    for (LogRecord unused : handler.getStoredLogRecords()) {, +++ b/guava-tests/test/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/base/super/com/google/common/base/PredicatesTest.java, +    assertEquals(actual + " should hash like " + expected, expected.hashCode(), actual.hashCode());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/EnumMultisetTest.java, +      EnumMultiset.create(ImmutableList.<Color> of());, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/OrderingTest.java, +import com.google.common.primitives.Ints;, +      return Ints.compare(rank, that.rank);, +++ b/guava-gwt/test-super/com/google/common/collect/super/com/google/common/collect/TablesTransformValuesTest.java]