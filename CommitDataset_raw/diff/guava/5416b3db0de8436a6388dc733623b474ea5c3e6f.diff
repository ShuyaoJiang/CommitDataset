[+++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Longs.java, +   * The largest power of two that can be represented as a {@code long}., +   */, +  public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Longs.java, +   * The largest power of two that can be represented as a {@code long}., +   */, +  public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Shorts.java, +   * The largest power of two that can be represented as a {@code short}., +   */, +  public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Longs.java, +   * The largest power of two that can be represented as a {@code long}., +   */, +  public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Shorts.java, +   * The largest power of two that can be represented as a {@code short}., +   */, +  public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);, +, +  /**, +++ b/guava/src/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Longs.java, +   * The largest power of two that can be represented as a {@code long}., +   */, +  public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Shorts.java, +   * The largest power of two that can be represented as a {@code short}., +   */, +  public static final short MAX_POWER_OF_TWO = 1 << (Short.SIZE - 2);, +, +  /**, +++ b/guava/src/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava/src/com/google/common/primitives/Longs.java, +   * The largest power of two that can be represented as a {@code long}., +   */, +  public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Ints.java, +   * The largest power of two that can be represented as an {@code int}., +   */, +  public static final int MAX_POWER_OF_TWO = 1 << (Integer.SIZE - 2);, +, +  /**, +++ b/guava-gwt/src-super/com/google/common/primitives/super/com/google/common/primitives/Longs.java, +   * The largest power of two that can be represented as a {@code long}., +   */, +  public static final long MAX_POWER_OF_TWO = 1L << (Long.SIZE - 2);]