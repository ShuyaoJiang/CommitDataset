[+++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    // TODO(lowasser): consider an optimized values() implementation, +, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    // TODO(lowasser): consider an optimized values() implementation, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/BinaryTreeTraverser.java, +  // TODO(lowasser): make this GWT-compatible when we've checked in ArrayDeque and BitSet emulation, +  // TODO(lowasser): see if any significant optimizations are possible for breadthFirstIterator, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    // TODO(lowasser): consider an optimized values() implementation, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/BinaryTreeTraverser.java, +  // TODO(lowasser): make this GWT-compatible when we've checked in ArrayDeque and BitSet emulation, +  // TODO(lowasser): see if any significant optimizations are possible for breadthFirstIterator, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +    // TODO(lowasser): copy ImmutableSetMultimap by using asList() on the sets, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    // TODO(lowasser): consider an optimized values() implementation, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/BinaryTreeTraverser.java, +  // TODO(lowasser): make this GWT-compatible when we've checked in ArrayDeque and BitSet emulation, +  // TODO(lowasser): see if any significant optimizations are possible for breadthFirstIterator, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +    // TODO(lowasser): copy ImmutableSetMultimap by using asList() on the sets, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +// TODO(lowasser): write an efficient asList() implementation, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    // TODO(lowasser): consider an optimized values() implementation, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/BinaryTreeTraverser.java, +  // TODO(lowasser): make this GWT-compatible when we've checked in ArrayDeque and BitSet emulation, +  // TODO(lowasser): see if any significant optimizations are possible for breadthFirstIterator, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +    // TODO(lowasser): copy ImmutableSetMultimap by using asList() on the sets, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +// TODO(lowasser): write an efficient asList() implementation, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +    // TODO(lowasser): worth optimizing for RandomAccess?, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    // TODO(lowasser): consider an optimized values() implementation, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/BinaryTreeTraverser.java, +  // TODO(lowasser): make this GWT-compatible when we've checked in ArrayDeque and BitSet emulation, +  // TODO(lowasser): see if any significant optimizations are possible for breadthFirstIterator, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableListMultimap.java, +    // TODO(lowasser): copy ImmutableSetMultimap by using asList() on the sets, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMultiset.java, +// TODO(lowasser): write an efficient asList() implementation, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Lists.java, +    // TODO(lowasser): worth optimizing for RandomAccess?, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +    // TODO(lowasser): consider presizing the builder if values is a Collection, +    // TODO(lowasser): Return a subclass of Maps.FilteredKeyMap for slightly better, +, +++ b/guava-gwt/src-super/com/google/common/base/super/com/google/common/base/CharMatcher.java, +        // TODO(lowasser): is it potentially worth just going ahead and building a precomputed, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/AbstractMapBasedMultimap.java, +    // TODO(lowasser): investigate atomic failure?, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ArrayTable.java, +    // TODO(lowasser): consider an optimized values() implementation, +]