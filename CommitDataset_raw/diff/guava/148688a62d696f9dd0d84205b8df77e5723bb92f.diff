[+++ b/android/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +  @GwtIncompatible // digs into internals of the non-GWT implementation, +  public void testMaximumSize_largerThanInt() {, +    CacheBuilder<Object, Object> builder =, +        CacheBuilder.newBuilder().initialCapacity(512).maximumSize(Long.MAX_VALUE);, +    LocalCache<?, ?> cache = ((LocalCache.LocalManualCache<?, ?>) builder.build()).localCache;, +    assertThat(cache.segments.length * cache.segments[0].table.length()).isEqualTo(512);, +  }, +, +++ b/android/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +  @GwtIncompatible // digs into internals of the non-GWT implementation, +  public void testMaximumSize_largerThanInt() {, +    CacheBuilder<Object, Object> builder =, +        CacheBuilder.newBuilder().initialCapacity(512).maximumSize(Long.MAX_VALUE);, +    LocalCache<?, ?> cache = ((LocalCache.LocalManualCache<?, ?>) builder.build()).localCache;, +    assertThat(cache.segments.length * cache.segments[0].table.length()).isEqualTo(512);, +  }, +, +++ b/android/guava/src/com/google/common/cache/LocalCache.java, +      initialCapacity = (int) Math.min(initialCapacity, maxWeight);, +++ b/android/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +  @GwtIncompatible // digs into internals of the non-GWT implementation, +  public void testMaximumSize_largerThanInt() {, +    CacheBuilder<Object, Object> builder =, +        CacheBuilder.newBuilder().initialCapacity(512).maximumSize(Long.MAX_VALUE);, +    LocalCache<?, ?> cache = ((LocalCache.LocalManualCache<?, ?>) builder.build()).localCache;, +    assertThat(cache.segments.length * cache.segments[0].table.length()).isEqualTo(512);, +  }, +, +++ b/android/guava/src/com/google/common/cache/LocalCache.java, +      initialCapacity = (int) Math.min(initialCapacity, maxWeight);, +++ b/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +  @GwtIncompatible // digs into internals of the non-GWT implementation, +  public void testMaximumSize_largerThanInt() {, +    CacheBuilder<Object, Object> builder =, +        CacheBuilder.newBuilder().initialCapacity(512).maximumSize(Long.MAX_VALUE);, +    LocalCache<?, ?> cache = ((LocalCache.LocalManualCache<?, ?>) builder.build()).localCache;, +    assertThat(cache.segments.length * cache.segments[0].table.length()).isEqualTo(512);, +  }, +, +++ b/android/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +  @GwtIncompatible // digs into internals of the non-GWT implementation, +  public void testMaximumSize_largerThanInt() {, +    CacheBuilder<Object, Object> builder =, +        CacheBuilder.newBuilder().initialCapacity(512).maximumSize(Long.MAX_VALUE);, +    LocalCache<?, ?> cache = ((LocalCache.LocalManualCache<?, ?>) builder.build()).localCache;, +    assertThat(cache.segments.length * cache.segments[0].table.length()).isEqualTo(512);, +  }, +, +++ b/android/guava/src/com/google/common/cache/LocalCache.java, +      initialCapacity = (int) Math.min(initialCapacity, maxWeight);, +++ b/guava-tests/test/com/google/common/cache/CacheBuilderTest.java, +  @GwtIncompatible // digs into internals of the non-GWT implementation, +  public void testMaximumSize_largerThanInt() {, +    CacheBuilder<Object, Object> builder =, +        CacheBuilder.newBuilder().initialCapacity(512).maximumSize(Long.MAX_VALUE);, +    LocalCache<?, ?> cache = ((LocalCache.LocalManualCache<?, ?>) builder.build()).localCache;, +    assertThat(cache.segments.length * cache.segments[0].table.length()).isEqualTo(512);, +  }, +, +++ b/guava/src/com/google/common/cache/LocalCache.java, +      initialCapacity = (int) Math.min(initialCapacity, maxWeight);]