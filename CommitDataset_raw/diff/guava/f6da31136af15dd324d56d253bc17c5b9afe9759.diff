[+++ b/guava-tests/test/com/google/common/collect/CountTest.java, +    assertEquals(20, holder.get());, +    holder.add(1);, +++ b/guava-tests/test/com/google/common/collect/CountTest.java, +    assertEquals(20, holder.get());, +    holder.add(1);, +++ b/guava-tests/test/com/google/common/collect/ForwardingMultisetTest.java, +import com.google.common.collect.Multiset.Entry;, +    boolean unused = forward().contains(null);, +    boolean unused = forward().containsAll(EMPTY_COLLECTION);, +    boolean unused = forward().isEmpty();, +    Iterator<String> unused = forward().iterator();, +    String unused = forward().toString();, +    boolean unused = forward().equals("asdf");, +    int unused = forward().hashCode();, +    int unused = forward().count(null);, +    Set<String> unused = forward().elementSet();, +    Set<Entry<String>> unused = forward().entrySet();, +++ b/guava-tests/test/com/google/common/collect/CountTest.java, +    assertEquals(20, holder.get());, +    holder.add(1);, +++ b/guava-tests/test/com/google/common/collect/ForwardingMultisetTest.java, +import com.google.common.collect.Multiset.Entry;, +    boolean unused = forward().contains(null);, +    boolean unused = forward().containsAll(EMPTY_COLLECTION);, +    boolean unused = forward().isEmpty();, +    Iterator<String> unused = forward().iterator();, +    String unused = forward().toString();, +    boolean unused = forward().equals("asdf");, +    int unused = forward().hashCode();, +    int unused = forward().count(null);, +    Set<String> unused = forward().elementSet();, +    Set<Entry<String>> unused = forward().entrySet();, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +  @CanIgnoreReturnValue, +      frequency.add(occurrences);, +  @CanIgnoreReturnValue, +    frequency.add(-numberRemoved);, +  @CanIgnoreReturnValue, +  private static int getAndSet(@Nullable Count i, int count) {, +++ b/guava-tests/test/com/google/common/collect/CountTest.java, +    assertEquals(20, holder.get());, +    holder.add(1);, +++ b/guava-tests/test/com/google/common/collect/ForwardingMultisetTest.java, +import com.google.common.collect.Multiset.Entry;, +    boolean unused = forward().contains(null);, +    boolean unused = forward().containsAll(EMPTY_COLLECTION);, +    boolean unused = forward().isEmpty();, +    Iterator<String> unused = forward().iterator();, +    String unused = forward().toString();, +    boolean unused = forward().equals("asdf");, +    int unused = forward().hashCode();, +    int unused = forward().count(null);, +    Set<String> unused = forward().elementSet();, +    Set<Entry<String>> unused = forward().entrySet();, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +  @CanIgnoreReturnValue, +      frequency.add(occurrences);, +  @CanIgnoreReturnValue, +    frequency.add(-numberRemoved);, +  @CanIgnoreReturnValue, +  private static int getAndSet(@Nullable Count i, int count) {, +++ b/guava/src/com/google/common/collect/AbstractMultiset.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +  @CanIgnoreReturnValue, +++ b/guava-tests/test/com/google/common/collect/CountTest.java, +    assertEquals(20, holder.get());, +    holder.add(1);, +++ b/guava-tests/test/com/google/common/collect/ForwardingMultisetTest.java, +import com.google.common.collect.Multiset.Entry;, +    boolean unused = forward().contains(null);, +    boolean unused = forward().containsAll(EMPTY_COLLECTION);, +    boolean unused = forward().isEmpty();, +    Iterator<String> unused = forward().iterator();, +    String unused = forward().toString();, +    boolean unused = forward().equals("asdf");, +    int unused = forward().hashCode();, +    int unused = forward().count(null);, +    Set<String> unused = forward().elementSet();, +    Set<Entry<String>> unused = forward().entrySet();, +++ b/guava/src/com/google/common/collect/AbstractMapBasedMultiset.java, +import com.google.errorprone.annotations.CanIgnoreReturnValue;, +import javax.annotation.CheckReturnValue;, +@CheckReturnValue]