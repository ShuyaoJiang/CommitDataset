[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +import java.util.Map.Entry;, +  UnmodifiableIterator<K> keyIterator() {, +    final UnmodifiableIterator<Entry<K, V>> entryIterator = entrySet().iterator();, +    return new UnmodifiableIterator<K>() {, +      @Override public boolean hasNext() {, +        return entryIterator.hasNext();, +      }, +, +      @Override public K next() {, +        return entryIterator.next().getKey();, +      }, +    };, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +import java.util.Map.Entry;, +  UnmodifiableIterator<K> keyIterator() {, +    final UnmodifiableIterator<Entry<K, V>> entryIterator = entrySet().iterator();, +    return new UnmodifiableIterator<K>() {, +      @Override public boolean hasNext() {, +        return entryIterator.hasNext();, +      }, +, +      @Override public K next() {, +        return entryIterator.next().getKey();, +      }, +    };, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapKeySet.java, +    return map.keyIterator();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +import java.util.Map.Entry;, +  UnmodifiableIterator<K> keyIterator() {, +    final UnmodifiableIterator<Entry<K, V>> entryIterator = entrySet().iterator();, +    return new UnmodifiableIterator<K>() {, +      @Override public boolean hasNext() {, +        return entryIterator.hasNext();, +      }, +, +      @Override public K next() {, +        return entryIterator.next().getKey();, +      }, +    };, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapKeySet.java, +    return map.keyIterator();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +  static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(, +      final Iterator<Entry<K, V>> entryIterator) {, +    return new UnmodifiableIterator<Entry<K, V>>() {, +      @Override, +      public boolean hasNext() {, +        return entryIterator.hasNext();, +      }, +, +      @Override, +      public Entry<K, V> next() {, +        return unmodifiableEntry(entryIterator.next());, +      }, +    };, +  }, +, +      return unmodifiableEntryIterator(entries.iterator());, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMap.java, +import java.util.Map.Entry;, +  UnmodifiableIterator<K> keyIterator() {, +    final UnmodifiableIterator<Entry<K, V>> entryIterator = entrySet().iterator();, +    return new UnmodifiableIterator<K>() {, +      @Override public boolean hasNext() {, +        return entryIterator.hasNext();, +      }, +, +      @Override public K next() {, +        return entryIterator.next().getKey();, +      }, +    };, +  }, +, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapKeySet.java, +    return map.keyIterator();, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Maps.java, +  static <K, V> UnmodifiableIterator<Entry<K, V>> unmodifiableEntryIterator(, +      final Iterator<Entry<K, V>> entryIterator) {, +    return new UnmodifiableIterator<Entry<K, V>>() {, +      @Override, +      public boolean hasNext() {, +        return entryIterator.hasNext();, +      }, +, +      @Override, +      public Entry<K, V> next() {, +        return unmodifiableEntry(entryIterator.next());, +      }, +    };, +  }, +, +      return unmodifiableEntryIterator(entries.iterator());]