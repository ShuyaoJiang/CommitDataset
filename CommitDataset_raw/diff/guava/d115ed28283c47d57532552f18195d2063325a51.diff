[+++ b/guava-gwt/test/com/google/common/base/ConverterTest_gwt.java, +public void testReverseReverse() throws Exception {, +  com.google.common.base.ConverterTest testCase = new com.google.common.base.ConverterTest();, +  testCase.testReverseReverse();, +}, +, +++ b/guava-gwt/test/com/google/common/base/ConverterTest_gwt.java, +public void testReverseReverse() throws Exception {, +  com.google.common.base.ConverterTest testCase = new com.google.common.base.ConverterTest();, +  testCase.testReverseReverse();, +}, +, +++ b/guava-tests/test/com/google/common/base/ConverterTest.java, +  public void testReverseReverse() {, +    Converter<String, Long> converter = STR_TO_LONG;, +    assertEquals(converter, converter.reverse().reverse());, +  }, +, +++ b/guava-gwt/test/com/google/common/base/ConverterTest_gwt.java, +public void testReverseReverse() throws Exception {, +  com.google.common.base.ConverterTest testCase = new com.google.common.base.ConverterTest();, +  testCase.testReverseReverse();, +}, +, +++ b/guava-tests/test/com/google/common/base/ConverterTest.java, +  public void testReverseReverse() {, +    Converter<String, Long> converter = STR_TO_LONG;, +    assertEquals(converter, converter.reverse().reverse());, +  }, +, +++ b/guava/src/com/google/common/base/Converter.java, +  // We lazily cache the reverse view to avoid allocating on every call to reverse()., +  private transient Converter<B, A> reverse;, +, +  // TODO(user): Make this method final, +    Converter<B, A> result = reverse;, +    return (result == null) ? reverse = new ReverseConverter<A, B>(this) : result;]