[+++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableList.java, +  public int indexOf(@Nullable Object object) {, +  public int lastIndexOf(@Nullable Object object) {, +++ b/gwt-super/com/google/common/collect/super/com/google/common/collect/ImmutableList.java, +  public int indexOf(@Nullable Object object) {, +  public int lastIndexOf(@Nullable Object object) {, +++ b/src/com/google/common/collect/Lists.java, +   * Returns a view of the specified string as an immutable list of {@code, +   * Character} values., +   *, +   * @since 7, +   */, +  @Beta public static ImmutableList<Character> charactersOf(String string) {, +    return new StringAsImmutableList(checkNotNull(string));, +  }, +, +  @SuppressWarnings("serial") // serialized using ImmutableList serialization, +  private static final class StringAsImmutableList, +      extends ImmutableList<Character> {, +, +    private final String string;, +, +    StringAsImmutableList(String string) {, +      this.string = string;, +    }, +, +    @Override public boolean contains(@Nullable Object object) {, +      return indexOf(object) >= 0;, +    }, +, +    @Override public int indexOf(@Nullable Object object) {, +      return (object instanceof Character), +          ? string.indexOf((Character) object) : -1;, +    }, +, +    @Override public int lastIndexOf(@Nullable Object object) {, +      return (object instanceof Character), +          ? string.lastIndexOf((Character) object) : -1;, +    }, +, +    @Override public UnmodifiableListIterator<Character> listIterator(, +        int index) {, +      int n = size();, +      checkPositionIndex(index, n);, +      return new AbstractIndexedIterator<Character>(index, n) {, +        @Override protected Character get(int index) {, +          return string.charAt(index);, +        }, +      };, +    }, +, +    @Override public ImmutableList<Character> subList(, +        int fromIndex, int toIndex) {, +      return charactersOf(string.substring(fromIndex, toIndex));, +    }, +, +    @Override boolean isPartialView() {, +      return false;, +    }, +, +    @Override public Character get(int index) {, +      return string.charAt(index);, +    }, +, +    @Override public int size() {, +      return string.length();, +    }, +, +    @Override public boolean equals(@Nullable Object obj) {, +      if (!(obj instanceof List)) {, +        return false;, +      }, +      List<?> list = (List<?>) obj;, +      int n = string.length();, +      if (n != list.size()) {, +        return false;, +      }, +      Iterator<?> iterator = list.iterator();, +      for (int i = 0; i < n; i++) {, +        Object elem = iterator.next();, +        if (!(elem instanceof Character), +            || ((Character) elem).charValue() != string.charAt(i)) {, +          return false;, +        }, +      }, +      return true;, +    }, +, +    int hash = 0;, +, +    @Override public int hashCode() {, +      int h = hash;, +      if (h == 0) {, +        h = 1;, +        for (int i = 0; i < string.length(); i++) {, +          h = h * 31 + string.charAt(i);, +        }, +        hash = h;, +      }, +      return h;]