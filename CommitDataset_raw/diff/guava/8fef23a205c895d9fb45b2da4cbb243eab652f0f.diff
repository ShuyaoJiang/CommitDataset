[+++ b/guava-tests/test/com/google/common/graph/EndpointsTest.java, +import java.util.Set;, +  public void edges_directedGraph() {, +  public void edges_undirectedGraph() {, +  public void edges_directedNetwork() {, +  public void edges_undirectedNetwork() {, +  public void edges_unmodifiableView() {, +    Set<Endpoints<Integer>> edges = directedGraph.edges();, +    containsExactlySanityCheck(edges, Endpoints.ofDirected(N1, N2));, +        edges,, +    containsExactlySanityCheck(edges);, +      edges.add(Endpoints.ofDirected(N1, N2));, +      fail("Set returned by edges() should be unmodifiable");, +  public void edges_containment() {, +    Set<Endpoints<Integer>> edges = undirectedGraph.edges();, +    assertThat(edges).hasSize(2);, +    assertThat(edges).contains(Endpoints.ofUndirected(N1, N1));, +    assertThat(edges).contains(Endpoints.ofUndirected(N1, N2));, +    assertThat(edges).contains(Endpoints.ofUndirected(N2, N1)); // equal to ofUndirected(N1, N2), +    assertThat(edges).doesNotContain(Endpoints.ofUndirected(N2, N2));, +    assertThat(edges).doesNotContain(Endpoints.ofDirected(N1, N2)); // graph not directed, +    assertThat(edges).doesNotContain(Endpoints.ofUndirected(N3, N4)); // nodes not in graph]