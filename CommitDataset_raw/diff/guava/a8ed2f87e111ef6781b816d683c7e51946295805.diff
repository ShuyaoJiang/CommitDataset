[+++ b/guava/src/com/google/common/util/concurrent/AbstractFuture.java, +    Waiter(@SuppressWarnings("unused") boolean ignored) {}, +    final Throwable cause;, +    Cancellation(boolean wasInterrupted, Throwable cause) {, +      Object valueToSet = new Cancellation(mayInterruptIfRunning, newCancellationCause());, +   * Returns an exception to be used as the cause of the CancellationException thrown by, +   * {@link #get}., +   *, +   * <p>Note: this method may be called speculatively.  There is no guarantee that the future will, +   * be cancelled if this method is called., +   *, +   * @since 19.0, +   */, +  @Beta, +  protected Throwable newCancellationCause() {, +    return new CancellationException("Future.cancel() was called.");, +  }, +, +  /**]