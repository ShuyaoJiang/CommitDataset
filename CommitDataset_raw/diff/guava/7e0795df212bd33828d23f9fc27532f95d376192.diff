[+++ b/guava-testlib/src/com/google/common/collect/testing/TestsForListsInJavaUtil.java, +import static com.google.common.collect.testing.testers.ListListIteratorTester.getListIteratorFullyModifiableMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListOriginalListSetAffectsSubListLargeListMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListOriginalListSetAffectsSubListMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListSubListRemoveAffectsOriginalLargeListMethod;, +, +    return Arrays.asList(, +        getSubListOriginalListSetAffectsSubListMethod(),, +        getSubListOriginalListSetAffectsSubListLargeListMethod(),, +        getSubListSubListRemoveAffectsOriginalLargeListMethod(),, +        getListIteratorFullyModifiableMethod());, +++ b/guava-testlib/src/com/google/common/collect/testing/TestsForListsInJavaUtil.java, +import static com.google.common.collect.testing.testers.ListListIteratorTester.getListIteratorFullyModifiableMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListOriginalListSetAffectsSubListLargeListMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListOriginalListSetAffectsSubListMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListSubListRemoveAffectsOriginalLargeListMethod;, +, +    return Arrays.asList(, +        getSubListOriginalListSetAffectsSubListMethod(),, +        getSubListOriginalListSetAffectsSubListLargeListMethod(),, +        getSubListSubListRemoveAffectsOriginalLargeListMethod(),, +        getListIteratorFullyModifiableMethod());, +++ b/guava-testlib/src/com/google/common/collect/testing/testers/CollectionIteratorTester.java, +import static com.google.common.collect.testing.Helpers.mapEntry;, +import static com.google.common.collect.testing.features.CollectionSize.ZERO;, +import com.google.common.collect.testing.features.CollectionSize;, +import java.util.Map.Entry;, +  @CollectionFeature.Require(SUPPORTS_ITERATOR_REMOVE), +  @CollectionSize.Require(absent = ZERO), +  public void testIterator_removeAffectsBackingCollection() {, +    int originalSize = collection.size();, +    Iterator<E> iterator = collection.iterator();, +    Object element = iterator.next();, +    // If it's an Entry, it may become invalid once it's removed from the Map. Copy it., +    if (element instanceof Entry) {, +      Entry<?, ?> entry = (Entry<?, ?>) element;, +      element = mapEntry(entry.getKey(), entry.getValue());, +    }, +    assertTrue(collection.contains(element)); // sanity check, +    iterator.remove();, +    assertFalse(collection.contains(element));, +    assertEquals(originalSize - 1, collection.size());, +  }, +, +++ b/guava-testlib/src/com/google/common/collect/testing/TestsForListsInJavaUtil.java, +import static com.google.common.collect.testing.testers.ListListIteratorTester.getListIteratorFullyModifiableMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListOriginalListSetAffectsSubListLargeListMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListOriginalListSetAffectsSubListMethod;, +import static com.google.common.collect.testing.testers.ListSubListTester.getSubListSubListRemoveAffectsOriginalLargeListMethod;, +, +    return Arrays.asList(, +        getSubListOriginalListSetAffectsSubListMethod(),, +        getSubListOriginalListSetAffectsSubListLargeListMethod(),, +        getSubListSubListRemoveAffectsOriginalLargeListMethod(),, +        getListIteratorFullyModifiableMethod());, +++ b/guava-testlib/src/com/google/common/collect/testing/testers/CollectionIteratorTester.java, +import static com.google.common.collect.testing.Helpers.mapEntry;, +import static com.google.common.collect.testing.features.CollectionSize.ZERO;, +import com.google.common.collect.testing.features.CollectionSize;, +import java.util.Map.Entry;, +  @CollectionFeature.Require(SUPPORTS_ITERATOR_REMOVE), +  @CollectionSize.Require(absent = ZERO), +  public void testIterator_removeAffectsBackingCollection() {, +    int originalSize = collection.size();, +    Iterator<E> iterator = collection.iterator();, +    Object element = iterator.next();, +    // If it's an Entry, it may become invalid once it's removed from the Map. Copy it., +    if (element instanceof Entry) {, +      Entry<?, ?> entry = (Entry<?, ?>) element;, +      element = mapEntry(entry.getKey(), entry.getValue());, +    }, +    assertTrue(collection.contains(element)); // sanity check, +    iterator.remove();, +    assertFalse(collection.contains(element));, +    assertEquals(originalSize - 1, collection.size());, +  }, +, +++ b/guava-testlib/test/com/google/common/collect/testing/OpenJdk6ListTests.java]