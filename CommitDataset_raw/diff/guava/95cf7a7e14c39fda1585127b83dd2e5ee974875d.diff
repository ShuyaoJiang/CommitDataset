[+++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * weakKeys and weak/softValues., +   * Returns an iterable containing all combinations weakKeys and weak/softValues., +        createMapMaker().weakKeys().softValues());, +++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * weakKeys and weak/softValues., +   * Returns an iterable containing all combinations weakKeys and weak/softValues., +        createMapMaker().weakKeys().softValues());, +++ /dev/null, +++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * weakKeys and weak/softValues., +   * Returns an iterable containing all combinations weakKeys and weak/softValues., +        createMapMaker().weakKeys().softValues());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * weakKeys and weak/softValues., +   * Returns an iterable containing all combinations weakKeys and weak/softValues., +        createMapMaker().weakKeys().softValues());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/MapMaker.java, +import static com.google.common.collect.MapMakerInternalMap.Strength.SOFT;, + * equals} method) to determine equality for keys or values. However, if {@link #weakKeys} was, + * specified, the map uses identity ({@code ==}) comparisons instead for keys. Likewise, if {@link, + * #weakValues} or {@link #softValues} was specified, the map uses identity comparisons for values., +   * <p>By default, the map uses {@link Equivalence#identity} to determine key equality when {@link, +   * #weakKeys} is specified, and {@link Equivalence#equals()} otherwise. The only place this is, +   * used is in {@link Interners.WeakInterner}., +    checkArgument(keyStrength != SOFT, "Soft keys are not supported");, +     * The entry was removed automatically because its key or value was garbage-collected. This can, +     * occur when using {@link #softValues}, {@link #weakKeys}, or {@link #weakValues}., +++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * weakKeys and weak/softValues., +   * Returns an iterable containing all combinations weakKeys and weak/softValues., +        createMapMaker().weakKeys().softValues());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/MapMaker.java, +import static com.google.common.collect.MapMakerInternalMap.Strength.SOFT;, + * equals} method) to determine equality for keys or values. However, if {@link #weakKeys} was, + * specified, the map uses identity ({@code ==}) comparisons instead for keys. Likewise, if {@link, + * #weakValues} or {@link #softValues} was specified, the map uses identity comparisons for values., +   * <p>By default, the map uses {@link Equivalence#identity} to determine key equality when {@link, +   * #weakKeys} is specified, and {@link Equivalence#equals()} otherwise. The only place this is, +   * used is in {@link Interners.WeakInterner}., +    checkArgument(keyStrength != SOFT, "Soft keys are not supported");, +     * The entry was removed automatically because its key or value was garbage-collected. This can, +     * occur when using {@link #softValues}, {@link #weakKeys}, or {@link #weakValues}., +++ b/guava/src/com/google/common/collect/MapMakerInternalMap.java, +      {}, // no support for SOFT keys, +++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * weakKeys and weak/softValues., +   * Returns an iterable containing all combinations weakKeys and weak/softValues., +        createMapMaker().weakKeys().softValues());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/MapMaker.java, +import static com.google.common.collect.MapMakerInternalMap.Strength.SOFT;, + * equals} method) to determine equality for keys or values. However, if {@link #weakKeys} was, + * specified, the map uses identity ({@code ==}) comparisons instead for keys. Likewise, if {@link, + * #weakValues} or {@link #softValues} was specified, the map uses identity comparisons for values., +   * <p>By default, the map uses {@link Equivalence#identity} to determine key equality when {@link, +   * #weakKeys} is specified, and {@link Equivalence#equals()} otherwise. The only place this is, +   * used is in {@link Interners.WeakInterner}., +    checkArgument(keyStrength != SOFT, "Soft keys are not supported");, +     * The entry was removed automatically because its key or value was garbage-collected. This can, +     * occur when using {@link #softValues}, {@link #weakKeys}, or {@link #weakValues}., +++ b/guava/src/com/google/common/collect/MapMakerInternalMap.java, +      {}, // no support for SOFT keys, +++ b/guava/src/com/google/common/primitives/UnsignedInteger.java, +   * @deprecated Use {@link #fromIntBits(int)}. This method is scheduled to be removed in Guava, +   *             release 15.0., +   * @deprecated Use {@link #plus(UnsignedInteger)}. This method is scheduled to be removed in Guava, +   *             release 15.0., +   * @deprecated Use {@link #minus(UnsignedInteger)}. This method is scheduled to be removed in, +   *             Guava release 15.0., +   * @deprecated Use {@link #times(UnsignedInteger)}. This method is scheduled to be removed in, +   *             Guava release 15.0., +   * @deprecated Use {@link #dividedBy(UnsignedInteger)}. This method is scheduled to be removed in, +   *             Guava release 15.0., +   * @deprecated Use {@link #mod(UnsignedInteger)}. This method is scheduled to be removed in Guava, +   *             release 15.0., +++ b/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetTest.java, +++ b/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java, +   * weakKeys and weak/softValues., +   * Returns an iterable containing all combinations weakKeys and weak/softValues., +        createMapMaker().weakKeys().softValues());, +++ /dev/null, +++ b/guava/src/com/google/common/collect/GenericMapMaker.java, +++ b/guava/src/com/google/common/collect/MapMaker.java, +import static com.google.common.collect.MapMakerInternalMap.Strength.SOFT;, + * equals} method) to determine equality for keys or values. However, if {@link #weakKeys} was]