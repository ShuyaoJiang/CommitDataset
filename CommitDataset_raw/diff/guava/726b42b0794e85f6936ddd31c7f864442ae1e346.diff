[+++ b/guava/src/com/google/common/math/BigIntegerMath.java, +import static java.math.RoundingMode.HALF_EVEN;, +    int log2 = log2(x, FLOOR);, +    if(log2 < DoubleUtils.MAX_DOUBLE_EXPONENT) {, +      sqrt0 = sqrtApproxWithDoubles(x);, +      int shift = (log2 - DoubleUtils.SIGNIFICAND_BITS) & ~1; // even!, +      /*, +       * We have that x / 2^shift < 2^54. Our initial approximation to sqrtFloor(x) will be, +       * 2^(shift/2) * sqrtApproxWithDoubles(x / 2^shift)., +       */, +      sqrt0 = sqrtApproxWithDoubles(x.shiftRight(shift)).shiftLeft(shift >> 1);, +    BigInteger sqrt1 = sqrt0.add(x.divide(sqrt0)).shiftRight(1);, +  private static BigInteger sqrtApproxWithDoubles(BigInteger x) {, +    return DoubleMath.roundToBigInteger(Math.sqrt(DoubleUtils.bigToDouble(x)), HALF_EVEN);, +  }, +]