[+++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, + * Abstract base class for testing implementations of {@link DirectedGraph} interface., +        Integer oppositeNode = Graphs.oppositeNode(directedGraph, inEdge, node);, +        assertThat(directedGraph.source(inEdge)).isEqualTo(oppositeNode);, +        Integer oppositeNode = Graphs.oppositeNode(directedGraph, outEdge, node);, +        assertThat(directedGraph.target(outEdge)).isEqualTo(oppositeNode);, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, + * Abstract base class for testing implementations of {@link DirectedGraph} interface., +        Integer oppositeNode = Graphs.oppositeNode(directedGraph, inEdge, node);, +        assertThat(directedGraph.source(inEdge)).isEqualTo(oppositeNode);, +        Integer oppositeNode = Graphs.oppositeNode(directedGraph, outEdge, node);, +        assertThat(directedGraph.target(outEdge)).isEqualTo(oppositeNode);, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.nodes()).contains(incidentNode);, +          assertTrue(edge.equals(adjacentEdge) || graph.adjacentEdges(edge).contains(adjacentEdge));, +        assertThat(graph.edges()).contains(incidentEdge);, +        assertThat(graph.outEdges(Graphs.oppositeNode(graph, inEdge, node))).contains(inEdge);, +        assertThat(graph.inEdges(Graphs.oppositeNode(graph, outEdge, node))).contains(outEdge);, +++ b/guava-tests/test/com/google/common/graph/AbstractDirectedGraphTest.java, + * Abstract base class for testing implementations of {@link DirectedGraph} interface., +        Integer oppositeNode = Graphs.oppositeNode(directedGraph, inEdge, node);, +        assertThat(directedGraph.source(inEdge)).isEqualTo(oppositeNode);, +        Integer oppositeNode = Graphs.oppositeNode(directedGraph, outEdge, node);, +        assertThat(directedGraph.target(outEdge)).isEqualTo(oppositeNode);, +++ b/guava-tests/test/com/google/common/graph/AbstractGraphTest.java, +        assertThat(graph.nodes()).contains(incidentNode);, +          assertTrue(edge.equals(adjacentEdge) || graph.adjacentEdges(edge).contains(adjacentEdge));, +        assertThat(graph.edges()).contains(incidentEdge);, +        assertThat(graph.outEdges(Graphs.oppositeNode(graph, inEdge, node))).contains(inEdge);, +        assertThat(graph.inEdges(Graphs.oppositeNode(graph, outEdge, node))).contains(outEdge);, +++ b/guava-tests/test/com/google/common/graph/AbstractUndirectedGraphTest.java, + * Abstract base class for testing implementations of {@link UndirectedGraph} interface.]