[+++ /dev/null, +++ /dev/null, +++ b/guava/src/com/google/common/net/InternetDomainName.java, +public final class InternetDomainName {, +   * Constructor used to implement {@link #from(String)}, and from subclasses., +  InternetDomainName(String name) {, +   * A deprecated synonym for {@link #from(String)}., +   *, +   * @param domain A domain name (not IP address), +   * @throws IllegalArgumentException if {@code name} is not syntactically valid, +   *     according to {@link #isValidLenient}, +   * @since Guava release 08 (previously named {@code from}), +   * @deprecated Use {@link #from(String)}, +   */, +  @Deprecated, +  public static InternetDomainName fromLenient(String domain) {, +    return from(domain);, +  }, +, +  /**, +   * @since Guava release 10 (previously named {@code fromLenient}), +  public static InternetDomainName from(String domain) {, +    return from(DOT_JOINER.join(parts.subList(levels, parts.size())));, +   * {@code InternetDomainName} with the value {@code www.bar.foo.com}. Only, +   * lenient validation is performed, as described {@link #from(String) here}., +    return from(checkNotNull(leftParts) + "." + name);, +   * A deprecated synonym for {@link #isValid(String)}., +   *, +   * @since Guava release 08 (previously named {@code isValid}), +   * @deprecated Use {@link #isValid(String)} instead, +  @Deprecated, +  public static boolean isValidLenient(String name) {, +    return isValid(name);, +   *   domainName = InternetDomainName.isValid(name), +   *       ? InternetDomainName.from(name), +   *       : DEFAULT_DOMAIN;, +   *   }</pre>, +   *     domainName = InternetDomainName.from(name);, +   * @since Guava release 08 (previously named {@code isValidLenient}), +  public static boolean isValid(String name) {, +      from(name);]