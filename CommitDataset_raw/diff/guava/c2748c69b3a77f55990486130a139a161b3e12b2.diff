[+++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapEntrySet.java, +  static final class RegularEntrySet<K, V> extends ImmutableMapEntrySet<K, V> {, +    private final transient ImmutableMap<K, V> map;, +    private final transient Entry<K, V>[] entries;, +    , +    RegularEntrySet(ImmutableMap<K, V> map, Entry<K, V>[] entries) {, +      this.map = map;, +      this.entries = entries;, +    }, +, +    @Override, +    ImmutableMap<K, V> map() {, +      return map;, +    }, +, +    @Override, +    public UnmodifiableIterator<Entry<K, V>> iterator() {, +      return asList().iterator();, +    }, +, +    @Override, +    ImmutableList<Entry<K, V>> createAsList() {, +      return new RegularImmutableAsList<Entry<K, V>>(this, entries);, +    }, +  }, +  , +, +  @Override, +  public int hashCode() {, +    return map().hashCode();, +  }, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapEntrySet.java, +  static final class RegularEntrySet<K, V> extends ImmutableMapEntrySet<K, V> {, +    private final transient ImmutableMap<K, V> map;, +    private final transient Entry<K, V>[] entries;, +    , +    RegularEntrySet(ImmutableMap<K, V> map, Entry<K, V>[] entries) {, +      this.map = map;, +      this.entries = entries;, +    }, +, +    @Override, +    ImmutableMap<K, V> map() {, +      return map;, +    }, +, +    @Override, +    public UnmodifiableIterator<Entry<K, V>> iterator() {, +      return asList().iterator();, +    }, +, +    @Override, +    ImmutableList<Entry<K, V>> createAsList() {, +      return new RegularImmutableAsList<Entry<K, V>>(this, entries);, +    }, +  }, +  , +, +  @Override, +  public int hashCode() {, +    return map().hashCode();, +  }, +++ b/guava/src/com/google/common/collect/ImmutableMap.java, +    return Sets.hashCodeImpl(entrySet());, +  }, +, +  boolean isHashCodeFast() {, +    return false;, +++ b/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/ImmutableMapEntrySet.java, +  static final class RegularEntrySet<K, V> extends ImmutableMapEntrySet<K, V> {, +    private final transient ImmutableMap<K, V> map;, +    private final transient Entry<K, V>[] entries;, +    , +    RegularEntrySet(ImmutableMap<K, V> map, Entry<K, V>[] entries) {, +      this.map = map;, +      this.entries = entries;, +    }, +, +    @Override, +    ImmutableMap<K, V> map() {, +      return map;, +    }, +, +    @Override, +    public UnmodifiableIterator<Entry<K, V>> iterator() {, +      return asList().iterator();, +    }, +, +    @Override, +    ImmutableList<Entry<K, V>> createAsList() {, +      return new RegularImmutableAsList<Entry<K, V>>(this, entries);, +    }, +  }, +  , +, +  @Override, +  public int hashCode() {, +    return map().hashCode();, +  }, +++ b/guava/src/com/google/common/collect/ImmutableMap.java]