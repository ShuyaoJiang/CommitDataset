[+++ b/guava-gwt/test/com/google/common/base/AsciiTest_gwt.java, +, +public void testTruncate() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncate();, +}, +, +public void testTruncateIllegalArguments() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncateIllegalArguments();, +}, +, +public void testTruncateWithCustomTruncationIndicator() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncateWithCustomTruncationIndicator();, +}, +++ b/guava-gwt/test/com/google/common/base/AsciiTest_gwt.java, +, +public void testTruncate() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncate();, +}, +, +public void testTruncateIllegalArguments() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncateIllegalArguments();, +}, +, +public void testTruncateWithCustomTruncationIndicator() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncateWithCustomTruncationIndicator();, +}, +++ b/guava-tests/test/com/google/common/base/AsciiTest.java, +, +  public void testTruncate() {, +    assertEquals("foobar", Ascii.truncate("foobar", 10));, +    assertEquals("fo...", Ascii.truncate("foobar", 5));, +    assertEquals("foobar", Ascii.truncate("foobar", 6));, +    assertEquals("", Ascii.truncate("", 6));, +  }, +, +  public void testTruncateWithCustomTruncationIndicator() {, +    assertEquals("foobar", Ascii.truncate("foobar", 10, "…"));, +    assertEquals("foo…", Ascii.truncate("foobar", 4, "…"));, +    assertEquals("fo--", Ascii.truncate("foobar", 4, "--"));, +    assertEquals("foobar", Ascii.truncate("foobar", 6, "…"));, +    assertEquals("foob…", Ascii.truncate("foobar", 5, "…"));, +    assertEquals("foo", Ascii.truncate("foobar", 3, ""));, +    assertEquals("", Ascii.truncate("", 5, ""));, +    assertEquals("", Ascii.truncate("", 5, "..."));, +    assertEquals("", Ascii.truncate("", 0, ""));, +  }, +, +  public void testTruncateIllegalArguments() {, +    try {, +      Ascii.truncate("foobar", 2);, +      fail();, +    } catch (IllegalArgumentException expected) {}, +, +    try {, +      Ascii.truncate("foobar", 8, "1234567890");, +      fail();, +    } catch (IllegalArgumentException expected) {}, +, +    try {, +      Ascii.truncate("foobar", -1);, +      fail();, +    } catch (IllegalArgumentException expected) {}, +, +    try {, +      Ascii.truncate("foobar", -1, "");, +      fail();, +    } catch (IllegalArgumentException expected) {}, +  }, +++ b/guava-gwt/test/com/google/common/base/AsciiTest_gwt.java, +, +public void testTruncate() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncate();, +}, +, +public void testTruncateIllegalArguments() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncateIllegalArguments();, +}, +, +public void testTruncateWithCustomTruncationIndicator() throws Exception {, +  com.google.common.base.AsciiTest testCase = new com.google.common.base.AsciiTest();, +  testCase.testTruncateWithCustomTruncationIndicator();, +}, +++ b/guava-tests/test/com/google/common/base/AsciiTest.java, +, +  public void testTruncate() {, +    assertEquals("foobar", Ascii.truncate("foobar", 10));, +    assertEquals("fo...", Ascii.truncate("foobar", 5));, +    assertEquals("foobar", Ascii.truncate("foobar", 6));, +    assertEquals("", Ascii.truncate("", 6));, +  }, +, +  public void testTruncateWithCustomTruncationIndicator() {]