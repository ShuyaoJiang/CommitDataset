[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConverters.java, +	private static final List<Class<?>> NON_REPLACING_CONVERTERS;, +	static {, +		List<Class<?>> nonReplacingConverters = new ArrayList<Class<?>>();, +		addClassIfExists(nonReplacingConverters, "org.springframework.hateoas.mvc.", +				+ "TypeConstrainedMappingJackson2HttpMessageConverter");, +		NON_REPLACING_CONVERTERS = Collections.unmodifiableList(nonReplacingConverters);, +	}, +, +					if (isReplacement(defaultConverter, candidate)) {, +	private boolean isReplacement(HttpMessageConverter<?> defaultConverter,, +			HttpMessageConverter<?> candidate) {, +		for (Class<?> nonRelacingConverter : NON_REPLACING_CONVERTERS) {, +			if (nonRelacingConverter.isInstance(candidate)) {, +				return false;, +			}, +		}, +		return ClassUtils.isAssignableValue(defaultConverter.getClass(), candidate);, +	}, +, +	private static void addClassIfExists(List<Class<?>> list, String className) {, +		try {, +			list.add(Class.forName(className));, +		}, +		catch (ClassNotFoundException ex) {, +			// Ignore, +		}, +	}, +]