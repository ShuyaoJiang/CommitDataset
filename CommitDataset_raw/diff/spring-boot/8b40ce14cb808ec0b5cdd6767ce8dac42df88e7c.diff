[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +				.asInt(DataSize::toBytes).when(this::isPositive), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +				.asInt(DataSize::toBytes).when(this::isPositive), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +	public void customMaxHttpHeaderSizeIgnoredIfNegative() {, +		bind("server.max-http-header-size=-1");, +		customizeAndRunServer((server) -> assertThat(((AbstractHttp11Protocol<?>) server, +				.getTomcat().getConnector().getProtocolHandler()).getMaxHttpHeaderSize()), +						.isEqualTo(DataSize.ofKilobytes(8).toBytes()));, +	}, +, +	@Test, +	public void customMaxHttpHeaderSizeIgnoredIfZero() {, +		bind("server.max-http-header-size=0");, +		customizeAndRunServer((server) -> assertThat(((AbstractHttp11Protocol<?>) server, +				.getTomcat().getConnector().getProtocolHandler()).getMaxHttpHeaderSize()), +						.isEqualTo(DataSize.ofKilobytes(8).toBytes()));, +	}, +, +	@Test]