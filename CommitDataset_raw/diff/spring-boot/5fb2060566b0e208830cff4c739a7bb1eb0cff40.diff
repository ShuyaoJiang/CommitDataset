[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			 * Whether static resource caching is permitted for this web application., +			 */, +			private boolean allowCaching = true;, +, +			/**, +			public boolean isAllowCaching() {, +				return this.allowCaching;, +			}, +, +			public void setAllowCaching(boolean allowCaching) {, +				this.allowCaching = allowCaching;, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			 * Whether static resource caching is permitted for this web application., +			 */, +			private boolean allowCaching = true;, +, +			/**, +			public boolean isAllowCaching() {, +				return this.allowCaching;, +			}, +, +			public void setAllowCaching(boolean allowCaching) {, +				this.allowCaching = allowCaching;, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +					context.getResources().setCachingAllowed(resource.isAllowCaching());, +					if (resource.getCacheTtl() != null) {, +				}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			 * Whether static resource caching is permitted for this web application., +			 */, +			private boolean allowCaching = true;, +, +			/**, +			public boolean isAllowCaching() {, +				return this.allowCaching;, +			}, +, +			public void setAllowCaching(boolean allowCaching) {, +				this.allowCaching = allowCaching;, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +					context.getResources().setCachingAllowed(resource.isAllowCaching());, +					if (resource.getCacheTtl() != null) {, +				}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +	public void customStaticResourceAllowCaching() {, +		bind("server.tomcat.resource.allow-caching=false");, +		customizeAndRunServer((server) -> {, +			Mapper mapper = server.getTomcat().getService().getMapper();, +			Object contextObjectToContextVersionMap = ReflectionTestUtils.getField(mapper,, +					"contextObjectToContextVersionMap");, +			Object tomcatEmbeddedContext = ((Map<Context, Object>) contextObjectToContextVersionMap), +					.values().toArray()[0];, +			assertThat(((StandardRoot) ReflectionTestUtils.getField(tomcatEmbeddedContext,, +					"resources")).isCachingAllowed()).isFalse();, +		});, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			 * Whether static resource caching is permitted for this web application., +			 */, +			private boolean allowCaching = true;, +, +			/**, +			public boolean isAllowCaching() {, +				return this.allowCaching;, +			}, +, +			public void setAllowCaching(boolean allowCaching) {, +				this.allowCaching = allowCaching;, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +					context.getResources().setCachingAllowed(resource.isAllowCaching());, +					if (resource.getCacheTtl() != null) {, +				}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +	public void customStaticResourceAllowCaching() {, +		bind("server.tomcat.resource.allow-caching=false");, +		customizeAndRunServer((server) -> {, +			Mapper mapper = server.getTomcat().getService().getMapper();, +			Object contextObjectToContextVersionMap = ReflectionTestUtils.getField(mapper,, +					"contextObjectToContextVersionMap");, +			Object tomcatEmbeddedContext = ((Map<Context, Object>) contextObjectToContextVersionMap), +					.values().toArray()[0];, +			assertThat(((StandardRoot) ReflectionTestUtils.getField(tomcatEmbeddedContext,, +					"resources")).isCachingAllowed()).isFalse();, +		});, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.tomcat.resource.allow-caching= # Whether static resource caching is permitted for this web application.]