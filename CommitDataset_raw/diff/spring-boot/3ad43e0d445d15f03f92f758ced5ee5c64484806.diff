[+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +				targetName = this.environment.resolvePlaceholders(targetName);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +				targetName = this.environment.resolvePlaceholders(targetName);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessorTests.java, +	public void placeholderInPrefix() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context, "foo:spam", "spam.foo:bar");, +		this.context.register(PlaceholderPrefixConfiguration.class);, +		this.context.refresh();, +		assertThat(this.context.getBean(PlaceholderPrefixConfiguration.class).getFoo(),, +				equalTo("bar"));, +	}, +, +	@Test, +	@ConfigurationProperties(prefix = "${foo:bar}"), +	public static class PlaceholderPrefixConfiguration {, +, +		private String foo;, +, +		public String getFoo() {, +			return this.foo;, +		}, +, +		public void setFoo(String foo) {, +			this.foo = foo;, +		}, +, +	}, +, +	@EnableConfigurationProperties]