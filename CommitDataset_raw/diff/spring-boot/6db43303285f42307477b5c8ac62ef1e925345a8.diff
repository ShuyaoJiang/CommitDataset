[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public final ContextLoader contextLoader = new ContextLoader().autoConfig(, +			HealthIndicatorAutoConfiguration.class, ManagementServerProperties.class);, +		this.contextLoader, +				.autoConfigFirst(MongoAutoConfiguration.class,, +		this.contextLoader, +				.autoConfigFirst(MongoAutoConfiguration.class,, +		this.contextLoader, +				.config(EmbeddedDataSourceConfiguration.class, DataSourceConfig.class), +				.env("management.health.diskspace.enabled:false").load(context -> {, +		this.contextLoader, +				.config(EmbeddedDataSourceConfiguration.class,, +		this.contextLoader, +				.config(DataSourceConfig.class,, +						HealthIndicatorAutoConfiguration.class), +				.env("spring.datasource.test.validation-query:SELECT from FOOBAR",, +						"management.health.diskspace.enabled:false"), +				.load(context -> {, +					assertThat(healthIndicator.getClass()), +							.isEqualTo(DataSourceHealthIndicator.class);, +					assertThat(dataSourceHealthIndicator.getQuery()), +							.isEqualTo("SELECT from FOOBAR");, +				.env("management.health.db.enabled:false",, +		this.contextLoader, +				.autoConfigFirst(JestClientConfiguration.class,, +				.systemProperty("es.set.netty.runtime.available.processors", "false"), +		this.contextLoader, +				.autoConfigFirst(JestClientConfiguration.class,, +				.systemProperty("es.set.netty.runtime.available.processors", "false"), +		this.contextLoader, +				.autoConfigFirst(JestClientConfiguration.class,]