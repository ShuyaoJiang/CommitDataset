[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import org.springframework.boot.actuate.info.MapInfoContributor;, +	/**, +	 * Constructor provided for backward compatibility., +	 * @param info a map (which is added to the info), +	 * @param infoContributors the info contributors to use, +	 *, +	 * @deprecated in favour of the constructor without the map, +	 */, +	@Deprecated, +	public InfoEndpoint(Map<String, Object> info, InfoContributor... infoContributors) {, +		this(createContributors(info, infoContributors));, +	}, +, +	private static List<InfoContributor> createContributors(Map<String, Object> info,, +			InfoContributor[] infoContributors) {, +		List<InfoContributor> result = new ArrayList<InfoContributor>(, +				Arrays.asList(infoContributors));, +		result.add(0, new MapInfoContributor(info));, +		return result;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import org.springframework.boot.actuate.info.MapInfoContributor;, +	/**, +	 * Constructor provided for backward compatibility., +	 * @param info a map (which is added to the info), +	 * @param infoContributors the info contributors to use, +	 *, +	 * @deprecated in favour of the constructor without the map, +	 */, +	@Deprecated, +	public InfoEndpoint(Map<String, Object> info, InfoContributor... infoContributors) {, +		this(createContributors(info, infoContributors));, +	}, +, +	private static List<InfoContributor> createContributors(Map<String, Object> info,, +			InfoContributor[] infoContributors) {, +		List<InfoContributor> result = new ArrayList<InfoContributor>(, +				Arrays.asList(infoContributors));, +		result.add(0, new MapInfoContributor(info));, +		return result;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/MapInfoContributor.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.info;, +, +import java.util.LinkedHashMap;, +import java.util.Map;, +, +/**, + * A simple {@link InfoContributor} that exposes a map., + *, + * @author Dave Syer, + * @since 1.4.0, + */, +public class MapInfoContributor implements InfoContributor {, +, +	private final Map<String, Object> info;, +, +	public MapInfoContributor(Map<String, Object> info) {, +		this.info = new LinkedHashMap<String, Object>(info);, +	}, +, +	@Override, +	public void contribute(Info.Builder builder) {, +		builder.withDetails(this.info);, +	}, +, +}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import org.springframework.boot.actuate.info.MapInfoContributor;, +	/**, +	 * Constructor provided for backward compatibility., +	 * @param info a map (which is added to the info), +	 * @param infoContributors the info contributors to use, +	 *, +	 * @deprecated in favour of the constructor without the map]