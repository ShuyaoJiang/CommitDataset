[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/websocket/WebSocketAutoConfiguration.java, +import org.springframework.beans.BeanUtils;, +import org.springframework.util.ClassUtils;, +import org.springframework.util.ReflectionUtils;, +	private static final String TOMCAT_7_LISTENER_TYPE = "org.apache.catalina.deploy.ApplicationListener";, +	private static final String TOMCAT_8_LISTENER_TYPE = "org.apache.tomcat.util.descriptor.web.ApplicationListener";, +, +	private static Log logger = LogFactory.getLog(WebSocketAutoConfiguration.class);, +								addListener(context, findListenerType());, +, +	private static Class<?> findListenerType() {, +		if (ClassUtils.isPresent(TOMCAT_7_LISTENER_TYPE, null)) {, +			return ClassUtils.resolveClassName(TOMCAT_7_LISTENER_TYPE, null);, +		}, +		if (ClassUtils.isPresent(TOMCAT_8_LISTENER_TYPE, null)) {, +			return ClassUtils.resolveClassName(TOMCAT_8_LISTENER_TYPE, null);, +		}, +		throw new UnsupportedOperationException(, +				"Cannot find Tomcat 7 or 8 ApplicationListener class");, +	}, +, +	/**, +	 * Instead of registering the WsSci directly as a ServletContainerInitializer, we use, +	 * the ApplicationListener provided by Tomcat. Unfortunately the ApplicationListener, +	 * class moved packages in Tomcat 8 so we have to do it reflectively., +	 * , +	 * @param context the current context, +	 * @param listenerType the type of listener to add, +	 */, +	private static void addListener(Context context, Class<?> listenerType) {, +		Object instance = BeanUtils.instantiateClass(ClassUtils, +				.getConstructorIfAvailable(listenerType, String.class, boolean.class),, +				"org.apache.tomcat.websocket.server.WsContextListener", false);, +		ReflectionUtils.invokeMethod(ClassUtils.getMethod(context.getClass(),, +				"addApplicationListener", listenerType), context, instance);, +	}]