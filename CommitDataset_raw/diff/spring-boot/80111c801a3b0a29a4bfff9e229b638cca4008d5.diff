[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoProperties.java, + * Copyright 2012-2015 the original author or authors., +					String database = this.authenticationDatabase == null ? getMongoClientDatabase(), +							: this.authenticationDatabase;, +							this.username, database, this.password));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoProperties.java, + * Copyright 2012-2015 the original author or authors., +					String database = this.authenticationDatabase == null ? getMongoClientDatabase(), +							: this.authenticationDatabase;, +							this.username, database, this.password));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mongo/MongoPropertiesTests.java, + * Copyright 2012-2015 the original author or authors., +		assertMongoCredential(client.getCredentialsList().get(0), "user", "secret",, +				"test");, +	}, +, +	@Test, +	public void databaseCanBeCustomized() throws UnknownHostException {, +		MongoProperties properties = new MongoProperties();, +		properties.setDatabase("foo");, +		properties.setUsername("user");, +		properties.setPassword("secret".toCharArray());, +		MongoClient client = properties.createMongoClient(null);, +		assertMongoCredential(client.getCredentialsList().get(0), "user", "secret", "foo");, +	}, +, +	@Test, +	public void authenticationDatabaseCanBeCustomized() throws UnknownHostException {, +		MongoProperties properties = new MongoProperties();, +		properties.setAuthenticationDatabase("foo");, +		properties.setUsername("user");, +		properties.setPassword("secret".toCharArray());, +		MongoClient client = properties.createMongoClient(null);, +		assertMongoCredential(client.getCredentialsList().get(0), "user", "secret", "foo");, +		assertMongoCredential(credentialsList.get(0), "user", "secret", "test");, +			String expectedUsername, String expectedPassword, String expectedSource) {, +		assertThat(credentials.getSource(), equalTo(expectedSource));]