[+++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Tests that use `@SpringApplicationTest(webEnvironment=WebEnvironment.RANDOM_PORT)` can, +also inject the actual port into a field using the `@LocalServerPort` annotation. For, +example:, +	@SpringApplicationTest(webEnvironment=WebEnvironment.RANDOM_PORT), +	public class MyWebIntegrationTests {, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Tests that use `@SpringApplicationTest(webEnvironment=WebEnvironment.RANDOM_PORT)` can, +also inject the actual port into a field using the `@LocalServerPort` annotation. For, +example:, +	@SpringApplicationTest(webEnvironment=WebEnvironment.RANDOM_PORT), +	public class MyWebIntegrationTests {, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Spring Boot provides a `@SpringApplicationTest` annotation which can be used as an, +alternative the standard `spring-test` `@ContextConfiguration` annotation when you need, +Spring Boot features. The annotation works by creating the `ApplicationContext` used, +in your tests via `SpringApplication`., +You can use the `webEnvironment` attribute of `@SpringApplicationTest` to further refine, +how your tests will run:, +* `MOCK` -- Loads a `WebApplicationContext` and provides a mock servlet environment., +  Embedded servlet containers are not started when using this annotation. If servlet, +  APIs are not on your classpath this mode will transparantly fallback to creating a, +  regular non-web `ApplicationContext`., +* `RANDOM_PORT` -- Loads an `EmbeddedWebApplicationContext` and provides a real, +  servlet environment. Embedded servlet containers are started and listening on a random, +  port., +* `DEFINED_PORT` -- Loads an `EmbeddedWebApplicationContext` and provides a real, +  servlet environment. Embedded servlet containers are started and listening on a defined, +  port (i.e from your `application.properties` or on the default port `8080`)., +* `NONE` -- Loads an `ApplicationContext` using `SpringApplication` but does not provides, +  _any_ servlet environment (mock or otherwise)., +NOTE: In addition to `@SpringApplicationTest` a number of other annotations are also, +provided for testing more specific slices of an application. See below for details., +[[boot-features-testing-spring-boot-applications-working-with-random-ports]], +==== Working with random ports, +If you need to start a full running server for tests, we recommend that you use random, +ports. If you use `@SpringApplicationTest(webEnvironment=WebEnvironment.RANDOM_PORT)`, +an available port will be picked at random each time your test runs., +The `@LocalServerPort` annotation can be used to, +<<howto-discover-the-http-port-at-runtime,inject the actual port used>> into your test., +	@SpringApplicationTest(webEnvironment=WebEnvironment.RANDOM_PORT), +`@SpringApplicationTest` to suit the needs of your tests.]