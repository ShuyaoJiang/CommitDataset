[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		this.contextPath = cleanContextPath(contextPath);, +	}, +, +	private String cleanContextPath(String contextPath) {, +		if (StringUtils.hasText(contextPath) && contextPath.endsWith("/")) {, +			return contextPath.substring(0, contextPath.length() - 1);, +		}, +		return contextPath;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		this.contextPath = cleanContextPath(contextPath);, +	}, +, +	private String cleanContextPath(String contextPath) {, +		if (StringUtils.hasText(contextPath) && contextPath.endsWith("/")) {, +			return contextPath.substring(0, contextPath.length() - 1);, +		}, +		return contextPath;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import static org.hamcrest.Matchers.equalTo;, +	public void testTrailingSlashOfContextPathIsRemoved() {, +		new RelaxedDataBinder(this.properties, "server").bind(new MutablePropertyValues(, +				Collections.singletonMap("server.contextPath", "/foo/")));, +		assertThat(this.properties.getContextPath(), equalTo("/foo"));, +	}, +, +	@Test, +	public void testSlashOfContextPathIsDefaultValue() {, +		new RelaxedDataBinder(this.properties, "server").bind(new MutablePropertyValues(, +				Collections.singletonMap("server.contextPath", "/")));, +		assertThat(this.properties.getContextPath(), equalTo(""));, +	}, +, +	@Test]