[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfiguration.java, +	public DefaultRestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider() {, +			RestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider) {, +		return new MetricsRestTemplateCustomizer(meterRegistry,, +				restTemplateExchangeTagsProvider,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfiguration.java, +	public DefaultRestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider() {, +			RestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider) {, +		return new MetricsRestTemplateCustomizer(meterRegistry,, +				restTemplateExchangeTagsProvider,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfiguration.java, +	public DefaultRestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider() {, +			RestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider) {, +		return new MetricsRestTemplateCustomizer(meterRegistry,, +				restTemplateExchangeTagsProvider,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfiguration.java, +	public DefaultRestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider() {, +			RestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider) {, +		return new MetricsRestTemplateCustomizer(meterRegistry,, +				restTemplateExchangeTagsProvider,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/EndpointId.java, +	private static final Set<String> loggedWarnings = new HashSet<>();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfiguration.java, +	public DefaultRestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider() {, +			RestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider) {, +		return new MetricsRestTemplateCustomizer(meterRegistry,, +				restTemplateExchangeTagsProvider,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/EndpointId.java, +	private static final Set<String> loggedWarnings = new HashSet<>();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchJestHealthIndicatorTests.java, +			json = "{\n" + "  \"error\": \"Server Error\",\n" + "  \"status\": \"", +					+ status + "\"\n" + "}";, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfiguration.java, +	public DefaultRestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider() {, +			RestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider) {, +		return new MetricsRestTemplateCustomizer(meterRegistry,, +				restTemplateExchangeTagsProvider,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/EndpointId.java, +	private static final Set<String> loggedWarnings = new HashSet<>();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchJestHealthIndicatorTests.java, +			json = "{\n" + "  \"error\": \"Server Error\",\n" + "  \"status\": \"", +					+ status + "\"\n" + "}";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/HttpMessageConverters.java, +	 * default converter is found). The {@link #postProcessConverters(List)} method can be, +	 * default converter is found). The {@link #postProcessConverters(List)} method can be, +	 * found). The {@link #postProcessConverters(List)} method can be used for further, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfiguration.java, +	public DefaultRestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider() {, +			RestTemplateExchangeTagsProvider restTemplateExchangeTagsProvider) {, +		return new MetricsRestTemplateCustomizer(meterRegistry,, +				restTemplateExchangeTagsProvider,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +							"Reached the maximum number of URI tags for 'http.client.requests'."), +							"Reached the maximum number of URI tags for 'http.client.requests'."), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/EndpointId.java, +	private static final Set<String> loggedWarnings = new HashSet<>();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchJestHealthIndicatorTests.java, +			json = "{\n" + "  \"error\": \"Server Error\",\n" + "  \"status\": \"", +					+ status + "\"\n" + "}";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/HttpMessageConverters.java, +	 * default converter is found). The {@link #postProcessConverters(List)} method can be, +	 * default converter is found). The {@link #postProcessConverters(List)} method can be, +	 * found). The {@link #postProcessConverters(List)} method can be used for further, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/LdapAutoConfigurationTests.java, +			assertThat(contextSource.getUrls()).containsExactly("ldap://localhost:389");, +					assertThat(contextSource.getUrls()), +							.containsExactly("ldap://localhost:123");, +					assertThat(contextSource.getUrls()).containsExactly(, +							"ldap://localhost:123", "ldap://mycompany:123");, +					assertThat(contextSource.getUrls())]