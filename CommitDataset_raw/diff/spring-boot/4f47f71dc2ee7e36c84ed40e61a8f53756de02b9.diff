[+++ b/spring-boot-cli-grape/src/main/java/org/springframework/boot/cli/compiler/AetherGrapeEngine.java, +		List<RemoteRepository> repositories = new ArrayList<RemoteRepository>();, +		repositories.add(new RemoteRepository.Builder("central", "default",, +				"http://repo1.maven.org/maven2/").build());, +, +		if (!Boolean.getBoolean("disableSpringSnapshotRepos")) {, +			repositories.add(new RemoteRepository.Builder("spring-snapshot", "default",, +					"http://repo.spring.io/snapshot").build());, +			repositories.add(new RemoteRepository.Builder("spring-milestone", "default",, +		}, +, +		this.repositories = repositories;, +++ b/spring-boot-cli-grape/src/main/java/org/springframework/boot/cli/compiler/AetherGrapeEngine.java, +		List<RemoteRepository> repositories = new ArrayList<RemoteRepository>();, +		repositories.add(new RemoteRepository.Builder("central", "default",, +				"http://repo1.maven.org/maven2/").build());, +, +		if (!Boolean.getBoolean("disableSpringSnapshotRepos")) {, +			repositories.add(new RemoteRepository.Builder("spring-snapshot", "default",, +					"http://repo.spring.io/snapshot").build());, +			repositories.add(new RemoteRepository.Builder("spring-milestone", "default",, +		}, +, +		this.repositories = repositories;, +++ b/spring-boot-cli-grape/src/test/java/org/springframework/boot/cli/compiler/AetherGrapeEngineTests.java, +	@Test(expected = DependencyResolutionFailedException.class), +	public void resolutionWithSnapshotRepositoriesDisabled() {, +		Map<String, Object> args = new HashMap<String, Object>();, +		System.setProperty("disableSpringSnapshotRepos", "true");, +		try {, +			new AetherGrapeEngine(this.groovyClassLoader, null, null, null).grab(args,, +					createDependency("org.springframework", "spring-jdbc", "3.2.0.M1"));, +		}, +		finally {, +			System.clearProperty("disableSpringSnapshotRepos");, +		}, +	}, +, +++ b/spring-boot-cli-grape/src/main/java/org/springframework/boot/cli/compiler/AetherGrapeEngine.java, +		List<RemoteRepository> repositories = new ArrayList<RemoteRepository>();, +		repositories.add(new RemoteRepository.Builder("central", "default",, +				"http://repo1.maven.org/maven2/").build());, +, +		if (!Boolean.getBoolean("disableSpringSnapshotRepos")) {, +			repositories.add(new RemoteRepository.Builder("spring-snapshot", "default",, +					"http://repo.spring.io/snapshot").build());, +			repositories.add(new RemoteRepository.Builder("spring-milestone", "default",, +		}, +, +		this.repositories = repositories;, +++ b/spring-boot-cli-grape/src/test/java/org/springframework/boot/cli/compiler/AetherGrapeEngineTests.java, +	@Test(expected = DependencyResolutionFailedException.class), +	public void resolutionWithSnapshotRepositoriesDisabled() {, +		Map<String, Object> args = new HashMap<String, Object>();, +		System.setProperty("disableSpringSnapshotRepos", "true");, +		try {, +			new AetherGrapeEngine(this.groovyClassLoader, null, null, null).grab(args,, +					createDependency("org.springframework", "spring-jdbc", "3.2.0.M1"));, +		}, +		finally {, +			System.clearProperty("disableSpringSnapshotRepos");, +		}, +	}, +, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/SampleIntegrationTests.java]