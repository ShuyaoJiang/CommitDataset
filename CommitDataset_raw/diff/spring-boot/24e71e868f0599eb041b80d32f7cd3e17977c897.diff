[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +						this.endpointHandlerMapping)));, +			String[] paths = getEndpointPaths(this.endpointHandlerMapping);, +				// @formatter:off, +				http.authorizeRequests(), +						.antMatchers(this.server.getPathsArray(getEndpointPaths(this.endpointHandlerMapping, false))).access("permitAll()"), +						.anyRequest().hasRole(this.management.getSecurity().getRole());, +				// @formatter:on, +				http.httpBasic();, +	private static String[] getEndpointPaths(EndpointHandlerMapping endpointHandlerMapping) {, +		return StringUtils.mergeStringArrays(, +				getEndpointPaths(endpointHandlerMapping, false),, +				getEndpointPaths(endpointHandlerMapping, true));, +	}, +, +				String path = endpointHandlerMapping.getPath(endpoint.getPath());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +						this.endpointHandlerMapping)));, +			String[] paths = getEndpointPaths(this.endpointHandlerMapping);, +				// @formatter:off, +				http.authorizeRequests(), +						.antMatchers(this.server.getPathsArray(getEndpointPaths(this.endpointHandlerMapping, false))).access("permitAll()"), +						.anyRequest().hasRole(this.management.getSecurity().getRole());, +				// @formatter:on, +				http.httpBasic();, +	private static String[] getEndpointPaths(EndpointHandlerMapping endpointHandlerMapping) {, +		return StringUtils.mergeStringArrays(, +				getEndpointPaths(endpointHandlerMapping, false),, +				getEndpointPaths(endpointHandlerMapping, true));, +	}, +, +				String path = endpointHandlerMapping.getPath(endpoint.getPath());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	@SuppressWarnings("serial"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +						this.endpointHandlerMapping)));, +			String[] paths = getEndpointPaths(this.endpointHandlerMapping);, +				// @formatter:off, +				http.authorizeRequests(), +						.antMatchers(this.server.getPathsArray(getEndpointPaths(this.endpointHandlerMapping, false))).access("permitAll()"), +						.anyRequest().hasRole(this.management.getSecurity().getRole());, +				// @formatter:on, +				http.httpBasic();, +	private static String[] getEndpointPaths(EndpointHandlerMapping endpointHandlerMapping) {, +		return StringUtils.mergeStringArrays(, +				getEndpointPaths(endpointHandlerMapping, false),, +				getEndpointPaths(endpointHandlerMapping, true));, +	}, +, +				String path = endpointHandlerMapping.getPath(endpoint.getPath());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	@SuppressWarnings("serial"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +	private long ttl = 1000;, +, +	/**, +	 * Time to live for cached result. If accessed anonymously, we might need to cache the, +	 * result of this endpoint to prevent a DOS attack., +	 * , +	 * @return time to live in milliseconds (default 1000), +	 */, +	public long getTtl() {, +		return ttl;, +	}, +, +	public void setTtl(long ttl) {, +		this.ttl = ttl;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +						this.endpointHandlerMapping)));, +			String[] paths = getEndpointPaths(this.endpointHandlerMapping);, +				// @formatter:off, +				http.authorizeRequests(), +						.antMatchers(this.server.getPathsArray(getEndpointPaths(this.endpointHandlerMapping, false))).access("permitAll()"), +						.anyRequest().hasRole(this.management.getSecurity().getRole());, +				// @formatter:on, +				http.httpBasic();, +	private static String[] getEndpointPaths(EndpointHandlerMapping endpointHandlerMapping) {, +		return StringUtils.mergeStringArrays(, +				getEndpointPaths(endpointHandlerMapping, false),, +				getEndpointPaths(endpointHandlerMapping, true));, +	}, +, +				String path = endpointHandlerMapping.getPath(endpoint.getPath());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	@SuppressWarnings("serial"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +	private long ttl = 1000;, +, +	/**, +	 * Time to live for cached result. If accessed anonymously, we might need to cache the, +	 * result of this endpoint to prevent a DOS attack., +	 * , +	 * @return time to live in milliseconds (default 1000), +	 */, +	public long getTtl() {, +		return ttl;, +	}, +]