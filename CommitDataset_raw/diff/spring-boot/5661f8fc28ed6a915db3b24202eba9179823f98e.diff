[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointTests.java, +import java.util.Map;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +	public void testInvoke() throws Exception {, +	@Test, +	@SuppressWarnings("unchecked"), +	public void testDefaultKeySanitization() throws Exception {, +		ConfigurationPropertiesReportEndpoint report = getEndpointBean();, +		// report.setKeysToSanitize(new String[] {});, +		Map<String, Object> properties = report.invoke();, +		Map<String, Object> nestedProperties = (Map<String, Object>) properties, +				.get("testProperties");, +		assertNotNull(nestedProperties);, +		assertEquals("******", nestedProperties.get("dbPassword"));, +		assertEquals("654321", nestedProperties.get("myTestProperty"));, +	}, +, +	@Test, +	@SuppressWarnings("unchecked"), +	public void testKeySanitization() throws Exception {, +		ConfigurationPropertiesReportEndpoint report = getEndpointBean();, +		report.setKeysToSanitize(new String[] { "property" });, +		Map<String, Object> properties = report.invoke();, +		Map<String, Object> nestedProperties = (Map<String, Object>) properties, +				.get("testProperties");, +		assertNotNull(nestedProperties);, +		assertEquals("123456", nestedProperties.get("dbPassword"));, +		assertEquals("******", nestedProperties.get("myTestProperty"));, +	}, +, +		public TestProperties testProperties() {, +			return new TestProperties();, +		@ConfigurationProperties(name = "test"), +		public static class TestProperties {, +, +			private String dbPassword = "123456";, +, +			private String myTestProperty = "654321";, +, +			public String getDbPassword() {, +				return this.dbPassword;, +			public void setDbPassword(String dbPassword) {, +				this.dbPassword = dbPassword;, +			}, +, +			public String getMyTestProperty() {, +				return this.myTestProperty;, +			}, +, +			public void setMyTestProperty(String myTestProperty) {, +				this.myTestProperty = myTestProperty;, +			}, +]