[+++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +		// TODO: Disable sessions, +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +		// TODO: Disable sessions, +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/ManagementServerPropertiesAutoConfiguration.java, + * {@link ManagementServerProperties} bean., +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +		// TODO: Disable sessions, +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/ManagementServerPropertiesAutoConfiguration.java, + * {@link ManagementServerProperties} bean., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +	private int sessionTimeout;, +, +	/**, +	 * The session timeout in minutes., +	 * , +	 * @param sessionTimeout the session timeout to set (default 30), +	 */, +	public void setSessionTimeout(int sessionTimeout) {, +		this.sessionTimeout = sessionTimeout;, +	}, +, +	/**, +	 * @return the session timeout in minutes, +	 */, +	public int getSessionTimeout() {, +		return this.sessionTimeout;, +	}, +, +	/**, +	 * Sets {@link ServletContextInitializer} that should be applied in addition to, +	 * {@link #getEmbeddedServletContainer(ServletContextInitializer...)} parameters. This, +	 * method will replace any previously set or added initializers., +	 * @param initializers the initializers to set, +	 * @see #addInitializers, +	 * @see #getInitializers, +	 */, +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +		// TODO: Disable sessions, +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/ManagementServerPropertiesAutoConfiguration.java, + * {@link ManagementServerProperties} bean., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +	private int sessionTimeout;, +, +	/**, +	 * The session timeout in minutes., +	 * , +	 * @param sessionTimeout the session timeout to set (default 30), +	 */, +	public void setSessionTimeout(int sessionTimeout) {, +		this.sessionTimeout = sessionTimeout;, +	}, +, +	/**, +	 * @return the session timeout in minutes, +	 */, +	public int getSessionTimeout() {, +		return this.sessionTimeout;, +	}, +, +	/**, +	 * Sets {@link ServletContextInitializer} that should be applied in addition to, +	 * {@link #getEmbeddedServletContainer(ServletContextInitializer...)} parameters. This, +	 * method will replace any previously set or added initializers., +	 * @param initializers the initializers to set, +	 * @see #addInitializers, +	 * @see #getInitializers, +	 */, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/ConfigurableEmbeddedServletContainerFactory.java, +	 * The port that the embedded server listens on., +	 * @return the port, +	 */, +	int getPort();, +, +	/**, +	 * The session timeout in seconds (default 30). If 0 or negative then sessions never, +	 * expire., +	 * , +	 * @param sessionTimeout the session timeout, +	 */, +	void setSessionTimeout(int sessionTimeout);, +, +	/**, +	 * @return the session timeout value, +	 */, +	int getSessionTimeout();, +, +	/**, +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +		// TODO: Disable sessions, +++ b/spring-actuator/src/main/java/org/springframework/actuate/autoconfigure/ManagementServerPropertiesAutoConfiguration.java, + * {@link ManagementServerProperties} bean., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +	private int sessionTimeout;, +, +	/**, +	 * The session timeout in minutes., +	 * , +	 * @param sessionTimeout the session timeout to set (default 30), +	 */]