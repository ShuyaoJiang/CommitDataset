[+++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactory.java, +	private final SessionStoreDirectory sessionStoreDir = new SessionStoreDirectory();, +, +	private final DocumentRoot documentRoot = new DocumentRoot(this.logger);, +, +	private final StaticResourceJars staticResourceJars = new StaticResourceJars();, +, +		return this.sessionStoreDir.getDirectory();, +		this.sessionStoreDir.setDirectory(sessionStoreDir);, +		return this.documentRoot.getDirectory();, +		this.documentRoot.setDirectory(documentRoot);, +		return this.documentRoot.getValidDirectory();, +	protected final List<URL> getUrlsOfJarsWithMetaInfResources() {, +		return this.staticResourceJars.getUrls();, +		return this.sessionStoreDir.getValidDirectory(true);, +		return this.sessionStoreDir.getValidDirectory(mkdirs);, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactory.java, +	private final SessionStoreDirectory sessionStoreDir = new SessionStoreDirectory();, +, +	private final DocumentRoot documentRoot = new DocumentRoot(this.logger);, +, +	private final StaticResourceJars staticResourceJars = new StaticResourceJars();, +, +		return this.sessionStoreDir.getDirectory();, +		this.sessionStoreDir.setDirectory(sessionStoreDir);, +		return this.documentRoot.getDirectory();, +		this.documentRoot.setDirectory(documentRoot);, +		return this.documentRoot.getValidDirectory();, +	protected final List<URL> getUrlsOfJarsWithMetaInfResources() {, +		return this.staticResourceJars.getUrls();, +		return this.sessionStoreDir.getValidDirectory(true);, +		return this.sessionStoreDir.getValidDirectory(mkdirs);, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/DocumentRoot.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.web.servlet.server;, +, +import java.io.File;, +import java.io.IOException;, +import java.net.JarURLConnection;, +import java.net.URL;, +import java.net.URLConnection;, +import java.security.CodeSource;, +import java.util.Arrays;, +, +import org.apache.commons.logging.Log;, +, +/**, + * Manages a {@link ServletWebServerFactory} document root., + *, + * @author Phillip Webb, + * @see AbstractServletWebServerFactory, + */, +class DocumentRoot {, +, +	private static final String[] COMMON_DOC_ROOTS = { "src/main/webapp", "public",, +			"static" };, +, +	private final Log logger;, +, +	private File directory;, +, +	DocumentRoot(Log logger) {, +		this.logger = logger;, +	}, +, +	public File getDirectory() {, +		return this.directory;, +	}, +, +	public void setDirectory(File directory) {, +		this.directory = directory;, +	}, +, +	/**, +	 * Returns the absolute document root when it points to a valid directory, logging a, +	 * warning and returning {@code null} otherwise., +	 * @return the valid document root, +	 */, +	public final File getValidDirectory() {, +		File file = this.directory;, +		file = (file != null ? file : getWarFileDocumentRoot());, +		file = (file != null ? file : getExplodedWarFileDocumentRoot());, +		file = (file != null ? file : getCommonDocumentRoot());, +		if (file == null && this.logger.isDebugEnabled()) {, +			logNoDocumentRoots();]