[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.eclipse.jetty.server.AbstractConnector;, +	 * Time in milliseconds that connectors will wait for another HTTP request before, +	 * closing the connection. When not set, the connector's container-specific default, +	 * will be used. Use a value of -1 to indicate no (i.e. infinite) timeout., +	private Integer connectionTimeout;, +	public Integer getConnectionTimeout() {, +		return this.connectionTimeout;, +	public void setConnectionTimeout(Integer connectionTimeout) {, +			if (serverProperties.getConnectionTimeout() != null) {, +				customizeConnectionTimeout(factory,, +						serverProperties.getConnectionTimeout());, +			}, +		private void customizeConnectionTimeout(, +				TomcatEmbeddedServletContainerFactory factory, int connectionTimeout) {, +					AbstractProtocol<?> handler = (AbstractProtocol<?>) connector, +							.getProtocolHandler();, +					handler.setConnectionTimeout(connectionTimeout);, +			if (serverProperties.getConnectionTimeout() != null) {, +				customizeConnectionTimeout(factory,, +						serverProperties.getConnectionTimeout());, +		}, +, +		private void customizeConnectionTimeout(, +				JettyEmbeddedServletContainerFactory factory,, +				final int connectionTimeout) {, +				public void customize(Server server) {, +					for (org.eclipse.jetty.server.Connector connector : server, +							.getConnectors()) {, +						if (connector instanceof AbstractConnector) {, +							((AbstractConnector) connector), +									.setIdleTimeout(connectionTimeout);, +			if (serverProperties.getConnectionTimeout() != null) {, +				customizeConnectionTimeout(factory,, +						serverProperties.getConnectionTimeout());, +		}, +, +		private void customizeConnectionTimeout(, +				UndertowEmbeddedServletContainerFactory factory,, +				final int connectionTimeout) {, +					builder.setSocketOption(UndertowOptions.NO_REQUEST_TIMEOUT,, +							connectionTimeout);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.eclipse.jetty.server.AbstractConnector;, +	 * Time in milliseconds that connectors will wait for another HTTP request before, +	 * closing the connection. When not set, the connector's container-specific default, +	 * will be used. Use a value of -1 to indicate no (i.e. infinite) timeout., +	private Integer connectionTimeout;, +	public Integer getConnectionTimeout() {, +		return this.connectionTimeout;, +	public void setConnectionTimeout(Integer connectionTimeout) {, +			if (serverProperties.getConnectionTimeout() != null) {, +				customizeConnectionTimeout(factory,, +						serverProperties.getConnectionTimeout());, +			}, +		private void customizeConnectionTimeout(, +				TomcatEmbeddedServletContainerFactory factory, int connectionTimeout) {, +					AbstractProtocol<?> handler = (AbstractProtocol<?>) connector, +							.getProtocolHandler();, +					handler.setConnectionTimeout(connectionTimeout);, +			if (serverProperties.getConnectionTimeout() != null) {, +				customizeConnectionTimeout(factory,, +						serverProperties.getConnectionTimeout());, +		}, +, +		private void customizeConnectionTimeout(, +				JettyEmbeddedServletContainerFactory factory,, +				final int connectionTimeout) {, +				public void customize(Server server) {, +					for (org.eclipse.jetty.server.Connector connector : server, +							.getConnectors()) {, +						if (connector instanceof AbstractConnector) {, +							((AbstractConnector) connector), +									.setIdleTimeout(connectionTimeout);, +			if (serverProperties.getConnectionTimeout() != null) {, +				customizeConnectionTimeout(factory,, +						serverProperties.getConnectionTimeout());, +		}, +, +		private void customizeConnectionTimeout(, +				UndertowEmbeddedServletContainerFactory factory,, +				final int connectionTimeout) {, +					builder.setSocketOption(UndertowOptions.NO_REQUEST_TIMEOUT,, +							connectionTimeout);, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.connection-timeout= # Time in milliseconds that connectors will wait for another HTTP request before closing the connection. When not set, the connector's container-specific default will be used. Use a value of -1 to indicate no (i.e. infinite) timeout.]