[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactory.java, +	private final Environment environment;, +, +		this.environment = environment;, +		StringBuilder builder = new StringBuilder(determineDomain());, +	private String determineDomain() {, +		if (StringUtils.hasText(this.properties.getDomain())) {, +			return this.properties.getDomain();, +		}, +		return this.environment.getProperty("spring.jmx.default-domain",, +				"org.springframework.boot");, +	}, +	, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactory.java, +	private final Environment environment;, +, +		this.environment = environment;, +		StringBuilder builder = new StringBuilder(determineDomain());, +	private String determineDomain() {, +		if (StringUtils.hasText(this.properties.getDomain())) {, +			return this.properties.getDomain();, +		}, +		return this.environment.getProperty("spring.jmx.default-domain",, +				"org.springframework.boot");, +	}, +	, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/JmxEndpointProperties.java, +	private String domain;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactory.java, +	private final Environment environment;, +, +		this.environment = environment;, +		StringBuilder builder = new StringBuilder(determineDomain());, +	private String determineDomain() {, +		if (StringUtils.hasText(this.properties.getDomain())) {, +			return this.properties.getDomain();, +		}, +		return this.environment.getProperty("spring.jmx.default-domain",, +				"org.springframework.boot");, +	}, +	, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/JmxEndpointProperties.java, +	private String domain;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.endpoints.jmx.domain",, +      "defaultValue": "org.springframework.boot", +    },, +    {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactory.java, +	private final Environment environment;, +, +		this.environment = environment;, +		StringBuilder builder = new StringBuilder(determineDomain());, +	private String determineDomain() {, +		if (StringUtils.hasText(this.properties.getDomain())) {, +			return this.properties.getDomain();, +		}, +		return this.environment.getProperty("spring.jmx.default-domain",, +				"org.springframework.boot");, +	}, +	, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/JmxEndpointProperties.java, +	private String domain;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.endpoints.jmx.domain",, +      "defaultValue": "org.springframework.boot", +    },, +    {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionProperties.java, +	private ServerProperties serverProperties;, +	void setServerProperties(ObjectProvider<ServerProperties> serverProperties) {]