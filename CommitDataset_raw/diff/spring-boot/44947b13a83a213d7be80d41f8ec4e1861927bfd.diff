[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java, +	 * print stack traces of any encountered. Applies the specified, +	 * {@link ExitCodeGenerator} in addition to any Spring beans that implement, +	 * {@link ExitCodeGenerator}. In the case of multiple exit codes the highest value, +	 * will be used (or if all values are negative, the lowest value will be used), +	 * @param exitCodeGenerators exist code generators, +		int exitCode = 0;, +				List<ExitCodeGenerator> generators = new ArrayList<ExitCodeGenerator>();, +				generators.addAll(Arrays.asList(exitCodeGenerators));, +				generators.addAll(context.getBeansOfType(ExitCodeGenerator.class), +						.values());, +				exitCode = getExitCode(generators);, +			} finally {, +				close(context);, +			}, +, +		} catch (Exception e) {, +			e.printStackTrace();, +			exitCode = (exitCode == 0 ? 1 : exitCode);, +		}, +		return exitCode;, +	}, +, +	private static int getExitCode(List<ExitCodeGenerator> exitCodeGenerators) {, +		int exitCode = 0;, +		for (ExitCodeGenerator exitCodeGenerator : exitCodeGenerators) {, +			try {, +				int value = exitCodeGenerator.getExitCode();, +				if (value > 0 && value > exitCode || value < 0 && value < exitCode) {, +					exitCode = value;, +				exitCode = (exitCode == 0 ? 1 : exitCode);, +		return exitCode;, +	}, +	private static void close(ApplicationContext context) {]