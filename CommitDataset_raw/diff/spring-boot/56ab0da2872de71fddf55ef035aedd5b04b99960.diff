[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * Whether to enable resolution of already compressed resources. Checks for a, +		 * resource name with the '.gz' or '.br' file extensions., +		private boolean compressed = false;, +		public boolean isCompressed() {, +			return this.compressed;, +		public void setCompressed(boolean compressed) {, +			this.compressed = compressed;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * Whether to enable resolution of already compressed resources. Checks for a, +		 * resource name with the '.gz' or '.br' file extensions., +		private boolean compressed = false;, +		public boolean isCompressed() {, +			return this.compressed;, +		public void setCompressed(boolean compressed) {, +			this.compressed = compressed;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.java, +import org.springframework.web.reactive.resource.EncodedResourceResolver;, +			if (properties.isCompressed()) {, +				chain.addResolver(new EncodedResourceResolver());, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * Whether to enable resolution of already compressed resources. Checks for a, +		 * resource name with the '.gz' or '.br' file extensions., +		private boolean compressed = false;, +		public boolean isCompressed() {, +			return this.compressed;, +		public void setCompressed(boolean compressed) {, +			this.compressed = compressed;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.java, +import org.springframework.web.reactive.resource.EncodedResourceResolver;, +			if (properties.isCompressed()) {, +				chain.addResolver(new EncodedResourceResolver());, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.web.servlet.resource.EncodedResourceResolver;, +			if (properties.isCompressed()) {, +				chain.addResolver(new EncodedResourceResolver());, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * Whether to enable resolution of already compressed resources. Checks for a, +		 * resource name with the '.gz' or '.br' file extensions., +		private boolean compressed = false;, +		public boolean isCompressed() {, +			return this.compressed;, +		public void setCompressed(boolean compressed) {, +			this.compressed = compressed;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.java, +import org.springframework.web.reactive.resource.EncodedResourceResolver;, +			if (properties.isCompressed()) {, +				chain.addResolver(new EncodedResourceResolver());, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.web.servlet.resource.EncodedResourceResolver;, +			if (properties.isCompressed()) {, +				chain.addResolver(new EncodedResourceResolver());, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name" : "spring.resources.chain.gzipped",, +      "type" : "java.lang.Boolean",, +      "description" : "Whether to enable resolution of already gzipped resources. Checks for a resource name variant with the \"*.gz\" extension.",, +      "deprecation" : {, +        "replacement" : "spring.resources.chain.compressed",, +        "level" : "error", +      }, +    },, +    {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * Whether to enable resolution of already compressed resources. Checks for a, +		 * resource name with the '.gz' or '.br' file extensions., +		private boolean compressed = false;, +		public boolean isCompressed() {, +			return this.compressed;, +		public void setCompressed(boolean compressed) {, +			this.compressed = compressed;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.java, +import org.springframework.web.reactive.resource.EncodedResourceResolver;, +			if (properties.isCompressed()) {, +				chain.addResolver(new EncodedResourceResolver());, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.web.servlet.resource.EncodedResourceResolver;, +			if (properties.isCompressed()) {, +				chain.addResolver(new EncodedResourceResolver());, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name" : "spring.resources.chain.gzipped",, +      "type" : "java.lang.Boolean",, +      "description" : "Whether to enable resolution of already gzipped resources. Checks for a resource name variant with the \"*.gz\" extension.",, +      "deprecation" : {, +        "replacement" : "spring.resources.chain.compressed",, +        "level" : "error", +      }, +    },, +    {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java, +import org.springframework.web.servlet.resource.EncodedResourceResolver;, +				"spring.resources.chain.compressed:true").run((context) -> {, +							.containsOnly(EncodedResourceResolver.class,, +									VersionResourceResolver.class,]