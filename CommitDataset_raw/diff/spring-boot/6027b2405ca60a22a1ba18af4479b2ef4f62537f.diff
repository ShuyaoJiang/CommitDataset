[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/InitializrService.java, +			request.addHeader("User-Agent", "SpringBootCli/", +					+ getClass().getPackage().getImplementationVersion());, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/InitializrService.java, +			request.addHeader("User-Agent", "SpringBootCli/", +					+ getClass().getPackage().getImplementationVersion());, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/InitCommandTests.java, +import org.apache.http.Header;, +import org.apache.http.client.methods.HttpUriRequest;, +import org.junit.Before;, +import org.mockito.ArgumentCaptor;, +import org.mockito.Captor;, +import org.mockito.MockitoAnnotations;, +import static org.hamcrest.Matchers.startsWith;, +import static org.junit.Assert.assertThat;, +import static org.mockito.Mockito.verify;, +	@Captor, +	private ArgumentCaptor<HttpUriRequest> requestCaptor;, +, +	@Before, +	public void setupMocks() {, +		MockitoAnnotations.initMocks(this);, +	}, +, +	@Test, +	public void userAgent() throws Exception {, +		this.command.run("--list", "--target=http://fake-service");, +		verify(this.http).execute(this.requestCaptor.capture());, +		Header agent = this.requestCaptor.getValue().getHeaders("User-Agent")[0];, +		assertThat(agent.getValue(), startsWith("SpringBootCli/"));, +	}, +]