[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/MappingsEndpointReactiveDocumentationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/foo"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/MappingsEndpointReactiveDocumentationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/foo"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/mono-error"),, +					(request) -> Mono.error(new RuntimeException())).andRoute(, +							GET("/thrown"),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/MappingsEndpointReactiveDocumentationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/foo"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/mono-error"),, +					(request) -> Mono.error(new RuntimeException())).andRoute(, +							GET("/thrown"),, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/web/mappings/MappingsEndpointTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RequestPredicates.POST;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/one"), (request) -> ServerResponse.ok().build()), +					.andRoute(POST("/two"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/MappingsEndpointReactiveDocumentationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/foo"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/mono-error"),, +					(request) -> Mono.error(new RuntimeException())).andRoute(, +							GET("/thrown"),, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/web/mappings/MappingsEndpointTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RequestPredicates.POST;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/one"), (request) -> ServerResponse.ok().build()), +					.andRoute(POST("/two"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.all;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +, +		return route(acceptsTextHtml(), this::renderErrorView).andRoute(all(),, +				this::renderErrorResponse);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/MappingsEndpointReactiveDocumentationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/foo"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/mono-error"),, +					(request) -> Mono.error(new RuntimeException())).andRoute(, +							GET("/thrown"),, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/web/mappings/MappingsEndpointTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RequestPredicates.POST;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/one"), (request) -> ServerResponse.ok().build()), +					.andRoute(POST("/two"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.all;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +, +		return route(acceptsTextHtml(), this::renderErrorView).andRoute(all(),, +				this::renderErrorResponse);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfigurationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/test"), (serverRequest) -> null);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/MappingsEndpointReactiveDocumentationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/foo"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/http/reactive/HttpTraceWebFilterIntegrationTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/mono-error"),, +					(request) -> Mono.error(new RuntimeException())).andRoute(, +							GET("/thrown"),, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/web/mappings/MappingsEndpointTests.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.GET;, +import static org.springframework.web.reactive.function.server.RequestPredicates.POST;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +			return route(GET("/one"), (request) -> ServerResponse.ok().build()), +					.andRoute(POST("/two"), (request) -> ServerResponse.ok().build());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +import static org.springframework.web.reactive.function.server.RequestPredicates.all;, +import static org.springframework.web.reactive.function.server.RouterFunctions.route;, +, +		return route(acceptsTextHtml(), this::renderErrorView).andRoute(all(),, +				this::renderErrorResponse);]