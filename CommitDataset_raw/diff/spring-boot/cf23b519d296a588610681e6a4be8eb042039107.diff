[+++ b/docs/howto.md, +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, + * Copyright 2012-2014 the original author or authors., + * {@link Endpoint} to expose Spring MVC mappings., + * , +			for (Map.Entry<String, Object> entry : handlers.entrySet()) {, +				Class<? extends Object> handlerClass = entry.getValue().getClass();, +				result.put(entry.getKey(),, +						Collections.singletonMap("type", handlerClass.getName()));, +			for (Map.Entry<?, HandlerMethod> entry : methods.entrySet()) {, +				result.put(, +						String.valueOf(entry.getKey()),, +						Collections.singletonMap("method",, +								String.valueOf(entry.getValue())));, +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, + * Copyright 2012-2014 the original author or authors., + * {@link Endpoint} to expose Spring MVC mappings., + * , +			for (Map.Entry<String, Object> entry : handlers.entrySet()) {, +				Class<? extends Object> handlerClass = entry.getValue().getClass();, +				result.put(entry.getKey(),, +						Collections.singletonMap("type", handlerClass.getName()));, +			for (Map.Entry<?, HandlerMethod> entry : methods.entrySet()) {, +				result.put(, +						String.valueOf(entry.getKey()),, +						Collections.singletonMap("method",, +								String.valueOf(entry.getValue())));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/ShutdownMvcEndpointTests.java, + * Copyright 2012-2014 the original author or authors., + * Tests for {@link ShutdownMvcEndpoint}., + * , +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, + * Copyright 2012-2014 the original author or authors., + * {@link Endpoint} to expose Spring MVC mappings., + * , +			for (Map.Entry<String, Object> entry : handlers.entrySet()) {, +				Class<? extends Object> handlerClass = entry.getValue().getClass();, +				result.put(entry.getKey(),, +						Collections.singletonMap("type", handlerClass.getName()));, +			for (Map.Entry<?, HandlerMethod> entry : methods.entrySet()) {, +				result.put(, +						String.valueOf(entry.getKey()),, +						Collections.singletonMap("method",, +								String.valueOf(entry.getValue())));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/ShutdownMvcEndpointTests.java, + * Copyright 2012-2014 the original author or authors., + * Tests for {@link ShutdownMvcEndpoint}., + * , +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, + * <p>, + * Disable this behavior with {@literal spring.batch.job.enabled=false})., + * <p>, + * with a comma-delimited list: {@literal spring.batch.job.names=job1,job2}. In this case, + * the Runner will first find jobs registered as Beans, then those in the existing, +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, + * Copyright 2012-2014 the original author or authors., + * {@link Endpoint} to expose Spring MVC mappings., + * , +			for (Map.Entry<String, Object> entry : handlers.entrySet()) {, +				Class<? extends Object> handlerClass = entry.getValue().getClass();, +				result.put(entry.getKey(),, +						Collections.singletonMap("type", handlerClass.getName()));, +			for (Map.Entry<?, HandlerMethod> entry : methods.entrySet()) {, +				result.put(, +						String.valueOf(entry.getKey()),, +						Collections.singletonMap("method",, +								String.valueOf(entry.getValue())));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/ShutdownMvcEndpointTests.java, + * Copyright 2012-2014 the original author or authors., + * Tests for {@link ShutdownMvcEndpoint}., + * , +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, + * <p>, + * Disable this behavior with {@literal spring.batch.job.enabled=false})., + * <p>, + * with a comma-delimited list: {@literal spring.batch.job.names=job1,job2}. In this case, + * the Runner will first find jobs registered as Beans, then those in the existing, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, + * Copyright 2012-2014 the original author or authors., +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, + * Copyright 2012-2014 the original author or authors., + * {@link Endpoint} to expose Spring MVC mappings.]