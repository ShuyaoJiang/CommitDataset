[+++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>com.squareup.okhttp3</groupId>, +			<artifactId>mockwebserver</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>com.squareup.okhttp3</groupId>, +			<artifactId>mockwebserver</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		/**, +		 * URI that an OpenID Connect Provider asserts as its Issuer Identifier. If the, +		 * issuer provided is "https://example.com", then an "OpenID Provider, +		 * Configuration Request" will be made to, +		 * "https://example.com/.well-known/openid-configuration". The result is expected, +		 * to be an "OpenID Provider Configuration Response"., +		 */, +		private String issuerUri;, +, +		public String getIssuerUri() {, +			return this.issuerUri;, +		}, +, +		public void setIssuerUri(String issuerUri) {, +			this.issuerUri = issuerUri;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>com.squareup.okhttp3</groupId>, +			<artifactId>mockwebserver</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		/**, +		 * URI that an OpenID Connect Provider asserts as its Issuer Identifier. If the, +		 * issuer provided is "https://example.com", then an "OpenID Provider, +		 * Configuration Request" will be made to, +		 * "https://example.com/.well-known/openid-configuration". The result is expected, +		 * to be an "OpenID Provider Configuration Response"., +		 */, +		private String issuerUri;, +, +		public String getIssuerUri() {, +			return this.issuerUri;, +		}, +, +		public void setIssuerUri(String issuerUri) {, +			this.issuerUri = issuerUri;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +import org.springframework.security.config.oauth2.client.oidc.OidcConfigurationProvider;, + * @author Madhura Bhave, +		String issuer = getIssuerIfPossible(registrationId, properties.getProvider(),, +				providers);, +		if (issuer != null) {, +			return OidcConfigurationProvider.issuer(issuer).registrationId(registrationId), +					.clientId(properties.getClientId()), +					.clientSecret(properties.getClientSecret()).build();, +		}, +	private static String getIssuerIfPossible(String registrationId,, +			String configuredProviderId, Map<String, Provider> providers) {, +		String providerId = (configuredProviderId != null ? configuredProviderId, +				: registrationId);, +		if (providers.containsKey(providerId)) {, +			Provider provider = providers.get(providerId);, +			String issuer = provider.getIssuerUri();, +			if (issuer != null) {, +				return cleanIssuerPath(issuer);, +			}, +		}, +		return null;, +	}, +, +	private static String cleanIssuerPath(String issuer) {, +		if (issuer.endsWith("/")) {, +			return issuer.substring(0, issuer.length() - 1);, +		}, +		return issuer;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>com.squareup.okhttp3</groupId>, +			<artifactId>mockwebserver</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		/**, +		 * URI that an OpenID Connect Provider asserts as its Issuer Identifier. If the, +		 * issuer provided is "https://example.com", then an "OpenID Provider, +		 * Configuration Request" will be made to, +		 * "https://example.com/.well-known/openid-configuration". The result is expected, +		 * to be an "OpenID Provider Configuration Response"., +		 */, +		private String issuerUri;]