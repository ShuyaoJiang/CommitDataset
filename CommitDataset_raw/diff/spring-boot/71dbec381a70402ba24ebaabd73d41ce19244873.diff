[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +	@Import(ManagementContextConfigurationsImportSelector.class), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +	@Import(ManagementContextConfigurationsImportSelector.class), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +@Import(ManagementContextConfigurationsImportSelector.class), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +	@Import(ManagementContextConfigurationsImportSelector.class), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +@Import(ManagementContextConfigurationsImportSelector.class), +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +	@Import(ManagementContextConfigurationsImportSelector.class), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +@Import(ManagementContextConfigurationsImportSelector.class), +++ /dev/null, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +	@Import(ManagementContextConfigurationsImportSelector.class), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +@Import(ManagementContextConfigurationsImportSelector.class), +++ /dev/null, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure;, +, +import java.io.IOException;, +import java.lang.reflect.Type;, +import java.util.Map;, +import java.util.concurrent.ConcurrentHashMap;, +, +import javax.annotation.PostConstruct;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.actuate.endpoint.mvc.ActuatorDocsEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.HalBrowserEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.HypermediaDisabled;, +import org.springframework.boot.actuate.endpoint.mvc.LinksMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoints;, +import org.springframework.boot.autoconfigure.condition.ConditionOutcome;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnResource;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.boot.autoconfigure.condition.SpringBootCondition;, +import org.springframework.boot.autoconfigure.web.HttpMessageConverters;, +import org.springframework.boot.autoconfigure.web.ResourceProperties;, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.ConditionContext;, +import org.springframework.context.annotation.Conditional;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.MethodParameter;, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.core.type.AnnotatedTypeMetadata;, +import org.springframework.hateoas.Link;, +import org.springframework.hateoas.Resource;, +import org.springframework.hateoas.ResourceSupport;, +import org.springframework.hateoas.UriTemplate;, +import org.springframework.hateoas.hal.CurieProvider;, +import org.springframework.hateoas.hal.DefaultCurieProvider;, +import org.springframework.http.MediaType;, +import org.springframework.http.converter.HttpMessageConverter;, +import org.springframework.http.converter.HttpMessageNotWritableException;, +import org.springframework.http.server.ServerHttpRequest;, +import org.springframework.http.server.ServerHttpResponse;, +import org.springframework.http.server.ServletServerHttpRequest;, +import org.springframework.util.StringUtils;, +import org.springframework.util.TypeUtils;, +import org.springframework.web.bind.annotation.ControllerAdvice;, +import org.springframework.web.servlet.HandlerMapping;, +import org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice;, +, +import com.fasterxml.jackson.annotation.JsonAnyGetter;, +import com.fasterxml.jackson.annotation.JsonInclude;, +import com.fasterxml.jackson.annotation.JsonInclude.Include;, +import com.fasterxml.jackson.annotation.JsonUnwrapped;, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;, +]