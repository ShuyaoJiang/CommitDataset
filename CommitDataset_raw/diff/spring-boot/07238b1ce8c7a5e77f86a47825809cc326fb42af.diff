[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +import java.util.HashMap;, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.util.StringUtils;, +		return extract(this.context);, +		Map<String, Object> result = new HashMap<String, Object>();, +			String beanName = entry.getKey();, +			Object bean = entry.getValue();, +, +			Map<String, Object> root = new HashMap<String, Object>();, +			root.put("prefix", extractPrefix(bean));, +			root.put("properties", sanitize(mapper.convertValue(bean, Map.class)));, +			result.put(beanName, root);, +			result.put("parent", extract(context.getParent()));, +		return result;, +	}, +, +	private String extractPrefix(Object bean) {, +		ConfigurationProperties annotation = AnnotationUtils.findAnnotation(, +				bean.getClass(), ConfigurationProperties.class);, +		return (StringUtils.hasLength(annotation.value()) ? annotation.value(), +				: annotation.name());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +import java.util.HashMap;, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.util.StringUtils;, +		return extract(this.context);, +		Map<String, Object> result = new HashMap<String, Object>();, +			String beanName = entry.getKey();, +			Object bean = entry.getValue();, +, +			Map<String, Object> root = new HashMap<String, Object>();, +			root.put("prefix", extractPrefix(bean));, +			root.put("properties", sanitize(mapper.convertValue(bean, Map.class)));, +			result.put(beanName, root);, +			result.put("parent", extract(context.getParent()));, +		return result;, +	}, +, +	private String extractPrefix(Object bean) {, +		ConfigurationProperties annotation = AnnotationUtils.findAnnotation(, +				bean.getClass(), ConfigurationProperties.class);, +		return (StringUtils.hasLength(annotation.value()) ? annotation.value(), +				: annotation.name());, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointTests.java, +	public void testNaming() throws Exception {, +		assertEquals("test", nestedProperties.get("prefix"));, +		assertNotNull(nestedProperties.get("properties"));, +	}, +, +	@Test, +	@SuppressWarnings("unchecked"), +	public void testDefaultKeySanitization() throws Exception {, +		ConfigurationPropertiesReportEndpoint report = getEndpointBean();, +		Map<String, Object> properties = report.invoke();, +		Map<String, Object> nestedProperties = (Map<String, Object>) ((Map<String, Object>) properties, +				.get("testProperties")).get("properties");, +		assertNotNull(nestedProperties);, +		Map<String, Object> nestedProperties = (Map<String, Object>) ((Map<String, Object>) properties, +				.get("testProperties")).get("properties");]