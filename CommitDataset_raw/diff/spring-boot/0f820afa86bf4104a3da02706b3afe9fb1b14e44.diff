[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.info.GitInfo;, +	private GitInfo gitInfo;, +, +	@Autowired(required = false), +		if (this.gitInfo != null && this.gitInfo.getBranch() != null) {, +			info.put("git", this.gitInfo);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.info.GitInfo;, +	private GitInfo gitInfo;, +, +	@Autowired(required = false), +		if (this.gitInfo != null && this.gitInfo.getBranch() != null) {, +			info.put("git", this.gitInfo);, +++ b/spring-boot-actuator/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "description": "Resource reference to a generated git info properties file.",, +    "deprecation": {, +      "replacement": "spring.info.git.location", +    }, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.info.GitInfo;, +	private GitInfo gitInfo;, +, +	@Autowired(required = false), +		if (this.gitInfo != null && this.gitInfo.getBranch() != null) {, +			info.put("git", this.gitInfo);, +++ b/spring-boot-actuator/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "description": "Resource reference to a generated git info properties file.",, +    "deprecation": {, +      "replacement": "spring.info.git.location", +    }, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfigurationTests.java, +import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration;, +		this.context.register(ProjectInfoAutoConfiguration.class, EndpointAutoConfiguration.class);, +				"spring.info.git.location:classpath:nonexistent");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.info.GitInfo;, +	private GitInfo gitInfo;, +, +	@Autowired(required = false), +		if (this.gitInfo != null && this.gitInfo.getBranch() != null) {, +			info.put("git", this.gitInfo);, +++ b/spring-boot-actuator/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "description": "Resource reference to a generated git info properties file.",, +    "deprecation": {, +      "replacement": "spring.info.git.location", +    }, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfigurationTests.java, +import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration;, +		this.context.register(ProjectInfoAutoConfiguration.class, EndpointAutoConfiguration.class);, +				"spring.info.git.location:classpath:nonexistent");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/info/GitInfo.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.info;, +, +/**, + * Provide git-related information such as commit id and time., + *, + * @author Dave Syer, + * @author Stephane Nicoll, + * @since 1.4.0, + */, +public class GitInfo {, +, +	private String branch;, +, +	private final Commit commit = new Commit();, +, +	public String getBranch() {, +		return this.branch;, +	}, +, +	public void setBranch(String branch) {, +		this.branch = branch;, +	}, +, +	public Commit getCommit() {, +		return this.commit;, +	}, +, +	public static class Commit {]