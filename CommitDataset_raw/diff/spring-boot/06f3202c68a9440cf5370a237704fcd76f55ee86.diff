[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +import org.springframework.util.ObjectUtils;, +public class DataSourceProperties implements BeanClassLoaderAware, EnvironmentAware,, +		InitializingBean {, +	private ClassLoader classLoader;, +, +	private Environment environment;, +, +	public void setEnvironment(Environment environment) {, +		this.environment = environment;, +	}, +, +	@Override, +			throw new DataSourceBeanCreationException(this.embeddedDatabaseConnection,, +					this.environment, "driver class");, +			throw new DataSourceBeanCreationException(this.embeddedDatabaseConnection,, +					this.environment, "url");, +	private static class DataSourceBeanCreationException extends BeanCreationException {, +, +		public DataSourceBeanCreationException(EmbeddedDatabaseConnection connection,, +				Environment environment, String property) {, +			super(getMessage(connection, environment, property));, +		}, +, +		private static String getMessage(EmbeddedDatabaseConnection connection,, +				Environment environment, String property) {, +			StringBuilder message = new StringBuilder();, +			message.append("Cannot determine embedded database " + property, +					+ " for database type " + connection + ". ");, +			message.append("If you want an embedded database please put a supported ", +					+ "one on the classpath. ");, +			message.append("If you have database settings to be loaded from a ", +					+ "particular profile you may need to active it");, +			if (environment != null) {, +				String[] profiles = environment.getActiveProfiles();, +				if (ObjectUtils.isEmpty(profiles)) {, +					message.append(" (no profiles are currently active)");, +				}, +				else {, +					message.append(" (the profiles \"", +							+ StringUtils.arrayToCommaDelimitedString(environment, +									.getActiveProfiles()) + "\" are currently active)");, +, +				}, +			}, +			message.append(".");, +			return message.toString();, +		}, +, +	}, +]