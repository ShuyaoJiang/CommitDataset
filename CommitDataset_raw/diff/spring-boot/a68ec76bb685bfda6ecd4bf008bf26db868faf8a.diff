[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.java, +		messageSource.setUseCodeAsDefaultMessage(properties.isUseCodeAsDefaultMessage());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.java, +		messageSource.setUseCodeAsDefaultMessage(properties.isUseCodeAsDefaultMessage());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/context/MessageSourceProperties.java, + * @author Kedar Joshi, +	/**, +	 * Set whether to use the message code as default message instead of throwing a NoSuchMessageException., +	 */, +	private boolean useCodeAsDefaultMessage = false;, +, +	public boolean isUseCodeAsDefaultMessage() {, +		return this.useCodeAsDefaultMessage;, +	}, +, +	public void setUseCodeAsDefaultMessage(final boolean useCodeAsDefaultMessage) {, +		this.useCodeAsDefaultMessage = useCodeAsDefaultMessage;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.java, +		messageSource.setUseCodeAsDefaultMessage(properties.isUseCodeAsDefaultMessage());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/context/MessageSourceProperties.java, + * @author Kedar Joshi, +	/**, +	 * Set whether to use the message code as default message instead of throwing a NoSuchMessageException., +	 */, +	private boolean useCodeAsDefaultMessage = false;, +, +	public boolean isUseCodeAsDefaultMessage() {, +		return this.useCodeAsDefaultMessage;, +	}, +, +	public void setUseCodeAsDefaultMessage(final boolean useCodeAsDefaultMessage) {, +		this.useCodeAsDefaultMessage = useCodeAsDefaultMessage;, +	}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/context/MessageSourceAutoConfigurationTests.java, + * @author Kedar Joshi, +	public void testUseCodeAsDefaultMessageDefault() throws Exception {, +		load("spring.messages.basename:test/messages");, +		assertThat(isUseCodeAsDefaultMessage(this.context.getBean(MessageSource.class))), +				.isFalse();, +	}, +, +	@Test, +	public void testUseCodeAsDefaultMessageOn() throws Exception {, +		load("spring.messages.basename:test/messages",, +				"spring.messages.use-code-as-default-message:true");, +		assertThat(isUseCodeAsDefaultMessage(this.context.getBean(MessageSource.class))), +				.isTrue();, +	}, +, +	private boolean isUseCodeAsDefaultMessage(MessageSource messageSource) {, +		return (boolean) new DirectFieldAccessor(messageSource), +				.getPropertyValue("useCodeAsDefaultMessage");, +	}, +, +	@Test]