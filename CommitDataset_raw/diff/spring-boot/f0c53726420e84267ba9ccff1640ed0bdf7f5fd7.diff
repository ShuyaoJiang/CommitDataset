[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializerTests.java, +import ch.qos.logback.classic.Level;, +import ch.qos.logback.classic.Logger;, +import ch.qos.logback.classic.LoggerContext;, +import org.junit.Rule;, +import org.slf4j.impl.StaticLoggerBinder;, +import org.springframework.boot.testutil.InternalOutputCapture;, +	@Rule, +	public InternalOutputCapture outputCapture = new InternalOutputCapture();, +	private AutoConfigurationReportLoggingInitializer initializer = new AutoConfigurationReportLoggingInitializer();, +		withDebugLogging(() -> {, +		});, +		assertThat(this.outputCapture.toString()).contains("AUTO-CONFIGURATION REPORT");, +			withDebugLogging(() -> {, +			});, +		assertThat(this.outputCapture.toString()).contains("AUTO-CONFIGURATION REPORT");, +		assertThat(this.outputCapture.toString()).contains("Error starting", +				+ " ApplicationContext. To display the auto-configuration report re-run", +				+ " your application with 'debug' enabled.");, +		withDebugLogging(() -> {, +		});, +		assertThat(this.outputCapture.toString()), +		assertThat(this.outputCapture.toString()), +	private void withDebugLogging(Runnable runnable) {, +		LoggerContext context = (LoggerContext) StaticLoggerBinder.getSingleton(), +				.getLoggerFactory();, +		Logger logger = context, +				.getLogger(AutoConfigurationReportLoggingInitializer.class);, +		Level currentLevel = logger.getLevel();, +		logger.setLevel(Level.DEBUG);, +		try {, +			runnable.run();, +		finally {, +			logger.setLevel(currentLevel);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializerTests.java, +import ch.qos.logback.classic.Level;, +import ch.qos.logback.classic.Logger;, +import ch.qos.logback.classic.LoggerContext;, +import org.junit.Rule;, +import org.slf4j.impl.StaticLoggerBinder;, +import org.springframework.boot.testutil.InternalOutputCapture;, +	@Rule, +	public InternalOutputCapture outputCapture = new InternalOutputCapture();, +	private AutoConfigurationReportLoggingInitializer initializer = new AutoConfigurationReportLoggingInitializer();, +		withDebugLogging(() -> {, +		});, +		assertThat(this.outputCapture.toString()).contains("AUTO-CONFIGURATION REPORT");, +			withDebugLogging(() -> {, +			});, +		assertThat(this.outputCapture.toString()).contains("AUTO-CONFIGURATION REPORT");, +		assertThat(this.outputCapture.toString()).contains("Error starting", +				+ " ApplicationContext. To display the auto-configuration report re-run", +				+ " your application with 'debug' enabled.");, +		withDebugLogging(() -> {, +		});, +		assertThat(this.outputCapture.toString()), +		assertThat(this.outputCapture.toString()), +	private void withDebugLogging(Runnable runnable) {, +		LoggerContext context = (LoggerContext) StaticLoggerBinder.getSingleton(), +				.getLoggerFactory();, +		Logger logger = context, +				.getLogger(AutoConfigurationReportLoggingInitializer.class);, +		Level currentLevel = logger.getLevel();, +		logger.setLevel(Level.DEBUG);, +		try {, +			runnable.run();, +		finally {, +			logger.setLevel(currentLevel);, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +	private String getOutput() {, +		String output = this.outputCapture.toString();, +		this.outputCapture.reset();, +		return output;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializerTests.java, +import ch.qos.logback.classic.Level;, +import ch.qos.logback.classic.Logger;, +import ch.qos.logback.classic.LoggerContext;, +import org.junit.Rule;, +import org.slf4j.impl.StaticLoggerBinder;, +import org.springframework.boot.testutil.InternalOutputCapture;, +	@Rule, +	public InternalOutputCapture outputCapture = new InternalOutputCapture();, +	private AutoConfigurationReportLoggingInitializer initializer = new AutoConfigurationReportLoggingInitializer();, +		withDebugLogging(() -> {, +		});, +		assertThat(this.outputCapture.toString()).contains("AUTO-CONFIGURATION REPORT");, +			withDebugLogging(() -> {, +			});, +		assertThat(this.outputCapture.toString()).contains("AUTO-CONFIGURATION REPORT");, +		assertThat(this.outputCapture.toString()).contains("Error starting", +				+ " ApplicationContext. To display the auto-configuration report re-run", +				+ " your application with 'debug' enabled.");, +		withDebugLogging(() -> {, +		});, +		assertThat(this.outputCapture.toString()), +		assertThat(this.outputCapture.toString()), +	private void withDebugLogging(Runnable runnable) {, +		LoggerContext context = (LoggerContext) StaticLoggerBinder.getSingleton(), +				.getLoggerFactory();, +		Logger logger = context]