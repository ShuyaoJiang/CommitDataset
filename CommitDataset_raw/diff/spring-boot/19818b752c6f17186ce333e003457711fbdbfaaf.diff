[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/artemis/ArtemisEmbeddedConfigurationFactory.java, +import org.apache.activemq.artemis.api.core.RoutingType;, +import org.apache.activemq.artemis.api.core.SimpleString;, +import org.apache.activemq.artemis.core.config.CoreAddressConfiguration;, +import org.apache.activemq.artemis.core.config.CoreQueueConfiguration;, +import org.apache.activemq.artemis.core.settings.impl.AddressSettings;, +		configuration.addAddressesSetting("#",, +			new AddressSettings(), +				.setDeadLetterAddress(SimpleString.toSimpleString("DLQ")), +				.setExpiryAddress(SimpleString.toSimpleString("ExpiryQueue")));, +		configuration.addAddressConfiguration(, +			new CoreAddressConfiguration(), +				.setName("DLQ"), +				.addRoutingType(RoutingType.ANYCAST), +				.addQueueConfiguration(, +					new CoreQueueConfiguration(), +						.setName("DLQ"), +						.setRoutingType(RoutingType.ANYCAST)));, +		configuration.addAddressConfiguration(, +			new CoreAddressConfiguration(), +				.setName("ExpiryQueue"), +				.addRoutingType(RoutingType.ANYCAST), +				.addQueueConfiguration(, +					new CoreQueueConfiguration(), +						.setName("ExpiryQueue"), +						.setRoutingType(RoutingType.ANYCAST)));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/artemis/ArtemisEmbeddedConfigurationFactory.java, +import org.apache.activemq.artemis.api.core.RoutingType;, +import org.apache.activemq.artemis.api.core.SimpleString;, +import org.apache.activemq.artemis.core.config.CoreAddressConfiguration;, +import org.apache.activemq.artemis.core.config.CoreQueueConfiguration;, +import org.apache.activemq.artemis.core.settings.impl.AddressSettings;, +		configuration.addAddressesSetting("#",, +			new AddressSettings(), +				.setDeadLetterAddress(SimpleString.toSimpleString("DLQ")), +				.setExpiryAddress(SimpleString.toSimpleString("ExpiryQueue")));, +		configuration.addAddressConfiguration(, +			new CoreAddressConfiguration(), +				.setName("DLQ"), +				.addRoutingType(RoutingType.ANYCAST), +				.addQueueConfiguration(, +					new CoreQueueConfiguration(), +						.setName("DLQ"), +						.setRoutingType(RoutingType.ANYCAST)));, +		configuration.addAddressConfiguration(, +			new CoreAddressConfiguration(), +				.setName("ExpiryQueue"), +				.addRoutingType(RoutingType.ANYCAST), +				.addQueueConfiguration(, +					new CoreQueueConfiguration(), +						.setName("ExpiryQueue"), +						.setRoutingType(RoutingType.ANYCAST)));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/artemis/ArtemisEmbeddedConfigurationFactoryTests.java, +import java.util.List;, +import java.util.Map;, +, +import org.apache.activemq.artemis.api.core.SimpleString;, +import org.apache.activemq.artemis.core.config.CoreAddressConfiguration;, +import org.apache.activemq.artemis.core.settings.impl.AddressSettings;, +	@Test, +	public void hasDlqExpiryQueueAddressSettingsConfigured() {, +		ArtemisProperties properties = new ArtemisProperties();, +		Configuration configuration = new ArtemisEmbeddedConfigurationFactory(properties), +			.createConfiguration();, +		Map<String, AddressSettings> addressesSettings = configuration.getAddressesSettings();, +		assertThat((CharSequence) addressesSettings.get("#").getDeadLetterAddress()).isEqualTo(SimpleString.toSimpleString("DLQ"));, +		assertThat((CharSequence) addressesSettings.get("#").getExpiryAddress()).isEqualTo(SimpleString.toSimpleString("ExpiryQueue"));, +	}, +, +	@Test, +	public void hasDlqExpiryQueueConfigured() {, +		ArtemisProperties properties = new ArtemisProperties();, +		Configuration configuration = new ArtemisEmbeddedConfigurationFactory(properties), +			.createConfiguration();, +		List<CoreAddressConfiguration> addressConfigurations = configuration.getAddressConfigurations();, +		assertThat(addressConfigurations).hasSize(2);, +	}]