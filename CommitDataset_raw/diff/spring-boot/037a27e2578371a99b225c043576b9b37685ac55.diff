[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration.java, +import org.springframework.core.annotation.Order;, +	@Order(0), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfiguration.java, +import org.springframework.core.annotation.Order;, +	@Order(0), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mobile/DeviceResolverAutoConfigurationTests.java, +import org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration;, +import org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration;, +import org.springframework.boot.autoconfigure.test.ImportAutoConfiguration;, +import org.springframework.http.HttpStatus;, +import org.springframework.http.ResponseEntity;, +import org.springframework.mobile.device.Device;, +import org.springframework.test.web.servlet.MockMvc;, +import org.springframework.test.web.servlet.setup.MockMvcBuilders;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;, +		this.context.register(Config.class);, +	@Test, +	public void deviceHandlerMethodArgumentWorksWithSpringData() throws Exception {, +		this.context = new AnnotationConfigWebApplicationContext();, +		this.context.register(Config.class);, +		this.context.setServletContext(new MockServletContext());, +		this.context.refresh();, +		MockMvc mockMvc = MockMvcBuilders.webAppContextSetup(this.context).build();, +		mockMvc.perform(get("/")).andExpect(status().isOk());, +	}, +, +	@ImportAutoConfiguration({ WebMvcAutoConfiguration.class,, +			HttpMessageConvertersAutoConfiguration.class,, +			DeviceResolverAutoConfiguration.class,, +			PropertyPlaceholderAutoConfiguration.class,, +			SpringDataWebAutoConfiguration.class,, +			RepositoryRestMvcAutoConfiguration.class }), +		public ResponseEntity<Void> test(Device device) {, +			if (device.getDevicePlatform() != null) {, +				return new ResponseEntity<>(HttpStatus.OK);, +			}, +			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);]