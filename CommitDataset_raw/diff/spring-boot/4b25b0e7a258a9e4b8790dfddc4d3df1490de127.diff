[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +import java.util.Map.Entry;, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.core.JsonParser;, +import com.fasterxml.jackson.databind.DeserializationFeature;, +import com.fasterxml.jackson.databind.MapperFeature;, + * @author Andy Wilkinson, +	@EnableConfigurationProperties({ HttpMapperProperties.class, JacksonProperties.class }), +		private HttpMapperProperties httpMapperProperties = new HttpMapperProperties();, +, +		@Autowired, +		private JacksonProperties jacksonProperties = new JacksonProperties();, +, +			if (this.httpMapperProperties.isJsonSortKeys()) {, +, +			configureDeserializationFeatures(objectMapper);, +			configureSerializationFeatures(objectMapper);, +			configureMapperFeatures(objectMapper);, +			configureParserFeatures(objectMapper);, +			configureGeneratorFeatures(objectMapper);, +, +		private void configureDeserializationFeatures(ObjectMapper objectMapper) {, +			for (Entry<DeserializationFeature, Boolean> entry : this.jacksonProperties, +					.getDeserialization().entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}, +, +		private void configureSerializationFeatures(ObjectMapper objectMapper) {, +			for (Entry<SerializationFeature, Boolean> entry : this.jacksonProperties, +					.getSerialization().entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}, +, +		private void configureMapperFeatures(ObjectMapper objectMapper) {, +			for (Entry<MapperFeature, Boolean> entry : this.jacksonProperties.getMapper(), +					.entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}, +, +		private void configureParserFeatures(ObjectMapper objectMapper) {, +			for (Entry<JsonParser.Feature, Boolean> entry : this.jacksonProperties, +					.getParser().entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}, +, +		private void configureGeneratorFeatures(ObjectMapper objectMapper) {, +			for (Entry<JsonGenerator.Feature, Boolean> entry : this.jacksonProperties, +					.getGenerator().entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}, +, +		private boolean isFeatureEnabled(Entry<?, Boolean> entry) {, +			return entry.getValue() != null && entry.getValue();, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +import java.util.Map.Entry;, +import com.fasterxml.jackson.core.JsonGenerator;, +import com.fasterxml.jackson.core.JsonParser;, +import com.fasterxml.jackson.databind.DeserializationFeature;, +import com.fasterxml.jackson.databind.MapperFeature;, + * @author Andy Wilkinson, +	@EnableConfigurationProperties({ HttpMapperProperties.class, JacksonProperties.class }), +		private HttpMapperProperties httpMapperProperties = new HttpMapperProperties();, +, +		@Autowired, +		private JacksonProperties jacksonProperties = new JacksonProperties();, +, +			if (this.httpMapperProperties.isJsonSortKeys()) {, +, +			configureDeserializationFeatures(objectMapper);, +			configureSerializationFeatures(objectMapper);, +			configureMapperFeatures(objectMapper);, +			configureParserFeatures(objectMapper);, +			configureGeneratorFeatures(objectMapper);, +, +		private void configureDeserializationFeatures(ObjectMapper objectMapper) {, +			for (Entry<DeserializationFeature, Boolean> entry : this.jacksonProperties, +					.getDeserialization().entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}, +, +		private void configureSerializationFeatures(ObjectMapper objectMapper) {, +			for (Entry<SerializationFeature, Boolean> entry : this.jacksonProperties, +					.getSerialization().entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}, +, +		private void configureMapperFeatures(ObjectMapper objectMapper) {, +			for (Entry<MapperFeature, Boolean> entry : this.jacksonProperties.getMapper(), +					.entrySet()) {, +				objectMapper.configure(entry.getKey(), isFeatureEnabled(entry));, +			}, +		}]