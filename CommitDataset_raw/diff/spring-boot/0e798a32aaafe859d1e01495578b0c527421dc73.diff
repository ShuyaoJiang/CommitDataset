[+++ b/spring-boot/src/main/java/org/springframework/boot/config/SimpleJsonParser.java, +		if (json != null) {, +			json = json.trim();, +			else if (json.equals("")) {, +		}, +		if (json != null) {, +			json = json.trim();, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/config/SimpleJsonParser.java, +		if (json != null) {, +			json = json.trim();, +			else if (json.equals("")) {, +		}, +		if (json != null) {, +			json = json.trim();, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializer.java, +import java.util.LinkedHashMap;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static final Log logger = LogFactory, +			.getLog(VcapApplicationContextInitializer.class);, +, +		Properties properties = new Properties();, +		try {, +			if (map != null) {, +				map = new LinkedHashMap<String, Object>(map);, +				for (String key : map.keySet()) {, +					Object value = map.get(key);, +					if (!(value instanceof String)) {, +						if (value == null) {, +							value = "";, +						}, +						map.put(key, value.toString());, +					}, +				}, +			}, +		}, +		catch (IllegalArgumentException e) {, +			logger.error("Could not parse VCAP_APPLICATION", e);, +		}, +		Properties properties = new Properties();, +		try {, +			if (map != null) {, +			}, +		}, +		catch (IllegalArgumentException e) {, +			logger.error("Could not parse VCAP_APPLICATION", e);, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/config/SimpleJsonParser.java, +		if (json != null) {, +			json = json.trim();, +			else if (json.equals("")) {, +		}, +		if (json != null) {, +			json = json.trim();, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializer.java, +import java.util.LinkedHashMap;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static final Log logger = LogFactory, +			.getLog(VcapApplicationContextInitializer.class);, +, +		Properties properties = new Properties();, +		try {, +			if (map != null) {, +				map = new LinkedHashMap<String, Object>(map);, +				for (String key : map.keySet()) {, +					Object value = map.get(key);, +					if (!(value instanceof String)) {, +						if (value == null) {, +							value = "";, +						}, +						map.put(key, value.toString());, +					}, +				}, +			}, +		}, +		catch (IllegalArgumentException e) {, +			logger.error("Could not parse VCAP_APPLICATION", e);, +		}, +		Properties properties = new Properties();, +		try {, +			if (map != null) {, +			}, +		}, +		catch (IllegalArgumentException e) {, +			logger.error("Could not parse VCAP_APPLICATION", e);, +		}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializerTests.java, +	public void testUnparseableApplicationProperties() {, +		ConfigurableApplicationContext context = new AnnotationConfigApplicationContext();, +		TestUtils.addEnviroment(context, "VCAP_APPLICATION:");, +		this.initializer.initialize(context);, +		assertEquals(null, context.getEnvironment().getProperty("vcap"));, +	}, +, +	@Test, +	public void testNullApplicationProperties() {]