[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationPackages.java, + * Copyright 2012-2017 the original author or authors., +import java.util.Collections;, +import org.springframework.boot.context.annotation.DeterminableImports;, +	static class Registrar implements ImportBeanDefinitionRegistrar, DeterminableImports {, +			register(registry, new PackageImport(metadata).getPackageName());, +		}, +, +		@Override, +		public Set<Object> determineImports(AnnotationMetadata metadata) {, +			return Collections.<Object>singleton(new PackageImport(metadata));, +		}, +, +	}, +, +	/**, +	 * Wrapper for a package import., +	 */, +	private final static class PackageImport {, +, +		private final String packageName;, +, +		PackageImport(AnnotationMetadata metadata) {, +			this.packageName = ClassUtils.getPackageName(metadata.getClassName());, +		}, +, +		@Override, +		public int hashCode() {, +			return this.packageName.hashCode();, +		}, +, +		@Override, +		public boolean equals(Object obj) {, +			if (obj == null || getClass() != obj.getClass()) {, +				return false;, +			}, +			return this.packageName.equals(((PackageImport) obj).packageName);, +		}, +, +		public String getPackageName() {, +			return this.packageName;, +		}, +, +		@Override, +		public String toString() {, +			return "Package Import " + this.packageName;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationPackages.java, + * Copyright 2012-2017 the original author or authors., +import java.util.Collections;, +import org.springframework.boot.context.annotation.DeterminableImports;, +	static class Registrar implements ImportBeanDefinitionRegistrar, DeterminableImports {, +			register(registry, new PackageImport(metadata).getPackageName());, +		}, +, +		@Override, +		public Set<Object> determineImports(AnnotationMetadata metadata) {, +			return Collections.<Object>singleton(new PackageImport(metadata));, +		}, +, +	}, +, +	/**, +	 * Wrapper for a package import., +	 */, +	private final static class PackageImport {, +, +		private final String packageName;, +, +		PackageImport(AnnotationMetadata metadata) {, +			this.packageName = ClassUtils.getPackageName(metadata.getClassName());, +		}, +, +		@Override, +		public int hashCode() {, +			return this.packageName.hashCode();, +		}, +, +		@Override, +		public boolean equals(Object obj) {, +			if (obj == null || getClass() != obj.getClass()) {, +				return false;, +			}, +			return this.packageName.equals(((PackageImport) obj).packageName);, +		}, +, +		public String getPackageName() {, +			return this.packageName;, +		}, +, +		@Override, +		public String toString() {, +			return "Package Import " + this.packageName;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelector.java, +import org.springframework.boot.context.annotation.DeterminableImports;, +class ImportAutoConfigurationImportSelector extends AutoConfigurationImportSelector, +		implements DeterminableImports {, +	public Set<Object> determineImports(AnnotationMetadata metadata) {, +		Set<String> result = new LinkedHashSet<String>();, +		result.addAll(getCandidateConfigurations(metadata, null));, +		result.removeAll(getExclusions(metadata, null));]