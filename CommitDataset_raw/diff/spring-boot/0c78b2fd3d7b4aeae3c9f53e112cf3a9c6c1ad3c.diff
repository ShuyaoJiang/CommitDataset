[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/options/SourceOptions.java, +import java.io.File;, +				List<String> urls = new ArrayList<String>();, +				File fileCandidate = new File(filename);, +				if (fileCandidate.isFile()) {, +					urls.add(fileCandidate.getAbsoluteFile().toURI().toString());, +				}, +				else if (!isAbsoluteWindowsFile(fileCandidate)) {, +					urls.addAll(ResourceUtils.getUrls(filename, classLoader));, +				}, +					if (isSource(url)) {, +				if (isSource(filename)) {, +	private boolean isAbsoluteWindowsFile(File file) {, +		return isWindows() && file.isAbsolute();, +	}, +, +	private boolean isWindows() {, +		return File.separatorChar == '\\';, +	}, +, +	private boolean isSource(String name) {, +		return name.endsWith(".java") || name.endsWith(".groovy");, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/options/SourceOptions.java, +import java.io.File;, +				List<String> urls = new ArrayList<String>();, +				File fileCandidate = new File(filename);, +				if (fileCandidate.isFile()) {, +					urls.add(fileCandidate.getAbsoluteFile().toURI().toString());, +				}, +				else if (!isAbsoluteWindowsFile(fileCandidate)) {, +					urls.addAll(ResourceUtils.getUrls(filename, classLoader));, +				}, +					if (isSource(url)) {, +				if (isSource(filename)) {, +	private boolean isAbsoluteWindowsFile(File file) {, +		return isWindows() && file.isAbsolute();, +	}, +, +	private boolean isWindows() {, +		return File.separatorChar == '\\';, +	}, +, +	private boolean isSource(String name) {, +		return name.endsWith(".java") || name.endsWith(".groovy");, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/LaunchedURLClassLoader.java]