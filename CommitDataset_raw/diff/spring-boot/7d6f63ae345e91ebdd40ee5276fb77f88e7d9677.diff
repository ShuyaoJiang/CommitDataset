[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HalJsonMvcEndpoint.java, +	@RequestMapping(path = "/", produces = MediaType.APPLICATION_JSON_VALUE), +	public String forward() {, +		return "redirect:" + this.managementServletContext.getContextPath() + this.path;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HalJsonMvcEndpoint.java, +	@RequestMapping(path = "/", produces = MediaType.APPLICATION_JSON_VALUE), +	public String forward() {, +		return "redirect:" + this.managementServletContext.getContextPath() + this.path;, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/HalBrowserMvcEndpointManagementContextPathIntegrationTests.java, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.header;, +	public void redirectJson() throws Exception {, +		this.mockMvc.perform(get("/admin/").accept(MediaType.APPLICATION_JSON)), +				.andExpect(status().isFound()), +				.andExpect(header().string("location", "/admin"));, +	}, +, +	@Test, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HalJsonMvcEndpoint.java, +	@RequestMapping(path = "/", produces = MediaType.APPLICATION_JSON_VALUE), +	public String forward() {, +		return "redirect:" + this.managementServletContext.getContextPath() + this.path;, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/HalBrowserMvcEndpointManagementContextPathIntegrationTests.java, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.header;, +	public void redirectJson() throws Exception {, +		this.mockMvc.perform(get("/admin/").accept(MediaType.APPLICATION_JSON)), +				.andExpect(status().isFound()), +				.andExpect(header().string("location", "/admin"));, +	}, +, +	@Test, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpointIntegrationTests.java, +		mockMvc.perform(get("/management")).andExpect(status().isOk());]