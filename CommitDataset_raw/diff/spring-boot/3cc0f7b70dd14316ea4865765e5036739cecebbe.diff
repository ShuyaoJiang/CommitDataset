[+++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +`ServletWebServerApplicationContext` via its `EmbeddedWebServer`. The best way to get, +`ApplicationListener<ServletWebServerInitializedEvent>` and pull the container, +		ServletWebServerApplicationContext server;, +a new  valve instance in a `TomcatServletWebServerFactory` bean., +`ServletWebServerFactoryCustomizer` and various Tomcat-specific `+*Customizers+` that you, +`TomcatServletWebServerFactory` you can modify it in a number of ways. Or the, +nuclear option is to add your own `TomcatServletWebServerFactory`., +`TomcatServletWebServerFactory` which can allow multiple connectors, e.g. HTTP and, +	public ServletWebServerFactory servletContainer() {, +		TomcatServletWebServerFactory tomcat = new TomcatServletWebServerFactory();, +`ServletWebServerFactoryCustomizer` bean that adds a `TomcatContextCustomizer`:, +`ServletWebServerFactoryCustomizer`. The Jetty APIs are quite rich so once you have, +access to the `JettyServletWebServerFactory` you can modify it in a number, +of ways. Or the nuclear option is to add your own `JettyServletWebServerFactory`., +`ServletWebServerFactoryCustomizer`. Once you have access to the, +`UndertowServletWebServerFactory` you can use an `UndertowBuilderCustomizer` to, +own `UndertowServletWebServerFactory`., +Add an `UndertowBuilderCustomizer` to the `UndertowServletWebServerFactory` and, +	public UndertowServletWebServerFactory servletWebServerFactory() {, +		UndertowServletWebServerFactory factory = new UndertowServletWebServerFactory();, +`RemoteIpValve` yourself by adding a `TomcatServletWebServerFactory` bean.), +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +`ServletWebServerApplicationContext` via its `EmbeddedWebServer`. The best way to get, +`ApplicationListener<ServletWebServerInitializedEvent>` and pull the container, +		ServletWebServerApplicationContext server;, +a new  valve instance in a `TomcatServletWebServerFactory` bean., +`ServletWebServerFactoryCustomizer` and various Tomcat-specific `+*Customizers+` that you, +`TomcatServletWebServerFactory` you can modify it in a number of ways. Or the, +nuclear option is to add your own `TomcatServletWebServerFactory`., +`TomcatServletWebServerFactory` which can allow multiple connectors, e.g. HTTP and, +	public ServletWebServerFactory servletContainer() {, +		TomcatServletWebServerFactory tomcat = new TomcatServletWebServerFactory();, +`ServletWebServerFactoryCustomizer` bean that adds a `TomcatContextCustomizer`:, +`ServletWebServerFactoryCustomizer`. The Jetty APIs are quite rich so once you have, +access to the `JettyServletWebServerFactory` you can modify it in a number, +of ways. Or the nuclear option is to add your own `JettyServletWebServerFactory`., +`ServletWebServerFactoryCustomizer`. Once you have access to the, +`UndertowServletWebServerFactory` you can use an `UndertowBuilderCustomizer` to, +own `UndertowServletWebServerFactory`., +Add an `UndertowBuilderCustomizer` to the `UndertowServletWebServerFactory` and, +	public UndertowServletWebServerFactory servletWebServerFactory() {, +		UndertowServletWebServerFactory factory = new UndertowServletWebServerFactory();, +`RemoteIpValve` yourself by adding a `TomcatServletWebServerFactory` bean.), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +2013-07-31 00:08:16.166  INFO 56603 --- [           main] ationConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e5a8246: startup date [Wed Jul 31 00:08:16 PDT 2013]; root of context hierarchy, +2014-03-04 13:09:54.912  INFO 41370 --- [           main] .t.TomcatServletWebServerFactory : Server initialized with port: 8080, +`AnnotationConfigServletWebServerApplicationContext` will be used, depending on whether you, +`org.springframework.boot.web.servlet.ServletContextInitializer` interface. The, +* `RANDOM_PORT` -- Loads an `ServletWebServerApplicationContext` and provides a real, +* `DEFINED_PORT` -- Loads an `ServletWebServerApplicationContext` and provides a real]