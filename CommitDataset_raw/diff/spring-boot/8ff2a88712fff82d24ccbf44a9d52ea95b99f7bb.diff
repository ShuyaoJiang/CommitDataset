[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/InitCommand.java, +import groovy.lang.Binding;, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.core.env.JOptCommandLinePropertySource;, +						JOptCommandLinePropertySource properties = new JOptCommandLinePropertySource(, +								options);, +						Map<String, Object> map = new HashMap<String, Object>();, +						for (String key : properties.getPropertyNames()) {, +							map.put(key, properties.getProperty(key));, +						}, +						script.setBinding(new Binding(map));, +			}, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/InitCommand.java, +import groovy.lang.Binding;, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.core.env.JOptCommandLinePropertySource;, +						JOptCommandLinePropertySource properties = new JOptCommandLinePropertySource(, +								options);, +						Map<String, Object> map = new HashMap<String, Object>();, +						for (String key : properties.getPropertyNames()) {, +							map.put(key, properties.getProperty(key));, +						}, +						script.setBinding(new Binding(map));, +			}, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/SourceOptions.java, +		int sourceArgCount = 0;, +				if ((filename.endsWith(".groovy") || filename.endsWith(".java"))) {, +					if (urls.isEmpty()) {, +					else {, +						sourceArgCount++;, +					}, +				}, +				sourceArgCount, nonOptionArguments.size()));]