[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +	 * Redis-specific cache properties., +		 * Entry expiration in milliseconds. By default the entries never expire., +		private long timeToLive = 0;, +		 * Allow caching null values., +		 * Key prefix., +		public long getTimeToLive() {, +			return this.timeToLive;, +		public void setTimeToLive(long timeToLive) {, +			this.timeToLive = timeToLive;, +		public void setCacheNullValues(boolean cacheNullValues) {, +		public void setKeyPrefix(String keyPrefix) {, +		public void setUseKeyPrefix(boolean useKeyPrefix) {, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +	 * Redis-specific cache properties., +		 * Entry expiration in milliseconds. By default the entries never expire., +		private long timeToLive = 0;, +		 * Allow caching null values., +		 * Key prefix., +		public long getTimeToLive() {, +			return this.timeToLive;, +		public void setTimeToLive(long timeToLive) {, +			this.timeToLive = timeToLive;, +		public void setCacheNullValues(boolean cacheNullValues) {, +		public void setKeyPrefix(String keyPrefix) {, +		public void setUseKeyPrefix(boolean useKeyPrefix) {, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration.java, +import java.time.Duration;, +				.defaultCacheConfig();, +		config = config.entryTtl(Duration.ofMillis(redisProperties.getTimeToLive()));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +	 * Redis-specific cache properties., +		 * Entry expiration in milliseconds. By default the entries never expire., +		private long timeToLive = 0;, +		 * Allow caching null values., +		 * Key prefix., +		public long getTimeToLive() {, +			return this.timeToLive;, +		public void setTimeToLive(long timeToLive) {, +			this.timeToLive = timeToLive;, +		public void setCacheNullValues(boolean cacheNullValues) {, +		public void setKeyPrefix(String keyPrefix) {, +		public void setUseKeyPrefix(boolean useKeyPrefix) {, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration.java, +import java.time.Duration;, +				.defaultCacheConfig();, +		config = config.entryTtl(Duration.ofMillis(redisProperties.getTimeToLive()));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +						"spring.cache.redis.time-to-live=15000",, +						"spring.cache.redis.cacheNullValues=false",, +						"spring.cache.redis.useKeyPrefix=false"), +							.isEqualTo(java.time.Duration.ofSeconds(15));, +					assertThat(redisCacheConfiguration.getKeyPrefix()).contains("foo");, +					assertThat(redisCacheConfiguration.usePrefix()).isFalse();, +					assertThat(redisCacheConfiguration.getKeyPrefix()).isEmpty();, +					assertThat(redisCacheConfiguration.usePrefix()).isTrue();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +	 * Redis-specific cache properties., +		 * Entry expiration in milliseconds. By default the entries never expire., +		private long timeToLive = 0;, +		 * Allow caching null values., +		 * Key prefix., +		public long getTimeToLive() {, +			return this.timeToLive;, +		public void setTimeToLive(long timeToLive) {, +			this.timeToLive = timeToLive;, +		public void setCacheNullValues(boolean cacheNullValues) {, +		public void setKeyPrefix(String keyPrefix) {, +		public void setUseKeyPrefix(boolean useKeyPrefix) {, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration.java, +import java.time.Duration;, +				.defaultCacheConfig();, +		config = config.entryTtl(Duration.ofMillis(redisProperties.getTimeToLive()));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +						"spring.cache.redis.time-to-live=15000",, +						"spring.cache.redis.cacheNullValues=false",, +						"spring.cache.redis.useKeyPrefix=false"), +							.isEqualTo(java.time.Duration.ofSeconds(15));, +					assertThat(redisCacheConfiguration.getKeyPrefix()).contains("foo");, +					assertThat(redisCacheConfiguration.usePrefix()).isFalse();, +					assertThat(redisCacheConfiguration.getKeyPrefix()).isEmpty();, +					assertThat(redisCacheConfiguration.usePrefix()).isTrue();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.cache.redis.cache-null-values=true # Allow caching null values., +	spring.cache.redis.key-prefix= # Key prefix., +	spring.cache.redis.time-to-live=0 # Entry expiration in milliseconds. By default the entries never expire., +	spring.cache.redis.use-key-prefix=true # Whether to use the key prefix when writing to Redis., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +	 * Redis-specific cache properties., +		 * Entry expiration in milliseconds. By default the entries never expire., +		private long timeToLive = 0;, +		 * Allow caching null values., +		 * Key prefix., +		public long getTimeToLive() {, +			return this.timeToLive;, +		public void setTimeToLive(long timeToLive) {]