[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public AutoConfigurationReportEndpoint autoConfigurationReportEndpoint() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public AutoConfigurationReportEndpoint autoConfigurationReportEndpoint() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create, +	 * the underlying {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public AutoConfigurationReportEndpoint autoConfigurationReportEndpoint() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create, +	 * the underlying {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FileSystemWatcher.java, +	 * Add source folders to monitor. Cannot be called after the watcher has been, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public AutoConfigurationReportEndpoint autoConfigurationReportEndpoint() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create, +	 * the underlying {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FileSystemWatcher.java, +	 * Add source folders to monitor. Cannot be called after the watcher has been, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FolderSnapshot.java, +		return this.folder + " snapshot at " + this.time;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public AutoConfigurationReportEndpoint autoConfigurationReportEndpoint() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create, +	 * the underlying {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FileSystemWatcher.java, +	 * Add source folders to monitor. Cannot be called after the watcher has been, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FolderSnapshot.java, +		return this.folder + " snapshot at " + this.time;, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/Restarter.java, +	 * @param failureHandler a failure handler to deal with application that doesn't start, +	 * @param failureHandler a failure handler for application that won't start, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public AutoConfigurationReportEndpoint autoConfigurationReportEndpoint() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create, +	 * the underlying {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FileSystemWatcher.java, +	 * Add source folders to monitor. Cannot be called after the watcher has been, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FolderSnapshot.java, +		return this.folder + " snapshot at " + this.time;, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/Restarter.java, +	 * @param failureHandler a failure handler to deal with application that doesn't start, +	 * @param failureHandler a failure handler for application that won't start, +++ b/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiOutput.java, +	 * Sets if the System.console() is known to be available.]