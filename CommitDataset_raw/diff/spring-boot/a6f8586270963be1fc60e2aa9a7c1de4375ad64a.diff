[+++ b/.travis.yml, +jdk:, +  - oraclejdk8, +services:, +  - mongodb, +  - redis, +++ b/.travis.yml, +jdk:, +  - oraclejdk8, +services:, +  - mongodb, +  - redis, +++ b/CONTRIBUTING.adoc, +given the ability to merge pull requests. Use '`Phillip Webb`' or '`Dave Syer`' in the, +  the '`Importing into eclipse`' instructions below you should get project specific, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.0.6 or above and JDK 1.8., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m`, +`-Xmx512m`. We generate more artifacts when running the full build, +++ b/.travis.yml, +jdk:, +  - oraclejdk8, +services:, +  - mongodb, +  - redis, +++ b/CONTRIBUTING.adoc, +given the ability to merge pull requests. Use '`Phillip Webb`' or '`Dave Syer`' in the, +  the '`Importing into eclipse`' instructions below you should get project specific, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.0.6 or above and JDK 1.8., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m`, +`-Xmx512m`. We generate more artifacts when running the full build, +++ b/README.adoc, +v3.0.5 or above. You also need JDK 1.8 (although Boot applications can run on Java 1.6)., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m`. Remember, +=== Building reference documentation, +, +The reference documentation requires the documentation of the maven plugin to be, +available so you need to build that first since it's not generated by default., +, +[indent=0], +----, +	$ mvn clean install -pl spring-boot-tools/spring-boot-maven-plugin -Pdefault,full, +----, +, +Once this is done, you can build the reference documentation with the command below:, +, +[indent=0], +----, +	$ mvn clean install -pl spring-boot-docs -Pdefault,full, +----, +, +TIP: The generated documentation is available from `spring-boot-docs/target/contents/reference`, +++ b/.travis.yml, +jdk:, +  - oraclejdk8, +services:, +  - mongodb, +  - redis, +++ b/CONTRIBUTING.adoc, +given the ability to merge pull requests. Use '`Phillip Webb`' or '`Dave Syer`' in the, +  the '`Importing into eclipse`' instructions below you should get project specific, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.0.6 or above and JDK 1.8., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m`, +`-Xmx512m`. We generate more artifacts when running the full build, +++ b/README.adoc, +v3.0.5 or above. You also need JDK 1.8 (although Boot applications can run on Java 1.6)., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m`. Remember, +=== Building reference documentation, +, +The reference documentation requires the documentation of the maven plugin to be, +available so you need to build that first since it's not generated by default., +, +[indent=0], +----, +	$ mvn clean install -pl spring-boot-tools/spring-boot-maven-plugin -Pdefault,full, +----, +, +Once this is done, you can build the reference documentation with the command below:, +, +[indent=0], +----, +	$ mvn clean install -pl spring-boot-docs -Pdefault,full, +----, +, +TIP: The generated documentation is available from `spring-boot-docs/target/contents/reference`, +++ b/pom.xml, +	<version>1.3.0.BUILD-SNAPSHOT</version>, +		<maven>3.2.1</maven>, +				<module>spring-boot-devtools</module>, +				<module>spring-boot-actuator-docs</module>, +++ b/.travis.yml, +jdk:, +  - oraclejdk8, +services:, +  - mongodb]