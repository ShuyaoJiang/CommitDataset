[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpoint.java, +			@RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ssZ") Date after,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpoint.java, +			@RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ssZ") Date after,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpointTests.java, +		this.mvc.perform(get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000")), +				.andExpect(status().isOk()), +		this.mvc.perform(get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000"), +				.header(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON_VALUE)), +				.andExpect(status().isOk()), +	@Test, +	public void invokeFilterWithoutDateAfterReturnBadRequestStatus() throws Exception {, +		this.mvc.perform(get("/application/auditevents")), +				.andExpect(status().isBadRequest());, +	}, +]