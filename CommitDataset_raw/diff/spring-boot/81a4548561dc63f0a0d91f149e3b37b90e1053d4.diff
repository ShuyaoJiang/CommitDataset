[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +			try {, +				// Ensure process isn't left running, +				this.server.stop();, +			}, +			catch (Exception e) {, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +			try {, +				// Ensure process isn't left running, +				this.server.stop();, +			}, +			catch (Exception e) {, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +, +		// Ensure process isn't left running if it actually failed to start, +		if (LifecycleState.FAILED.equals(this.tomcat.getConnector().getState())) {, +			try {, +				this.tomcat.stop();, +			}, +			catch (LifecycleException e) {, +			}, +			throw new IllegalStateException("Tomcat connector in failed state");, +		}, +				this.tomcat.destroy();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +			try {, +				// Ensure process isn't left running, +				this.server.stop();, +			}, +			catch (Exception e) {, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +, +		// Ensure process isn't left running if it actually failed to start, +		if (LifecycleState.FAILED.equals(this.tomcat.getConnector().getState())) {, +			try {, +				this.tomcat.stop();, +			}, +			catch (LifecycleException e) {, +			}, +			throw new IllegalStateException("Tomcat connector in failed state");, +		}, +				this.tomcat.destroy();, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +		LOG_LEVEL_LOGGERS.add(LogLevel.TRACE, "org.apache.catalina");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +			try {, +				// Ensure process isn't left running, +				this.server.stop();, +			}, +			catch (Exception e) {, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +, +		// Ensure process isn't left running if it actually failed to start, +		if (LifecycleState.FAILED.equals(this.tomcat.getConnector().getState())) {, +			try {, +				this.tomcat.stop();, +			}, +			catch (LifecycleException e) {, +			}, +			throw new IllegalStateException("Tomcat connector in failed state");, +		}, +				this.tomcat.destroy();, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +		LOG_LEVEL_LOGGERS.add(LogLevel.TRACE, "org.apache.catalina");, +++ b/spring-boot/src/main/resources/org/springframework/boot/logging/java/basic-logging.properties, +org.apache.catalina.util.LifecycleBase.level = SEVERE, +org.eclipse.jetty.util.component.AbstractLifeCycle.level = SEVERE, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +			try {, +				// Ensure process isn't left running, +				this.server.stop();, +			}, +			catch (Exception e) {, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +, +		// Ensure process isn't left running if it actually failed to start, +		if (LifecycleState.FAILED.equals(this.tomcat.getConnector().getState())) {, +			try {, +				this.tomcat.stop();, +			}, +			catch (LifecycleException e) {, +			}, +			throw new IllegalStateException("Tomcat connector in failed state");, +		}, +				this.tomcat.destroy();, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +		LOG_LEVEL_LOGGERS.add(LogLevel.TRACE, "org.apache.catalina");, +++ b/spring-boot/src/main/resources/org/springframework/boot/logging/java/basic-logging.properties, +org.apache.catalina.util.LifecycleBase.level = SEVERE, +org.eclipse.jetty.util.component.AbstractLifeCycle.level = SEVERE, +++ b/spring-boot/src/main/resources/org/springframework/boot/logging/java/logging.properties, +org.apache.catalina.util.LifecycleBase.level = SEVERE, +org.eclipse.jetty.util.component.AbstractLifeCycle.level = SEVERE, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +			try {]