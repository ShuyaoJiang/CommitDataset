[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			return environment.getProperty(configurationProperties.prefix() + ".path");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			return environment.getProperty(configurationProperties.prefix() + ".path");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +import org.springframework.core.annotation.AliasFor;, +, +	@AliasFor("prefix"), +	@AliasFor("value"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			return environment.getProperty(configurationProperties.prefix() + ".path");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +import org.springframework.core.annotation.AliasFor;, +, +	@AliasFor("prefix"), +	@AliasFor("value"), +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			if (StringUtils.hasLength(annotation.prefix())) {, +				factory.setTargetName(annotation.prefix());, +		details.append("prefix=").append(annotation.prefix());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			return environment.getProperty(configurationProperties.prefix() + ".path");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +import org.springframework.core.annotation.AliasFor;, +, +	@AliasFor("prefix"), +	@AliasFor("value"), +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			if (StringUtils.hasLength(annotation.prefix())) {, +				factory.setTargetName(annotation.prefix());, +		details.append("prefix=").append(annotation.prefix());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector.java, +				return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			return environment.getProperty(configurationProperties.prefix() + ".path");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +import org.springframework.core.annotation.AliasFor;, +, +	@AliasFor("prefix"), +	@AliasFor("value"), +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			if (StringUtils.hasLength(annotation.prefix())) {, +				factory.setTargetName(annotation.prefix());, +		details.append("prefix=").append(annotation.prefix());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector.java, +				return annotation.prefix();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/scan/AbstractEntityScanRegistrar.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			return environment.getProperty(configurationProperties.prefix() + ".path");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +import org.springframework.core.annotation.AliasFor;, +, +	@AliasFor("prefix"), +	@AliasFor("value"), +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			if (StringUtils.hasLength(annotation.prefix())) {, +				factory.setTargetName(annotation.prefix());, +		details.append("prefix=").append(annotation.prefix());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector.java, +				return annotation.prefix();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/scan/AbstractEntityScanRegistrar.java, +++ b/spring-boot/src/main/java/org/springframework/boot/neo4j/NodeEntityScan.java, +import org.springframework.core.annotation.AliasFor;, +	@AliasFor("basePackages"), +	@AliasFor("value"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +		return annotation.prefix();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			return environment.getProperty(configurationProperties.prefix() + ".path");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +import org.springframework.core.annotation.AliasFor;, +, +	@AliasFor("prefix"), +	@AliasFor("value"), +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			if (StringUtils.hasLength(annotation.prefix())) {, +				factory.setTargetName(annotation.prefix());, +		details.append("prefix=").append(annotation.prefix());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector.java, +				return annotation.prefix();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/scan/AbstractEntityScanRegistrar.java, +++ b/spring-boot/src/main/java/org/springframework/boot/neo4j/NodeEntityScan.java, +import org.springframework.core.annotation.AliasFor;, +	@AliasFor("basePackages"), +	@AliasFor("value"), +++ b/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityScan.java]