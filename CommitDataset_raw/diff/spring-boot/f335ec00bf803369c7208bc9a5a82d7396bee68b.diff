[+++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationAdvancedConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationAdvancedConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationAdvancedConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/JavaPluginAction.java, +				findMatchingSourceSet(compile).ifPresent(, +						(sourceSet) -> configureAdditionalMetadataLocations(compile,, +								sourceSet));, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationAdvancedConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/JavaPluginAction.java, +				findMatchingSourceSet(compile).ifPresent(, +						(sourceSet) -> configureAdditionalMetadataLocations(compile,, +								sourceSet));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +		List<Archive> lib = new ArrayList<>();, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationAdvancedConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/JavaPluginAction.java, +				findMatchingSourceSet(compile).ifPresent(, +						(sourceSet) -> configureAdditionalMetadataLocations(compile,, +								sourceSet));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +		List<Archive> lib = new ArrayList<>();, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/Verify.java, +					.filter((entry) -> entry.getKey().startsWith(entryName)), +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationAdvancedConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/restdocs/RestAssuredRestDocsAutoConfigurationIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +import static org.springframework.restdocs.operation.preprocess.Preprocessors.modifyUris;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/JavaPluginAction.java, +				findMatchingSourceSet(compile).ifPresent(, +						(sourceSet) -> configureAdditionalMetadataLocations(compile,, +								sourceSet));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +		List<Archive> lib = new ArrayList<>();, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/Verify.java, +					.filter((entry) -> entry.getKey().startsWith(entryName)), +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/support/ErrorPageFilterTests.java, +		this.chain = new TestFilterChain((request, response,, +				chain) -> assertThat(response.getStatus()).isEqualTo(200));]