[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ShutdownEndpointTests.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextClosedEvent;, +		CountDownLatch latch = this.context.getBean(Config.class).latch;, +		assertTrue(latch.await(10, TimeUnit.SECONDS));, +		private CountDownLatch latch = new CountDownLatch(1);, +, +		@Bean, +		public ApplicationListener<ContextClosedEvent> listener() {, +			return new ApplicationListener<ContextClosedEvent>() {, +				@Override, +				public void onApplicationEvent(ContextClosedEvent event) {, +					Config.this.latch.countDown();, +				}, +			};, +, +		}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ShutdownEndpointTests.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextClosedEvent;, +		CountDownLatch latch = this.context.getBean(Config.class).latch;, +		assertTrue(latch.await(10, TimeUnit.SECONDS));, +		private CountDownLatch latch = new CountDownLatch(1);, +, +		@Bean, +		public ApplicationListener<ContextClosedEvent> listener() {, +			return new ApplicationListener<ContextClosedEvent>() {, +				@Override, +				public void onApplicationEvent(ContextClosedEvent event) {, +					Config.this.latch.countDown();, +				}, +			};, +, +		}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ShutdownParentEndpointTests.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextClosedEvent;, +		CountDownLatch latch = this.context.getBean(Config.class).latch;, +		assertTrue(latch.await(10, TimeUnit.SECONDS));, +		CountDownLatch latch = this.context.getBean(Config.class).latch;, +		assertTrue(latch.await(10, TimeUnit.SECONDS));, +		private CountDownLatch latch = new CountDownLatch(1);, +, +		@Bean, +		public ApplicationListener<ContextClosedEvent> listener() {, +			return new ApplicationListener<ContextClosedEvent>() {, +				@Override, +				public void onApplicationEvent(ContextClosedEvent event) {, +					Config.this.latch.countDown();, +				}, +			};, +, +		}]