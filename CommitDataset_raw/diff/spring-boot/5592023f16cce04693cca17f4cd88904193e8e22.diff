[+++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +	ext {, +		springBootVersion = '0.5.0.BUILD-SNAPSHOT', +	}, +        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"), +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +	ext {, +		springBootVersion = '0.5.0.BUILD-SNAPSHOT', +	}, +        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"), +++ b/spring-boot-samples/spring-boot-sample-simple/build.gradle, +	ext {, +		springBootVersion = '0.5.0.BUILD-SNAPSHOT', +	}, +        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"), +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +	ext {, +		springBootVersion = '0.5.0.BUILD-SNAPSHOT', +	}, +        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"), +++ b/spring-boot-samples/spring-boot-sample-simple/build.gradle, +	ext {, +		springBootVersion = '0.5.0.BUILD-SNAPSHOT', +	}, +        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/SpringBootPlugin.java, +import org.gradle.api.plugins.ApplicationPlugin;, +import org.springframework.boot.gradle.task.RunApp;, + * @author Dave Syer, +	private static final String RUN_APP_TASK_NAME = "bootRun";, +		project.getPlugins().apply(ApplicationPlugin.class);, +		addRunAppTask(project);, +	private void addRunAppTask(Project project) {, +		RunApp runJarTask = project.getTasks().create(RUN_APP_TASK_NAME, RunApp.class);, +		runJarTask.setDescription("Run the project with support for auto-detecting main class and reloading static resources");, +		runJarTask.dependsOn("assemble");, +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +	ext {, +		springBootVersion = '0.5.0.BUILD-SNAPSHOT', +	}, +        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"), +++ b/spring-boot-samples/spring-boot-sample-simple/build.gradle, +	ext {, +		springBootVersion = '0.5.0.BUILD-SNAPSHOT', +	}, +        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/SpringBootPlugin.java, +import org.gradle.api.plugins.ApplicationPlugin;, +import org.springframework.boot.gradle.task.RunApp;, + * @author Dave Syer, +	private static final String RUN_APP_TASK_NAME = "bootRun";, +		project.getPlugins().apply(ApplicationPlugin.class);, +		addRunAppTask(project);, +	private void addRunAppTask(Project project) {, +		RunApp runJarTask = project.getTasks().create(RUN_APP_TASK_NAME, RunApp.class);, +		runJarTask.setDescription("Run the project with support for auto-detecting main class and reloading static resources");, +		runJarTask.dependsOn("assemble");, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/task/RunApp.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.gradle.task;, +, +import java.io.File;, +import java.io.IOException;, +import java.util.ArrayList;, +import java.util.LinkedHashSet;, +import java.util.Set;, +import java.util.concurrent.Callable;, +, +import org.gradle.api.Action;, +import org.gradle.api.DefaultTask;, +import org.gradle.api.Project;, +import org.gradle.api.file.SourceDirectorySet;, +import org.gradle.api.internal.file.collections.SimpleFileCollection;, +import org.gradle.api.plugins.JavaPluginConvention;, +import org.gradle.api.tasks.JavaExec;, +import org.gradle.api.tasks.SourceSet;, +import org.gradle.api.tasks.TaskAction;, +import org.springframework.boot.loader.tools.MainClassFinder;, +, +/**, + * Run the project from Gradle., + * , + * @author Dave Syer, + */, +public class RunApp extends DefaultTask {]