[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-joda</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-joda</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import org.joda.time.DateTime;, +import com.fasterxml.jackson.datatype.joda.JodaModule;, +	@ConditionalOnClass({ JodaModule.class, DateTime.class }), +	protected static class JodaModuleConfiguration {, +, +		@Bean, +		public JodaModule jodaModule() {, +			return new JodaModule();, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-joda</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import org.joda.time.DateTime;, +import com.fasterxml.jackson.datatype.joda.JodaModule;, +	@ConditionalOnClass({ JodaModule.class, DateTime.class }), +	protected static class JodaModuleConfiguration {, +, +		@Bean, +		public JodaModule jodaModule() {, +			return new JodaModule();, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfigurationTests.java, +import static org.junit.Assert.assertNotNull;, +	public void defaultJacksonModules() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(HttpMessageConvertersAutoConfiguration.class);, +		this.context.refresh();, +		assertNotNull(this.context.getBean("jodaModule", Module.class));, +	}, +, +	@Test, +				(Iterable<Module>) argThat(hasItem(this.context.getBean("jacksonModule",, +						Module.class))));]