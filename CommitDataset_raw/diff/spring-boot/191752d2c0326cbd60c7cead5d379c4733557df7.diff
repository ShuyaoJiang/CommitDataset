[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +	 * Additional properties, common to producers and consumers, used to configure the, +	 * client., +		/**, +		 * Additional properties used to configure the client., +		 */, +		private Map<String, String> properties = new HashMap<>();, +, +		public Map<String, String> getProperties() {, +			return this.properties;, +		}, +, +		public void setProperties(Map<String, String> properties) {, +			this.properties = properties;, +		}, +, +			properties.putAll(this.properties);, +		/**, +		 * Additional properties used to configure the client., +		 */, +		private Map<String, String> properties = new HashMap<>();, +, +		public Map<String, String> getProperties() {, +			return this.properties;, +		}, +, +		public void setProperties(Map<String, String> properties) {, +			this.properties = properties;, +		}, +, +			properties.putAll(this.properties);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +	 * Additional properties, common to producers and consumers, used to configure the, +	 * client., +		/**, +		 * Additional properties used to configure the client., +		 */, +		private Map<String, String> properties = new HashMap<>();, +, +		public Map<String, String> getProperties() {, +			return this.properties;, +		}, +, +		public void setProperties(Map<String, String> properties) {, +			this.properties = properties;, +		}, +, +			properties.putAll(this.properties);, +		/**, +		 * Additional properties used to configure the client., +		 */, +		private Map<String, String> properties = new HashMap<>();, +, +		public Map<String, String> getProperties() {, +			return this.properties;, +		}, +, +		public void setProperties(Map<String, String> properties) {, +			this.properties = properties;, +		}, +, +			properties.putAll(this.properties);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfigurationTests.java, +				"spring.kafka.consumer.properties.fiz.buz=fix.fox",, +		Map<String, Object> configs = consumerFactory.getConfigurationProperties();, +		assertThat(configs.get("fiz.buz")).isEqualTo("fix.fox");, +		load("spring.kafka.clientId=cid",, +				"spring.kafka.properties.foo.bar.baz=qux.fiz.buz",, +				"spring.kafka.producer.acks=all",, +				"spring.kafka.producer.properties.fiz.buz=fix.fox",, +		Map<String, Object> configs = producerFactory.getConfigurationProperties();, +		assertThat(configs.get("foo.bar.baz")).isEqualTo("qux.fiz.buz");, +		assertThat(configs.get("fiz.buz")).isEqualTo("fix.fox");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +	 * Additional properties, common to producers and consumers, used to configure the, +	 * client., +		/**, +		 * Additional properties used to configure the client., +		 */, +		private Map<String, String> properties = new HashMap<>();, +, +		public Map<String, String> getProperties() {, +			return this.properties;, +		}, +, +		public void setProperties(Map<String, String> properties) {, +			this.properties = properties;, +		}, +, +			properties.putAll(this.properties);, +		/**, +		 * Additional properties used to configure the client., +		 */, +		private Map<String, String> properties = new HashMap<>();, +, +		public Map<String, String> getProperties() {, +			return this.properties;, +		}, +, +		public void setProperties(Map<String, String> properties) {]