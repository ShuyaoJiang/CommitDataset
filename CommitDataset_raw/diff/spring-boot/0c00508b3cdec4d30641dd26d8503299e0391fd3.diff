[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import org.springframework.boot.convert.ApplicationConversionService;, +	private boolean addConversionService = true;, +, +		if (this.addConversionService) {, +			environment.setConversionService(, +					ApplicationConversionService.getSharedInstance());, +		}, +		if (this.addConversionService) {, +			context.getBeanFactory().setConversionService(, +					ApplicationConversionService.getSharedInstance());, +		}, +	 * Sets if the {@link ApplicationConversionService} should be added to the application, +	 * context's {@link Environment}., +	 * @param addConversionService if the application conversion service should be added, +	 * @since 2.1.0, +	 */, +	public void setAddConversionService(boolean addConversionService) {, +		this.addConversionService = addConversionService;, +	}, +, +	/**, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import org.springframework.boot.convert.ApplicationConversionService;, +	private boolean addConversionService = true;, +, +		if (this.addConversionService) {, +			environment.setConversionService(, +					ApplicationConversionService.getSharedInstance());, +		}, +		if (this.addConversionService) {, +			context.getBeanFactory().setConversionService(, +					ApplicationConversionService.getSharedInstance());, +		}, +	 * Sets if the {@link ApplicationConversionService} should be added to the application, +	 * context's {@link Environment}., +	 * @param addConversionService if the application conversion service should be added, +	 * @since 2.1.0, +	 */, +	public void setAddConversionService(boolean addConversionService) {, +		this.addConversionService = addConversionService;, +	}, +, +	/**, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java, +import org.springframework.boot.convert.ApplicationConversionService;, +import org.springframework.core.env.Environment;, +	 * Flag to indicate if the {@link ApplicationConversionService} should be added to the, +	 * application context's {@link Environment}., +	 * @param addConversionService if the conversion service should be added., +	 * @return the current builder, +	 * @since 2.1.0, +	 */, +	public SpringApplicationBuilder setAddConversionService(, +			boolean addConversionService) {, +		this.application.setAddConversionService(addConversionService);, +		return this;, +	}, +, +	/**, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import org.springframework.boot.convert.ApplicationConversionService;, +	private boolean addConversionService = true;, +, +		if (this.addConversionService) {, +			environment.setConversionService(, +					ApplicationConversionService.getSharedInstance());, +		}, +		if (this.addConversionService) {, +			context.getBeanFactory().setConversionService(, +					ApplicationConversionService.getSharedInstance());, +		}, +	 * Sets if the {@link ApplicationConversionService} should be added to the application, +	 * context's {@link Environment}., +	 * @param addConversionService if the application conversion service should be added, +	 * @since 2.1.0, +	 */, +	public void setAddConversionService(boolean addConversionService) {, +		this.addConversionService = addConversionService;, +	}, +, +	/**, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java, +import org.springframework.boot.convert.ApplicationConversionService;, +import org.springframework.core.env.Environment;, +	 * Flag to indicate if the {@link ApplicationConversionService} should be added to the, +	 * application context's {@link Environment}., +	 * @param addConversionService if the conversion service should be added., +	 * @return the current builder, +	 * @since 2.1.0, +	 */, +	public SpringApplicationBuilder setAddConversionService(, +			boolean addConversionService) {, +		this.application.setAddConversionService(addConversionService);, +		return this;, +	}, +, +	/**, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/ApplicationConversionService.java, +	public static ApplicationConversionService getSharedInstance() {]