[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/DependencyAutoConfigurationTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(DependencyAutoConfigurationTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 100;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/DependencyAutoConfigurationTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(DependencyAutoConfigurationTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 100;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GrabMetadataTransformation.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(GrabMetadataTransformation.ORDER), +	public static final int ORDER = Ordered.HIGHEST_PRECEDENCE;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/DependencyAutoConfigurationTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(DependencyAutoConfigurationTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 100;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GrabMetadataTransformation.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(GrabMetadataTransformation.ORDER), +	public static final int ORDER = Ordered.HIGHEST_PRECEDENCE;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyBeansTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(GroovyBeansTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 200;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/DependencyAutoConfigurationTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(DependencyAutoConfigurationTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 100;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GrabMetadataTransformation.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(GrabMetadataTransformation.ORDER), +	public static final int ORDER = Ordered.HIGHEST_PRECEDENCE;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyBeansTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(GroovyBeansTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 200;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyCompiler.java, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +		for (ASTTransformation transformation : ServiceLoader, +				.load(SpringBootAstTransformation.class)) {, +			this.transformations.add(transformation);, +		}, +		Collections.sort(this.transformations, AnnotationAwareOrderComparator.INSTANCE);, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/DependencyAutoConfigurationTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(DependencyAutoConfigurationTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 100;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GrabMetadataTransformation.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(GrabMetadataTransformation.ORDER), +	public static final int ORDER = Ordered.HIGHEST_PRECEDENCE;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyBeansTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(GroovyBeansTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 200;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyCompiler.java, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +		for (ASTTransformation transformation : ServiceLoader, +				.load(SpringBootAstTransformation.class)) {, +			this.transformations.add(transformation);, +		}, +		Collections.sort(this.transformations, AnnotationAwareOrderComparator.INSTANCE);, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/ResolveDependencyCoordinatesTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(ResolveDependencyCoordinatesTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 300;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/DependencyAutoConfigurationTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(DependencyAutoConfigurationTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 100;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GrabMetadataTransformation.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(GrabMetadataTransformation.ORDER), +	public static final int ORDER = Ordered.HIGHEST_PRECEDENCE;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyBeansTransformation.java, +import org.springframework.core.annotation.Order;, +@Order(GroovyBeansTransformation.ORDER), +	public static final int ORDER = GrabMetadataTransformation.ORDER + 200;, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyCompiler.java]