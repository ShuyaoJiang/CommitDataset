[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailProperties.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailProperties.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailSenderAutoConfiguration.java, +, +		 * Condition to trigger the creation of a {@link JavaMailSenderImpl}. This kicks, +		 * in if either the host or jndi name property is set., +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailProperties.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailSenderAutoConfiguration.java, +, +		 * Condition to trigger the creation of a {@link JavaMailSenderImpl}. This kicks, +		 * in if either the host or jndi name property is set., +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mail/MailSenderAutoConfigurationTests.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailProperties.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailSenderAutoConfiguration.java, +, +		 * Condition to trigger the creation of a {@link JavaMailSenderImpl}. This kicks, +		 * in if either the host or jndi name property is set., +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mail/MailSenderAutoConfigurationTests.java, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfigurationTests.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.security.oauth2;, +, +import java.net.URI;, +import java.util.Arrays;, +import java.util.List;, +, +import org.junit.Test;, +import org.springframework.aop.support.AopUtils;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration;, +import org.springframework.boot.autoconfigure.security.oauth2.authserver.OAuth2AuthorizationServerConfiguration;, +import org.springframework.boot.autoconfigure.security.oauth2.method.OAuth2MethodSecurityConfiguration;, +import org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerConfiguration;, +import org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties;, +import org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration;, +import org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration;, +import org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration;, +import org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration;, +import org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext;, +import org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;, +import org.springframework.boot.test.EnvironmentTestUtils;, +import org.springframework.boot.test.TestRestTemplate;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.context.annotation.Import;, +import org.springframework.http.HttpEntity;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.HttpStatus;, +import org.springframework.http.RequestEntity;, +import org.springframework.http.ResponseEntity;, +import org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource;, +import org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource;, +import org.springframework.security.access.expression.method.MethodSecurityExpressionHandler;, +import org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource;, +import org.springframework.security.access.method.MethodSecurityMetadataSource;, +import org.springframework.security.access.prepost.PreAuthorize;, +import org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource;, +import org.springframework.security.authentication.AuthenticationManager;, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, +import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;, +import org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration;, +import org.springframework.security.config.annotation.web.builders.HttpSecurity;, +import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;, +import org.springframework.security.core.authority.AuthorityUtils;, +import org.springframework.security.crypto.codec.Base64;, +import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;, +import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;, +import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;, +import org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;, +import org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;, +import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;, +import org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer;, +import org.springframework.security.oauth2.provider.ClientDetails;, +import org.springframework.security.oauth2.provider.ClientDetailsService;, +import org.springframework.security.oauth2.provider.approval.ApprovalStore;]