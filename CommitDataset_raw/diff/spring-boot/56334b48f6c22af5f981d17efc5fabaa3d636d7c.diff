[+++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +				registerShutdownHook(new Thread(shutdownHandler));, +	void registerShutdownHook(Thread shutdownHook) {, +		Runtime.getRuntime().addShutdownHook(shutdownHook);, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +				registerShutdownHook(new Thread(shutdownHandler));, +	void registerShutdownHook(Thread shutdownHook) {, +		Runtime.getRuntime().addShutdownHook(shutdownHook);, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/LoggingApplicationListenerTests.java, +import java.util.concurrent.CountDownLatch;, +import java.util.concurrent.TimeUnit;, +import static org.hamcrest.Matchers.nullValue;, +		TestLoggingApplicationListener listener = new TestLoggingApplicationListener();, +				TestShutdownHandlerLoggingSystem.class.getName());, +		listener.onApplicationEvent(, +		listener.initialize(this.context.getEnvironment(), this.context.getClassLoader());, +		assertThat(listener.shutdownHook, is(nullValue()));, +		TestLoggingApplicationListener listener = new TestLoggingApplicationListener();, +				TestShutdownHandlerLoggingSystem.class.getName());, +		listener.onApplicationEvent(, +		listener.initialize(this.context.getEnvironment(), this.context.getClassLoader());, +		assertThat(listener.shutdownHook, is(not(nullValue())));, +		listener.shutdownHook.start();, +		assertThat(TestShutdownHandlerLoggingSystem.shutdownLatch.await(30,, +				TimeUnit.SECONDS), is(true));, +	public static class TestShutdownHandlerLoggingSystem extends AbstractLoggingSystem {, +		private static CountDownLatch shutdownLatch;, +		public TestShutdownHandlerLoggingSystem(ClassLoader classLoader) {, +			TestShutdownHandlerLoggingSystem.shutdownLatch = new CountDownLatch(1);, +			return new Runnable() {, +, +				@Override, +				public void run() {, +					TestShutdownHandlerLoggingSystem.shutdownLatch.countDown();, +				}, +, +			};, +		}, +, +	}, +, +	public static class TestLoggingApplicationListener, +			extends LoggingApplicationListener {, +, +		private Thread shutdownHook;, +, +		@Override, +		void registerShutdownHook(Thread shutdownHook) {, +			this.shutdownHook = shutdownHook;]