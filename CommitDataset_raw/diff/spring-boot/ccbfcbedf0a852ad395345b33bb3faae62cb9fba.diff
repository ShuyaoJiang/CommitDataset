[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration.java, +import org.jooq.RecordUnmapperProvider;, +		private final RecordUnmapperProvider recordUnmapperProvider;, +, +				ObjectProvider<RecordUnmapperProvider> recordUnmapperProvider,, +			this.recordUnmapperProvider = recordUnmapperProvider.getIfAvailable();, +			if (this.recordUnmapperProvider != null) {, +				configuration.set(this.recordUnmapperProvider);, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration.java, +import org.jooq.RecordUnmapperProvider;, +		private final RecordUnmapperProvider recordUnmapperProvider;, +, +				ObjectProvider<RecordUnmapperProvider> recordUnmapperProvider,, +			this.recordUnmapperProvider = recordUnmapperProvider.getIfAvailable();, +			if (this.recordUnmapperProvider != null) {, +				configuration.set(this.recordUnmapperProvider);, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfigurationTests.java, +import org.jooq.RecordUnmapper;, +import org.jooq.RecordUnmapperProvider;, +				TestRecordUnmapperProvider.class, TestRecordListenerProvider.class,, +				TestExecuteListenerProvider.class, TestVisitListenerProvider.class, +		).run((context) -> {, +			assertThat(dsl.configuration().recordUnmapperProvider().getClass()), +					.isEqualTo(TestRecordUnmapperProvider.class);, +	protected static class TestRecordUnmapperProvider implements RecordUnmapperProvider {, +, +		@Override, +		public <E, R extends Record> RecordUnmapper<E, R> provide(, +				Class<? extends E> aClass, RecordType<R> recordType) {, +			return null;, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration.java, +import org.jooq.RecordUnmapperProvider;, +		private final RecordUnmapperProvider recordUnmapperProvider;, +, +				ObjectProvider<RecordUnmapperProvider> recordUnmapperProvider,, +			this.recordUnmapperProvider = recordUnmapperProvider.getIfAvailable();, +			if (this.recordUnmapperProvider != null) {, +				configuration.set(this.recordUnmapperProvider);, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfigurationTests.java, +import org.jooq.RecordUnmapper;, +import org.jooq.RecordUnmapperProvider;, +				TestRecordUnmapperProvider.class, TestRecordListenerProvider.class,, +				TestExecuteListenerProvider.class, TestVisitListenerProvider.class, +		).run((context) -> {, +			assertThat(dsl.configuration().recordUnmapperProvider().getClass()), +					.isEqualTo(TestRecordUnmapperProvider.class);, +	protected static class TestRecordUnmapperProvider implements RecordUnmapperProvider {, +, +		@Override, +		public <E, R extends Record> RecordUnmapper<E, R> provide(, +				Class<? extends E> aClass, RecordType<R> recordType) {, +			return null;, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +* `RecordUnmapperProvider`]