[+++ b/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/loader/tools/launch.script, +# shellcheck disable=SC2153, +cd "$(dirname "$0")" || exit, +  [[ "$jarfile" =~ init\.d ]] && init_script=$(basename "$jarfile"), +  cd "$(dirname "$jarfile")" || exit, +jarfolder="$(dirname "$jarfile")", +cd "$WORKING_DIR" || exit, +configfile="$(basename "${jarfile%.*}.conf")", +# shellcheck source=/dev/null, +[[ -r "${jarfolder}/${configfile}" ]] && source "${jarfolder}/${configfile}", +echoRed() { echo $'\e[0;31m'"$1"$'\e[0m'; }, +echoGreen() { echo $'\e[0;32m'"$1"$'\e[0m'; }, +echoYellow() { echo $'\e[0;33m'"$1"$'\e[0m'; }, +  ps -p "$1" &> /dev/null, +# shellcheck disable=SC2012, +elif type -p java > /dev/null 2>&1; then, +command="$javaexe -Dsun.misc.URLClassPath.disableJarChecking=true $JAVA_OPTS -jar $jarfile $RUN_ARGS $*", +    isRunning "$pid" && { echoYellow "Already running [$pid]"; return 0; }, +  do_start "$@", +    if [ "${useStartStopDaemon:-true}" = true ] && which start-stop-daemon >/dev/null; then, +        --chuid "$run_user" \, +        --name "$identity" \, +        --make-pidfile --pidfile "$pid_file" \, +        --startas "$javaexe" \, +        -Dsun.misc.URLClassPath.disableJarChecking=true "${JAVA_OPTS[@]}" \, +        -jar "$jarfile" "${RUN_ARGS[@]}" "$@" \, +        > "$log_file" 2>&1, +      await_file "$pid_file", +      su -s /bin/sh -c "$command > \"$log_file\" 2>&1 & echo \$!" "$run_user" > "$pid_file", +  isRunning "$pid" || { echoYellow "Not running (process ${pid}). Removing stale pid file."; rm -f "$pid_file"; return 0; }, +  do_stop "$pid" "$pid_file", +  kill "$1" &> /dev/null || { echoRed "Unable to kill process $1"; return 1; }, +  for _ in $(seq 1 60); do, +    isRunning "$1" || { echoGreen "Stopped [$1]"; rm -f "$2"; return 0; }, +  isRunning "$pid" || { echoRed "Not running (process ${pid} not found)"; return 7; }, +  do_stop "$pid" "$pid_file", +  [[ -f "$pid_file" ]] || { echoRed "Not running"; return 3; }, +  isRunning "$pid" || { echoRed "Not running (process ${pid} not found)"; return 1; }, +  pushd "$(dirname "$jarfile")" > /dev/null, +  $command, +  return "$result"]