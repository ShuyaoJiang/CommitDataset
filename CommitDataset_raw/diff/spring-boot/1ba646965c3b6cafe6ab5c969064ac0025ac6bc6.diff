[+++ b/ci/README.adoc, +To set the pipeline first create a file in this directory called `secrets.yml`:, +, +[source,yaml], +.secrets.yml, +----, +docker-hub-username: <user>, +docker-hub-password: <secret>, +github-username: <user>, +github-password: <secret>, +artifactory-username: <user>, +artifactory-password: <secret>, +----, +, +NOTE: The file should be ignored by git, make sure that you don't commit it!, +, +Once the file has been created, the pipeline can be deployed:, +$ fly -t spring set-pipeline -p spring-boot -c ci/pipeline.yml -l ci/parameters.yml -l ci/secrets.yml, +++ b/ci/README.adoc, +To set the pipeline first create a file in this directory called `secrets.yml`:, +, +[source,yaml], +.secrets.yml, +----, +docker-hub-username: <user>, +docker-hub-password: <secret>, +github-username: <user>, +github-password: <secret>, +artifactory-username: <user>, +artifactory-password: <secret>, +----, +, +NOTE: The file should be ignored by git, make sure that you don't commit it!, +, +Once the file has been created, the pipeline can be deployed:, +$ fly -t spring set-pipeline -p spring-boot -c ci/pipeline.yml -l ci/parameters.yml -l ci/secrets.yml, +++ b/ci/pipeline.yml, +++ b/ci/README.adoc, +To set the pipeline first create a file in this directory called `secrets.yml`:, +, +[source,yaml], +.secrets.yml, +----, +docker-hub-username: <user>, +docker-hub-password: <secret>, +github-username: <user>, +github-password: <secret>, +artifactory-username: <user>, +artifactory-password: <secret>, +----, +, +NOTE: The file should be ignored by git, make sure that you don't commit it!, +, +Once the file has been created, the pipeline can be deployed:, +$ fly -t spring set-pipeline -p spring-boot -c ci/pipeline.yml -l ci/parameters.yml -l ci/secrets.yml, +++ b/ci/pipeline.yml, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/EnvironmentInfoContributorTests.java, +				Type.SYSTEM);, +++ b/ci/README.adoc, +To set the pipeline first create a file in this directory called `secrets.yml`:, +, +[source,yaml], +.secrets.yml, +----, +docker-hub-username: <user>, +docker-hub-password: <secret>, +github-username: <user>, +github-password: <secret>, +artifactory-username: <user>, +artifactory-password: <secret>, +----, +, +NOTE: The file should be ignored by git, make sure that you don't commit it!, +, +Once the file has been created, the pipeline can be deployed:, +$ fly -t spring set-pipeline -p spring-boot -c ci/pipeline.yml -l ci/parameters.yml -l ci/secrets.yml, +++ b/ci/pipeline.yml, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/EnvironmentInfoContributorTests.java, +				Type.SYSTEM);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +import java.time.Duration;, + * @author Ryon Day, +	private final Redis redis = new Redis();, +, +	public Redis getRedis() {, +		return this.redis;, +	}, +, +	/**, +	 * Redis-specific cache properties. Properties set will be used as the defaults for, +	 * all Redis caches., +	 */, +	public static class Redis {, +, +		/**, +		 * Specifies the TTL (ultimately converted to seconds) for keys written to Redis., +		 * By default, entries do not expire, and a value of {@link Duration#ZERO} disables the TTL., +		 */, +		private Duration ttl = Duration.ZERO;, +]