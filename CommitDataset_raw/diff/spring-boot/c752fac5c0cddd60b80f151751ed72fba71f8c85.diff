[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, + * @author Stephane Nicoll, +		registration.setLoadOnStartup(this.jersey.getServlet().getLoadOnStartup());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, + * @author Stephane Nicoll, +		registration.setLoadOnStartup(this.jersey.getServlet().getLoadOnStartup());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyProperties.java, + * Copyright 2012-2016 the original author or authors., + * @author Stephane Nicoll, +	private final Filter filter = new Filter();, +, +	private final Servlet servlet = new Servlet();, +	public Servlet getServlet() {, +		return this.servlet;, +	public static class Servlet {, +, +		/**, +		 * Load on startup priority of the Jersey servlet., +		 */, +		private int loadOnStartup = -1;, +, +		public int getLoadOnStartup() {, +			return this.loadOnStartup;, +		}, +, +		public void setLoadOnStartup(int loadOnStartup) {, +			this.loadOnStartup = loadOnStartup;, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, + * @author Stephane Nicoll, +		registration.setLoadOnStartup(this.jersey.getServlet().getLoadOnStartup());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyProperties.java, + * Copyright 2012-2016 the original author or authors., + * @author Stephane Nicoll, +	private final Filter filter = new Filter();, +, +	private final Servlet servlet = new Servlet();, +	public Servlet getServlet() {, +		return this.servlet;, +	public static class Servlet {, +, +		/**, +		 * Load on startup priority of the Jersey servlet., +		 */, +		private int loadOnStartup = -1;, +, +		public int getLoadOnStartup() {, +			return this.loadOnStartup;, +		}, +, +		public void setLoadOnStartup(int loadOnStartup) {, +			this.loadOnStartup = loadOnStartup;, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationCustomLoadOnStartupTests.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jersey;, +, +import java.lang.annotation.Documented;, +import java.lang.annotation.ElementType;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +, +import org.glassfish.jersey.server.ResourceConfig;, +import org.junit.Test;, +import org.junit.runner.RunWith;, +, +import org.springframework.beans.DirectFieldAccessor;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration;, +import org.springframework.boot.autoconfigure.jersey.JerseyAutoConfigurationCustomLoadOnStartupTests.Application;, +import org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration;, +import org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration;, +import org.springframework.boot.test.context.SpringApplicationConfiguration;, +import org.springframework.boot.test.context.web.WebIntegrationTest;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.annotation.Import;, +import org.springframework.test.annotation.DirtiesContext;, +import org.springframework.test.context.junit4.SpringRunner;]