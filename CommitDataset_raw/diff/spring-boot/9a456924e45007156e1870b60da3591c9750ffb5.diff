[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +					this.mvcProperties.getPathmatch().isUseSuffixPattern());, +					this.mvcProperties.getPathmatch().isUseRegisteredSuffixPattern());, +			WebMvcProperties.Contentnegotiation contentnegotiation = this.mvcProperties, +					.getContentnegotiation();, +			configurer.favorPathExtension(contentnegotiation.isFavorPathExtension());, +			configurer.favorParameter(contentnegotiation.isFavorParameter());, +			if (contentnegotiation.getParameterName() != null) {, +				configurer.parameterName(contentnegotiation.getParameterName());, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentnegotiation(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +					this.mvcProperties.getPathmatch().isUseSuffixPattern());, +					this.mvcProperties.getPathmatch().isUseRegisteredSuffixPattern());, +			WebMvcProperties.Contentnegotiation contentnegotiation = this.mvcProperties, +					.getContentnegotiation();, +			configurer.favorPathExtension(contentnegotiation.isFavorPathExtension());, +			configurer.favorParameter(contentnegotiation.isFavorParameter());, +			if (contentnegotiation.getParameterName() != null) {, +				configurer.parameterName(contentnegotiation.getParameterName());, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentnegotiation(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +	private final Contentnegotiation contentnegotiation = new Contentnegotiation();, +	private final Pathmatch pathmatch = new Pathmatch();, +	public Contentnegotiation getContentnegotiation() {, +		return this.contentnegotiation;, +	public Pathmatch getPathmatch() {, +		return this.pathmatch;, +	public static class Contentnegotiation {, +	public static class Pathmatch {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +					this.mvcProperties.getPathmatch().isUseSuffixPattern());, +					this.mvcProperties.getPathmatch().isUseRegisteredSuffixPattern());, +			WebMvcProperties.Contentnegotiation contentnegotiation = this.mvcProperties, +					.getContentnegotiation();, +			configurer.favorPathExtension(contentnegotiation.isFavorPathExtension());, +			configurer.favorParameter(contentnegotiation.isFavorParameter());, +			if (contentnegotiation.getParameterName() != null) {, +				configurer.parameterName(contentnegotiation.getParameterName());, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentnegotiation(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +	private final Contentnegotiation contentnegotiation = new Contentnegotiation();, +	private final Pathmatch pathmatch = new Pathmatch();, +	public Contentnegotiation getContentnegotiation() {, +		return this.contentnegotiation;, +	public Pathmatch getPathmatch() {, +		return this.pathmatch;, +	public static class Contentnegotiation {, +	public static class Pathmatch {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +        "replacement" : "spring.mvc.contentnegotiation.media-types",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +					this.mvcProperties.getPathmatch().isUseSuffixPattern());, +					this.mvcProperties.getPathmatch().isUseRegisteredSuffixPattern());, +			WebMvcProperties.Contentnegotiation contentnegotiation = this.mvcProperties, +					.getContentnegotiation();, +			configurer.favorPathExtension(contentnegotiation.isFavorPathExtension());, +			configurer.favorParameter(contentnegotiation.isFavorParameter());, +			if (contentnegotiation.getParameterName() != null) {, +				configurer.parameterName(contentnegotiation.getParameterName());, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentnegotiation(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +	private final Contentnegotiation contentnegotiation = new Contentnegotiation();, +	private final Pathmatch pathmatch = new Pathmatch();, +	public Contentnegotiation getContentnegotiation() {, +		return this.contentnegotiation;, +	public Pathmatch getPathmatch() {, +		return this.pathmatch;, +	public static class Contentnegotiation {, +	public static class Pathmatch {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +        "replacement" : "spring.mvc.contentnegotiation.media-types",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java, +						"spring.mvc.contentnegotiation.media-types.yaml:text/yaml",, +						"spring.mvc.contentnegotiation.favor-path-extension:true"), +				.withPropertyValues("spring.mvc.pathmatch.use-suffix-pattern:true",, +						"spring.mvc.pathmatch.use-registered-suffix-pattern:true"), +						"spring.mvc.contentnegotiation.favor-path-extension:true"), +				.withPropertyValues("spring.mvc.contentnegotiation.favor-parameter:true"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +					this.mvcProperties.getPathmatch().isUseSuffixPattern());, +					this.mvcProperties.getPathmatch().isUseRegisteredSuffixPattern());, +			WebMvcProperties.Contentnegotiation contentnegotiation = this.mvcProperties, +					.getContentnegotiation();, +			configurer.favorPathExtension(contentnegotiation.isFavorPathExtension());, +			configurer.favorParameter(contentnegotiation.isFavorParameter());, +			if (contentnegotiation.getParameterName() != null) {, +				configurer.parameterName(contentnegotiation.getParameterName());, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentnegotiation(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +	private final Contentnegotiation contentnegotiation = new Contentnegotiation();, +	private final Pathmatch pathmatch = new Pathmatch();, +	public Contentnegotiation getContentnegotiation() {, +		return this.contentnegotiation;, +	public Pathmatch getPathmatch() {, +		return this.pathmatch;, +	public static class Contentnegotiation {, +	public static class Pathmatch {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +        "replacement" : "spring.mvc.contentnegotiation.media-types",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java]