[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainerFactory.java, + * Copyright 2012-2014 the original author or authors., + * Implementations are encouraged to extend, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainerFactory.java, + * Copyright 2012-2014 the original author or authors., + * Implementations are encouraged to extend, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, + * Copyright 2012-2014 the original author or authors., +import org.eclipse.jetty.server.Handler;, +			for (Handler handler : this.server.getHandlers()) {, +				if (handler instanceof JettyEmbeddedWebAppContext) {, +					((JettyEmbeddedWebAppContext) handler).deferredInitialize();, +				}, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainerFactory.java, + * Copyright 2012-2014 the original author or authors., + * Implementations are encouraged to extend, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, + * Copyright 2012-2014 the original author or authors., +import org.eclipse.jetty.server.Handler;, +			for (Handler handler : this.server.getHandlers()) {, +				if (handler instanceof JettyEmbeddedWebAppContext) {, +					((JettyEmbeddedWebAppContext) handler).deferredInitialize();, +				}, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, + * Copyright 2012-2014 the original author or authors., +		JettyEmbeddedWebAppContext context = new JettyEmbeddedWebAppContext();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainerFactory.java, + * Copyright 2012-2014 the original author or authors., + * Implementations are encouraged to extend, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, + * Copyright 2012-2014 the original author or authors., +import org.eclipse.jetty.server.Handler;, +			for (Handler handler : this.server.getHandlers()) {, +				if (handler instanceof JettyEmbeddedWebAppContext) {, +					((JettyEmbeddedWebAppContext) handler).deferredInitialize();, +				}, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, + * Copyright 2012-2014 the original author or authors., +		JettyEmbeddedWebAppContext context = new JettyEmbeddedWebAppContext();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedWebAppContext.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.context.embedded.jetty;, +, +import org.eclipse.jetty.servlet.ServletHandler;, +import org.eclipse.jetty.webapp.WebAppContext;, +, +/**, + * Jetty {@link WebAppContext} used by {@link JettyEmbeddedServletContainer} to support, + * deferred initialization., + * , + * @author Phillip Webb, + */, +class JettyEmbeddedWebAppContext extends WebAppContext {, +, +	@Override, +	protected ServletHandler newServletHandler() {, +		return new JettyEmbeddedServletHandler();, +	}, +, +	public void deferredInitialize() throws Exception {, +		((JettyEmbeddedServletHandler) getServletHandler()).deferredInitialize();, +	}, +, +	private static class JettyEmbeddedServletHandler extends ServletHandler {, +, +		@Override, +		public void initialize() throws Exception {, +		}, +, +		public void deferredInitialize() throws Exception {, +			super.initialize();, +		}, +, +	}, +, +}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainerFactory.java, + * Copyright 2012-2014 the original author or authors., + * Implementations are encouraged to extend, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, + * Copyright 2012-2014 the original author or authors., +import org.eclipse.jetty.server.Handler;]