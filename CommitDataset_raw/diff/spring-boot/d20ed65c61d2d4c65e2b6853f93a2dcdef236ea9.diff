[+++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +	public class MyHealth implements HealthIndicator {, +		public Health health() {, +Besides implementing custom `HealthIndicator`s and using out-of-box {sc-spring-boot-actuator}/health/Status.{sc-ext}[`Status`], +types, it is also possible to introduce custom `Status` types for different or more complex system , +states. In that case a custom implementation of the {sc-spring-boot-actuator}/health/HealthAggregator.{sc-ext}[`HealthAggregator`], +interface needs to be provided or the default implementation has to be configured using the , +`health.status.order` configuration property. , +, +Assuming a new `Status` with code `FATAL` is being used in one of your `HealthIndicator` , +implementations. To configure the severity or order add the following to your application properties:, +`healt.status.order: FATAL, DOWN, UNKOWN, UP`., +]