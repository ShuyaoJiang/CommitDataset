[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/LazySessionIdGenerator.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.context.embedded.tomcat;, +, +import org.apache.catalina.LifecycleException;, +import org.apache.catalina.LifecycleState;, +import org.apache.catalina.util.StandardSessionIdGenerator;, +, +/**, + * A specialization of {@link StandardSessionIdGenerator} that initializes, + * {@code SecureRandom} lazily., + *, + * @author Andy Wilkinson, + */, +class LazySessionIdGenerator extends StandardSessionIdGenerator {, +, +	@Override, +	protected void startInternal() throws LifecycleException {, +		setState(LifecycleState.STARTING);, +	}, +, +}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/LazySessionIdGenerator.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.context.embedded.tomcat;, +, +import org.apache.catalina.LifecycleException;, +import org.apache.catalina.LifecycleState;, +import org.apache.catalina.util.StandardSessionIdGenerator;, +, +/**, + * A specialization of {@link StandardSessionIdGenerator} that initializes, + * {@code SecureRandom} lazily., + *, + * @author Andy Wilkinson, + */, +class LazySessionIdGenerator extends StandardSessionIdGenerator {, +, +	@Override, +	protected void startInternal() throws LifecycleException {, +		setState(LifecycleState.STARTING);, +	}, +, +}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +		context.addLifecycleListener(new LazySessionIdGeneratorListener());, +	private static class LazySessionIdGeneratorListener implements LifecycleListener {, +, +		@Override, +		public void lifecycleEvent(LifecycleEvent event) {, +			if (event.getType().equals(Lifecycle.START_EVENT)) {, +				Context context = (Context) event.getLifecycle();, +				Manager manager = context.getManager();, +				if (manager != null) {, +					manager.setSessionIdGenerator(new LazySessionIdGenerator());, +				}, +			}, +		}, +, +	}, +]