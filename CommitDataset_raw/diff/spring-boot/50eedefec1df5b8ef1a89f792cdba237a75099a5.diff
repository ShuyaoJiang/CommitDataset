[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java, + * @author Eddú Meléndez, +			if(this.properties.getTimeout() > 0) {, +				factory.setTimeout(this.properties.getTimeout());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java, + * @author Eddú Meléndez, +			if(this.properties.getTimeout() > 0) {, +				factory.setTimeout(this.properties.getTimeout());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisProperties.java, + * @author Eddú Meléndez, +	/**, +	 * Timeout to set in milliseconds., +	 */, +	private int timeout;, +, +	public void setTimeout(int timeout) {, +		this.timeout = timeout;, +	}, +, +	public int getTimeout() {, +		return this.timeout;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java, + * @author Eddú Meléndez, +			if(this.properties.getTimeout() > 0) {, +				factory.setTimeout(this.properties.getTimeout());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisProperties.java, + * @author Eddú Meléndez, +	/**, +	 * Timeout to set in milliseconds., +	 */, +	private int timeout;, +, +	public void setTimeout(int timeout) {, +		this.timeout = timeout;, +	}, +, +	public int getTimeout() {, +		return this.timeout;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfigurationTests.java, +import org.junit.After;, +import org.junit.Before;, + * @author Eddú Meléndez, +	@Before, +	public void setup() {, +		this.context = new AnnotationConfigApplicationContext();, +	}, +, +	@After, +	public void close() {, +		if (this.context != null) {, +			this.context.close();, +		}, +	}, +, +		load();, +		load("spring.redis.host:foo", "spring.redis.database:1");, +		load("spring.redis.host:foo", "spring.redis.pool.max-idle:1");, +	public void testRedisConfigurationWithTimeout() throws Exception {, +		load("spring.redis.host:foo", "spring.redis.timeout:100");, +		assertEquals("foo", this.context.getBean(JedisConnectionFactory.class), +				.getHostName());, +		assertEquals(100, this.context.getBean(JedisConnectionFactory.class), +				.getTimeout());, +	}, +, +	@Test, +			load("spring.redis.sentinel.master:mymaster", "spring.redis.sentinel.nodes:", +	private void load(String... environment) {, +		this.context = doLoad(environment);, +	}, +, +	private AnnotationConfigApplicationContext doLoad(, +			String... environment) {, +		AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(applicationContext, environment);, +		applicationContext.register(RedisAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		applicationContext.refresh();, +		return applicationContext;, +	}, +]