[+++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.freemarker.suffix=.ftl, +	spring.freemarker.viewNames= # whitelist of view names that can be resolved, +, +	# GROOVY TEMPLATES ({sc-spring-boot-autoconfigure}}/groovy/template/GroovyTemplateAutoConfiguration.{sc-ext}[GroovyTemplateAutoConfiguration]), +	spring.groovy.template.allowRequestOverride=false, +	spring.groovy.template.allowSessionOverride=false, +	spring.groovy.template.cache=true, +	spring.groovy.template.contentType=text/html, +	spring.groovy.template.prefix=classpath:/templates/, +	spring.groovy.template.suffix=.tpl, +	spring.groovy.template.templateEncoding=UTF-8, +	spring.groovy.template.viewNames= # whitelist of view names that can be resolved, +    spring.groovy.template.configuration.*= # See Groovy's TemplateConfiguration, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.freemarker.suffix=.ftl, +	spring.freemarker.viewNames= # whitelist of view names that can be resolved, +, +	# GROOVY TEMPLATES ({sc-spring-boot-autoconfigure}}/groovy/template/GroovyTemplateAutoConfiguration.{sc-ext}[GroovyTemplateAutoConfiguration]), +	spring.groovy.template.allowRequestOverride=false, +	spring.groovy.template.allowSessionOverride=false, +	spring.groovy.template.cache=true, +	spring.groovy.template.contentType=text/html, +	spring.groovy.template.prefix=classpath:/templates/, +	spring.groovy.template.suffix=.tpl, +	spring.groovy.template.templateEncoding=UTF-8, +	spring.groovy.template.viewNames= # whitelist of view names that can be resolved, +    spring.groovy.template.configuration.*= # See Groovy's TemplateConfiguration, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +* If you use Groovy templates (actually if groovy-templates is on your classpath) you, +also have a `Groovy TemplateViewResolver` with id, +  ``groovyTemplateViewResolver''. It looks for resources in a loader path by, +  surrounding the view name with a prefix and suffix (externalized to `spring.groovy.template.prefix`, +  and `spring.groovy.template.suffix`, defaults ``classpath:/templates/'' and ``.tpl'' respectively). It can be overriden, +  by providing a bean of the same name., +, +{sc-spring-boot-autoconfigure}/thymeleaf/ThymeleafAutoConfiguration.{sc-ext}[`ThymeleafAutoConfiguration`], , +{sc-spring-boot-autoconfigure}/groovy/template/GroovyTemplateAutoConfiguration.{sc-ext}['GroovyTemplateAutoConfiguration'] and, +[[howto-reload-groovy-template-content]], +=== Reload Groovy templates without restarting the container, +If you are using Groovy templates, then set `spring.groovy.template.cache` to `false`. See, +{sc-spring-boot-autoconfigure}/groovy/template/GroovyTemplateAutoConfiguration.{sc-ext}[`GroovyTemplateAutoConfiguration`], +for other Groovy customization options., +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.freemarker.suffix=.ftl, +	spring.freemarker.viewNames= # whitelist of view names that can be resolved, +, +	# GROOVY TEMPLATES ({sc-spring-boot-autoconfigure}}/groovy/template/GroovyTemplateAutoConfiguration.{sc-ext}[GroovyTemplateAutoConfiguration]), +	spring.groovy.template.allowRequestOverride=false, +	spring.groovy.template.allowSessionOverride=false, +	spring.groovy.template.cache=true, +	spring.groovy.template.contentType=text/html, +	spring.groovy.template.prefix=classpath:/templates/, +	spring.groovy.template.suffix=.tpl, +	spring.groovy.template.templateEncoding=UTF-8, +	spring.groovy.template.viewNames= # whitelist of view names that can be resolved, +    spring.groovy.template.configuration.*= # See Groovy's TemplateConfiguration, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +* If you use Groovy templates (actually if groovy-templates is on your classpath) you, +also have a `Groovy TemplateViewResolver` with id, +  ``groovyTemplateViewResolver''. It looks for resources in a loader path by, +  surrounding the view name with a prefix and suffix (externalized to `spring.groovy.template.prefix`, +  and `spring.groovy.template.suffix`, defaults ``classpath:/templates/'' and ``.tpl'' respectively). It can be overriden, +  by providing a bean of the same name., +, +{sc-spring-boot-autoconfigure}/thymeleaf/ThymeleafAutoConfiguration.{sc-ext}[`ThymeleafAutoConfiguration`], , +{sc-spring-boot-autoconfigure}/groovy/template/GroovyTemplateAutoConfiguration.{sc-ext}['GroovyTemplateAutoConfiguration'] and, +[[howto-reload-groovy-template-content]], +=== Reload Groovy templates without restarting the container, +If you are using Groovy templates, then set `spring.groovy.template.cache` to `false`. See, +{sc-spring-boot-autoconfigure}/groovy/template/GroovyTemplateAutoConfiguration.{sc-ext}[`GroovyTemplateAutoConfiguration`], +for other Groovy customization options., +, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +As well as REST web services, you can also use Spring MVC to serve, +dynamic HTML content.  Spring MVC supports a variety of templating, +technologies including: Velocity, FreeMarker and JSPs. Many, +other templating engines also ship their own Spring MVC integrations., +, +Spring Boot includes auto-configuration support for the Thymeleaf,, +[FreeMarker](http://freemarker.org/docs/) and, +[Groovy](http://beta.groovy-lang.org/docs/groovy-2.3.0/html/documentation/markup-template-engine.html), +templating engines. Thymeleaf is an XML/XHTML/HTML5 template engine, +that can work both in web and non-web environments. If allows you to, +create natural templates that can be correctly displayed by browsers, +and therefore work also as static prototypes. Your FreeMarker, Groovy, +and Thymeleaf templates will be picked up automatically from]