[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/websocket/WebSocketAutoConfiguration.java, +import javax.servlet.Servlet;, +import org.apache.catalina.deploy.ApplicationListener;, +import org.apache.catalina.startup.Tomcat;, + * Auto configuration for websocket server in embedded Tomcat. If, + * <code>spring-websocket</code> is detected on the classpath then we add a listener that, + * installs the Tomcat Websocket initializer. In a non-embedded container it should, + * already be there., +@ConditionalOnClass(name = "org.apache.tomcat.websocket.server.WsSci", value = {, +		Servlet.class, Tomcat.class, WebSocketHandler.class }), +	private static final ApplicationListener WS_APPLICATION_LISTENER = new ApplicationListener(, +			"org.apache.tomcat.websocket.server.WsContextListener", false);, +				context.addApplicationListener(WS_APPLICATION_LISTENER);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/websocket/WebSocketAutoConfiguration.java, +import javax.servlet.Servlet;, +import org.apache.catalina.deploy.ApplicationListener;, +import org.apache.catalina.startup.Tomcat;, + * Auto configuration for websocket server in embedded Tomcat. If, + * <code>spring-websocket</code> is detected on the classpath then we add a listener that, + * installs the Tomcat Websocket initializer. In a non-embedded container it should, + * already be there., +@ConditionalOnClass(name = "org.apache.tomcat.websocket.server.WsSci", value = {, +		Servlet.class, Tomcat.class, WebSocketHandler.class }), +	private static final ApplicationListener WS_APPLICATION_LISTENER = new ApplicationListener(, +			"org.apache.tomcat.websocket.server.WsContextListener", false);, +				context.addApplicationListener(WS_APPLICATION_LISTENER);, +++ b/spring-boot-samples/spring-boot-sample-websocket/src/main/java/samples/websocket/config/SampleWebSocketsApplication.java, +import org.springframework.web.socket.config.annotation.EnableWebSocket;, +import org.springframework.web.socket.config.annotation.WebSocketConfigurer;, +import org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry;, +@EnableWebSocket, +public class SampleWebSocketsApplication extends SpringBootServletInitializer implements, +		WebSocketConfigurer {, +, +	@Override, +	public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {, +		registry.addHandler(echoWebSocketHandler(), "/echo").withSockJS();, +		registry.addHandler(snakeWebSocketHandler(), "/snake").withSockJS();, +	}, +	@Bean, +	@Bean]