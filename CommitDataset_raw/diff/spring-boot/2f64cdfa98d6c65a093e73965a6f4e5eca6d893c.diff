[+++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootZipCopyAction.java, +				if (entry.isDirectory() && !entry.getName().startsWith("META-INF/")) {, +					writeDirectory(entry, out);, +				}, +	private void writeDirectory(ZipEntry entry, ZipOutputStream out) throws IOException {, +		out.closeEntry();, +	}, +, +	private void writeClass(ZipEntry entry, ZipInputStream in, ZipOutputStream out), +			throws IOException {, +		if (!this.preserveFileTimestamps) {, +			entry.setTime(GUtil.CONSTANT_TIME_FOR_ZIP_ENTRIES);, +		}, +		out.putNextEntry(entry);, +		byte[] buffer = new byte[4096];, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootZipCopyAction.java, +				if (entry.isDirectory() && !entry.getName().startsWith("META-INF/")) {, +					writeDirectory(entry, out);, +				}, +	private void writeDirectory(ZipEntry entry, ZipOutputStream out) throws IOException {, +		out.closeEntry();, +	}, +, +	private void writeClass(ZipEntry entry, ZipInputStream in, ZipOutputStream out), +			throws IOException {, +		if (!this.preserveFileTimestamps) {, +			entry.setTime(GUtil.CONSTANT_TIME_FOR_ZIP_ENTRIES);, +		}, +		out.putNextEntry(entry);, +		byte[] buffer = new byte[4096];, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/tasks/bundling/AbstractBootArchiveTests.java, +			assertThat(jarFile.getEntry("org/springframework/boot/loader/")).isNotNull();, +			assertThat(jarFile.getEntry("org/springframework/boot/loader/")).isNotNull();]