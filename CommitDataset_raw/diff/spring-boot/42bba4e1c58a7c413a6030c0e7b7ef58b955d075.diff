[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +	private String databaseChangeLogTable = "DATABASECHANGELOG";, +	private String databaseChangeLogLockTable = "DATABASECHANGELOGLOCK";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +	private String databaseChangeLogTable = "DATABASECHANGELOG";, +	private String databaseChangeLogLockTable = "DATABASECHANGELOGLOCK";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +	public void defaultValues() {, +		this.contextRunner.withUserConfiguration(EmbeddedDataSourceConfiguration.class), +				.run(assertLiquibase((liquibase) -> {, +					LiquibaseProperties properties = new LiquibaseProperties();, +					assertThat(liquibase.getDatabaseChangeLogTable()), +							.isEqualTo(properties.getDatabaseChangeLogTable());, +					assertThat(liquibase.getDatabaseChangeLogLockTable()), +							.isEqualTo(properties.getDatabaseChangeLogLockTable());, +					assertThat(liquibase.isDropFirst()), +							.isEqualTo(properties.isDropFirst());, +					assertThat(liquibase.isTestRollbackOnUpdate()), +							.isEqualTo(properties.isTestRollbackOnUpdate());, +				}));, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +	private String databaseChangeLogTable = "DATABASECHANGELOG";, +	private String databaseChangeLogLockTable = "DATABASECHANGELOGLOCK";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +	public void defaultValues() {, +		this.contextRunner.withUserConfiguration(EmbeddedDataSourceConfiguration.class), +				.run(assertLiquibase((liquibase) -> {, +					LiquibaseProperties properties = new LiquibaseProperties();, +					assertThat(liquibase.getDatabaseChangeLogTable()), +							.isEqualTo(properties.getDatabaseChangeLogTable());, +					assertThat(liquibase.getDatabaseChangeLogLockTable()), +							.isEqualTo(properties.getDatabaseChangeLogLockTable());, +					assertThat(liquibase.isDropFirst()), +							.isEqualTo(properties.isDropFirst());, +					assertThat(liquibase.isTestRollbackOnUpdate()), +							.isEqualTo(properties.isTestRollbackOnUpdate());, +				}));, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.liquibase.database-change-log-table=DATABASECHANGELOG # Name of table to use for tracking change history., +	spring.liquibase.database-change-log-lock-table=DATABASECHANGELOGLOCK # Name of table to use for tracking concurrent Liquibase usage.]