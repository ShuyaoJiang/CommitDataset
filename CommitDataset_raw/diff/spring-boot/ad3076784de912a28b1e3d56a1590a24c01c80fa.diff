[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/jdbc/EmbeddedDatabaseAutoConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static Log logger = LogFactory, +			.getLog(EmbeddedDatabaseAutoConfiguration.class);, +, +				if (logger.isDebugEnabled()) {, +					logger.debug("Spring JDBC not detected (EmbeddedDatabaseCondition evaluated false).");, +				}, +			if (logger.isDebugEnabled()) {, +				logger.debug("Spring JDBC detected (embedded database type is ", +						+ getEmbeddedDatabaseType() + ").");, +			}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/jdbc/EmbeddedDatabaseAutoConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static Log logger = LogFactory, +			.getLog(EmbeddedDatabaseAutoConfiguration.class);, +, +				if (logger.isDebugEnabled()) {, +					logger.debug("Spring JDBC not detected (EmbeddedDatabaseCondition evaluated false).");, +				}, +			if (logger.isDebugEnabled()) {, +				logger.debug("Spring JDBC detected (embedded database type is ", +						+ getEmbeddedDatabaseType() + ").");, +			}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/annotation/AbstractOnBeanCondition.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static Log logger = LogFactory.getLog(OnBeanCondition.class);, +, +		if (logger.isDebugEnabled()) {, +			logger.debug("Looking for beans with class: " + beanClasses);, +		}, +		if (logger.isDebugEnabled()) {, +			logger.debug("Looking for beans with names: " + beanNames);, +		}, +		boolean result = evaluate(beanClassesFound, beanNamesFound);, +		if (logger.isDebugEnabled()) {, +			logger.debug("Finished matching and result is matches" + result);, +		}, +		return result;, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/jdbc/EmbeddedDatabaseAutoConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static Log logger = LogFactory, +			.getLog(EmbeddedDatabaseAutoConfiguration.class);, +, +				if (logger.isDebugEnabled()) {, +					logger.debug("Spring JDBC not detected (EmbeddedDatabaseCondition evaluated false).");, +				}, +			if (logger.isDebugEnabled()) {, +				logger.debug("Spring JDBC detected (embedded database type is ", +						+ getEmbeddedDatabaseType() + ").");, +			}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/annotation/AbstractOnBeanCondition.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static Log logger = LogFactory.getLog(OnBeanCondition.class);, +, +		if (logger.isDebugEnabled()) {, +			logger.debug("Looking for beans with class: " + beanClasses);, +		}, +		if (logger.isDebugEnabled()) {, +			logger.debug("Looking for beans with names: " + beanNames);, +		}, +		boolean result = evaluate(beanClassesFound, beanNamesFound);, +		if (logger.isDebugEnabled()) {, +			logger.debug("Finished matching and result is matches" + result);, +		}, +		return result;, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/annotation/ExpressionCondition.java, +		Boolean result = (Boolean) resolver.evaluate(value, expressionContext);, +		if (logger.isDebugEnabled()) {, +			logger.debug("Finished matching and result is matches=" + result);, +		}, +		return result;, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/jdbc/EmbeddedDatabaseAutoConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static Log logger = LogFactory, +			.getLog(EmbeddedDatabaseAutoConfiguration.class);, +, +				if (logger.isDebugEnabled()) {, +					logger.debug("Spring JDBC not detected (EmbeddedDatabaseCondition evaluated false).");, +				}, +			if (logger.isDebugEnabled()) {, +				logger.debug("Spring JDBC detected (embedded database type is ", +						+ getEmbeddedDatabaseType() + ").");, +			}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/annotation/AbstractOnBeanCondition.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +	private static Log logger = LogFactory.getLog(OnBeanCondition.class);, +, +		if (logger.isDebugEnabled()) {, +			logger.debug("Looking for beans with class: " + beanClasses);, +		}, +		if (logger.isDebugEnabled()) {, +			logger.debug("Looking for beans with names: " + beanNames);]