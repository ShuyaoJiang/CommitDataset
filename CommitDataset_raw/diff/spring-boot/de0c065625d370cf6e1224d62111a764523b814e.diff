[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/amqp/RabbitHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator rabbitHealthIndicator(, +			Map<String, RabbitTemplate> rabbitTemplates) {, +		return createHealthIndicator(rabbitTemplates);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/amqp/RabbitHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator rabbitHealthIndicator(, +			Map<String, RabbitTemplate> rabbitTemplates) {, +		return createHealthIndicator(rabbitTemplates);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public AuditListener auditListener(, +			ObjectProvider<AuditEventRepository> auditEventRepository) throws Exception {, +		return new AuditListener(auditEventRepository.getIfAvailable());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/amqp/RabbitHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator rabbitHealthIndicator(, +			Map<String, RabbitTemplate> rabbitTemplates) {, +		return createHealthIndicator(rabbitTemplates);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public AuditListener auditListener(, +			ObjectProvider<AuditEventRepository> auditEventRepository) throws Exception {, +		return new AuditListener(auditEventRepository.getIfAvailable());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator cassandraHealthIndicator(, +			Map<String, CassandraOperations> cassandraOperations) {, +		return createHealthIndicator(cassandraOperations);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/amqp/RabbitHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator rabbitHealthIndicator(, +			Map<String, RabbitTemplate> rabbitTemplates) {, +		return createHealthIndicator(rabbitTemplates);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public AuditListener auditListener(, +			ObjectProvider<AuditEventRepository> auditEventRepository) throws Exception {, +		return new AuditListener(auditEventRepository.getIfAvailable());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator cassandraHealthIndicator(, +			Map<String, CassandraOperations> cassandraOperations) {, +		return createHealthIndicator(cassandraOperations);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public ReactiveHealthIndicator cassandraHealthIndicator(, +			Map<String, ReactiveCassandraOperations> reactiveCassandraOperations) {, +		return createHealthIndicator(reactiveCassandraOperations);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/amqp/RabbitHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator rabbitHealthIndicator(, +			Map<String, RabbitTemplate> rabbitTemplates) {, +		return createHealthIndicator(rabbitTemplates);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public AuditListener auditListener(, +			ObjectProvider<AuditEventRepository> auditEventRepository) throws Exception {, +		return new AuditListener(auditEventRepository.getIfAvailable());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator cassandraHealthIndicator(, +			Map<String, CassandraOperations> cassandraOperations) {, +		return createHealthIndicator(cassandraOperations);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public ReactiveHealthIndicator cassandraHealthIndicator(, +			Map<String, ReactiveCassandraOperations> reactiveCassandraOperations) {, +		return createHealthIndicator(reactiveCassandraOperations);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +			ControllerEndpointsSupplier controllerEndpointsSupplier,, +			ApplicationContext applicationContext) {, +				applicationContext, parameterMapper, endpointMediaTypes, null,, +				webClientBuilder, applicationContext.getEnvironment());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/amqp/RabbitHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator rabbitHealthIndicator(, +			Map<String, RabbitTemplate> rabbitTemplates) {, +		return createHealthIndicator(rabbitTemplates);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public AuditListener auditListener(, +			ObjectProvider<AuditEventRepository> auditEventRepository) throws Exception {, +		return new AuditListener(auditEventRepository.getIfAvailable());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public HealthIndicator cassandraHealthIndicator(, +			Map<String, CassandraOperations> cassandraOperations) {, +		return createHealthIndicator(cassandraOperations);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +	public ReactiveHealthIndicator cassandraHealthIndicator(, +			Map<String, ReactiveCassandraOperations> reactiveCassandraOperations) {, +		return createHealthIndicator(reactiveCassandraOperations);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +			ControllerEndpointsSupplier controllerEndpointsSupplier,, +			ApplicationContext applicationContext) {]