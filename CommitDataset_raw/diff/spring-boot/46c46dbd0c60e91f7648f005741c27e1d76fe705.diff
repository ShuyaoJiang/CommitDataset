[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, FacebookConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.facebook.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, FacebookConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.facebook.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, LinkedInConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.linkedin.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +		@ConditionalOnMissingBean(LinkedIn.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, FacebookConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.facebook.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, LinkedInConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.linkedin.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +		@ConditionalOnMissingBean(LinkedIn.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/SocialAutoConfigurerAdapter.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, FacebookConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.facebook.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, LinkedInConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.linkedin.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +		@ConditionalOnMissingBean(LinkedIn.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/SocialAutoConfigurerAdapter.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration;, +import org.springframework.social.connect.web.thymeleaf.SpringSocialDialect;, +import org.thymeleaf.spring4.SpringTemplateEngine;, +@ConditionalOnBean({ ConnectionFactoryLocator.class, UsersConnectionRepository.class }), +@AutoConfigureBefore(ThymeleafAutoConfiguration.class), +	@Configuration, +	@ConditionalOnClass(SpringTemplateEngine.class), +	protected static class SpringSocialThymeleafConfig {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public SpringSocialDialect springSocialDialect() {, +			return new SpringSocialDialect();, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, FacebookConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.facebook.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/LinkedInAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.social.config.annotation.SocialConfigurerAdapter;, +@ConditionalOnClass({ SocialConfigurerAdapter.class, LinkedInConnectionFactory.class }), +@ConditionalOnProperty(prefix = "spring.social.linkedin.", value = "app-id"), +@AutoConfigureBefore(SocialWebAutoConfiguration.class), +		@ConditionalOnMissingBean(LinkedIn.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/SocialAutoConfigurerAdapter.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/SocialWebAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration;, +import org.springframework.social.connect.web.thymeleaf.SpringSocialDialect;, +import org.thymeleaf.spring4.SpringTemplateEngine;, +@ConditionalOnBean({ ConnectionFactoryLocator.class, UsersConnectionRepository.class }), +@AutoConfigureBefore(ThymeleafAutoConfiguration.class), +	@Configuration, +	@ConditionalOnClass(SpringTemplateEngine.class), +	protected static class SpringSocialThymeleafConfig {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public SpringSocialDialect springSocialDialect() {, +			return new SpringSocialDialect();, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/TwitterAutoConfiguration.java]