[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +import io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics;, +		@Bean, +		@ConditionalOnMissingBean, +		public ClassLoaderMetrics classLoaderMetrics() {, +			return new ClassLoaderMetrics();, +		}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +import io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics;, +		@Bean, +		@ConditionalOnMissingBean, +		public ClassLoaderMetrics classLoaderMetrics() {, +			return new ClassLoaderMetrics();, +		}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +import io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics;, +				.hasSingleBean(JvmThreadMetrics.class), +				.hasSingleBean(ClassLoaderMetrics.class));, +						.doesNotHaveBean(JvmThreadMetrics.class), +						.doesNotHaveBean(ClassLoaderMetrics.class));, +						.hasSingleBean(JvmThreadMetrics.class), +						.hasSingleBean(ClassLoaderMetrics.class));, +						.hasSingleBean(JvmThreadMetrics.class), +						.hasSingleBean(ClassLoaderMetrics.class));, +						.hasSingleBean(ClassLoaderMetrics.class), +	public void allowsCustomClassLoaderMetricsToBeUsed() {, +		this.runner.withUserConfiguration(CustomClassLoaderMetricsConfiguration.class), +				.run((context) -> assertThat(context).hasSingleBean(JvmGcMetrics.class), +						.hasSingleBean(JvmMemoryMetrics.class), +						.hasSingleBean(JvmThreadMetrics.class), +						.hasSingleBean(ClassLoaderMetrics.class), +						.hasBean("customClassLoaderMetrics"));, +	}, +, +	@Test, +	static class CustomClassLoaderMetricsConfiguration {, +, +		@Bean, +		ClassLoaderMetrics customClassLoaderMetrics() {, +			return new ClassLoaderMetrics();, +		}, +, +	}, +, +	@Configuration]