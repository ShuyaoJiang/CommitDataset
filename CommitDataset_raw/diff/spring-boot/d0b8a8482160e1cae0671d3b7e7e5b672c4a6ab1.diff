[+++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-server-tests/src/test/java/org/springframework/boot/context/embedded/ApplicationBuilder.java, +		writeSettingsXml(appFolder);, +	private void writeSettingsXml(File appFolder) throws IOException {, +		Map<String, Object> context = new HashMap<>();, +		context.put("repository", System.getProperty("repository"));, +		FileWriter out = new FileWriter(new File(appFolder, "settings.xml"));, +		Mustache.compiler().escapeHTML(false), +				.compile(new FileReader("src/test/resources/settings-template.xml")), +				.execute(context, out);, +		out.close();, +	}, +, +		invocation.setUserSettingsFile(new File(appFolder, "settings.xml"));, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-server-tests/src/test/java/org/springframework/boot/context/embedded/ApplicationBuilder.java, +		writeSettingsXml(appFolder);, +	private void writeSettingsXml(File appFolder) throws IOException {, +		Map<String, Object> context = new HashMap<>();, +		context.put("repository", System.getProperty("repository"));, +		FileWriter out = new FileWriter(new File(appFolder, "settings.xml"));, +		Mustache.compiler().escapeHTML(false), +				.compile(new FileReader("src/test/resources/settings-template.xml")), +				.execute(context, out);, +		out.close();, +	}, +, +		invocation.setUserSettingsFile(new File(appFolder, "settings.xml"));, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-server-tests/src/test/resources/pom-template.xml, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-server-tests/src/test/java/org/springframework/boot/context/embedded/ApplicationBuilder.java, +		writeSettingsXml(appFolder);, +	private void writeSettingsXml(File appFolder) throws IOException {, +		Map<String, Object> context = new HashMap<>();, +		context.put("repository", System.getProperty("repository"));, +		FileWriter out = new FileWriter(new File(appFolder, "settings.xml"));, +		Mustache.compiler().escapeHTML(false), +				.compile(new FileReader("src/test/resources/settings-template.xml")), +				.execute(context, out);, +		out.close();, +	}, +, +		invocation.setUserSettingsFile(new File(appFolder, "settings.xml"));, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-server-tests/src/test/resources/pom-template.xml, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-server-tests/src/test/resources/settings-template.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">, +	<profiles>, +		<profile>, +			<id>repository</id>, +			<activation>, +				<property>, +					<name>repository</name>, +				</property>, +			</activation>, +			<repositories>, +				<repository>, +					<id>repository</id>, +					<url>${repository}</url>, +					<snapshots>, +						<enabled>true</enabled>, +					</snapshots>, +				</repository>, +			</repositories>, +			<pluginRepositories>, +				<pluginRepository>, +					<id>repository</id>, +					<url>${repository}</url>, +					<snapshots>, +						<enabled>true</enabled>, +					</snapshots>, +				</pluginRepository>, +			</pluginRepositories>, +		</profile>, +	</profiles>, +</settings>]