[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +import org.springframework.beans.factory.ObjectProvider;, + * @author Andy Wilkinson, +	public HibernateJpaAutoConfiguration(DataSource dataSource,, +			JpaProperties jpaProperties,, +			ObjectProvider<JtaTransactionManager> jtaTransactionManagerProvider) {, +		super(dataSource, jpaProperties, jtaTransactionManagerProvider);, +		vendorProperties.putAll(getProperties().getHibernateProperties(getDataSource()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +import org.springframework.beans.factory.ObjectProvider;, + * @author Andy Wilkinson, +	public HibernateJpaAutoConfiguration(DataSource dataSource,, +			JpaProperties jpaProperties,, +			ObjectProvider<JtaTransactionManager> jtaTransactionManagerProvider) {, +		super(dataSource, jpaProperties, jtaTransactionManagerProvider);, +		vendorProperties.putAll(getProperties().getHibernateProperties(getDataSource()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.beans.factory.ObjectProvider;, + * @author Andy Wilkinson, +	private final DataSource dataSource;, +, +	private final JpaProperties properties;, +, +	private final JtaTransactionManager jtaTransactionManager;, +, +	protected JpaBaseConfiguration(DataSource dataSource, JpaProperties properties,, +			ObjectProvider<JtaTransactionManager> jtaTransactionManagerProvider) {, +		this.dataSource = dataSource;, +		this.properties = properties;, +		this.jtaTransactionManager = jtaTransactionManagerProvider.getIfAvailable();, +	}, +		adapter.setShowSql(this.properties.isShowSql());, +		adapter.setDatabase(this.properties.getDatabase());, +		adapter.setDatabasePlatform(this.properties.getDatabasePlatform());, +		adapter.setGenerateDdl(this.properties.isGenerateDdl());, +			JpaVendorAdapter jpaVendorAdapter,, +			ObjectProvider<PersistenceUnitManager> persistenceUnitManagerProvider) {, +				jpaVendorAdapter, this.properties.getProperties(),, +				persistenceUnitManagerProvider.getIfAvailable());, +	/**, +	 * Return the {@link JpaProperties}., +	 * @return the properties, +	 */, +	protected final JpaProperties getProperties() {, +		return this.properties;, +	}, +, +	/**, +	 * Return the {@link DataSource}., +	 * @return the data source, +	 */, +	protected final DataSource getDataSource() {, +		return this.dataSource;, +	}, +]