[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.boot.autoconfigure.condition.NoneNestedConditions;, +@Conditional(ReactiveOAuth2ClientAutoConfiguration.NonServletApplicationCondition.class), +	static class NonServletApplicationCondition extends NoneNestedConditions {, +, +		NonServletApplicationCondition() {, +			super(ConfigurationPhase.PARSE_CONFIGURATION);, +		}, +, +		@ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.SERVLET), +		static class ServletApplicationCondition {, +, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.boot.autoconfigure.condition.NoneNestedConditions;, +@Conditional(ReactiveOAuth2ClientAutoConfiguration.NonServletApplicationCondition.class), +	static class NonServletApplicationCondition extends NoneNestedConditions {, +, +		NonServletApplicationCondition() {, +			super(ConfigurationPhase.PARSE_CONFIGURATION);, +		}, +, +		@ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.SERVLET), +		static class ServletApplicationCondition {, +, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfigurationTests.java, +import org.springframework.boot.test.context.runner.WebApplicationContextRunner;, +	public void autoConfigurationShouldBackOffForServletEnvironments() {, +		WebApplicationContextRunner contextRunner = new WebApplicationContextRunner(), +				.withConfiguration(AutoConfigurations, +						.of(ReactiveOAuth2ClientAutoConfiguration.class));, +		contextRunner.run((context) -> assertThat(context), +				.doesNotHaveBean(ReactiveOAuth2ClientAutoConfiguration.class));, +	}, +, +	@Test]