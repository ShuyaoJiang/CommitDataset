[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public ConfigurationPropertiesDescriptor configurationProperties() {, +	private ConfigurationPropertiesDescriptor extract(ApplicationContext context) {, +		return describeConfigurationProperties(context, mapper);, +	private ConfigurationPropertiesDescriptor describeConfigurationProperties(, +			ApplicationContext context, ObjectMapper mapper) {, +		if (context == null) {, +			return null;, +		}, +		Map<String, ConfigurationPropertiesBeanDescriptor> beanDescriptors = new HashMap<>();, +			beanDescriptors.put(beanName, new ConfigurationPropertiesBeanDescriptor(, +					prefix, sanitize(prefix, safeSerialize(mapper, bean, prefix))));, +		return new ConfigurationPropertiesDescriptor(beanDescriptors,, +				describeConfigurationProperties(context.getParent(), mapper));, +, +	/**, +	 * A description of an application context's {@link ConfigurationProperties} beans., +	 * Primarily intended for serialization to JSON., +	 */, +	public static final class ConfigurationPropertiesDescriptor {, +, +		private final Map<String, ConfigurationPropertiesBeanDescriptor> beans;, +, +		private final ConfigurationPropertiesDescriptor parent;, +, +		private ConfigurationPropertiesDescriptor(, +				Map<String, ConfigurationPropertiesBeanDescriptor> beans,, +				ConfigurationPropertiesDescriptor parent) {, +			this.beans = beans;, +			this.parent = parent;, +		}, +, +		public Map<String, ConfigurationPropertiesBeanDescriptor> getBeans() {, +			return this.beans;, +		}, +, +		public ConfigurationPropertiesDescriptor getParent() {, +			return this.parent;, +		}, +, +	}, +, +	/**, +	 * A description of a {@link ConfigurationProperties} bean. Primarily intended for, +	 * serialization to JSON., +	 */, +	public static final class ConfigurationPropertiesBeanDescriptor {, +, +		private final String prefix;, +, +		private final Map<String, Object> properties;, +, +		private ConfigurationPropertiesBeanDescriptor(String prefix,, +				Map<String, Object> properties) {, +			this.prefix = prefix;, +			this.properties = properties;, +		}, +, +		public String getPrefix() {, +			return this.prefix;, +		}, +, +		public Map<String, Object> getProperties() {, +			return this.properties;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public ConfigurationPropertiesDescriptor configurationProperties() {, +	private ConfigurationPropertiesDescriptor extract(ApplicationContext context) {, +		return describeConfigurationProperties(context, mapper);, +	private ConfigurationPropertiesDescriptor describeConfigurationProperties(, +			ApplicationContext context, ObjectMapper mapper) {, +		if (context == null) {, +			return null;, +		}, +		Map<String, ConfigurationPropertiesBeanDescriptor> beanDescriptors = new HashMap<>();, +			beanDescriptors.put(beanName, new ConfigurationPropertiesBeanDescriptor(, +					prefix, sanitize(prefix, safeSerialize(mapper, bean, prefix))));, +		return new ConfigurationPropertiesDescriptor(beanDescriptors,, +				describeConfigurationProperties(context.getParent(), mapper));, +, +	/**, +	 * A description of an application context's {@link ConfigurationProperties} beans., +	 * Primarily intended for serialization to JSON., +	 */, +	public static final class ConfigurationPropertiesDescriptor {, +, +		private final Map<String, ConfigurationPropertiesBeanDescriptor> beans;, +, +		private final ConfigurationPropertiesDescriptor parent;, +, +		private ConfigurationPropertiesDescriptor(, +				Map<String, ConfigurationPropertiesBeanDescriptor> beans,, +				ConfigurationPropertiesDescriptor parent) {, +			this.beans = beans;, +			this.parent = parent;, +		}, +]