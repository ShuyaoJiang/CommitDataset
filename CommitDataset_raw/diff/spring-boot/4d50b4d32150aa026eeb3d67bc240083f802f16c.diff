[+++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean.java, +import javax.servlet.ServletException;, +		return new DelegatingFilterProxy(this.targetBeanName,, +				getWebApplicationContext()) {, +, +			@Override, +			protected void initFilterBean() throws ServletException {, +				// Don't initialize filter bean on init(), +			}, +, +		};, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean.java, +import javax.servlet.ServletException;, +		return new DelegatingFilterProxy(this.targetBeanName,, +				getWebApplicationContext()) {, +, +			@Override, +			protected void initFilterBean() throws ServletException {, +				// Don't initialize filter bean on init(), +			}, +, +		};, +++ b/spring-boot/src/test/java/org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBeanTests.java, +import java.io.IOException;, +, +import javax.servlet.FilterChain;, +import javax.servlet.ServletException;, +import javax.servlet.ServletRequest;, +import javax.servlet.ServletResponse;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.mock.web.MockFilterChain;, +import org.springframework.mock.web.MockFilterConfig;, +import org.springframework.mock.web.MockHttpServletRequest;, +import org.springframework.mock.web.MockHttpServletResponse;, +import org.springframework.web.filter.GenericFilterBean;, +	private static ThreadLocal<Boolean> mockFilterInitialized = new ThreadLocal<Boolean>();, +, +	private GenericWebApplicationContext applicationContext = new GenericWebApplicationContext(, +	public void initShouldNotCauseEarlyInitialization() throws Exception {, +		this.applicationContext.registerBeanDefinition("mockFilter",, +				new RootBeanDefinition(MockFilter.class));, +		AbstractFilterRegistrationBean registrationBean = createFilterRegistrationBean();, +		Filter filter = registrationBean.getFilter();, +		filter.init(new MockFilterConfig());, +		assertThat(mockFilterInitialized.get()).isNull();, +		filter.doFilter(new MockHttpServletRequest(), new MockHttpServletResponse(),, +				new MockFilterChain());, +		assertThat(mockFilterInitialized.get()).isEqualTo(true);, +	}, +, +	@Test, +	static class MockFilter extends GenericFilterBean {, +, +		MockFilter() {, +			mockFilterInitialized.set(true);, +		}, +, +		@Override, +		public void doFilter(ServletRequest request, ServletResponse response,, +				FilterChain chain) throws IOException, ServletException {, +		}, +, +	}, +]