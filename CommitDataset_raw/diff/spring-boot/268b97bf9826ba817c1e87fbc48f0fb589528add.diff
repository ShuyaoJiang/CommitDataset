[+++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListener.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.util.ClassUtils;, +	private static final boolean MOCKITO_IS_PRESENT = ClassUtils.isPresent(, +			"org.mockito.MockSettings",, +			ResetMocksTestExecutionListener.class.getClassLoader());, +, +		if (MOCKITO_IS_PRESENT) {, +	}, +		if (MOCKITO_IS_PRESENT) {, +	}, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListener.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.util.ClassUtils;, +	private static final boolean MOCKITO_IS_PRESENT = ClassUtils.isPresent(, +			"org.mockito.MockSettings",, +			ResetMocksTestExecutionListener.class.getClassLoader());, +, +		if (MOCKITO_IS_PRESENT) {, +	}, +		if (MOCKITO_IS_PRESENT) {, +	}, +++ /dev/null, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListener.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.util.ClassUtils;, +	private static final boolean MOCKITO_IS_PRESENT = ClassUtils.isPresent(, +			"org.mockito.MockSettings",, +			ResetMocksTestExecutionListener.class.getClassLoader());, +, +		if (MOCKITO_IS_PRESENT) {, +	}, +		if (MOCKITO_IS_PRESENT) {, +	}, +++ /dev/null, +++ b/spring-boot-samples/spring-boot-sample-test-nomockito/src/test/java/sample/testnomockito/SampleTestNoMockitoApplicationTests.java, +package sample.testnomockito;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.context.ApplicationContext;, +import org.springframework.test.context.junit4.SpringRunner;, +, +import static org.assertj.core.api.Assertions.assertThat;, +, +/**, + * Tests that {@code ResetMocksTestExecutionListener} and, + * {@code MockitoTestExecutionListener} gracefully degrade when Mockito is not on the, + * classpath., + *, + * @author Madhura Bhave, + */, +@RunWith(SpringRunner.class), +public class SampleTestNoMockitoApplicationTests {, +, +	// gh-7065, +, +	@Autowired, +	private ApplicationContext context;, +, +	@Test, +	public void contextLoads() throws Exception {, +		assertThat(this.context).isNotNull();, +	}, +, +}]