[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.health.OrderedHealthAggregator;, +import org.springframework.boot.actuate.health.HealthAggregator;, +	private HealthAggregator healthAggregator = new OrderedHealthAggregator();, +, +	@Autowired(required = false), +	Map<String, HealthIndicator> healthIndicators = new HashMap<String, HealthIndicator>();, +		return new HealthEndpoint(this.healthAggregator, this.healthIndicators);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.health.OrderedHealthAggregator;, +import org.springframework.boot.actuate.health.HealthAggregator;, +	private HealthAggregator healthAggregator = new OrderedHealthAggregator();, +, +	@Autowired(required = false), +	Map<String, HealthIndicator> healthIndicators = new HashMap<String, HealthIndicator>();, +		return new HealthEndpoint(this.healthAggregator, this.healthIndicators);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, +import java.util.List;, +import org.springframework.beans.factory.annotation.Value;, +import org.springframework.boot.actuate.health.HealthAggregator;, +import org.springframework.boot.actuate.health.OrderedHealthAggregator;, +	@Value("${health.status.order:}"), +	private List<String> statusOrder = null;, +, +	@Bean, +	@ConditionalOnMissingBean, +	public HealthAggregator healthAggregator() {, +		OrderedHealthAggregator healthAggregator = new OrderedHealthAggregator();, +		if (this.statusOrder != null) {, +			healthAggregator.setStatusOrder(this.statusOrder);, +		}, +		return healthAggregator;, +	}, +, +	public HealthIndicator statusHealthIndicator() {, +		@Autowired, +		private HealthAggregator healthAggregator;, +, +		public HealthIndicator dbHealthIndicator() {, +			CompositeHealthIndicator composite = new CompositeHealthIndicator(, +					this.healthAggregator);, +		private HealthAggregator healthAggregator;, +, +		@Autowired, +		public HealthIndicator mongoHealthIndicator() {, +			CompositeHealthIndicator composite = new CompositeHealthIndicator(, +					this.healthAggregator);, +		private HealthAggregator healthAggregator;, +, +		@Autowired, +		public HealthIndicator redisHealthIndicator() {, +			CompositeHealthIndicator composite = new CompositeHealthIndicator(, +					this.healthAggregator);, +		private HealthAggregator healthAggregator;, +, +		@Autowired, +		public HealthIndicator rabbitHealthIndicator() {, +			CompositeHealthIndicator composite = new CompositeHealthIndicator(, +					this.healthAggregator);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.health.OrderedHealthAggregator;, +import org.springframework.boot.actuate.health.HealthAggregator;, +	private HealthAggregator healthAggregator = new OrderedHealthAggregator();, +, +	@Autowired(required = false), +	Map<String, HealthIndicator> healthIndicators = new HashMap<String, HealthIndicator>();, +		return new HealthEndpoint(this.healthAggregator, this.healthIndicators);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, +import java.util.List;, +import org.springframework.beans.factory.annotation.Value;, +import org.springframework.boot.actuate.health.HealthAggregator;, +import org.springframework.boot.actuate.health.OrderedHealthAggregator;, +	@Value("${health.status.order:}"), +	private List<String> statusOrder = null;, +, +	@Bean, +	@ConditionalOnMissingBean, +	public HealthAggregator healthAggregator() {, +		OrderedHealthAggregator healthAggregator = new OrderedHealthAggregator();, +		if (this.statusOrder != null) {, +			healthAggregator.setStatusOrder(this.statusOrder);, +		}, +		return healthAggregator;, +	}, +, +	public HealthIndicator statusHealthIndicator() {, +		@Autowired, +		private HealthAggregator healthAggregator;, +, +		public HealthIndicator dbHealthIndicator() {, +			CompositeHealthIndicator composite = new CompositeHealthIndicator(, +					this.healthAggregator);, +		private HealthAggregator healthAggregator;, +, +		@Autowired, +		public HealthIndicator mongoHealthIndicator() {, +			CompositeHealthIndicator composite = new CompositeHealthIndicator(, +					this.healthAggregator);, +		private HealthAggregator healthAggregator;, +]