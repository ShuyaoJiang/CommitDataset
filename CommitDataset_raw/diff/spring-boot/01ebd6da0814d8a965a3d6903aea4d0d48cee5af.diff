[+++ b/README.md, +	$ curl -s initializr.cfapps.io/installer | bash, +	$ alias spring="java -jar ~/.m2/repository/org/springframework/zero/spring-cli/0.5.0.BUILD-SNAPSHOT/spring-cli-0.5.0.BUILD-SNAPSHOT.jar", +	$ spring run app.groovy, +`spring run <sample>.groovy` from samples directory., +++ b/README.md, +	$ curl -s initializr.cfapps.io/installer | bash, +	$ alias spring="java -jar ~/.m2/repository/org/springframework/zero/spring-cli/0.5.0.BUILD-SNAPSHOT/spring-cli-0.5.0.BUILD-SNAPSHOT.jar", +	$ spring run app.groovy, +`spring run <sample>.groovy` from samples directory., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private static int containerCounter = 0;, +, +			Thread awaitThread = new Thread("container-" + (containerCounter++)) {, +++ b/README.md, +	$ curl -s initializr.cfapps.io/installer | bash, +	$ alias spring="java -jar ~/.m2/repository/org/springframework/zero/spring-cli/0.5.0.BUILD-SNAPSHOT/spring-cli-0.5.0.BUILD-SNAPSHOT.jar", +	$ spring run app.groovy, +`spring run <sample>.groovy` from samples directory., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private static int containerCounter = 0;, +, +			Thread awaitThread = new Thread("container-" + (containerCounter++)) {, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/SimpleMainTests.java, +	private static final String SPRING_STARTUP = "root of context hierarchy";, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +++ b/README.md, +	$ curl -s initializr.cfapps.io/installer | bash, +	$ alias spring="java -jar ~/.m2/repository/org/springframework/zero/spring-cli/0.5.0.BUILD-SNAPSHOT/spring-cli-0.5.0.BUILD-SNAPSHOT.jar", +	$ spring run app.groovy, +`spring run <sample>.groovy` from samples directory., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private static int containerCounter = 0;, +, +			Thread awaitThread = new Thread("container-" + (containerCounter++)) {, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/SimpleMainTests.java, +	private static final String SPRING_STARTUP = "root of context hierarchy";, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/initializer/LoggingApplicationContextInitializerTests.java, +		System.out.println(getOutput());, +++ b/README.md, +	$ curl -s initializr.cfapps.io/installer | bash, +	$ alias spring="java -jar ~/.m2/repository/org/springframework/zero/spring-cli/0.5.0.BUILD-SNAPSHOT/spring-cli-0.5.0.BUILD-SNAPSHOT.jar", +	$ spring run app.groovy, +`spring run <sample>.groovy` from samples directory., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private static int containerCounter = 0;, +, +			Thread awaitThread = new Thread("container-" + (containerCounter++)) {, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/SimpleMainTests.java, +	private static final String SPRING_STARTUP = "root of context hierarchy";, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/initializer/LoggingApplicationContextInitializerTests.java, +		System.out.println(getOutput());, +++ b/spring-cli/src/main/java/org/springframework/cli/SpringCli.java, +	public static final String CLI_APP = "spring";, +++ b/README.md, +	$ curl -s initializr.cfapps.io/installer | bash, +	$ alias spring="java -jar ~/.m2/repository/org/springframework/zero/spring-cli/0.5.0.BUILD-SNAPSHOT/spring-cli-0.5.0.BUILD-SNAPSHOT.jar", +	$ spring run app.groovy, +`spring run <sample>.groovy` from samples directory., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private static int containerCounter = 0;, +, +			Thread awaitThread = new Thread("container-" + (containerCounter++)) {, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/SimpleMainTests.java, +	private static final String SPRING_STARTUP = "root of context hierarchy";, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +		assertTrue(getOutput().contains(SPRING_STARTUP));, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/initializer/LoggingApplicationContextInitializerTests.java, +		System.out.println(getOutput());, +++ b/spring-cli/src/main/java/org/springframework/cli/SpringCli.java, +	public static final String CLI_APP = "spring";, +++ b/spring-cli/src/main/java/org/springframework/cli/runner/SpringApplicationRunner.java, +	private static int watcherCounter = 0;, +, +	private static int runnerCounter = 0;, +, +			super("runner-" + (runnerCounter++));, +			super("filewatcher-" + (watcherCounter++));, +++ b/README.md, +	$ curl -s initializr.cfapps.io/installer | bash, +	$ alias spring="java -jar ~/.m2/repository/org/springframework/zero/spring-cli/0.5.0.BUILD-SNAPSHOT/spring-cli-0.5.0.BUILD-SNAPSHOT.jar", +	$ spring run app.groovy, +`spring run <sample>.groovy` from samples directory.]