[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Simple implementation of {@link HealthIndicator} that returns a status and also, + * attempts a simple database test., + * , +		LinkedHashMap<String, Object> health = new LinkedHashMap<String, Object>();, +		health.put("status", "ok");, +				health.put("database", product);, +				health.put("status", "error");, +				health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +					health.put("hello",, +					health.put("status", "error");, +					health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +		return health;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Simple implementation of {@link HealthIndicator} that returns a status and also, + * attempts a simple database test., + * , +		LinkedHashMap<String, Object> health = new LinkedHashMap<String, Object>();, +		health.put("status", "ok");, +				health.put("database", product);, +				health.put("status", "error");, +				health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +					health.put("hello",, +					health.put("status", "error");, +					health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +		return health;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/Metric.java, +import org.springframework.util.ObjectUtils;, +	private final Date timestamp;, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.name);, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.timestamp);, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.value);, +		if (this == obj) {, +		}, +		if (obj == null) {, +		}, +		if (obj instanceof Metric) {, +			boolean rtn = true;, +			rtn &= ObjectUtils.nullSafeEquals(this.name, other.name);, +			rtn &= ObjectUtils.nullSafeEquals(this.timestamp, other.timestamp);, +			rtn &= ObjectUtils.nullSafeEquals(this.value, other.value);, +			return rtn;, +		return super.equals(obj);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Simple implementation of {@link HealthIndicator} that returns a status and also, + * attempts a simple database test., + * , +		LinkedHashMap<String, Object> health = new LinkedHashMap<String, Object>();, +		health.put("status", "ok");, +				health.put("database", product);, +				health.put("status", "error");, +				health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +					health.put("hello",, +					health.put("status", "error");, +					health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +		return health;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/Metric.java, +import org.springframework.util.ObjectUtils;, +	private final Date timestamp;, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.name);, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.timestamp);, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.value);, +		if (this == obj) {, +		}, +		if (obj == null) {, +		}, +		if (obj instanceof Metric) {, +			boolean rtn = true;, +			rtn &= ObjectUtils.nullSafeEquals(this.name, other.name);, +			rtn &= ObjectUtils.nullSafeEquals(this.timestamp, other.timestamp);, +			rtn &= ObjectUtils.nullSafeEquals(this.value, other.value);, +			return rtn;, +		return super.equals(obj);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/Exporter.java, + * it using a {@code @Scheduled} annotation in a Spring ApplicationContext., +	/**, +	 * Export metric data., +	 */, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Simple implementation of {@link HealthIndicator} that returns a status and also, + * attempts a simple database test., + * , +		LinkedHashMap<String, Object> health = new LinkedHashMap<String, Object>();, +		health.put("status", "ok");, +				health.put("database", product);, +				health.put("status", "error");, +				health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +					health.put("hello",, +					health.put("status", "error");, +					health.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +		return health;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/Metric.java, +import org.springframework.util.ObjectUtils;, +	private final Date timestamp;, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.name);, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.timestamp);, +		result = prime * result + ObjectUtils.nullSafeHashCode(this.value);, +		if (this == obj) {, +		}, +		if (obj == null) {]