[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/LdapAutoConfiguration.java, +	public LdapContextSource ldapContextSource() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/LdapAutoConfiguration.java, +	public LdapContextSource ldapContextSource() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +	public LdapContextSource ldapContextSource() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/LdapAutoConfiguration.java, +	public LdapContextSource ldapContextSource() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +	public LdapContextSource ldapContextSource() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/LdapAutoConfigurationTests.java, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.ldap.pool2.factory.PoolConfig;, +import org.springframework.ldap.pool2.factory.PooledContextSource;, +					ContextSource contextSource = context, +							.getBean(LdapContextSource.class);, +					ContextSource contextSource = context, +							.getBean(LdapContextSource.class);, +	@Test, +	public void contextSourceWithUserProvidedPooledContextSource() {, +		this.contextRunner.withUserConfiguration(PooledContextSourceConfig.class), +				.run((context) -> {, +					LdapContextSource contextSource = context, +							.getBean(LdapContextSource.class);, +					String[] urls = (String[]) ReflectionTestUtils.getField(contextSource,, +							"urls");, +					assertThat(urls).containsExactly("ldap://localhost:389");, +					assertThat(contextSource.isAnonymousReadOnly()).isFalse();, +					context.getBean(PooledContextSource.class);, +				});, +	}, +, +	@Configuration, +	static class PooledContextSourceConfig {, +, +		@Bean, +		public PooledContextSource pooledContextSource(, +				LdapContextSource ldapContextSource) {, +			PooledContextSource pooledContextSource = new PooledContextSource(, +					new PoolConfig());, +			pooledContextSource.setContextSource(ldapContextSource);, +			return pooledContextSource;, +		}, +, +	}, +]