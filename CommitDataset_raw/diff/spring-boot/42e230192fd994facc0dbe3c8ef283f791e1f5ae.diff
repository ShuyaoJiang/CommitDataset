[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +public class EndpointHandlerMapping extends RequestMappingHandlerMapping {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +public class EndpointHandlerMapping extends RequestMappingHandlerMapping {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/NamePatternFilter.java, +	protected interface NameCallback {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +public class EndpointHandlerMapping extends RequestMappingHandlerMapping {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/NamePatternFilter.java, +	protected interface NameCallback {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/InMemoryMetricRepository.java, + * Copyright 2012-2015 the original author or authors., +public class InMemoryMetricRepository implements MetricRepository, MultiMetricRepository {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +public class EndpointHandlerMapping extends RequestMappingHandlerMapping {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/NamePatternFilter.java, +	protected interface NameCallback {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/InMemoryMetricRepository.java, + * Copyright 2012-2015 the original author or authors., +public class InMemoryMetricRepository implements MetricRepository, MultiMetricRepository {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/util/SimpleInMemoryRepository.java, +	public interface Callback<T> {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +public class EndpointHandlerMapping extends RequestMappingHandlerMapping {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/NamePatternFilter.java, +	protected interface NameCallback {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/InMemoryMetricRepository.java, + * Copyright 2012-2015 the original author or authors., +public class InMemoryMetricRepository implements MetricRepository, MultiMetricRepository {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/util/SimpleInMemoryRepository.java, +	public interface Callback<T> {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/system/ApplicationPidFileWriter.java, + * Copyright 2012-2015 the original author or authors., +	private interface Property {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +public class EndpointHandlerMapping extends RequestMappingHandlerMapping {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/NamePatternFilter.java, +	protected interface NameCallback {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/InMemoryMetricRepository.java, + * Copyright 2012-2015 the original author or authors., +public class InMemoryMetricRepository implements MetricRepository, MultiMetricRepository {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/util/SimpleInMemoryRepository.java, +	public interface Callback<T> {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/system/ApplicationPidFileWriter.java, + * Copyright 2012-2015 the original author or authors., +	private interface Property {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointMvcIntegrationTests.java, +	protected @interface MinimalWebConfiguration {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/condition/ConditionalOnEnabledEndpoint.java, +	String value();, +	boolean enabledByDefault() default true;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2015 the original author or authors., +		ApplicationContextAware {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java]