[+++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessor.java, +		return (isParentTheSame(returnType, element)), +	private boolean isParentTheSame(Element returnType, TypeElement element) {, +		if (returnType == null || element == null) {, +			return false;, +		}, +		return getTopLevelType(returnType).equals(getTopLevelType(element));, +	}, +, +	private Element getTopLevelType(Element element) {, +		if ((element.getEnclosingElement() == null) ||, +				!(element.getEnclosingElement() instanceof TypeElement)) {, +			return element;, +		}, +		return getTopLevelType(element.getEnclosingElement());, +	}, +, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessor.java, +		return (isParentTheSame(returnType, element)), +	private boolean isParentTheSame(Element returnType, TypeElement element) {, +		if (returnType == null || element == null) {, +			return false;, +		}, +		return getTopLevelType(returnType).equals(getTopLevelType(element));, +	}, +, +	private Element getTopLevelType(Element element) {, +		if ((element.getEnclosingElement() == null) ||, +				!(element.getEnclosingElement() instanceof TypeElement)) {, +			return element;, +		}, +		return getTopLevelType(element.getEnclosingElement());, +	}, +, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessorTests.java, +import org.springframework.boot.configurationsample.specific.InnerClassHierachicalProperties;, +	public void innerClassPropertiesHierachical() throws Exception {, +		ConfigurationMetadata metadata = compile(InnerClassHierachicalProperties.class);, +		assertThat(metadata), +				.has(Metadata.withGroup("config.foo").ofType(InnerClassHierachicalProperties.Foo.class));, +		assertThat(metadata).has(, +				Metadata.withGroup("config.foo.bar").ofType(InnerClassHierachicalProperties.Bar.class));, +		assertThat(metadata).has(, +				Metadata.withGroup("config.foo.bar.baz").ofType(InnerClassHierachicalProperties.Foo.Baz.class));, +		assertThat(metadata).has(Metadata.withProperty("config.foo.bar.baz.blah"));, +		assertThat(metadata).has(Metadata.withProperty("config.foo.bar.bling"));, +	}, +, +	@Test, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessor.java, +		return (isParentTheSame(returnType, element)), +	private boolean isParentTheSame(Element returnType, TypeElement element) {, +		if (returnType == null || element == null) {, +			return false;, +		}, +		return getTopLevelType(returnType).equals(getTopLevelType(element));, +	}, +, +	private Element getTopLevelType(Element element) {, +		if ((element.getEnclosingElement() == null) ||, +				!(element.getEnclosingElement() instanceof TypeElement)) {, +			return element;, +		}, +		return getTopLevelType(element.getEnclosingElement());, +	}, +, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessorTests.java, +import org.springframework.boot.configurationsample.specific.InnerClassHierachicalProperties;, +	public void innerClassPropertiesHierachical() throws Exception {, +		ConfigurationMetadata metadata = compile(InnerClassHierachicalProperties.class);, +		assertThat(metadata), +				.has(Metadata.withGroup("config.foo").ofType(InnerClassHierachicalProperties.Foo.class));, +		assertThat(metadata).has(, +				Metadata.withGroup("config.foo.bar").ofType(InnerClassHierachicalProperties.Bar.class));, +		assertThat(metadata).has(, +				Metadata.withGroup("config.foo.bar.baz").ofType(InnerClassHierachicalProperties.Foo.Baz.class));, +		assertThat(metadata).has(Metadata.withProperty("config.foo.bar.baz.blah"));, +		assertThat(metadata).has(Metadata.withProperty("config.foo.bar.bling"));, +	}, +, +	@Test, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationsample/specific/InnerClassHierachicalProperties.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.configurationsample.specific;, +]