[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +import java.util.List;, +	 * @param endpointPathMappers the endpoint path mappers, +			EndpointMediaTypes endpointMediaTypes, List<PathMapper> endpointPathMappers,, +				endpointPathMappers, invokerAdvisors, filters);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +import java.util.List;, +	 * @param endpointPathMappers the endpoint path mappers, +			EndpointMediaTypes endpointMediaTypes, List<PathMapper> endpointPathMappers,, +				endpointPathMappers, invokerAdvisors, filters);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +import java.util.List;, +	 * @param endpointPathMappers the endpoint path mappers, +			EndpointMediaTypes endpointMediaTypes, List<PathMapper> endpointPathMappers,, +				endpointPathMappers, invokerAdvisors, filters);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +import java.util.List;, +	 * @param endpointPathMappers the endpoint path mappers, +			EndpointMediaTypes endpointMediaTypes, List<PathMapper> endpointPathMappers,, +				endpointPathMappers, invokerAdvisors, filters);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/MappingWebEndpointPathMapper.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(Ordered.HIGHEST_PRECEDENCE), +		return StringUtils.hasText(path) ? path : null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +import java.util.List;, +	 * @param endpointPathMappers the endpoint path mappers, +			EndpointMediaTypes endpointMediaTypes, List<PathMapper> endpointPathMappers,, +				endpointPathMappers, invokerAdvisors, filters);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/MappingWebEndpointPathMapper.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(Ordered.HIGHEST_PRECEDENCE), +		return StringUtils.hasText(path) ? path : null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration.java, +			EndpointMediaTypes endpointMediaTypes,, +			ObjectProvider<PathMapper> endpointPathMappers,, +				endpointMediaTypes,, +				endpointPathMappers.orderedStream().collect(Collectors.toList()),, +			ObjectProvider<PathMapper> endpointPathMappers,, +				endpointPathMappers.orderedStream().collect(Collectors.toList()),, +				filters.getIfAvailable(Collections::emptyList));, +				ApplicationContext applicationContext,, +				ObjectProvider<PathMapper> endpointPathMappers,, +					endpointPathMappers.orderedStream().collect(Collectors.toList()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +import java.util.List;, +	 * @param endpointPathMappers the endpoint path mappers, +			EndpointMediaTypes endpointMediaTypes, List<PathMapper> endpointPathMappers,, +				endpointPathMappers, invokerAdvisors, filters);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +				this.applicationContext, parameterMapper, endpointMediaTypes, null,, +				Collections.emptyList(), Collections.emptyList());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/MappingWebEndpointPathMapper.java, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +@Order(Ordered.HIGHEST_PRECEDENCE), +		return StringUtils.hasText(path) ? path : null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration.java, +			EndpointMediaTypes endpointMediaTypes,, +			ObjectProvider<PathMapper> endpointPathMappers,, +				endpointMediaTypes,, +				endpointPathMappers.orderedStream().collect(Collectors.toList()),, +			ObjectProvider<PathMapper> endpointPathMappers,, +				endpointPathMappers.orderedStream().collect(Collectors.toList()),, +				filters.getIfAvailable(Collections::emptyList));, +				ApplicationContext applicationContext,, +				ObjectProvider<PathMapper> endpointPathMappers,, +					endpointPathMappers.orderedStream().collect(Collectors.toList()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java, +					context, parameterMapper, mediaTypes,, +					Collections.singletonList(endpointPathMapper),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +import java.util.List;, +	 * @param endpointPathMappers the endpoint path mappers]