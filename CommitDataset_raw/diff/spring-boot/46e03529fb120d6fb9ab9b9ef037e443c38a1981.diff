[+++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/main/java/sample/security/method/SampleMethodSecurityApplication.java, +	@Configuration, +++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/main/java/sample/security/method/SampleMethodSecurityApplication.java, +	@Configuration, +++ b/spring-boot-samples/spring-boot-sample-web-secure-custom/src/main/java/sample/web/secure/custom/SampleWebSecureCustomApplication.java, +import org.springframework.context.annotation.Configuration;, +	@Configuration, +++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/main/java/sample/security/method/SampleMethodSecurityApplication.java, +	@Configuration, +++ b/spring-boot-samples/spring-boot-sample-web-secure-custom/src/main/java/sample/web/secure/custom/SampleWebSecureCustomApplication.java, +import org.springframework.context.annotation.Configuration;, +	@Configuration, +++ /dev/null, +++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/main/java/sample/security/method/SampleMethodSecurityApplication.java, +	@Configuration, +++ b/spring-boot-samples/spring-boot-sample-web-secure-custom/src/main/java/sample/web/secure/custom/SampleWebSecureCustomApplication.java, +import org.springframework.context.annotation.Configuration;, +	@Configuration, +++ /dev/null, +++ b/spring-boot-samples/spring-boot-sample-web-secure-jdbc/src/main/java/sample/web/secure/jdbc/SampleWebSecureJdbcApplication.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package sample.web.secure.jdbc;, +, +import java.util.Date;, +import java.util.Map;, +, +import javax.sql.DataSource;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.SpringBootApplication;, +import org.springframework.boot.autoconfigure.security.SecurityProperties;, +import org.springframework.boot.builder.SpringApplicationBuilder;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.annotation.Order;, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, +import org.springframework.security.config.annotation.web.builders.HttpSecurity;, +import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;, +import org.springframework.stereotype.Controller;, +import org.springframework.web.bind.annotation.GetMapping;, +import org.springframework.web.bind.annotation.RequestMapping;, +import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;, +import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;, +, +@SpringBootApplication, +@Controller, +public class SampleWebSecureJdbcApplication extends WebMvcConfigurerAdapter {, +, +	@GetMapping("/"), +	public String home(Map<String, Object> model) {, +		model.put("message", "Hello World");, +		model.put("title", "Hello Home");, +		model.put("date", new Date());, +		return "home";, +	}, +, +	@RequestMapping("/foo"), +	public String foo() {, +		throw new RuntimeException("Expected exception in controller");, +	}, +, +	@Override, +	public void addViewControllers(ViewControllerRegistry registry) {, +		registry.addViewController("/login").setViewName("login");, +	}, +, +	public static void main(String[] args) throws Exception {, +		new SpringApplicationBuilder(SampleWebSecureJdbcApplication.class).run(args);, +	}, +, +	@Configuration, +	@Order(SecurityProperties.ACCESS_OVERRIDE_ORDER), +	protected static class ApplicationSecurity extends WebSecurityConfigurerAdapter {, +, +		@Autowired, +		private DataSource dataSource;, +, +		@Override, +		protected void configure(HttpSecurity http) throws Exception {, +			http.authorizeRequests().antMatchers("/css/**").permitAll().anyRequest(), +					.fullyAuthenticated().and().formLogin().loginPage("/login"), +					.failureUrl("/login?error").permitAll().and().logout().permitAll();, +		}, +, +		@Override, +		public void configure(AuthenticationManagerBuilder auth) throws Exception {]