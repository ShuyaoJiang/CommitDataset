[+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +	private Validator validator;, +	private volatile Validator localValidator;, +		if (this.validator == null) {, +			this.validator = getOptionalBean(VALIDATOR_BEAN_NAME, Validator.class);, +		}, +		freeLocalValidator();, +		freeLocalValidator();, +	}, +, +	private void freeLocalValidator() {, +		try {, +			Validator validator = this.localValidator;, +			this.localValidator = null;, +			if (validator != null) {, +				((DisposableBean) validator).destroy();, +			}, +		}, +		catch (Exception ex) {, +			throw new IllegalStateException(ex);, +		Validator validator = getValidator();, +		boolean supportsBean = (validator != null && validator.supports(bean.getClass()));, +			if (supportsBean) {, +				return new ChainingValidator(validator, (Validator) bean);, +			}, +		return (supportsBean ? validator : null);, +, +	private Validator getValidator() {, +		if (this.validator != null) {, +			return this.validator;, +		}, +		if (this.localValidator == null && isJsr303Present()) {, +			this.localValidator = new LocalValidatorFactory(), +					.run(this.applicationContext);, +		}, +		return this.localValidator;, +	}, +, +	private boolean isJsr303Present() {, +		for (String validatorClass : VALIDATOR_CLASSES) {, +			if (!ClassUtils.isPresent(validatorClass,, +					this.applicationContext.getClassLoader())) {, +				return false;, +			}, +		}, +		return true;, +	private static class LocalValidatorFactory {]