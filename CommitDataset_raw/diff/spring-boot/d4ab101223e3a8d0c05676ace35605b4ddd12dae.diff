[+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +					assertThat(contentOf(file)).contains("DROP TABLE PUBLIC.customer;");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +					assertThat(contentOf(file)).contains("DROP TABLE PUBLIC.customer;");, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestarterTests.java, +	public void addClassLoaderFiles() {, +		assertThat(classLoader.getResourceAsStream("f")).hasContent("abc");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +					assertThat(contentOf(file)).contains("DROP TABLE PUBLIC.customer;");, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestarterTests.java, +	public void addClassLoaderFiles() {, +		assertThat(classLoader.getResourceAsStream("f")).hasContent("abc");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/Verify.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +				String contents = contentOf(this.file);, +				String contents = contentOf(this.file);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +					assertThat(contentOf(file)).contains("DROP TABLE PUBLIC.customer;");, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestarterTests.java, +	public void addClassLoaderFiles() {, +		assertThat(classLoader.getResourceAsStream("f")).hasContent("abc");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/Verify.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +				String contents = contentOf(this.file);, +				String contents = contentOf(this.file);, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/ApplicationPidFileWriterTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(new File(System.getProperty("PIDFILE")))).isNotEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +					assertThat(contentOf(file)).contains("DROP TABLE PUBLIC.customer;");, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestarterTests.java, +	public void addClassLoaderFiles() {, +		assertThat(classLoader.getResourceAsStream("f")).hasContent("abc");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/Verify.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +				String contents = contentOf(this.file);, +				String contents = contentOf(this.file);, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/ApplicationPidFileWriterTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(new File(System.getProperty("PIDFILE")))).isNotEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystemTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +	public void exceptionsIncludeClassPackaging() {, +		String fileContents = contentOf(new File(tmpDir() + "/spring.log"));, +	public void customExceptionConversionWord() {, +			String fileContents = contentOf(new File(tmpDir() + "/spring.log"));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +					assertThat(contentOf(file)).contains("DROP TABLE PUBLIC.customer;");, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestarterTests.java, +	public void addClassLoaderFiles() {, +		assertThat(classLoader.getResourceAsStream("f")).hasContent("abc");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/Verify.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +				String contents = contentOf(this.file);, +				String contents = contentOf(this.file);, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/ApplicationPidFileWriterTests.java, + * Copyright 2012-2019 the original author or authors., +import static org.assertj.core.api.Assertions.contentOf;, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(new File(System.getProperty("PIDFILE")))).isNotEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +		assertThat(contentOf(file)).isNotEmpty();, +		assertThat(contentOf(file)).isEmpty();, +		assertThat(contentOf(file)).isNotEmpty();]