[+++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/WarCommandIT.java, + * Copyright 2012-2016 the original author or authors., +		assertThat(invocation.getOutput(), containsString("onStart error"));, +		assertThat(invocation.getOutput(), containsString("Tomcat started"));, +		assertThat(invocation.getOutput(),, +		assertThat(invocation.getOutput(),, +++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/WarCommandIT.java, + * Copyright 2012-2016 the original author or authors., +		assertThat(invocation.getOutput(), containsString("onStart error"));, +		assertThat(invocation.getOutput(), containsString("Tomcat started"));, +		assertThat(invocation.getOutput(),, +		assertThat(invocation.getOutput(),, +++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, + * Copyright 2012-2016 the original author or authors., +		private final StringBuffer combined = new StringBuffer();, +, +			this.streamReaders.add(new Thread(new StreamReadingRunnable(, +					this.process.getErrorStream(), this.err, this.combined)));, +			this.streamReaders.add(new Thread(new StreamReadingRunnable(, +					this.process.getInputStream(), this.out, this.combined)));, +		public String getOutput() {, +			return postProcessLines(getLines(this.combined));, +		}, +, +			private final StringBuffer[] outputs;, +			private StreamReadingRunnable(InputStream stream, StringBuffer... outputs) {, +				this.outputs = outputs;, +						for (StringBuffer output : this.outputs) {, +							output.append(new String(this.buffer, 0, read));, +						}, +++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/WarCommandIT.java, + * Copyright 2012-2016 the original author or authors., +		assertThat(invocation.getOutput(), containsString("onStart error"));, +		assertThat(invocation.getOutput(), containsString("Tomcat started"));, +		assertThat(invocation.getOutput(),, +		assertThat(invocation.getOutput(),, +++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, + * Copyright 2012-2016 the original author or authors., +		private final StringBuffer combined = new StringBuffer();, +, +			this.streamReaders.add(new Thread(new StreamReadingRunnable(, +					this.process.getErrorStream(), this.err, this.combined)));, +			this.streamReaders.add(new Thread(new StreamReadingRunnable(, +					this.process.getInputStream(), this.out, this.combined)));, +		public String getOutput() {, +			return postProcessLines(getLines(this.combined));, +		}, +, +			private final StringBuffer[] outputs;, +			private StreamReadingRunnable(InputStream stream, StringBuffer... outputs) {, +				this.outputs = outputs;, +						for (StringBuffer output : this.outputs) {, +							output.append(new String(this.buffer, 0, read));, +						}, +++ b/spring-boot-samples/spring-boot-sample-batch/src/main/java/sample/batch/SampleBatchApplication.java, + * Copyright 2012-2016 the original author or authors., +, +, +++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/WarCommandIT.java, + * Copyright 2012-2016 the original author or authors., +		assertThat(invocation.getOutput(), containsString("onStart error"));, +		assertThat(invocation.getOutput(), containsString("Tomcat started"));, +		assertThat(invocation.getOutput(),, +		assertThat(invocation.getOutput(),, +++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, + * Copyright 2012-2016 the original author or authors., +		private final StringBuffer combined = new StringBuffer();, +, +			this.streamReaders.add(new Thread(new StreamReadingRunnable(, +					this.process.getErrorStream(), this.err, this.combined)));, +			this.streamReaders.add(new Thread(new StreamReadingRunnable(, +					this.process.getInputStream(), this.out, this.combined)));, +		public String getOutput() {, +			return postProcessLines(getLines(this.combined));, +		}, +, +			private final StringBuffer[] outputs;, +			private StreamReadingRunnable(InputStream stream, StringBuffer... outputs) {, +				this.outputs = outputs;, +						for (StringBuffer output : this.outputs) {, +							output.append(new String(this.buffer, 0, read));, +						}, +++ b/spring-boot-samples/spring-boot-sample-batch/src/main/java/sample/batch/SampleBatchApplication.java, + * Copyright 2012-2016 the original author or authors., +, +, +++ b/spring-boot-samples/spring-boot-sample-simple/src/main/java/sample/simple/ExitException.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and]