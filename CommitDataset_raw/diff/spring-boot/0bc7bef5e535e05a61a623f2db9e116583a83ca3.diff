[+++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +++ b/ci/pipeline.yml, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +++ b/ci/pipeline.yml, +++ b/pom.xml, +		<revision>2.0.2.BUILD-SNAPSHOT</revision>, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +++ b/ci/pipeline.yml, +++ b/pom.xml, +		<revision>2.0.2.BUILD-SNAPSHOT</revision>, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +	private Object invoke(JmxOperation operation, Object[] params), +			throws MBeanException, ReflectionException {, +			Object result = operation, +					.invoke(new InvocationContext(SecurityContext.NONE, arguments));, +			throw new ReflectionException(new IllegalArgumentException(, +					ex.getMessage()), ex.getMessage());, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +++ b/ci/pipeline.yml, +++ b/pom.xml, +		<revision>2.0.2.BUILD-SNAPSHOT</revision>, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +	private Object invoke(JmxOperation operation, Object[] params), +			throws MBeanException, ReflectionException {, +			Object result = operation, +					.invoke(new InvocationContext(SecurityContext.NONE, arguments));, +			throw new ReflectionException(new IllegalArgumentException(, +					ex.getMessage()), ex.getMessage());, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanTests.java, +import org.springframework.boot.actuate.endpoint.InvalidEndpointRequestException;, +import org.springframework.boot.actuate.endpoint.InvocationContext;, +	public void invokeWhenOperationIsInvalidShouldThrowException(), +			throws MBeanException, ReflectionException {, +		TestJmxOperation operation = new TestJmxOperation() {, +			@Override, +			public Object invoke(InvocationContext context) {, +				throw new InvalidEndpointRequestException("test failure", "test");, +			}, +		};, +		TestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(operation);, +		EndpointMBean bean = new EndpointMBean(this.responseMapper, endpoint);]