[+++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	private static final String DEFAULT_SEARCH_LOCATIONS = "file:./,file:./config/,", +			+ "classpath:/,classpath:/config/";, +	 * Locations are considered in the order specified, with earlier items taking, +	 * precedence., +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	private static final String DEFAULT_SEARCH_LOCATIONS = "file:./,file:./config/,", +			+ "classpath:/,classpath:/config/";, +	 * Locations are considered in the order specified, with earlier items taking, +	 * precedence., +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +import java.io.File;, +import java.io.FileOutputStream;, +import java.io.OutputStream;, +import java.util.Properties;, +	public void localFileTakesPrecedenceOverClasspath() throws Exception {, +		File localFile = new File(new File("."), "application.properties");, +		assertThat(localFile.exists(), equalTo(false));, +		try {, +			Properties properties = new Properties();, +			properties.put("my.property", "fromlocalfile");, +			OutputStream out = new FileOutputStream(localFile);, +			try {, +				properties.store(out, "");, +			}, +			finally {, +				out.close();, +			}, +			this.initializer.onApplicationEvent(this.event);, +			String property = this.environment.getProperty("my.property");, +			assertThat(property, equalTo("fromlocalfile"));, +		}, +		finally {, +			localFile.delete();, +		}, +	}, +, +	@Test]