[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java, +		registration.setOrder(securityProperties.getFilter().getOrder());, +		if (securityProperties.getFilter().getDispatcherTypes() == null) {, +		return securityProperties.getFilter().getDispatcherTypes().stream(), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java, +		registration.setOrder(securityProperties.getFilter().getOrder());, +		if (securityProperties.getFilter().getDispatcherTypes() == null) {, +		return securityProperties.getFilter().getDispatcherTypes().stream(), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, + * Configuration properties for Spring Security., +@ConfigurationProperties(prefix = "spring.security"), +	private final Filter filter = new Filter();, +, +	public Filter getFilter() {, +		return this.filter;, +	}, +, +	public static class Filter {, +		private int order = DEFAULT_FILTER_ORDER;, +		private Set<DispatcherType> dispatcherTypes = new HashSet<>(Arrays, +		public int getOrder() {, +			return this.order;, +		public void setOrder(int order) {, +			this.order = order;, +		public Set<DispatcherType> getDispatcherTypes() {, +			return this.dispatcherTypes;, +		public void setDispatcherTypes(Set<DispatcherType> dispatcherTypes) {, +			this.dispatcherTypes = dispatcherTypes;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java, +		registration.setOrder(securityProperties.getFilter().getOrder());, +		if (securityProperties.getFilter().getDispatcherTypes() == null) {, +		return securityProperties.getFilter().getDispatcherTypes().stream(), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, + * Configuration properties for Spring Security., +@ConfigurationProperties(prefix = "spring.security"), +	private final Filter filter = new Filter();, +, +	public Filter getFilter() {, +		return this.filter;, +	}, +, +	public static class Filter {, +		private int order = DEFAULT_FILTER_ORDER;, +		private Set<DispatcherType> dispatcherTypes = new HashSet<>(Arrays, +		public int getOrder() {, +			return this.order;, +		public void setOrder(int order) {, +			this.order = order;, +		public Set<DispatcherType> getDispatcherTypes() {, +			return this.dispatcherTypes;, +		public void setDispatcherTypes(Set<DispatcherType> dispatcherTypes) {, +			this.dispatcherTypes = dispatcherTypes;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java, +		registration.setOrder(securityProperties.getFilter().getOrder());, +		if (securityProperties.getFilter().getDispatcherTypes() == null) {, +		return securityProperties.getFilter().getDispatcherTypes().stream(), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, + * Configuration properties for Spring Security., +@ConfigurationProperties(prefix = "spring.security"), +	private final Filter filter = new Filter();, +, +	public Filter getFilter() {, +		return this.filter;, +	}, +, +	public static class Filter {, +		private int order = DEFAULT_FILTER_ORDER;, +		private Set<DispatcherType> dispatcherTypes = new HashSet<>(Arrays, +		public int getOrder() {, +			return this.order;, +		public void setOrder(int order) {, +			this.order = order;, +		public Set<DispatcherType> getDispatcherTypes() {, +			return this.dispatcherTypes;, +		public void setDispatcherTypes(Set<DispatcherType> dispatcherTypes) {, +			this.dispatcherTypes = dispatcherTypes;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2RestOperationsConfiguration.java, +			registration.setOrder(security.getFilter().getOrder() - 10);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java, +		registration.setOrder(securityProperties.getFilter().getOrder());, +		if (securityProperties.getFilter().getDispatcherTypes() == null) {, +		return securityProperties.getFilter().getDispatcherTypes().stream(), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, + * Configuration properties for Spring Security., +@ConfigurationProperties(prefix = "spring.security"), +	private final Filter filter = new Filter();, +, +	public Filter getFilter() {, +		return this.filter;, +	}, +, +	public static class Filter {, +		private int order = DEFAULT_FILTER_ORDER;, +		private Set<DispatcherType> dispatcherTypes = new HashSet<>(Arrays, +		public int getOrder() {, +			return this.order;, +		public void setOrder(int order) {, +			this.order = order;]