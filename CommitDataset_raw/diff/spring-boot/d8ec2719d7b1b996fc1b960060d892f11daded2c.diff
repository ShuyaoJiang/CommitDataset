[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java, + * @author Christian Dupuis, +			JedisConnectionFactory factory = null;, +			if (this.properties.getPool() == null) {, +				factory = new JedisConnectionFactory();, +			else {, +				factory = new JedisConnectionFactory(jedisPoolConfig());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java, + * @author Christian Dupuis, +			JedisConnectionFactory factory = null;, +			if (this.properties.getPool() == null) {, +				factory = new JedisConnectionFactory();, +			else {, +				factory = new JedisConnectionFactory(jedisPoolConfig());, +			}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfigurationTests.java, + * @author Christian Dupuis, +	@Test, +	public void testRedisConfigurationWithPool() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context, "spring.redis.host:foo");, +		EnvironmentTestUtils.addEnvironment(this.context, "spring.redis.pool.max-idle:1");, +		this.context.register(RedisAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertEquals("foo", this.context.getBean(JedisConnectionFactory.class), +				.getHostName());, +		assertEquals(1, this.context.getBean(JedisConnectionFactory.class), +				.getPoolConfig().getMaxIdle());, +	}, +]