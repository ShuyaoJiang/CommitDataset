[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfigurationTests.java, +				.run((context) -> assertThat(context), +						.doesNotHaveBean(LoggersEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfigurationTests.java, +				.run((context) -> assertThat(context), +						.doesNotHaveBean(LoggersEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsRun.java, +				.filter((implementation) -> !keep.contains(implementation)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfigurationTests.java, +				.run((context) -> assertThat(context), +						.doesNotHaveBean(LoggersEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsRun.java, +				.filter((implementation) -> !keep.contains(implementation)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/RouterFunctionMetrics.java, +			return next.handle(request), +					.doOnSuccess((response) -> timer(start, request, response)), +					.doOnError((error) -> timer(start, request, null));]