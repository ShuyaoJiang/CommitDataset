[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +	 * OAuth client registrations., +		 * Client authentication method. May be left bank then using a pre-defined, +		 * Authorization grant type. May be left bank then using a pre-defined, +		 * Redirect URI. May be left bank then using a pre-defined provider., +		 * Authorization scopes. May be left bank then using a pre-defined provider., +		 * Client name. May be left bank then using a pre-defined provider., +		 * Authorization URI for the provider., +		 * Token URI for the provider., +		 * User info URI for the provider., +		 * Name of the attribute that will be used to extract the username from the, +		 * JWK set URI for the provider., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +	 * OAuth client registrations., +		 * Client authentication method. May be left bank then using a pre-defined, +		 * Authorization grant type. May be left bank then using a pre-defined, +		 * Redirect URI. May be left bank then using a pre-defined provider., +		 * Authorization scopes. May be left bank then using a pre-defined provider., +		 * Client name. May be left bank then using a pre-defined provider., +		 * Authorization URI for the provider., +		 * Token URI for the provider., +		 * User info URI for the provider., +		 * Name of the attribute that will be used to extract the username from the, +		 * JWK set URI for the provider., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +		copyIfNotNull(properties::getClientAuthenticationMethod,, +		copyIfNotNull(properties::getAuthorizationGrantType,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +	 * OAuth client registrations., +		 * Client authentication method. May be left bank then using a pre-defined, +		 * Authorization grant type. May be left bank then using a pre-defined, +		 * Redirect URI. May be left bank then using a pre-defined provider., +		 * Authorization scopes. May be left bank then using a pre-defined provider., +		 * Client name. May be left bank then using a pre-defined provider., +		 * Authorization URI for the provider., +		 * Token URI for the provider., +		 * User info URI for the provider., +		 * Name of the attribute that will be used to extract the username from the, +		 * JWK set URI for the provider., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +		copyIfNotNull(properties::getClientAuthenticationMethod,, +		copyIfNotNull(properties::getAuthorizationGrantType,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2WebSecurityConfiguration.java, +	static class OAuth2WebSecurityConfigurationAdapter extends WebSecurityConfigurerAdapter {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +	 * OAuth client registrations., +		 * Client authentication method. May be left bank then using a pre-defined, +		 * Authorization grant type. May be left bank then using a pre-defined, +		 * Redirect URI. May be left bank then using a pre-defined provider., +		 * Authorization scopes. May be left bank then using a pre-defined provider., +		 * Client name. May be left bank then using a pre-defined provider., +		 * Authorization URI for the provider., +		 * Token URI for the provider., +		 * User info URI for the provider., +		 * Name of the attribute that will be used to extract the username from the, +		 * JWK set URI for the provider., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +		copyIfNotNull(properties::getClientAuthenticationMethod,, +		copyIfNotNull(properties::getAuthorizationGrantType,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2WebSecurityConfiguration.java, +	static class OAuth2WebSecurityConfigurationAdapter extends WebSecurityConfigurerAdapter {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# SECURITY OAUTH2 CLIENT ({sc-spring-boot-autoconfigure}/security/oauth2/client/OAuth2ClientProperties.{sc-ext}[OAuth2ClientProperties]), +	spring.security.oauth2.client.provider.*= # OAuth provider details., +	spring.security.oauth2.client.registration.*= # OAuth client registrations., +]