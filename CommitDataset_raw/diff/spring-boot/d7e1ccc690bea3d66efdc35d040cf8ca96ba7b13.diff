[+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory, +			.getLog(ConfigurationPropertiesBindingPostProcessor.class);, +, +		logger.warn("Unable to obtain PropertySources from ", +				+ "PropertySourcesPlaceholderConfigurer or Environment");, +			if (beans.size() > 1 && logger.isWarnEnabled()) {, +				logger.warn("Multiple PropertySourcesPlaceholderConfigurer ", +						+ "beans registered " + beans.keySet(), +						+ ", falling back to Environment");, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory, +			.getLog(ConfigurationPropertiesBindingPostProcessor.class);, +, +		logger.warn("Unable to obtain PropertySources from ", +				+ "PropertySourcesPlaceholderConfigurer or Environment");, +			if (beans.size() > 1 && logger.isWarnEnabled()) {, +				logger.warn("Multiple PropertySourcesPlaceholderConfigurer ", +						+ "beans registered " + beans.keySet(), +						+ ", falling back to Environment");, +			}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessorTests.java, +import org.springframework.boot.testutil.InternalOutputCapture;, +	@Rule, +	public InternalOutputCapture output = new InternalOutputCapture();, +, +	@Test, +	public void multiplePropertySourcesPlaceholderConfigurer() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(MultiplePropertySourcesPlaceholderConfigurer.class);, +		this.context.refresh();, +		assertThat(this.output.toString()).contains(, +				"Multiple PropertySourcesPlaceholderConfigurer beans registered");, +	}, +, +	@Configuration, +	@EnableConfigurationProperties, +	public static class MultiplePropertySourcesPlaceholderConfigurer {, +, +		@Bean, +		public static PropertySourcesPlaceholderConfigurer configurer1() {, +			return new PropertySourcesPlaceholderConfigurer();, +		}, +, +		@Bean, +		public static PropertySourcesPlaceholderConfigurer configurer2() {, +			return new PropertySourcesPlaceholderConfigurer();, +		}, +, +	}, +]