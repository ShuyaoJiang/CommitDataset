[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor;, +		public SchedulerFactoryBeanCustomizer dataSourceCustomizer(, +				QuartzProperties properties, DataSource dataSource,, +				ObjectProvider<PlatformTransactionManager> transactionManager) {, +			return schedulerFactoryBean -> {, +				if (properties.getJobStoreType() == JobStoreType.JDBC) {, +					schedulerFactoryBean.setDataSource(dataSource);, +					PlatformTransactionManager txManager = transactionManager, +							.getIfUnique();, +					if (txManager != null) {, +						schedulerFactoryBean.setTransactionManager(txManager);, +					}, +				}, +			};, +		public static DatabaseInitializerSchedulerDependencyPostProcessor databaseInitializerSchedulerDependencyPostProcessor() {, +			return new DatabaseInitializerSchedulerDependencyPostProcessor();, +		private static class DatabaseInitializerSchedulerDependencyPostProcessor, +				extends AbstractDependsOnBeanFactoryPostProcessor {, +			DatabaseInitializerSchedulerDependencyPostProcessor() {, +				super(Scheduler.class, SchedulerFactoryBean.class,, +						"quartzDatabaseInitializer");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor;, +		public SchedulerFactoryBeanCustomizer dataSourceCustomizer(, +				QuartzProperties properties, DataSource dataSource,, +				ObjectProvider<PlatformTransactionManager> transactionManager) {, +			return schedulerFactoryBean -> {, +				if (properties.getJobStoreType() == JobStoreType.JDBC) {, +					schedulerFactoryBean.setDataSource(dataSource);, +					PlatformTransactionManager txManager = transactionManager, +							.getIfUnique();, +					if (txManager != null) {, +						schedulerFactoryBean.setTransactionManager(txManager);, +					}, +				}, +			};, +		public static DatabaseInitializerSchedulerDependencyPostProcessor databaseInitializerSchedulerDependencyPostProcessor() {, +			return new DatabaseInitializerSchedulerDependencyPostProcessor();, +		private static class DatabaseInitializerSchedulerDependencyPostProcessor, +				extends AbstractDependsOnBeanFactoryPostProcessor {, +			DatabaseInitializerSchedulerDependencyPostProcessor() {, +				super(Scheduler.class, SchedulerFactoryBean.class,, +						"quartzDatabaseInitializer");, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor;, +		public SchedulerFactoryBeanCustomizer dataSourceCustomizer(, +				QuartzProperties properties, DataSource dataSource,, +				ObjectProvider<PlatformTransactionManager> transactionManager) {, +			return schedulerFactoryBean -> {, +				if (properties.getJobStoreType() == JobStoreType.JDBC) {, +					schedulerFactoryBean.setDataSource(dataSource);, +					PlatformTransactionManager txManager = transactionManager, +							.getIfUnique();, +					if (txManager != null) {, +						schedulerFactoryBean.setTransactionManager(txManager);, +					}, +				}, +			};, +		public static DatabaseInitializerSchedulerDependencyPostProcessor databaseInitializerSchedulerDependencyPostProcessor() {, +			return new DatabaseInitializerSchedulerDependencyPostProcessor();, +		private static class DatabaseInitializerSchedulerDependencyPostProcessor, +				extends AbstractDependsOnBeanFactoryPostProcessor {, +			DatabaseInitializerSchedulerDependencyPostProcessor() {, +				super(Scheduler.class, SchedulerFactoryBean.class,, +						"quartzDatabaseInitializer");, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfigurationTests.java, +import org.springframework.context.annotation.Import;, +import org.springframework.util.Assert;, +	@Import(ComponentThatUsesScheduler.class), +	@Configuration, +		public ComponentThatUsesScheduler(Scheduler scheduler) {, +			Assert.notNull(scheduler, "Scheduler must not be null");, +			this.scheduler = scheduler;, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration.java, +import org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor;, +		public SchedulerFactoryBeanCustomizer dataSourceCustomizer(, +				QuartzProperties properties, DataSource dataSource,, +				ObjectProvider<PlatformTransactionManager> transactionManager) {, +			return schedulerFactoryBean -> {, +				if (properties.getJobStoreType() == JobStoreType.JDBC) {, +					schedulerFactoryBean.setDataSource(dataSource);, +					PlatformTransactionManager txManager = transactionManager, +							.getIfUnique();, +					if (txManager != null) {, +						schedulerFactoryBean.setTransactionManager(txManager);, +					}, +				}, +			};, +		public static DatabaseInitializerSchedulerDependencyPostProcessor databaseInitializerSchedulerDependencyPostProcessor() {, +			return new DatabaseInitializerSchedulerDependencyPostProcessor();, +		private static class DatabaseInitializerSchedulerDependencyPostProcessor, +				extends AbstractDependsOnBeanFactoryPostProcessor {, +			DatabaseInitializerSchedulerDependencyPostProcessor() {, +				super(Scheduler.class, SchedulerFactoryBean.class,, +						"quartzDatabaseInitializer");]