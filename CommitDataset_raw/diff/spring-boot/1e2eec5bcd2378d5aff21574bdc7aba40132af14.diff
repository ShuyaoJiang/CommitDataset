[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +			handleRunFailure(context, ex, exceptionReporters, listeners);, +, +		try {, +		}, +		catch (Throwable ex) {, +			handleRunFailure(context, ex, exceptionReporters, null);, +			throw new IllegalStateException(ex);, +		}, +			Throwable exception,, +			SpringApplicationRunListeners listeners) {, +				if (listeners != null) {, +			}, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +			handleRunFailure(context, ex, exceptionReporters, listeners);, +, +		try {, +		}, +		catch (Throwable ex) {, +			handleRunFailure(context, ex, exceptionReporters, null);, +			throw new IllegalStateException(ex);, +		}, +			Throwable exception,, +			SpringApplicationRunListeners listeners) {, +				if (listeners != null) {, +			}, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +	public void failureInReadyEventListenerCloseApplicationContext() {, +		SpringApplication application = new SpringApplication(ExampleConfig.class);, +		application.setWebApplicationType(WebApplicationType.NONE);, +		ExitCodeListener exitCodeListener = new ExitCodeListener();, +		application.addListeners(exitCodeListener);, +		@SuppressWarnings("unchecked"), +		ApplicationListener<SpringApplicationEvent> listener = mock(, +				ApplicationListener.class);, +		application.addListeners(listener);, +		ExitStatusException failure = new ExitStatusException();, +		willThrow(failure).given(listener), +				.onApplicationEvent(isA(ApplicationReadyEvent.class));, +		try {, +			application.run();, +			fail("Run should have failed with a RuntimeException");, +		}, +		catch (RuntimeException ex) {, +			verify(listener).onApplicationEvent(isA(ApplicationReadyEvent.class));, +			verify(listener, never()), +					.onApplicationEvent(isA(ApplicationFailedEvent.class));, +			assertThat(exitCodeListener.getExitCode()).isEqualTo(11);, +			assertThat(this.output.toString()).contains("Application run failed");, +		}, +	}, +, +	@Test, +		private Integer exitCode;, +		public Integer getExitCode() {]