[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchProperties.java, +		return this.schema;, +		return this.initializer;, +		return this.job;, +			return this.enabled;, +, +			return this.names;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchProperties.java, +		return this.schema;, +		return this.initializer;, +		return this.job;, +			return this.enabled;, +, +			return this.names;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration.java, +			resolver.setNormalPrefix(this.viewResolverProperties.getNormalPrefix());, +			resolver.setNormalSuffix(this.viewResolverProperties.getNormalSuffix());, +			resolver.setMobilePrefix(this.viewResolverProperties.getMobilePrefix());, +			resolver.setMobileSuffix(this.viewResolverProperties.getMobileSuffix());, +			resolver.setTabletPrefix(this.viewResolverProperties.getTabletPrefix());, +			resolver.setTabletSuffix(this.viewResolverProperties.getTabletSuffix());, +	@ConditionalOnProperty(value = "spring.mobile.devicedelegatingviewresolver.enabled", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchProperties.java, +		return this.schema;, +		return this.initializer;, +		return this.job;, +			return this.enabled;, +, +			return this.names;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration.java, +			resolver.setNormalPrefix(this.viewResolverProperties.getNormalPrefix());, +			resolver.setNormalSuffix(this.viewResolverProperties.getNormalSuffix());, +			resolver.setMobilePrefix(this.viewResolverProperties.getMobilePrefix());, +			resolver.setMobileSuffix(this.viewResolverProperties.getMobileSuffix());, +			resolver.setTabletPrefix(this.viewResolverProperties.getTabletPrefix());, +			resolver.setTabletSuffix(this.viewResolverProperties.getTabletSuffix());, +	@ConditionalOnProperty(value = "spring.mobile.devicedelegatingviewresolver.enabled", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverProperties.java, + * Properties for device view resolver., +		return this.normalPrefix;, +		return this.normalSuffix;, +		return this.mobilePrefix;, +		return this.mobileSuffix;, +		return this.tabletPrefix;, +		return this.tabletSuffix;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchProperties.java, +		return this.schema;, +		return this.initializer;, +		return this.job;, +			return this.enabled;, +, +			return this.names;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration.java, +			resolver.setNormalPrefix(this.viewResolverProperties.getNormalPrefix());, +			resolver.setNormalSuffix(this.viewResolverProperties.getNormalSuffix());, +			resolver.setMobilePrefix(this.viewResolverProperties.getMobilePrefix());, +			resolver.setMobileSuffix(this.viewResolverProperties.getMobileSuffix());, +			resolver.setTabletPrefix(this.viewResolverProperties.getTabletPrefix());, +			resolver.setTabletSuffix(this.viewResolverProperties.getTabletSuffix());, +	@ConditionalOnProperty(value = "spring.mobile.devicedelegatingviewresolver.enabled", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverProperties.java, + * Properties for device view resolver., +		return this.normalPrefix;, +		return this.normalSuffix;, +		return this.mobilePrefix;, +		return this.mobileSuffix;, +		return this.tabletPrefix;, +		return this.tabletSuffix;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/social/FacebookAutoConfiguration.java, +		private FacebookProperties properties;, +		@Override, +		protected ConnectionFactory<?> createConnectionFactory() {, +			return new FacebookConnectionFactory(this.properties.getAppId(),, +					this.properties.getAppSecret());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchProperties.java, +		return this.schema;, +		return this.initializer;, +		return this.job;, +			return this.enabled;, +, +			return this.names;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverAutoConfiguration.java, +			resolver.setNormalPrefix(this.viewResolverProperties.getNormalPrefix());, +			resolver.setNormalSuffix(this.viewResolverProperties.getNormalSuffix());, +			resolver.setMobilePrefix(this.viewResolverProperties.getMobilePrefix());, +			resolver.setMobileSuffix(this.viewResolverProperties.getMobileSuffix());, +			resolver.setTabletPrefix(this.viewResolverProperties.getTabletPrefix());, +			resolver.setTabletSuffix(this.viewResolverProperties.getTabletSuffix());, +	@ConditionalOnProperty(value = "spring.mobile.devicedelegatingviewresolver.enabled", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mobile/DeviceDelegatingViewResolverProperties.java, + * Properties for device view resolver., +		return this.normalPrefix;, +		return this.normalSuffix;, +		return this.mobilePrefix;, +		return this.mobileSuffix;]