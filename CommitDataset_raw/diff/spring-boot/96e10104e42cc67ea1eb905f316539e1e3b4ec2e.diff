[+++ b/spring-boot-cli/README.md, +, +## Packaging Your Application, +, +You can use the `jar` command to package your application into a, +self-contained executable jar file. For example:, +, +```, +$ spring jar my-app.jar *.groovy, +```, +, +The resulting jar will containe the classes produced by compiling, +the application and all of the application's dependencies such that, +it can then be run using `java -jar`. The jar file will also contain, +entries from the application's classpath. See the output of, +`spring help jar` for more information., +++ b/spring-boot-cli/README.md, +, +## Packaging Your Application, +, +You can use the `jar` command to package your application into a, +self-contained executable jar file. For example:, +, +```, +$ spring jar my-app.jar *.groovy, +```, +, +The resulting jar will containe the classes produced by compiling, +the application and all of the application's dependencies such that, +it can then be run using `java -jar`. The jar file will also contain, +entries from the application's classpath. See the output of, +`spring help jar` for more information., +++ b/spring-boot-cli/pom.xml, +			<groupId>${project.groupId}</groupId>, +			<artifactId>spring-boot-loader-tools</artifactId>, +			<version>${project.version}</version>, +		</dependency>, +		<dependency>, +			<groupId>${project.groupId}</groupId>, +			<artifactId>spring-boot-loader</artifactId>, +			<version>${project.version}</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-cli/README.md, +, +## Packaging Your Application, +, +You can use the `jar` command to package your application into a, +self-contained executable jar file. For example:, +, +```, +$ spring jar my-app.jar *.groovy, +```, +, +The resulting jar will containe the classes produced by compiling, +the application and all of the application's dependencies such that, +it can then be run using `java -jar`. The jar file will also contain, +entries from the application's classpath. See the output of, +`spring help jar` for more information., +++ b/spring-boot-cli/pom.xml, +			<groupId>${project.groupId}</groupId>, +			<artifactId>spring-boot-loader-tools</artifactId>, +			<version>${project.version}</version>, +		</dependency>, +		<dependency>, +			<groupId>${project.groupId}</groupId>, +			<artifactId>spring-boot-loader</artifactId>, +			<version>${project.version}</version>, +			<scope>provided</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-cli/src/it/java/org/springframework/boot/cli/CommandLineIT.java, +		assertThat(cli.getStandardOutputLines().size(), equalTo(7));, +++ b/spring-boot-cli/README.md, +, +## Packaging Your Application, +, +You can use the `jar` command to package your application into a, +self-contained executable jar file. For example:, +, +```, +$ spring jar my-app.jar *.groovy, +```, +, +The resulting jar will containe the classes produced by compiling, +the application and all of the application's dependencies such that, +it can then be run using `java -jar`. The jar file will also contain, +entries from the application's classpath. See the output of, +`spring help jar` for more information., +++ b/spring-boot-cli/pom.xml, +			<groupId>${project.groupId}</groupId>, +			<artifactId>spring-boot-loader-tools</artifactId>, +			<version>${project.version}</version>, +		</dependency>, +		<dependency>, +			<groupId>${project.groupId}</groupId>, +			<artifactId>spring-boot-loader</artifactId>, +			<version>${project.version}</version>, +			<scope>provided</scope>]