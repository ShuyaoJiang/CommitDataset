[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +import java.lang.reflect.InvocationTargetException;, +, +		T factory = createConnectionFactoryInstance(factoryClass);, +		Packages packages = this.properties.getPackages();, +		if (packages.getTrustAll() != null) {, +			factory.setTrustAllPackages(packages.getTrustAll());, +		}, +		if (!packages.getTrusted().isEmpty()) {, +			factory.setTrustedPackages(packages.getTrusted());, +		}, +		return factory;, +	}, +, +	private <T extends ActiveMQConnectionFactory> T createConnectionFactoryInstance(, +			Class<T> factoryClass) throws InstantiationException, IllegalAccessException,, +					InvocationTargetException, NoSuchMethodException {, +			return factoryClass.getConstructor(String.class, String.class, String.class), +		return factoryClass.getConstructor(String.class).newInstance(brokerUrl);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +import java.lang.reflect.InvocationTargetException;, +, +		T factory = createConnectionFactoryInstance(factoryClass);, +		Packages packages = this.properties.getPackages();, +		if (packages.getTrustAll() != null) {, +			factory.setTrustAllPackages(packages.getTrustAll());, +		}, +		if (!packages.getTrusted().isEmpty()) {, +			factory.setTrustedPackages(packages.getTrusted());, +		}, +		return factory;, +	}, +, +	private <T extends ActiveMQConnectionFactory> T createConnectionFactoryInstance(, +			Class<T> factoryClass) throws InstantiationException, IllegalAccessException,, +					InvocationTargetException, NoSuchMethodException {, +			return factoryClass.getConstructor(String.class, String.class, String.class), +		return factoryClass.getConstructor(String.class).newInstance(brokerUrl);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +		@SuppressWarnings("deprecation")]