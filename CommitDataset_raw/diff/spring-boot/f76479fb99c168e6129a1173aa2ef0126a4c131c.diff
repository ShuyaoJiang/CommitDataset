[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, +import org.eclipse.jetty.server.handler.ContextHandler;, + * @author Kristine Jetzke, +						.info("Jetty started on port(s) " + getActualPortsDescription(), +								+ " with context path " + getContextPath());, +	private String getContextPath() {, +		return Arrays.stream(this.server.getHandlers()), +				.filter(ContextHandler.class::isInstance), +				.map(handler -> ((ContextHandler) handler).getContextPath()), +				.collect(Collectors.joining(" "));, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, +import org.eclipse.jetty.server.handler.ContextHandler;, + * @author Kristine Jetzke, +						.info("Jetty started on port(s) " + getActualPortsDescription(), +								+ " with context path " + getContextPath());, +	private String getContextPath() {, +		return Arrays.stream(this.server.getHandlers()), +				.filter(ContextHandler.class::isInstance), +				.map(handler -> ((ContextHandler) handler).getContextPath()), +				.collect(Collectors.joining(" "));, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatWebServer.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, + * @author Kristine Jetzke, +						.info("Tomcat started on port(s): " + getPortsDescription(true), +								+ " with context path " + getContextPath());, +	private String getContextPath() {, +		return Arrays.stream(this.tomcat.getHost().findChildren()), +				.filter(TomcatEmbeddedContext.class::isInstance), +				.map(context -> ((TomcatEmbeddedContext) context).getPath()), +				.collect(Collectors.joining(" "));, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, +import org.eclipse.jetty.server.handler.ContextHandler;, + * @author Kristine Jetzke, +						.info("Jetty started on port(s) " + getActualPortsDescription(), +								+ " with context path " + getContextPath());, +	private String getContextPath() {, +		return Arrays.stream(this.server.getHandlers()), +				.filter(ContextHandler.class::isInstance), +				.map(handler -> ((ContextHandler) handler).getContextPath()), +				.collect(Collectors.joining(" "));, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatWebServer.java, +import java.util.Arrays;, +import java.util.stream.Collectors;, + * @author Kristine Jetzke, +						.info("Tomcat started on port(s): " + getPortsDescription(true), +								+ " with context path " + getContextPath());, +	private String getContextPath() {, +		return Arrays.stream(this.tomcat.getHost().findChildren()), +				.filter(TomcatEmbeddedContext.class::isInstance), +				.map(context -> ((TomcatEmbeddedContext) context).getPath()), +				.collect(Collectors.joining(" "));, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServer.java, + * @author Kristine Jetzke, +						.info("Undertow started on port(s) " + getPortsDescription(), +								+ " with context path " + this.contextPath);]