[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +		if (listener.getAcknowledgeMode() != null) {, +			factory.setSessionAcknowledgeMode(listener.getAcknowledgeMode().getMode());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +		if (listener.getAcknowledgeMode() != null) {, +			factory.setSessionAcknowledgeMode(listener.getAcknowledgeMode().getMode());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsProperties.java, +		 * Acknowledge mode of the container. By default, the listener is, +		private AcknowledgeMode acknowledgeMode;, +		public AcknowledgeMode getAcknowledgeMode() {, +			return acknowledgeMode;, +		public void setAcknowledgeMode(AcknowledgeMode acknowledgeMode) {, +			this.acknowledgeMode = acknowledgeMode;, +	 * Translate the acknowledge modes defined on the {@link javax.jms.Session}., +	public enum AcknowledgeMode {, +		AcknowledgeMode(int mode) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +		if (listener.getAcknowledgeMode() != null) {, +			factory.setSessionAcknowledgeMode(listener.getAcknowledgeMode().getMode());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsProperties.java, +		 * Acknowledge mode of the container. By default, the listener is, +		private AcknowledgeMode acknowledgeMode;, +		public AcknowledgeMode getAcknowledgeMode() {, +			return acknowledgeMode;, +		public void setAcknowledgeMode(AcknowledgeMode acknowledgeMode) {, +			this.acknowledgeMode = acknowledgeMode;, +	 * Translate the acknowledge modes defined on the {@link javax.jms.Session}., +	public enum AcknowledgeMode {, +		AcknowledgeMode(int mode) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsAutoConfigurationTests.java, +				"spring.jms.listener.acknowledgeMode=client",, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +		if (listener.getAcknowledgeMode() != null) {, +			factory.setSessionAcknowledgeMode(listener.getAcknowledgeMode().getMode());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsProperties.java, +		 * Acknowledge mode of the container. By default, the listener is, +		private AcknowledgeMode acknowledgeMode;, +		public AcknowledgeMode getAcknowledgeMode() {, +			return acknowledgeMode;, +		public void setAcknowledgeMode(AcknowledgeMode acknowledgeMode) {, +			this.acknowledgeMode = acknowledgeMode;, +	 * Translate the acknowledge modes defined on the {@link javax.jms.Session}., +	public enum AcknowledgeMode {, +		AcknowledgeMode(int mode) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsAutoConfigurationTests.java, +				"spring.jms.listener.acknowledgeMode=client",, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.jms.listener.acknowledge-mode= # session acknowledgment mode, +	spring.jms.listener.max-concurrency= # maximum number of concurrent consumers]