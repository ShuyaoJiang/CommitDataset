[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.ehcache</groupId>, +			<artifactId>ehcache</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.ehcache</groupId>, +			<artifactId>ehcache</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.ehcache.jsr107.EhcacheCachingProvider;, +	public void ehcacheCacheWithCaches() {, +	public void ehcacheCacheWithCustomizers() {, +				"allCacheManagerCustomizer", "ehcacheCacheManagerCustomizer");, +	public void ehcacheCacheWithConfig() {, +	public void ehcacheCacheWithExistingCacheManager() {, +	public void ehcache3AsJCacheWithCaches() {, +		String cachingProviderFqn = EhcacheCachingProvider.class.getName();, +		load(DefaultCacheConfiguration.class, "spring.cache.type=jcache",, +				"spring.cache.jcache.provider=" + cachingProviderFqn,, +				"spring.cache.cacheNames[0]=foo", "spring.cache.cacheNames[1]=bar");, +		JCacheCacheManager cacheManager = validateCacheManager(JCacheCacheManager.class);, +		assertThat(cacheManager.getCacheNames()).containsOnly("foo", "bar");, +	}, +, +	@Test, +	public void ehcache3AsJCacheWithConfig() throws IOException {, +		String cachingProviderFqn = EhcacheCachingProvider.class.getName();, +		String configLocation = "ehcache3.xml";, +		load(DefaultCacheConfiguration.class, "spring.cache.type=jcache",, +				"spring.cache.jcache.provider=" + cachingProviderFqn,, +				"spring.cache.jcache.config=" + configLocation);, +		JCacheCacheManager cacheManager = validateCacheManager(JCacheCacheManager.class);, +, +		Resource configResource = new ClassPathResource(configLocation);, +		assertThat(cacheManager.getCacheManager().getURI()), +				.isEqualTo(configResource.getURI());, +		assertThat(cacheManager.getCacheNames()).containsOnly("foo", "bar");, +	}, +, +	@Test, +		public CacheManagerCustomizer<EhCacheCacheManager> ehcacheCacheManagerCustomizer() {, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.ehcache</groupId>, +			<artifactId>ehcache</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.ehcache.jsr107.EhcacheCachingProvider;, +	public void ehcacheCacheWithCaches() {, +	public void ehcacheCacheWithCustomizers() {, +				"allCacheManagerCustomizer", "ehcacheCacheManagerCustomizer");, +	public void ehcacheCacheWithConfig() {, +	public void ehcacheCacheWithExistingCacheManager() {, +	public void ehcache3AsJCacheWithCaches() {, +		String cachingProviderFqn = EhcacheCachingProvider.class.getName();, +		load(DefaultCacheConfiguration.class, "spring.cache.type=jcache",, +				"spring.cache.jcache.provider=" + cachingProviderFqn,, +				"spring.cache.cacheNames[0]=foo", "spring.cache.cacheNames[1]=bar");, +		JCacheCacheManager cacheManager = validateCacheManager(JCacheCacheManager.class);, +		assertThat(cacheManager.getCacheNames()).containsOnly("foo", "bar");, +	}, +, +	@Test, +	public void ehcache3AsJCacheWithConfig() throws IOException {, +		String cachingProviderFqn = EhcacheCachingProvider.class.getName();, +		String configLocation = "ehcache3.xml";, +		load(DefaultCacheConfiguration.class, "spring.cache.type=jcache",, +				"spring.cache.jcache.provider=" + cachingProviderFqn,, +				"spring.cache.jcache.config=" + configLocation);, +		JCacheCacheManager cacheManager = validateCacheManager(JCacheCacheManager.class);, +, +		Resource configResource = new ClassPathResource(configLocation);, +		assertThat(cacheManager.getCacheManager().getURI()), +				.isEqualTo(configResource.getURI());, +		assertThat(cacheManager.getCacheNames()).containsOnly("foo", "bar");, +	}, +, +	@Test, +		public CacheManagerCustomizer<EhCacheCacheManager> ehcacheCacheManagerCustomizer() {, +++ b/spring-boot-autoconfigure/src/test/resources/ehcache3.xml, +<config, +		xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance', +		xmlns='http://www.ehcache.org/v3', +		xmlns:jsr107='http://www.ehcache.org/v3/jsr107', +		xsi:schemaLocation=", +        http://www.ehcache.org/v3 http://www.ehcache.org/schema/ehcache-core-3.1.xsd, +        http://www.ehcache.org/v3/jsr107 http://www.ehcache.org/schema/ehcache-107-ext-3.1.xsd">, +, +	<cache-template name="example">, +		<heap unit="entries">200</heap>, +	</cache-template>, +, +	<cache alias="foo" uses-template="example">, +		<expiry>, +			<ttl unit="seconds">600</ttl>]