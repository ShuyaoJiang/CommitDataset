[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.java, +import com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +		private static final Log logger = LogFactory, +				.getLog(HikariDataSourceMetricsConfiguration.class);, +, +		private final MeterRegistry registry;, +, +		HikariDataSourceMetricsConfiguration(MeterRegistry registry) {, +			this.registry = registry;, +		}, +, +		@Autowired, +		public void bindMetricsRegistryToHikariDataSources(, +				Collection<DataSource> dataSources) {, +			dataSources.stream().filter(HikariDataSource.class::isInstance), +					.map(HikariDataSource.class::cast), +					.forEach(this::bindMetricsRegistryToHikariDataSource);, +		}, +, +		private void bindMetricsRegistryToHikariDataSource(HikariDataSource hikari) {, +			if (hikari.getMetricRegistry() == null, +					&& hikari.getMetricsTrackerFactory() == null) {, +				try {, +					hikari.setMetricsTrackerFactory(, +							new MicrometerMetricsTrackerFactory(this.registry));, +				}, +				catch (Exception ex) {, +					logger.warn("Failed to bind Hikari metrics: " + ex.getMessage());, +				}, +			}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.java, +import com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +		private static final Log logger = LogFactory, +				.getLog(HikariDataSourceMetricsConfiguration.class);, +, +		private final MeterRegistry registry;, +, +		HikariDataSourceMetricsConfiguration(MeterRegistry registry) {, +			this.registry = registry;, +		}, +, +		@Autowired, +		public void bindMetricsRegistryToHikariDataSources(, +				Collection<DataSource> dataSources) {, +			dataSources.stream().filter(HikariDataSource.class::isInstance), +					.map(HikariDataSource.class::cast), +					.forEach(this::bindMetricsRegistryToHikariDataSource);, +		}, +, +		private void bindMetricsRegistryToHikariDataSource(HikariDataSource hikari) {, +			if (hikari.getMetricRegistry() == null, +					&& hikari.getMetricsTrackerFactory() == null) {, +				try {, +					hikari.setMetricsTrackerFactory(, +							new MicrometerMetricsTrackerFactory(this.registry));, +				}, +				catch (Exception ex) {, +					logger.warn("Failed to bind Hikari metrics: " + ex.getMessage());, +				}, +			}, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.java, +import com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +		private static final Log logger = LogFactory, +				.getLog(HikariDataSourceMetricsConfiguration.class);, +, +		private final MeterRegistry registry;, +, +		HikariDataSourceMetricsConfiguration(MeterRegistry registry) {, +			this.registry = registry;, +		}, +, +		@Autowired, +		public void bindMetricsRegistryToHikariDataSources(, +				Collection<DataSource> dataSources) {, +			dataSources.stream().filter(HikariDataSource.class::isInstance), +					.map(HikariDataSource.class::cast), +					.forEach(this::bindMetricsRegistryToHikariDataSource);, +		}, +, +		private void bindMetricsRegistryToHikariDataSource(HikariDataSource hikari) {, +			if (hikari.getMetricRegistry() == null, +					&& hikari.getMetricsTrackerFactory() == null) {, +				try {, +					hikari.setMetricsTrackerFactory(, +							new MicrometerMetricsTrackerFactory(this.registry));, +				}, +				catch (Exception ex) {, +					logger.warn("Failed to bind Hikari metrics: " + ex.getMessage());, +				}, +			}, +++ /dev/null, +++ b/spring-boot-project/spring-boot-dependencies/pom.xml, +		<hikaricp.version>3.2.0</hikaricp.version>]