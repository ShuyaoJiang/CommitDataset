[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.java, +import reactor.netty.http.client.HttpClient;, +		HttpClient client = HttpClient.create(), +				.secure((sslContextSpec) -> sslContextSpec.forClient(), +						.sslContext((builder) -> builder.sslProvider(SslProvider.JDK), +		return new ReactorClientHttpConnector(client);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.java, +import reactor.netty.http.client.HttpClient;, +		HttpClient client = HttpClient.create(), +				.secure((sslContextSpec) -> sslContextSpec.forClient(), +						.sslContext((builder) -> builder.sslProvider(SslProvider.JDK), +		return new ReactorClientHttpConnector(client);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import reactor.netty.http.HttpResources;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.java, +import reactor.netty.http.client.HttpClient;, +		HttpClient client = HttpClient.create(), +				.secure((sslContextSpec) -> sslContextSpec.forClient(), +						.sslContext((builder) -> builder.sslProvider(SslProvider.JDK), +		return new ReactorClientHttpConnector(client);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import reactor.netty.http.HttpResources;, +++ b/spring-boot-project/spring-boot-actuator/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.java, +import reactor.netty.http.client.HttpClient;, +		HttpClient client = HttpClient.create(), +				.secure((sslContextSpec) -> sslContextSpec.forClient(), +						.sslContext((builder) -> builder.sslProvider(SslProvider.JDK), +		return new ReactorClientHttpConnector(client);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import reactor.netty.http.HttpResources;, +++ b/spring-boot-project/spring-boot-actuator/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.java, +import reactor.netty.http.client.HttpClient;, +		HttpClient client = HttpClient.create(), +				.secure((sslContextSpec) -> sslContextSpec.forClient(), +						.sslContext((builder) -> builder.sslProvider(SslProvider.JDK), +		return new ReactorClientHttpConnector(client);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import reactor.netty.http.HttpResources;, +++ b/spring-boot-project/spring-boot-actuator/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import reactor.netty.http.server.HttpServer;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.java, +import reactor.netty.http.client.HttpClient;, +		HttpClient client = HttpClient.create(), +				.secure((sslContextSpec) -> sslContextSpec.forClient(), +						.sslContext((builder) -> builder.sslProvider(SslProvider.JDK), +		return new ReactorClientHttpConnector(client);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import reactor.netty.http.HttpResources;, +++ b/spring-boot-project/spring-boot-actuator/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import reactor.netty.http.server.HttpServer;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.java, +import reactor.netty.http.client.HttpClient;, +		HttpClient client = HttpClient.create(), +				.secure((sslContextSpec) -> sslContextSpec.forClient(), +						.sslContext((builder) -> builder.sslProvider(SslProvider.JDK), +		return new ReactorClientHttpConnector(client);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import reactor.netty.http.HttpResources;, +++ b/spring-boot-project/spring-boot-actuator/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import reactor.netty.http.server.HttpServer;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/BasicErrorController.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/error/BasicErrorControllerIntegrationTests.java, +				.accept(MediaType.APPLICATION_JSON), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>io.projectreactor.netty</groupId>]