[+++ b/.bomr/bomr.yaml, +      - project: derby, +        versions:, +          # 10.15 requires Java 9, +          - '[10.15,)', +++ b/.bomr/bomr.yaml, +      - project: derby, +        versions:, +          # 10.15 requires Java 9, +          - '[10.15,)', +++ b/CONTRIBUTING.adoc, +https://maven.apache.org/run-maven/index.html[Apache Maven] on JDK 1.8 or above. We, +include '`Maven Wrapper`' scripts (`./mvnw` or `mvnw.bat`) that you can run rather than, +needing to install Maven locally., +++ b/.bomr/bomr.yaml, +      - project: derby, +        versions:, +          # 10.15 requires Java 9, +          - '[10.15,)', +++ b/CONTRIBUTING.adoc, +https://maven.apache.org/run-maven/index.html[Apache Maven] on JDK 1.8 or above. We, +include '`Maven Wrapper`' scripts (`./mvnw` or `mvnw.bat`) that you can run rather than, +needing to install Maven locally., +++ b/ci/scripts/build-integration-tests.sh, +run_maven -f spring-boot-tests/spring-boot-integration-tests/pom.xml clean install -U -Dfull -Drepository=file://${repository}, +++ b/.bomr/bomr.yaml, +      - project: derby, +        versions:, +          # 10.15 requires Java 9, +          - '[10.15,)', +++ b/CONTRIBUTING.adoc, +https://maven.apache.org/run-maven/index.html[Apache Maven] on JDK 1.8 or above. We, +include '`Maven Wrapper`' scripts (`./mvnw` or `mvnw.bat`) that you can run rather than, +needing to install Maven locally., +++ b/ci/scripts/build-integration-tests.sh, +run_maven -f spring-boot-tests/spring-boot-integration-tests/pom.xml clean install -U -Dfull -Drepository=file://${repository}, +++ b/ci/scripts/promote.sh, +	POST "${ARTIFACTORY_SERVER}/api/build/promote/${buildName}/${buildNumber}" > /dev/null || {, +		result=$( curl -s -u ${ARTIFACTORY_USERNAME}:${ARTIFACTORY_PASSWORD}  -f  "${ARTIFACTORY_SERVER}/api/build/${buildName}/${buildNumber}" ), +		resultRepo=$( echo $result | jq -r '.buildInfo.statuses[0].repository' ), +		if [[ $resultRepo = "libs-release-local" ]]; then, +			echo "Already promoted", +		else, +			echo "Failed to promote" >&2, +			exit 1, +		fi, +	}, +, +	WAIT_TIME=20, +	WAIT_ATTEMPTS=120, +, +	artifacts_published=false, +	retry_counter=0, +	while [ $artifacts_published == "false" ] && [ $retry_counter -lt $WAIT_ATTEMPTS ]; do, +		result=$( curl -s -f -u ${BINTRAY_USERNAME}:${BINTRAY_API_KEY} https://api.bintray.com/packages/"${BINTRAY_SUBJECT}"/"${BINTRAY_REPO}"/"${groupId}" ), +		if [ $? -eq 0 ]; then, +				artifacts_published=true, +		fi, +		retry_counter=$(( retry_counter + 1 )), +	if [[ $artifacts_published = "false" ]]; then, +++ b/.bomr/bomr.yaml, +      - project: derby, +        versions:, +          # 10.15 requires Java 9, +          - '[10.15,)', +++ b/CONTRIBUTING.adoc, +https://maven.apache.org/run-maven/index.html[Apache Maven] on JDK 1.8 or above. We, +include '`Maven Wrapper`' scripts (`./mvnw` or `mvnw.bat`) that you can run rather than, +needing to install Maven locally., +++ b/ci/scripts/build-integration-tests.sh, +run_maven -f spring-boot-tests/spring-boot-integration-tests/pom.xml clean install -U -Dfull -Drepository=file://${repository}, +++ b/ci/scripts/promote.sh, +	POST "${ARTIFACTORY_SERVER}/api/build/promote/${buildName}/${buildNumber}" > /dev/null || {, +		result=$( curl -s -u ${ARTIFACTORY_USERNAME}:${ARTIFACTORY_PASSWORD}  -f  "${ARTIFACTORY_SERVER}/api/build/${buildName}/${buildNumber}" ), +		resultRepo=$( echo $result | jq -r '.buildInfo.statuses[0].repository' ), +		if [[ $resultRepo = "libs-release-local" ]]; then, +			echo "Already promoted", +		else, +			echo "Failed to promote" >&2, +			exit 1, +		fi, +	}, +, +	WAIT_TIME=20, +	WAIT_ATTEMPTS=120, +, +	artifacts_published=false, +	retry_counter=0, +	while [ $artifacts_published == "false" ] && [ $retry_counter -lt $WAIT_ATTEMPTS ]; do, +		result=$( curl -s -f -u ${BINTRAY_USERNAME}:${BINTRAY_API_KEY} https://api.bintray.com/packages/"${BINTRAY_SUBJECT}"/"${BINTRAY_REPO}"/"${groupId}" ), +		if [ $? -eq 0 ]; then, +				artifacts_published=true, +		fi, +		retry_counter=$(( retry_counter + 1 )), +	if [[ $artifacts_published = "false" ]]; then, +++ b/git/hooks/forward-merge, +#!/usr/bin/ruby, +require 'json', +require 'net/http', +require 'yaml']