[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +			String url = "jdbc:hsqldb:mem:test-" + UUID.randomUUID();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +			String url = "jdbc:hsqldb:mem:test-" + UUID.randomUUID();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetrics.java, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +			registerGauge(registry, handlerMetrics, tagsWithHandler,, +	private <T> void registerGauge(MeterRegistry registry, T object, Iterable<Tag> tags,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +			String url = "jdbc:hsqldb:mem:test-" + UUID.randomUUID();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetrics.java, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +			registerGauge(registry, handlerMetrics, tagsWithHandler,, +	private <T> void registerGauge(MeterRegistry registry, T object, Iterable<Tag> tags,, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthTests.java, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +			String url = "jdbc:hsqldb:mem:test-" + UUID.randomUUID();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetrics.java, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +			registerGauge(registry, handlerMetrics, tagsWithHandler,, +	private <T> void registerGauge(MeterRegistry registry, T object, Iterable<Tag> tags,, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthTests.java, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/EnvironmentInfoContributorTests.java, +		assertThat(actual.getDetails()).isEmpty();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +			String url = "jdbc:hsqldb:mem:test-" + UUID.randomUUID();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetrics.java, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +			registerGauge(registry, handlerMetrics, tagsWithHandler,, +	private <T> void registerGauge(MeterRegistry registry, T object, Iterable<Tag> tags,, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthTests.java, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/EnvironmentInfoContributorTests.java, +		assertThat(actual.getDetails()).isEmpty();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterTests.java, + * Tests for {@link WebMvcMetricsFilter}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +			String url = "jdbc:hsqldb:mem:test-" + UUID.randomUUID();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetrics.java, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +			registerGauge(registry, handlerMetrics, tagsWithHandler,, +	private <T> void registerGauge(MeterRegistry registry, T object, Iterable<Tag> tags,, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthTests.java, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/info/EnvironmentInfoContributorTests.java, +		assertThat(actual.getDetails()).isEmpty();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterTests.java, + * Tests for {@link WebMvcMetricsFilter}., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +				"com.ibm.websphere.jtaextensions.ExtendedJTATransaction",, +			// containers (e.g. JBoss EAP 6) wrap it in the superclass LinkageError, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +			String url = "jdbc:hsqldb:mem:test-" + UUID.randomUUID();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetrics.java, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +		registerGauge(registry, this.configurer, this.tags,, +			registerGauge(registry, handlerMetrics, tagsWithHandler,, +	private <T> void registerGauge(MeterRegistry registry, T object, Iterable<Tag> tags,, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthTests.java, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();, +		assertThat(health.getDetails()).isEmpty();]