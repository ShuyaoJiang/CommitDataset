[+++ b/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityScanRegistrar.java, +import org.springframework.core.Ordered;, +			SmartInitializingSingleton, Ordered {, +		@Override, +		public int getOrder() {, +			return 0;, +		}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityScanRegistrar.java, +import org.springframework.core.Ordered;, +			SmartInitializingSingleton, Ordered {, +		@Override, +		public int getOrder() {, +			return 0;, +		}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/orm/jpa/EntityScanTests.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.beans.factory.config.BeanPostProcessor;, +	@Test, +	public void userDeclaredBeanPostProcessorWithEntityManagerDependencyDoesNotPreventConfigurationOfPackagesToScan() {, +		this.context = new AnnotationConfigApplicationContext(, +				BeanPostProcessorConfiguration.class, BaseConfig.class);, +		assertSetPackagesToScan("com.mycorp.entity");, +	}, +, +	@Configuration, +	@EntityScan("com.mycorp.entity"), +	static class BeanPostProcessorConfiguration {, +, +		@Autowired, +		private EntityManagerFactory entityManagerFactory;, +, +		@Bean, +		public BeanPostProcessor beanPostProcessor() {, +			return new BeanPostProcessor() {, +, +				@Override, +				public Object postProcessBeforeInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +, +				@Override, +				public Object postProcessAfterInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +			};, +, +		}, +	}, +]