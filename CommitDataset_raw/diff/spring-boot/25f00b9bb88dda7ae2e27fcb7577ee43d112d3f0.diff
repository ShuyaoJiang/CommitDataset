[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +		if (retry.isEnabled()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +		if (retry.isEnabled()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +import org.springframework.boot.context.properties.NestedConfigurationProperty;, +		@NestedConfigurationProperty, +		@NestedConfigurationProperty, +		private boolean enabled;, +		 * Maximum number of attempts to publish or deliver a message., +		 * Interval between the first and second attempt to publish or deliver, +		 * a message., +		 * Maximum interval between attempts., +		public boolean isEnabled() {, +			return this.enabled;, +		public void setEnabled(boolean enabled) {, +			this.enabled = enabled;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +		if (retry.isEnabled()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +import org.springframework.boot.context.properties.NestedConfigurationProperty;, +		@NestedConfigurationProperty, +		@NestedConfigurationProperty, +		private boolean enabled;, +		 * Maximum number of attempts to publish or deliver a message., +		 * Interval between the first and second attempt to publish or deliver, +		 * a message., +		 * Maximum interval between attempts., +		public boolean isEnabled() {, +			return this.enabled;, +		public void setEnabled(boolean enabled) {, +			this.enabled = enabled;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer.java, +		if (retryConfig.isEnabled()) {, +			RetryInterceptorBuilder<?> builder = (retryConfig.isStateless() ?, +					RetryInterceptorBuilder.stateless() : RetryInterceptorBuilder.stateful());, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +		if (retry.isEnabled()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +import org.springframework.boot.context.properties.NestedConfigurationProperty;, +		@NestedConfigurationProperty, +		@NestedConfigurationProperty, +		private boolean enabled;, +		 * Maximum number of attempts to publish or deliver a message., +		 * Interval between the first and second attempt to publish or deliver, +		 * a message., +		 * Maximum interval between attempts., +		public boolean isEnabled() {, +			return this.enabled;, +		public void setEnabled(boolean enabled) {, +			this.enabled = enabled;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer.java, +		if (retryConfig.isEnabled()) {, +			RetryInterceptorBuilder<?> builder = (retryConfig.isStateless() ?, +					RetryInterceptorBuilder.stateless() : RetryInterceptorBuilder.stateful());, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +		load(TestConfiguration.class, "spring.rabbitmq.template.retry.enabled:true",, +				"spring.rabbitmq.template.retry.maxAttempts:4",, +				"spring.rabbitmq.template.retry.initialInterval:2000",, +				"spring.rabbitmq.template.retry.maxInterval:5000",, +				"spring.rabbitmq.listener.retry.enabled:true",, +				"spring.rabbitmq.listener.retry.maxAttempts:4",, +				"spring.rabbitmq.listener.retry.initialInterval:2000",, +				"spring.rabbitmq.listener.retry.maxInterval:5000",, +				"spring.rabbitmq.listener.defaultRequeueRejected:false",, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +		if (retry.isEnabled()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +import org.springframework.boot.context.properties.NestedConfigurationProperty;, +		@NestedConfigurationProperty, +		@NestedConfigurationProperty, +		private boolean enabled;, +		 * Maximum number of attempts to publish or deliver a message., +		 * Interval between the first and second attempt to publish or deliver, +		 * a message., +		 * Maximum interval between attempts., +		public boolean isEnabled() {, +			return this.enabled;, +		public void setEnabled(boolean enabled) {, +			this.enabled = enabled;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer.java, +		if (retryConfig.isEnabled()) {, +			RetryInterceptorBuilder<?> builder = (retryConfig.isStateless() ?, +					RetryInterceptorBuilder.stateless() : RetryInterceptorBuilder.stateful());, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +		load(TestConfiguration.class, "spring.rabbitmq.template.retry.enabled:true",, +				"spring.rabbitmq.template.retry.maxAttempts:4",, +				"spring.rabbitmq.template.retry.initialInterval:2000",, +				"spring.rabbitmq.template.retry.maxInterval:5000",, +				"spring.rabbitmq.listener.retry.enabled:true",, +				"spring.rabbitmq.listener.retry.maxAttempts:4",, +				"spring.rabbitmq.listener.retry.initialInterval:2000",, +				"spring.rabbitmq.listener.retry.maxInterval:5000",, +				"spring.rabbitmq.listener.defaultRequeueRejected:false",, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.rabbitmq.listener.retry.enabled= # Whether or not publishing retries are enabled., +	spring.rabbitmq.listener.retry.initial-interval=1000 # Interval between the first and second attempt to deliver a message.]