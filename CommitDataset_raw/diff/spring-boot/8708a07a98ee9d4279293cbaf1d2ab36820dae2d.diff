[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration.java, +			template.getInterceptors().add(new AcceptJsonRequestInterceptor());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration.java, +			template.getInterceptors().add(new AcceptJsonRequestInterceptor());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +import java.io.IOException;, +import org.springframework.http.HttpRequest;, +import org.springframework.http.client.ClientHttpRequestExecution;, +import org.springframework.http.client.ClientHttpRequestInterceptor;, +import org.springframework.http.client.ClientHttpResponse;, +import org.springframework.security.oauth2.client.OAuth2RestTemplate;, +import org.springframework.stereotype.Component;, +	public void userInfoWithCustomizer() {, +		EnvironmentTestUtils.addEnvironment(this.environment,, +				"security.oauth2.resource.userInfoUri:http://example.com",, +				"security.oauth2.resource.tokenInfoUri:http://example.com",, +				"security.oauth2.resource.preferTokenInfo:false");, +		this.context = new SpringApplicationBuilder(ResourceConfiguration.class,, +				Customizer.class).environment(this.environment).web(false).run();, +		UserInfoTokenServices services = this.context, +				.getBean(UserInfoTokenServices.class);, +		assertNotNull(services);, +	}, +, +	@Test, +	@Component, +	protected static class Customizer implements UserInfoRestTemplateCustomizer {, +, +		@Override, +		public void customize(OAuth2RestTemplate template) {, +			template.getInterceptors().add(new ClientHttpRequestInterceptor() {, +, +				@Override, +				public ClientHttpResponse intercept(HttpRequest request, byte[] body,, +						ClientHttpRequestExecution execution) throws IOException {, +					return execution.execute(request, body);, +				}, +			});, +		}, +, +	}, +]