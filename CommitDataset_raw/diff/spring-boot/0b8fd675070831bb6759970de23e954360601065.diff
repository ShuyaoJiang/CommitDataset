[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/InitCommand.java, + * @author Eddú Meléndez, +		private OptionSpec<String> language;, +, +		private OptionSpec<String> groupId;, +, +		private OptionSpec<String> artifactId;, +, +		private OptionSpec<String> name;, +, +		private OptionSpec<String> version;, +, +		private OptionSpec<String> description;, +, +			this.language = option(Arrays.asList("language", "lang"),, +				"Programming Language to use (for example 'java')"), +				.withRequiredArg();, +			this.groupId = option(Arrays.asList("groupId", "g"),, +				"The project group that produced the dependency (for example 'org.test')"), +				.withRequiredArg();, +			this.artifactId = option(Arrays.asList("artifactId", "a"),, +				"The unique id for an artifact produced by the project group (for example 'test')"), +				.withRequiredArg();, +			this.name = option(Arrays.asList("name", "n"),, +				"The full name of the project."), +				.withRequiredArg();, +			this.version = option(Arrays.asList("version", "v"),, +				"The version of the dependency (for example '0.0.1-SNAPSHOT')"), +				.withRequiredArg();, +			this.description = option(Arrays.asList("description", "des"),, +				"A detailed description of the project"), +				.withRequiredArg();, +			if(options.has(this.language)) {, +				request.setLanguage(options.valueOf(this.language));, +			}, +			if(options.has(this.groupId)) {, +				request.setGroupId(options.valueOf(this.groupId));, +			}, +			if (options.has(this.artifactId)) {, +				request.setArtifactId(options.valueOf(this.artifactId));, +			}, +			if(options.has(this.name)) {, +				request.setName(options.valueOf(this.name));, +			}, +			if(options.has(this.version)) {, +				request.setVersion(options.valueOf(this.version));, +			}, +			if(options.has(this.description)) {, +				request.setDescription(options.valueOf(this.description));, +			}, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/InitCommand.java, + * @author Eddú Meléndez, +		private OptionSpec<String> language;, +, +		private OptionSpec<String> groupId;, +, +		private OptionSpec<String> artifactId;, +, +		private OptionSpec<String> name;, +, +		private OptionSpec<String> version;, +, +		private OptionSpec<String> description;, +, +			this.language = option(Arrays.asList("language", "lang"),, +				"Programming Language to use (for example 'java')"), +				.withRequiredArg();, +			this.groupId = option(Arrays.asList("groupId", "g"),, +				"The project group that produced the dependency (for example 'org.test')"), +				.withRequiredArg();, +			this.artifactId = option(Arrays.asList("artifactId", "a"),, +				"The unique id for an artifact produced by the project group (for example 'test')"), +				.withRequiredArg();, +			this.name = option(Arrays.asList("name", "n"),, +				"The full name of the project."), +				.withRequiredArg();, +			this.version = option(Arrays.asList("version", "v"),, +				"The version of the dependency (for example '0.0.1-SNAPSHOT')"), +				.withRequiredArg();, +			this.description = option(Arrays.asList("description", "des"),, +				"A detailed description of the project"), +				.withRequiredArg();, +			if(options.has(this.language)) {, +				request.setLanguage(options.valueOf(this.language));, +			}, +			if(options.has(this.groupId)) {, +				request.setGroupId(options.valueOf(this.groupId));, +			}, +			if (options.has(this.artifactId)) {, +				request.setArtifactId(options.valueOf(this.artifactId));, +			}, +			if(options.has(this.name)) {, +				request.setName(options.valueOf(this.name));, +			}, +			if(options.has(this.version)) {, +				request.setVersion(options.valueOf(this.version));, +			}, +			if(options.has(this.description)) {, +				request.setDescription(options.valueOf(this.description));, +			}]