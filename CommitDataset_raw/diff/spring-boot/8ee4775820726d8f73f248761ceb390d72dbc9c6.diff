[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityDataConfiguration.java, +@ConditionalOnClass(SecurityEvaluationContextExtension.class), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityDataConfiguration.java, +@ConditionalOnClass(SecurityEvaluationContextExtension.class), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java, +		Map<String, OAuth2ClientProperties.BaseClientRegistration> registrations = new HashMap<>();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityDataConfiguration.java, +@ConditionalOnClass(SecurityEvaluationContextExtension.class), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java, +		Map<String, OAuth2ClientProperties.BaseClientRegistration> registrations = new HashMap<>();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfigurationTests.java, +					GenericObjectPoolConfig<?> poolConfig = getPoolingClientConfiguration(, +							cf).getPoolConfig();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityDataConfiguration.java, +@ConditionalOnClass(SecurityEvaluationContextExtension.class), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java, +		Map<String, OAuth2ClientProperties.BaseClientRegistration> registrations = new HashMap<>();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfigurationTests.java, +					GenericObjectPoolConfig<?> poolConfig = getPoolingClientConfiguration(, +							cf).getPoolConfig();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityDataConfiguration.java, +@ConditionalOnClass(SecurityEvaluationContextExtension.class), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/ClientsConfiguredCondition.java, +		Map<String, OAuth2ClientProperties.BaseClientRegistration> registrations = new HashMap<>();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfigurationTests.java, +					GenericObjectPoolConfig<?> poolConfig = getPoolingClientConfiguration(, +							cf).getPoolConfig();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/kafka/KafkaStreamsBeanExample.java, +			stream.map((k, v) -> new KeyValue<>(k, v.toUpperCase())).to("ks1Out",, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, +import io.micrometer.core.instrument.Meter.Id;, + * {@link MeterFilter} to log only once a warning message and deny a {@link Meter}, + * {@link Id}., +	public MeterFilterReply accept(Id id) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +	@SuppressWarnings("unchecked")]