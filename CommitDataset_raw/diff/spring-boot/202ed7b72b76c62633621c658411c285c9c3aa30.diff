[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.java, +	 * URI to ship metrics to., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.java, +	 * URI to ship metrics to., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	management.metrics.export.wavefront.uri= # URI to ship metrics to., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.java, +	 * URI to ship metrics to., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	management.metrics.export.wavefront.uri= # URI to ship metrics to., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +- https://www.wavefront.com/[Wavefront], +[[production-ready-metrics-export-wavefront]], +==== Wavefront, +Wavefront registry pushes metrics to Wavefront periodically. If you are exporting, +metrics to {micrometer-registry-documentation}/wavefront[Wavefront] directly, your API, +token must be provided:, +, +[source,properties,indent=0], +----, +	management.metrics.export.wavefront.api-token=YOUR_API_TOKEN, +----, +, +Alternatively, you may use a a Wavefront sidecar or an internal proxy set up in your, +environment that forwards metrics data to the Wavefront API host:, +, +[source,properties,indent=0], +----, +	management.metrics.export.uri=proxy://localhost:7828, +----, +, +TIP: If publishing metrics to a Wavefront proxy (as described in, +https://docs.wavefront.com/proxies_installing.html[the documentation]), the host must be, +in the `proxy://HOST:PORT` format., +, +You can also change the interval at which metrics are sent to Wavefront:, +, +[source,properties,indent=0], +----, +	management.metrics.export.wavefront.steps=30s, +----, +, +, +]