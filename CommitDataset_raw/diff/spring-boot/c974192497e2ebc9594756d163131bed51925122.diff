[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/WebFluxTags.java, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +	 * @return the outcome tag derived from the response status, +		if (status != null) {, +			if (status.is1xxInformational()) {, +				return OUTCOME_INFORMATIONAL;, +			}, +			if (status.is2xxSuccessful()) {, +			if (status.is3xxRedirection()) {, +				return OUTCOME_REDIRECTION;, +			}, +			if (status.is4xxClientError()) {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/WebFluxTags.java, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +	 * @return the outcome tag derived from the response status, +		if (status != null) {, +			if (status.is1xxInformational()) {, +				return OUTCOME_INFORMATIONAL;, +			}, +			if (status.is2xxSuccessful()) {, +			if (status.is3xxRedirection()) {, +				return OUTCOME_REDIRECTION;, +			}, +			if (status.is4xxClientError()) {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +			if (status < 200) {, +				return OUTCOME_INFORMATIONAL;, +			}, +			if (status < 300) {, +			if (status < 400) {, +				return OUTCOME_REDIRECTION;, +			}, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/WebFluxTags.java, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +	 * @return the outcome tag derived from the response status, +		if (status != null) {, +			if (status.is1xxInformational()) {, +				return OUTCOME_INFORMATIONAL;, +			}, +			if (status.is2xxSuccessful()) {, +			if (status.is3xxRedirection()) {, +				return OUTCOME_REDIRECTION;, +			}, +			if (status.is4xxClientError()) {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +			if (status < 200) {, +				return OUTCOME_INFORMATIONAL;, +			}, +			if (status < 300) {, +			if (status < 400) {, +				return OUTCOME_REDIRECTION;, +			}, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/WebMvcTagsTests.java, +	public void outcomeTagIsInformationalWhenResponseIs1xx() {, +		this.response.setStatus(100);, +		Tag tag = WebMvcTags.outcome(this.response);, +		assertThat(tag.getValue()).isEqualTo("INFORMATIONAL");, +	}, +, +	@Test, +	public void outcomeTagIsSuccessWhenResponseIs2xx() {, +	public void outcomeTagIsRedirectionWhenResponseIs3xx() {, +		this.response.setStatus(301);, +		Tag tag = WebMvcTags.outcome(this.response);, +		assertThat(tag.getValue()).isEqualTo("REDIRECTION");, +	}, +, +	@Test, +	public void outcomeTagIsClientErrorWhenResponseIs4xx() {, +	public void outcomeTagIsServerErrorWhenResponseIs5xx() {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/WebFluxTags.java, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +	 * @return the outcome tag derived from the response status, +		if (status != null) {, +			if (status.is1xxInformational()) {, +				return OUTCOME_INFORMATIONAL;, +			}, +			if (status.is2xxSuccessful()) {, +			if (status.is3xxRedirection()) {, +				return OUTCOME_REDIRECTION;]