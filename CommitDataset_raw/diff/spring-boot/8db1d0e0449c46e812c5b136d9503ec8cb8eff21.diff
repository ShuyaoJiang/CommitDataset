[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +			if (ClassUtils.isPresent("org.apache.jasper.compiler.JspConfig",, +					context.getClassLoader())) {, +				if (WebMvcAutoConfiguration.templateExists(context.getEnvironment(),, +						context.getResourceLoader(), "error")) {, +					return ConditionOutcome.noMatch("JSP template found for error view");, +				}, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +			if (ClassUtils.isPresent("org.apache.jasper.compiler.JspConfig",, +					context.getClassLoader())) {, +				if (WebMvcAutoConfiguration.templateExists(context.getEnvironment(),, +						context.getResourceLoader(), "error")) {, +					return ConditionOutcome.noMatch("JSP template found for error view");, +				}, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMetricRepository.java, +import java.util.Date;, +		String[] vals = v.split("@");, +		Double value = Double.valueOf(vals[0]);, +		Date timestamp = vals.length > 1 ? new Date(Long.valueOf(vals[1])) : new Date();, +		return new Metric<Double>(nameFor(redisKey), value, timestamp);, +		return String.valueOf(entity.getValue()) + "@" + entity.getTimestamp().getTime();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +			if (ClassUtils.isPresent("org.apache.jasper.compiler.JspConfig",, +					context.getClassLoader())) {, +				if (WebMvcAutoConfiguration.templateExists(context.getEnvironment(),, +						context.getResourceLoader(), "error")) {, +					return ConditionOutcome.noMatch("JSP template found for error view");, +				}, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMetricRepository.java, +import java.util.Date;, +		String[] vals = v.split("@");, +		Double value = Double.valueOf(vals[0]);, +		Date timestamp = vals.length > 1 ? new Date(Long.valueOf(vals[1])) : new Date();, +		return new Metric<Double>(nameFor(redisKey), value, timestamp);, +		return String.valueOf(entity.getValue()) + "@" + entity.getTimestamp().getTime();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMultiMetricRepository.java, +import java.util.Date;, +		String[] vals = v.split("@");, +		Double value = Double.valueOf(vals[0]);, +		Date timestamp = vals.length > 1 ? new Date(Long.valueOf(vals[1])) : new Date();, +		return new Metric<Double>(nameFor(redisKey), value, timestamp);, +		return String.valueOf(entity.getValue() + "@" + entity.getTimestamp().getTime());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +			if (ClassUtils.isPresent("org.apache.jasper.compiler.JspConfig",, +					context.getClassLoader())) {, +				if (WebMvcAutoConfiguration.templateExists(context.getEnvironment(),, +						context.getResourceLoader(), "error")) {, +					return ConditionOutcome.noMatch("JSP template found for error view");, +				}, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMetricRepository.java, +import java.util.Date;, +		String[] vals = v.split("@");, +		Double value = Double.valueOf(vals[0]);, +		Date timestamp = vals.length > 1 ? new Date(Long.valueOf(vals[1])) : new Date();, +		return new Metric<Double>(nameFor(redisKey), value, timestamp);, +		return String.valueOf(entity.getValue()) + "@" + entity.getTimestamp().getTime();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMultiMetricRepository.java, +import java.util.Date;, +		String[] vals = v.split("@");, +		Double value = Double.valueOf(vals[0]);, +		Date timestamp = vals.length > 1 ? new Date(Long.valueOf(vals[1])) : new Date();, +		return new Metric<Double>(nameFor(redisKey), value, timestamp);, +		return String.valueOf(entity.getValue() + "@" + entity.getTimestamp().getTime());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.core.env.Environment;, +	public static String DEFAULT_PREFIX = "";, +	public static String DEFAULT_SUFFIX = "";, +, +	public static boolean templateExists(Environment environment,, +			ResourceLoader resourceLoader, String view) {, +		String prefix = environment.getProperty("spring.view.prefix",, +				WebMvcAutoConfiguration.DEFAULT_PREFIX);, +		String suffix = environment.getProperty("spring.view.suffix",, +				WebMvcAutoConfiguration.DEFAULT_SUFFIX);, +		return resourceLoader.getResource(prefix + view + suffix).exists();, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +			if (ClassUtils.isPresent("org.apache.jasper.compiler.JspConfig",, +					context.getClassLoader())) {, +				if (WebMvcAutoConfiguration.templateExists(context.getEnvironment(),, +						context.getResourceLoader(), "error")) {, +					return ConditionOutcome.noMatch("JSP template found for error view");, +				}, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMetricRepository.java, +import java.util.Date;, +		String[] vals = v.split("@");, +		Double value = Double.valueOf(vals[0]);, +		Date timestamp = vals.length > 1 ? new Date(Long.valueOf(vals[1])) : new Date();, +		return new Metric<Double>(nameFor(redisKey), value, timestamp);, +		return String.valueOf(entity.getValue()) + "@" + entity.getTimestamp().getTime();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMultiMetricRepository.java, +import java.util.Date;, +		String[] vals = v.split("@");, +		Double value = Double.valueOf(vals[0]);]