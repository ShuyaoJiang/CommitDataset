[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/Sanitizer.java, +		setKeysToSanitize(new String[] { "password", "secret", "key", "vcap_services", ".*credentials.*" });, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/Sanitizer.java, +		setKeysToSanitize(new String[] { "password", "secret", "key", "vcap_services", ".*credentials.*" });, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/EnvironmentEndpointTests.java, +		System.setProperty("mySecret", "123456");, +		System.setProperty("vcap_services", "123456");, +		assertEquals("******",, +				((Map<String, Object>) env.get("systemProperties")).get("mySecret"));, +		assertEquals("******",, +				((Map<String, Object>) env.get("systemProperties")).get("vcap_services"));, +	}, +, +	@SuppressWarnings("unchecked"), +	@Test, +	public void testKeySanitizationCredentialsPattern() throws Exception {, +		System.setProperty("vcap.services.amqp-free.credentials.uri", "123456");, +		System.setProperty("credentials.http_api_uri", "123456");, +		System.setProperty("vcap.services.cleardb-free.credentials", "123456");, +		System.setProperty("vcap.mycredentials.uri", "123456");, +		EnvironmentEndpoint report = getEndpointBean();, +		Map<String, Object> env = report.invoke();, +		assertEquals("******",, +				((Map<String, Object>) env.get("systemProperties")).get("vcap.services.amqp-free.credentials.uri"));, +		assertEquals("******",, +				((Map<String, Object>) env.get("systemProperties")).get("credentials.http_api_uri"));, +		assertEquals("******",, +				((Map<String, Object>) env.get("systemProperties")).get("vcap.services.cleardb-free.credentials"));, +		assertEquals("******",, +				((Map<String, Object>) env.get("systemProperties")).get("vcap.mycredentials.uri"));, +]