[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +		@ConditionalOnExpression("'${shell.auth:spring}' == 'spring'"), +			// In case shell.auth is set to spring and roles are configured using, +			// shell.auth.spring.roles the below default role will be overridden by, +			// ConfigurationProperties., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +		@ConditionalOnExpression("'${shell.auth:spring}' == 'spring'"), +			// In case shell.auth is set to spring and roles are configured using, +			// shell.auth.spring.roles the below default role will be overridden by, +			// ConfigurationProperties., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/properties/ShellProperties.java, +	private static Log logger = LogFactory.getLog(ShellProperties.class);, +, +	private boolean defaultAuth = true;, +, +		this.defaultAuth = false;, +, +		validateCrshShellConfig(properties);, +, +	 * Basic validation of applied CRaSH shell configuration., +	 */, +	protected void validateCrshShellConfig(Properties properties) {, +		String finalAuth = properties.getProperty("crash.auth");, +		if (!this.defaultAuth && !this.auth.equals(finalAuth)) {, +			logger.warn(String.format(, +					"Shell authentication fell back to method '%s' opposed to ", +							+ "configured method '%s'. Please check your classpath.",, +					finalAuth, this.auth));, +		}, +	}, +, +	/**]