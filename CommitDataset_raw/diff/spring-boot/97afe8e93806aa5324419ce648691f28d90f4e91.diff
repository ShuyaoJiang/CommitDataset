[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.java, +import java.util.Random;, +	private final Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf;, +	 * @param containsDescendantOf function used to implement, +			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {, +		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf, +				: (n) -> ConfigurationPropertyState.UNKNOWN);, +		return this.containsDescendantOf.apply(name);, +				getContainsDescendantOfForSource(source));, +	private static Function<ConfigurationPropertyName, ConfigurationPropertyState> getContainsDescendantOfForSource(, +		if (source.getSource() instanceof Random) {, +			return SpringConfigurationPropertySource::containsDescendantOfForRandom;, +	private static ConfigurationPropertyState containsDescendantOfForRandom(, +			ConfigurationPropertyName name) {, +		if (name.isAncestorOf(RANDOM) || name.equals(RANDOM)) {, +			return ConfigurationPropertyState.PRESENT;, +		}, +		return ConfigurationPropertyState.ABSENT;, +	}, +]