[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsConfiguration.java, +import org.springframework.util.StringUtils;, +				&& StringUtils.endsWithIgnoreCase(beanName, DATASOURCE_SUFFIX)) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsConfiguration.java, +import org.springframework.util.StringUtils;, +				&& StringUtils.endsWithIgnoreCase(beanName, DATASOURCE_SUFFIX)) {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.metrics.export.atlas.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.atlas.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.datadog.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.datadog.host-tag= # Tag that will be mapped to "host" when shipping metrics to Datadog. Can be omitted if host should be omitted on publishing., +	spring.metrics.export.datadog.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.influx.db= # Tag that will be mapped to "host" when shipping metrics to Influx. Can be omitted if host should be omitted on publishing., +	spring.metrics.export.influx.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.influx.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.simple.step=10s # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.statsd.flavor=datadog # StatsD line protocol to use., +	spring.metrics.export.statsd.polling-frequency=10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed, it is sent to the StatsD server., +	spring.metrics.export.statsd.queue-size=2147483647 # Maximum size of the queue of items waiting to be sent to the StatsD server., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsConfiguration.java, +import org.springframework.util.StringUtils;, +				&& StringUtils.endsWithIgnoreCase(beanName, DATASOURCE_SUFFIX)) {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.metrics.export.atlas.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.atlas.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.datadog.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.datadog.host-tag= # Tag that will be mapped to "host" when shipping metrics to Datadog. Can be omitted if host should be omitted on publishing., +	spring.metrics.export.datadog.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.influx.db= # Tag that will be mapped to "host" when shipping metrics to Influx. Can be omitted if host should be omitted on publishing., +	spring.metrics.export.influx.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.influx.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.simple.step=10s # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.statsd.flavor=datadog # StatsD line protocol to use., +	spring.metrics.export.statsd.polling-frequency=10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed, it is sent to the StatsD server., +	spring.metrics.export.statsd.queue-size=2147483647 # Maximum size of the queue of items waiting to be sent to the StatsD server., +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/Layouts.java, +		String lowerCaseFileName = file.getName().toLowerCase();, +		if (lowerCaseFileName.endsWith(".jar")) {, +		if (lowerCaseFileName.endsWith(".war")) {, +		if (file.isDirectory() || lowerCaseFileName.endsWith(".zip")) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsConfiguration.java, +import org.springframework.util.StringUtils;, +				&& StringUtils.endsWithIgnoreCase(beanName, DATASOURCE_SUFFIX)) {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.metrics.export.atlas.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.atlas.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.datadog.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.datadog.host-tag= # Tag that will be mapped to "host" when shipping metrics to Datadog. Can be omitted if host should be omitted on publishing., +	spring.metrics.export.datadog.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.influx.db= # Tag that will be mapped to "host" when shipping metrics to Influx. Can be omitted if host should be omitted on publishing., +	spring.metrics.export.influx.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.influx.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.simple.step=10s # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.statsd.flavor=datadog # StatsD line protocol to use., +	spring.metrics.export.statsd.polling-frequency=10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed, it is sent to the StatsD server., +	spring.metrics.export.statsd.queue-size=2147483647 # Maximum size of the queue of items waiting to be sent to the StatsD server., +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/Layouts.java, +		String lowerCaseFileName = file.getName().toLowerCase();, +		if (lowerCaseFileName.endsWith(".jar")) {, +		if (lowerCaseFileName.endsWith(".war")) {, +		if (file.isDirectory() || lowerCaseFileName.endsWith(".zip")) {, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +		String lowerCasePath = path.toLowerCase();, +		if (lowerCasePath.endsWith(".jar") || lowerCasePath.endsWith(".zip")) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * omitted if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsConfiguration.java, +import org.springframework.util.StringUtils;, +				&& StringUtils.endsWithIgnoreCase(beanName, DATASOURCE_SUFFIX)) {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.metrics.export.atlas.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.atlas.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.datadog.enabled= # Whether exporting of metrics to this backend is enabled., +	spring.metrics.export.datadog.host-tag= # Tag that will be mapped to "host" when shipping metrics to Datadog. Can be omitted if host should be omitted on publishing., +	spring.metrics.export.datadog.step=1m # Step size (i.e. reporting frequency) to use., +	spring.metrics.export.influx.db= # Tag that will be mapped to "host" when shipping metrics to Influx. Can be omitted if host should be omitted on publishing.]