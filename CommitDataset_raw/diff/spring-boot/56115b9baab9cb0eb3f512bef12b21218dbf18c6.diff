[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/PublicMetricsAutoConfigurationTests.java, +import static org.hamcrest.Matchers.hasKey;, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertThat;, +import static org.junit.Assert.fail;, +import static org.mockito.BDDMockito.given;, +import static org.mockito.Mockito.mock;, +, +import org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext;, +import org.springframework.boot.context.embedded.MockEmbeddedServletContainerFactory;, +import org.springframework.context.ConfigurableApplicationContext;, +	private ConfigurableApplicationContext context;, +		loadWeb(TomcatConfiguration.class);, +	private void loadWeb(Class<?>... config) {, +		AnnotationConfigEmbeddedWebApplicationContext context = new AnnotationConfigEmbeddedWebApplicationContext();, +			context.register(config);, +		context.register(DataSourcePoolMetadataProvidersConfiguration.class,, +				CacheStatisticsAutoConfiguration.class,, +				PublicMetricsAutoConfiguration.class, MockEmbeddedServletContainerFactory.class);, +		context.refresh();, +		this.context = context;, +	}, +, +	private void load(Class<?>... config) {, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +		if (config.length > 0) {, +			context.register(config);, +		}, +		context.register(DataSourcePoolMetadataProvidersConfiguration.class,, +		context.refresh();, +		this.context = context;]