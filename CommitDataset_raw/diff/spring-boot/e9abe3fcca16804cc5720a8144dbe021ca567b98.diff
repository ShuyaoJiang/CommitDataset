[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes());, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +	 * Set whether to include the "exception" attribute., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +	 * Set whether to include the "exception" attribute., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorAttributes.java, + * <li>exception - The class name of the root exception (if configured)</li>, +	 * @param includeException whether to include the "exception" attribute, +	/**, +	 * Create a new {@link DefaultErrorAttributes} instance that does not, +	 * include the "exception" attribute., +	 */, +	public DefaultErrorAttributes() {, +		this(false);, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +	 * Set whether to include the "exception" attribute., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorAttributes.java, + * <li>exception - The class name of the root exception (if configured)</li>, +	 * @param includeException whether to include the "exception" attribute, +	/**, +	 * Create a new {@link DefaultErrorAttributes} instance that does not, +	 * include the "exception" attribute., +	 */, +	public DefaultErrorAttributes() {, +		this(false);, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorAttributesTests.java, +	private DefaultErrorAttributes errorAttributes = new DefaultErrorAttributes();, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +	 * Set whether to include the "exception" attribute., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorAttributes.java, + * <li>exception - The class name of the root exception (if configured)</li>, +	 * @param includeException whether to include the "exception" attribute, +	/**, +	 * Create a new {@link DefaultErrorAttributes} instance that does not, +	 * include the "exception" attribute., +	 */, +	public DefaultErrorAttributes() {, +		this(false);, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorAttributesTests.java, +	private DefaultErrorAttributes errorAttributes = new DefaultErrorAttributes();, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.error.include-exception=false # Set whether to include the "exception" attribute.]