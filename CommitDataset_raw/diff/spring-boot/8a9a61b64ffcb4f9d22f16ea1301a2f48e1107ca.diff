[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AbstractJmxEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AbstractJmxEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AuditEventsJmxEndpoint.java, +import org.springframework.util.StringUtils;, +			if (StringUtils.hasLength(date)) {, +			return null;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AbstractJmxEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AuditEventsJmxEndpoint.java, +import org.springframework.util.StringUtils;, +			if (StringUtils.hasLength(date)) {, +			return null;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/DataEndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AbstractJmxEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AuditEventsJmxEndpoint.java, +import org.springframework.util.StringUtils;, +			if (StringUtils.hasLength(date)) {, +			return null;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/DataEndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AbstractJmxEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AuditEventsJmxEndpoint.java, +import org.springframework.util.StringUtils;, +			if (StringUtils.hasLength(date)) {, +			return null;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/DataEndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +import org.springframework.jmx.export.metadata.InvalidMetadataException;, +import org.springframework.jmx.export.metadata.JmxAttributeSource;, +import org.springframework.util.Assert;, +	private final AnnotationJmxAttributeSource attributeSource = new EndpointJmxAttributeSource();, +		if (bean instanceof JmxEndpoint) {, +			return getObjectName((JmxEndpoint) bean, beanKey);, +	/**, +	 * {@link JmxAttributeSource} for {@link JmxEndpoint JmxEndpoints}., +	 */, +	private static class EndpointJmxAttributeSource extends AnnotationJmxAttributeSource {, +, +		@Override, +		public org.springframework.jmx.export.metadata.ManagedResource getManagedResource(, +				Class<?> beanClass) throws InvalidMetadataException {, +			Assert.state(super.getManagedResource(beanClass) == null,, +					"@ManagedResource annotation found on JmxEndpoint " + beanClass);, +			return new org.springframework.jmx.export.metadata.ManagedResource();, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AbstractJmxEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AuditEventsJmxEndpoint.java, +import org.springframework.util.StringUtils;, +			if (StringUtils.hasLength(date)) {, +			return null;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/DataEndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +import org.springframework.jmx.export.metadata.InvalidMetadataException;, +import org.springframework.jmx.export.metadata.JmxAttributeSource;, +import org.springframework.util.Assert;, +	private final AnnotationJmxAttributeSource attributeSource = new EndpointJmxAttributeSource();, +		if (bean instanceof JmxEndpoint) {, +			return getObjectName((JmxEndpoint) bean, beanKey);, +	/**, +	 * {@link JmxAttributeSource} for {@link JmxEndpoint JmxEndpoints}., +	 */, +	private static class EndpointJmxAttributeSource extends AnnotationJmxAttributeSource {, +, +		@Override, +		public org.springframework.jmx.export.metadata.ManagedResource getManagedResource(, +				Class<?> beanClass) throws InvalidMetadataException {, +			Assert.state(super.getManagedResource(beanClass) == null,, +					"@ManagedResource annotation found on JmxEndpoint " + beanClass);, +			return new org.springframework.jmx.export.metadata.ManagedResource();, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/JmxEndpoint.java, +import org.springframework.jmx.export.annotation.ManagedResource;, + * to use {@code @ManagedAttribute} and the full Spring JMX machinery but should not use, + * the {@link ManagedResource @ManagedResource} annotation. Implementations may be backed, + * by an actual {@link Endpoint} or may be specifically designed for JMX only., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AbstractJmxEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/AuditEventsJmxEndpoint.java, +import org.springframework.util.StringUtils;, +			if (StringUtils.hasLength(date)) {, +			return null;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/DataEndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +import org.springframework.jmx.export.metadata.InvalidMetadataException;, +import org.springframework.jmx.export.metadata.JmxAttributeSource;, +import org.springframework.util.Assert;, +	private final AnnotationJmxAttributeSource attributeSource = new EndpointJmxAttributeSource();]