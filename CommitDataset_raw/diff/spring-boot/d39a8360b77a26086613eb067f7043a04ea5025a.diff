[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +import org.springframework.orm.jpa.EntityManagerFactoryInfo;, + * @author Oliver Gierke, +	@ConditionalOnMissingBean(PlatformTransactionManager.class), +		return new JpaTransactionManager();, +	@ConditionalOnMissingBean(EntityManagerFactoryInfo.class), +	public LocalContainerEntityManagerFactoryBean entityManagerFactory(JpaVendorAdapter jpaVendorAdapter) {, +		entityManagerFactoryBean.setJpaVendorAdapter(jpaVendorAdapter);, +	@ConditionalOnMissingBean(JpaVendorAdapter.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +import org.springframework.orm.jpa.EntityManagerFactoryInfo;, + * @author Oliver Gierke, +	@ConditionalOnMissingBean(PlatformTransactionManager.class), +		return new JpaTransactionManager();, +	@ConditionalOnMissingBean(EntityManagerFactoryInfo.class), +	public LocalContainerEntityManagerFactoryBean entityManagerFactory(JpaVendorAdapter jpaVendorAdapter) {, +		entityManagerFactoryBean.setJpaVendorAdapter(jpaVendorAdapter);, +	@ConditionalOnMissingBean(JpaVendorAdapter.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/AbstractJpaAutoConfigurationTests.java, +import java.util.Collections;, +import org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaAutoConfigurationTests.TestConfigurationWithTransactionManager.CustomJpaTransactionManager;, +import org.springframework.orm.jpa.JpaVendorAdapter;, +import org.springframework.transaction.PlatformTransactionManager;, +import static org.hamcrest.CoreMatchers.*;, +	@Test, +	public void usesManuallyDefinedEntityManagerFactoryBeanIfAvailable() {, +		, +		setupTestConfiguration(TestConfigurationWithEntityManagerFactory.class);, +		this.context.refresh();, +		, +		LocalContainerEntityManagerFactoryBean factoryBean = this.context.getBean(LocalContainerEntityManagerFactoryBean.class);, +		Map<String, Object> map = factoryBean.getJpaPropertyMap();, +		assertThat(map.get("configured"), is((Object) "manually"));, +	}, +	, +	@Test, +	public void usesManuallyDefinedTransactionManagerBeanIfAvailable() {, +		, +		setupTestConfiguration(TestConfigurationWithTransactionManager.class);, +		this.context.refresh();, +		, +		PlatformTransactionManager txManager = this.context.getBean(PlatformTransactionManager.class);, +		assertThat(txManager, is(instanceOf(CustomJpaTransactionManager.class)));, +	}, +, +		setupTestConfiguration(TestConfiguration.class);, +	}, +	, +	protected void setupTestConfiguration(Class<?> configClass) {, +		, +		this.context.register(configClass,, +	@Configuration, +	protected static class TestConfigurationWithEntityManagerFactory extends TestConfiguration {, +		, +		@Bean, +		public LocalContainerEntityManagerFactoryBean entityManagerFactory(DataSource dataSource, JpaVendorAdapter adapter) {, +			, +			LocalContainerEntityManagerFactoryBean factoryBean = new LocalContainerEntityManagerFactoryBean();, +			factoryBean.setJpaVendorAdapter(adapter);, +			factoryBean.setDataSource(dataSource);, +			factoryBean.setPersistenceUnitName("manually-configured");, +			factoryBean.setJpaPropertyMap(Collections.singletonMap("configured", "manually"));, +			return factoryBean;, +		}, +	}, +	, +	@Configuration, +	@ComponentScan(basePackageClasses = { City.class }), +	protected static class TestConfigurationWithTransactionManager {, +		, +		@Bean, +		public PlatformTransactionManager transactionManager() {, +			return new CustomJpaTransactionManager();, +		}, +		, +		static class CustomJpaTransactionManager extends JpaTransactionManager {, +			, +		}, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +import org.springframework.orm.jpa.EntityManagerFactoryInfo;, + * @author Oliver Gierke, +	@ConditionalOnMissingBean(PlatformTransactionManager.class), +		return new JpaTransactionManager();, +	@ConditionalOnMissingBean(EntityManagerFactoryInfo.class), +	public LocalContainerEntityManagerFactoryBean entityManagerFactory(JpaVendorAdapter jpaVendorAdapter) {, +		entityManagerFactoryBean.setJpaVendorAdapter(jpaVendorAdapter);, +	@ConditionalOnMissingBean(JpaVendorAdapter.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/AbstractJpaAutoConfigurationTests.java, +import java.util.Collections;, +import org.springframework.boot.autoconfigure.orm.jpa.AbstractJpaAutoConfigurationTests.TestConfigurationWithTransactionManager.CustomJpaTransactionManager;, +import org.springframework.orm.jpa.JpaVendorAdapter;, +import org.springframework.transaction.PlatformTransactionManager;, +import static org.hamcrest.CoreMatchers.*;, +	@Test, +	public void usesManuallyDefinedEntityManagerFactoryBeanIfAvailable() {, +		, +		setupTestConfiguration(TestConfigurationWithEntityManagerFactory.class);, +		this.context.refresh();, +		]