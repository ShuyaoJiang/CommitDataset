[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +import java.util.List;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +	private List<ResourceConfigCustomizer> customizers;, +		customize();, +	private void customize() {, +		if (this.customizers != null) {, +			AnnotationAwareOrderComparator.sort(this.customizers);, +			for (ResourceConfigCustomizer customizer : this.customizers) {, +				customizer.customize(this.config);, +			}, +		}, +	}, +, +	@ConditionalOnSingleCandidate(ObjectMapper.class), +	static class JacksonResourceConfigCustomizer {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +import java.util.List;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +	private List<ResourceConfigCustomizer> customizers;, +		customize();, +	private void customize() {, +		if (this.customizers != null) {, +			AnnotationAwareOrderComparator.sort(this.customizers);, +			for (ResourceConfigCustomizer customizer : this.customizers) {, +				customizer.customize(this.config);, +			}, +		}, +	}, +, +	@ConditionalOnSingleCandidate(ObjectMapper.class), +	static class JacksonResourceConfigCustomizer {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/ResourceConfigCustomizer.java, + * Callback interface that can be implemented by beans wishing to customize Jersey's, + * {@link ResourceConfig} before it is used., +	/**, +	 * Customize the resource config., +	 * @param config the {@link ResourceConfig} to customize, +	 */, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +import java.util.List;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +	private List<ResourceConfigCustomizer> customizers;, +		customize();, +	private void customize() {, +		if (this.customizers != null) {, +			AnnotationAwareOrderComparator.sort(this.customizers);, +			for (ResourceConfigCustomizer customizer : this.customizers) {, +				customizer.customize(this.config);, +			}, +		}, +	}, +, +	@ConditionalOnSingleCandidate(ObjectMapper.class), +	static class JacksonResourceConfigCustomizer {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/ResourceConfigCustomizer.java, + * Callback interface that can be implemented by beans wishing to customize Jersey's, + * {@link ResourceConfig} before it is used., +	/**, +	 * Customize the resource config., +	 * @param config the {@link ResourceConfig} to customize, +	 */, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationCustomObjectMapperProviderTests.java, +import static org.assertj.core.api.Assertions.assertThat;, +, +		assertThat(HttpStatus.OK).isEqualTo(response.getStatusCode());, +		assertThat("{\"subject\":\"Jersey\"}").isEqualTo(response.getBody());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +import java.util.List;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +	private List<ResourceConfigCustomizer> customizers;, +		customize();, +	private void customize() {, +		if (this.customizers != null) {, +			AnnotationAwareOrderComparator.sort(this.customizers);, +			for (ResourceConfigCustomizer customizer : this.customizers) {, +				customizer.customize(this.config);, +			}, +		}, +	}, +, +	@ConditionalOnSingleCandidate(ObjectMapper.class), +	static class JacksonResourceConfigCustomizer {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/ResourceConfigCustomizer.java, + * Callback interface that can be implemented by beans wishing to customize Jersey's, + * {@link ResourceConfig} before it is used., +	/**, +	 * Customize the resource config., +	 * @param config the {@link ResourceConfig} to customize, +	 */, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationCustomObjectMapperProviderTests.java, +import static org.assertj.core.api.Assertions.assertThat;, +, +		assertThat(HttpStatus.OK).isEqualTo(response.getStatusCode());, +		assertThat("{\"subject\":\"Jersey\"}").isEqualTo(response.getBody());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationObjectMapperProviderTests.java]