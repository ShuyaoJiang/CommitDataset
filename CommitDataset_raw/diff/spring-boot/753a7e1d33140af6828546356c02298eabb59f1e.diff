[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +If you are using the `@SpringBootTest` annotation, you can just inject a fully configured, +`TestRestTemplate` and start usinging it. If necessary, additional customizations can be, +applied via the `RestTemplateBuilder` bean:, +, +[source,java,indent=0], +----, +@RunWith(SpringRunner.class), +@SpringBootTest, +public class MyTest {, +, +	@Autowired, +	private TestRestTemplate template;, +, +	@Test, +	public void testRequest() throws Exception {, +		HttpHeaders headers = template.getForEntity("http://myhost.com", String.class).getHeaders();, +		assertThat(headers.getLocation().toString(), containsString("myotherhost"));, +	}, +, +	@TestConfig, +	static class Config {, +, +		@Bean, +		public RestTemplateBuilder restTemplateBuilder() {, +			return new RestTemplateBuilder(), +				.additionalMessageConverters(...), +				.customizers(...);, +		}, +, +	}, +, +}, +----, +, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +If you are using the `@SpringBootTest` annotation, you can just inject a fully configured, +`TestRestTemplate` and start usinging it. If necessary, additional customizations can be, +applied via the `RestTemplateBuilder` bean:, +, +[source,java,indent=0], +----, +@RunWith(SpringRunner.class), +@SpringBootTest, +public class MyTest {, +, +	@Autowired, +	private TestRestTemplate template;, +, +	@Test, +	public void testRequest() throws Exception {, +		HttpHeaders headers = template.getForEntity("http://myhost.com", String.class).getHeaders();, +		assertThat(headers.getLocation().toString(), containsString("myotherhost"));, +	}, +, +	@TestConfig, +	static class Config {, +, +		@Bean, +		public RestTemplateBuilder restTemplateBuilder() {, +			return new RestTemplateBuilder(), +				.additionalMessageConverters(...), +				.customizers(...);, +		}, +, +	}, +, +}, +----, +, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTest.java, + * <li>Registers a {@link org.springframework.boot.test.web.client.TestRestTemplate, + * TestRestTemplate} bean for use in web tests.</li>, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +If you are using the `@SpringBootTest` annotation, you can just inject a fully configured, +`TestRestTemplate` and start usinging it. If necessary, additional customizations can be, +applied via the `RestTemplateBuilder` bean:, +, +[source,java,indent=0], +----, +@RunWith(SpringRunner.class), +@SpringBootTest, +public class MyTest {, +, +	@Autowired, +	private TestRestTemplate template;, +, +	@Test, +	public void testRequest() throws Exception {, +		HttpHeaders headers = template.getForEntity("http://myhost.com", String.class).getHeaders();, +		assertThat(headers.getLocation().toString(), containsString("myotherhost"));, +	}, +, +	@TestConfig, +	static class Config {, +, +		@Bean, +		public RestTemplateBuilder restTemplateBuilder() {, +			return new RestTemplateBuilder(), +				.additionalMessageConverters(...)]