[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-dbcp2</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-dbcp2</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +			"org.apache.commons.dbcp.BasicDataSource",, +			"org.apache.commons.dbcp2.BasicDataSource" };, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-dbcp2</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +			"org.apache.commons.dbcp.BasicDataSource",, +			"org.apache.commons.dbcp2.BasicDataSource" };, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertThat;, +		if (this.context != null) {, +			this.context.close();, +		HikariDataSource pool = testDataSourceFallback(HikariDataSource.class,, +				"org.apache.tomcat");, +	public void commonsDbcpIsFallback() throws Exception {, +		BasicDataSource dataSource = testDataSourceFallback(BasicDataSource.class,, +				"org.apache.tomcat", "com.zaxxer.hikari");, +		assertEquals("jdbc:hsqldb:mem:testdb", dataSource.getUrl());, +	}, +, +	@Test, +	public void commonsDbcp2IsFallback() throws Exception {, +		org.apache.commons.dbcp2.BasicDataSource dataSource = testDataSourceFallback(, +				org.apache.commons.dbcp2.BasicDataSource.class, "org.apache.tomcat",, +				"com.zaxxer.hikari", "org.apache.commons.dbcp.");, +		assertEquals("jdbc:hsqldb:mem:testdb", dataSource.getUrl());, +	}, +, +	@Test, +	@SuppressWarnings("unchecked"), +	private <T extends DataSource> T testDataSourceFallback(Class<T> expectedType,, +			final String... hiddenPackages) {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",, +				"spring.datasource.url:jdbc:hsqldb:mem:testdb");, +		this.context.setClassLoader(new URLClassLoader(new URL[0], getClass(), +				.getClassLoader()) {, +			@Override, +			protected Class<?> loadClass(String name, boolean resolve), +					throws ClassNotFoundException {, +				for (String hiddenPackage : hiddenPackages) {, +					if (name.startsWith(hiddenPackage)) {, +						throw new ClassNotFoundException();, +					}, +				}, +				return super.loadClass(name, resolve);, +			}, +		});, +		this.context.register(DataSourceAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		DataSource bean = this.context.getBean(DataSource.class);, +, +		assertThat(bean, instanceOf(expectedType));, +		return (T) bean;, +	}, +, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-dbcp2</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +			"org.apache.commons.dbcp.BasicDataSource",, +			"org.apache.commons.dbcp2.BasicDataSource" };, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +import static org.hamcrest.Matchers.instanceOf;, +import static org.junit.Assert.assertThat;, +		if (this.context != null) {, +			this.context.close();, +		HikariDataSource pool = testDataSourceFallback(HikariDataSource.class,, +				"org.apache.tomcat");, +	public void commonsDbcpIsFallback() throws Exception {, +		BasicDataSource dataSource = testDataSourceFallback(BasicDataSource.class,, +				"org.apache.tomcat", "com.zaxxer.hikari");, +		assertEquals("jdbc:hsqldb:mem:testdb", dataSource.getUrl());, +	}, +, +	@Test, +	public void commonsDbcp2IsFallback() throws Exception {, +		org.apache.commons.dbcp2.BasicDataSource dataSource = testDataSourceFallback(, +				org.apache.commons.dbcp2.BasicDataSource.class, "org.apache.tomcat",]