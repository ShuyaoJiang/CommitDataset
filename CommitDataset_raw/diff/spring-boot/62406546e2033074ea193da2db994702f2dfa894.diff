[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Access log configuration, +		private final Accesslog accesslog = new Accesslog();, +		public Accesslog getAccesslog() {, +			return this.accesslog;, +		/**, +		 * Specify if access log is enabled., +		 * @return {@code true} if access log is enabled, +		 * @deprecated since 1.3.0 in favor of {@code server.tomcat.accesslog.enabled}, +		 */, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "server.tomcat.accesslog.enabled"), +		public boolean getAccessLogEnabled() {, +			return this.accesslog.isEnabled();, +		}, +, +		/**, +		 * Set if access log is enabled., +		 * @param accessLogEnabled the access log enable flag, +		 * @deprecated since 1.3.0 in favor of {@code server.tomcat.accesslog.enabled}, +		 */, +		@Deprecated, +			getAccesslog().setEnabled(accessLogEnabled);, +		}, +, +		/**, +		 * Get the format pattern for access logs., +		 * @return the format pattern for access logs, +		 * @deprecated since 1.3.0 in favor of {@code server.tomcat.accesslog.pattern}, +		 */, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "server.tomcat.accesslog.pattern"), +		public String getAccessLogPattern() {, +			return this.accesslog.getPattern();, +		}, +, +		/**, +		 * Set the format pattern for access logs, +		 * @param accessLogPattern the pattern for access logs, +		 * @deprecated since 1.3.0 in favor of {@code server.tomcat.accesslog.pattern}, +		 */, +		@Deprecated, +		public void setAccessLogPattern(String accessLogPattern) {, +			this.accesslog.setPattern(accessLogPattern);, +			if (this.accesslog.enabled) {, +			factory.addContextValves(this.accesslog.createAccessLogValve());, +, +		public static class Accesslog {, +, +			/**, +			 * Enable access log., +			 */, +			private boolean enabled = false;, +, +			/**, +			 * Format pattern for access logs., +			 */, +			private String pattern = "common";, +, +			/**, +			 * Directory in which log files are created. Can be relative to the tomcat, +			 * base dir or absolute., +			 */, +			private String directory = "logs";, +, +			/**, +			 * Log file name prefix., +			 */, +			protected String prefix = "access_log";, +, +			/**, +			 * Log file name suffix., +			 */, +			private String suffix = ".log";, +, +			AccessLogValve createAccessLogValve() {, +				AccessLogValve valve = new AccessLogValve();, +				valve.setPattern(this.pattern);, +				valve.setDirectory(this.directory);, +				valve.setPrefix(this.prefix);, +				valve.setSuffix(this.suffix);, +				return valve;, +			}, +, +			public boolean isEnabled() {, +				return enabled;, +			}, +, +			public void setEnabled(boolean enabled) {, +				this.enabled = enabled;, +			}, +, +			public String getPattern() {, +				return pattern;, +			}, +, +			public void setPattern(String pattern) {, +				this.pattern = pattern;, +			}, +]