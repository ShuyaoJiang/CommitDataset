[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactory.java, +		return createMongoClient(builder);, +	}, +, +	private MongoClient createMongoClient(Builder builder) {, +		return createMongoClient(createBuilder(settings, connectionString));, +		return createMongoClient(builder);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactory.java, +		return createMongoClient(builder);, +	}, +, +	private MongoClient createMongoClient(Builder builder) {, +		return createMongoClient(createBuilder(settings, connectionString));, +		return createMongoClient(builder);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactoryTests.java, +	public void customizerIsInvokedWhenHostIsSet() {, +		MongoProperties properties = new MongoProperties();, +		properties.setHost("localhost");, +		MongoClientSettingsBuilderCustomizer customizer = mock(, +				MongoClientSettingsBuilderCustomizer.class);, +		createMongoClient(properties, this.environment, customizer);, +		verify(customizer).customize(any(MongoClientSettings.Builder.class));, +	}, +, +	@Test]