[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, +import org.springframework.boot.actuate.audit.AuditEventsEndpointWebExtension;, +	public AuditEventsEndpointWebExtension auditEventsWebEndpointExtension(, +		return new AuditEventsEndpointWebExtension(auditEventsEndpoint);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, +import org.springframework.boot.actuate.audit.AuditEventsEndpointWebExtension;, +	public AuditEventsEndpointWebExtension auditEventsWebEndpointExtension(, +		return new AuditEventsEndpointWebExtension(auditEventsEndpoint);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMappingException;, +import org.springframework.boot.actuate.endpoint.reflect.ParametersMissingException;, +import org.springframework.boot.actuate.endpoint.web.WebOperation;, +	protected void registerMappingForOperation(WebOperation operation) {, +			Collection<EndpointInfo<WebOperation>> webEndpoints,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, +import org.springframework.boot.actuate.audit.AuditEventsEndpointWebExtension;, +	public AuditEventsEndpointWebExtension auditEventsWebEndpointExtension(, +		return new AuditEventsEndpointWebExtension(auditEventsEndpoint);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMappingException;, +import org.springframework.boot.actuate.endpoint.reflect.ParametersMissingException;, +import org.springframework.boot.actuate.endpoint.web.WebOperation;, +	protected void registerMappingForOperation(WebOperation operation) {, +			Collection<EndpointInfo<WebOperation>> webEndpoints,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMapper;, +import org.springframework.boot.actuate.endpoint.web.EndpointPathResolver;, +			WebClient.Builder webClientBuilder) {, +				this.applicationContext, parameterMapper, endpointMediaTypes,, +				EndpointPathResolver.useEndpointId(), null, null);, +		ReactiveCloudFoundrySecurityInterceptor securityInterceptor = getSecurityInterceptor(, +				webClientBuilder, this.applicationContext.getEnvironment());, +				getCorsConfiguration(), securityInterceptor);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, +import org.springframework.boot.actuate.audit.AuditEventsEndpointWebExtension;, +	public AuditEventsEndpointWebExtension auditEventsWebEndpointExtension(, +		return new AuditEventsEndpointWebExtension(auditEventsEndpoint);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMappingException;, +import org.springframework.boot.actuate.endpoint.reflect.ParametersMissingException;, +import org.springframework.boot.actuate.endpoint.web.WebOperation;, +	protected void registerMappingForOperation(WebOperation operation) {, +			Collection<EndpointInfo<WebOperation>> webEndpoints,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMapper;, +import org.springframework.boot.actuate.endpoint.web.EndpointPathResolver;, +			WebClient.Builder webClientBuilder) {, +				this.applicationContext, parameterMapper, endpointMediaTypes,, +				EndpointPathResolver.useEndpointId(), null, null);, +		ReactiveCloudFoundrySecurityInterceptor securityInterceptor = getSecurityInterceptor(, +				webClientBuilder, this.applicationContext.getEnvironment());, +				getCorsConfiguration(), securityInterceptor);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMapper;, +			ParameterMapper parameterMapper, EndpointMediaTypes endpointMediaTypes,, +			RestTemplateBuilder restTemplateBuilder) {, +				this.applicationContext, parameterMapper, endpointMediaTypes,, +				EndpointPathResolver.useEndpointId(), null, null);, +		CloudFoundrySecurityInterceptor securityInterceptor = getSecurityInterceptor(, +				restTemplateBuilder, this.applicationContext.getEnvironment());, +				getCorsConfiguration(), securityInterceptor);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, +import org.springframework.boot.actuate.audit.AuditEventsEndpointWebExtension;, +	public AuditEventsEndpointWebExtension auditEventsWebEndpointExtension(, +		return new AuditEventsEndpointWebExtension(auditEventsEndpoint);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMappingException;, +import org.springframework.boot.actuate.endpoint.reflect.ParametersMissingException;, +import org.springframework.boot.actuate.endpoint.web.WebOperation;, +	protected void registerMappingForOperation(WebOperation operation) {, +			Collection<EndpointInfo<WebOperation>> webEndpoints,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMapper;, +import org.springframework.boot.actuate.endpoint.web.EndpointPathResolver;, +			WebClient.Builder webClientBuilder) {, +				this.applicationContext, parameterMapper, endpointMediaTypes,, +				EndpointPathResolver.useEndpointId(), null, null);, +		ReactiveCloudFoundrySecurityInterceptor securityInterceptor = getSecurityInterceptor(, +				webClientBuilder, this.applicationContext.getEnvironment());, +				getCorsConfiguration(), securityInterceptor);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMapper;, +			ParameterMapper parameterMapper, EndpointMediaTypes endpointMediaTypes,, +			RestTemplateBuilder restTemplateBuilder) {, +				this.applicationContext, parameterMapper, endpointMediaTypes,, +				EndpointPathResolver.useEndpointId(), null, null);, +		CloudFoundrySecurityInterceptor securityInterceptor = getSecurityInterceptor(, +				restTemplateBuilder, this.applicationContext.getEnvironment());, +				getCorsConfiguration(), securityInterceptor);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryWebEndpointServletHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.reflect.ParameterMappingException;, +import org.springframework.boot.actuate.endpoint.reflect.ParametersMissingException;, +import org.springframework.boot.actuate.endpoint.web.WebOperation;, +			Collection<EndpointInfo<WebOperation>> webEndpoints,, +	protected void registerMappingForOperation(WebOperation operation) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, +import org.springframework.boot.actuate.audit.AuditEventsEndpointWebExtension;, +	public AuditEventsEndpointWebExtension auditEventsWebEndpointExtension(, +		return new AuditEventsEndpointWebExtension(auditEventsEndpoint);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java]