[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties({ HealthIndicatorAutoConfigurationProperties.class }), +	@Autowired, +	private HealthIndicatorAutoConfigurationProperties configurationProperties = new HealthIndicatorAutoConfigurationProperties();, +		if (this.configurationProperties.getOrder() != null) {, +			healthAggregator.setStatusOrder(this.configurationProperties.getOrder());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties({ HealthIndicatorAutoConfigurationProperties.class }), +	@Autowired, +	private HealthIndicatorAutoConfigurationProperties configurationProperties = new HealthIndicatorAutoConfigurationProperties();, +		if (this.configurationProperties.getOrder() != null) {, +			healthAggregator.setStatusOrder(this.configurationProperties.getOrder());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure;, +, +import java.util.List;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +, +/**, + * Configuration properties for some health properties, + * @author Christian Dupuis, + */, +@ConfigurationProperties("health.status"), +public class HealthIndicatorAutoConfigurationProperties {, +, +	private List<String> order = null;, +, +	public List<String> getOrder() {, +		return this.order;, +	}, +, +	public void setOrder(List<String> statusOrder) {, +		if (statusOrder != null && statusOrder.size() > 0) {, +			this.order = statusOrder;, +		}, +	}, +, +}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties({ HealthIndicatorAutoConfigurationProperties.class }), +	@Autowired, +	private HealthIndicatorAutoConfigurationProperties configurationProperties = new HealthIndicatorAutoConfigurationProperties();, +		if (this.configurationProperties.getOrder() != null) {, +			healthAggregator.setStatusOrder(this.configurationProperties.getOrder());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure;, +, +import java.util.List;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +, +/**, + * Configuration properties for some health properties, + * @author Christian Dupuis, + */, +@ConfigurationProperties("health.status"), +public class HealthIndicatorAutoConfigurationProperties {, +, +	private List<String> order = null;, +, +	public List<String> getOrder() {, +		return this.order;, +	}, +]