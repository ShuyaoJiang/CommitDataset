[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/MultipartProperties.java, + * Copyright 2012-2015 the original author or authors., +	 * Enable multipart upload handling., +	 */, +	private boolean enabled;, +, +	/**, +	public boolean getEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/MultipartProperties.java, + * Copyright 2012-2015 the original author or authors., +	 * Enable multipart upload handling., +	 */, +	private boolean enabled;, +, +	/**, +	public boolean getEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/MultipartAutoConfigurationTests.java, + * Copyright 2012-2015 the original author or authors., +import java.util.LinkedHashMap;, +import java.util.Map;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.core.env.MapPropertySource;, +		testContainerWithCustomMultipartConfigEnabledSetting("false", 0);, +	}, +	@Test, +	public void containerWithMultipartConfigEnabled() {, +		testContainerWithCustomMultipartConfigEnabledSetting("true", 1);, +	}, +, +	private void testContainerWithCustomMultipartConfigEnabledSetting(, +			final String propertyValue, int expectedNumberOfMultipartConfigElementBeans) {, +		Map<String, Object> poperties = new LinkedHashMap<String, Object>();, +		poperties.put("multipart.enabled", propertyValue);, +		MapPropertySource propertySource = new MapPropertySource("test", poperties);, +		this.context.getEnvironment().getPropertySources().addFirst(propertySource);, +		this.context.getBean(MultipartProperties.class);, +		assertEquals(expectedNumberOfMultipartConfigElementBeans, this.context, +				.getBeansOfType(MultipartConfigElement.class).size());, +	@EnableConfigurationProperties(MultipartProperties.class), +		@Autowired, +		private MultipartProperties properties;, +]