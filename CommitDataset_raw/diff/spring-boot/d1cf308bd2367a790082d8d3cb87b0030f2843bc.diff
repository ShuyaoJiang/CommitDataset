[+++ b/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfigurationTests.java, +		return (context) -> {, +++ b/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfigurationTests.java, +		return (context) -> {, +++ b/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfigurationTests.java, +		return (context) -> {, +++ b/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfigurationTests.java, +		return (context) -> {, +++ b/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfigurationTests.java, +		return (context) -> {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.run((context) -> {, +					assertThat(context).getFailure(), +							.hasMessageContaining("does not exist");, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +					assertThat(context).getFailure(), +							.hasMessageContaining("does not exist");, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +				.run((context) -> {, +					assertThat(context).getFailure(), +							.hasRootCauseInstanceOf(NoSuchAlgorithmException.class);, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +				.run((context) -> {, +					assertThat(context).getFailure(), +							.hasRootCauseInstanceOf(NoSuchAlgorithmException.class);, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +				.run((context) -> assertThat(context).hasNotFailed());, +++ b/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfigurationTests.java, +		return (context) -> {, +++ b/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfigurationTests.java, +		return (context) -> {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.run((context) -> {, +					assertThat(context).getFailure(), +							.hasMessageContaining("does not exist");, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +					assertThat(context).getFailure(), +							.hasMessageContaining("does not exist");, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +				.run((context) -> {, +					assertThat(context).getFailure(), +							.hasRootCauseInstanceOf(NoSuchAlgorithmException.class);, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +				.run((context) -> {, +					assertThat(context).getFailure(), +							.hasRootCauseInstanceOf(NoSuchAlgorithmException.class);, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues("spring.rabbitmq.ssl.enabled:true",, +				.run((context) -> assertThat(context).hasNotFailed());, +++ b/spring-boot/src/test/java/org/springframework/boot/endpoint/web/EndpointMappingTests.java, +		assertThat(new EndpointMapping("/test").createSubPath("one")), +				.isEqualTo("/test/one");]