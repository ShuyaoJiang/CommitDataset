[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.beans.factory.BeanFactory;, +	@Autowired, +	private ManagementServerProperties managementServerProperties;, +, +	@Override, +	public void setApplicationContext(ApplicationContext applicationContext), +			throws BeansException {, +		this.applicationContext = applicationContext;, +	}, +	// Put Servlets and Filters in their own nested class so they don't force early, +	// instantiation of ManagementServerProperties., +	@Configuration, +	protected static class ApplicationContextFilterConfiguration {, +	}, +	protected static enum ManagementServerPort {, +		public static ManagementServerPort get(BeanFactory beanFactory) {, +				// Current context is not a webapp, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.beans.factory.BeanFactory;, +	@Autowired, +	private ManagementServerProperties managementServerProperties;, +, +	@Override, +	public void setApplicationContext(ApplicationContext applicationContext), +			throws BeansException {, +		this.applicationContext = applicationContext;, +	}, +	// Put Servlets and Filters in their own nested class so they don't force early, +	// instantiation of ManagementServerProperties., +	@Configuration, +	protected static class ApplicationContextFilterConfiguration {, +	}, +	protected static enum ManagementServerPort {, +		public static ManagementServerPort get(BeanFactory beanFactory) {, +				// Current context is not a webapp, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, +import java.util.Properties;, + * @author Dave Syer, +		JolokiaMvcEndpoint endpoint = new JolokiaMvcEndpoint();, +		endpoint.setInitParameters(getInitParameters());, +		return endpoint;, +	private Properties getInitParameters() {, +		Properties properties = new Properties();, +			properties.setProperty(configParameter.getKey(), configParameter.getValue(), +					.toString());, +		return properties;, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.beans.factory.BeanFactory;, +	@Autowired, +	private ManagementServerProperties managementServerProperties;, +, +	@Override, +	public void setApplicationContext(ApplicationContext applicationContext), +			throws BeansException {, +		this.applicationContext = applicationContext;, +	}, +	// Put Servlets and Filters in their own nested class so they don't force early, +	// instantiation of ManagementServerProperties., +	@Configuration, +	protected static class ApplicationContextFilterConfiguration {, +	}, +	protected static enum ManagementServerPort {, +		public static ManagementServerPort get(BeanFactory beanFactory) {, +				// Current context is not a webapp, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, +import java.util.Properties;, + * @author Dave Syer, +		JolokiaMvcEndpoint endpoint = new JolokiaMvcEndpoint();, +		endpoint.setInitParameters(getInitParameters());, +		return endpoint;, +	private Properties getInitParameters() {, +		Properties properties = new Properties();, +			properties.setProperty(configParameter.getKey(), configParameter.getValue(), +					.toString());, +		return properties;, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +import java.util.Properties;, +, +import javax.servlet.ServletContext;, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletRequestWrapper;, +import javax.servlet.http.HttpServletResponse;, +import org.jolokia.http.AgentServlet;, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.InitializingBean;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +import org.springframework.web.bind.annotation.RequestMapping;, +import org.springframework.web.context.ServletContextAware;, +import org.springframework.web.servlet.ModelAndView;, +import org.springframework.web.servlet.mvc.ServletWrappingController;, +public class JolokiaMvcEndpoint implements MvcEndpoint, InitializingBean,, +		ApplicationContextAware, ServletContextAware {, +	private ServletWrappingController controller = new ServletWrappingController();, +, +		this.controller.setServletClass(AgentServlet.class);, +		this.controller.setServletName("jolokia");]