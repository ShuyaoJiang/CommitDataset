[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +import org.springframework.security.web.util.matcher.NegatedRequestMatcher;, +	private static final RequestMatcher MATCH_NONE = new NegatedRequestMatcher(, +			AnyRequestMatcher.INSTANCE);, +, +				return (matchers.isEmpty() ? MATCH_NONE : new OrRequestMatcher(matchers));, +, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +import org.springframework.security.web.util.matcher.NegatedRequestMatcher;, +	private static final RequestMatcher MATCH_NONE = new NegatedRequestMatcher(, +			AnyRequestMatcher.INSTANCE);, +, +				return (matchers.isEmpty() ? MATCH_NONE : new OrRequestMatcher(matchers));, +, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java, +import static org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.springSecurity;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;, +	@Test, +	public void testMarkAllEndpointsSensitive() throws Exception {, +		// gh-4368, +		this.context = new AnnotationConfigWebApplicationContext();, +		this.context.setServletContext(new MockServletContext());, +		this.context.register(WebConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context, "endpoints.sensitive:true");, +		this.context.refresh();, +, +		MockMvc mockMvc = MockMvcBuilders.webAppContextSetup(this.context) //, +				.apply(springSecurity()) //, +				.build();, +, +		mockMvc //, +				.perform(get("/health")) //, +				.andExpect(status().isUnauthorized());, +		mockMvc //, +				.perform(get("/info")) //, +				.andExpect(status().isUnauthorized());, +	}, +]