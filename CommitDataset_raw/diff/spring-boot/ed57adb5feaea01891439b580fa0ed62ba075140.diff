[+++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +, +|`executable`, +|Boolean flag to indicate if jar files are fully executable on Unix like operating, + systems. Defaults to `true`., +, +|`embeddedLaunchScript`, +|The embedded launch script to prepend to the front of the jar if it is fully executable., + If not specified the 'Spring Boot' default script will be used., +, +|`embeddedLaunchScriptProperties`, +|Additional properties that to be expanded in the launch script. The default script, + supports a `mode` property which can contain the values `auto`, `service` or `run`., +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +, +|`executable`, +|Boolean flag to indicate if jar files are fully executable on Unix like operating, + systems. Defaults to `true`., +, +|`embeddedLaunchScript`, +|The embedded launch script to prepend to the front of the jar if it is fully executable., + If not specified the 'Spring Boot' default script will be used., +, +|`embeddedLaunchScriptProperties`, +|Additional properties that to be expanded in the launch script. The default script, + supports a `mode` property which can contain the values `auto`, `service` or `run`., +++ /dev/null, +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +, +|`executable`, +|Boolean flag to indicate if jar files are fully executable on Unix like operating, + systems. Defaults to `true`., +, +|`embeddedLaunchScript`, +|The embedded launch script to prepend to the front of the jar if it is fully executable., + If not specified the 'Spring Boot' default script will be used., +, +|`embeddedLaunchScriptProperties`, +|Additional properties that to be expanded in the launch script. The default script, + supports a `mode` property which can contain the values `auto`, `service` or `run`., +++ /dev/null, +++ b/spring-boot-docs/src/main/asciidoc/deployment.adoc, +[[deployment]], +== Deploying Spring Boot applications, +, +[partintro], +--, +Spring Boot's flexible packaging options provide a great deal of choice when it comes to, +deploying your application. You can easily deploy Spring Boot applications to a variety, +of cloud platforms, to a container images (such as Docker) or to virtual/real machines., +, +This section covers some of the more common deployment scenarios., +--, +, +, +, +[[cloud-deployment]], +== Deploying to the cloud, +, +Spring Boot's executable jars are ready-made for most popular cloud PaaS, +(platform-as-a-service) providers. These providers tend to require that you, +"`bring your own container`"; they manage application processes (not Java applications, +specifically), so they need some intermediary layer that adapts _your_ application to the, +_cloud's_ notion of a running process., +, +Two popular cloud providers, Heroku and Cloud Foundry, employ a "`buildpack`" approach., +The buildpack wraps your deployed code in whatever is needed to _start_ your, +application: it might be a JDK and a call to `java`, it might be an embedded webserver,, +or it might be a full-fledged application server. A buildpack is pluggable, but ideally, +you should be able to get by with as few customizations to it as possible., +This reduces the footprint of functionality that is not under your control. It minimizes, +divergence between deployment and production environments., +, +Ideally, your application, like a Spring Boot executable jar, has everything that it needs, +to run packaged within it., +, +In this section we'll look at what it takes to get the, +<<getting-started.adoc#getting-started-first-application, simple application that we, +developed>> in the "`Getting Started`" section up and running in the Cloud., +, +, +, +[[cloud-deployment-cloud-foundry]], +=== Cloud Foundry, +Cloud Foundry provides default buildpacks that come into play if no other buildpack is, +specified. The Cloud Foundry https://github.com/cloudfoundry/java-buildpack[Java buildpack], +has excellent support for Spring applications, including Spring Boot.  You can deploy, +stand-alone executable jar applications, as well as traditional `.war` packaged, +applications., +, +Once you've built your application (using, for example, `mvn clean package`) and, +http://docs.cloudfoundry.org/devguide/installcf/install-go-cli.html[installed the `cf`, +command line tool], simply deploy your application using the `cf push` command as follows,, +substituting the path to your compiled `.jar`. Be sure to have, +http://docs.cloudfoundry.org/devguide/installcf/whats-new-v6.html#login[logged in with your, +`cf` command line client] before pushing an application., +, +[indent=0,subs="verbatim,quotes,attributes"], +----, +	$ cf push acloudyspringtime -p target/demo-0.0.1-SNAPSHOT.jar]