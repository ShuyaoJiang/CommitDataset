[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes(false));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes(false));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Vedran Pavic, +	 * Set whether to include "exception" attribute., +	 */, +	private boolean includeException;, +, +	/**, +	public boolean isIncludeException() {, +		return this.includeException;, +	}, +, +	public void setIncludeException(boolean includeException) {, +		this.includeException = includeException;, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes(false));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Vedran Pavic, +	 * Set whether to include "exception" attribute., +	 */, +	private boolean includeException;, +, +	/**, +	public boolean isIncludeException() {, +		return this.includeException;, +	}, +, +	public void setIncludeException(boolean includeException) {, +		this.includeException = includeException;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorAttributes.java, + * @author Vedran Pavic, +	private boolean includeException;, +, +	/**, +	 * Create a new {@link DefaultErrorAttributes} instance., +	 * @param includeException whether to include "exception" attribute, +	 */, +	public DefaultErrorAttributes(boolean includeException) {, +		this.includeException = includeException;, +	}, +, +			if (this.includeException) {, +			}, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes(false));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Vedran Pavic, +	 * Set whether to include "exception" attribute., +	 */, +	private boolean includeException;, +, +	/**, +	public boolean isIncludeException() {, +		return this.includeException;, +	}, +, +	public void setIncludeException(boolean includeException) {, +		this.includeException = includeException;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/DefaultErrorAttributes.java, + * @author Vedran Pavic, +	private boolean includeException;, +, +	/**, +	 * Create a new {@link DefaultErrorAttributes} instance., +	 * @param includeException whether to include "exception" attribute, +	 */, +	public DefaultErrorAttributes(boolean includeException) {, +		this.includeException = includeException;, +	}, +, +			if (this.includeException) {, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration.java, +		return new DefaultErrorAttributes(, +				this.serverProperties.getError().isIncludeException());, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +		this.filter.setErrorAttributes(new DefaultErrorAttributes(false));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Vedran Pavic, +	 * Set whether to include "exception" attribute., +	 */, +	private boolean includeException;, +, +	/**, +	public boolean isIncludeException() {, +		return this.includeException;, +	}]