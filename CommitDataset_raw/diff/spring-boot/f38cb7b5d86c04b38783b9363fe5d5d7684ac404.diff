[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/FlywayEndpoint.java, +import java.util.HashMap;, +import java.util.stream.Collectors;, +import java.util.stream.Stream;, +public class FlywayEndpoint extends AbstractEndpoint<Map<String, FlywayReport>> {, +	public Map<String, FlywayReport> invoke() {, +		Map<String, FlywayReport> reports = new HashMap<>();, +			reports.put(entry.getKey(),, +					new FlywayReport(Stream.of(entry.getValue().info().all()), +							.map(FlywayMigration::new).collect(Collectors.toList())));, +	 * Report for one {@link Flyway} instance., +		public FlywayReport(List<FlywayMigration> migrations) {, +	 * Details of a migration performed by Flyway., +		private final String installedBy;, +, +		private final Integer installedRank;, +, +			this.installedBy = info.getInstalledBy();, +			this.installedRank = info.getInstalledRank();, +		public String getInstalledBy() {, +			return this.installedBy;, +		}, +, +		public Integer getInstalledRank() {, +			return this.installedRank;, +		}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/FlywayEndpoint.java, +import java.util.HashMap;, +import java.util.stream.Collectors;, +import java.util.stream.Stream;, +public class FlywayEndpoint extends AbstractEndpoint<Map<String, FlywayReport>> {, +	public Map<String, FlywayReport> invoke() {, +		Map<String, FlywayReport> reports = new HashMap<>();, +			reports.put(entry.getKey(),, +					new FlywayReport(Stream.of(entry.getValue().info().all()), +							.map(FlywayMigration::new).collect(Collectors.toList())));, +	 * Report for one {@link Flyway} instance., +		public FlywayReport(List<FlywayMigration> migrations) {, +	 * Details of a migration performed by Flyway., +		private final String installedBy;, +, +		private final Integer installedRank;, +, +			this.installedBy = info.getInstalledBy();, +			this.installedRank = info.getInstalledRank();, +		public String getInstalledBy() {, +			return this.installedBy;, +		}, +, +		public Integer getInstalledRank() {, +			return this.installedRank;, +		}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MvcEndpointPathConfigurationTests.java, +import java.util.Collections;, +, +			return new FlywayEndpoint(Collections.singletonMap("flyway", new Flyway()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/FlywayEndpoint.java, +import java.util.HashMap;, +import java.util.stream.Collectors;, +import java.util.stream.Stream;, +public class FlywayEndpoint extends AbstractEndpoint<Map<String, FlywayReport>> {, +	public Map<String, FlywayReport> invoke() {, +		Map<String, FlywayReport> reports = new HashMap<>();, +			reports.put(entry.getKey(),, +					new FlywayReport(Stream.of(entry.getValue().info().all()), +							.map(FlywayMigration::new).collect(Collectors.toList())));, +	 * Report for one {@link Flyway} instance., +		public FlywayReport(List<FlywayMigration> migrations) {, +	 * Details of a migration performed by Flyway., +		private final String installedBy;, +, +		private final Integer installedRank;, +, +			this.installedBy = info.getInstalledBy();, +			this.installedRank = info.getInstalledRank();, +		public String getInstalledBy() {, +			return this.installedBy;, +		}, +, +		public Integer getInstalledRank() {, +			return this.installedRank;, +		}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MvcEndpointPathConfigurationTests.java, +import java.util.Collections;, +, +			return new FlywayEndpoint(Collections.singletonMap("flyway", new Flyway()));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/FlywayEndpointTests.java, + * Copyright 2012-2017 the original author or authors., +import java.util.Map;, +, +		public FlywayEndpoint endpoint(Map<String, Flyway> flyways) {, +			return new FlywayEndpoint(flyways);]