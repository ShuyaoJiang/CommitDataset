[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties.java, +		 * JSON Web Algorithm used for verifying the digital signatures., +		 */, +		private String jwsAlgorithm = "RS256";, +, +		/**, +		public String getJwsAlgorithm() {, +			return this.jwsAlgorithm;, +		}, +, +		public void setJwsAlgorithm(String jwsAlgorithm) {, +			this.jwsAlgorithm = jwsAlgorithm;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties.java, +		 * JSON Web Algorithm used for verifying the digital signatures., +		 */, +		private String jwsAlgorithm = "RS256";, +, +		/**, +		public String getJwsAlgorithm() {, +			return this.jwsAlgorithm;, +		}, +, +		public void setJwsAlgorithm(String jwsAlgorithm) {, +			this.jwsAlgorithm = jwsAlgorithm;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerJwkConfiguration.java, +		return new NimbusJwtDecoderJwkSupport(this.properties.getJwt().getJwkSetUri(),, +				this.properties.getJwt().getJwsAlgorithm());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties.java, +		 * JSON Web Algorithm used for verifying the digital signatures., +		 */, +		private String jwsAlgorithm = "RS256";, +, +		/**, +		public String getJwsAlgorithm() {, +			return this.jwsAlgorithm;, +		}, +, +		public void setJwsAlgorithm(String jwsAlgorithm) {, +			this.jwsAlgorithm = jwsAlgorithm;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerJwkConfiguration.java, +		return new NimbusJwtDecoderJwkSupport(this.properties.getJwt().getJwkSetUri(),, +				this.properties.getJwt().getJwsAlgorithm());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfigurationTests.java, +import com.nimbusds.jose.JWSAlgorithm;, +					JwtDecoder jwtDecoder = context.getBean(JwtDecoder.class);, +					assertThat(jwtDecoder).isInstanceOf(NimbusJwtDecoderJwkSupport.class);, +					NimbusJwtDecoderJwkSupport decoder = (NimbusJwtDecoderJwkSupport) jwtDecoder;, +					assertThat(decoder).hasFieldOrPropertyWithValue("jwsAlgorithm",, +							JWSAlgorithm.RS256);, +					assertThat(getBearerTokenFilter(context)).isNotNull();, +				});, +	}, +, +	@Test, +	public void autoConfigurationShouldConfigureResourceServerWithJwsAlgotihms() {, +		this.contextRunner.withPropertyValues(, +				"spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://jwk-set-uri.com",, +				"spring.security.oauth2.resourceserver.jwt.jws-algorithm=HS512"), +				.run((context) -> {, +					JwtDecoder jwtDecoder = context.getBean(JwtDecoder.class);, +					assertThat(jwtDecoder).isInstanceOf(NimbusJwtDecoderJwkSupport.class);, +					NimbusJwtDecoderJwkSupport decoder = (NimbusJwtDecoderJwkSupport) jwtDecoder;, +					assertThat(decoder).hasFieldOrPropertyWithValue("jwsAlgorithm",, +							JWSAlgorithm.HS512);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties.java, +		 * JSON Web Algorithm used for verifying the digital signatures., +		 */, +		private String jwsAlgorithm = "RS256";, +, +		/**, +		public String getJwsAlgorithm() {, +			return this.jwsAlgorithm;, +		}, +, +		public void setJwsAlgorithm(String jwsAlgorithm) {, +			this.jwsAlgorithm = jwsAlgorithm;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerJwkConfiguration.java, +		return new NimbusJwtDecoderJwkSupport(this.properties.getJwt().getJwkSetUri(),, +				this.properties.getJwt().getJwsAlgorithm());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfigurationTests.java, +import com.nimbusds.jose.JWSAlgorithm;, +					JwtDecoder jwtDecoder = context.getBean(JwtDecoder.class);, +					assertThat(jwtDecoder).isInstanceOf(NimbusJwtDecoderJwkSupport.class);, +					NimbusJwtDecoderJwkSupport decoder = (NimbusJwtDecoderJwkSupport) jwtDecoder;, +					assertThat(decoder).hasFieldOrPropertyWithValue("jwsAlgorithm",, +							JWSAlgorithm.RS256);, +					assertThat(getBearerTokenFilter(context)).isNotNull();, +				});, +	}, +, +	@Test, +	public void autoConfigurationShouldConfigureResourceServerWithJwsAlgotihms() {]