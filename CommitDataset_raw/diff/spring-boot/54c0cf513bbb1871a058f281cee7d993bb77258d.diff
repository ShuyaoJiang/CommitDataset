[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension.java, + * Reactive {@link EndpointExtension} for the {@link HealthEndpoint} that always exposes, + * full health details., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension.java, + * Reactive {@link EndpointExtension} for the {@link HealthEndpoint} that always exposes, + * full health details., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +	@ConditionalOnBean({ HealthEndpoint.class, ReactiveHealthEndpointWebExtension.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension.java, + * Reactive {@link EndpointExtension} for the {@link HealthEndpoint} that always exposes, + * full health details., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +	@ConditionalOnBean({ HealthEndpoint.class, ReactiveHealthEndpointWebExtension.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +@AutoConfigureAfter({ ServletManagementContextAutoConfiguration.class,, +		HealthEndpointAutoConfiguration.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension.java, + * Reactive {@link EndpointExtension} for the {@link HealthEndpoint} that always exposes, + * full health details., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +	@ConditionalOnBean({ HealthEndpoint.class, ReactiveHealthEndpointWebExtension.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +@AutoConfigureAfter({ ServletManagementContextAutoConfiguration.class,, +		HealthEndpointAutoConfiguration.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, + * Copyright 2012-2018 the original author or authors., +				endpointDiscoverer.discoverEndpoints(), endpointMediaTypes,, +				corsProperties.toCorsConfiguration());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension.java, + * Reactive {@link EndpointExtension} for the {@link HealthEndpoint} that always exposes, + * full health details., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +	@ConditionalOnBean({ HealthEndpoint.class, ReactiveHealthEndpointWebExtension.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +@AutoConfigureAfter({ ServletManagementContextAutoConfiguration.class,, +		HealthEndpointAutoConfiguration.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, + * Copyright 2012-2018 the original author or authors., +				endpointDiscoverer.discoverEndpoints(), endpointMediaTypes,, +				corsProperties.toCorsConfiguration());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * Datadog application key. Not strictly required, but improves the Datadog experience, +	 * by sending meter descriptions, types, and base units to Datadog., +	 * Tag that will be mapped to "host" when shipping metrics to Datadog. Can be omitted, +	 * if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension.java, + * Reactive {@link EndpointExtension} for the {@link HealthEndpoint} that always exposes, + * full health details., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +	@ConditionalOnBean({ HealthEndpoint.class, ReactiveHealthEndpointWebExtension.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +@AutoConfigureAfter({ ServletManagementContextAutoConfiguration.class,, +		HealthEndpointAutoConfiguration.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, + * Copyright 2012-2018 the original author or authors., +				endpointDiscoverer.discoverEndpoints(), endpointMediaTypes,, +				corsProperties.toCorsConfiguration());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * Datadog application key. Not strictly required, but improves the Datadog experience, +	 * by sending meter descriptions, types, and base units to Datadog., +	 * Tag that will be mapped to "host" when shipping metrics to Datadog. Can be omitted, +	 * if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogPropertiesConfigAdapter.java, +class DatadogPropertiesConfigAdapter extends, +		StepRegistryPropertiesConfigAdapter<DatadogProperties> implements DatadogConfig {, +		return get(DatadogProperties::getApplicationKey,, +				DatadogConfig.super::applicationKey);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryReactiveHealthEndpointWebExtension.java, + * Reactive {@link EndpointExtension} for the {@link HealthEndpoint} that always exposes, + * full health details., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.java, +	@ConditionalOnBean({ HealthEndpoint.class, ReactiveHealthEndpointWebExtension.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.java, +@AutoConfigureAfter({ ServletManagementContextAutoConfiguration.class,, +		HealthEndpointAutoConfiguration.class }), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, + * Copyright 2012-2018 the original author or authors., +				endpointDiscoverer.discoverEndpoints(), endpointMediaTypes,, +				corsProperties.toCorsConfiguration());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, +	 * Datadog application key. Not strictly required, but improves the Datadog experience, +	 * by sending meter descriptions, types, and base units to Datadog., +	 * Tag that will be mapped to "host" when shipping metrics to Datadog. Can be omitted, +	 * if host should be omitted on publishing., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogPropertiesConfigAdapter.java, +class DatadogPropertiesConfigAdapter extends, +		StepRegistryPropertiesConfigAdapter<DatadogProperties> implements DatadogConfig {, +		return get(DatadogProperties::getApplicationKey,, +				DatadogConfig.super::applicationKey);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, + * Copyright 2012-2018 the original author or authors., +	 * Tag that will be mapped to "host" when shipping metrics to Influx. Can be omitted]