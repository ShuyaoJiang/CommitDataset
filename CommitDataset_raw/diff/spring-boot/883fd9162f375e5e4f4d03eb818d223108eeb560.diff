[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			catch (AuthenticationException ex) {, +				catch (AccessDeniedException ex) {, +			catch (IOException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			catch (AuthenticationException ex) {, +				catch (AccessDeniedException ex) {, +			catch (IOException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +			catch (SQLException ex) {, +				map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +				catch (Exception ex) {, +					map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			catch (AuthenticationException ex) {, +				catch (AccessDeniedException ex) {, +			catch (IOException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +			catch (SQLException ex) {, +				map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +				catch (Exception ex) {, +					map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +	public void testSimpleAuthenticationProvider() throws Exception {, +	public void testSpringAuthenticationProvider() throws Exception {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			catch (AuthenticationException ex) {, +				catch (AccessDeniedException ex) {, +			catch (IOException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +			catch (SQLException ex) {, +				map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +				catch (Exception ex) {, +					map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +	public void testSimpleAuthenticationProvider() throws Exception {, +	public void testSpringAuthenticationProvider() throws Exception {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +					catch (IOException ex) {, +						// Ignore, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			catch (AuthenticationException ex) {, +				catch (AccessDeniedException ex) {, +			catch (IOException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +			catch (SQLException ex) {, +				map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +				catch (Exception ex) {, +					map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +	public void testSimpleAuthenticationProvider() throws Exception {, +	public void testSpringAuthenticationProvider() throws Exception {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +					catch (IOException ex) {, +						// Ignore, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoconfigurationTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +	@Rule, +	public ExpectedException thrown = ExpectedException.none();, +, +		// There should NOT be an AmqpAdmin bean when dynamic is switch to false, +		this.thrown.expect(NoSuchBeanDefinitionException.class);, +		this.thrown.expectMessage("No qualifying bean of type ", +				+ "[org.springframework.amqp.core.AmqpAdmin] is defined");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			catch (AuthenticationException ex) {, +				catch (AccessDeniedException ex) {, +			catch (IOException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +			catch (SQLException ex) {, +				map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +				catch (Exception ex) {, +					map.put("error", ex.getClass().getName() + ": " + ex.getMessage());, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +	public void testSimpleAuthenticationProvider() throws Exception {, +	public void testSpringAuthenticationProvider() throws Exception {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +					catch (IOException ex) {, +						// Ignore, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoconfigurationTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +	@Rule, +	public ExpectedException thrown = ExpectedException.none();, +, +		// There should NOT be an AmqpAdmin bean when dynamic is switch to false, +		this.thrown.expect(NoSuchBeanDefinitionException.class);, +		this.thrown.expectMessage("No qualifying bean of type ", +				+ "[org.springframework.amqp.core.AmqpAdmin] is defined");, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/org/springframework/boot/sample/ops/UnsecureManagementSampleActuatorApplicationTests.java, +		} catch (AssertionError ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			catch (AuthenticationException ex) {, +				catch (AccessDeniedException ex) {, +			catch (IOException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +			catch (SQLException ex) {]