[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.web;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +import org.springframework.web.filter.CharacterEncodingFilter;, +, +/**, + * {@link EnableAutoConfiguration Auto-configuration} for configuring the, + * encoding to use in web applications., + *, + * @author Stephane Nicoll, + * @since 1.2.0, + */, +@Configuration, +@EnableConfigurationProperties(HttpEncodingProperties.class), +@ConditionalOnClass(CharacterEncodingFilter.class), +@ConditionalOnProperty(prefix = "spring.http.encoding", value = "enabled", matchIfMissing = true), +public class HttpEncodingAutoConfiguration {, +, +	@Autowired, +	private HttpEncodingProperties httpEncodingProperties;, +, +	@ConditionalOnMissingBean, +	@Bean, +	@Order(Ordered.HIGHEST_PRECEDENCE), +	public CharacterEncodingFilter characterEncodingFilter() {, +		CharacterEncodingFilter filter = new CharacterEncodingFilter();, +		filter.setEncoding(httpEncodingProperties.getCharset().name());, +		filter.setForceEncoding(httpEncodingProperties.isForce());, +		return filter;, +	}, +, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.web;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +import org.springframework.web.filter.CharacterEncodingFilter;, +, +/**, + * {@link EnableAutoConfiguration Auto-configuration} for configuring the, + * encoding to use in web applications., + *, + * @author Stephane Nicoll, + * @since 1.2.0, + */, +@Configuration, +@EnableConfigurationProperties(HttpEncodingProperties.class), +@ConditionalOnClass(CharacterEncodingFilter.class), +@ConditionalOnProperty(prefix = "spring.http.encoding", value = "enabled", matchIfMissing = true)]