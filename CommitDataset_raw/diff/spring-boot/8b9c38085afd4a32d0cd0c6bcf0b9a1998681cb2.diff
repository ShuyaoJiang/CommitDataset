[+++ b/CONTRIBUTING.adoc, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +++ b/CONTRIBUTING.adoc, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +++ b/pom.xml, +				<module>spring-boot-devtools</module>, +++ b/CONTRIBUTING.adoc, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +++ b/pom.xml, +				<module>spring-boot-devtools</module>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/listener/AuditListener.java, + * Copyright 2012-2015 the original author or authors., + * @author Stephane Nicoll, +		if (logger.isDebugEnabled()) {, +			logger.debug(event.getAuditEvent());, +		}, +++ b/CONTRIBUTING.adoc, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +++ b/pom.xml, +				<module>spring-boot-devtools</module>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/listener/AuditListener.java, + * Copyright 2012-2015 the original author or authors., + * @author Stephane Nicoll, +		if (logger.isDebugEnabled()) {, +			logger.debug(event.getAuditEvent());, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/CONTRIBUTING.adoc, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +++ b/pom.xml, +				<module>spring-boot-devtools</module>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/listener/AuditListener.java, + * Copyright 2012-2015 the original author or authors., + * @author Stephane Nicoll, +		if (logger.isDebugEnabled()) {, +			logger.debug(event.getAuditEvent());, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, + * {@code endpoints.jolokia.enabled: false} or {@code endpoints.enabled: false}., + * {@code jolokia.config.*} properties. See the <a, +++ b/CONTRIBUTING.adoc, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +++ b/pom.xml, +				<module>spring-boot-devtools</module>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/listener/AuditListener.java, + * Copyright 2012-2015 the original author or authors., + * @author Stephane Nicoll, +		if (logger.isDebugEnabled()) {, +			logger.debug(event.getAuditEvent());, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, + * {@code endpoints.jolokia.enabled: false} or {@code endpoints.enabled: false}., + * {@code jolokia.config.*} properties. See the <a, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +		@Value("spring.metrics.${spring.application.name:application}.${random.value:0000}"), +		@Value("d.d.k.d"), +		private String aggregateKeyPattern = "";, +, +			export.getRedis().setAggregateKeyPattern(this.aggregateKeyPattern);, +++ b/CONTRIBUTING.adoc, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +++ b/pom.xml, +				<module>spring-boot-devtools</module>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/listener/AuditListener.java, + * Copyright 2012-2015 the original author or authors., + * @author Stephane Nicoll, +		if (logger.isDebugEnabled()) {, +			logger.debug(event.getAuditEvent());, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java]