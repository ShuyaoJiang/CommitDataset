[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	public final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HealthIndicatorAutoConfiguration.class,, +	private ContextConsumer hasSingleHealthIndicator(, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	public final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HealthIndicatorAutoConfiguration.class,, +	private ContextConsumer hasSingleHealthIndicator(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(CacheAutoConfiguration.class);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	public final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HealthIndicatorAutoConfiguration.class,, +	private ContextConsumer hasSingleHealthIndicator(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(CacheAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationClientTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HazelcastAutoConfiguration.class);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	public final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HealthIndicatorAutoConfiguration.class,, +	private ContextConsumer hasSingleHealthIndicator(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(CacheAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationClientTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HazelcastAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationServerTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HazelcastAutoConfiguration.class);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	public final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HealthIndicatorAutoConfiguration.class,, +	private ContextConsumer hasSingleHealthIndicator(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(CacheAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationClientTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HazelcastAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationServerTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HazelcastAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	public final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HealthIndicatorAutoConfiguration.class,, +	private ContextConsumer hasSingleHealthIndicator(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(CacheAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationClientTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HazelcastAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationServerTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HazelcastAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader, +	private ContextConsumer testExplicitType() {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	public final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(HealthIndicatorAutoConfiguration.class,, +	private ContextConsumer hasSingleHealthIndicator(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfigurationTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard(), +			.autoConfig(CacheAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfigurationClientTests.java, +import org.springframework.boot.test.context.StandardContextLoader;, +	private final StandardContextLoader contextLoader = ContextLoader.standard()]