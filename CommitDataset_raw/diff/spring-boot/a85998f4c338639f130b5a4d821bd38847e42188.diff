[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.hibernate</groupId>, +			<artifactId>hibernate-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.hibernate</groupId>, +			<artifactId>hibernate-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, + * Hibernate {@link EntityManagerFactory} instances that have statistics enabled., + * @author Stephane Nicoll, +@ConditionalOnClass({ EntityManagerFactory.class, MeterRegistry.class }), +		entityManagerFactories.forEach(this::bindEntityManagerFactoryToRegistry);, +	private void bindEntityManagerFactoryToRegistry(String beanName,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.hibernate</groupId>, +			<artifactId>hibernate-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, + * Hibernate {@link EntityManagerFactory} instances that have statistics enabled., + * @author Stephane Nicoll, +@ConditionalOnClass({ EntityManagerFactory.class, MeterRegistry.class }), +		entityManagerFactories.forEach(this::bindEntityManagerFactoryToRegistry);, +	private void bindEntityManagerFactoryToRegistry(String beanName,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/package-info.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +/**, + * Auto-configuration for JDBC metrics., + */, +package org.springframework.boot.actuate.autoconfigure.metrics.orm.jpa;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.hibernate</groupId>, +			<artifactId>hibernate-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, + * Hibernate {@link EntityManagerFactory} instances that have statistics enabled., + * @author Stephane Nicoll, +@ConditionalOnClass({ EntityManagerFactory.class, MeterRegistry.class }), +		entityManagerFactories.forEach(this::bindEntityManagerFactoryToRegistry);, +	private void bindEntityManagerFactoryToRegistry(String beanName,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/package-info.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +/**, + * Auto-configuration for JDBC metrics., + */, +package org.springframework.boot.actuate.autoconfigure.metrics.orm.jpa;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfigurationTests.java, +			.withUserConfiguration(BaseConfiguration.class);, +		this.contextRunner, +				.withPropertyValues(, +						"spring.jpa.properties.hibernate.generate_statistics:true"), +				.run((context) -> {, +		this.contextRunner.withPropertyValues("management.metrics.enable.hibernate=false",, +				"spring.jpa.properties.hibernate.generate_statistics:true"), +				.withPropertyValues(, +						"spring.jpa.properties.hibernate.generate_statistics:true"), +				.withPropertyValues(, +						"spring.jpa.properties.hibernate.generate_statistics:true"), +]