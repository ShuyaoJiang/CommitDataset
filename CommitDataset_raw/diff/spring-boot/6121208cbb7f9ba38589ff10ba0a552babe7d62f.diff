[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +public class JolokiaMvcEndpoint extends AbstractNamedMvcEndpoint implements, +		InitializingBean, ApplicationContextAware, ServletContextAware, DisposableBean {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +public class JolokiaMvcEndpoint extends AbstractNamedMvcEndpoint implements, +		InitializingBean, ApplicationContextAware, ServletContextAware, DisposableBean {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthorizationAuditListener.java, +		publish(new AuditEvent(event.getAuthentication().getName(), AUTHORIZATION_FAILURE,, +				data));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +public class JolokiaMvcEndpoint extends AbstractNamedMvcEndpoint implements, +		InitializingBean, ApplicationContextAware, ServletContextAware, DisposableBean {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthorizationAuditListener.java, +		publish(new AuditEvent(event.getAuthentication().getName(), AUTHORIZATION_FAILURE,, +				data));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +								authentication.getCredentials(), Collections.singleton(, +										new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +public class JolokiaMvcEndpoint extends AbstractNamedMvcEndpoint implements, +		InitializingBean, ApplicationContextAware, ServletContextAware, DisposableBean {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthorizationAuditListener.java, +		publish(new AuditEvent(event.getAuthentication().getName(), AUTHORIZATION_FAILURE,, +				data));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +								authentication.getCredentials(), Collections.singleton(, +										new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporterTests.java, +		mbeanExporter.getServer().invoke(getObjectName("loggersEndpoint", this.context),, +				"setLogLevel", new Object[] { "com.example", "invalid" },, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +public class JolokiaMvcEndpoint extends AbstractNamedMvcEndpoint implements, +		InitializingBean, ApplicationContextAware, ServletContextAware, DisposableBean {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthorizationAuditListener.java, +		publish(new AuditEvent(event.getAuthentication().getName(), AUTHORIZATION_FAILURE,, +				data));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +								authentication.getCredentials(), Collections.singleton(, +										new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporterTests.java, +		mbeanExporter.getServer().invoke(getObjectName("loggersEndpoint", this.context),, +				"setLogLevel", new Object[] { "com.example", "invalid" },, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpointsTests.java, +, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +public class JolokiaMvcEndpoint extends AbstractNamedMvcEndpoint implements, +		InitializingBean, ApplicationContextAware, ServletContextAware, DisposableBean {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthorizationAuditListener.java, +		publish(new AuditEvent(event.getAuthentication().getName(), AUTHORIZATION_FAILURE,, +				data));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +								authentication.getCredentials(), Collections.singleton(, +										new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporterTests.java, +		mbeanExporter.getServer().invoke(getObjectName("loggersEndpoint", this.context),, +				"setLogLevel", new Object[] { "com.example", "invalid" },, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpointsTests.java, +, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, +						new User("user", "password", AuthorityUtils, +								.commaSeparatedStringToAuthorityList("USER"))));, +		AuditApplicationEvent event = handleAuthenticationEvent(, +				new AuthenticationFailureExpiredEvent(authentication,, +						new BadCredentialsException("Bad user")));, +		assertThat(event.getAuditEvent().getData()).containsEntry("details", details);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpoint.java, +public class JolokiaMvcEndpoint extends AbstractNamedMvcEndpoint implements, +		InitializingBean, ApplicationContextAware, ServletContextAware, DisposableBean {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthorizationAuditListener.java, +		publish(new AuditEvent(event.getAuthentication().getName(), AUTHORIZATION_FAILURE,, +				data));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +								authentication.getCredentials(), Collections.singleton(, +										new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporterTests.java, +		mbeanExporter.getServer().invoke(getObjectName("loggersEndpoint", this.context),, +				"setLogLevel", new Object[] { "com.example", "invalid" },, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpointsTests.java, +, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, +						new User("user", "password", AuthorityUtils]