[+++ b/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextApplicationContextInitializer.java, +		if (applicationContext != this.parent) {, +	}, +			if (context instanceof ConfigurableApplicationContext, +					&& context == event.getSource()) {, +++ b/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextApplicationContextInitializer.java, +		if (applicationContext != this.parent) {, +	}, +			if (context instanceof ConfigurableApplicationContext, +					&& context == event.getSource()) {, +++ b/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextCloserApplicationListener.java, +import org.springframework.beans.BeansException;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +		ApplicationListener<ParentContextAvailableEvent>, ApplicationContextAware,, +		Ordered {, +, +	private int order = Ordered.LOWEST_PRECEDENCE - 10;, +, +	private ApplicationContext context;, +		return this.order;, +	}, +, +	@Override, +	public void setApplicationContext(ApplicationContext context) throws BeansException {, +		this.context = context;, +		if (child == this.context) {, +	}, +		@Override, +		public int hashCode() {, +			final int prime = 31;, +			int result = 1;, +			result = prime, +					* result, +					+ ((this.childContext.get() == null) ? 0 : this.childContext.get(), +							.hashCode());, +			return result;, +		}, +, +		@Override, +		public boolean equals(Object obj) {, +			if (this == obj), +				return true;, +			if (obj == null), +				return false;, +			if (getClass() != obj.getClass()), +				return false;, +			ContextCloserListener other = (ContextCloserListener) obj;, +			if (this.childContext.get() == null) {, +				if (other.childContext.get() != null), +					return false;, +			}, +			else if (!this.childContext.get().equals(other.childContext.get())), +				return false;, +			return true;, +		}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextApplicationContextInitializer.java, +		if (applicationContext != this.parent) {, +	}, +			if (context instanceof ConfigurableApplicationContext, +					&& context == event.getSource()) {, +++ b/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextCloserApplicationListener.java, +import org.springframework.beans.BeansException;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +		ApplicationListener<ParentContextAvailableEvent>, ApplicationContextAware,, +		Ordered {, +, +	private int order = Ordered.LOWEST_PRECEDENCE - 10;, +, +	private ApplicationContext context;, +		return this.order;, +	}, +, +	@Override, +	public void setApplicationContext(ApplicationContext context) throws BeansException {, +		this.context = context;, +		if (child == this.context) {, +	}, +		@Override, +		public int hashCode() {, +			final int prime = 31;, +			int result = 1;, +			result = prime, +					* result, +					+ ((this.childContext.get() == null) ? 0 : this.childContext.get(), +							.hashCode());, +			return result;, +		}, +, +		@Override, +		public boolean equals(Object obj) {, +			if (this == obj), +				return true;, +			if (obj == null), +				return false;, +			if (getClass() != obj.getClass()), +				return false;, +			ContextCloserListener other = (ContextCloserListener) obj;]