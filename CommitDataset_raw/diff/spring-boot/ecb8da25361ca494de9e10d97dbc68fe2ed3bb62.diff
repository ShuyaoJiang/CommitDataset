[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * Time period for which Influx should retain data in the current database. For, +	 * instance 7d, check the influx documentation for more details on the duration, +	 * format., +	 * How many copies of the data are stored in the cluster. Must be 1 for a single node, +	 * instance., +	 * Time range covered by a shard group. For instance 2w, check the influx, +	 * documentation for more details on the duration format., +	public String getRetentionDuration() {, +		return this.retentionDuration;, +	}, +, +	public void setRetentionDuration(String retentionDuration) {, +		this.retentionDuration = retentionDuration;, +	}, +, +	public Integer getRetentionReplicationFactor() {, +		return this.retentionReplicationFactor;, +	}, +, +	public void setRetentionReplicationFactor(Integer retentionReplicationFactor) {, +		this.retentionReplicationFactor = retentionReplicationFactor;, +	}, +, +	public String getRetentionShardDuration() {, +		return this.retentionShardDuration;, +	}, +, +	public void setRetentionShardDuration(String retentionShardDuration) {, +		this.retentionShardDuration = retentionShardDuration;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * Time period for which Influx should retain data in the current database. For, +	 * instance 7d, check the influx documentation for more details on the duration, +	 * format., +	 * How many copies of the data are stored in the cluster. Must be 1 for a single node, +	 * instance., +	 * Time range covered by a shard group. For instance 2w, check the influx, +	 * documentation for more details on the duration format., +	public String getRetentionDuration() {, +		return this.retentionDuration;, +	}, +, +	public void setRetentionDuration(String retentionDuration) {, +		this.retentionDuration = retentionDuration;, +	}, +, +	public Integer getRetentionReplicationFactor() {, +		return this.retentionReplicationFactor;, +	}, +, +	public void setRetentionReplicationFactor(Integer retentionReplicationFactor) {, +		this.retentionReplicationFactor = retentionReplicationFactor;, +	}, +, +	public String getRetentionShardDuration() {, +		return this.retentionShardDuration;, +	}, +, +	public void setRetentionShardDuration(String retentionShardDuration) {, +		this.retentionShardDuration = retentionShardDuration;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesTests.java, +		assertThat(properties.getRetentionDuration()), +				.isEqualTo(config.retentionDuration());, +		assertThat(properties.getRetentionReplicationFactor()), +				.isEqualTo(config.retentionReplicationFactor());, +		assertThat(properties.getRetentionShardDuration()), +				.isEqualTo(config.retentionShardDuration());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxProperties.java, +	 * Time period for which Influx should retain data in the current database. For, +	 * instance 7d, check the influx documentation for more details on the duration, +	 * format., +	 * How many copies of the data are stored in the cluster. Must be 1 for a single node, +	 * instance., +	 * Time range covered by a shard group. For instance 2w, check the influx, +	 * documentation for more details on the duration format., +	public String getRetentionDuration() {, +		return this.retentionDuration;, +	}, +, +	public void setRetentionDuration(String retentionDuration) {, +		this.retentionDuration = retentionDuration;, +	}, +, +	public Integer getRetentionReplicationFactor() {, +		return this.retentionReplicationFactor;, +	}, +, +	public void setRetentionReplicationFactor(Integer retentionReplicationFactor) {, +		this.retentionReplicationFactor = retentionReplicationFactor;, +	}, +, +	public String getRetentionShardDuration() {, +		return this.retentionShardDuration;, +	}, +, +	public void setRetentionShardDuration(String retentionShardDuration) {]