[+++ b/pom.xml, +		<module>spring-bootstrap</module>, +		<module>spring-autoconfigure</module>, +		<module>spring-starters</module>, +		<module>spring-actuator</module>, +		<module>spring-launcher</module>, +		<module>spring-package-maven-plugin</module>, +		<module>spring-cli</module>, +++ b/pom.xml, +		<module>spring-bootstrap</module>, +		<module>spring-autoconfigure</module>, +		<module>spring-starters</module>, +		<module>spring-actuator</module>, +		<module>spring-launcher</module>, +		<module>spring-package-maven-plugin</module>, +		<module>spring-cli</module>, +++ b/spring-actuator/README.md, +# Spring Zero Actuator, +, +Minimum fuss for getting applications up and running in production,, +and in other environments.  There is a strong emphasis on implementing, +RESTful web services but many features are more generic than that., +, +|Feature |Implementation |Notes |, +|---|---|---|, +|Server   |Tomcat or Jetty  | Whatever is on the classpath |, +|REST     |Spring MVC       | |, +|Security |Spring Security  | If on the classpath |, +|Logging  |Logback, Log4j or JDK | Whatever is on the classpath. Sensible defaults. |, +|Database |HSQLDB or H2     | Per classpath, or define a DataSource to override |, +|Externalized configuration | Properties or YAML | Support for Spring profiles. Bind automatically to @Bean. |, +|Audit                      | Spring Security and Spring ApplicationEvent |Flexible abstraction with sensible defaults for security events |, +|Validation                 | JSR-303    |If on the classpath |, +|Management endpoints       | Spring MVC | Health, basic metrics, request tracing, shutdown, thread dumps |, +|Error pages                | Spring MVC | Sensible defaults based on exception and status code |, +|JSON                       |Jackson 2 | |, +|ORM                        |Spring Data JPA | If on the classpath |, +|Batch                      |Spring Batch | If enabled and on the classpath |, +|Integration Patterns       |Spring Integration | If on the classpath |, +, +For a quick introduction and to get started quickly with a new, +project, carry on reading.  For more in depth coverage of the features, +of Spring Zero Actuator, go to the, +[Feature Guide](https://github.com/SpringSource/spring-bootstrap/tree/master/spring-zero-actuator/docs/Features.md)., +, +# Getting Started, +, +You will need Java (6 at least) and a build tool (Maven is what we use, +below, but you are more than welcome to use gradle).  These can be, +downloaded or installed easily in most operating systems.  For Ubuntu:, +, +    $ sudo apt-get install openjdk-6-jdk maven, +, +<!--FIXME: short instructions for Mac.-->, +, +## A basic project, +, +If you are using Maven create a really simple `pom.xml` with 2 dependencies:, +, +    <project>, +      <modelVersion>4.0.0</modelVersion>, +      <groupId>com.mycompany</groupId>, +      <artifactId>myproject</artifactId>, +      <version>1.0.0-SNAPSHOT</version>, +      <packaging>jar</packaging>, +      <parent>, +        <groupId>org.springframework.zero</groupId>, +        <artifactId>spring-zero-starter</artifactId>, +        <version>0.0.1-SNAPSHOT</version>, +      </parent>, +      <dependencies>, +        <dependency>, +          <groupId>org.springframework.zero</groupId>, +          <artifactId>spring-zero-web-starter</artifactId>, +        </dependency>, +        <dependency>, +          <groupId>org.springframework.zero</groupId>, +          <artifactId>spring-zero-service</artifactId>, +        </dependency>, +      </dependencies>, +      <build>, +        <plugins>, +          <plugin>, +            <groupId>org.apache.maven.plugins</groupId>, +            <artifactId>maven-shade-plugin</artifactId>, +         </plugin>, +        </plugins>, +      </build>, +    </project>, +, +If you like Gradle, that's fine, and you will know what to do with, +those dependencies.  The first dependency adds Spring Zero auto, +configuration and the Jetty container to your application, and the, +second one adds some more opinionated stuff like the default, +management endpoints.  If you prefer Tomcat you can just add the, +embedded Tomcat jars to your classpath instead of Jetty., +, +You should be able to run it already:, +, +    $ mvn package]