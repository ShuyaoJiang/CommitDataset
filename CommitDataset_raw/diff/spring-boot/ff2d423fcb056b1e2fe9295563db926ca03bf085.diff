[+++ b/spring-boot-samples/spring-boot-sample-undertow/src/main/java/sample/undertow/web/SampleController.java, + * Copyright 2012-2015 the original author or authors., +import java.util.concurrent.Callable;, +, +import org.springframework.web.bind.annotation.RestController;, +@RestController, +	@RequestMapping("/async"), +	public Callable<String> helloWorldAsync() {, +		return new Callable<String>() {, +, +			@Override, +			public String call() throws Exception {, +				return "async: ", +						+ SampleController.this.helloWorldService.getHelloMessage();, +			}, +, +		};, +, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-undertow/src/main/java/sample/undertow/web/SampleController.java, + * Copyright 2012-2015 the original author or authors., +import java.util.concurrent.Callable;, +, +import org.springframework.web.bind.annotation.RestController;, +@RestController, +	@RequestMapping("/async"), +	public Callable<String> helloWorldAsync() {, +		return new Callable<String>() {, +, +			@Override, +			public String call() throws Exception {, +				return "async: ", +						+ SampleController.this.helloWorldService.getHelloMessage();, +			}, +, +		};, +, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-undertow/src/test/java/sample/undertow/SampleUndertowApplicationTests.java, + * Copyright 2012-2015 the original author or authors., + * @author Andy Wilkinson, +		assertOkResponse("/", "Hello World");, +	}, +, +	@Test, +	public void testAsync() throws Exception {, +		assertOkResponse("/async", "async: Hello World");, +	}, +, +	private void assertOkResponse(String path, String body) {, +				"http://localhost:" + this.port + path, String.class);, +		assertEquals(body, entity.getBody());, +++ b/spring-boot-samples/spring-boot-sample-undertow/src/main/java/sample/undertow/web/SampleController.java, + * Copyright 2012-2015 the original author or authors., +import java.util.concurrent.Callable;, +, +import org.springframework.web.bind.annotation.RestController;, +@RestController, +	@RequestMapping("/async"), +	public Callable<String> helloWorldAsync() {, +		return new Callable<String>() {, +, +			@Override, +			public String call() throws Exception {, +				return "async: ", +						+ SampleController.this.helloWorldService.getHelloMessage();, +			}, +, +		};, +, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-undertow/src/test/java/sample/undertow/SampleUndertowApplicationTests.java, + * Copyright 2012-2015 the original author or authors., + * @author Andy Wilkinson, +		assertOkResponse("/", "Hello World");, +	}, +, +	@Test, +	public void testAsync() throws Exception {, +		assertOkResponse("/async", "async: Hello World");, +	}, +, +	private void assertOkResponse(String path, String body) {, +				"http://localhost:" + this.port + path, String.class);, +		assertEquals(body, entity.getBody());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory.java, +		deployment.setContextPath(getContextPath());, +++ b/spring-boot-samples/spring-boot-sample-undertow/src/main/java/sample/undertow/web/SampleController.java, + * Copyright 2012-2015 the original author or authors., +import java.util.concurrent.Callable;, +, +import org.springframework.web.bind.annotation.RestController;, +@RestController, +	@RequestMapping("/async"), +	public Callable<String> helloWorldAsync() {, +		return new Callable<String>() {, +]