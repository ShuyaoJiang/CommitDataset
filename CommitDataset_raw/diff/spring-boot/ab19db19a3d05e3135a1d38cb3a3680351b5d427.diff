[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/DataSourceInitializedPublisher.java, +	private JpaProperties jpaProperties;, +, +	private HibernateProperties hibernateProperties;, +			this.jpaProperties = (JpaProperties) bean;, +		}, +		if (bean instanceof HibernateProperties) {, +			this.hibernateProperties = (HibernateProperties) bean;, +		if (this.jpaProperties == null || this.hibernateProperties == null) {, +		Map<String, Object> hibernate = this.hibernateProperties, +				.determineHibernateProperties(this.jpaProperties.getProperties(),, +						new HibernateSettings().ddlAuto(defaultDdlAuto));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/DataSourceInitializedPublisher.java, +	private JpaProperties jpaProperties;, +, +	private HibernateProperties hibernateProperties;, +			this.jpaProperties = (JpaProperties) bean;, +		}, +		if (bean instanceof HibernateProperties) {, +			this.hibernateProperties = (HibernateProperties) bean;, +		if (this.jpaProperties == null || this.hibernateProperties == null) {, +		Map<String, Object> hibernate = this.hibernateProperties, +				.determineHibernateProperties(this.jpaProperties.getProperties(),, +						new HibernateSettings().ddlAuto(defaultDdlAuto));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties(HibernateProperties.class), +	private final HibernateProperties hibernateProperties;, +, +			HibernateProperties hibernateProperties,, +		this.hibernateProperties = hibernateProperties;, +		return new LinkedHashMap<>(this.hibernateProperties.determineHibernateProperties(, +				getProperties().getProperties(),, +				new HibernateSettings().ddlAuto(defaultDdlMode), +						.hibernatePropertiesCustomizers(, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/DataSourceInitializedPublisher.java, +	private JpaProperties jpaProperties;, +, +	private HibernateProperties hibernateProperties;, +			this.jpaProperties = (JpaProperties) bean;, +		}, +		if (bean instanceof HibernateProperties) {, +			this.hibernateProperties = (HibernateProperties) bean;, +		if (this.jpaProperties == null || this.hibernateProperties == null) {, +		Map<String, Object> hibernate = this.hibernateProperties, +				.determineHibernateProperties(this.jpaProperties.getProperties(),, +						new HibernateSettings().ddlAuto(defaultDdlAuto));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties(HibernateProperties.class), +	private final HibernateProperties hibernateProperties;, +, +			HibernateProperties hibernateProperties,, +		this.hibernateProperties = hibernateProperties;, +		return new LinkedHashMap<>(this.hibernateProperties.determineHibernateProperties(, +				getProperties().getProperties(),, +				new HibernateSettings().ddlAuto(defaultDdlMode), +						.hibernatePropertiesCustomizers(, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.orm.jpa;, +, +import java.util.Collection;, +import java.util.HashMap;, +import java.util.Map;, +import java.util.function.Supplier;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import org.springframework.util.Assert;, +import org.springframework.util.ObjectUtils;, +import org.springframework.util.StringUtils;, +, +/**, + * Configuration properties for Hibernate., + *, + * @author Stephane Nicoll, + * @since 2.1.0, + * @see JpaProperties, + */, +@ConfigurationProperties("spring.jpa.hibernate"), +public class HibernateProperties {, +, +	private static final String USE_NEW_ID_GENERATOR_MAPPINGS = "hibernate.id.", +			+ "new_generator_mappings";, +]