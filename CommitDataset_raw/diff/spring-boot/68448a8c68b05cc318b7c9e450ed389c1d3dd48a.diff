[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +		@Autowired, +		private ServerProperties server;, +, +			String[] paths = this.server.getPathsArray(ignored);, +			ignoring.antMatchers(paths);, +		@Autowired, +		private ServerProperties server;, +, +				paths = this.server.getPathsArray(paths);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +		@Autowired, +		private ServerProperties server;, +, +			String[] paths = this.server.getPathsArray(ignored);, +			ignoring.antMatchers(paths);, +		@Autowired, +		private ServerProperties server;, +, +				paths = this.server.getPathsArray(paths);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +		@Autowired, +		private ServerProperties server;, +, +			String[] paths = this.server.getPathsArray(ignored);, +			ignoring.antMatchers(paths);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +		@Autowired, +		private ServerProperties server;, +, +			String[] paths = this.server.getPathsArray(ignored);, +			ignoring.antMatchers(paths);, +		@Autowired, +		private ServerProperties server;, +, +				paths = this.server.getPathsArray(paths);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +		@Autowired, +		private ServerProperties server;, +, +			String[] paths = this.server.getPathsArray(ignored);, +			ignoring.antMatchers(paths);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import java.util.Collection;, +	public String[] getPathsArray(Collection<String> paths) {, +		String[] result = new String[paths.size()];, +		int i = 0;, +		for (String path : paths) {, +			result[i++] = getPath(path);, +		}, +		return result;, +	}, +, +	public String[] getPathsArray(String[] paths) {, +		String[] result = new String[paths.length];, +		int i = 0;, +		for (String path : paths) {, +			result[i++] = getPath(path);, +		}, +		return result;, +	}, +, +	public String getPath(String path) {, +		String prefix = getServletPrefix();, +		if (!path.startsWith("/")) {, +			path = "/" + path;, +		}, +		return prefix + path;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +		@Autowired, +		private ServerProperties server;, +, +			String[] paths = this.server.getPathsArray(ignored);, +			ignoring.antMatchers(paths);, +		@Autowired, +		private ServerProperties server;, +, +				paths = this.server.getPathsArray(paths);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +		@Autowired, +		private ServerProperties server;, +, +			String[] paths = this.server.getPathsArray(ignored);, +			ignoring.antMatchers(paths);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import java.util.Collection;, +	public String[] getPathsArray(Collection<String> paths) {, +		String[] result = new String[paths.size()];, +		int i = 0;, +		for (String path : paths) {, +			result[i++] = getPath(path);]