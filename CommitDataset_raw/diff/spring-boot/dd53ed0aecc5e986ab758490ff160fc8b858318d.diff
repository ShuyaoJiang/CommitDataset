[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +, +`@DataRedisTest` can be used if you want to test Redis applications. By default, it will, +scan for `@RedisHash` classes and configure Spring Data Redis repositories. Regular, +`@Component` beans will not be loaded into the `ApplicationContext`:, +, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +, +`@DataRedisTest` can be used if you want to test Redis applications. By default, it will, +scan for `@RedisHash` classes and configure Spring Data Redis repositories. Regular, +`@Component` beans will not be loaded into the `ApplicationContext`:, +, +++ b/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-pool2</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +			<groupId>redis.clients</groupId>, +			<artifactId>jedis</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +, +`@DataRedisTest` can be used if you want to test Redis applications. By default, it will, +scan for `@RedisHash` classes and configure Spring Data Redis repositories. Regular, +`@Component` beans will not be loaded into the `ApplicationContext`:, +, +++ b/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-pool2</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +			<groupId>redis.clients</groupId>, +			<artifactId>jedis</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/data/redis/AutoConfigureDataRedis.java, + * @since 2.0.0, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +, +`@DataRedisTest` can be used if you want to test Redis applications. By default, it will, +scan for `@RedisHash` classes and configure Spring Data Redis repositories. Regular, +`@Component` beans will not be loaded into the `ApplicationContext`:, +, +++ b/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-pool2</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +			<groupId>redis.clients</groupId>, +			<artifactId>jedis</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/data/redis/AutoConfigureDataRedis.java, + * @since 2.0.0, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/data/redis/DataRedisTest.java, + * Redis components., + * configuration relevant to Redis tests., + * @since 2.0.0, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +, +`@DataRedisTest` can be used if you want to test Redis applications. By default, it will, +scan for `@RedisHash` classes and configure Spring Data Redis repositories. Regular, +`@Component` beans will not be loaded into the `ApplicationContext`:, +, +++ b/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.apache.commons</groupId>, +			<artifactId>commons-pool2</artifactId>, +			<scope>test</scope>]