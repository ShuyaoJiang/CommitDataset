[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +import java.util.stream.Collectors;, +, +	@Override, +	public Class<? extends Group> getImportGroup() {, +		return AutoConfigurationGroup.class;, +	private static class AutoConfigurationGroup implements DeferredImportSelector.Group,, +			BeanClassLoaderAware, BeanFactoryAware, ResourceLoaderAware {, +, +		private ClassLoader beanClassLoader;, +, +		private BeanFactory beanFactory;, +, +		private ResourceLoader resourceLoader;, +, +		private final Map<String, AnnotationMetadata> entries = new LinkedHashMap<>();, +, +		@Override, +		public void setBeanClassLoader(ClassLoader classLoader) {, +			this.beanClassLoader = classLoader;, +		}, +, +		@Override, +		public void setBeanFactory(BeanFactory beanFactory) {, +			this.beanFactory = beanFactory;, +		}, +, +		@Override, +		public void setResourceLoader(ResourceLoader resourceLoader) {, +			this.resourceLoader = resourceLoader;, +		}, +, +		@Override, +		public void process(AnnotationMetadata annotationMetadata,, +				DeferredImportSelector deferredImportSelector) {, +			String[] imports = deferredImportSelector.selectImports(annotationMetadata);, +			for (String importClassName : imports) {, +				this.entries.put(importClassName, annotationMetadata);, +			}, +		}, +, +		@Override, +		public Iterable<Entry> selectImports() {, +			return sortAutoConfigurations().stream(), +					.map((importClassName) -> new Entry(this.entries.get(importClassName),, +							importClassName)), +					.collect(Collectors.toList());, +		}, +, +		private List<String> sortAutoConfigurations() {, +			List<String> autoConfigurations = new ArrayList<>(this.entries.keySet());, +			if (this.entries.size() <= 1) {, +				return autoConfigurations;, +			}, +			AutoConfigurationMetadata autoConfigurationMetadata = AutoConfigurationMetadataLoader, +					.loadMetadata(this.beanClassLoader);, +			return new AutoConfigurationSorter(getMetadataReaderFactory(),, +					autoConfigurationMetadata).getInPriorityOrder(autoConfigurations);, +		}, +, +		private MetadataReaderFactory getMetadataReaderFactory() {, +			try {, +				return this.beanFactory.getBean(, +						SharedMetadataReaderFactoryContextInitializer.BEAN_NAME,, +						MetadataReaderFactory.class);, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +				return new CachingMetadataReaderFactory(this.resourceLoader);, +			}, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.java, +import java.util.LinkedHashMap;, +import java.util.Map;, +import java.util.stream.Collectors;, +, +	@Override, +	public Class<? extends Group> getImportGroup() {, +		return AutoConfigurationGroup.class;, +	private static class AutoConfigurationGroup implements DeferredImportSelector.Group,, +			BeanClassLoaderAware, BeanFactoryAware, ResourceLoaderAware {, +, +		private ClassLoader beanClassLoader;, +, +		private BeanFactory beanFactory;, +, +		private ResourceLoader resourceLoader;, +, +		private final Map<String, AnnotationMetadata> entries = new LinkedHashMap<>();, +, +		@Override, +		public void setBeanClassLoader(ClassLoader classLoader) {, +			this.beanClassLoader = classLoader;, +		}, +, +		@Override]