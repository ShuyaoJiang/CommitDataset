[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +				configureVisibility(builder, this.jacksonProperties.getVisibility());, +			private void configureVisibility(Jackson2ObjectMapperBuilder builder,, +					Map<PropertyAccessor, JsonAutoDetect.Visibility> accessors) {, +				accessors.forEach(builder::visibility);, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +				configureVisibility(builder, this.jacksonProperties.getVisibility());, +			private void configureVisibility(Jackson2ObjectMapperBuilder builder,, +					Map<PropertyAccessor, JsonAutoDetect.Visibility> accessors) {, +				accessors.forEach(builder::visibility);, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +	 * Jackson visibility thresholds that can be used to limit which methods (and fields), +	 * are auto-detected., +	 */, +	private Map<PropertyAccessor, JsonAutoDetect.Visibility> visibility = new EnumMap<>(, +			PropertyAccessor.class);, +, +	/**, +	public Map<PropertyAccessor, JsonAutoDetect.Visibility> getVisibility() {, +		return this.visibility;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +				configureVisibility(builder, this.jacksonProperties.getVisibility());, +			private void configureVisibility(Jackson2ObjectMapperBuilder builder,, +					Map<PropertyAccessor, JsonAutoDetect.Visibility> accessors) {, +				accessors.forEach(builder::visibility);, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +	 * Jackson visibility thresholds that can be used to limit which methods (and fields), +	 * are auto-detected., +	 */, +	private Map<PropertyAccessor, JsonAutoDetect.Visibility> visibility = new EnumMap<>(, +			PropertyAccessor.class);, +, +	/**, +	public Map<PropertyAccessor, JsonAutoDetect.Visibility> getVisibility() {, +		return this.visibility;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("spring.jackson.visibility.getter:none",, +				"spring.jackson.visibility.field:any").run((context) -> {, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +				configureVisibility(builder, this.jacksonProperties.getVisibility());, +			private void configureVisibility(Jackson2ObjectMapperBuilder builder,, +					Map<PropertyAccessor, JsonAutoDetect.Visibility> accessors) {, +				accessors.forEach(builder::visibility);, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +	 * Jackson visibility thresholds that can be used to limit which methods (and fields), +	 * are auto-detected., +	 */, +	private Map<PropertyAccessor, JsonAutoDetect.Visibility> visibility = new EnumMap<>(, +			PropertyAccessor.class);, +, +	/**, +	public Map<PropertyAccessor, JsonAutoDetect.Visibility> getVisibility() {, +		return this.visibility;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("spring.jackson.visibility.getter:none",, +				"spring.jackson.visibility.field:any").run((context) -> {, +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.jackson.visibility.*= # Jackson visibility thresholds that can be used to limit which methods (and fields) are auto-detected.]