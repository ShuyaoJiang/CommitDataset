[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationSorter.java, +	private final MetadataReaderFactory metadataReaderFactory;, +	AutoConfigurationSorter(MetadataReaderFactory metadataReaderFactory) {, +		Assert.notNull(metadataReaderFactory, "MetadataReaderFactory must not be null");, +		this.metadataReaderFactory = metadataReaderFactory;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationSorter.java, +	private final MetadataReaderFactory metadataReaderFactory;, +	AutoConfigurationSorter(MetadataReaderFactory metadataReaderFactory) {, +		Assert.notNull(metadataReaderFactory, "MetadataReaderFactory must not be null");, +		this.metadataReaderFactory = metadataReaderFactory;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.core.type.classreading.CachingMetadataReaderFactory;, +import org.springframework.core.type.classreading.MetadataReaderFactory;, +		configurations = new AutoConfigurationSorter(getMetadataReaderFactory()), +	private MetadataReaderFactory getMetadataReaderFactory() {, +		try {, +			return getBeanFactory().getBean(, +					SharedMetadataReaderFactoryContextInitializer.BEAN_NAME,, +					MetadataReaderFactory.class);, +		}, +		catch (NoSuchBeanDefinitionException ex) {, +			return new CachingMetadataReaderFactory(this.resourceLoader);, +		}, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationSorter.java, +	private final MetadataReaderFactory metadataReaderFactory;, +	AutoConfigurationSorter(MetadataReaderFactory metadataReaderFactory) {, +		Assert.notNull(metadataReaderFactory, "MetadataReaderFactory must not be null");, +		this.metadataReaderFactory = metadataReaderFactory;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.core.type.classreading.CachingMetadataReaderFactory;, +import org.springframework.core.type.classreading.MetadataReaderFactory;, +		configurations = new AutoConfigurationSorter(getMetadataReaderFactory()), +	private MetadataReaderFactory getMetadataReaderFactory() {, +		try {, +			return getBeanFactory().getBean(, +					SharedMetadataReaderFactoryContextInitializer.BEAN_NAME,, +					MetadataReaderFactory.class);, +		}, +		catch (NoSuchBeanDefinitionException ex) {, +			return new CachingMetadataReaderFactory(this.resourceLoader);, +		}, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/SharedMetadataReaderFactoryContextInitializer.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure;, +, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.BeanClassLoaderAware;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.beans.factory.config.BeanDefinition;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.beans.factory.config.RuntimeBeanReference;, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +import org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory;, +import org.springframework.context.ApplicationContextInitializer;, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.ConfigurableApplicationContext;, +import org.springframework.context.annotation.AnnotationConfigUtils;, +import org.springframework.context.annotation.ConfigurationClassPostProcessor;, +import org.springframework.context.event.ContextRefreshedEvent;, +import org.springframework.core.Ordered;, +import org.springframework.core.PriorityOrdered;, +import org.springframework.core.type.classreading.CachingMetadataReaderFactory;, +import org.springframework.core.type.classreading.MetadataReaderFactory;, +, +/**, + * {@link ApplicationContextInitializer} to create a shared, + * {@link CachingMetadataReaderFactory} between the, + * {@link ConfigurationClassPostProcessor} and Spring Boot., + *, + * @author Phillip Webb, + * @since 1.4.0, + */, +class SharedMetadataReaderFactoryContextInitializer, +		implements ApplicationContextInitializer<ConfigurableApplicationContext> {, +, +	public static final String BEAN_NAME = "org.springframework.boot.autoconfigure."]