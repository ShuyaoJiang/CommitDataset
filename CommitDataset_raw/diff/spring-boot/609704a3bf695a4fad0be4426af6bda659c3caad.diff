[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfigureRegistrar.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfigureRegistrar.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jAutoConfiguration.java, +			return this.sessionFactoryProvider.getObject().getSessionFactory();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfigureRegistrar.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jAutoConfiguration.java, +			return this.sessionFactoryProvider.getObject().getSessionFactory();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jProperties.java, +import org.neo4j.ogm.config.DriverConfiguration;, +		configureDriver(configuration.driverConfiguration());, +	private void configureDriver(DriverConfiguration driverConfiguration) {, +		if (this.uri != null) {, +			configureDriverFromUri(driverConfiguration, this.uri);, +		}, +		else {, +			configureDriverWithDefaults(driverConfiguration);, +		}, +		if (this.username != null && this.password != null) {, +			driverConfiguration.setCredentials(this.username, this.password);, +		}, +	}, +, +	private void configureDriverFromUri(DriverConfiguration driverConfiguration,, +			String uri) {, +		driverConfiguration.setDriverClassName(deduceDriverFromUri());, +		driverConfiguration.setURI(uri);, +	}, +, +			if ("http".equals(scheme)) {, +	private void configureDriverWithDefaults(DriverConfiguration driverConfiguration) {, +		if (getEmbedded().isEnabled(), +				&& ClassUtils.isPresent(EMBEDDED_DRIVER, this.classLoader)) {, +			driverConfiguration.setDriverClassName(EMBEDDED_DRIVER);, +			return;, +		}, +		driverConfiguration.setDriverClassName(HTTP_DRIVER);, +		driverConfiguration.setURI(DEFAULT_HTTP_URI);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfigureRegistrar.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jAutoConfiguration.java, +			return this.sessionFactoryProvider.getObject().getSessionFactory();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jProperties.java, +import org.neo4j.ogm.config.DriverConfiguration;, +		configureDriver(configuration.driverConfiguration());, +	private void configureDriver(DriverConfiguration driverConfiguration) {, +		if (this.uri != null) {, +			configureDriverFromUri(driverConfiguration, this.uri);, +		}, +		else {, +			configureDriverWithDefaults(driverConfiguration);, +		}, +		if (this.username != null && this.password != null) {, +			driverConfiguration.setCredentials(this.username, this.password);, +		}, +	}, +, +	private void configureDriverFromUri(DriverConfiguration driverConfiguration,, +			String uri) {, +		driverConfiguration.setDriverClassName(deduceDriverFromUri());, +		driverConfiguration.setURI(uri);, +	}, +, +			if ("http".equals(scheme)) {, +	private void configureDriverWithDefaults(DriverConfiguration driverConfiguration) {, +		if (getEmbedded().isEnabled(), +				&& ClassUtils.isPresent(EMBEDDED_DRIVER, this.classLoader)) {, +			driverConfiguration.setDriverClassName(EMBEDDED_DRIVER);, +			return;, +		}, +		driverConfiguration.setDriverClassName(HTTP_DRIVER);, +		driverConfiguration.setURI(DEFAULT_HTTP_URI);, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/neo4j/Neo4jPropertiesTests.java, +		Credentials<?> credentials = actual.driverConfiguration().getCredentials();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfigureRegistrar.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jAutoConfiguration.java, +			return this.sessionFactoryProvider.getObject().getSessionFactory();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jProperties.java, +import org.neo4j.ogm.config.DriverConfiguration;, +		configureDriver(configuration.driverConfiguration());, +	private void configureDriver(DriverConfiguration driverConfiguration) {, +		if (this.uri != null) {, +			configureDriverFromUri(driverConfiguration, this.uri);, +		}, +		else {, +			configureDriverWithDefaults(driverConfiguration);, +		}, +		if (this.username != null && this.password != null) {, +			driverConfiguration.setCredentials(this.username, this.password);, +		}, +	}, +, +	private void configureDriverFromUri(DriverConfiguration driverConfiguration,]