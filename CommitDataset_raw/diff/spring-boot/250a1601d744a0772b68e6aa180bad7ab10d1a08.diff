[+++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTestContextBootstrapper.java, +import org.springframework.boot.WebApplicationType;, + * @author Brian Clozel, +	private static final String REACTIVE_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.reactive.DispatcherHandler";, +, +	private static final String MVC_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.servlet.DispatcherServlet";, +, +		if (webEnvironment == WebEnvironment.MOCK && deduceWebApplication() == WebApplicationType.SERVLET) {, +			if (deduceWebApplication() == WebApplicationType.SERVLET &&, +					(webEnvironment.isEmbedded() || webEnvironment == WebEnvironment.MOCK)) {, +	private WebApplicationType deduceWebApplication() {, +		if (ClassUtils.isPresent(REACTIVE_WEB_ENVIRONMENT_CLASS, null), +				&& !ClassUtils.isPresent(MVC_WEB_ENVIRONMENT_CLASS, null)) {, +			return WebApplicationType.REACTIVE;, +		}, +				return WebApplicationType.NONE;, +		return WebApplicationType.SERVLET;, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTestContextBootstrapper.java, +import org.springframework.boot.WebApplicationType;, + * @author Brian Clozel, +	private static final String REACTIVE_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.reactive.DispatcherHandler";, +, +	private static final String MVC_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.servlet.DispatcherServlet";, +, +		if (webEnvironment == WebEnvironment.MOCK && deduceWebApplication() == WebApplicationType.SERVLET) {, +			if (deduceWebApplication() == WebApplicationType.SERVLET &&, +					(webEnvironment.isEmbedded() || webEnvironment == WebEnvironment.MOCK)) {, +	private WebApplicationType deduceWebApplication() {, +		if (ClassUtils.isPresent(REACTIVE_WEB_ENVIRONMENT_CLASS, null), +				&& !ClassUtils.isPresent(MVC_WEB_ENVIRONMENT_CLASS, null)) {, +			return WebApplicationType.REACTIVE;, +		}, +				return WebApplicationType.NONE;, +		return WebApplicationType.SERVLET;, +++ b/spring-boot/pom.xml, +			<groupId>org.springframework</groupId>, +			<artifactId>spring-webflux</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTestContextBootstrapper.java, +import org.springframework.boot.WebApplicationType;, + * @author Brian Clozel, +	private static final String REACTIVE_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.reactive.DispatcherHandler";, +, +	private static final String MVC_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.servlet.DispatcherServlet";, +, +		if (webEnvironment == WebEnvironment.MOCK && deduceWebApplication() == WebApplicationType.SERVLET) {, +			if (deduceWebApplication() == WebApplicationType.SERVLET &&, +					(webEnvironment.isEmbedded() || webEnvironment == WebEnvironment.MOCK)) {, +	private WebApplicationType deduceWebApplication() {, +		if (ClassUtils.isPresent(REACTIVE_WEB_ENVIRONMENT_CLASS, null), +				&& !ClassUtils.isPresent(MVC_WEB_ENVIRONMENT_CLASS, null)) {, +			return WebApplicationType.REACTIVE;, +		}, +				return WebApplicationType.NONE;, +		return WebApplicationType.SERVLET;, +++ b/spring-boot/pom.xml, +			<groupId>org.springframework</groupId>, +			<artifactId>spring-webflux</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Brian Clozel, +	 * The class name of application context that will be used by default for, +	 * reactive web environments., +	 */, +	public static final String DEFAULT_REACTIVE_WEB_CONTEXT_CLASS = "org.springframework.", +			+ "boot.context.embedded.ReactiveWebApplicationContext";, +, +	private static final String REACTIVE_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.reactive.DispatcherHandler";, +, +	private static final String MVC_WEB_ENVIRONMENT_CLASS = "org.springframework.", +			+ "web.servlet.DispatcherServlet";, +, +	/**, +		if (ClassUtils.isPresent(REACTIVE_WEB_ENVIRONMENT_CLASS, null), +				&& !ClassUtils.isPresent(MVC_WEB_ENVIRONMENT_CLASS, null)) {, +			return WebApplicationType.REACTIVE;, +		}, +				switch (this.webApplicationType) {, +					case SERVLET:, +						contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS);, +						break;, +					case REACTIVE:, +						contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS);, +						break;, +					default:, +						contextClass = Class.forName(DEFAULT_CONTEXT_CLASS);, +				}, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTestContextBootstrapper.java, +import org.springframework.boot.WebApplicationType;]