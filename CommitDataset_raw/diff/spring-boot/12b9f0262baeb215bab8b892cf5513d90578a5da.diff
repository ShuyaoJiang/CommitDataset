[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			if (config.getConnectionTimeout() != null) {, +				factory.setConnectionTimeout(config.getConnectionTimeout());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			if (config.getConnectionTimeout() != null) {, +				factory.setConnectionTimeout(config.getConnectionTimeout());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +	 * The connection timeout, in milliseconds; zero for infinite., +	 */, +	private Integer connectionTimeout;, +, +	/**, +	public Integer getConnectionTimeout() {, +		return this.connectionTimeout;, +	}, +, +	public void setConnectionTimeout(Integer connectionTimeout) {, +		this.connectionTimeout = connectionTimeout;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			if (config.getConnectionTimeout() != null) {, +				factory.setConnectionTimeout(config.getConnectionTimeout());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +	 * The connection timeout, in milliseconds; zero for infinite., +	 */, +	private Integer connectionTimeout;, +, +	/**, +	public Integer getConnectionTimeout() {, +		return this.connectionTimeout;, +	}, +, +	public void setConnectionTimeout(Integer connectionTimeout) {, +		this.connectionTimeout = connectionTimeout;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +				"spring.rabbitmq.password:secret", "spring.rabbitmq.virtual_host:/vhost",, +				"spring.rabbitmq.connection-timeout:123");, +		DirectFieldAccessor dfa = new DirectFieldAccessor(connectionFactory);, +		com.rabbitmq.client.ConnectionFactory rcf = (com.rabbitmq.client.ConnectionFactory) dfa, +				.getPropertyValue("rabbitConnectionFactory");, +		assertThat(rcf.getConnectionTimeout()).isEqualTo(123);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			if (config.getConnectionTimeout() != null) {, +				factory.setConnectionTimeout(config.getConnectionTimeout());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +	 * The connection timeout, in milliseconds; zero for infinite., +	 */, +	private Integer connectionTimeout;, +, +	/**, +	public Integer getConnectionTimeout() {, +		return this.connectionTimeout;, +	}, +, +	public void setConnectionTimeout(Integer connectionTimeout) {, +		this.connectionTimeout = connectionTimeout;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +				"spring.rabbitmq.password:secret", "spring.rabbitmq.virtual_host:/vhost",, +				"spring.rabbitmq.connection-timeout:123");, +		DirectFieldAccessor dfa = new DirectFieldAccessor(connectionFactory);, +		com.rabbitmq.client.ConnectionFactory rcf = (com.rabbitmq.client.ConnectionFactory) dfa, +				.getPropertyValue("rabbitConnectionFactory");, +		assertThat(rcf.getConnectionTimeout()).isEqualTo(123);, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.rabbitmq.connection-timeout= # Connection Timeout, in milliseconds.]