[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +		if (configuration.getMissingQueuesFatal() != null) {, +			factory.setMissingQueuesFatal(configuration.getMissingQueuesFatal());, +		}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +		if (configuration.getMissingQueuesFatal() != null) {, +			factory.setMissingQueuesFatal(configuration.getMissingQueuesFatal());, +		}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +		if (configuration.getMissingQueuesFatal() != null) {, +			factory.setMissingQueuesFatal(configuration.getMissingQueuesFatal());, +		}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		 * Whether to fail if the queues declared by the container are not available on, +		 * the broker., +		 */, +		private Boolean missingQueuesFatal;, +, +		/**, +		public Boolean getMissingQueuesFatal() {, +			return this.missingQueuesFatal;, +		}, +, +		public void setMissingQueuesFatal(Boolean missingQueuesFatal) {, +			this.missingQueuesFatal = missingQueuesFatal;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +		if (configuration.getMissingQueuesFatal() != null) {, +			factory.setMissingQueuesFatal(configuration.getMissingQueuesFatal());, +		}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		 * Whether to fail if the queues declared by the container are not available on, +		 * the broker., +		 */, +		private Boolean missingQueuesFatal;, +, +		/**, +		public Boolean getMissingQueuesFatal() {, +			return this.missingQueuesFatal;, +		}, +, +		public void setMissingQueuesFatal(Boolean missingQueuesFatal) {, +			this.missingQueuesFatal = missingQueuesFatal;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +		if (configuration.getMissingQueuesFatal() != null) {, +			factory.setMissingQueuesFatal(configuration.getMissingQueuesFatal());, +		}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		 * Whether to fail if the queues declared by the container are not available on, +		 * the broker., +		 */, +		private Boolean missingQueuesFatal;, +, +		/**, +		public Boolean getMissingQueuesFatal() {, +			return this.missingQueuesFatal;, +		}, +, +		public void setMissingQueuesFatal(Boolean missingQueuesFatal) {, +			this.missingQueuesFatal = missingQueuesFatal;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +						"spring.rabbitmq.listener.simple.missingQueuesFatal:false",, +						"spring.rabbitmq.listener.direct.idleEventInterval:5",, +						"spring.rabbitmq.listener.direct.missingQueuesFatal:false"), +		assertThat(dfa.getPropertyValue("missingQueuesFatal")).isEqualTo(false);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +		if (configuration.getMissingQueuesFatal() != null) {, +			factory.setMissingQueuesFatal(configuration.getMissingQueuesFatal());, +		}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		 * Whether to fail if the queues declared by the container are not available on, +		 * the broker., +		 */, +		private Boolean missingQueuesFatal;, +, +		/**, +		public Boolean getMissingQueuesFatal() {, +			return this.missingQueuesFatal;, +		}, +, +		public void setMissingQueuesFatal(Boolean missingQueuesFatal) {, +			this.missingQueuesFatal = missingQueuesFatal;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +						"spring.rabbitmq.listener.simple.missingQueuesFatal:false",, +						"spring.rabbitmq.listener.direct.idleEventInterval:5",]