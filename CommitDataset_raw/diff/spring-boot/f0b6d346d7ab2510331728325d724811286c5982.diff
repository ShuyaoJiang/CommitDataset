[+++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockitoPostProcessor.java, +import java.util.ArrayList;, +import java.util.Iterator;, +import java.util.List;, +import org.springframework.aop.scope.ScopedProxyUtils;, +		String[] existingBeans = getExistingBeans(beanFactory,, +				mockDefinition.getClassToMock());, +		String[] existingBeans = getExistingBeans(beanFactory,, +				definition.getClassToSpy());, +	private String[] getExistingBeans(ConfigurableListableBeanFactory beanFactory,, +			Class<?> type) {, +		List<String> beans = new ArrayList<String>(, +				Arrays.asList(beanFactory.getBeanNamesForType(type)));, +		for (Iterator<String> iterator = beans.iterator(); iterator.hasNext();) {, +			if (isScopedTarget(iterator.next())) {, +				iterator.remove();, +			}, +		}, +		return beans.toArray(new String[beans.size()]);, +	}, +, +	private boolean isScopedTarget(String beanName) {, +		try {, +			return ScopedProxyUtils.isScopedTarget(beanName);, +		}, +		catch (Throwable ex) {, +			return false;, +		}, +	}, +, +			if (definition.isProxyTargetAware() && isAopProxy(bean)) {, +	private boolean isAopProxy(Object object) {, +		try {, +			return AopUtils.isAopProxy(object);, +		}, +		catch (Throwable ex) {, +			return false;, +		}, +	}, +, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockitoPostProcessor.java, +import java.util.ArrayList;, +import java.util.Iterator;, +import java.util.List;, +import org.springframework.aop.scope.ScopedProxyUtils;, +		String[] existingBeans = getExistingBeans(beanFactory,, +				mockDefinition.getClassToMock());, +		String[] existingBeans = getExistingBeans(beanFactory,, +				definition.getClassToSpy());, +	private String[] getExistingBeans(ConfigurableListableBeanFactory beanFactory,, +			Class<?> type) {, +		List<String> beans = new ArrayList<String>(, +				Arrays.asList(beanFactory.getBeanNamesForType(type)));, +		for (Iterator<String> iterator = beans.iterator(); iterator.hasNext();) {, +			if (isScopedTarget(iterator.next())) {, +				iterator.remove();, +			}, +		}, +		return beans.toArray(new String[beans.size()]);, +	}, +, +	private boolean isScopedTarget(String beanName) {, +		try {, +			return ScopedProxyUtils.isScopedTarget(beanName);, +		}, +		catch (Throwable ex) {, +			return false;, +		}, +	}, +, +			if (definition.isProxyTargetAware() && isAopProxy(bean)) {, +	private boolean isAopProxy(Object object) {, +		try {, +			return AopUtils.isAopProxy(object);, +		}, +		catch (Throwable ex) {, +			return false;, +		}, +	}, +, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockBeanOnScopedProxyTests.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test.mock.mockito;, +, +import org.junit.Test;]