[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ShutdownEndpoint.java, + * @author Andy Wilkinson, +			Thread thread = new Thread(new Runnable() {, +			});, +			thread.setContextClassLoader(getClass().getClassLoader());, +			thread.start();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ShutdownEndpoint.java, + * @author Andy Wilkinson, +			Thread thread = new Thread(new Runnable() {, +			});, +			thread.setContextClassLoader(getClass().getClassLoader());, +			thread.start();, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ShutdownEndpointTests.java, +import java.net.URL;, +import java.net.URLClassLoader;, +import java.util.Map;, + * @author Andy Wilkinson, +		Config config = this.context.getBean(Config.class);, +		ClassLoader previousTccl = Thread.currentThread().getContextClassLoader();, +		Map<String, Object> result;, +		Thread.currentThread().setContextClassLoader(, +				new URLClassLoader(new URL[0], getClass().getClassLoader()));, +		try {, +			result = getEndpointBean().invoke();, +		}, +		finally {, +			Thread.currentThread().setContextClassLoader(previousTccl);, +		}, +		assertThat((String) result.get("message")).startsWith("Shutting down");, +		assertThat(config.latch.await(10, TimeUnit.SECONDS)).isTrue();, +		assertThat(config.threadContextClassLoader), +				.isEqualTo(getClass().getClassLoader());, +		private final CountDownLatch latch = new CountDownLatch(1);, +, +		private volatile ClassLoader threadContextClassLoader;, +					Config.this.threadContextClassLoader = Thread.currentThread(), +							.getContextClassLoader();]