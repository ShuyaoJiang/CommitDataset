[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +	public MBeanServer mbeanServer() {, +		return new JmxAutoConfiguration().mbeanServer();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +	public MBeanServer mbeanServer() {, +		return new JmxAutoConfiguration().mbeanServer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration.java, +	public MBeanServer mbeanServer() {, +		return new JmxAutoConfiguration().mbeanServer();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +	public MBeanServer mbeanServer() {, +		return new JmxAutoConfiguration().mbeanServer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration.java, +	public MBeanServer mbeanServer() {, +		return new JmxAutoConfiguration().mbeanServer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.jmx.support.WebSphereMBeanServerFactoryBean;, +import org.springframework.jndi.JndiObjectFactoryBean;, +import org.springframework.util.Assert;, +import org.springframework.util.ClassUtils;, +	public MBeanServer mbeanServer() {, +		return SpecificPlatform.get().getMBeanServer();, +	// Copied and adapted from MBeanExportConfiguration, +	private static enum SpecificPlatform {, +, +		WEBLOGIC("weblogic.management.Helper") {, +			@Override, +			public FactoryBean<?> getMBeanServerFactory() {, +				JndiObjectFactoryBean factory = new JndiObjectFactoryBean();, +				factory.setJndiName("java:comp/env/jmx/runtime");, +				return factory;, +			}, +		},, +, +		WEBSPHERE("com.ibm.websphere.management.AdminServiceFactory") {, +			@Override, +			public FactoryBean<MBeanServer> getMBeanServerFactory() {, +				return new WebSphereMBeanServerFactoryBean();, +			}, +		},, +, +		GENERIC("org.springframework.jmx.support.MBeanServerFactoryBean") {, +			@Override, +			public FactoryBean<MBeanServer> getMBeanServerFactory() {, +				MBeanServerFactoryBean factory = new MBeanServerFactoryBean();, +				factory.setLocateExistingServerIfPossible(true);, +				factory.afterPropertiesSet();, +				return factory;, +			}, +		};, +, +		private final String identifyingClass;, +, +		private SpecificPlatform(String identifyingClass) {, +			this.identifyingClass = identifyingClass;, +		}, +, +		public MBeanServer getMBeanServer() {, +			Object server;, +			try {, +				server = getMBeanServerFactory().getObject();, +				Assert.isInstanceOf(MBeanServer.class, server);, +				return (MBeanServer) server;, +			}, +			catch (Exception ex) {, +				throw new IllegalStateException(ex);, +			}, +		}, +, +		protected abstract FactoryBean<?> getMBeanServerFactory();, +, +		public static SpecificPlatform get() {, +			ClassLoader classLoader = MBeanExportConfiguration.class.getClassLoader();, +			for (SpecificPlatform environment : values()) {, +				if (ClassUtils.isPresent(environment.identifyingClass, classLoader)) {, +					return environment;, +				}, +			}, +			return null;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +	public MBeanServer mbeanServer() {, +		return new JmxAutoConfiguration().mbeanServer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/integration/IntegrationAutoConfiguration.java, +	public MBeanServer mbeanServer() {, +		return new JmxAutoConfiguration().mbeanServer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.jmx.support.WebSphereMBeanServerFactoryBean;, +import org.springframework.jndi.JndiObjectFactoryBean;, +import org.springframework.util.Assert;, +import org.springframework.util.ClassUtils;, +	public MBeanServer mbeanServer() {, +		return SpecificPlatform.get().getMBeanServer();, +	// Copied and adapted from MBeanExportConfiguration, +	private static enum SpecificPlatform {]