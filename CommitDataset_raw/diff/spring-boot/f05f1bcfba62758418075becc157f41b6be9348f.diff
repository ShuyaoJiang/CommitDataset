[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.java, + * Copyright 2012-2017 the original author or authors., +		if (container.getType() == Listener.Type.BATCH) {, +			listenerContainerFactory.setBatchListener(true);, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.java, + * Copyright 2012-2017 the original author or authors., +		if (container.getType() == Listener.Type.BATCH) {, +			listenerContainerFactory.setBatchListener(true);, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		public enum Type {, +, +			/**, +			 * Invokes the endpoint with one ConsumerRecord at a time., +			 */, +			SINGLE,, +, +			/**, +			 * Invokes the endpoint with a batch of ConsumerRecord., +			 */, +			BATCH;, +, +		}, +, +		/**, +		 * Listener type., +		 */, +		private Type type = Type.SINGLE;, +, +		public Type getType() {, +			return this.type;, +		}, +, +		public void setType(Type type) {, +			this.type = type;, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.java, + * Copyright 2012-2017 the original author or authors., +		if (container.getType() == Listener.Type.BATCH) {, +			listenerContainerFactory.setBatchListener(true);, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		public enum Type {, +, +			/**, +			 * Invokes the endpoint with one ConsumerRecord at a time., +			 */, +			SINGLE,, +, +			/**, +			 * Invokes the endpoint with a batch of ConsumerRecord., +			 */, +			BATCH;, +, +		}, +, +		/**, +		 * Listener type., +		 */, +		private Type type = Type.SINGLE;, +, +		public Type getType() {, +			return this.type;, +		}, +, +		public void setType(Type type) {, +			this.type = type;, +		}, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "spring.kafka.listener.type",, +    "defaultValue": "single", +  },, +  {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.java, + * Copyright 2012-2017 the original author or authors., +		if (container.getType() == Listener.Type.BATCH) {, +			listenerContainerFactory.setBatchListener(true);, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		public enum Type {, +, +			/**, +			 * Invokes the endpoint with one ConsumerRecord at a time., +			 */, +			SINGLE,, +, +			/**, +			 * Invokes the endpoint with a batch of ConsumerRecord., +			 */, +			BATCH;, +, +		}, +, +		/**, +		 * Listener type., +		 */, +		private Type type = Type.SINGLE;, +, +		public Type getType() {]