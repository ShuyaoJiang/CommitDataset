[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/HikariDataSourceConfiguration.java, + * @since 1.1.0, +, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/HikariDataSourceConfiguration.java, + * @since 1.1.0, +, +, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/HikariDataSourceConfiguration.java, + * @since 1.1.0, +, +, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +++ b/spring-boot-samples/spring-boot-sample-simple/src/test/java/sample/simple/SpringTestSampleSimpleApplicationTests.java, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +, +		assertNotNull(this.ctx);, +		assertTrue(this.ctx.containsBean("helloWorldService"));, +		assertTrue(this.ctx.containsBean("sampleSimpleApplication"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/HikariDataSourceConfiguration.java, + * @since 1.1.0, +, +, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +++ b/spring-boot-samples/spring-boot-sample-simple/src/test/java/sample/simple/SpringTestSampleSimpleApplicationTests.java, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +, +		assertNotNull(this.ctx);, +		assertTrue(this.ctx.containsBean("helloWorldService"));, +		assertTrue(this.ctx.containsBean("sampleSimpleApplication"));, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/ExecutableArchiveLauncher.java, +		ClassLoader classloader = null;, +			classloader = Thread.currentThread().getContextClassLoader();, +		if (classloader == null) {, +			classloader = ExecutableArchiveLauncher.class.getClassLoader();, +		return classloader;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/HikariDataSourceConfiguration.java, + * @since 1.1.0, +, +, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +++ b/spring-boot-samples/spring-boot-sample-simple/src/test/java/sample/simple/SpringTestSampleSimpleApplicationTests.java, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +, +		assertNotNull(this.ctx);, +		assertTrue(this.ctx.containsBean("helloWorldService"));, +		assertTrue(this.ctx.containsBean("sampleSimpleApplication"));, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/ExecutableArchiveLauncher.java, +		ClassLoader classloader = null;, +			classloader = Thread.currentThread().getContextClassLoader();, +		if (classloader == null) {, +			classloader = ExecutableArchiveLauncher.class.getClassLoader();, +		return classloader;, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/HikariDataSourceConfiguration.java, + * @since 1.1.0, +, +, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +++ b/spring-boot-samples/spring-boot-sample-simple/src/test/java/sample/simple/SpringTestSampleSimpleApplicationTests.java, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +, +		assertNotNull(this.ctx);, +		assertTrue(this.ctx.containsBean("helloWorldService"));, +		assertTrue(this.ctx.containsBean("sampleSimpleApplication"));, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/ExecutableArchiveLauncher.java, +		ClassLoader classloader = null;, +			classloader = Thread.currentThread().getContextClassLoader();, +		if (classloader == null) {, +			classloader = ExecutableArchiveLauncher.class.getClassLoader();, +		return classloader;, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +			catch (Exception ex) {, +				this.log.warn("Banner not printable: " + resource + " (" + ex.getClass(), +						+ ": '" + ex.getMessage() + "')", ex);, +	 * @see #printBanner(Environment)]