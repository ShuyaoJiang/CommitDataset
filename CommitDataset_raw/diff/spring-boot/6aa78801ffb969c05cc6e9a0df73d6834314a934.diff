[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java, +		try {, +			context.setCreateUploadTargets(true);, +		}, +		catch (NoSuchMethodError ex) {, +			// Tomcat is < 8.5.39. Continue., +		}, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java, +		try {, +			context.setCreateUploadTargets(true);, +		}, +		catch (NoSuchMethodError ex) {, +			// Tomcat is < 8.5.39. Continue., +		}, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java, +import java.net.URISyntaxException;, +import java.util.concurrent.atomic.AtomicReference;, +import javax.servlet.MultipartConfigElement;, +import javax.servlet.ServletContext;, +import javax.servlet.ServletRegistration.Dynamic;, +import javax.servlet.http.HttpServlet;, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.boot.web.servlet.ServletContextInitializer;, +import org.springframework.core.io.ByteArrayResource;, +import org.springframework.http.HttpEntity;, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpStatus;, +import org.springframework.http.MediaType;, +import org.springframework.http.ResponseEntity;, +import org.springframework.util.FileSystemUtils;, +import org.springframework.util.LinkedMultiValueMap;, +import org.springframework.util.MultiValueMap;, +import org.springframework.web.client.RestTemplate;, +	@Test, +	public void nonExistentUploadDirectoryIsCreatedUponMultipartUpload(), +			throws IOException, URISyntaxException {, +		TomcatServletWebServerFactory factory = new TomcatServletWebServerFactory(0);, +		AtomicReference<ServletContext> servletContextReference = new AtomicReference<>();, +		factory.addInitializers(new ServletContextInitializer() {, +, +			@Override, +			public void onStartup(ServletContext servletContext) throws ServletException {, +				servletContextReference.set(servletContext);, +				Dynamic servlet = servletContext.addServlet("upload", new HttpServlet() {, +, +					@Override, +					protected void doPost(HttpServletRequest req,, +							HttpServletResponse resp), +							throws ServletException, IOException {, +						req.getParts();, +					}, +, +				});, +				servlet.addMapping("/upload");, +				servlet.setMultipartConfig(new MultipartConfigElement((String) null));, +			}, +, +		});, +		this.webServer = factory.getWebServer();, +		this.webServer.start();, +		File temp = (File) servletContextReference.get(), +				.getAttribute(ServletContext.TEMPDIR);, +		FileSystemUtils.deleteRecursively(temp);, +		RestTemplate restTemplate = new RestTemplate();, +		HttpHeaders headers = new HttpHeaders();, +		MultiValueMap<String, Object> body = new LinkedMultiValueMap<>();, +		body.add("file", new ByteArrayResource(new byte[1024 * 1024]));, +		headers.setContentType(MediaType.MULTIPART_FORM_DATA);, +		HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(body,, +				headers);, +		ResponseEntity<String> response = restTemplate, +				.postForEntity(getLocalUrl("/upload"), requestEntity, String.class);, +		assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);, +	}, +]