[+++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port:0" }), +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port:0" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementPortAndPathSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.context-path=/admin",, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port:0" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementPortAndPathSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.context-path=/admin",, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.security.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port:0" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementPortAndPathSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.context-path=/admin",, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.security.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "security.basic.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port:0" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementPortAndPathSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.context-path=/admin",, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.security.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "security.basic.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/ManagementAddressActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.address=127.0.0.1",, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port:0" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementPortAndPathSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.context-path=/admin",, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.security.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "security.basic.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/ManagementAddressActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.address=127.0.0.1",, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/ManagementPathSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.context_path=/admin" }), +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port:0" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementPortAndPathSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.port=0", "management.context-path=/admin",, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "management.security.enabled:false" }), +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureSampleActuatorApplicationTests.java, + * Copyright 2012-2019 the original author or authors., +@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,, +		properties = { "security.basic.enabled:false" })]