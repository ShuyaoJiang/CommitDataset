[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentNegotiation().getMediaTypes();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentNegotiation().getMediaTypes();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +		 * Maps file extensions to media types for content negotiation, e.g. yml to text/yaml., +		 */, +		private Map<String, MediaType> mediaTypes = new LinkedHashMap<>();, +, +		/**, +		public Map<String, MediaType> getMediaTypes() {, +			return this.mediaTypes;, +		}, +, +		public void setMediaTypes(Map<String, MediaType> mediaTypes) {, +			this.mediaTypes = mediaTypes;, +		}, +, +		 * Whether suffix pattern matching should work only against extensions, +		 * registered with "spring.mvc.content-negotiation.media-types.*"., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentNegotiation().getMediaTypes();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +		 * Maps file extensions to media types for content negotiation, e.g. yml to text/yaml., +		 */, +		private Map<String, MediaType> mediaTypes = new LinkedHashMap<>();, +, +		/**, +		public Map<String, MediaType> getMediaTypes() {, +			return this.mediaTypes;, +		}, +, +		public void setMediaTypes(Map<String, MediaType> mediaTypes) {, +			this.mediaTypes = mediaTypes;, +		}, +, +		 * Whether suffix pattern matching should work only against extensions, +		 * registered with "spring.mvc.content-negotiation.media-types.*"., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name" : "spring.mvc.media-types",, +      "type" : "java.util.Map<java.lang.String,org.springframework.http.MediaType>",, +      "description" : "Maps file extensions to media types for content negotiation, e.g. yml to text/yaml.",, +      "deprecation" : {, +        "replacement" : "spring.mvc.content-negotiation.media-types",, +        "level" : "error", +      }, +    },, +    {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentNegotiation().getMediaTypes();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +		 * Maps file extensions to media types for content negotiation, e.g. yml to text/yaml., +		 */, +		private Map<String, MediaType> mediaTypes = new LinkedHashMap<>();, +, +		/**, +		public Map<String, MediaType> getMediaTypes() {, +			return this.mediaTypes;, +		}, +, +		public void setMediaTypes(Map<String, MediaType> mediaTypes) {, +			this.mediaTypes = mediaTypes;, +		}, +, +		 * Whether suffix pattern matching should work only against extensions, +		 * registered with "spring.mvc.content-negotiation.media-types.*"., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name" : "spring.mvc.media-types",, +      "type" : "java.util.Map<java.lang.String,org.springframework.http.MediaType>",, +      "description" : "Maps file extensions to media types for content negotiation, e.g. yml to text/yaml.",, +      "deprecation" : {, +        "replacement" : "spring.mvc.content-negotiation.media-types",, +        "level" : "error", +      }, +    },, +    {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues(, +				"spring.mvc.content-negotiation.media-types.yaml:text/yaml",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			Map<String, MediaType> mediaTypes = this.mvcProperties.getContentNegotiation().getMediaTypes();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcProperties.java, +		 * Maps file extensions to media types for content negotiation, e.g. yml to text/yaml., +		 */, +		private Map<String, MediaType> mediaTypes = new LinkedHashMap<>();, +, +		/**, +		public Map<String, MediaType> getMediaTypes() {, +			return this.mediaTypes;, +		}, +, +		public void setMediaTypes(Map<String, MediaType> mediaTypes) {, +			this.mediaTypes = mediaTypes;, +		}, +, +		 * Whether suffix pattern matching should work only against extensions, +		 * registered with "spring.mvc.content-negotiation.media-types.*"., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name" : "spring.mvc.media-types",, +      "type" : "java.util.Map<java.lang.String,org.springframework.http.MediaType>",]