[+++ b/spring-boot-actuator/pom.xml, +			<artifactId>spring-data-neo4j</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +++ b/spring-boot-actuator/pom.xml, +			<artifactId>spring-data-neo4j</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +++ b/spring-boot-autoconfigure/pom.xml, +			<artifactId>spring-data-neo4j</artifactId>, +			<optional>true</optional>, +			<exclusions>, +				<exclusion>, +					<artifactId>jcl-over-slf4j</artifactId>, +					<groupId>org.slf4j</groupId>, +				</exclusion>, +			</exclusions>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +, +++ b/spring-boot-actuator/pom.xml, +			<artifactId>spring-data-neo4j</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +++ b/spring-boot-autoconfigure/pom.xml, +			<artifactId>spring-data-neo4j</artifactId>, +			<optional>true</optional>, +			<exclusions>, +				<exclusion>, +					<artifactId>jcl-over-slf4j</artifactId>, +					<groupId>org.slf4j</groupId>, +				</exclusion>, +			</exclusions>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class, MongoRepositoryConfigurationExtension.class }), +++ b/spring-boot-actuator/pom.xml, +			<artifactId>spring-data-neo4j</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +++ b/spring-boot-autoconfigure/pom.xml, +			<artifactId>spring-data-neo4j</artifactId>, +			<optional>true</optional>, +			<exclusions>, +				<exclusion>, +					<artifactId>jcl-over-slf4j</artifactId>, +					<groupId>org.slf4j</groupId>, +				</exclusion>, +			</exclusions>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class, MongoRepositoryConfigurationExtension.class }), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jAutoConfiguration.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.data.neo4j;, +, +import org.neo4j.ogm.session.Neo4jSession;, +import org.neo4j.ogm.session.Session;, +import org.neo4j.ogm.session.SessionFactory;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.beans.factory.annotation.Value;, +, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +, +import org.springframework.context.annotation.Bean;]