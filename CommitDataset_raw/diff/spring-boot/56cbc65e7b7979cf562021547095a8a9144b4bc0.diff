[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +			if (environment != null, +					&& !Binder.get(environment), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +			if (environment != null, +					&& !Binder.get(environment), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener.java, +		else if (event instanceof ApplicationFailedEvent, +					&& ((ApplicationFailedEvent) event), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +			if (environment != null, +					&& !Binder.get(environment), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener.java, +		else if (event instanceof ApplicationFailedEvent, +					&& ((ApplicationFailedEvent) event), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +					&& this.sessionRepositoryProvider.getIfAvailable() == null, +					&& storeType != null) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +			if (environment != null, +					&& !Binder.get(environment), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener.java, +		else if (event instanceof ApplicationFailedEvent, +					&& ((ApplicationFailedEvent) event), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +					&& this.sessionRepositoryProvider.getIfAvailable() == null, +					&& storeType != null) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/Installer.java, +		if (!extDirectory.isDirectory() && !extDirectory.mkdirs()) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +			if (environment != null, +					&& !Binder.get(environment), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener.java, +		else if (event instanceof ApplicationFailedEvent, +					&& ((ApplicationFailedEvent) event), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +					&& this.sessionRepositoryProvider.getIfAvailable() == null, +					&& storeType != null) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/Installer.java, +		if (!extDirectory.isDirectory() && !extDirectory.mkdirs()) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/AstUtils.java, +		if (method instanceof ConstantExpression, +				&& name.equals(((ConstantExpression) method).getValue())) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +			if (environment != null, +					&& !Binder.get(environment), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener.java, +		else if (event instanceof ApplicationFailedEvent, +					&& ((ApplicationFailedEvent) event), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +					&& this.sessionRepositoryProvider.getIfAvailable() == null, +					&& storeType != null) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/Installer.java, +		if (!extDirectory.isDirectory() && !extDirectory.mkdirs()) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/AstUtils.java, +		if (method instanceof ConstantExpression, +				&& name.equals(((ConstantExpression) method).getValue())) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/util/ResourceUtils.java, +				if (resource.getURI().getScheme().equals("file"), +						&& resource.getFile().isDirectory()) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, +		if (event instanceof ApplicationStartingEvent, +				&& preinitializationStarted.compareAndSet(false, true)) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +			if (environment != null, +					&& !Binder.get(environment), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/ConditionEvaluationReportLoggingListener.java, +		else if (event instanceof ApplicationFailedEvent, +					&& ((ApplicationFailedEvent) event), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +					&& this.sessionRepositoryProvider.getIfAvailable() == null, +					&& storeType != null) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/install/Installer.java, +		if (!extDirectory.isDirectory() && !extDirectory.mkdirs()) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/AstUtils.java, +		if (method instanceof ConstantExpression, +				&& name.equals(((ConstantExpression) method).getValue())) {, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/util/ResourceUtils.java, +				if (resource.getURI().getScheme().equals("file")]