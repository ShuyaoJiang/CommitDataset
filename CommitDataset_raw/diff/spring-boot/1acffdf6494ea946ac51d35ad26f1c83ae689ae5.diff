[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HealthIndicator}s., + * , +				return new SimpleDataSourceHealthIndicator(this.dataSources.values(), +						.iterator().next());, +				composite.addHealthIndicator(entry.getKey(),, +						new SimpleDataSourceHealthIndicator(entry.getValue()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HealthIndicator}s., + * , +				return new SimpleDataSourceHealthIndicator(this.dataSources.values(), +						.iterator().next());, +				composite.addHealthIndicator(entry.getKey(),, +						new SimpleDataSourceHealthIndicator(entry.getValue()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		int index = name.toLowerCase().indexOf("healthindicator");, +		if (index > 0) {, +			return name.substring(0, index);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HealthIndicator}s., + * , +				return new SimpleDataSourceHealthIndicator(this.dataSources.values(), +						.iterator().next());, +				composite.addHealthIndicator(entry.getKey(),, +						new SimpleDataSourceHealthIndicator(entry.getValue()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		int index = name.toLowerCase().indexOf("healthindicator");, +		if (index > 0) {, +			return name.substring(0, index);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/MongoHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.util.Assert;, +		Assert.notNull(mongoTemplate, "MongoTemplate must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HealthIndicator}s., + * , +				return new SimpleDataSourceHealthIndicator(this.dataSources.values(), +						.iterator().next());, +				composite.addHealthIndicator(entry.getKey(),, +						new SimpleDataSourceHealthIndicator(entry.getValue()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		int index = name.toLowerCase().indexOf("healthindicator");, +		if (index > 0) {, +			return name.substring(0, index);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/MongoHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.util.Assert;, +		Assert.notNull(mongoTemplate, "MongoTemplate must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/RedisHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.util.Assert;, +		Assert.notNull(connectionFactory, "ConnectionFactory must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HealthIndicator}s., + * , +				return new SimpleDataSourceHealthIndicator(this.dataSources.values(), +						.iterator().next());, +				composite.addHealthIndicator(entry.getKey(),, +						new SimpleDataSourceHealthIndicator(entry.getValue()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		int index = name.toLowerCase().indexOf("healthindicator");, +		if (index > 0) {, +			return name.substring(0, index);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/MongoHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.util.Assert;, +		Assert.notNull(mongoTemplate, "MongoTemplate must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/RedisHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.util.Assert;, +		Assert.notNull(connectionFactory, "ConnectionFactory must not be null");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfigurationTests.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HealthIndicator}s., + * , +				return new SimpleDataSourceHealthIndicator(this.dataSources.values(), +						.iterator().next());, +				composite.addHealthIndicator(entry.getKey(),, +						new SimpleDataSourceHealthIndicator(entry.getValue()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		int index = name.toLowerCase().indexOf("healthindicator");]