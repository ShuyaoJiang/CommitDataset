[+++ /dev/null, +++ /dev/null, +++ b/CONTRIBUTING.adoc, +++ /dev/null, +++ b/CONTRIBUTING.adoc, +++ b/eclipse/spring-boot-project.setup, +        value="org.hamcrest.Matchers.*;org.junit.Assert.*;org.mockito.BDDMockito.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*"/>, +++ /dev/null, +++ b/CONTRIBUTING.adoc, +++ b/eclipse/spring-boot-project.setup, +        value="org.hamcrest.Matchers.*;org.junit.Assert.*;org.mockito.BDDMockito.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*"/>, +++ b/pom.xml, +	<version>1.3.3.BUILD-SNAPSHOT</version>, +++ /dev/null, +++ b/CONTRIBUTING.adoc, +++ b/eclipse/spring-boot-project.setup, +        value="org.hamcrest.Matchers.*;org.junit.Assert.*;org.mockito.BDDMockito.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*"/>, +++ b/pom.xml, +	<version>1.3.3.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.3.3.BUILD-SNAPSHOT</version>, +			<artifactId>spring-boot-starter-web</artifactId>, +			<artifactId>spring-boot-actuator</artifactId>, +++ /dev/null, +++ b/CONTRIBUTING.adoc, +++ b/eclipse/spring-boot-project.setup, +        value="org.hamcrest.Matchers.*;org.junit.Assert.*;org.mockito.BDDMockito.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*"/>, +++ b/pom.xml, +	<version>1.3.3.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.3.3.BUILD-SNAPSHOT</version>, +			<artifactId>spring-boot-starter-web</artifactId>, +			<artifactId>spring-boot-actuator</artifactId>, +++ b/spring-boot-actuator-docs/src/main/asciidoc/configprops.adoc, +`<prefix>.CONFIGURATION_PROPERTIES`, where `<prefix>` is the environment key prefix, +specified in the  `@ConfigurationProperties` annotation., +++ /dev/null, +++ b/CONTRIBUTING.adoc, +++ b/eclipse/spring-boot-project.setup, +        value="org.hamcrest.Matchers.*;org.junit.Assert.*;org.mockito.BDDMockito.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*"/>, +++ b/pom.xml, +	<version>1.3.3.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.3.3.BUILD-SNAPSHOT</version>, +			<artifactId>spring-boot-starter-web</artifactId>, +			<artifactId>spring-boot-actuator</artifactId>, +++ b/spring-boot-actuator-docs/src/main/asciidoc/configprops.adoc, +`<prefix>.CONFIGURATION_PROPERTIES`, where `<prefix>` is the environment key prefix, +specified in the  `@ConfigurationProperties` annotation., +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +==== Partial content, +, +You can use the `Range` header to retrieve part of the log file's content., +, +Example curl request:, +include::{generated}/partial-logfile/curl-request.adoc[], +, +Example HTTP request:, +include::{generated}/partial-logfile/http-request.adoc[], +, +Example HTTP response:, +include::{generated}/partial-logfile/http-response.adoc[], +, +++ /dev/null, +++ b/CONTRIBUTING.adoc, +++ b/eclipse/spring-boot-project.setup, +        value="org.hamcrest.Matchers.*;org.junit.Assert.*;org.mockito.BDDMockito.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*"/>, +++ b/pom.xml, +	<version>1.3.3.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.3.3.BUILD-SNAPSHOT</version>, +			<artifactId>spring-boot-starter-web</artifactId>, +			<artifactId>spring-boot-actuator</artifactId>, +++ b/spring-boot-actuator-docs/src/main/asciidoc/configprops.adoc, +`<prefix>.CONFIGURATION_PROPERTIES`, where `<prefix>` is the environment key prefix, +specified in the  `@ConfigurationProperties` annotation., +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +==== Partial content, +, +You can use the `Range` header to retrieve part of the log file's content., +, +Example curl request:, +include::{generated}/partial-logfile/curl-request.adoc[], +, +Example HTTP request:, +include::{generated}/partial-logfile/http-request.adoc[], +, +Example HTTP response:, +include::{generated}/partial-logfile/http-response.adoc[], +, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.http.HttpHeaders;, +import org.springframework.restdocs.RestDocumentation;, +	public final RestDocumentation restDocumentation = new RestDocumentation(, +	public void partialLogfile() throws Exception {, +		this.mockMvc, +				.perform(get("/logfile").accept(MediaType.TEXT_PLAIN), +						.header(HttpHeaders.RANGE, "bytes=0-1024")), +				.andExpect(status().isPartialContent())]