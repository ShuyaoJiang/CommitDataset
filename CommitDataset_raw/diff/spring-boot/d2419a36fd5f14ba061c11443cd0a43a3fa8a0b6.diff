[+++ b/spring-boot-samples/spring-boot-sample-web-ui/src/main/resources/application.properties, +server.tomcat.access_log_enabled: true, +server.tomcat.basedir: target/tomcat, +++ b/spring-boot-samples/spring-boot-sample-web-ui/src/main/resources/application.properties, +server.tomcat.access_log_enabled: true, +server.tomcat.basedir: target/tomcat, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/properties/ServerProperties.java, +import org.apache.catalina.Context;, +import org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer;, +		private boolean accessLogEnabled = false;, +, +		private int backgroundProcessorDelay = 30; // seconds, +, +		public boolean getAccessLogEnabled() {, +			return this.accessLogEnabled;, +		}, +, +		public void setAccessLogEnabled(boolean accessLogEnabled) {, +			this.accessLogEnabled = accessLogEnabled;, +		}, +, +		public int getBackgroundProcessorDelay() {, +			return this.backgroundProcessorDelay;, +		}, +, +		public void setBackgroundProcessorDelay(int backgroundProcessorDelay) {, +			this.backgroundProcessorDelay = backgroundProcessorDelay;, +		}, +, +			factory.addContextCustomizers(new TomcatContextCustomizer() {, +				@Override, +				public void customize(Context context) {, +					context.setBackgroundProcessorDelay(Tomcat.this.backgroundProcessorDelay);, +				}, +			});, +, +			if (this.accessLogEnabled) {, +				AccessLogValve valve = new AccessLogValve();, +				}, +				else {, +					valve.setPattern("common");, +				}, +++ b/spring-boot-samples/spring-boot-sample-web-ui/src/main/resources/application.properties, +server.tomcat.access_log_enabled: true, +server.tomcat.basedir: target/tomcat, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/properties/ServerProperties.java, +import org.apache.catalina.Context;, +import org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer;, +		private boolean accessLogEnabled = false;, +, +		private int backgroundProcessorDelay = 30; // seconds, +, +		public boolean getAccessLogEnabled() {, +			return this.accessLogEnabled;, +		}, +, +		public void setAccessLogEnabled(boolean accessLogEnabled) {, +			this.accessLogEnabled = accessLogEnabled;, +		}, +, +		public int getBackgroundProcessorDelay() {, +			return this.backgroundProcessorDelay;, +		}, +, +		public void setBackgroundProcessorDelay(int backgroundProcessorDelay) {, +			this.backgroundProcessorDelay = backgroundProcessorDelay;, +		}, +, +			factory.addContextCustomizers(new TomcatContextCustomizer() {, +				@Override, +				public void customize(Context context) {, +					context.setBackgroundProcessorDelay(Tomcat.this.backgroundProcessorDelay);, +				}, +			});, +, +			if (this.accessLogEnabled) {, +				AccessLogValve valve = new AccessLogValve();, +				}, +				else {, +					valve.setPattern("common");, +				}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.context.embedded.tomcat;, +]