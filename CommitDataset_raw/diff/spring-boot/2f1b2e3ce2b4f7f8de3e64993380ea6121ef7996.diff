[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +							new EndpointLinksResolver(allEndpoints, basePath))));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +							new EndpointLinksResolver(allEndpoints, basePath))));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, +				new EndpointLinksResolver(allEndpoints,, +						webEndpointProperties.getBasePath()));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +							new EndpointLinksResolver(allEndpoints, basePath))));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, +				new EndpointLinksResolver(allEndpoints,, +						webEndpointProperties.getBasePath()));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +				new EndpointLinksResolver(allEndpoints,, +						webEndpointProperties.getBasePath()));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +							new EndpointLinksResolver(allEndpoints, basePath))));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, +				new EndpointLinksResolver(allEndpoints,, +						webEndpointProperties.getBasePath()));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +				new EndpointLinksResolver(allEndpoints,, +						webEndpointProperties.getBasePath()));, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/EndpointLinksResolver.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory.getLog(EndpointLinksResolver.class);, +, +	/**, +	 * Creates a new {@code EndpointLinksResolver} that will resolve links to the given, +	 * {@code endpoints}., +	 * @param endpoints the endpoints, +	 * @deprecated since 2.0.1 in favor of, +	 * {@link #EndpointLinksResolver(Collection, String)}, +	 */, +	@Deprecated, +	 * Creates a new {@code EndpointLinksResolver} that will resolve links to the given, +	 * {@code endpoints} that are exposed beneath the given {@code basePath}., +	 * @param endpoints the endpoints, +	 * @param basePath the basePath, +	 */, +	public EndpointLinksResolver(Collection<? extends ExposableEndpoint<?>> endpoints,, +			String basePath) {, +		this.endpoints = endpoints;, +		if (logger.isInfoEnabled()) {, +			logger.info("Exposing " + endpoints.size(), +					+ " endpoint(s) beneath base path '" + basePath + "'");, +		}, +	}, +, +	/**]