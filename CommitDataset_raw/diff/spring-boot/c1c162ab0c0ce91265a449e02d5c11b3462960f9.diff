[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig config,, +			Clock clock) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig config,, +			Clock clock) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.java, +import java.net.URI;, +, +	 * URI to which metrics are published. May represent a Wavefront sidecar or the, +	 * Wavefront API host. This host could also represent an internal proxy set up in your, +	 * environment that forwards metrics data to the Wavefront API host., +	 *, +	 * If publishing metrics to a Wavefront proxy (as described in, +	 * https://docs.wavefront.com/proxies_installing.html), the host must be in the, +	 * proxy://HOST:PORT format., +	 */, +	private URI uri;, +, +	/**, +	 * Unique identifier for the app instance that is the source of metrics being, +	 * published to Wavefront. Defaults to the local host name., +	 * API token used when publishing metrics directly to the Wavefront API host., +	 * Global prefix to separate metrics originating from this app's white box, +	 * instrumentation from those originating from other Wavefront integrations when, +	 * viewed in the Wavefront UI., +	public URI getUri() {, +	public void setUri(URI uri) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig config,, +			Clock clock) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.java, +import java.net.URI;, +, +	 * URI to which metrics are published. May represent a Wavefront sidecar or the, +	 * Wavefront API host. This host could also represent an internal proxy set up in your, +	 * environment that forwards metrics data to the Wavefront API host., +	 *, +	 * If publishing metrics to a Wavefront proxy (as described in, +	 * https://docs.wavefront.com/proxies_installing.html), the host must be in the, +	 * proxy://HOST:PORT format., +	 */, +	private URI uri;, +, +	/**, +	 * Unique identifier for the app instance that is the source of metrics being, +	 * published to Wavefront. Defaults to the local host name., +	 * API token used when publishing metrics directly to the Wavefront API host., +	 * Global prefix to separate metrics originating from this app's white box, +	 * instrumentation from those originating from other Wavefront integrations when, +	 * viewed in the Wavefront UI., +	public URI getUri() {, +	public void setUri(URI uri) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontPropertiesConfigAdapter.java, +public class WavefrontPropertiesConfigAdapter, +		extends PropertiesConfigAdapter<WavefrontProperties> implements WavefrontConfig {, +		return get(this::getUriAsString, WavefrontConfig.DEFAULT_DIRECT::uri);, +		return get(WavefrontProperties::getGlobalPrefix,, +				WavefrontConfig.super::globalPrefix);, +, +	private String getUriAsString(WavefrontProperties properties) {, +		return properties.getUri() == null ? null : properties.getUri().toString();, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig config,, +			Clock clock) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.java, +import java.net.URI;, +, +	 * URI to which metrics are published. May represent a Wavefront sidecar or the, +	 * Wavefront API host. This host could also represent an internal proxy set up in your, +	 * environment that forwards metrics data to the Wavefront API host., +	 *, +	 * If publishing metrics to a Wavefront proxy (as described in, +	 * https://docs.wavefront.com/proxies_installing.html), the host must be in the, +	 * proxy://HOST:PORT format., +	 */, +	private URI uri;, +, +	/**, +	 * Unique identifier for the app instance that is the source of metrics being, +	 * published to Wavefront. Defaults to the local host name., +	 * API token used when publishing metrics directly to the Wavefront API host., +	 * Global prefix to separate metrics originating from this app's white box, +	 * instrumentation from those originating from other Wavefront integrations when, +	 * viewed in the Wavefront UI., +	public URI getUri() {, +	public void setUri(URI uri) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontPropertiesConfigAdapter.java, +public class WavefrontPropertiesConfigAdapter, +		extends PropertiesConfigAdapter<WavefrontProperties> implements WavefrontConfig {, +		return get(this::getUriAsString, WavefrontConfig.DEFAULT_DIRECT::uri);]