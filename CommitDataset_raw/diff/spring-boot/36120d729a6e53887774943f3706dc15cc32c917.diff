[+++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/MainClassConvention.java, +			Object mainClassName = this.project.property("mainClassName");, +			if (mainClassName != null) {, +				return mainClassName;, +			}, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/MainClassConvention.java, +			Object mainClassName = this.project.property("mainClassName");, +			if (mainClassName != null) {, +				return mainClassName;, +			}, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/tasks/run/BootRunIntegrationTests.java, +		copyApplication();, +		copyApplication();, +	public void applicationPluginMainClassNameIsNotUsedWhenItIsNull() throws IOException {, +		copyApplication();, +		BuildResult result = this.gradleBuild.build("echoMainClassName");, +		assertThat(result.task(":echoMainClassName").getOutcome()), +				.isEqualTo(TaskOutcome.SUCCESS);, +		assertThat(result.getOutput()), +				.contains("Main class name = com.example.BootRunApplication");, +	}, +, +	@Test, +	private void copyApplication() throws IOException {, +		File output = new File(this.gradleBuild.getProjectDir(),, +				"src/main/java/com/example");, +		output.mkdirs();, +		FileSystemUtils.copyRecursively(new File("src/test/java/com/example"), output);, +	}, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/MainClassConvention.java, +			Object mainClassName = this.project.property("mainClassName");, +			if (mainClassName != null) {, +				return mainClassName;, +			}, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/tasks/run/BootRunIntegrationTests.java, +		copyApplication();, +		copyApplication();, +	public void applicationPluginMainClassNameIsNotUsedWhenItIsNull() throws IOException {, +		copyApplication();, +		BuildResult result = this.gradleBuild.build("echoMainClassName");, +		assertThat(result.task(":echoMainClassName").getOutcome()), +				.isEqualTo(TaskOutcome.SUCCESS);, +		assertThat(result.getOutput()), +				.contains("Main class name = com.example.BootRunApplication");, +	}, +, +	@Test, +	private void copyApplication() throws IOException {, +		File output = new File(this.gradleBuild.getProjectDir(),, +				"src/main/java/com/example");, +		output.mkdirs();, +		FileSystemUtils.copyRecursively(new File("src/test/java/com/example"), output);, +	}, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/test/resources/org/springframework/boot/gradle/tasks/run/BootRunIntegrationTests-applicationPluginMainClassNameIsNotUsedWhenItIsNull.gradle, +buildscript {, +	dependencies {, +		classpath files(pluginClasspath.split(',')), +	}, +}, +, +apply plugin: 'application', +apply plugin: 'org.springframework.boot', +, +task echoMainClassName {, +	dependsOn compileJava, +	doLast {, +		println 'Main class name = ' + bootRun.main, +	}, +}]