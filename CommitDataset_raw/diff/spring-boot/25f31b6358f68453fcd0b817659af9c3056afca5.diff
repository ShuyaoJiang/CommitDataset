[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		Assert.notNull(errorPages, "ErrorPages must not be null");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		Assert.notNull(errorPages, "ErrorPages must not be null");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java, + * Servlet bean, the '/' mapping will be used. If multiple Servlet beans are found then, + * the lowercase bean name will be used as a mapping prefix. Any Servlet named, + * 'dispatcherServlet' will always be mapped to '/'. Filter beans will be mapped to all, + * URLs ('/*')., +		Set<Servlet> servletRegistrations = new LinkedHashSet<Servlet>();, +		Set<Filter> filterRegistrations = new LinkedHashSet<Filter>();, +			if (initializer instanceof ServletRegistrationBean) {, +				servletRegistrations.add(((ServletRegistrationBean) initializer), +						.getServlet());, +			}, +			if (initializer instanceof FilterRegistrationBean) {, +				filterRegistrations.add(((FilterRegistrationBean) initializer), +						.getFilter());, +			}, +			if (!servletRegistrations.contains(servlet)) {, +				String url = (servletBeans.size() == 1 ? "/" : "/" + name + "/");, +				ServletRegistrationBean registration = new ServletRegistrationBean(, +						servlet, url);, +		}, +			if (!servletRegistrations.contains(filter)) {, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		Assert.notNull(errorPages, "ErrorPages must not be null");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java, + * Servlet bean, the '/' mapping will be used. If multiple Servlet beans are found then, + * the lowercase bean name will be used as a mapping prefix. Any Servlet named, + * 'dispatcherServlet' will always be mapped to '/'. Filter beans will be mapped to all, + * URLs ('/*')., +		Set<Servlet> servletRegistrations = new LinkedHashSet<Servlet>();, +		Set<Filter> filterRegistrations = new LinkedHashSet<Filter>();, +			if (initializer instanceof ServletRegistrationBean) {, +				servletRegistrations.add(((ServletRegistrationBean) initializer), +						.getServlet());, +			}, +			if (initializer instanceof FilterRegistrationBean) {, +				filterRegistrations.add(((FilterRegistrationBean) initializer), +						.getFilter());, +			}, +			if (!servletRegistrations.contains(servlet)) {, +				String url = (servletBeans.size() == 1 ? "/" : "/" + name + "/");, +				ServletRegistrationBean registration = new ServletRegistrationBean(, +						servlet, url);, +		}, +			if (!servletRegistrations.contains(filter)) {, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/FilterRegistrationBean.java, +	 * Returns the filter being registered., +	 */, +	protected Filter getFilter() {, +		return this.filter;, +	}, +, +	/**, +		configure(servletContext.addFilter(getOrDeduceName(this.filter), this.filter));, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		Assert.notNull(errorPages, "ErrorPages must not be null");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java, + * Servlet bean, the '/' mapping will be used. If multiple Servlet beans are found then, + * the lowercase bean name will be used as a mapping prefix. Any Servlet named, + * 'dispatcherServlet' will always be mapped to '/'. Filter beans will be mapped to all, + * URLs ('/*')., +		Set<Servlet> servletRegistrations = new LinkedHashSet<Servlet>();, +		Set<Filter> filterRegistrations = new LinkedHashSet<Filter>();, +			if (initializer instanceof ServletRegistrationBean) {, +				servletRegistrations.add(((ServletRegistrationBean) initializer), +						.getServlet());, +			}, +			if (initializer instanceof FilterRegistrationBean) {, +				filterRegistrations.add(((FilterRegistrationBean) initializer), +						.getFilter());, +			}, +			if (!servletRegistrations.contains(servlet)) {, +				String url = (servletBeans.size() == 1 ? "/" : "/" + name + "/");, +				ServletRegistrationBean registration = new ServletRegistrationBean(, +						servlet, url);, +		}, +			if (!servletRegistrations.contains(filter)) {, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/FilterRegistrationBean.java, +	 * Returns the filter being registered., +	 */, +	protected Filter getFilter() {, +		return this.filter;, +	}, +, +	/**, +		configure(servletContext.addFilter(getOrDeduceName(this.filter), this.filter));, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/RegistrationBean.java, +	protected final String getOrDeduceName(Object value) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		Assert.notNull(errorPages, "ErrorPages must not be null");, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java, + * Servlet bean, the '/' mapping will be used. If multiple Servlet beans are found then, + * the lowercase bean name will be used as a mapping prefix. Any Servlet named, + * 'dispatcherServlet' will always be mapped to '/'. Filter beans will be mapped to all]