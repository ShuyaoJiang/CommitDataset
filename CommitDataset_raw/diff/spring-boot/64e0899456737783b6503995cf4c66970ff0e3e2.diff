[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +	private final List<ClusterCustomizer> clusterCustomizers;, +			ObjectProvider<List<ClusterCustomizer>> clusterCustomizersProvider) {, +		this.clusterCustomizers = clusterCustomizersProvider.getIfAvailable();, +		if (this.clusterCustomizers != null) {, +			for (ClusterCustomizer customizer : this.clusterCustomizers) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +	private final List<ClusterCustomizer> clusterCustomizers;, +			ObjectProvider<List<ClusterCustomizer>> clusterCustomizersProvider) {, +		this.clusterCustomizers = clusterCustomizersProvider.getIfAvailable();, +		if (this.clusterCustomizers != null) {, +			for (ClusterCustomizer customizer : this.clusterCustomizers) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/ClusterCustomizer.java, + * Callback interface that can be implemented by beans wishing to customize the, + * {@link Cluster} before it is fully initialized, in particular to tune its, + * configuration., +	 * Customize the {@link Cluster}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +	private final List<ClusterCustomizer> clusterCustomizers;, +			ObjectProvider<List<ClusterCustomizer>> clusterCustomizersProvider) {, +		this.clusterCustomizers = clusterCustomizersProvider.getIfAvailable();, +		if (this.clusterCustomizers != null) {, +			for (ClusterCustomizer customizer : this.clusterCustomizers) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/ClusterCustomizer.java, + * Callback interface that can be implemented by beans wishing to customize the, + * {@link Cluster} before it is fully initialized, in particular to tune its, + * configuration., +	 * Customize the {@link Cluster}., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfigurationTests.java, + * @author Stephane Nicoll, +		load();, +		load("spring.data.cassandra.cluster-name=testcluster");, +		load(ClusterConfig.class);, +	private void load(String... environment) {, +		load(null, environment);, +	}, +, +	private void load(Class<?> config, String... environment) {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		if (config != null) {, +			ctx.register(config);, +		}, +		ctx.register(PropertyPlaceholderAutoConfiguration.class,, +		EnvironmentTestUtils.addEnvironment(ctx, environment);, +		ctx.refresh();, +		this.context = ctx;]