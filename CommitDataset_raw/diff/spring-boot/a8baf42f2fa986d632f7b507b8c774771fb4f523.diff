[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.java, +@Order(Ordered.HIGHEST_PRECEDENCE + 1), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.java, +@Order(Ordered.HIGHEST_PRECEDENCE + 1), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +Like any other Spring bean, you can define the order of Servlet filter beans; please, +make sure to check the, +"`<<spring-boot-features.adoc#boot-features-embedded-container-servlets-filters-listeners-beans>>`", +section., +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.java, +@Order(Ordered.HIGHEST_PRECEDENCE + 1), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +Like any other Spring bean, you can define the order of Servlet filter beans; please, +make sure to check the, +"`<<spring-boot-features.adoc#boot-features-embedded-container-servlets-filters-listeners-beans>>`", +section., +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Spring Boot ships with many auto-configurations that can define Servlet filter beans., +Depending on the outcome of these auto-configuration conditions, Spring Boot, +can configure predefined Servlet filters in in your application., +, +Here are a few examples of Servlet filters and their respective order (lower order, +value means higher precedence):, +, +|===, +| Servlet Filter | Order, +, +|`OrderedCharacterEncodingFilter`, +|`Ordered.HIGHEST_PRECEDENCE`, +, +|`WebMvcMetricsFilter`, +|`Ordered.HIGHEST_PRECEDENCE + 1`, +, +|`ErrorPageFilter`, +|`Ordered.HIGHEST_PRECEDENCE + 1`, +, +|`WebRequestTraceFilter`, +|`Ordered.LOWEST_PRECEDENCE - 10`, +|===, +, +It is usually safe to leave filter beans unordered., +, +If a specific order is required, you should avoid, +configuring a Servlet filter that reads the request body at, +`Ordered.HIGHEST_PRECEDENCE`, since it might go against the character encoding, +configuration of your application. Servlet filters should be configured, +at less or equal than `FilterRegistrationBean.REQUEST_WRAPPER_FILTER_MAX_ORDER`, +if they wrap the servlet request., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.java, +@Order(Ordered.HIGHEST_PRECEDENCE + 1), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +Like any other Spring bean, you can define the order of Servlet filter beans; please, +make sure to check the, +"`<<spring-boot-features.adoc#boot-features-embedded-container-servlets-filters-listeners-beans>>`", +section., +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Spring Boot ships with many auto-configurations that can define Servlet filter beans., +Depending on the outcome of these auto-configuration conditions, Spring Boot, +can configure predefined Servlet filters in in your application., +, +Here are a few examples of Servlet filters and their respective order (lower order, +value means higher precedence):, +, +|===, +| Servlet Filter | Order, +, +|`OrderedCharacterEncodingFilter`, +|`Ordered.HIGHEST_PRECEDENCE`, +, +|`WebMvcMetricsFilter`, +|`Ordered.HIGHEST_PRECEDENCE + 1`, +, +|`ErrorPageFilter`, +|`Ordered.HIGHEST_PRECEDENCE + 1`, +, +|`WebRequestTraceFilter`, +|`Ordered.LOWEST_PRECEDENCE - 10`, +|===, +, +It is usually safe to leave filter beans unordered., +, +If a specific order is required, you should avoid, +configuring a Servlet filter that reads the request body at, +`Ordered.HIGHEST_PRECEDENCE`, since it might go against the character encoding, +configuration of your application. Servlet filters should be configured, +at less or equal than `FilterRegistrationBean.REQUEST_WRAPPER_FILTER_MAX_ORDER`, +if they wrap the servlet request., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/ErrorPageFilter.java, +@Order(Ordered.HIGHEST_PRECEDENCE + 1)]