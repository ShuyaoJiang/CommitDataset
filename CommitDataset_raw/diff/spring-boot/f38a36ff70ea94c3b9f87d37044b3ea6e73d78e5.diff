[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +import javax.annotation.PostConstruct;, +import org.springframework.core.io.Resource;, +		@PostConstruct, +		public void checkTemplateLocationExists() {, +			if (this.environment, +					.getProperty("checkTemplateLocation", Boolean.class, true)) {, +				Resource resource = this.resourceLoader.getResource(this.environment, +						.getProperty("prefix", DEFAULT_PREFIX));, +				if (!resource.exists()) {, +					throw new IllegalStateException("Cannot find template location: ", +							+ resource + " (are you really using Thymeleaf?)");, +				}, +			}, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +import javax.annotation.PostConstruct;, +import org.springframework.core.io.Resource;, +		@PostConstruct, +		public void checkTemplateLocationExists() {, +			if (this.environment, +					.getProperty("checkTemplateLocation", Boolean.class, true)) {, +				Resource resource = this.resourceLoader.getResource(this.environment, +						.getProperty("prefix", DEFAULT_PREFIX));, +				if (!resource.exists()) {, +					throw new IllegalStateException("Cannot find template location: ", +							+ resource + " (are you really using Thymeleaf?)");, +				}, +			}, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.beans.factory.BeanCreationException;, +import org.springframework.boot.test.EnvironmentTestUtils;, +	private AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +, +	@After, +	public void close() {, +		if (this.context != null) {, +			this.context.close();, +		}, +	}, +, +		EnvironmentTestUtils.addEnvironment(this.context, "spring.thymeleaf.mode:XHTML",, +				"spring.thymeleaf.suffix:");, +		this.context.register(ThymeleafAutoConfiguration.class,, +		this.context.refresh();, +		TemplateEngine engine = this.context.getBean(TemplateEngine.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.thymeleaf.encoding:UTF-16");, +		this.context.register(ThymeleafAutoConfiguration.class,, +		this.context.refresh();, +		this.context.getBean(TemplateEngine.class).initialize();, +		ITemplateResolver resolver = this.context.getBean(ITemplateResolver.class);, +		ThymeleafViewResolver views = this.context.getBean(ThymeleafViewResolver.class);, +	}, +, +	@Test(expected = BeanCreationException.class), +	public void templateLocationDoesNotExist() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.thymeleaf.prefix:classpath:/no-such-directory/");, +		this.context.register(ThymeleafAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();]