[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ParametersMissingException.java, + * {@link RuntimeException} thrown when an endpoint invocation does not contain required, + * parameters., +		super("Failed to invoke operation because the following required ", +				+ "parameters were missing: ", +				+ StringUtils.collectionToCommaDelimitedString(parameters));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ParametersMissingException.java, + * {@link RuntimeException} thrown when an endpoint invocation does not contain required, + * parameters., +		super("Failed to invoke operation because the following required ", +				+ "parameters were missing: ", +				+ StringUtils.collectionToCommaDelimitedString(parameters));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersTests.java, +, +				converters.removeIf((, +						converter) -> converter instanceof MappingJackson2XmlHttpMessageConverter);, +, +, +				converters.removeIf((, +						converter) -> converter instanceof MappingJackson2XmlHttpMessageConverter);, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ParametersMissingException.java, + * {@link RuntimeException} thrown when an endpoint invocation does not contain required, + * parameters., +		super("Failed to invoke operation because the following required ", +				+ "parameters were missing: ", +				+ StringUtils.collectionToCommaDelimitedString(parameters));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersTests.java, +, +				converters.removeIf((, +						converter) -> converter instanceof MappingJackson2XmlHttpMessageConverter);, +, +, +				converters.removeIf((, +						converter) -> converter instanceof MappingJackson2XmlHttpMessageConverter);, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/AbstractJpaAutoConfigurationTests.java, +				.withUserConfiguration(TestConfiguration.class).withConfiguration(, +						AutoConfigurations.of(DataSourceAutoConfiguration.class,, +		new ApplicationContextRunner(), +				.withConfiguration(AutoConfigurations.of(this.autoConfiguredClass)), +				.run((context) -> {, +					assertThat(context.getStartupFailure()), +							.hasMessageContaining("DataSource");, +		this.contextRunner, +				.withConfiguration(AutoConfigurations, +						.of(DataSourceTransactionManagerAutoConfiguration.class)), +				.run((context) -> {, +				.withConfiguration(AutoConfigurations.of(, +						DataSourceAutoConfiguration.class,, +				.withConfiguration(AutoConfigurations.of(, +						DataSourceAutoConfiguration.class,, +				.withPropertyValues("spring.datasource.generate-unique-name=true",, +				.withConfiguration(AutoConfigurations.of(, +						DataSourceAutoConfiguration.class,, +		this.contextRunner, +				.withPropertyValues("spring.jpa.properties.a:b",, +						"spring.jpa.properties.a.b:c", "spring.jpa.properties.c:d"), +				.run((context) -> {, +		this.contextRunner, +				.withUserConfiguration(, +						TestConfigurationWithLocalContainerEntityManagerFactoryBean.class), +				.run((context) -> {, +		this.contextRunner, +				.withUserConfiguration(, +						TestConfigurationWithLocalContainerEntityManagerFactoryBean.class), +				.run((context) -> {, +		this.contextRunner, +				.withUserConfiguration(TestConfigurationWithTransactionManager.class), +				.run((context) -> {, +		this.contextRunner, +				.withUserConfiguration(, +						TestConfigurationWithCustomPersistenceUnitManager.class), +				.run((context) -> {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ParametersMissingException.java, + * {@link RuntimeException} thrown when an endpoint invocation does not contain required, + * parameters., +		super("Failed to invoke operation because the following required ", +				+ "parameters were missing: ", +				+ StringUtils.collectionToCommaDelimitedString(parameters));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersTests.java, +, +				converters.removeIf((, +						converter) -> converter instanceof MappingJackson2XmlHttpMessageConverter);, +, +, +				converters.removeIf((, +						converter) -> converter instanceof MappingJackson2XmlHttpMessageConverter);, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/AbstractJpaAutoConfigurationTests.java, +				.withUserConfiguration(TestConfiguration.class).withConfiguration(, +						AutoConfigurations.of(DataSourceAutoConfiguration.class,, +		new ApplicationContextRunner(), +				.withConfiguration(AutoConfigurations.of(this.autoConfiguredClass)), +				.run((context) -> {, +					assertThat(context.getStartupFailure()), +							.hasMessageContaining("DataSource");, +		this.contextRunner, +				.withConfiguration(AutoConfigurations, +						.of(DataSourceTransactionManagerAutoConfiguration.class))]