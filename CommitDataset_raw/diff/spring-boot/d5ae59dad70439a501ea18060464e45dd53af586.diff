[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, + * Copyright 2012-2019 the original author or authors., + * @author Brian Clozel, +			if (status.is5xxServerError()) {, +		}, +			if (response != null) {, +		catch (IOException | IllegalArgumentException exc) {, +			return null;, +		}, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, + * Copyright 2012-2019 the original author or authors., + * @author Brian Clozel, +			if (status.is5xxServerError()) {, +		}, +			if (response != null) {, +		catch (IOException | IllegalArgumentException exc) {, +			return null;, +		}, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, + * Copyright 2012-2019 the original author or authors., + * @author Brian Clozel, +			if (status.is5xxServerError()) {, +		}, +			if (response != null) {, +		catch (IOException | IllegalArgumentException exc) {, +			return null;, +		}, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTags.java, + * Copyright 2012-2019 the original author or authors., +		try {, +				if (status.is5xxServerError()) {, +			}, +		catch (IllegalArgumentException exc) {, +			return OUTCOME_UNKNOWN;, +		}, +	}, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, + * Copyright 2012-2019 the original author or authors., + * @author Brian Clozel, +			if (status.is5xxServerError()) {, +		}, +			if (response != null) {, +		catch (IOException | IllegalArgumentException exc) {, +			return null;, +		}, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProvider.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTags.java, + * Copyright 2012-2019 the original author or authors., +		try {, +				if (status.is5xxServerError()) {, +			}, +		catch (IllegalArgumentException exc) {, +			return OUTCOME_UNKNOWN;, +		}, +	}, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTagsTests.java, + * Copyright 2012-2019 the original author or authors., +import java.io.IOException;, +, +import org.springframework.http.client.ClientHttpResponse;, +import static org.mockito.BDDMockito.given;, +import static org.mockito.Mockito.mock;, + * @author Brian Clozel, + * @author Brian Clozel, +		ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(),, +				HttpStatus.CONTINUE);, +		Tag tag = RestTemplateExchangeTags.outcome(response);, +		ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(),, +				HttpStatus.OK);, +		Tag tag = RestTemplateExchangeTags.outcome(response);, +		ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(),, +		Tag tag = RestTemplateExchangeTags.outcome(response);, +		ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(),, +		Tag tag = RestTemplateExchangeTags.outcome(response);, +		ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(),, +		Tag tag = RestTemplateExchangeTags.outcome(response);, +	@Test, +	public void outcomeTagIsUnknownWhenResponseThrowsIOException() throws Exception {, +		ClientHttpResponse response = mock(ClientHttpResponse.class);, +		given(response.getStatusCode()).willThrow(IOException.class);, +		Tag tag = RestTemplateExchangeTags.outcome(response);, +		assertThat(tag.getValue()).isEqualTo("UNKNOWN");, +	}, +, +	@Test]