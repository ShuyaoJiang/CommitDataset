[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.java, +import java.nio.charset.Charset;, +		return new BuildProperties(loadFrom(this.properties.getBuild().getLocation(),, +				"build", this.properties.getBuild().getEncoding()));, +	protected Properties loadFrom(Resource location, String prefix, Charset encoding), +			throws IOException {, +		Properties source = loadSource(location, encoding);, +	private Properties loadSource(Resource location, Charset encoding), +			throws IOException {, +		if (encoding != null) {, +			return PropertiesLoaderUtils, +					.loadProperties(new EncodedResource(location, encoding));, +		}, +		else {, +			return PropertiesLoaderUtils.loadProperties(location);, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.java, +import java.nio.charset.Charset;, +		return new BuildProperties(loadFrom(this.properties.getBuild().getLocation(),, +				"build", this.properties.getBuild().getEncoding()));, +	protected Properties loadFrom(Resource location, String prefix, Charset encoding), +			throws IOException {, +		Properties source = loadSource(location, encoding);, +	private Properties loadSource(Resource location, Charset encoding), +			throws IOException {, +		if (encoding != null) {, +			return PropertiesLoaderUtils, +					.loadProperties(new EncodedResource(location, encoding));, +		}, +		else {, +			return PropertiesLoaderUtils.loadProperties(location);, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/info/ProjectInfoProperties.java, + * Copyright 2012-2018 the original author or authors., +import java.nio.charset.Charset;, +import java.nio.charset.StandardCharsets;, +, +		 * File encoding., +		private Charset encoding = StandardCharsets.UTF_8;, +		public Charset getEncoding() {, +		public void setEncoding(Charset encoding) {, +		 * File encoding., +		private Charset encoding = StandardCharsets.UTF_8;, +		public Charset getEncoding() {, +		public void setEncoding(Charset encoding) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.java, +import java.nio.charset.Charset;, +		return new BuildProperties(loadFrom(this.properties.getBuild().getLocation(),, +				"build", this.properties.getBuild().getEncoding()));, +	protected Properties loadFrom(Resource location, String prefix, Charset encoding), +			throws IOException {, +		Properties source = loadSource(location, encoding);, +	private Properties loadSource(Resource location, Charset encoding), +			throws IOException {, +		if (encoding != null) {, +			return PropertiesLoaderUtils, +					.loadProperties(new EncodedResource(location, encoding));, +		}, +		else {, +			return PropertiesLoaderUtils.loadProperties(location);, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/info/ProjectInfoProperties.java, + * Copyright 2012-2018 the original author or authors., +import java.nio.charset.Charset;, +import java.nio.charset.StandardCharsets;, +, +		 * File encoding., +		private Charset encoding = StandardCharsets.UTF_8;, +		public Charset getEncoding() {, +		public void setEncoding(Charset encoding) {, +		 * File encoding., +		private Charset encoding = StandardCharsets.UTF_8;, +		public Charset getEncoding() {, +		public void setEncoding(Charset encoding) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfigurationTests.java, +	public void gitPropertiesUsesUtf8ByDefault() {, +		this.contextRunner.withPropertyValues(, +				"spring.info.git.location=classpath:/org/springframework/boot/autoconfigure/info/git.properties"), +				.run((context) -> {, +					GitProperties gitProperties = context.getBean(GitProperties.class);, +					assertThat(gitProperties.get("commit.charset")).isEqualTo("test™");, +				});, +	}, +, +	@Test, +	public void gitPropertiesEncodingCanBeConfigured() {, +		this.contextRunner.withPropertyValues("spring.info.git.encoding=US-ASCII",, +				"spring.info.git.location=classpath:/org/springframework/boot/autoconfigure/info/git.properties"), +				.run((context) -> {, +					GitProperties gitProperties = context.getBean(GitProperties.class);, +					assertThat(gitProperties.get("commit.charset")).isNotEqualTo("test™");, +				});, +	@Test, +	public void buildPropertiesUsesUtf8ByDefault() {]