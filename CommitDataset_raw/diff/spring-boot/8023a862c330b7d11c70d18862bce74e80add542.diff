[+++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/annotation/EnableConfigurationPropertiesTests.java, +import javax.annotation.PostConstruct;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.bootstrap.TestUtils;, +import org.springframework.stereotype.Component;, +import static org.junit.Assert.assertNotNull;, +		TestUtils.addEnviroment(this.context, "name:foo");, +		TestUtils.addEnviroment(this.context, "name:foo");, +	@Test, +	public void testBindingWithParentContext() {, +		AnnotationConfigApplicationContext parent = new AnnotationConfigApplicationContext();, +		parent.register(TestConfiguration.class);, +		parent.refresh();, +		TestUtils.addEnviroment(this.context, "name:foo");, +		this.context.setParent(parent);, +		this.context.register(TestConfiguration.class, TestConsumer.class);, +		this.context.refresh();, +		assertEquals(1, this.context.getBeanNamesForType(TestProperties.class).length);, +		assertEquals(1, parent.getBeanNamesForType(TestProperties.class).length);, +		assertEquals("foo", this.context.getBean(TestConsumer.class).getName());, +	}, +, +	@Test, +	public void testBindingOnlyParentContext() {, +		AnnotationConfigApplicationContext parent = new AnnotationConfigApplicationContext();, +		TestUtils.addEnviroment(parent, "name:foo");, +		parent.register(TestConfiguration.class);, +		parent.refresh();, +		this.context.setParent(parent);, +		this.context.register(TestConsumer.class);, +		this.context.refresh();, +		assertEquals(0, this.context.getBeanNamesForType(TestProperties.class).length);, +		assertEquals(1, parent.getBeanNamesForType(TestProperties.class).length);, +		assertEquals("foo", this.context.getBean(TestConsumer.class).getName());, +	}, +, +	@Component, +	protected static class TestConsumer {, +		@Autowired, +		private TestProperties properties;, +, +		@PostConstruct, +		public void init() {, +			assertNotNull(this.properties);, +		}, +, +		public String getName() {, +			return this.properties.getName();, +		}, +	}, +]