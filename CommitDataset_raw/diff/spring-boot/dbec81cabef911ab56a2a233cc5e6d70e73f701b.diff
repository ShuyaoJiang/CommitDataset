[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java, +@ConditionalOnExpression("${spring.jmx.enabled:false}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java, +@ConditionalOnExpression("${spring.jmx.enabled:false}"), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfigurationTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +	@Rule, +	public ExpectedException thrown = ExpectedException.none();, +, +		this.thrown.expect(NoSuchBeanDefinitionException.class);, +		this.context.getBean(MBeanExporter.class);, +	}, +, +	@Test, +	public void testEnabledMBeanExport() {, +		MockEnvironment env = new MockEnvironment();, +		env.setProperty("spring.jmx.enabled", "true");, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.setEnvironment(env);, +		this.context.register(JmxAutoConfiguration.class);, +		this.context.refresh();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java, +@ConditionalOnExpression("${spring.jmx.enabled:false}"), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfigurationTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +	@Rule, +	public ExpectedException thrown = ExpectedException.none();, +, +		this.thrown.expect(NoSuchBeanDefinitionException.class);, +		this.context.getBean(MBeanExporter.class);, +	}, +, +	@Test, +	public void testEnabledMBeanExport() {, +		MockEnvironment env = new MockEnvironment();, +		env.setProperty("spring.jmx.enabled", "true");, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.setEnvironment(env);, +		this.context.register(JmxAutoConfiguration.class);, +		this.context.refresh();, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/main/resources/application.properties, +spring.jmx.enabled: true, +]