[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +profile accepts the configuration. The `<springProfile> tag can contains a simple profile, +name (for example `staging`) or a profile expression. A profile expression allows for more, +complicated profile logic to be expressed, for example, +`production & (eu-central | eu-west)`. Check the, +{spring-reference}core.html#beans-definition-profiles-java[reference guide] for more, +details. The following listing shows three sample profiles:, +	<springProfile name="dev | staging">, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +profile accepts the configuration. The `<springProfile> tag can contains a simple profile, +name (for example `staging`) or a profile expression. A profile expression allows for more, +complicated profile logic to be expressed, for example, +`production & (eu-central | eu-west)`. Check the, +{spring-reference}core.html#beans-definition-profiles-java[reference guide] for more, +details. The following listing shows three sample profiles:, +	<springProfile name="dev | staging">, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/SpringProfileAction.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.core.env.Profiles;, +					&& this.environment.acceptsProfiles(Profiles.of(profileNames));, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +profile accepts the configuration. The `<springProfile> tag can contains a simple profile, +name (for example `staging`) or a profile expression. A profile expression allows for more, +complicated profile logic to be expressed, for example, +`production & (eu-central | eu-west)`. Check the, +{spring-reference}core.html#beans-definition-profiles-java[reference guide] for more, +details. The following listing shows three sample profiles:, +	<springProfile name="dev | staging">, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/SpringProfileAction.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.core.env.Profiles;, +					&& this.environment.acceptsProfiles(Profiles.of(profileNames));, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringBootJoranConfiguratorTests.java, + * Copyright 2012-2018 the original author or authors., +	public void profileExpressionMatchFirst() throws Exception {, +		this.environment.setActiveProfiles("production");, +		initialize("profile-expression.xml");, +		this.logger.trace("Hello");, +		this.out.expect(containsString("Hello"));, +	}, +, +	@Test, +	public void profileExpressionMatchSecond() throws Exception {, +		this.environment.setActiveProfiles("production");, +		initialize("profile-expression.xml");, +		this.logger.trace("Hello");, +		this.out.expect(containsString("Hello"));, +	}, +, +	@Test, +	public void profileExpressionNoMatch() throws Exception {, +		this.environment.setActiveProfiles("development");, +		initialize("profile-expression.xml");, +		this.logger.trace("Hello");, +		this.out.expect(not(containsString("Hello")));, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +profile accepts the configuration. The `<springProfile> tag can contains a simple profile, +name (for example `staging`) or a profile expression. A profile expression allows for more, +complicated profile logic to be expressed, for example, +`production & (eu-central | eu-west)`. Check the, +{spring-reference}core.html#beans-definition-profiles-java[reference guide] for more, +details. The following listing shows three sample profiles:, +	<springProfile name="dev | staging">, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/SpringProfileAction.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.core.env.Profiles;, +					&& this.environment.acceptsProfiles(Profiles.of(profileNames));, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringBootJoranConfiguratorTests.java, + * Copyright 2012-2018 the original author or authors., +	public void profileExpressionMatchFirst() throws Exception {, +		this.environment.setActiveProfiles("production");, +		initialize("profile-expression.xml");, +		this.logger.trace("Hello");, +		this.out.expect(containsString("Hello"));, +	}, +, +	@Test, +	public void profileExpressionMatchSecond() throws Exception {, +		this.environment.setActiveProfiles("production");, +		initialize("profile-expression.xml");, +		this.logger.trace("Hello");, +		this.out.expect(containsString("Hello"));, +	}, +, +	@Test, +	public void profileExpressionNoMatch() throws Exception {, +		this.environment.setActiveProfiles("development");, +		initialize("profile-expression.xml");, +		this.logger.trace("Hello");, +		this.out.expect(not(containsString("Hello")));, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot/src/test/resources/org/springframework/boot/logging/logback/profile-expression.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<configuration>, +	<include resource="org/springframework/boot/logging/logback/base.xml" />]