[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +		<!-- Runtime -->, +		<dependency>, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-jsr310</artifactId>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +		<!-- Runtime -->, +		<dependency>, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-jsr310</artifactId>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, + * Copyright 2012-2018 the original author or authors., +import java.time.OffsetDateTime;, +		OffsetDateTime now = OffsetDateTime.now();, +		given(this.repository.find("alice", now.toInstant(), "logout")).willReturn(, +		verify(this.repository).find("alice", now.toInstant(), "logout");, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +		<!-- Runtime -->, +		<dependency>, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-jsr310</artifactId>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, + * Copyright 2012-2018 the original author or authors., +import java.time.OffsetDateTime;, +		OffsetDateTime now = OffsetDateTime.now();, +		given(this.repository.find("alice", now.toInstant(), "logout")).willReturn(, +		verify(this.repository).find("alice", now.toInstant(), "logout");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEvent.java, + * Copyright 2012-2018 the original author or authors., +import java.time.Instant;, +	private final Instant timestamp;, +		this(Instant.now(), principal, type, data);, +		this(Instant.now(), principal, type, convert(data));, +	public AuditEvent(Instant timestamp, String principal, String type,, +	 * Returns the date/time that the event was logged., +	public Instant getTimestamp() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +		<!-- Runtime -->, +		<dependency>, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-jsr310</artifactId>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, + * Copyright 2012-2018 the original author or authors., +import java.time.OffsetDateTime;, +		OffsetDateTime now = OffsetDateTime.now();, +		given(this.repository.find("alice", now.toInstant(), "logout")).willReturn(, +		verify(this.repository).find("alice", now.toInstant(), "logout");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEvent.java, + * Copyright 2012-2018 the original author or authors., +import java.time.Instant;, +	private final Instant timestamp;, +		this(Instant.now(), principal, type, data);, +		this(Instant.now(), principal, type, convert(data));, +	public AuditEvent(Instant timestamp, String principal, String type,, +	 * Returns the date/time that the event was logged., +	public Instant getTimestamp() {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventRepository.java, +import java.time.Instant;, +	List<AuditEvent> find(String principal, Instant after, String type);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +		<!-- Runtime -->, +		<dependency>, +			<groupId>com.fasterxml.jackson.datatype</groupId>, +			<artifactId>jackson-datatype-jsr310</artifactId>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, + * Copyright 2012-2018 the original author or authors., +import java.time.OffsetDateTime;, +		OffsetDateTime now = OffsetDateTime.now();, +		given(this.repository.find("alice", now.toInstant(), "logout")).willReturn(, +		verify(this.repository).find("alice", now.toInstant(), "logout");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEvent.java, + * Copyright 2012-2018 the original author or authors., +import java.time.Instant;, +	private final Instant timestamp;, +		this(Instant.now(), principal, type, data);, +		this(Instant.now(), principal, type, convert(data));, +	public AuditEvent(Instant timestamp, String principal, String type,, +	 * Returns the date/time that the event was logged., +	public Instant getTimestamp() {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventRepository.java, +import java.time.Instant;, +	List<AuditEvent> find(String principal, Instant after, String type);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsEndpoint.java, + * Copyright 2012-2018 the original author or authors., +import java.time.OffsetDateTime;, +	public AuditEventsDescriptor events(String principal, OffsetDateTime after,, +			String type) {, +		return new AuditEventsDescriptor(this.auditEventRepository.find(principal,, +				after == null ? null : after.toInstant(), type));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml]