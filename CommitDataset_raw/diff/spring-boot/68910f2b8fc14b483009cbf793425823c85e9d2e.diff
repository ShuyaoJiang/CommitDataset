[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AllNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AllNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AllNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/NoneNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AllNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/NoneNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +				ResourceConfiguration.class).environment(this.environment).web(false), +						.run();, +		this.context = new SpringApplicationBuilder(JwtTokenStoreConfiguration.class,, +				ResourceConfiguration.class).environment(this.environment).web(false), +						.run();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/dropwizard/DropwizardMetricServices.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AllNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/NoneNestedConditions.java, + * The, + * {@link org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase, + * ConfigurationPhase} should be specified according to the conditions that are defined., + * In the example above, all conditions are static and can be evaluated early so, + * {@code PARSE_CONFIGURATION} is a right fit., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +				ResourceConfiguration.class).environment(this.environment).web(false), +						.run();, +		this.context = new SpringApplicationBuilder(JwtTokenStoreConfiguration.class,, +				ResourceConfiguration.class).environment(this.environment).web(false), +						.run();, +++ b/spring-boot-docs/src/main/java/org/springframework/boot/ExitCodeApplication.java, +	public static void main(String[] args) {, +		System.exit(SpringApplication, +				.exit(SpringApplication.run(ExitCodeApplication.class, args)));]