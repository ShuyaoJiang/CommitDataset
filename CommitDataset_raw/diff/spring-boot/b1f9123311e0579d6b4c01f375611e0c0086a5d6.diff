[+++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/dependencymanagement/DependencyManagementPluginFeatures.java, + * Copyright 2012-2017 the original author or authors., +	private static final String SPRING_BOOT_BOM = "org.springframework.boot:spring-boot-dependencies:", +		project.getPlugins().withType(DependencyManagementPlugin.class,, +				(plugin) -> configureDependencyManagement(project));, +	}, +, +	private void configureDependencyManagement(Project project) {, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/dependencymanagement/DependencyManagementPluginFeatures.java, + * Copyright 2012-2017 the original author or authors., +	private static final String SPRING_BOOT_BOM = "org.springframework.boot:spring-boot-dependencies:", +		project.getPlugins().withType(DependencyManagementPlugin.class,, +				(plugin) -> configureDependencyManagement(project));, +	}, +, +	private void configureDependencyManagement(Project project) {, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/dependencymanagement/DependencyManagementIntegrationTests.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.gradle.dependencymanagement;, +, +import org.gradle.testkit.runner.TaskOutcome;, +import org.junit.Rule;, +import org.junit.Test;, +, +import org.springframework.boot.gradle.testkit.GradleBuild;, +, +import static org.assertj.core.api.Assertions.assertThat;, +, +/**, + * Integration tests for the plugin's dependency management features., + *, + * @author Andy Wilkinson, + */, +public class DependencyManagementIntegrationTests {, +, +	@Rule, +	public GradleBuild gradleBuild = new GradleBuild();, +, +	@Test, +	public void noDependencyManagementIsAppliedByDefault() {, +		assertThat(this.gradleBuild.build("doesNotHaveDependencyManagement"), +				.task(":doesNotHaveDependencyManagement").getOutcome()), +						.isEqualTo(TaskOutcome.SUCCESS);, +	}, +, +	@Test, +	public void bomIsImportedWhenDependencyManagementPluginIsApplied() {, +		assertThat(this.gradleBuild, +				.build("hasDependencyManagement", "-PapplyDependencyManagementPlugin"), +				.task(":hasDependencyManagement").getOutcome()), +						.isEqualTo(TaskOutcome.SUCCESS);, +	}, +, +}, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/dependencymanagement/DependencyManagementPluginFeatures.java, + * Copyright 2012-2017 the original author or authors., +	private static final String SPRING_BOOT_BOM = "org.springframework.boot:spring-boot-dependencies:", +		project.getPlugins().withType(DependencyManagementPlugin.class,, +				(plugin) -> configureDependencyManagement(project));, +	}, +, +	private void configureDependencyManagement(Project project) {, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/dependencymanagement/DependencyManagementIntegrationTests.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.gradle.dependencymanagement;, +, +import org.gradle.testkit.runner.TaskOutcome;, +import org.junit.Rule;, +import org.junit.Test;, +]