[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			map.from(properties::getDefaultReceiveQueue).whenNonNull(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			map.from(properties::getDefaultReceiveQueue).whenNonNull(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +		private String defaultReceiveQueue;, +		public String getDefaultReceiveQueue() {, +			return this.defaultReceiveQueue;, +		public void setDefaultReceiveQueue(String defaultReceiveQueue) {, +			this.defaultReceiveQueue = defaultReceiveQueue;, +		}, +, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "spring.rabbitmq.template.default-receive-queue"), +		public String getQueue() {, +			return getDefaultReceiveQueue();, +		}, +, +		@Deprecated, +			setDefaultReceiveQueue(queue);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			map.from(properties::getDefaultReceiveQueue).whenNonNull(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +		private String defaultReceiveQueue;, +		public String getDefaultReceiveQueue() {, +			return this.defaultReceiveQueue;, +		public void setDefaultReceiveQueue(String defaultReceiveQueue) {, +			this.defaultReceiveQueue = defaultReceiveQueue;, +		}, +, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "spring.rabbitmq.template.default-receive-queue"), +		public String getQueue() {, +			return getDefaultReceiveQueue();, +		}, +, +		@Deprecated, +			setDefaultReceiveQueue(queue);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +	public void testRabbitTemplateDefaultReceiveQueue() {, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues(, +						"spring.rabbitmq.template.default-receive-queue:default-queue"), +				.run((context) -> {, +					RabbitTemplate rabbitTemplate = context.getBean(RabbitTemplate.class);, +					assertThat(rabbitTemplate).hasFieldOrPropertyWithValue(, +							"defaultReceiveQueue", "default-queue");, +				});, +	}, +, +	@Test, +	@Deprecated, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			map.from(properties::getDefaultReceiveQueue).whenNonNull(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +		private String defaultReceiveQueue;, +		public String getDefaultReceiveQueue() {, +			return this.defaultReceiveQueue;, +		public void setDefaultReceiveQueue(String defaultReceiveQueue) {, +			this.defaultReceiveQueue = defaultReceiveQueue;, +		}, +, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "spring.rabbitmq.template.default-receive-queue"), +		public String getQueue() {, +			return getDefaultReceiveQueue();, +		}, +, +		@Deprecated, +			setDefaultReceiveQueue(queue);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +	public void testRabbitTemplateDefaultReceiveQueue() {, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.withPropertyValues(, +						"spring.rabbitmq.template.default-receive-queue:default-queue"), +				.run((context) -> {, +					RabbitTemplate rabbitTemplate = context.getBean(RabbitTemplate.class);, +					assertThat(rabbitTemplate).hasFieldOrPropertyWithValue(, +							"defaultReceiveQueue", "default-queue");, +				});, +	}, +, +	@Test, +	@Deprecated, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.rabbitmq.template.default-receive-queue= # Name of the default queue to receive messages from when none is specified explicitly.]