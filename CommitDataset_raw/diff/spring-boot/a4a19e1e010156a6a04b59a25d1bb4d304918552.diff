[+++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessorTests.java, +				.withDefaultValue(false), +				.has(Metadata.withProperty("simple.type.my-primitive-byte", Byte.class), +						.withDefaultValue(0));, +				Metadata.withProperty("simple.type.my-primitive-boolean", Boolean.class), +						.withDefaultValue(false));, +				Metadata.withProperty("simple.type.my-primitive-short", Short.class), +						.withDefaultValue(0));, +				Metadata.withProperty("simple.type.my-primitive-integer", Integer.class), +						.withDefaultValue(0));, +				.has(Metadata.withProperty("simple.type.my-primitive-long", Long.class), +						.withDefaultValue(0));, +						.withDefaultValue(false).withNoDeprecation().fromSource(type));, +				Metadata.withProperty("boxing.flag", Boolean.class), +						.withDefaultValue(false).fromSource(type));, +				.withDefaultValue(false).fromSource(SimpleMethodConfig.Foo.class));, +				.withDefaultValue(false).fromSource(MethodAndClassConfig.Foo.class));, +				.withDefaultValue(false), +				.withDefaultValue(false), +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("bar.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("bar.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("bar.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +				.withDefaultValue(0).fromSource(RenamedBarProperties.class));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessorTests.java, +				.withDefaultValue(false), +				.has(Metadata.withProperty("simple.type.my-primitive-byte", Byte.class), +						.withDefaultValue(0));, +				Metadata.withProperty("simple.type.my-primitive-boolean", Boolean.class), +						.withDefaultValue(false));, +				Metadata.withProperty("simple.type.my-primitive-short", Short.class), +						.withDefaultValue(0));, +				Metadata.withProperty("simple.type.my-primitive-integer", Integer.class), +						.withDefaultValue(0));, +				.has(Metadata.withProperty("simple.type.my-primitive-long", Long.class), +						.withDefaultValue(0));, +						.withDefaultValue(false).withNoDeprecation().fromSource(type));, +				Metadata.withProperty("boxing.flag", Boolean.class), +						.withDefaultValue(false).fromSource(type));, +				.withDefaultValue(false).fromSource(SimpleMethodConfig.Foo.class));, +				.withDefaultValue(false).fromSource(MethodAndClassConfig.Foo.class));, +				.withDefaultValue(false), +				.withDefaultValue(false), +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("bar.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("bar.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("bar.counter"), +				.withDefaultValue(0));, +		assertThat(metadata).has(Metadata.withProperty("foo.counter"), +				.withDefaultValue(0));, +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("foo.counter").fromSource(FooProperties.class), +						.withDefaultValue(0));, +				Metadata.withProperty("bar.counter").fromSource(BarProperties.class), +						.withDefaultValue(0));, +				.withDefaultValue(0).fromSource(RenamedBarProperties.class));]