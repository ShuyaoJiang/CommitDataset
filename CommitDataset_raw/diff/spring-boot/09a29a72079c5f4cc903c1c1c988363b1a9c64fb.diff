[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java, +, +	/**, +	 * Return the inverse of the specified condition outcome., +	 * @param outcome the outcome to inverse, +	 * @return the inverse of the condition outcome, +	 * @since 1.3.0, +	 */, +	public static ConditionOutcome inverse(ConditionOutcome outcome) {, +		return new ConditionOutcome(!outcome.isMatch(), outcome.getMessage());, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java, +, +	/**, +	 * Return the inverse of the specified condition outcome., +	 * @param outcome the outcome to inverse, +	 * @return the inverse of the condition outcome, +	 * @since 1.3.0, +	 */, +	public static ConditionOutcome inverse(ConditionOutcome outcome) {, +		return new ConditionOutcome(!outcome.isMatch(), outcome.getMessage());, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/SpringBootCondition.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java, +, +	/**, +	 * Return the inverse of the specified condition outcome., +	 * @param outcome the outcome to inverse, +	 * @return the inverse of the condition outcome, +	 * @since 1.3.0, +	 */, +	public static ConditionOutcome inverse(ConditionOutcome outcome) {, +		return new ConditionOutcome(!outcome.isMatch(), outcome.getMessage());, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/SpringBootCondition.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/Http401AuthenticationEntryPoint.java, + * Copyright 2013-2015 the original author or authors., +, + * AuthenticationEntryPoint that sends a 401 and Parameterized by the value of the {@coe, + * WWW-Authenticate} header. Like the {@link BasicAuthenticationEntryPoint} but more, + * @since 1.3.0, +	private final String headerValue;, +	public Http401AuthenticationEntryPoint(String headerValue) {, +		this.headerValue = headerValue;, +		response.setHeader("WWW-Authenticate", this.headerValue);, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java, +, +	/**, +	 * Return the inverse of the specified condition outcome., +	 * @param outcome the outcome to inverse, +	 * @return the inverse of the condition outcome, +	 * @since 1.3.0, +	 */, +	public static ConditionOutcome inverse(ConditionOutcome outcome) {, +		return new ConditionOutcome(!outcome.isMatch(), outcome.getMessage());, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/SpringBootCondition.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/Http401AuthenticationEntryPoint.java, + * Copyright 2013-2015 the original author or authors., +, + * AuthenticationEntryPoint that sends a 401 and Parameterized by the value of the {@coe, + * WWW-Authenticate} header. Like the {@link BasicAuthenticationEntryPoint} but more, + * @since 1.3.0, +	private final String headerValue;, +	public Http401AuthenticationEntryPoint(String headerValue) {, +		this.headerValue = headerValue;, +		response.setHeader("WWW-Authenticate", this.headerValue);, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, +import org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties;, + * {@link EnableAutoConfiguration Auto-configuration} for Spring Security OAuth2., + * @since 1.3.0, +		OAuth2MethodSecurityConfiguration.class, OAuth2ResourceServerConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java, +, +	/**, +	 * Return the inverse of the specified condition outcome., +	 * @param outcome the outcome to inverse, +	 * @return the inverse of the condition outcome, +	 * @since 1.3.0, +	 */, +	public static ConditionOutcome inverse(ConditionOutcome outcome) {, +		return new ConditionOutcome(!outcome.isMatch(), outcome.getMessage());, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/SpringBootCondition.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/Http401AuthenticationEntryPoint.java, + * Copyright 2013-2015 the original author or authors., +, + * AuthenticationEntryPoint that sends a 401 and Parameterized by the value of the {@coe, + * WWW-Authenticate} header. Like the {@link BasicAuthenticationEntryPoint} but more, + * @since 1.3.0, +	private final String headerValue;]