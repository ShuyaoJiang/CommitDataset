[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2WebSecurityConfiguration.java, +		return new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(, +				authorizedClientService);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2WebSecurityConfiguration.java, +		return new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(, +				authorizedClientService);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/servlet/OAuth2WebSecurityConfigurationTests.java, +	public void configurationRegistersAuthorizedClientRepositoryBean() {, +		this.contextRunner, +				.withUserConfiguration(ClientRepositoryConfiguration.class,, +						OAuth2WebSecurityConfiguration.class), +				.run((context) -> assertThat(context), +						.hasSingleBean(OAuth2AuthorizedClientRepository.class));, +		this.contextRunner.withUserConfiguration(, +				OAuth2AuthorizedClientRepositoryConfiguration.class,, +				OAuth2WebSecurityConfiguration.class).run((context) -> {, +					assertThat(context), +							.hasSingleBean(OAuth2AuthorizedClientRepository.class);, +					assertThat(context).hasBean("testAuthorizedClientRepository");, +	}, +, +	@Configuration, +	@Import(ClientRepositoryConfiguration.class), +	static class OAuth2AuthorizedClientRepositoryConfiguration {, +, +			return new AuthenticatedPrincipalOAuth2AuthorizedClientRepository(, +					authorizedClientService);]