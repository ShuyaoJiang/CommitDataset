[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-async</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-reactivestreams</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-async</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-reactivestreams</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.java, + * @author Stephane Nicoll, +		this.factory = new MongoClientFactory(properties, environment);, +		this.mongo = this.factory.createMongoClient(this.options);, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-async</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-reactivestreams</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.java, + * @author Stephane Nicoll, +		this.factory = new MongoClientFactory(properties, environment);, +		this.mongo = this.factory.createMongoClient(this.options);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoClientFactory.java, + * @author Dave Syer, + * @author Phillip Webb, + * @author Josh Long, + * @author Andy Wilkinson, + * @author Eddú Meléndez, + * @author Stephane Nicoll, + * @author Nasko Vasilev, +	private final Environment environment;, +	public MongoClientFactory(MongoProperties properties, Environment environment) {, +		this.environment = environment;, +	 * Creates a {@link MongoClient} using the given {@code options}. If the configured, +	 * port is zero, the value of the {@code local.mongo.port} property is used to, +	public MongoClient createMongoClient(MongoClientOptions options), +			throws UnknownHostException {, +, +			int port = determinePort();, +	private int determinePort() {, +			if (this.environment != null) {, +				String localPort = this.environment.getProperty("local.mongo.port");, +, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-async</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.mongodb</groupId>, +			<artifactId>mongodb-driver-reactivestreams</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.java, + * @author Stephane Nicoll, +		this.factory = new MongoClientFactory(properties, environment);, +		this.mongo = this.factory.createMongoClient(this.options);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoClientFactory.java, + * @author Dave Syer, + * @author Phillip Webb, + * @author Josh Long, + * @author Andy Wilkinson, + * @author Eddú Meléndez, + * @author Stephane Nicoll, + * @author Nasko Vasilev, +	private final Environment environment;, +	public MongoClientFactory(MongoProperties properties, Environment environment) {, +		this.environment = environment;, +	 * Creates a {@link MongoClient} using the given {@code options}. If the configured, +	 * port is zero, the value of the {@code local.mongo.port} property is used to, +	public MongoClient createMongoClient(MongoClientOptions options), +			throws UnknownHostException {, +, +			int port = determinePort();, +	private int determinePort() {, +			if (this.environment != null) {, +				String localPort = this.environment.getProperty("local.mongo.port");, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoProperties.java, +++ b/spring-boot-autoconfigure/pom.xml]