[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/PropertiesConfigAdapter.java, + * @author Nikolay Rybak, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/PropertiesConfigAdapter.java, + * @author Nikolay Rybak, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/ganglia/GangliaPropertiesConfigAdapter.java, +		return get(GangliaProperties::getDurationUnits,, +				GangliaConfig.super::durationUnits);, +		return get(GangliaProperties::getProtocolVersion,, +				GangliaConfig.super::protocolVersion);, +		return get(GangliaProperties::getAddressingMode,, +				GangliaConfig.super::addressingMode);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/PropertiesConfigAdapter.java, + * @author Nikolay Rybak, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/ganglia/GangliaPropertiesConfigAdapter.java, +		return get(GangliaProperties::getDurationUnits,, +				GangliaConfig.super::durationUnits);, +		return get(GangliaProperties::getProtocolVersion,, +				GangliaConfig.super::protocolVersion);, +		return get(GangliaProperties::getAddressingMode,, +				GangliaConfig.super::addressingMode);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphitePropertiesConfigAdapter.java, +		return get(GraphiteProperties::getDurationUnits,, +				GraphiteConfig.super::durationUnits);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/PropertiesConfigAdapter.java, + * @author Nikolay Rybak, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/ganglia/GangliaPropertiesConfigAdapter.java, +		return get(GangliaProperties::getDurationUnits,, +				GangliaConfig.super::durationUnits);, +		return get(GangliaProperties::getProtocolVersion,, +				GangliaConfig.super::protocolVersion);, +		return get(GangliaProperties::getAddressingMode,, +				GangliaConfig.super::addressingMode);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphitePropertiesConfigAdapter.java, +		return get(GraphiteProperties::getDurationUnits,, +				GraphiteConfig.super::durationUnits);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter.java, +		return get(InfluxProperties::getRetentionPolicy,, +				InfluxConfig.super::retentionPolicy);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/PropertiesConfigAdapter.java, + * @author Nikolay Rybak, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/ganglia/GangliaPropertiesConfigAdapter.java, +		return get(GangliaProperties::getDurationUnits,, +				GangliaConfig.super::durationUnits);, +		return get(GangliaProperties::getProtocolVersion,, +				GangliaConfig.super::protocolVersion);, +		return get(GangliaProperties::getAddressingMode,, +				GangliaConfig.super::addressingMode);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphitePropertiesConfigAdapter.java, +		return get(GraphiteProperties::getDurationUnits,, +				GraphiteConfig.super::durationUnits);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter.java, +		return get(InfluxProperties::getRetentionPolicy,, +				InfluxConfig.super::retentionPolicy);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/prometheus/PrometheusPropertiesConfigAdapter.java, +		return get(PrometheusProperties::getDescriptions,, +				PrometheusConfig.super::descriptions);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/PropertiesConfigAdapter.java, + * @author Nikolay Rybak, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/ganglia/GangliaPropertiesConfigAdapter.java, +		return get(GangliaProperties::getDurationUnits,, +				GangliaConfig.super::durationUnits);, +		return get(GangliaProperties::getProtocolVersion,, +				GangliaConfig.super::protocolVersion);, +		return get(GangliaProperties::getAddressingMode,, +				GangliaConfig.super::addressingMode);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphitePropertiesConfigAdapter.java, +		return get(GraphiteProperties::getDurationUnits,, +				GraphiteConfig.super::durationUnits);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter.java, +		return get(InfluxProperties::getRetentionPolicy,, +				InfluxConfig.super::retentionPolicy);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/prometheus/PrometheusPropertiesConfigAdapter.java, +		return get(PrometheusProperties::getDescriptions,, +				PrometheusConfig.super::descriptions);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/statsd/StatsdPropertiesConfigAdapter.java, +		return get(StatsdProperties::getMaxPacketLength,, +				StatsdConfig.super::maxPacketLength);, +		return get(StatsdProperties::getPollingFrequency,, +				StatsdConfig.super::pollingFrequency);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/PropertiesConfigAdapter.java, + * @author Nikolay Rybak, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/ganglia/GangliaPropertiesConfigAdapter.java, +		return get(GangliaProperties::getDurationUnits,, +				GangliaConfig.super::durationUnits);, +		return get(GangliaProperties::getProtocolVersion,, +				GangliaConfig.super::protocolVersion);, +		return get(GangliaProperties::getAddressingMode,, +				GangliaConfig.super::addressingMode);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphitePropertiesConfigAdapter.java, +		return get(GraphiteProperties::getDurationUnits,, +				GraphiteConfig.super::durationUnits);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/influx/InfluxPropertiesConfigAdapter.java, +		return get(InfluxProperties::getRetentionPolicy,, +				InfluxConfig.super::retentionPolicy);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/prometheus/PrometheusPropertiesConfigAdapter.java, +		return get(PrometheusProperties::getDescriptions,, +				PrometheusConfig.super::descriptions);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/statsd/StatsdPropertiesConfigAdapter.java, +		return get(StatsdProperties::getMaxPacketLength,, +				StatsdConfig.super::maxPacketLength);]