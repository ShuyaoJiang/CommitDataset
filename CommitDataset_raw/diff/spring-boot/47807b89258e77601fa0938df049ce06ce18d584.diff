[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration.java, + * Copyright 2012-2017 the original author or authors., +import com.sendgrid.Client;, + * @author Andy Wilkinson, +@ConditionalOnProperty(prefix = "spring.sendgrid", value = "api-key"), +			return new SendGrid(this.properties.getApiKey(),, +					new Client(HttpClientBuilder.create().setProxy(proxy).build()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration.java, + * Copyright 2012-2017 the original author or authors., +import com.sendgrid.Client;, + * @author Andy Wilkinson, +@ConditionalOnProperty(prefix = "spring.sendgrid", value = "api-key"), +			return new SendGrid(this.properties.getApiKey(),, +					new Client(HttpClientBuilder.create().setProxy(proxy).build()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Andy Wilkinson, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration.java, + * Copyright 2012-2017 the original author or authors., +import com.sendgrid.Client;, + * @author Andy Wilkinson, +@ConditionalOnProperty(prefix = "spring.sendgrid", value = "api-key"), +			return new SendGrid(this.properties.getApiKey(),, +					new Client(HttpClientBuilder.create().setProxy(proxy).build()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Andy Wilkinson, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfigurationTests.java, +		loadContext("spring.sendgrid.api-key:SG.SECRET-API-KEY");, +		assertThat(sendGrid).extracting("apiKey").containsExactly("SG.SECRET-API-KEY");, +		loadContext(ManualSendGridConfiguration.class,, +				"spring.sendgrid.api-key:SG.SECRET-API-KEY");, +		assertThat(sendGrid).extracting("apiKey").containsExactly("SG.CUSTOM_API_KEY");, +		loadContext("spring.sendgrid.api-key:SG.SECRET-API-KEY",, +		assertThat(sendGrid).extracting("client").extracting("httpClient"), +				.extracting("routePlanner"), +			return new SendGrid("SG.CUSTOM_API_KEY", true);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration.java, + * Copyright 2012-2017 the original author or authors., +import com.sendgrid.Client;, + * @author Andy Wilkinson, +@ConditionalOnProperty(prefix = "spring.sendgrid", value = "api-key"), +			return new SendGrid(this.properties.getApiKey(),, +					new Client(HttpClientBuilder.create().setProxy(proxy).build()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Andy Wilkinson, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfigurationTests.java, +		loadContext("spring.sendgrid.api-key:SG.SECRET-API-KEY");, +		assertThat(sendGrid).extracting("apiKey").containsExactly("SG.SECRET-API-KEY");, +		loadContext(ManualSendGridConfiguration.class,, +				"spring.sendgrid.api-key:SG.SECRET-API-KEY");, +		assertThat(sendGrid).extracting("apiKey").containsExactly("SG.CUSTOM_API_KEY");, +		loadContext("spring.sendgrid.api-key:SG.SECRET-API-KEY",, +		assertThat(sendGrid).extracting("client").extracting("httpClient"), +				.extracting("routePlanner"), +			return new SendGrid("SG.CUSTOM_API_KEY", true);, +++ b/spring-boot-dependencies/pom.xml, +		<sendgrid.version>3.2.0</sendgrid.version>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfiguration.java, + * Copyright 2012-2017 the original author or authors., +import com.sendgrid.Client;, + * @author Andy Wilkinson, +@ConditionalOnProperty(prefix = "spring.sendgrid", value = "api-key"), +			return new SendGrid(this.properties.getApiKey(),, +					new Client(HttpClientBuilder.create().setProxy(proxy).build()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/sendgrid/SendGridProperties.java, + * Copyright 2012-2017 the original author or authors., + * @author Andy Wilkinson, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/sendgrid/SendGridAutoConfigurationTests.java, +		loadContext("spring.sendgrid.api-key:SG.SECRET-API-KEY");, +		assertThat(sendGrid).extracting("apiKey").containsExactly("SG.SECRET-API-KEY");, +		loadContext(ManualSendGridConfiguration.class,, +				"spring.sendgrid.api-key:SG.SECRET-API-KEY");, +		assertThat(sendGrid).extracting("apiKey").containsExactly("SG.CUSTOM_API_KEY");, +		loadContext("spring.sendgrid.api-key:SG.SECRET-API-KEY",, +		assertThat(sendGrid).extracting("client").extracting("httpClient"), +				.extracting("routePlanner"), +			return new SendGrid("SG.CUSTOM_API_KEY", true);, +++ b/spring-boot-dependencies/pom.xml, +		<sendgrid.version>3.2.0</sendgrid.version>, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc]