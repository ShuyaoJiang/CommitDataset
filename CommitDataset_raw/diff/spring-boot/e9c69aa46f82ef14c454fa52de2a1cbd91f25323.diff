[+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Andy Wilkinson, +	private static final String SYSTEM_PROPERTY_JAVA_AWT_HEADLESS = "java.awt.headless";, +, +		System.setProperty(, +				SYSTEM_PROPERTY_JAVA_AWT_HEADLESS,, +				System.getProperty(SYSTEM_PROPERTY_JAVA_AWT_HEADLESS,, +						Boolean.toString(this.headless)));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Andy Wilkinson, +	private static final String SYSTEM_PROPERTY_JAVA_AWT_HEADLESS = "java.awt.headless";, +, +		System.setProperty(, +				SYSTEM_PROPERTY_JAVA_AWT_HEADLESS,, +				System.getProperty(SYSTEM_PROPERTY_JAVA_AWT_HEADLESS,, +						Boolean.toString(this.headless)));, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +import org.junit.Before;, + * @author Andy Wilkinson, +	private String headlessProperty;, +, +	@Before, +	public void storeAndClearHeadlessProperty() {, +		this.headlessProperty = System.getProperty("java.awt.headless");, +		System.clearProperty("java.awt.headless");, +	}, +, +	@After, +	public void reinstateHeadlessProperty() {, +		if (this.headlessProperty == null) {, +			System.clearProperty("java.awt.headless");, +		}, +		else {, +			System.setProperty("java.awt.headless", this.headlessProperty);, +		}, +, +	}, +, +	@Test, +	public void headlessSystemPropertyTakesPrecedence() throws Exception {, +		System.setProperty("java.awt.headless", "false");, +		TestSpringApplication application = new TestSpringApplication(ExampleConfig.class);, +		application.setWebEnvironment(false);, +		application.run();, +		assertThat(System.getProperty("java.awt.headless"), equalTo("false"));, +	}, +]