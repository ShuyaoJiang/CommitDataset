[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +	@ConditionalOnSingleCandidate(ConnectionFactory.class), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +	@ConditionalOnSingleCandidate(ConnectionFactory.class), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsAutoConfigurationTests.java, +	public void jmsListenerContainerFactoryWhenMultipleConnectionFactoryBeansShouldBackOff() {, +		this.contextRunner.withUserConfiguration(TestConfiguration10.class), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(JmsListenerContainerFactory.class));, +	}, +, +	@Test, +	protected static class TestConfiguration10 {, +, +		@Bean, +		public ConnectionFactory connectionFactory1() {, +			return new ActiveMQConnectionFactory();, +		}, +, +		@Bean, +		public ConnectionFactory connectionFactory2() {, +			return new ActiveMQConnectionFactory();, +		}, +, +	}, +, +	@Configuration]