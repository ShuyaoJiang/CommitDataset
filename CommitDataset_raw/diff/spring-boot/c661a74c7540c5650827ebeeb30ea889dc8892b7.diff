[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/properties/ServerProperties.java, +import org.apache.catalina.connector.Connector;, +import org.apache.coyote.AbstractProtocol;, +import org.apache.coyote.ProtocolHandler;, +import org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer;, +		private int maxThreads = 0; // Number of threads in protocol handler, +, +		public int getMaxThreads() {, +			return this.maxThreads;, +		}, +, +		public void setMaxThreads(int maxThreads) {, +			this.maxThreads = maxThreads;, +		}, +, +			if (this.maxThreads > 0) {, +				factory.addConnectorCustomizers(new TomcatConnectorCustomizer() {, +					@Override, +					public void customize(Connector connector) {, +						ProtocolHandler handler = connector.getProtocolHandler();, +						if (handler instanceof AbstractProtocol) {, +							AbstractProtocol protocol = (AbstractProtocol) handler;, +							protocol.setMaxThreads(Tomcat.this.maxThreads);, +						}, +					}, +				});, +			}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/properties/ServerProperties.java, +import org.apache.catalina.connector.Connector;, +import org.apache.coyote.AbstractProtocol;, +import org.apache.coyote.ProtocolHandler;, +import org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer;, +		private int maxThreads = 0; // Number of threads in protocol handler, +, +		public int getMaxThreads() {, +			return this.maxThreads;, +		}, +, +		public void setMaxThreads(int maxThreads) {, +			this.maxThreads = maxThreads;, +		}, +, +			if (this.maxThreads > 0) {, +				factory.addConnectorCustomizers(new TomcatConnectorCustomizer() {, +					@Override, +					public void customize(Connector connector) {, +						ProtocolHandler handler = connector.getProtocolHandler();, +						if (handler instanceof AbstractProtocol) {, +							AbstractProtocol protocol = (AbstractProtocol) handler;, +							protocol.setMaxThreads(Tomcat.this.maxThreads);, +						}, +					}, +				});, +			}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.context.embedded.tomcat;, +, +import org.apache.catalina.connector.Connector;, +, +/**, + * @author Dave Syer, + */, +public interface TomcatConnectorCustomizer {, +, +	/**, +	 * @param connector the connector to customize, +	 */, +	void customize(Connector connector);, +, +}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/properties/ServerProperties.java, +import org.apache.catalina.connector.Connector;, +import org.apache.coyote.AbstractProtocol;, +import org.apache.coyote.ProtocolHandler;, +import org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer;, +		private int maxThreads = 0; // Number of threads in protocol handler, +, +		public int getMaxThreads() {, +			return this.maxThreads;, +		}, +, +		public void setMaxThreads(int maxThreads) {]