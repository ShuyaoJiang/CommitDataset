[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityServiceTests.java, +	private static final String CLOUD_CONTROLLER = "https://my-cloud-controller.com";, +	private static final String UAA_URL = "https://my-uaa.com";, +				.andRespond(withSuccess("{\"token_endpoint\":\"https://my-uaa.com\"}",, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityServiceTests.java, +	private static final String CLOUD_CONTROLLER = "https://my-cloud-controller.com";, +	private static final String UAA_URL = "https://my-uaa.com";, +				.andRespond(withSuccess("{\"token_endpoint\":\"https://my-uaa.com\"}",, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/TokenValidatorTests.java, +		given(this.securityService.getUaaUrl()).willReturn("https://other-uaa.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityServiceTests.java, +	private static final String CLOUD_CONTROLLER = "https://my-cloud-controller.com";, +	private static final String UAA_URL = "https://my-uaa.com";, +				.andRespond(withSuccess("{\"token_endpoint\":\"https://my-uaa.com\"}",, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/TokenValidatorTests.java, +		given(this.securityService.getUaaUrl()).willReturn("https://other-uaa.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AbstractEndpointHandlerMappingTests.java, +		request.addHeader("Origin", "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityServiceTests.java, +	private static final String CLOUD_CONTROLLER = "https://my-cloud-controller.com";, +	private static final String UAA_URL = "https://my-uaa.com";, +				.andRespond(withSuccess("{\"token_endpoint\":\"https://my-uaa.com\"}",, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/TokenValidatorTests.java, +		given(this.securityService.getUaaUrl()).willReturn("https://other-uaa.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AbstractEndpointHandlerMappingTests.java, +		request.addHeader("Origin", "https://example.com");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/MultipleResourceServerConfigurationTests.java, +				"security.oauth2.resource.tokenInfoUri:https://example.com",, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityServiceTests.java, +	private static final String CLOUD_CONTROLLER = "https://my-cloud-controller.com";, +	private static final String UAA_URL = "https://my-uaa.com";, +				.andRespond(withSuccess("{\"token_endpoint\":\"https://my-uaa.com\"}",, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/TokenValidatorTests.java, +		given(this.securityService.getUaaUrl()).willReturn("https://other-uaa.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AbstractEndpointHandlerMappingTests.java, +		request.addHeader("Origin", "https://example.com");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/MultipleResourceServerConfigurationTests.java, +				"security.oauth2.resource.tokenInfoUri:https://example.com",, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +				"security.oauth2.resource.userInfoUri:https://example.com");, +			return new JwkTokenStore("https://my.key-set.uri");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityServiceTests.java, +	private static final String CLOUD_CONTROLLER = "https://my-cloud-controller.com";, +	private static final String UAA_URL = "https://my-uaa.com";, +				.andRespond(withSuccess("{\"token_endpoint\":\"https://my-uaa.com\"}",, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/TokenValidatorTests.java, +		given(this.securityService.getUaaUrl()).willReturn("https://other-uaa.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AbstractEndpointHandlerMappingTests.java, +		request.addHeader("Origin", "https://example.com");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/MultipleResourceServerConfigurationTests.java, +				"security.oauth2.resource.tokenInfoUri:https://example.com",, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +				"security.oauth2.resource.userInfoUri:https://example.com");, +			return new JwkTokenStore("https://my.key-set.uri");, +++ b/spring-boot-docs/src/main/asciidoc/deployment.adoc, +As described in the official https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_Java.html[Elastic, +https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environments-create-wizard.html#environments-create-wizard-capacity[in the Amazon documentation]., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +		assertThat(cloudControllerUrl).isEqualTo("https://my-cloud-controller.com");, +				"vcap.application.cf_api:https://my-cloud-controller.com");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityInterceptorTests.java, +		this.request.addHeader(HttpHeaders.ORIGIN, "https://example.com");]