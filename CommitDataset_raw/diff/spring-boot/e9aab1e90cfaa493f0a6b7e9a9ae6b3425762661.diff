[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, + * <li>New filtered files can be {@link #getFilteredJarFile(JarEntryFilter...) created}, + * from existing files.</li>, + * <li>A nested {@link JarFile} can be {@link #getNestedJarFile(ZipEntry) obtained} based, + * on any directory entry.</li>, + * <li>A nested {@link JarFile} can be {@link #getNestedJarFile(ZipEntry) obtained} for, + * embedded JAR files (as long as their entry is not compressed).</li>, +	public JarFile(File file) throws IOException {, +		this(new RandomAccessDataFile(file));, +	JarFile(RandomAccessDataFile file) throws IOException {, +		this(file, file.getFile().getAbsolutePath(), file);, +	public synchronized JarFile getNestedJarFile(final ZipEntry ze) throws IOException {, +	public synchronized JarFile getNestedJarFile(final JarEntryData sourceEntry), +			throws IOException {, +				return getNestedJarFileFromDirectoryEntry(sourceEntry);, +			return getNestedJarFileFromFileEntry(sourceEntry);, +	private JarFile getNestedJarFileFromDirectoryEntry(JarEntryData sourceEntry), +			throws IOException {, +		JarEntryFilter[] filtersToUse = new JarEntryFilter[1];, +	private JarFile getNestedJarFileFromFileEntry(JarEntryData sourceEntry), +			throws IOException {, +				sourceEntry.getData());]