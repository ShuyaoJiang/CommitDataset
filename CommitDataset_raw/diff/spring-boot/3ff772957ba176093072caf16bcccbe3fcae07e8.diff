[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	ConfigurableWebServerApplicationContext createManagementContext(, +			ApplicationContext parent, Class<?>... configurationClasses);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	ConfigurableWebServerApplicationContext createManagementContext(, +			ApplicationContext parent, Class<?>... configurationClasses);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	ConfigurableWebServerApplicationContext createManagementContext(, +			ApplicationContext parent, Class<?>... configurationClasses);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +			ConfigurableWebServerApplicationContext managementContext = this.managementContextFactory, +			managementContext.setServerNamespace("management");, +				((DefaultResourceLoader) child), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	ConfigurableWebServerApplicationContext createManagementContext(, +			ApplicationContext parent, Class<?>... configurationClasses);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +			ConfigurableWebServerApplicationContext managementContext = this.managementContextFactory, +			managementContext.setServerNamespace("management");, +				((DefaultResourceLoader) child), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	ConfigurableWebServerApplicationContext createManagementContext(, +			ApplicationContext parent, Class<?>... configurationClasses);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +			ConfigurableWebServerApplicationContext managementContext = this.managementContextFactory, +			managementContext.setServerNamespace("management");, +				((DefaultResourceLoader) child), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationPidFileWriter.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.system.SystemProperties;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	ConfigurableWebServerApplicationContext createManagementContext(, +			ApplicationContext parent, Class<?>... configurationClasses);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +			ConfigurableWebServerApplicationContext managementContext = this.managementContextFactory, +			managementContext.setServerNamespace("management");, +				((DefaultResourceLoader) child), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementContextFactory.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.ConfigurableWebServerApplicationContext;, +	public ConfigurableWebServerApplicationContext createManagementContext(, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationPidFileWriter.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.system.SystemProperties;, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/EmbeddedServerPortFileWriter.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.context.WebServerApplicationContext;, +		String namespace = getServerNamespace(applicationContext);, +		if (StringUtils.isEmpty(namespace)) {, +			name = name + "-" + namespace.toUpperCase();, +			name = name + "-" + namespace.toLowerCase();, +	private String getServerNamespace(ApplicationContext applicationContext) {]