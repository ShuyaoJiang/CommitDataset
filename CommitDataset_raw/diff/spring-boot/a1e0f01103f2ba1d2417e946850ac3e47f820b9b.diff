[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/AbstractErrorController.java, +	protected Map<String, Object> getErrorAttributes(HttpServletRequest request,, +			boolean includeStackTrace) {, +		RequestAttributes requestAttributes = new ServletRequestAttributes(request);, +		return this.errorAttributes.getErrorAttributes(requestAttributes,, +				includeStackTrace);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/AbstractErrorController.java, +	protected Map<String, Object> getErrorAttributes(HttpServletRequest request,, +			boolean includeStackTrace) {, +		RequestAttributes requestAttributes = new ServletRequestAttributes(request);, +		return this.errorAttributes.getErrorAttributes(requestAttributes,, +				includeStackTrace);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/BasicErrorController.java, +import org.springframework.boot.autoconfigure.web.ErrorProperties.IncludeStacktrace;, +import org.springframework.http.MediaType;, +import org.springframework.util.Assert;, + * @author Michael Stummvoll, + * @author Stephane Nicoll, + * @see ErrorProperties, +	private final ErrorProperties errorProperties;, +	/**, +	 * Create a new {@link BasicErrorController} instance., +	 * @param errorAttributes the error attributes, +	 * @deprecated since 1.3.0 in favor of, +	 * {@link #BasicErrorController(ErrorAttributes, ErrorProperties)}, +	 */, +	@Deprecated, +		this(errorAttributes, new ErrorProperties());, +	}, +, +	/**, +	 * Create a new {@link BasicErrorController} instance., +	 * @param errorAttributes the error attributes, +	 * @param errorProperties configuration properties, +	 */, +	public BasicErrorController(ErrorAttributes errorAttributes,, +			ErrorProperties errorProperties) {, +		Assert.notNull(errorProperties, "ErrorProperties must not be null");, +		this.errorProperties = errorProperties;, +		return this.errorProperties.getPath();, +		Map<String, Object> model = getErrorAttributes(request,, +				isIncludeStackTrace(request, MediaType.TEXT_HTML));, +		return new ModelAndView("error", model);, +		Map<String, Object> body = getErrorAttributes(request,, +				isIncludeStackTrace(request, MediaType.ALL));, +	/**, +	 * Determine if the stacktrace attribute should be included., +	 * @param request the source request, +	 * @param produces the media type produced (or {@code MediaType.ALL}), +	 * @return if the stacktrace attribute should be included, +	 */, +	protected boolean isIncludeStackTrace(HttpServletRequest request, MediaType produces) {, +		IncludeStacktrace include = getErrorProperties().getIncludeStacktrace();, +		if (include == IncludeStacktrace.ALWAYS) {, +			return true;, +		}, +		if (include == IncludeStacktrace.ON_TRACE_PARAM) {, +			return getTraceParameter(request);, +		}, +		return false;, +	}, +, +	/**, +	 * Provide access to the error properties., +	 * @return the error properties, +	 */, +	protected final ErrorProperties getErrorProperties() {, +		return this.errorProperties;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/AbstractErrorController.java, +	protected Map<String, Object> getErrorAttributes(HttpServletRequest request,, +			boolean includeStackTrace) {, +		RequestAttributes requestAttributes = new ServletRequestAttributes(request);, +		return this.errorAttributes.getErrorAttributes(requestAttributes,, +				includeStackTrace);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/BasicErrorController.java, +import org.springframework.boot.autoconfigure.web.ErrorProperties.IncludeStacktrace;, +import org.springframework.http.MediaType;, +import org.springframework.util.Assert;, + * @author Michael Stummvoll, + * @author Stephane Nicoll, + * @see ErrorProperties, +	private final ErrorProperties errorProperties;, +	/**, +	 * Create a new {@link BasicErrorController} instance., +	 * @param errorAttributes the error attributes, +	 * @deprecated since 1.3.0 in favor of, +	 * {@link #BasicErrorController(ErrorAttributes, ErrorProperties)}, +	 */, +	@Deprecated, +		this(errorAttributes, new ErrorProperties());, +	}, +]