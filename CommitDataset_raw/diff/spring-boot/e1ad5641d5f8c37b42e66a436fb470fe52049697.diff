[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, +			system.setLogLevel(name, coerceLogLevel(level));, +			this.logger.error("Cannot set level '" + level + "' for '" + name + "'");, +		String trimmedLevel = level.trim();, +		if ("false".equalsIgnoreCase(trimmedLevel)) {, +		return LogLevel.valueOf(trimmedLevel.toUpperCase(Locale.ENGLISH));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, +			system.setLogLevel(name, coerceLogLevel(level));, +			this.logger.error("Cannot set level '" + level + "' for '" + name + "'");, +		String trimmedLevel = level.trim();, +		if ("false".equalsIgnoreCase(trimmedLevel)) {, +		return LogLevel.valueOf(trimmedLevel.toUpperCase(Locale.ENGLISH));, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/logging/LoggingApplicationListenerTests.java, +	public void parseLevelsTrimsWhitespace() {, +		TestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,, +				"logging.level.org.springframework.boot= trace ");, +		this.initializer.initialize(this.context.getEnvironment(),, +				this.context.getClassLoader());, +		this.logger.debug("testatdebug");, +		this.logger.trace("testattrace");, +		assertThat(this.outputCapture.toString()).contains("testatdebug");, +		assertThat(this.outputCapture.toString()).contains("testattrace");, +	}, +, +	@Test, +				.contains("Cannot set level 'GARBAGE'");]