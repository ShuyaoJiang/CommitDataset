[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +	spring.security.oauth2.client.registration.my-client-1.redirect-uri-template=http://my-redirect-uri.com, +	spring.security.oauth2.client.registration.my-client-2.redirect-uri-template=http://my-redirect-uri.com, +By default, Spring Security's `OAuth2LoginAuthenticationFilter` will only process URLs matching, +`/login/oauth2/code/*`. If you want to customize the `redirect-uri-template` to use a different pattern,, +you will need to provide configuration to process that custom pattern. For example, you can add your own, +`WebSecurityConfigurerAdapter` that looks like this:, +, +[source,java,indent=0], +----, +public class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {, +, +	@Override, +	protected void configure(HttpSecurity http) throws Exception {, +		http, +			.authorizeRequests(), +				.anyRequest().authenticated(), +				.and(), +			.oauth2Login(), +				.redirectionEndpoint(), +					.baseUri("/custom-callback");, +	}, +}, +----, +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +	spring.security.oauth2.client.registration.my-client-1.redirect-uri-template=http://my-redirect-uri.com, +	spring.security.oauth2.client.registration.my-client-2.redirect-uri-template=http://my-redirect-uri.com, +By default, Spring Security's `OAuth2LoginAuthenticationFilter` will only process URLs matching, +`/login/oauth2/code/*`. If you want to customize the `redirect-uri-template` to use a different pattern,, +you will need to provide configuration to process that custom pattern. For example, you can add your own, +`WebSecurityConfigurerAdapter` that looks like this:, +, +[source,java,indent=0], +----, +public class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {, +, +	@Override, +	protected void configure(HttpSecurity http) throws Exception {, +		http, +			.authorizeRequests(), +				.anyRequest().authenticated(), +				.and(), +			.oauth2Login(), +				.redirectionEndpoint(), +					.baseUri("/custom-callback");, +	}, +}, +----, +, +++ b/spring-boot-samples/spring-boot-sample-oauth2-client/README.adoc, +While registering your application, ensure the Authorization callback URL is set to http://localhost:8080/login/oauth2/code/github., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +	spring.security.oauth2.client.registration.my-client-1.redirect-uri-template=http://my-redirect-uri.com, +	spring.security.oauth2.client.registration.my-client-2.redirect-uri-template=http://my-redirect-uri.com, +By default, Spring Security's `OAuth2LoginAuthenticationFilter` will only process URLs matching, +`/login/oauth2/code/*`. If you want to customize the `redirect-uri-template` to use a different pattern,, +you will need to provide configuration to process that custom pattern. For example, you can add your own, +`WebSecurityConfigurerAdapter` that looks like this:, +, +[source,java,indent=0], +----, +public class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {, +, +	@Override, +	protected void configure(HttpSecurity http) throws Exception {, +		http, +			.authorizeRequests(), +				.anyRequest().authenticated(), +				.and(), +			.oauth2Login(), +				.redirectionEndpoint(), +					.baseUri("/custom-callback");, +	}, +}, +----, +, +++ b/spring-boot-samples/spring-boot-sample-oauth2-client/README.adoc, +While registering your application, ensure the Authorization callback URL is set to http://localhost:8080/login/oauth2/code/github., +++ b/spring-boot-samples/spring-boot-sample-oauth2-client/src/main/resources/application.yml, +            redirect-uri-template: http://localhost:8080/login/oauth2/code/github, +            redirect-uri-template: http://localhost:8080/login/oauth2/code/github]