[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationSorter.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationSorter.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +		String name = job.getName();, +		JobParameters parameters = new JobParameters();, +		List<JobInstance> lastInstances = this.jobExplorer.getJobInstances(name, 0, 1);, +				parameters = incrementer.getNext(new JobParameters());, +			List<JobExecution> previousExecutions = this.jobExplorer, +			JobExecution previousExecution = previousExecutions.get(0);, +					parameters = incrementer.getNext(new JobParameters());, +			else if (isStoppedOrFailed(previousExecution)) {, +				parameters = previousExecution.getJobParameters();, +				removeNonIdentifying(additionals);, +				parameters = incrementer.getNext(previousExecution.getJobParameters());, +			}, +		}, +		return merge(parameters, additionals);, +	}, +, +	private boolean isStoppedOrFailed(JobExecution execution) {, +		BatchStatus status = execution.getStatus();, +		return (status == BatchStatus.STOPPED || status == BatchStatus.FAILED);, +	}, +, +	private void removeNonIdentifying(Map<String, JobParameter> parameters) {, +		HashMap<String, JobParameter> copy = new HashMap<String, JobParameter>(parameters);, +		for (Map.Entry<String, JobParameter> parameter : copy.entrySet()) {, +			if (!parameter.getValue().isIdentifying()) {, +				parameters.remove(parameter.getKey());, +	private JobParameters merge(JobParameters parameters,, +			Map<String, JobParameter> additionals) {, +		Map<String, JobParameter> merged = new HashMap<String, JobParameter>();, +		merged.putAll(parameters.getParameters());, +		merged.putAll(additionals);, +		parameters = new JobParameters(merged);, +		return parameters;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationSorter.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +		String name = job.getName();, +		JobParameters parameters = new JobParameters();, +		List<JobInstance> lastInstances = this.jobExplorer.getJobInstances(name, 0, 1);, +				parameters = incrementer.getNext(new JobParameters());, +			List<JobExecution> previousExecutions = this.jobExplorer, +			JobExecution previousExecution = previousExecutions.get(0);, +					parameters = incrementer.getNext(new JobParameters());, +			else if (isStoppedOrFailed(previousExecution)) {, +				parameters = previousExecution.getJobParameters();, +				removeNonIdentifying(additionals);, +				parameters = incrementer.getNext(previousExecution.getJobParameters());, +			}, +		}, +		return merge(parameters, additionals);, +	}, +, +	private boolean isStoppedOrFailed(JobExecution execution) {, +		BatchStatus status = execution.getStatus();, +		return (status == BatchStatus.STOPPED || status == BatchStatus.FAILED);, +	}, +, +	private void removeNonIdentifying(Map<String, JobParameter> parameters) {, +		HashMap<String, JobParameter> copy = new HashMap<String, JobParameter>(parameters);, +		for (Map.Entry<String, JobParameter> parameter : copy.entrySet()) {, +			if (!parameter.getValue().isIdentifying()) {, +				parameters.remove(parameter.getKey());, +	private JobParameters merge(JobParameters parameters,, +			Map<String, JobParameter> additionals) {, +		Map<String, JobParameter> merged = new HashMap<String, JobParameter>();, +		merged.putAll(parameters.getParameters());, +		merged.putAll(additionals);, +		parameters = new JobParameters(merged);, +		return parameters;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +@Import(ElasticsearchRepositoriesRegistrar.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationSorter.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +		String name = job.getName();, +		JobParameters parameters = new JobParameters();, +		List<JobInstance> lastInstances = this.jobExplorer.getJobInstances(name, 0, 1);, +				parameters = incrementer.getNext(new JobParameters());, +			List<JobExecution> previousExecutions = this.jobExplorer, +			JobExecution previousExecution = previousExecutions.get(0);, +					parameters = incrementer.getNext(new JobParameters());, +			else if (isStoppedOrFailed(previousExecution)) {, +				parameters = previousExecution.getJobParameters();, +				removeNonIdentifying(additionals);, +				parameters = incrementer.getNext(previousExecution.getJobParameters());, +			}, +		}, +		return merge(parameters, additionals);, +	}, +, +	private boolean isStoppedOrFailed(JobExecution execution) {, +		BatchStatus status = execution.getStatus();, +		return (status == BatchStatus.STOPPED || status == BatchStatus.FAILED);, +	}, +, +	private void removeNonIdentifying(Map<String, JobParameter> parameters) {, +		HashMap<String, JobParameter> copy = new HashMap<String, JobParameter>(parameters);, +		for (Map.Entry<String, JobParameter> parameter : copy.entrySet()) {, +			if (!parameter.getValue().isIdentifying()) {]