[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException.java, + * @since 2.0.0, +	public CloudFoundryAuthorizationException(Reason reason, String message,, +			Throwable cause) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException.java, + * @since 2.0.0, +	public CloudFoundryAuthorizationException(Reason reason, String message,, +			Throwable cause) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException.java, + * @since 2.0.0, +	public CloudFoundryAuthorizationException(Reason reason, String message,, +			Throwable cause) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.java, + * @since 2.0.0, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException.java, + * @since 2.0.0, +	public CloudFoundryAuthorizationException(Reason reason, String message,, +			Throwable cause) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.java, + * @since 2.0.0, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java, +import org.springframework.boot.actuate.autoconfigure.cloudfoundry.SecurityResponse;, +class CloudFoundryWebFluxEndpointHandlerMapping, +		extends AbstractWebFluxEndpointHandlerMapping {, +		Object handler = (operationType == OperationType.WRITE, +				: new ReadOperationHandler(operationInvoker, operation.getId()));, +		Method method = (operationType == OperationType.WRITE ? this.handleWrite, +		registerMapping(createRequestMappingInfo(operation), handler, method);, +		return this.securityInterceptor.preHandle(exchange, "").map(securityResponse -> {, +			AccessLevel accessLevel = exchange, +					.getAttribute(AccessLevel.REQUEST_ATTRIBUTE);, +			Map<String, Link> links = this.endpointLinksResolver, +					.resolveLinks(getEndpoints(), request.getURI().toString());, +	private Map<String, Link> getAccessibleLinks(AccessLevel accessLevel,, +			Map<String, Link> links) {, +				.filter((entry) -> entry.getKey().equals("self"), +						|| accessLevel.isAccessAllowed(entry.getKey())), +	CloudFoundryWebFluxEndpointHandlerMapping(EndpointMapping endpointMapping,, +		AbstractOperationHandler(OperationInvoker operationInvoker, String endpointId,, +				ReactiveCloudFoundrySecurityInterceptor securityInterceptor) {, +			return this.securityInterceptor.preHandle(exchange, this.endpointId), +					.flatMap((securityResponse) -> flatMapResponse(exchange, body,, +							securityResponse));, +		}, +, +		private Mono<? extends ResponseEntity<Object>> flatMapResponse(, +				ServerWebExchange exchange, Map<String, String> body,, +				SecurityResponse securityResponse) {, +					.put(name, (values.size() == 1 ? values.get(0) : values)));, +			super(operationInvoker, endpointId,, +					CloudFoundryWebFluxEndpointHandlerMapping.this.securityInterceptor);, +			super(operationInvoker, endpointId,, +					CloudFoundryWebFluxEndpointHandlerMapping.this.securityInterceptor);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException.java, + * @since 2.0.0, +	public CloudFoundryAuthorizationException(Reason reason, String message,, +			Throwable cause) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/SecurityResponse.java, + * @since 2.0.0, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.java, + * @since 2.0.0, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +			throw new CloudFoundryAuthorizationException(Reason.INVALID_TOKEN,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointHandlerMapping.java, +import org.springframework.boot.actuate.autoconfigure.cloudfoundry.SecurityResponse;, +class CloudFoundryWebFluxEndpointHandlerMapping, +		extends AbstractWebFluxEndpointHandlerMapping {, +		Object handler = (operationType == OperationType.WRITE, +				: new ReadOperationHandler(operationInvoker, operation.getId()));]