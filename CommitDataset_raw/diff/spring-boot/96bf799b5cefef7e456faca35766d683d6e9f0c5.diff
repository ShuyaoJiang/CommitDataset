[+++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-custom-launch-script.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-custom-launch-script.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-include-launch-script.gradle, +	launchScript(), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-custom-launch-script.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-include-launch-script.gradle, +	launchScript(), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-launch-script-properties.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-custom-launch-script.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-include-launch-script.gradle, +	launchScript(), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-launch-script-properties.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootArchive.java, +	 * Returns the {@link LaunchScriptConfiguration} that will control the script that is, +	 * prepended to the archive., +	 * @return the launch script configuration, or {@code null} if the launch script has, +	 * not been configured., +	@Optional, +	 * Configures the archive to have a prepended launch script., +	 */, +	void launchScript();, +, +	/**, +	 * Configures the archive to have a prepended launch script, customizing its, +	 * configuration using the given {@code action}., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-custom-launch-script.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-include-launch-script.gradle, +	launchScript(), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-launch-script-properties.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootArchive.java, +	 * Returns the {@link LaunchScriptConfiguration} that will control the script that is, +	 * prepended to the archive., +	 * @return the launch script configuration, or {@code null} if the launch script has, +	 * not been configured., +	@Optional, +	 * Configures the archive to have a prepended launch script., +	 */, +	void launchScript();, +, +	/**, +	 * Configures the archive to have a prepended launch script, customizing its, +	 * configuration using the given {@code action}., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootArchiveSupport.java, +	private LaunchScriptConfiguration launchScript;, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-custom-launch-script.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-include-launch-script.gradle, +	launchScript(), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-launch-script-properties.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootArchive.java, +	 * Returns the {@link LaunchScriptConfiguration} that will control the script that is, +	 * prepended to the archive., +	 * @return the launch script configuration, or {@code null} if the launch script has, +	 * not been configured., +	@Optional, +	 * Configures the archive to have a prepended launch script., +	 */, +	void launchScript();, +, +	/**, +	 * Configures the archive to have a prepended launch script, customizing its, +	 * configuration using the given {@code action}., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootArchiveSupport.java, +	private LaunchScriptConfiguration launchScript;, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootJar.java, +	public void launchScript() {, +		enableLaunchScriptIfNecessary();, +	}, +, +	@Override, +		action.execute(enableLaunchScriptIfNecessary());, +	private LaunchScriptConfiguration enableLaunchScriptIfNecessary() {, +		LaunchScriptConfiguration launchScript = this.support.getLaunchScript();, +		if (launchScript == null) {, +			launchScript = new LaunchScriptConfiguration();, +			this.support.setLaunchScript(launchScript);, +		}, +		return launchScript;, +	}, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-custom-launch-script.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-include-launch-script.gradle, +	launchScript(), +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/gradle/packaging/boot-jar-launch-script-properties.gradle, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootArchive.java, +	 * Returns the {@link LaunchScriptConfiguration} that will control the script that is, +	 * prepended to the archive., +	 * @return the launch script configuration, or {@code null} if the launch script has, +	 * not been configured., +	@Optional, +	 * Configures the archive to have a prepended launch script., +	 */, +	void launchScript();, +, +	/**, +	 * Configures the archive to have a prepended launch script, customizing its, +	 * configuration using the given {@code action}., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootArchiveSupport.java, +	private LaunchScriptConfiguration launchScript;, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootJar.java, +	public void launchScript() {]