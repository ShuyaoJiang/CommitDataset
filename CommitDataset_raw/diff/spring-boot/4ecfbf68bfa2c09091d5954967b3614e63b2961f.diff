[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/initializer/ConfigFileApplicationContextInitializer.java, + * {@link #setSearchLocations(String[])} and {@link #setNames(String)}., +	private String names = "${spring.config.name:application}";, +				for (String name : StringUtils, +						.commaDelimitedListToStringArray(this.names)) {, +					String location = searchLocation + name + extension;, +		}, +	 * Sets the names of the files that should be loaded (excluding file extension) as a, +	 * comma separated list. Defaults to "application"., +	public void setNames(String names) {, +		this.names = names;, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/initializer/ConfigFileApplicationContextInitializer.java, + * {@link #setSearchLocations(String[])} and {@link #setNames(String)}., +	private String names = "${spring.config.name:application}";, +				for (String name : StringUtils, +						.commaDelimitedListToStringArray(this.names)) {, +					String location = searchLocation + name + extension;, +		}, +	 * Sets the names of the files that should be loaded (excluding file extension) as a, +	 * comma separated list. Defaults to "application"., +	public void setNames(String names) {, +		this.names = names;, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/initializer/ConfigFileApplicationContextInitializerTests.java, +		this.initializer.setNames("testproperties");, +	public void loadTwoPropertiesFiles() throws Exception {, +		this.initializer.setNames("testproperties,moreproperties");, +		this.initializer.initialize(this.context);, +		String property = this.context.getEnvironment().getProperty("my.property");, +		assertThat(property, equalTo("frommorepropertiesfile"));, +	}, +, +	@Test, +		this.initializer.setNames("testyaml");, +		this.initializer.setNames("testproperties");, +		this.initializer.setNames("enableprofile");, +		this.initializer.setNames("testprofiles");, +		this.initializer.setNames("testsetprofiles");, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/initializer/ConfigFileApplicationContextInitializer.java, + * {@link #setSearchLocations(String[])} and {@link #setNames(String)}., +	private String names = "${spring.config.name:application}";, +				for (String name : StringUtils, +						.commaDelimitedListToStringArray(this.names)) {, +					String location = searchLocation + name + extension;, +		}, +	 * Sets the names of the files that should be loaded (excluding file extension) as a, +	 * comma separated list. Defaults to "application"., +	public void setNames(String names) {, +		this.names = names;, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/initializer/ConfigFileApplicationContextInitializerTests.java, +		this.initializer.setNames("testproperties");, +	public void loadTwoPropertiesFiles() throws Exception {, +		this.initializer.setNames("testproperties,moreproperties");, +		this.initializer.initialize(this.context);, +		String property = this.context.getEnvironment().getProperty("my.property");, +		assertThat(property, equalTo("frommorepropertiesfile"));, +	}, +, +	@Test, +		this.initializer.setNames("testyaml");, +		this.initializer.setNames("testproperties");, +		this.initializer.setNames("enableprofile");, +		this.initializer.setNames("testprofiles");, +		this.initializer.setNames("testsetprofiles");, +++ b/spring-bootstrap/src/test/resources/moreproperties.properties, +my.property=frommorepropertiesfile]