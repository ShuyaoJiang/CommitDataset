[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/couchbase/SpringBootCouchbaseDataConfiguration.java, + * Copyright 2012-2017 the original author or authors., +import java.util.List;, +import com.couchbase.client.java.Cluster;, +import com.couchbase.client.java.cluster.ClusterInfo;, +, +import org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties;, +import org.springframework.data.couchbase.config.AbstractCouchbaseConfiguration;, +@ConditionalOnMissingBean(AbstractCouchbaseConfiguration.class), +class SpringBootCouchbaseDataConfiguration extends AbstractCouchbaseConfiguration {, +	private final CouchbaseProperties properties;, +, +	private final CouchbaseDataProperties dataProperties;, +			CouchbaseProperties properties,, +			CouchbaseDataProperties dataProperties,, +		this.dataProperties = dataProperties;, +	protected List<String> getBootstrapHosts() {, +		return this.properties.getBootstrapHosts();, +	}, +, +	@Override, +	protected String getBucketName() {, +		return this.properties.getBucket().getName();, +	}, +, +	@Override, +	protected String getBucketPassword() {, +		return this.properties.getBucket().getPassword();, +	}, +, +	@Override, +	public Cluster couchbaseCluster() throws Exception {, +		return couchbaseConfigurer().couchbaseCluster();, +	}, +, +	@Override, +	public ClusterInfo couchbaseClusterInfo() throws Exception {, +		return couchbaseConfigurer().couchbaseClusterInfo();, +	}, +, +	@Override, +		return this.dataProperties.getConsistency();, +		if (this.dataProperties.isAutoIndex()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/couchbase/SpringBootCouchbaseDataConfiguration.java, + * Copyright 2012-2017 the original author or authors., +import java.util.List;, +import com.couchbase.client.java.Cluster;, +import com.couchbase.client.java.cluster.ClusterInfo;, +, +import org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties;, +import org.springframework.data.couchbase.config.AbstractCouchbaseConfiguration;, +@ConditionalOnMissingBean(AbstractCouchbaseConfiguration.class), +class SpringBootCouchbaseDataConfiguration extends AbstractCouchbaseConfiguration {, +	private final CouchbaseProperties properties;, +, +	private final CouchbaseDataProperties dataProperties;, +			CouchbaseProperties properties,, +			CouchbaseDataProperties dataProperties,, +		this.dataProperties = dataProperties;, +	protected List<String> getBootstrapHosts() {, +		return this.properties.getBootstrapHosts();, +	}, +, +	@Override, +	protected String getBucketName() {, +		return this.properties.getBucket().getName();, +	}, +, +	@Override, +	protected String getBucketPassword() {, +		return this.properties.getBucket().getPassword();, +	}, +, +	@Override, +	public Cluster couchbaseCluster() throws Exception {, +		return couchbaseConfigurer().couchbaseCluster();, +	}, +, +	@Override, +	public ClusterInfo couchbaseClusterInfo() throws Exception {, +		return couchbaseConfigurer().couchbaseClusterInfo();, +	}, +, +	@Override, +		return this.dataProperties.getConsistency();, +		if (this.dataProperties.isAutoIndex()) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/couchbase/CouchbaseDataAutoConfigurationTests.java, +import java.util.List;, +import com.couchbase.client.java.Cluster;, +import com.couchbase.client.java.cluster.ClusterInfo;, +import org.springframework.data.couchbase.config.AbstractCouchbaseConfiguration;, +	static class CustomCouchbaseConfiguration extends AbstractCouchbaseConfiguration {, +, +		@Override, +		protected List<String> getBootstrapHosts() {, +			return null;, +		}, +, +		@Override, +		protected String getBucketName() {]