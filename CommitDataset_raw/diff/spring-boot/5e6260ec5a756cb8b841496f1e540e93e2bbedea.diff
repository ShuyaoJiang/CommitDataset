[+++ b/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java, +, +		String resolvedSource = this.xmlReader.getEnvironment().resolvePlaceholders(, +, +		// Attempt as a Class, +			return load(ClassUtils.forName(resolvedSource, null));, +		// Attempt as resources, +		Resource[] resources = loadResources(resolvedSource);, +		boolean atLeastOneResourceExists = false;, +			if (resource != null && resource.exists()) {, +				atLeastOneResourceExists = true;, +		if (atLeastOneResourceExists) {, +, +		// Attempt as package, +		Package packageResource = findPackage(resolvedSource);, +, +		throw new IllegalArgumentException("Invalid source '" + resolvedSource + "'");, +, +	private Resource[] loadResources(String source) {, +		ResourceLoader loader = this.resourceLoader != null ? this.resourceLoader, +				: DEFAULT_RESOURCE_LOADER;, +		try {, +			if (loader instanceof ResourcePatternResolver) {, +				return ((ResourcePatternResolver) loader).getResources(source);, +			}, +			return new Resource[] { loader.getResource(source) };, +		}, +		catch (IOException ex) {, +			throw new IllegalStateException("Error reading source '" + source + "'");, +		}]