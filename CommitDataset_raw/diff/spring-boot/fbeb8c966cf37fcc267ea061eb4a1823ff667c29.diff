[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean;, +@ConditionalOnMissingBean(ElasticsearchRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean;, +@ConditionalOnMissingBean(ElasticsearchRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;, +@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean;, +@ConditionalOnMissingBean(ElasticsearchRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;, +@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean;, +@ConditionalOnMissingBean(ElasticsearchRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;, +@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java, +import org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean;, +@ConditionalOnMissingBean({ SolrRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean;, +@ConditionalOnMissingBean(ElasticsearchRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;, +@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java, +import org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean;, +@ConditionalOnMissingBean({ SolrRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/city/City.java, +import org.springframework.data.mongodb.core.mapping.Document;, +, +@Document, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean;, +@ConditionalOnMissingBean(ElasticsearchRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;, +@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java, +import org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean;, +@ConditionalOnMissingBean({ SolrRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/city/City.java, +import org.springframework.data.mongodb.core.mapping.Document;, +, +@Document, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/country/Country.java, +import org.springframework.data.mongodb.core.mapping.Document;, +, +@Document, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean;, +@ConditionalOnMissingBean(ElasticsearchRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean;, +@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java, +import org.springframework.data.solr.repository.support.SolrRepositoryFactoryBean;, +@ConditionalOnMissingBean({ SolrRepositoryFactoryBean.class,, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/city/City.java, +import org.springframework.data.mongodb.core.mapping.Document;, +, +@Document, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/country/Country.java, +import org.springframework.data.mongodb.core.mapping.Document;, +, +@Document, +++ b/spring-boot-dependencies/pom.xml, +		<spring-data-releasetrain.version>Evans-RELEASE</spring-data-releasetrain.version>]