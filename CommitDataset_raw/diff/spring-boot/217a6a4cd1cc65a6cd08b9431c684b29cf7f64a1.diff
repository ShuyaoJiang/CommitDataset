[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/logging/java/SimpleFormatter.java, +	private static final String DEFAULT_FORMAT = "[%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS.%1$tL] - %8$s %4$s [%7$s] --- %3$s: %5$s%6$s%n";, +, +	private static String FORMAT = setOrUseDefault("LOG_FORMAT", DEFAULT_FORMAT);, +	private static String PID = setOrUseDefault("PID", "????");, +, +				.getLevel().getLocalizedName(), message, throwable, thread, PID);, +	private static String setOrUseDefault(String key, String defaultValue) {, +		String value = null;, +		try {, +			value = System.getenv(key);, +		}, +		catch (Exception e) {, +			// ignore, +		}, +		if (value == null) {, +			value = defaultValue;, +		}, +		return System.getProperty(key, value);, +	}, +, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/logging/java/SimpleFormatter.java, +	private static final String DEFAULT_FORMAT = "[%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS.%1$tL] - %8$s %4$s [%7$s] --- %3$s: %5$s%6$s%n";, +, +	private static String FORMAT = setOrUseDefault("LOG_FORMAT", DEFAULT_FORMAT);, +	private static String PID = setOrUseDefault("PID", "????");, +, +				.getLevel().getLocalizedName(), message, throwable, thread, PID);, +	private static String setOrUseDefault(String key, String defaultValue) {, +		String value = null;, +		try {, +			value = System.getenv(key);, +		}, +		catch (Exception e) {, +			// ignore, +		}, +		if (value == null) {, +			value = defaultValue;, +		}, +		return System.getProperty(key, value);, +	}, +, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/logging/java/JavaLoggerSystemTests.java, +import org.springframework.util.ClassUtils;, +		System.err.println(this.output);, +	public void testCustomFormatter() throws Exception {, +		assertTrue("Wrong output:\n" + output, output.contains("???? INFO ["));, +	}, +, +	@Test, +	public void testSystemPropertyInitializesFormat() throws Exception {, +		System.setProperty("PID", "1234");, +		this.loggingSystem.initialize("classpath:", +				+ ClassUtils.addResourcePathToPackagePath(getClass(),, +						"logging.properties"));, +		this.logger.info("Hello world");, +		this.logger.info("Hello world");, +		String output = getOutput().trim();, +		assertTrue("Wrong output:\n" + output, output.contains("Hello world"));, +		assertTrue("Wrong output:\n" + output, output.contains("1234 INFO ["));, +	}, +, +	@Test, +	public void testNonDefaultConfigLocation() throws Exception {, +		this.loggingSystem.initialize("classpath:logging-nondefault.properties");, +		this.logger.info("Hello world");, +		String output = getOutput().trim();, +		assertTrue("Wrong output:\n" + output, output.contains("INFO: Hello"));, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/logging/java/SimpleFormatter.java, +	private static final String DEFAULT_FORMAT = "[%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS.%1$tL] - %8$s %4$s [%7$s] --- %3$s: %5$s%6$s%n";, +, +	private static String FORMAT = setOrUseDefault("LOG_FORMAT", DEFAULT_FORMAT);, +	private static String PID = setOrUseDefault("PID", "????");, +, +				.getLevel().getLocalizedName(), message, throwable, thread, PID);, +	private static String setOrUseDefault(String key, String defaultValue) {, +		String value = null;, +		try {, +			value = System.getenv(key);, +		}, +		catch (Exception e) {, +			// ignore, +		}, +		if (value == null) {, +			value = defaultValue;, +		}, +		return System.getProperty(key, value);, +	}, +, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/logging/java/JavaLoggerSystemTests.java, +import org.springframework.util.ClassUtils;, +		System.err.println(this.output);, +	public void testCustomFormatter() throws Exception {, +		assertTrue("Wrong output:\n" + output, output.contains("???? INFO ["));, +	}, +, +	@Test, +	public void testSystemPropertyInitializesFormat() throws Exception {, +		System.setProperty("PID", "1234");, +		this.loggingSystem.initialize("classpath:"]