[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, + * @author Eddú Meléndez, +	/**, +	 * Fall back to the system locale., +	 */, +	private boolean fallbackToSystemLocale = true;, +, +		messageSource.setFallbackToSystemLocale(this.fallbackToSystemLocale);, +	public boolean isFallbackToSystemLocale() {, +		return this.fallbackToSystemLocale;, +	}, +, +	public void setFallbackToSystemLocale(boolean fallbackToSystemLocale) {, +		this.fallbackToSystemLocale = fallbackToSystemLocale;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, + * @author Eddú Meléndez, +	/**, +	 * Fall back to the system locale., +	 */, +	private boolean fallbackToSystemLocale = true;, +, +		messageSource.setFallbackToSystemLocale(this.fallbackToSystemLocale);, +	public boolean isFallbackToSystemLocale() {, +		return this.fallbackToSystemLocale;, +	}, +, +	public void setFallbackToSystemLocale(boolean fallbackToSystemLocale) {, +		this.fallbackToSystemLocale = fallbackToSystemLocale;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfigurationTests.java, + * Copyright 2012-2015 the original author or authors., +import org.springframework.core.env.Environment;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +		assertEquals("bar", this.context.getMessage("foo", null, "Foo message", Locale.UK));, +		EnvironmentTestUtils.addEnvironment(this.context, "spring.messages.encoding:rubbish");, +	@Test, +	public void testFallbackDefault() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.messages.basename:test/messages");, +		this.context.register(MessageSourceAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +, +		assertTrue(this.context.getBean(MessageSourceAutoConfiguration.class), +				.isFallbackToSystemLocale());, +		assertEquals("bar", this.context.getMessage("foo", null, "bar", Locale.UK));, +	}, +, +	@Test, +	public void testFallbackTurnOff() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.messages.basename:test/messages",, +				"spring.messages.fallback-to-system-locale:false");, +		this.context.register(MessageSourceAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +, +		assertFalse(this.context.getBean(MessageSourceAutoConfiguration.class), +				.isFallbackToSystemLocale());, +		assertEquals("bar", this.context.getMessage("foo", null, "bar", Locale.UK));, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, + * @author Eddú Meléndez, +	/**, +	 * Fall back to the system locale., +	 */, +	private boolean fallbackToSystemLocale = true;, +, +		messageSource.setFallbackToSystemLocale(this.fallbackToSystemLocale);, +	public boolean isFallbackToSystemLocale() {, +		return this.fallbackToSystemLocale;, +	}, +, +	public void setFallbackToSystemLocale(boolean fallbackToSystemLocale) {, +		this.fallbackToSystemLocale = fallbackToSystemLocale;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfigurationTests.java, + * Copyright 2012-2015 the original author or authors., +import org.springframework.core.env.Environment;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +		assertEquals("bar", this.context.getMessage("foo", null, "Foo message", Locale.UK));, +		EnvironmentTestUtils.addEnvironment(this.context, "spring.messages.encoding:rubbish");, +	@Test, +	public void testFallbackDefault() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.messages.basename:test/messages");, +		this.context.register(MessageSourceAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +]