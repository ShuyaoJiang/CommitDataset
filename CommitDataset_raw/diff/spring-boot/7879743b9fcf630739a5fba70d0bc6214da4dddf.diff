[+++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +		 * Amount of quiet time (in milliseconds) required without any classpath changes, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +		 * Amount of quiet time (in milliseconds) required without any classpath changes, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +, +, +, +==== Provider hints, +===== Any, +, +===== Class reference, +, +===== Enum, +===== Logger name, +===== Spring bean reference, +, +, +, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +		 * Amount of quiet time (in milliseconds) required without any classpath changes, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +, +, +, +==== Provider hints, +===== Any, +, +===== Class reference, +, +===== Enum, +===== Logger name, +===== Spring bean reference, +, +, +, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/ItemHint.java, +		this.values = (values != null ? new ArrayList<ValueHint>(values), +				: new ArrayList<ValueHint>());, +		this.providers = (providers != null ? new ArrayList<ProviderHint>(providers), +				: new ArrayList<ProviderHint>());, +		return new ItemHint(name, Arrays.asList(values),, +				Collections.<ProviderHint> emptyList());, +, +, +			return this.name;, +			return this.parameters;, +			return "Provider{" + "name='" + this.name + ", parameters=" + this.parameters, +					+ '}';, +, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +		 * Amount of quiet time (in milliseconds) required without any classpath changes, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +, +, +, +==== Provider hints, +===== Any, +, +===== Class reference, +, +===== Enum, +===== Logger name, +===== Spring bean reference, +, +, +, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/ItemHint.java, +		this.values = (values != null ? new ArrayList<ValueHint>(values), +				: new ArrayList<ValueHint>());, +		this.providers = (providers != null ? new ArrayList<ProviderHint>(providers), +				: new ArrayList<ProviderHint>());, +		return new ItemHint(name, Arrays.asList(values),, +				Collections.<ProviderHint> emptyList());, +, +, +			return this.name;, +			return this.parameters;, +			return "Provider{" + "name='" + this.name + ", parameters=" + this.parameters, +					+ '}';, +, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshaller.java, +				if (providerHint.getParameters() != null, +						&& !providerHint.getParameters().isEmpty()) {, +					for (Map.Entry<String, Object> entry : providerHint.getParameters(), +							.entrySet()) {, +						parametersObject.put(entry.getKey(),, +								extractItemValue(entry.getValue()));, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +		 * Amount of quiet time (in milliseconds) required without any classpath changes, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +, +, +, +==== Provider hints, +===== Any, +, +===== Class reference, +, +===== Enum]