[+++ b/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/loader/tools/launch.script, +### BEGIN INIT INFO, +# Provides:          spring-boot-application, +# Required-Start:    $remote_fs $syslog $network, +# Required-Stop:     $remote_fs $syslog $network, +# Default-Start:     2 3 4 5, +# Default-Stop:      0 1 6, +# Short-Description: Spring Boot Application, +# Description:       Spring Boot Application, +### END INIT INFO, +, +# Initialize variables that cannot be provided by a .conf file, +, +# Follow symlinks to find the real jar and detect init.d script, +cd $(dirname "$0"), +[[ -z "$jarfile" ]] && jarfile=$(pwd)/$(basename "$0"), +while [[ -L "$jarfile" ]]; do, +  [[ "$jarfile" =~ "init.d" ]] && init_script=$(basename "$jarfile"), +  jarfile=$(readlink "$jarfile"), +  cd $(dirname "$jarfile"), +  jarfile=$(pwd)/$(basename "$jarfile"), +done, +jarfolder=$(dirname "$jarfile"), +cd "$WORKING_DIR", +, +# Source any config file, +configfile=$(basename "${jarfile%.*}.conf"), +[[ -r ${jarfolder}/${configfile} ]] && source ${jarfolder}/${configfile}, +, +# Initialize PID/LOG locations if they weren't provided by the config file, +# Create an identity for log/pid files, +if [[ -z "$identity" ]]; then, +  if [[ -n "$init_script" ]]; then, +    identity="${init_script}", +  else, +    identity=$(basename "${jarfile%.*}")_${jar_folder//\//}, +  fi, +fi, +, +, +, +, +command="$javaexe -jar -Dsun.misc.URLClassPath.disableJarChecking=true $JAVA_OPTS $jarfile $RUN_ARGS $@"]