[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/EndpointServlet.java, +import javax.servlet.ServletRegistration;, + * @author Julio José Gómez Díaz, +	private final int loadOnStartup;, +	public EndpointServlet(Class<? extends Servlet> servlet) {, +		this(instantiateClass(servlet));, +	}, +, +	private static Servlet instantiateClass(Class<? extends Servlet> servlet) {, +		Assert.notNull(servlet, "Servlet must not be null");, +		return BeanUtils.instantiateClass(servlet);, +		this(servlet, Collections.emptyMap(), -1);, +		Assert.notNull(servlet, "Servlet must not be null");, +	 * Sets the {@code loadOnStartup} priority that will be set on Servlet registration., +	 * The default value for {@code loadOnStartup} is {@code -1}., +	 * {@code loadOnStartup} value set, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/EndpointServlet.java, +import javax.servlet.ServletRegistration;, + * @author Julio José Gómez Díaz, +	private final int loadOnStartup;, +	public EndpointServlet(Class<? extends Servlet> servlet) {, +		this(instantiateClass(servlet));, +	}, +, +	private static Servlet instantiateClass(Class<? extends Servlet> servlet) {, +		Assert.notNull(servlet, "Servlet must not be null");, +		return BeanUtils.instantiateClass(servlet);, +		this(servlet, Collections.emptyMap(), -1);, +		Assert.notNull(servlet, "Servlet must not be null");, +	 * Sets the {@code loadOnStartup} priority that will be set on Servlet registration., +	 * The default value for {@code loadOnStartup} is {@code -1}., +	 * {@code loadOnStartup} value set, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/EndpointServletTests.java, + * Copyright 2012-2019 the original author or authors., +				.withLoadOnStartup(3);, +		assertThat(endpointServlet.getLoadOnStartup()).isEqualTo(3);, +		public void service(ServletRequest req, ServletResponse res) {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/EndpointServlet.java, +import javax.servlet.ServletRegistration;, + * @author Julio José Gómez Díaz, +	private final int loadOnStartup;, +	public EndpointServlet(Class<? extends Servlet> servlet) {, +		this(instantiateClass(servlet));, +	}, +, +	private static Servlet instantiateClass(Class<? extends Servlet> servlet) {, +		Assert.notNull(servlet, "Servlet must not be null");, +		return BeanUtils.instantiateClass(servlet);, +		this(servlet, Collections.emptyMap(), -1);, +		Assert.notNull(servlet, "Servlet must not be null");, +	 * Sets the {@code loadOnStartup} priority that will be set on Servlet registration., +	 * The default value for {@code loadOnStartup} is {@code -1}., +	 * {@code loadOnStartup} value set, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/EndpointServletTests.java, + * Copyright 2012-2019 the original author or authors., +				.withLoadOnStartup(3);, +		assertThat(endpointServlet.getLoadOnStartup()).isEqualTo(3);, +		public void service(ServletRequest req, ServletResponse res) {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/ServletEndpointRegistrarTests.java, + * Copyright 2012-2019 the original author or authors., +				new EndpointServlet(TestServlet.class).withLoadOnStartup(7));, +		verify(this.dynamic).setLoadOnStartup(7);]