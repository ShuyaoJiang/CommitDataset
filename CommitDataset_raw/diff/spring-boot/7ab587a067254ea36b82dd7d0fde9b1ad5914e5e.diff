[+++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/runner/AbstractApplicationContextRunner.java, +import org.springframework.context.ApplicationContextInitializer;, +	private final List<ApplicationContextInitializer<C>> initializers;, +, +		this(contextFactory, Collections.emptyList(), TestPropertyValues.empty(),, +				TestPropertyValues.empty(), null, null, Collections.emptyList());, +	 * @param initializers the initializers, +			List<ApplicationContextInitializer<C>> initializers,, +		Assert.notNull(initializers, "Initializers must not be null");, +		this.initializers = Collections.unmodifiableList(initializers);, +	 * Add a {@link ApplicationContextInitializer} to be called when the context is, +	 * created., +	 * @param initializer the initializer to add, +	 * @return a new instance with the updated initializers, +	 */, +	public SELF withInitializer(ApplicationContextInitializer<C> initializer) {, +		Assert.notNull(initializer, "Initializer must not be null");, +		return newInstance(this.contextFactory, add(this.initializers, initializer),, +				this.environmentProperties, this.systemProperties, this.classLoader,, +				this.parent, this.configurations);, +	}, +, +	/**, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties.and(pairs), this.systemProperties,, +				this.classLoader, this.parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties.and(pairs),, +				this.classLoader, this.parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties, classLoader,, +				this.parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties, this.classLoader,, +				parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties, this.classLoader,, +				this.parent, add(this.configurations, configurations));, +			List<ApplicationContextInitializer<C>> initializers,, +		this.initializers.forEach((initializer) -> initializer.initialize(context));, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/runner/AbstractApplicationContextRunner.java, +import org.springframework.context.ApplicationContextInitializer;, +	private final List<ApplicationContextInitializer<C>> initializers;, +, +		this(contextFactory, Collections.emptyList(), TestPropertyValues.empty(),, +				TestPropertyValues.empty(), null, null, Collections.emptyList());, +	 * @param initializers the initializers, +			List<ApplicationContextInitializer<C>> initializers,, +		Assert.notNull(initializers, "Initializers must not be null");, +		this.initializers = Collections.unmodifiableList(initializers);, +	 * Add a {@link ApplicationContextInitializer} to be called when the context is, +	 * created., +	 * @param initializer the initializer to add, +	 * @return a new instance with the updated initializers, +	 */, +	public SELF withInitializer(ApplicationContextInitializer<C> initializer) {, +		Assert.notNull(initializer, "Initializer must not be null");, +		return newInstance(this.contextFactory, add(this.initializers, initializer),, +				this.environmentProperties, this.systemProperties, this.classLoader,, +				this.parent, this.configurations);, +	}, +, +	/**, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties.and(pairs), this.systemProperties,, +				this.classLoader, this.parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties.and(pairs),, +				this.classLoader, this.parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties, classLoader,, +				this.parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties, this.classLoader,, +				parent, this.configurations);, +		return newInstance(this.contextFactory, this.initializers,, +				this.environmentProperties, this.systemProperties, this.classLoader,, +				this.parent, add(this.configurations, configurations));, +			List<ApplicationContextInitializer<C>> initializers,, +		this.initializers.forEach((initializer) -> initializer.initialize(context));, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/runner/ApplicationContextRunner.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContextInitializer;, +			List<ApplicationContextInitializer<ConfigurableApplicationContext>> initializers,, +		super(contextFactory, initializers, environmentProperties, systemProperties,, +				classLoader, parent, configurations);, +			List<ApplicationContextInitializer<ConfigurableApplicationContext>> initializers,, +		return new ApplicationContextRunner(contextFactory, initializers,, +				environmentProperties, systemProperties, classLoader, parent,, +				configurations);, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/runner/AbstractApplicationContextRunner.java, +import org.springframework.context.ApplicationContextInitializer;, +	private final List<ApplicationContextInitializer<C>> initializers;, +, +		this(contextFactory, Collections.emptyList(), TestPropertyValues.empty(),, +				TestPropertyValues.empty(), null, null, Collections.emptyList());, +	 * @param initializers the initializers, +			List<ApplicationContextInitializer<C>> initializers,, +		Assert.notNull(initializers, "Initializers must not be null");, +		this.initializers = Collections.unmodifiableList(initializers);]