[+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			String targetClass = "[unknown]";, +			if (target != null) {, +				ClassUtils.getShortName(target.getClass());, +			throw new BeanCreationException(beanName, "Could not bind properties to ", +					+ targetClass + " (" + getAnnotationDetails(annotation) + ")", ex);, +		}, +	}, +, +	private String getAnnotationDetails(ConfigurationProperties annotation) {, +		if (annotation == null) {, +			return "";, +		}, +		StringBuilder details = new StringBuilder();, +		details.append("target=").append(, +				(StringUtils.hasLength(annotation.value()) ? annotation.value(), +						: annotation.prefix()));, +		details.append(", ignoreInvalidFields=").append(annotation.ignoreInvalidFields());, +		details.append(", ignoreUnknownFields=").append(annotation.ignoreUnknownFields());, +		details.append(", ignoreNestedProperties=").append(, +				annotation.ignoreNestedProperties());, +		return details.toString();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			String targetClass = "[unknown]";, +			if (target != null) {, +				ClassUtils.getShortName(target.getClass());, +			throw new BeanCreationException(beanName, "Could not bind properties to ", +					+ targetClass + " (" + getAnnotationDetails(annotation) + ")", ex);, +		}, +	}, +, +	private String getAnnotationDetails(ConfigurationProperties annotation) {, +		if (annotation == null) {, +			return "";, +		}, +		StringBuilder details = new StringBuilder();, +		details.append("target=").append(, +				(StringUtils.hasLength(annotation.value()) ? annotation.value(), +						: annotation.prefix()));, +		details.append(", ignoreInvalidFields=").append(annotation.ignoreInvalidFields());, +		details.append(", ignoreUnknownFields=").append(annotation.ignoreUnknownFields());, +		details.append(", ignoreNestedProperties=").append(, +				annotation.ignoreNestedProperties());, +		return details.toString();, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessorTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +	@Rule, +	public ExpectedException thrown = ExpectedException.none();, +, +	@Test, +	public void notWritablePropertyException() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context, "test.madeup:word");, +		this.context.register(PropertyWithCharArray.class);, +		this.thrown.expect(BeanCreationException.class);, +		this.thrown.expectMessage("test");, +		this.context.refresh();, +	}, +, +	@ConfigurationProperties(prefix = "test", ignoreUnknownFields = false)]