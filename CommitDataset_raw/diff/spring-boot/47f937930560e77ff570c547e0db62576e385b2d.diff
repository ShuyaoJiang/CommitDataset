[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/dynatrace/DynatraceProperties.java, +	 * URI to ship metrics to. Should be used for SaaS, self managed instances or to, +	 * en-route through an internal proxy., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/dynatrace/DynatraceProperties.java, +	 * URI to ship metrics to. Should be used for SaaS, self managed instances or to, +	 * en-route through an internal proxy., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/dynatrace/DynatraceMetricsExportAutoConfigurationTests.java, +import java.util.function.Function;, + * @author Stephane Nicoll, +				.with(mandatoryProperties()), +				.with(mandatoryProperties()), +				.with(mandatoryProperties()).run((context) -> {, +	private Function<ApplicationContextRunner, ApplicationContextRunner> mandatoryProperties() {, +		return (runner) -> runner.withPropertyValues(, +				"management.metrics.export.dynatrace.uri=https://dynatrace.example.com",, +				"management.metrics.export.dynatrace.api-token=abcde",, +				"management.metrics.export.dynatrace.device-id=test");, +	}, +, +			return (k) -> {, +				if ("dynatrace.apiToken".equals(k)) {, +					return "abcde";, +				if ("dynatrace.deviceId".equals(k)) {, +					return "test";, +				}, +				return null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/dynatrace/DynatraceProperties.java, +	 * URI to ship metrics to. Should be used for SaaS, self managed instances or to, +	 * en-route through an internal proxy., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/dynatrace/DynatraceMetricsExportAutoConfigurationTests.java, +import java.util.function.Function;, + * @author Stephane Nicoll, +				.with(mandatoryProperties()), +				.with(mandatoryProperties()), +				.with(mandatoryProperties()).run((context) -> {, +	private Function<ApplicationContextRunner, ApplicationContextRunner> mandatoryProperties() {, +		return (runner) -> runner.withPropertyValues(, +				"management.metrics.export.dynatrace.uri=https://dynatrace.example.com",, +				"management.metrics.export.dynatrace.api-token=abcde",, +				"management.metrics.export.dynatrace.device-id=test");, +	}, +, +			return (k) -> {, +				if ("dynatrace.apiToken".equals(k)) {, +					return "abcde";, +				if ("dynatrace.deviceId".equals(k)) {, +					return "test";, +				}, +				return null;, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	management.metrics.export.dynatrace.uri= # URI to ship metrics to. Should be used for SaaS, self managed instances or to en-route through an internal proxy.]