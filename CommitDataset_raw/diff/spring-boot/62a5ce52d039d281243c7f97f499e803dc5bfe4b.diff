[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Ssl;, +	private Ssl ssl;, +, +	public Ssl getSsl() {, +		return this.ssl;, +	}, +, +	public void setSsl(Ssl ssl) {, +		this.ssl = ssl;, +	}, +, +		if (getSsl() != null) {, +			container.setSsl(getSsl());, +		}, +	public String[] getPathsArray(Collection<String> paths) {, +		String[] result = new String[paths.size()];, +		int i = 0;, +		for (String path : paths) {, +			result[i++] = getPath(path);, +		}, +		return result;, +	}, +, +	public String[] getPathsArray(String[] paths) {, +		String[] result = new String[paths.length];, +		int i = 0;, +		for (String path : paths) {, +			result[i++] = getPath(path);, +		}, +		return result;, +	}, +, +	public String getPath(String path) {, +		String prefix = getServletPrefix();, +		if (!path.startsWith("/")) {, +			path = "/" + path;, +		}, +		return prefix + path;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Ssl;, +	private Ssl ssl;, +, +	public Ssl getSsl() {, +		return this.ssl;, +	}, +, +	public void setSsl(Ssl ssl) {, +		this.ssl = ssl;, +	}, +, +		if (getSsl() != null) {, +			container.setSsl(getSsl());, +		}, +	public String[] getPathsArray(Collection<String> paths) {, +		String[] result = new String[paths.size()];, +		int i = 0;, +		for (String path : paths) {, +			result[i++] = getPath(path);, +		}, +		return result;, +	}, +, +	public String[] getPathsArray(String[] paths) {, +		String[] result = new String[paths.length];, +		int i = 0;, +		for (String path : paths) {, +			result[i++] = getPath(path);, +		}, +		return result;, +	}, +, +	public String getPath(String path) {, +		String prefix = getServletPrefix();, +		if (!path.startsWith("/")) {, +			path = "/" + path;, +		}, +		return prefix + path;, +	}, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.ssl.client-auth= # want or need, +	server.ssl.key-alias=, +	server.ssl.key-password=, +	server.ssl.key-store=, +	server.ssl.key-store-password=, +	server.ssl.key-store-provider=, +	server.ssl.key-store-type=, +	server.ssl.protocol=TLS, +	server.ssl.trust-store=, +	server.ssl.trust-store-password=, +	server.ssl.trust-store-provider=, +	server.ssl.trust-store-type=, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Ssl;, +	private Ssl ssl;, +, +	public Ssl getSsl() {]