[+++ b/spring-boot-samples/spring-boot-sample-parent-context/pom.xml, +			<artifactId>spring-integration-file</artifactId>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.integration</groupId>, +++ b/spring-boot-samples/spring-boot-sample-parent-context/pom.xml, +			<artifactId>spring-integration-file</artifactId>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.integration</groupId>, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +import java.io.File;, +, +import org.springframework.context.annotation.Bean;, +import org.springframework.integration.channel.DirectChannel;, +import org.springframework.integration.dsl.IntegrationFlow;, +import org.springframework.integration.dsl.IntegrationFlows;, +import org.springframework.integration.dsl.SourcePollingChannelAdapterSpec;, +import org.springframework.integration.dsl.core.Pollers;, +import org.springframework.integration.dsl.support.Consumer;, +import org.springframework.integration.file.FileReadingMessageSource;, +import org.springframework.integration.file.FileWritingMessageHandler;, +		@Bean, +		public FileReadingMessageSource fileReader() {, +			FileReadingMessageSource reader = new FileReadingMessageSource();, +			reader.setDirectory(new File("target/input"));, +			return reader;, +		}, +, +		@Bean, +		public DirectChannel inputChannel() {, +			return new DirectChannel();, +		}, +, +		@Bean, +		public DirectChannel outputChannel() {, +			return new DirectChannel();, +		}, +, +		@Bean, +		public FileWritingMessageHandler fileWriter() {, +			FileWritingMessageHandler writer = new FileWritingMessageHandler(, +					new File("target/output"));, +			writer.setExpectReply(false);, +			return writer;, +		}, +, +		@Bean, +		public IntegrationFlow integrationFlow(SampleEndpoint endpoint) {, +			return IntegrationFlows.from(fileReader(), new FixedRatePoller()), +					.channel(inputChannel()).handle(endpoint).channel(outputChannel()), +					.handle(fileWriter()).get();, +		}, +, +		private static class FixedRatePoller, +				implements Consumer<SourcePollingChannelAdapterSpec> {, +, +			@Override, +			public void accept(SourcePollingChannelAdapterSpec spec) {, +				spec.poller(Pollers.fixedRate(500));, +			}, +, +		}, +, +++ b/spring-boot-samples/spring-boot-sample-parent-context/pom.xml, +			<artifactId>spring-integration-file</artifactId>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.integration</groupId>, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +import java.io.File;, +, +import org.springframework.context.annotation.Bean;, +import org.springframework.integration.channel.DirectChannel;, +import org.springframework.integration.dsl.IntegrationFlow;, +import org.springframework.integration.dsl.IntegrationFlows;, +import org.springframework.integration.dsl.SourcePollingChannelAdapterSpec;, +import org.springframework.integration.dsl.core.Pollers;, +import org.springframework.integration.dsl.support.Consumer;, +import org.springframework.integration.file.FileReadingMessageSource;, +import org.springframework.integration.file.FileWritingMessageHandler;, +		@Bean, +		public FileReadingMessageSource fileReader() {, +			FileReadingMessageSource reader = new FileReadingMessageSource();, +			reader.setDirectory(new File("target/input"));, +			return reader;, +		}, +, +		@Bean, +		public DirectChannel inputChannel() {, +			return new DirectChannel();, +		}, +, +		@Bean, +		public DirectChannel outputChannel() {, +			return new DirectChannel();, +		}, +, +		@Bean, +		public FileWritingMessageHandler fileWriter() {]