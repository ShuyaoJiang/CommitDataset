[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		childContext.setClassLoader(this.applicationContext.getClassLoader());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		childContext.setClassLoader(this.applicationContext.getClassLoader());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		childContext.setClassLoader(this.applicationContext.getClassLoader());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.java, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/BootCuriesHrefIntegrationTests.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure;, +, +import java.net.URL;, +, +import com.jayway.jsonpath.JsonPath;, +import net.minidev.json.JSONArray;, +import org.junit.After;, +import org.junit.Test;, +, +import org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext;, +import org.springframework.boot.context.embedded.ServerPortInfoApplicationContextInitializer;, +import org.springframework.boot.test.util.EnvironmentTestUtils;, +import org.springframework.boot.test.web.client.TestRestTemplate;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.http.ResponseEntity;, +, +import static org.assertj.core.api.Assertions.assertThat;, +, +/**, + * Integration tests for the href of the actuator's curies link, + *, + * @author Andy Wilkinson, + */, +public class BootCuriesHrefIntegrationTests {, +, +	private AnnotationConfigEmbeddedWebApplicationContext context;, +, +	@After, +	public void closeContext() {, +		this.context.close();, +	}, +, +	@Test, +	public void basicCuriesHref() {, +		int port = load("endpoints.docs.curies.enabled:true", "server.port:0");, +		assertThat(getCurieHref("http://localhost:" + port + "/actuator")).isEqualTo(, +				"http://localhost:" + port + "/docs/#spring_boot_actuator__{rel}");, +	}, +, +	@Test, +	public void curiesHrefWithCustomContextPath() {, +		int port = load("endpoints.docs.curies.enabled:true", "server.port:0",, +				"server.context-path:/context");, +		assertThat(getCurieHref("http://localhost:" + port + "/context/actuator")), +				.isEqualTo("http://localhost:" + port, +						+ "/context/docs/#spring_boot_actuator__{rel}");, +	}, +, +	@Test, +	public void curiesHrefWithCustomServletPath() {, +		int port = load("endpoints.docs.curies.enabled:true", "server.port:0",, +				"server.servlet-path:/servlet");, +		assertThat(getCurieHref("http://localhost:" + port + "/servlet/actuator")), +				.isEqualTo("http://localhost:" + port, +						+ "/servlet/docs/#spring_boot_actuator__{rel}");, +	}, +, +	@Test, +	public void curiesHrefWithCustomServletAndContextPaths() {, +		int port = load("endpoints.docs.curies.enabled:true", "server.port:0",, +				"server.context-path:/context", "server.servlet-path:/servlet");, +		assertThat(getCurieHref("http://localhost:" + port + "/context/servlet/actuator")), +				.isEqualTo("http://localhost:" + port, +						+ "/context/servlet/docs/#spring_boot_actuator__{rel}");, +	}, +, +	@Test, +	public void curiesHrefWithCustomServletContextAndManagementContextPaths() {, +		int port = load("endpoints.docs.curies.enabled:true", "server.port:0",, +				"server.context-path:/context", "server.servlet-path:/servlet",, +				"management.context-path:/management");, +		assertThat(getCurieHref("http://localhost:" + port, +				+ "/context/servlet/management/")).isEqualTo("http://localhost:" + port, +						+ "/context/servlet/management/docs/#spring_boot_actuator__{rel}");, +	}]