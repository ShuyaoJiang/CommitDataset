[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	 * Get the session timeout, +	 * Set the session timeout, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	 * Get the session timeout, +	 * Set the session timeout, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayloadForwarderTests.java, +	public void targetChannelMustNotBeNull() throws Exception {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	 * Get the session timeout, +	 * Set the session timeout, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayloadForwarderTests.java, +	public void targetChannelMustNotBeNull() throws Exception {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +* Any `java.lang.Enum` that lists the possible values for the property (By all means, try to, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	 * Get the session timeout, +	 * Set the session timeout, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayloadForwarderTests.java, +	public void targetChannelMustNotBeNull() throws Exception {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +* Any `java.lang.Enum` that lists the possible values for the property (By all means, try to, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +is empty and it is up to Authorization Server to decide what the defaults should be,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	 * Get the session timeout, +	 * Set the session timeout, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayloadForwarderTests.java, +	public void targetChannelMustNotBeNull() throws Exception {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +* Any `java.lang.Enum` that lists the possible values for the property (By all means, try to, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +is empty and it is up to Authorization Server to decide what the defaults should be,, +++ b/spring-boot/src/main/java/org/springframework/boot/ApplicationArguments.java, + * Provides access to the arguments that were used to run a {@link SpringApplication}., +	 * @return {@code true} if the arguments contain an option with the given name, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	 * Get the session timeout, +	 * Set the session timeout, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayloadForwarderTests.java, +	public void targetChannelMustNotBeNull() throws Exception {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +* Any `java.lang.Enum` that lists the possible values for the property (By all means, try to, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +is empty and it is up to Authorization Server to decide what the defaults should be,, +++ b/spring-boot/src/main/java/org/springframework/boot/ApplicationArguments.java, + * Provides access to the arguments that were used to run a {@link SpringApplication}., +	 * @return {@code true} if the arguments contain an option with the given name, +++ b/spring-boot/src/main/java/org/springframework/boot/ApplicationRunner.java, + * a {@link SpringApplication}. Multiple {@link ApplicationRunner} beans can be defined, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	 * Get the session timeout, +	 * Set the session timeout, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayloadForwarderTests.java, +	public void targetChannelMustNotBeNull() throws Exception {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +* Any `java.lang.Enum` that lists the possible values for the property (By all means, try to, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +is empty and it is up to Authorization Server to decide what the defaults should be,, +++ b/spring-boot/src/main/java/org/springframework/boot/ApplicationArguments.java, + * Provides access to the arguments that were used to run a {@link SpringApplication}., +	 * @return {@code true} if the arguments contain an option with the given name, +++ b/spring-boot/src/main/java/org/springframework/boot/ApplicationRunner.java, + * a {@link SpringApplication}. Multiple {@link ApplicationRunner} beans can be defined, +++ b/spring-boot/src/test/java/org/springframework/boot/DefaultApplicationArgumentsTests.java, +	public void argumentsMustNotBeNull() throws Exception {]