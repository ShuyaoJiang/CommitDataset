[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscoverer.java, +		public int hashCode() {, +			return this.key.hashCode();, +		}, +, +		@Override, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscoverer.java, +		public int hashCode() {, +			return this.key.hashCode();, +		}, +, +		@Override, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +	@Override, +	public int hashCode() {, +		final int prime = 31;, +		int result = 1;, +		result = prime * result + this.consumes.hashCode();, +		result = prime * result + this.httpMethod.hashCode();, +		result = prime * result + this.canonicalPath.hashCode();, +		result = prime * result + this.produces.hashCode();, +		return result;, +	}, +, +	@Override, +	public String toString() {, +		StringBuilder result = new StringBuilder(, +				this.httpMethod + " to path '" + this.path + "'");, +		if (!CollectionUtils.isEmpty(this.consumes)) {, +			result.append(" consumes: ", +					+ StringUtils.collectionToCommaDelimitedString(this.consumes));, +		}, +		if (!CollectionUtils.isEmpty(this.produces)) {, +			result.append(" produces: ", +					+ StringUtils.collectionToCommaDelimitedString(this.produces));, +		}, +		return result.toString();, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscoverer.java, +		public int hashCode() {, +			return this.key.hashCode();, +		}, +, +		@Override, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +	@Override, +	public int hashCode() {, +		final int prime = 31;, +		int result = 1;, +		result = prime * result + this.consumes.hashCode();, +		result = prime * result + this.httpMethod.hashCode();, +		result = prime * result + this.canonicalPath.hashCode();, +		result = prime * result + this.produces.hashCode();, +		return result;, +	}, +, +	@Override, +	public String toString() {, +		StringBuilder result = new StringBuilder(, +				this.httpMethod + " to path '" + this.path + "'");, +		if (!CollectionUtils.isEmpty(this.consumes)) {, +			result.append(" consumes: ", +					+ StringUtils.collectionToCommaDelimitedString(this.consumes));, +		}, +		if (!CollectionUtils.isEmpty(this.produces)) {, +			result.append(" produces: ", +					+ StringUtils.collectionToCommaDelimitedString(this.produces));, +		}, +		return result.toString();, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/Status.java, + * Copyright 2012-2018 the original author or authors., +	@Override, +	public int hashCode() {, +		return this.code.hashCode();, +	}, +, +	@Override, +	public String toString() {, +		return this.code;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscoverer.java, +		public int hashCode() {, +			return this.key.hashCode();, +		}, +, +		@Override, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +	@Override, +	public int hashCode() {, +		final int prime = 31;, +		int result = 1;, +		result = prime * result + this.consumes.hashCode();, +		result = prime * result + this.httpMethod.hashCode();, +		result = prime * result + this.canonicalPath.hashCode();, +		result = prime * result + this.produces.hashCode();, +		return result;]