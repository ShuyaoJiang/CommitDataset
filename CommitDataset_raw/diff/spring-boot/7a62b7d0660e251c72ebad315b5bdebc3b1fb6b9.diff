[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/social/AbstractSocialAutoConfigurationTests.java, +public abstract class AbstractSocialAutoConfigurationTests {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/social/AbstractSocialAutoConfigurationTests.java, +public abstract class AbstractSocialAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +public abstract class AbstractDevToolsDataSourceAutoConfigurationTests {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/social/AbstractSocialAutoConfigurationTests.java, +public abstract class AbstractSocialAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +public abstract class AbstractDevToolsDataSourceAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/social/AbstractSocialAutoConfigurationTests.java, +public abstract class AbstractSocialAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +public abstract class AbstractDevToolsDataSourceAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/SpyBean.java, + * of the same type will be wrapped with the spy. If no existing bean is defined a new one, + * with Java 8 or contained within a {@link SpyBeans @SpyBeans} annotation., +	 * @return the classes to spy, +	 * When {@code @SpyBean} also defines a {@code name} this attribute can only contain, +	 * @return the classes to spy, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/social/AbstractSocialAutoConfigurationTests.java, +public abstract class AbstractSocialAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +public abstract class AbstractDevToolsDataSourceAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/SpyBean.java, + * of the same type will be wrapped with the spy. If no existing bean is defined a new one, + * with Java 8 or contained within a {@link SpyBeans @SpyBeans} annotation., +	 * @return the classes to spy, +	 * When {@code @SpyBean} also defines a {@code name} this attribute can only contain, +	 * @return the classes to spy, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/SpyBeanOnTestFieldForExistingBeanIntegrationTests.java, +@ContextConfiguration(classes = SpyBeanOnTestFieldForExistingBeanConfig.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/social/AbstractSocialAutoConfigurationTests.java, +public abstract class AbstractSocialAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +public abstract class AbstractDevToolsDataSourceAutoConfigurationTests {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/SpyBean.java, + * of the same type will be wrapped with the spy. If no existing bean is defined a new one, + * with Java 8 or contained within a {@link SpyBeans @SpyBeans} annotation., +	 * @return the classes to spy, +	 * When {@code @SpyBean} also defines a {@code name} this attribute can only contain, +	 * @return the classes to spy, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/SpyBeanOnTestFieldForExistingBeanIntegrationTests.java, +@ContextConfiguration(classes = SpyBeanOnTestFieldForExistingBeanConfig.class), +++ b/spring-boot/src/main/java/org/springframework/boot/orm/jpa/hibernate/SpringPhysicalNamingStrategy.java, +			if (isUnderscoreRequired(text.charAt(i - 1), text.charAt(i), text.charAt(i + 1))) {, +	private boolean isUnderscoreRequired(char before, char current, char after) {]