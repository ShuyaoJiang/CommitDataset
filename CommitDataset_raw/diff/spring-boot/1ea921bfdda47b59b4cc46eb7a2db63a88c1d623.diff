[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +import org.springframework.boot.context.properties.PropertyMapper;, +		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull();, +		map.from(properties::getClientId).to(builder::clientId);, +		map.from(properties::getClientSecret).to(builder::clientSecret);, +		map.from(properties::getClientAuthenticationMethod), +				.as(ClientAuthenticationMethod::new), +				.to(builder::clientAuthenticationMethod);, +		map.from(properties::getAuthorizationGrantType).as(AuthorizationGrantType::new), +				.to(builder::authorizationGrantType);, +		map.from(properties::getRedirectUriTemplate).to(builder::redirectUriTemplate);, +		map.from(properties::getScope), +				.as((scope) -> scope.toArray(new String[scope.size()])), +				.to(builder::scope);, +		map.from(properties::getClientName).to(builder::clientName);, +		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull();, +		map.from(provider::getAuthorizationUri).to(builder::authorizationUri);, +		map.from(provider::getTokenUri).to(builder::tokenUri);, +		map.from(provider::getUserInfoUri).to(builder::userInfoUri);, +		map.from(provider::getJwkSetUri).to(builder::jwkSetUri);, +		map.from(provider::getUserNameAttribute).to(builder::userNameAttributeName);]