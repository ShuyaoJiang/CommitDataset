[+++ b/spring-bootstrap-actuator/README.md, +    $ curl localhost:8080/health, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +    $ curl localhost:9001/health, +++ b/spring-bootstrap-actuator/README.md, +    $ curl localhost:8080/health, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +    $ curl localhost:9001/health, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/HealthConfiguration.java, +	public HealthEndpoint<? extends Object> healthEndpoint() {, +++ b/spring-bootstrap-actuator/README.md, +    $ curl localhost:8080/health, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +    $ curl localhost:9001/health, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/HealthConfiguration.java, +	public HealthEndpoint<? extends Object> healthEndpoint() {, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/MetricsConfiguration.java, +import org.springframework.bootstrap.actuate.endpoint.metrics.MetricsEndpoint;, + * {@link EnableAutoConfiguration Auto-configuration} for /metrics endpoint., +++ b/spring-bootstrap-actuator/README.md, +    $ curl localhost:8080/health, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +    $ curl localhost:9001/health, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/HealthConfiguration.java, +	public HealthEndpoint<? extends Object> healthEndpoint() {, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/MetricsConfiguration.java, +import org.springframework.bootstrap.actuate.endpoint.metrics.MetricsEndpoint;, + * {@link EnableAutoConfiguration Auto-configuration} for /metrics endpoint., +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/SecurityConfiguration.java, +		@Value("${endpoints.health.path:/health}"), +		private String healthPath = "/health";, +			builder.ignoring().antMatchers(this.healthPath, this.infoPath);, +++ b/spring-bootstrap-actuator/README.md, +    $ curl localhost:8080/health, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +    $ curl localhost:9001/health, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/HealthConfiguration.java, +	public HealthEndpoint<? extends Object> healthEndpoint() {, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/MetricsConfiguration.java, +import org.springframework.bootstrap.actuate.endpoint.metrics.MetricsEndpoint;, + * {@link EnableAutoConfiguration Auto-configuration} for /metrics endpoint., +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/SecurityConfiguration.java, +		@Value("${endpoints.health.path:/health}"), +		private String healthPath = "/health";, +			builder.ignoring().antMatchers(this.healthPath, this.infoPath);, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/endpoint/health/HealthEndpoint.java, +	@RequestMapping("${endpoints.health.path:/health}"), +	public T health() {, +++ b/spring-bootstrap-actuator/README.md, +    $ curl localhost:8080/health, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +    $ curl localhost:9001/health, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/HealthConfiguration.java, +	public HealthEndpoint<? extends Object> healthEndpoint() {, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/MetricsConfiguration.java, +import org.springframework.bootstrap.actuate.endpoint.metrics.MetricsEndpoint;, + * {@link EnableAutoConfiguration Auto-configuration} for /metrics endpoint., +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/SecurityConfiguration.java, +		@Value("${endpoints.health.path:/health}"), +		private String healthPath = "/health";, +			builder.ignoring().antMatchers(this.healthPath, this.infoPath);, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/endpoint/health/HealthEndpoint.java, +	@RequestMapping("${endpoints.health.path:/health}"), +	public T health() {, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/endpoint/metrics/MetricsEndpoint.java, +	@RequestMapping("${endpoints.metrics.path:/metrics}"), +	public Map<String, Object> metrics() {, +++ b/spring-bootstrap-actuator/README.md, +    $ curl localhost:8080/health, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +    $ curl localhost:9001/health, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/HealthConfiguration.java, +	public HealthEndpoint<? extends Object> healthEndpoint() {, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/MetricsConfiguration.java, +import org.springframework.bootstrap.actuate.endpoint.metrics.MetricsEndpoint;, + * {@link EnableAutoConfiguration Auto-configuration} for /metrics endpoint., +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/SecurityConfiguration.java, +		@Value("${endpoints.health.path:/health}"), +		private String healthPath = "/health";]