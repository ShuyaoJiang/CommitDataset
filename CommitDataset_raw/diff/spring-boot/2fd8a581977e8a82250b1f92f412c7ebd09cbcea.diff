[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration.java, +	private void setPortProperty(ApplicationContext currentContext, int port) {, +		if (currentContext instanceof ConfigurableApplicationContext) {, +			ConfigurableEnvironment environment = ((ConfigurableApplicationContext) currentContext), +		if (currentContext.getParent() != null) {, +			setPortProperty(currentContext.getParent(), port);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfiguration.java, +	private void setPortProperty(ApplicationContext currentContext, int port) {, +		if (currentContext instanceof ConfigurableApplicationContext) {, +			ConfigurableEnvironment environment = ((ConfigurableApplicationContext) currentContext), +		if (currentContext.getParent() != null) {, +			setPortProperty(currentContext.getParent(), port);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mongo/embedded/EmbeddedMongoAutoConfigurationTests.java, +import org.springframework.context.ConfigurableApplicationContext;, +import static org.hamcrest.Matchers.is;, +import static org.hamcrest.Matchers.notNullValue;, +	@Test, +	public void portIsAvailableInParentContext() {, +		ConfigurableApplicationContext parent = new AnnotationConfigApplicationContext();, +		parent.refresh();, +		try {, +			this.context = new AnnotationConfigApplicationContext();, +			this.context.setParent(parent);, +			EnvironmentTestUtils.addEnvironment(this.context,, +					"spring.data.mongodb.port=0");, +			this.context.register(EmbeddedMongoAutoConfiguration.class,, +					MongoClientConfiguration.class,, +					PropertyPlaceholderAutoConfiguration.class);, +			this.context.refresh();, +			assertThat(parent.getEnvironment().getProperty("local.mongo.port"),, +					is(notNullValue()));, +		}, +		finally {, +			parent.close();, +		}, +	}, +]