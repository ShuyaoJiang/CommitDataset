[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +The printed banner will be registered as a singleton bean under the name, +`springBootBanner`., +, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +The printed banner will be registered as a singleton bean under the name, +`springBootBanner`., +, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Michael Simons, +	private boolean printedCustomBannerViaDeprecatedMethod;, +, +			Banner printedBanner = printBanner(environment);, +			prepareContext(context, environment, listeners, applicationArguments,, +					printedBanner);, +			ApplicationArguments applicationArguments, Banner printedBanner) {, +		if (printedBanner != null) {, +			context.getBeanFactory().registerSingleton("springBootBanner", printedBanner);, +		}, +	private Banner printBanner(ConfigurableEnvironment environment) {, +		if (printBannerViaDeprecatedMethod(environment)) {, +			return null;, +		}, +		if (this.bannerMode == Banner.Mode.OFF) {, +			return null;, +		}, +		ResourceLoader resourceLoader = this.resourceLoader != null ? this.resourceLoader, +				: new DefaultResourceLoader(getClassLoader());, +		SpringApplicationBannerPrinter bannerPrinter = new SpringApplicationBannerPrinter(, +				resourceLoader, this.banner);, +		if (this.bannerMode == Mode.LOG) {, +			return bannerPrinter.print(environment, this.mainApplicationClass, logger);, +		}, +		return bannerPrinter.print(environment, this.mainApplicationClass, System.out);, +	}, +, +	private boolean printBannerViaDeprecatedMethod(Environment environment) {, +		this.printedCustomBannerViaDeprecatedMethod = true;, +		printBanner(environment);, +		return this.printedCustomBannerViaDeprecatedMethod;, +	}, +, +	 * @deprecated as of 1.4 in favor of @{@link #setBanner(Banner)}, +	@Deprecated, +		this.printedCustomBannerViaDeprecatedMethod = false;, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +The printed banner will be registered as a singleton bean under the name, +`springBootBanner`., +, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Michael Simons, +	private boolean printedCustomBannerViaDeprecatedMethod;, +, +			Banner printedBanner = printBanner(environment);, +			prepareContext(context, environment, listeners, applicationArguments,, +					printedBanner);, +			ApplicationArguments applicationArguments, Banner printedBanner) {, +		if (printedBanner != null) {, +			context.getBeanFactory().registerSingleton("springBootBanner", printedBanner);, +		}, +	private Banner printBanner(ConfigurableEnvironment environment) {, +		if (printBannerViaDeprecatedMethod(environment)) {, +			return null;, +		}, +		if (this.bannerMode == Banner.Mode.OFF) {, +			return null;, +		}, +		ResourceLoader resourceLoader = this.resourceLoader != null ? this.resourceLoader, +				: new DefaultResourceLoader(getClassLoader());, +		SpringApplicationBannerPrinter bannerPrinter = new SpringApplicationBannerPrinter(, +				resourceLoader, this.banner);, +		if (this.bannerMode == Mode.LOG) {, +			return bannerPrinter.print(environment, this.mainApplicationClass, logger);, +		}, +		return bannerPrinter.print(environment, this.mainApplicationClass, System.out);, +	}, +, +	private boolean printBannerViaDeprecatedMethod(Environment environment) {, +		this.printedCustomBannerViaDeprecatedMethod = true;, +		printBanner(environment);, +		return this.printedCustomBannerViaDeprecatedMethod;, +	}, +, +	 * @deprecated as of 1.4 in favor of @{@link #setBanner(Banner)}, +	@Deprecated, +		this.printedCustomBannerViaDeprecatedMethod = false;, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java, +	public Banner print(Environment environment, Class<?> sourceClass, Log logger) {, +		return banner;, +	public Banner print(Environment environment, Class<?> sourceClass, PrintStream out) {, +		return banner;, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +The printed banner will be registered as a singleton bean under the name, +`springBootBanner`., +, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Michael Simons, +	private boolean printedCustomBannerViaDeprecatedMethod;, +, +			Banner printedBanner = printBanner(environment);]