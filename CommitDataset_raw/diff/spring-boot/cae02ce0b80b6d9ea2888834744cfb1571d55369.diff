[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +	public WebMvcMetricsFilter webMetricsFilter(ApplicationContext context) {, +		return new WebMvcMetricsFilter(context);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +	public WebMvcMetricsFilter webMetricsFilter(ApplicationContext context) {, +		return new WebMvcMetricsFilter(context);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +	private final ApplicationContext context;, +	private volatile WebMvcMetrics webMvcMetrics;, +	private volatile HandlerMappingIntrospector mappingIntrospector;, +, +	public WebMvcMetricsFilter(ApplicationContext context) {, +		this.context = context;, +			MatchableHandlerMapping matchableHandlerMapping = getMappingIntrospector(), +		WebMvcMetrics metrics = getWebMvcMetrics();, +		metrics.preHandle(request, handler);, +				metrics.record(request, response, null);, +			metrics.record(request, response, ex.getCause());, +	private HandlerMappingIntrospector getMappingIntrospector() {, +		if (this.mappingIntrospector == null) {, +			this.mappingIntrospector = this.context, +					.getBean(HandlerMappingIntrospector.class);, +		}, +		return this.mappingIntrospector;, +	}, +, +	private WebMvcMetrics getWebMvcMetrics() {, +		if (this.webMvcMetrics == null) {, +			this.webMvcMetrics = this.context.getBean(WebMvcMetrics.class);, +		}, +		return this.webMvcMetrics;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +	public WebMvcMetricsFilter webMetricsFilter(ApplicationContext context) {, +		return new WebMvcMetricsFilter(context);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +	private final ApplicationContext context;, +	private volatile WebMvcMetrics webMvcMetrics;, +	private volatile HandlerMappingIntrospector mappingIntrospector;, +, +	public WebMvcMetricsFilter(ApplicationContext context) {, +		this.context = context;, +			MatchableHandlerMapping matchableHandlerMapping = getMappingIntrospector(), +		WebMvcMetrics metrics = getWebMvcMetrics();, +		metrics.preHandle(request, handler);, +				metrics.record(request, response, null);, +			metrics.record(request, response, ex.getCause());, +	private HandlerMappingIntrospector getMappingIntrospector() {, +		if (this.mappingIntrospector == null) {, +			this.mappingIntrospector = this.context, +					.getBean(HandlerMappingIntrospector.class);, +		}, +		return this.mappingIntrospector;, +	}, +, +	private WebMvcMetrics getWebMvcMetrics() {, +		if (this.webMvcMetrics == null) {, +			this.webMvcMetrics = this.context.getBean(WebMvcMetrics.class);, +		}, +		return this.webMvcMetrics;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterAutoTimedTests.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +		public WebMvcMetricsFilter webMetricsFilter(ApplicationContext context) {, +			return new WebMvcMetricsFilter(context);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsConfiguration.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +	public WebMvcMetricsFilter webMetricsFilter(ApplicationContext context) {, +		return new WebMvcMetricsFilter(context);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.context.ApplicationContext;, +	private final ApplicationContext context;, +	private volatile WebMvcMetrics webMvcMetrics;, +	private volatile HandlerMappingIntrospector mappingIntrospector;, +, +	public WebMvcMetricsFilter(ApplicationContext context) {, +		this.context = context;, +			MatchableHandlerMapping matchableHandlerMapping = getMappingIntrospector(), +		WebMvcMetrics metrics = getWebMvcMetrics();, +		metrics.preHandle(request, handler);, +				metrics.record(request, response, null);, +			metrics.record(request, response, ex.getCause());, +	private HandlerMappingIntrospector getMappingIntrospector() {, +		if (this.mappingIntrospector == null) {, +			this.mappingIntrospector = this.context]