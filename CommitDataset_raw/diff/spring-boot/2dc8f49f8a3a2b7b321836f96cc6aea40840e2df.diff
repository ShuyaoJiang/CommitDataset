[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedContext.java, +		doWithThreadContextClassLoader(getLoader().getClassLoader(),, +				() -> getLoadOnStartupWrappers(findChildren()).forEach(this::load));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedContext.java, +		doWithThreadContextClassLoader(getLoader().getClassLoader(),, +				() -> getLoadOnStartupWrappers(findChildren()).forEach(this::load));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedContext.java, +		doWithThreadContextClassLoader(getLoader().getClassLoader(),, +				() -> getLoadOnStartupWrappers(findChildren()).forEach(this::load));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedContext.java, +		doWithThreadContextClassLoader(getLoader().getClassLoader(),, +				() -> getLoadOnStartupWrappers(findChildren()).forEach(this::load));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/WebServiceTemplateCustomizer.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedContext.java, +		doWithThreadContextClassLoader(getLoader().getClassLoader(),, +				() -> getLoadOnStartupWrappers(findChildren()).forEach(this::load));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/WebServiceTemplateCustomizer.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrarTests.java, +				.isThrownBy(() -> this.context = new AnnotationConfigApplicationContext(, +						ValueAndBasePackages.class)), +				.withMessageContaining("'value'").withMessageContaining("'basePackages'"), +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedContext.java, +		doWithThreadContextClassLoader(getLoader().getClassLoader(),, +				() -> getLoadOnStartupWrappers(findChildren()).forEach(this::load));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletRegistrationBean.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/WebServiceTemplateCustomizer.java, +@FunctionalInterface, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrarTests.java, +				.isThrownBy(() -> this.context = new AnnotationConfigApplicationContext(, +						ValueAndBasePackages.class)), +				.withMessageContaining("'value'").withMessageContaining("'basePackages'"), +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java, +		this.webServer = factory.getWebServer((context) -> context, +				.addServlet("failing", FailingServlet.class).setLoadOnStartup(0));]