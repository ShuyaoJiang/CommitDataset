[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			rabbitTemplate.setExchange(templateProperties.getExchange());, +			rabbitTemplate.setRoutingKey(templateProperties.getRoutingKey());, +			rabbitTemplate.setChannelTransacted(templateProperties.isChannelTransacted());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			rabbitTemplate.setExchange(templateProperties.getExchange());, +			rabbitTemplate.setRoutingKey(templateProperties.getRoutingKey());, +			rabbitTemplate.setChannelTransacted(templateProperties.isChannelTransacted());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		/**, +		 * Name of the default exchange to use for send operations., +		 */, +		private String exchange = "";, +, +		/**, +		 * Value of a default routing key to use for send operations., +		 */, +		private String routingKey = "";, +, +		/**, +		 * Enable transactional channels., +		 */, +		private boolean channelTransacted;, +, +		public String getExchange() {, +			return this.exchange;, +		}, +, +		public void setExchange(String exchange) {, +			this.exchange = exchange;, +		}, +, +		public String getRoutingKey() {, +			return this.routingKey;, +		}, +, +		public void setRoutingKey(String routingKey) {, +			this.routingKey = routingKey;, +		}, +, +		public boolean isChannelTransacted() {, +			return this.channelTransacted;, +		}, +, +		public void setChannelTransacted(boolean channelTransacted) {, +			this.channelTransacted = channelTransacted;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfiguration.java, +			rabbitTemplate.setExchange(templateProperties.getExchange());, +			rabbitTemplate.setRoutingKey(templateProperties.getRoutingKey());, +			rabbitTemplate.setChannelTransacted(templateProperties.isChannelTransacted());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		/**, +		 * Name of the default exchange to use for send operations., +		 */, +		private String exchange = "";, +, +		/**, +		 * Value of a default routing key to use for send operations., +		 */, +		private String routingKey = "";, +, +		/**, +		 * Enable transactional channels., +		 */, +		private boolean channelTransacted;, +, +		public String getExchange() {, +			return this.exchange;, +		}, +, +		public void setExchange(String exchange) {, +			this.exchange = exchange;, +		}, +, +		public String getRoutingKey() {, +			return this.routingKey;, +		}, +, +		public void setRoutingKey(String routingKey) {, +			this.routingKey = routingKey;, +		}, +, +		public boolean isChannelTransacted() {, +			return this.channelTransacted;, +		}, +, +		public void setChannelTransacted(boolean channelTransacted) {, +			this.channelTransacted = channelTransacted;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +	public void testDefaultRabbitTemplateConfiguration() {, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.run((context) -> {, +					RabbitTemplate rabbitTemplate = context.getBean(RabbitTemplate.class);, +					RabbitTemplate defaultRabbitTemplate = new RabbitTemplate();, +					assertThat(rabbitTemplate.getRoutingKey()), +							.isEqualTo(defaultRabbitTemplate.getRoutingKey());]