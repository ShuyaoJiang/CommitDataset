[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnManagementPort.java, + *, + * @since 2.0.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnManagementPort.java, + *, + * @since 2.0.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EnableManagementContext.java, +	/**, +	 * The management context type that should be enabled., +	 * @return the management context type, +	 */, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnManagementPort.java, + *, + * @since 2.0.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EnableManagementContext.java, +	/**, +	 * The management context type that should be enabled., +	 * @return the management context type, +	 */, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextAutoConfiguration.java, +import org.springframework.util.Assert;, +				ManagementServerProperties properties) {, +			Boolean enabled = this.environment.getProperty("management.ssl.enabled",, +					Boolean.class, false);, +			Assert.state(!enabled,, +, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnManagementPort.java, + *, + * @since 2.0.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EnableManagementContext.java, +	/**, +	 * The management context type that should be enabled., +	 * @return the management context type, +	 */, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextAutoConfiguration.java, +import org.springframework.util.Assert;, +				ManagementServerProperties properties) {, +			Boolean enabled = this.environment.getProperty("management.ssl.enabled",, +					Boolean.class, false);, +			Assert.state(!enabled,, +, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextConfigurationImportSelector.java, +			return (annotationAttributes == null ? ManagementContextType.ANY, +					: (ManagementContextType) annotationAttributes.get("value"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnManagementPort.java, + *, + * @since 2.0.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EnableManagementContext.java, +	/**, +	 * The management context type that should be enabled., +	 * @return the management context type, +	 */, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextAutoConfiguration.java, +import org.springframework.util.Assert;, +				ManagementServerProperties properties) {, +			Boolean enabled = this.environment.getProperty("management.ssl.enabled",, +					Boolean.class, false);, +			Assert.state(!enabled,, +, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextConfigurationImportSelector.java, +			return (annotationAttributes == null ? ManagementContextType.ANY, +					: (ManagementContextType) annotationAttributes.get("value"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextFactory.java, +	/**, +	 * Create the management application context., +	 * @param parent the parent context, +	 * @param configurationClasses the configuration classes, +	 * @return a configured application context, +	 */, +			Class<?>... configurationClasses);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnManagementPort.java, + *, + * @since 2.0.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EnableManagementContext.java, +	/**, +	 * The management context type that should be enabled., +	 * @return the management context type, +	 */, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextAutoConfiguration.java, +import org.springframework.util.Assert;, +				ManagementServerProperties properties) {, +			Boolean enabled = this.environment.getProperty("management.ssl.enabled",, +					Boolean.class, false);, +			Assert.state(!enabled,, +, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextConfigurationImportSelector.java, +			return (annotationAttributes == null ? ManagementContextType.ANY, +					: (ManagementContextType) annotationAttributes.get("value"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementContextFactory.java, +	/**, +	 * Create the management application context., +	 * @param parent the parent context, +	 * @param configurationClasses the configuration classes, +	 * @return a configured application context, +	 */, +			Class<?>... configurationClasses);]