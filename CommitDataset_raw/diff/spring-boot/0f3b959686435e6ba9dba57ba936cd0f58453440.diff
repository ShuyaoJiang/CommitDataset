[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateLocation;, +import org.springframework.context.ApplicationContext;, +	private ApplicationContext applicationContext;, +			TemplateLocation templatePathLocation = null;, +			List<TemplateLocation> locations = new ArrayList<TemplateLocation>();, +				TemplateLocation location = new TemplateLocation(templateLoaderPath);, +				locations.add(location);, +				if (location.exists(this.applicationContext)) {, +					templatePathLocation = location;, +			Assert.notNull(templatePathLocation, "Cannot find template location(s): ", +					+ locations + " (please add some templates, ", +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateLocation;, +import org.springframework.context.ApplicationContext;, +	private ApplicationContext applicationContext;, +			TemplateLocation templatePathLocation = null;, +			List<TemplateLocation> locations = new ArrayList<TemplateLocation>();, +				TemplateLocation location = new TemplateLocation(templateLoaderPath);, +				locations.add(location);, +				if (location.exists(this.applicationContext)) {, +					templatePathLocation = location;, +			Assert.notNull(templatePathLocation, "Cannot find template location(s): ", +					+ locations + " (please add some templates, ", +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateLocation;, +import org.springframework.context.ApplicationContext;, +		private ApplicationContext applicationContext;, +				TemplateLocation location = new TemplateLocation(, +						this.properties.getPrefix());, +				Assert.state(location.exists(this.applicationContext),, +						"Cannot find template location: " + location, +								+ " (please add some templates, check your Groovy ", +								+ "configuration, or set spring.groovy.template.", +								+ "check-template-location=false)");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateLocation;, +import org.springframework.context.ApplicationContext;, +	private ApplicationContext applicationContext;, +			TemplateLocation templatePathLocation = null;, +			List<TemplateLocation> locations = new ArrayList<TemplateLocation>();, +				TemplateLocation location = new TemplateLocation(templateLoaderPath);, +				locations.add(location);, +				if (location.exists(this.applicationContext)) {, +					templatePathLocation = location;, +			Assert.notNull(templatePathLocation, "Cannot find template location(s): ", +					+ locations + " (please add some templates, ", +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateLocation;, +import org.springframework.context.ApplicationContext;, +		private ApplicationContext applicationContext;, +				TemplateLocation location = new TemplateLocation(, +						this.properties.getPrefix());, +				Assert.state(location.exists(this.applicationContext),, +						"Cannot find template location: " + location, +								+ " (please add some templates, check your Groovy ", +								+ "configuration, or set spring.groovy.template.", +								+ "check-template-location=false)");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/template/TemplateLocation.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.template;, +, +import java.io.IOException;, +, +import org.springframework.core.io.Resource;, +import org.springframework.core.io.ResourceLoader;, +import org.springframework.core.io.support.ResourcePatternResolver;, +import org.springframework.util.Assert;, +, +/**, + * Contains a location that templates can be loaded from., + *, + * @author Phillip Webb, + * @since 1.2.1, + */, +public class TemplateLocation {, +, +	private final String path;, +, +	public TemplateLocation(String path) {, +		Assert.notNull(path, "Path must not be null");, +		this.path = path;, +	}, +, +	/**]