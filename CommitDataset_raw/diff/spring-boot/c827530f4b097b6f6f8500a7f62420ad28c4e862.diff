[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, + * @author MyeongHyeon Lee, +		 * User info authentication method for the provider., +		 */, +		private String userInfoAuthenticationMethod;, +, +		/**, +		public String getUserInfoAuthenticationMethod() {, +			return this.userInfoAuthenticationMethod;, +		}, +, +		public void setUserInfoAuthenticationMethod(String userInfoAuthenticationMethod) {, +			this.userInfoAuthenticationMethod = userInfoAuthenticationMethod;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, + * @author MyeongHyeon Lee, +		 * User info authentication method for the provider., +		 */, +		private String userInfoAuthenticationMethod;, +, +		/**, +		public String getUserInfoAuthenticationMethod() {, +			return this.userInfoAuthenticationMethod;, +		}, +, +		public void setUserInfoAuthenticationMethod(String userInfoAuthenticationMethod) {, +			this.userInfoAuthenticationMethod = userInfoAuthenticationMethod;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +import org.springframework.security.oauth2.core.AuthenticationMethod;, + * @author MyeongHyeon Lee, +		map.from(provider::getUserInfoAuthenticationMethod).as(AuthenticationMethod::new), +				.to(builder::userInfoAuthenticationMethod);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, + * @author MyeongHyeon Lee, +		 * User info authentication method for the provider., +		 */, +		private String userInfoAuthenticationMethod;, +, +		/**, +		public String getUserInfoAuthenticationMethod() {, +			return this.userInfoAuthenticationMethod;, +		}, +, +		public void setUserInfoAuthenticationMethod(String userInfoAuthenticationMethod) {, +			this.userInfoAuthenticationMethod = userInfoAuthenticationMethod;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +import org.springframework.security.oauth2.core.AuthenticationMethod;, + * @author MyeongHyeon Lee, +		map.from(provider::getUserInfoAuthenticationMethod).as(AuthenticationMethod::new), +				.to(builder::userInfoAuthenticationMethod);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java, +		provider.setUserInfoAuthenticationMethod("form");, +		assertThat(adaptedProvider.getUserInfoEndpoint().getAuthenticationMethod()), +				.isEqualTo(, +						org.springframework.security.oauth2.core.AuthenticationMethod.FORM);, +		assertThat(adaptedProvider.getUserInfoEndpoint().getAuthenticationMethod()), +				.isEqualTo(, +						org.springframework.security.oauth2.core.AuthenticationMethod.HEADER);, +		assertThat(adaptedProvider.getUserInfoEndpoint().getAuthenticationMethod()), +				.isEqualTo(, +						org.springframework.security.oauth2.core.AuthenticationMethod.HEADER);, +		assertThat(providerDetails.getUserInfoEndpoint().getAuthenticationMethod()), +				.isEqualTo(, +						org.springframework.security.oauth2.core.AuthenticationMethod.HEADER);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, + * @author MyeongHyeon Lee, +		 * User info authentication method for the provider., +		 */, +		private String userInfoAuthenticationMethod;, +, +		/**, +		public String getUserInfoAuthenticationMethod() {, +			return this.userInfoAuthenticationMethod;, +		}, +, +		public void setUserInfoAuthenticationMethod(String userInfoAuthenticationMethod) {, +			this.userInfoAuthenticationMethod = userInfoAuthenticationMethod;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +import org.springframework.security.oauth2.core.AuthenticationMethod;, + * @author MyeongHyeon Lee, +		map.from(provider::getUserInfoAuthenticationMethod).as(AuthenticationMethod::new), +				.to(builder::userInfoAuthenticationMethod);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java, +		provider.setUserInfoAuthenticationMethod("form");, +		assertThat(adaptedProvider.getUserInfoEndpoint().getAuthenticationMethod()), +				.isEqualTo(, +						org.springframework.security.oauth2.core.AuthenticationMethod.FORM);, +		assertThat(adaptedProvider.getUserInfoEndpoint().getAuthenticationMethod()), +				.isEqualTo(, +						org.springframework.security.oauth2.core.AuthenticationMethod.HEADER);, +		assertThat(adaptedProvider.getUserInfoEndpoint().getAuthenticationMethod()), +				.isEqualTo(, +						org.springframework.security.oauth2.core.AuthenticationMethod.HEADER);]