[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +								+ " with context path '" + getContextPath() + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +								+ " with context path '" + getContextPath() + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatWebServer.java, +								+ " with context path '" + getContextPath() + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +								+ " with context path '" + getContextPath() + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatWebServer.java, +								+ " with context path '" + getContextPath() + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServer.java, +								+ " with context path '" + this.contextPath + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +								+ " with context path '" + getContextPath() + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatWebServer.java, +								+ " with context path '" + getContextPath() + "'");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServer.java, +								+ " with context path '" + this.contextPath + "'");, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactoryTests.java, +	public void contextPathIsLoggedOnStartup() {, +		AbstractServletWebServerFactory factory = getFactory();, +		factory.setContextPath("/custom");, +		this.webServer = factory.getWebServer(exampleServletRegistration());, +		this.webServer.start();, +		assertThat(this.output.toString()).containsOnlyOnce("with context path '/custom'");, +	}, +, +	@Test]