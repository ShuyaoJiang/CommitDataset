[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +	public void runWhenEnabledPropertyIsFalseShouldNotHaveEndpoint() {, +						.doesNotHaveBean(AuditEventsEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +	public void runWhenEnabledPropertyIsFalseShouldNotHaveEndpoint() {, +						.doesNotHaveBean(AuditEventsEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, +	public void allAuditEvents() throws Exception {, +				.andDo(document("auditevents/all", responseFields(, +												+ "after the given time. Optional."),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +	public void runWhenEnabledPropertyIsFalseShouldNotHaveEndpoint() {, +						.doesNotHaveBean(AuditEventsEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, +	public void allAuditEvents() throws Exception {, +				.andDo(document("auditevents/all", responseFields(, +												+ "after the given time. Optional."),, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsEndpoint.java, +import org.springframework.lang.Nullable;, +	public AuditEventsDescriptor events(@Nullable String principal,, +			@Nullable OffsetDateTime after, @Nullable String type) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +	public void runWhenEnabledPropertyIsFalseShouldNotHaveEndpoint() {, +						.doesNotHaveBean(AuditEventsEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, +	public void allAuditEvents() throws Exception {, +				.andDo(document("auditevents/all", responseFields(, +												+ "after the given time. Optional."),, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsEndpoint.java, +import org.springframework.lang.Nullable;, +	public AuditEventsDescriptor events(@Nullable String principal,, +			@Nullable OffsetDateTime after, @Nullable String type) {, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +	public void runWhenEnabledPropertyIsFalseShouldNotHaveEndpoint() {, +						.doesNotHaveBean(AuditEventsEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, +	public void allAuditEvents() throws Exception {, +				.andDo(document("auditevents/all", responseFields(, +												+ "after the given time. Optional."),, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsEndpoint.java, +import org.springframework.lang.Nullable;, +	public AuditEventsDescriptor events(@Nullable String principal,, +			@Nullable OffsetDateTime after, @Nullable String type) {, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/asciidoc/endpoints/auditevents.adoc, +include::{snippets}auditevents/all/response-fields.adoc[], +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +	public void runWhenEnabledPropertyIsFalseShouldNotHaveEndpoint() {, +						.doesNotHaveBean(AuditEventsEndpoint.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/documentation/AuditEventsEndpointDocumentationTests.java, +	public void allAuditEvents() throws Exception {, +				.andDo(document("auditevents/all", responseFields(, +												+ "after the given time. Optional."),, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsEndpoint.java, +import org.springframework.lang.Nullable;, +	public AuditEventsDescriptor events(@Nullable String principal,, +			@Nullable OffsetDateTime after, @Nullable String type) {, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/audit/AuditEventsEndpointWebIntegrationTests.java, +	public void allEvents() {, +				.exchange().expectStatus().isOk().expectBody(), +				.jsonPath("events.[*].principal"), +				.isEqualTo(new JSONArray().appendElement("admin").appendElement("admin")]