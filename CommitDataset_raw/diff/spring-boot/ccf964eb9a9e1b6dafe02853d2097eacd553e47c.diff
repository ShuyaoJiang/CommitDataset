[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/OnEnabledResourceChainCondition.java, + * Copyright 2012-2017 the original author or authors., +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.core.env.PropertyResolver;, + * @author Phillip Webb, +		boolean fixed = getEnabledProperty(environment, "strategy.fixed.", false);, +		boolean content = getEnabledProperty(environment, "strategy.content.", false);, +		Boolean chain = getEnabledProperty(environment, "", null);, +		Boolean match = ResourceProperties.Chain.getEnabled(fixed, content, chain);, +	private Boolean getEnabledProperty(ConfigurableEnvironment environment, String key,, +			Boolean defaultValue) {, +		PropertyResolver resolver = new RelaxedPropertyResolver(environment,, +				"spring.resources.chain." + key);, +		return resolver.getProperty("enabled", Boolean.class, defaultValue);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/OnEnabledResourceChainCondition.java, + * Copyright 2012-2017 the original author or authors., +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.core.env.PropertyResolver;, + * @author Phillip Webb, +		boolean fixed = getEnabledProperty(environment, "strategy.fixed.", false);, +		boolean content = getEnabledProperty(environment, "strategy.content.", false);, +		Boolean chain = getEnabledProperty(environment, "", null);, +		Boolean match = ResourceProperties.Chain.getEnabled(fixed, content, chain);, +	private Boolean getEnabledProperty(ConfigurableEnvironment environment, String key,, +			Boolean defaultValue) {, +		PropertyResolver resolver = new RelaxedPropertyResolver(environment,, +				"spring.resources.chain." + key);, +		return resolver.getProperty("enabled", Boolean.class, defaultValue);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, + * Copyright 2012-2017 the original author or authors., +			return getEnabled(getStrategy().getFixed().isEnabled(),, +					getStrategy().getContent().isEnabled(), this.enabled);, +		static Boolean getEnabled(boolean fixedEnabled, boolean contentEnabled,, +				Boolean chainEnabled) {, +			return (fixedEnabled || contentEnabled ? Boolean.TRUE : chainEnabled);, +		}, +]