[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +Various properties can be specified inside your `application.properties` file, inside, +your  `application.yml` file, or as command line switches. This appendix provides a list, +of common Spring Boot properties and references to the underlying classes that consume, +them., +NOTE: Property contributions can come from additional jar files on your classpath, so you, +should not consider this an exhaustive list. Also, you can define your own properties., +WARNING: This sample file is meant as a guide only. Do **not** copy and paste the entire, +content into your application. Rather, pick only the properties that you need., +	banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used)., +	banner.image.invert= # Whether images should be inverted for dark terminal themes (default false), +	logging.config= # Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback, +	logging.file= # Log file name. For instance, `myapp.log`, +	logging.level.*= # Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`, +	logging.path= # Location of the log file. For instance, `/var/log`, +	logging.pattern.console= # Appender pattern for output to the console. Supported only with the default Logback setup., +	logging.pattern.file= # Appender pattern for output to a file. Supported only with the default Logback setup., +	logging.pattern.level= # Appender pattern for log level (default: %5p). Supported only with the default Logback setup., +	spring.aop.proxy-target-class=true # Whether subclass-based (CGLIB) proxies are to be created (true), as opposed to standard Java interface-based proxies (false)., +	spring.application.admin.enabled=false # Whether to enable admin features for the application., +	spring.beaninfo.ignore=true # Whether to skip search of BeanInfo classes., +	spring.cache.caffeine.spec= # The spec to use to create caches. See CaffeineSpec for more details on the spec format., +	spring.cache.couchbase.expiration=0ms # Entry expiration in milliseconds. By default, the entries never expire., +	spring.cache.jcache.provider= # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Needed only if more than one JSR-107 implementation is available on the classpath., +	spring.cache.type= # Cache type. By default, auto-detected according to the environment., +	spring.mail.host= # SMTP server host. For instance, `smtp.example.com`, +	spring.mail.jndi-name= # Session JNDI name. When set, takes precedence over other mail settings., +	spring.mail.test-connection=false # Whether to test that the mail server is available on startup., +	spring.main.sources= # Sources (class names, package names, or XML resource locations) to include in the ApplicationContext., +	spring.main.web-application-type= # Flag to explicitly request a specific type of web application. If not set, auto-detected based on the classpath., +	# INTERNATIONALIZATION ({sc-spring-boot-autoconfigure}/context/MessageSourceProperties.{sc-ext}[MessageSourceProperties]), +	spring.messages.always-use-message-format=false # Whether to always apply the MessageFormat rules, parsing even messages without arguments., +	spring.messages.fallback-to-system-locale=true # Whether to fall back to the system Locale if no files for a specific Locale have been found., +	spring.messages.use-code-as-default-message=false # Whether to use the message code as the default message instead of throwing a "NoSuchMessageException". Recommended during development only., +	spring.output.ansi.enabled=detect # Configures the ANSI output., +	spring.pid.fail-on-write-error= # Fails if ApplicationPidFileWriter is used but it cannot write the PID file., +	spring.profiles.include= # Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML)., +	# REACTOR ({sc-spring-boot-autoconfigure}/reactor/core/ReactorCoreProperties.{sc-ext}[ReactorCoreProperties]), +	spring.reactor.stacktrace-mode.enabled=false # Whether Reactor should collect stacktrace information at runtime., +	server.address= # Network address to which the server should bind., +	server.compression.enabled=false # Whether response compression is enabled., +	server.connection-timeout= # Time that connectors wait for another HTTP request before closing the connection. When not set, the connector's container-specific default is used. Use a value of -1 to indicate no (that is, an infinite) timeout., +	server.max-http-header-size=0 # Maximum size, in bytes, of the HTTP message header., +	server.jetty.accesslog.filename= # Log filename. If not specified, logs redirect to "System.err"., +	server.jetty.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post or put content., +	server.server-header= # Value to use for the Server response header (if empty, no header is sent), +	server.use-forward-headers= # Whether X-Forwarded-* headers should be applied to the HttpRequest., +	server.servlet.jsp.init-parameters.*= # Init parameters used to configure the JSP servlet., +	server.servlet.jsp.registered=true # Whether the JSP servlet is registered., +	server.session.persistent=false # Whether to persist session data between restarts., +	server.tomcat.accesslog.buffered=true # Whether to buffer output such that it is flushed only periodically., +	server.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be absolute or relative to the Tomcat base dir., +	server.tomcat.accesslog.file-date-format=.yyyy-MM-dd # Date format to place in the log file name., +	server.tomcat.accesslog.rename-on-rotate=false # Whether to defer inclusion of the date stamp in the file name until rotate time., +	server.tomcat.accesslog.request-attributes-enabled=false # Set request attributes for the IP address, Hostname, protocol, and port used for the request., +	server.tomcat.accesslog.rotate=true # Whether to enable access log rotation., +	server.tomcat.basedir= # Tomcat base directory. If not specified, a temporary directory is used., +	server.tomcat.max-connections= # Maximum number of connections that the server accepts and processes at any given time., +	server.tomcat.max-http-header-size=0 # Maximum size, in bytes, of the HTTP message header., +	server.tomcat.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post content., +	server.tomcat.max-threads=0 # Maximum number of worker threads., +	server.tomcat.min-spare-threads=0 # Minimum number of worker threads., +	server.tomcat.protocol-header-https-value=https # Value of the protocol header indicating whether the incoming request uses SSL., +	server.tomcat.remote-ip-header= # Name of the HTTP header from which the remote IP is extracted. For instance, `X-FORWARDED-FOR`., +	server.undertow.accesslog.enabled=false # Whether to enable the access log., +	server.undertow.accesslog.rotate=true # Whether to enable access log rotation., +	server.undertow.buffer-size= # Size of each buffer, in bytes., +	server.undertow.direct-buffers= # Whether to allocate buffers outside the Java heap., +	server.undertow.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post content., +	# FREEMARKER ({sc-spring-boot-autoconfigure}/freemarker/FreeMarkerProperties.{sc-ext}[FreeMarkerProperties]), +	spring.freemarker.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name., +	spring.freemarker.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name., +	spring.freemarker.cache=false # Whether to enable template caching., +	spring.freemarker.check-template-location=true # Whether to check that the templates location exists., +	spring.freemarker.enabled=true # Whether to enable MVC view resolution for this technology., +	spring.freemarker.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template., +	spring.freemarker.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template., +	spring.freemarker.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring's macro library, under the name "springMacroRequestContext"., +	spring.freemarker.prefer-file-system-access=true # Whether to prefer file system access for template loading. File system access enables hot detection of template changes., +	spring.freemarker.settings.*= # Well-known FreeMarker keys which are passed to FreeMarker's Configuration., +	# GROOVY TEMPLATES ({sc-spring-boot-autoconfigure}/groovy/template/GroovyTemplateProperties.{sc-ext}[GroovyTemplateProperties]), +	spring.groovy.template.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name., +	spring.groovy.template.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name., +	spring.groovy.template.cache= # Whether to enable template caching., +	spring.groovy.template.configuration.*= # See https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/view/groovy/GroovyMarkupConfigurer.html[GroovyMarkupConfigurer], +	spring.groovy.template.enabled=true # Whether to enable MVC view resolution for this technology., +	spring.groovy.template.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template., +	spring.groovy.template.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template., +	spring.groovy.template.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring's macro library, under the name "springMacroRequestContext"., +	spring.hateoas.use-hal-as-default-json-media-type=true # Whether application/hal+json responses should be sent to requests that accept application/json., +	spring.http.converters.preferred-json-mapper= # Preferred JSON mapper to use for HTTP message conversion. By default, auto-detected according to the environment., +	spring.http.encoding.enabled=true # Whether to enable http encoding support., +	spring.http.encoding.force= # Whether to force the encoding to the configured charset on HTTP requests and responses., +	spring.http.encoding.force-request= # Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when "force" has not been specified., +	spring.http.encoding.force-response= # Whether to force the encoding to the configured charset on HTTP responses., +	spring.http.encoding.mapping= # Locale in which to encode mapping., +	spring.servlet.multipart.enabled=true # Whether to enable support of multipart uploads., +	spring.servlet.multipart.file-size-threshold=0 # Threshold after which files are written to disk. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively., +	spring.servlet.multipart.max-file-size=1MB # Max file size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively., +	spring.servlet.multipart.max-request-size=10MB # Max request size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.]