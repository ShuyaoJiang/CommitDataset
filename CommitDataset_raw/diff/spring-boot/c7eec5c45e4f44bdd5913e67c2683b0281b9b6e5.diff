[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +	public void overrideTestRollbackOnUpdate() {, +		this.contextRunner.withUserConfiguration(EmbeddedDataSourceConfiguration.class), +				.withPropertyValues(, +						"spring.liquibase.test-rollback-on-update:true"), +				.run((context) -> {, +					SpringLiquibase liquibase = context.getBean(SpringLiquibase.class);, +					assertThat(liquibase.isTestRollbackOnUpdate()).isTrue();, +				});, +	}, +, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +	public void overrideTestRollbackOnUpdate() {, +		this.contextRunner.withUserConfiguration(EmbeddedDataSourceConfiguration.class), +				.withPropertyValues(, +						"spring.liquibase.test-rollback-on-update:true"), +				.run((context) -> {, +					SpringLiquibase liquibase = context.getBean(SpringLiquibase.class);, +					assertThat(liquibase.isTestRollbackOnUpdate()).isTrue();, +				});, +	}, +, +, +	@Test, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.liquibase.test-rollback-on-update=false # Whether rollback should be tested before update is performed.]