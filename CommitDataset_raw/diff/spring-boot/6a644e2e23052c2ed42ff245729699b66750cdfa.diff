[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +		String file = "file:" + getName(PathForm.SYSTEM_INDEPENDENT) + "!/";, +		return new URL("jar", "", -1, file, handler);, +	}, +, +	@Override, +	public String toString() {, +		return getName();, +	}, +, +	@Override, +	public String getName() {, +		return getName(PathForm.SYSTEM_DEPENDENT);, +	}, +, +	private String getName(PathForm pathForm) {, +		if (pathForm == PathForm.SYSTEM_INDEPENDENT && File.separatorChar != '/') {, +			return this.name.replace(File.separatorChar, '/');, +		}, +		return this.name;, +, +, +	/**, +	 * Different forms that paths can be returned., +	 */, +	private static enum PathForm {, +, +		/**, +		 * Use system dependent paths (i.e. include backslashes on Windows), +		 */, +		SYSTEM_DEPENDENT,, +, +		/**, +		 * Use system independent paths (i.e. replace backslashes on Windows), +		 */, +		SYSTEM_INDEPENDENT, +	}, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +		String file = "file:" + getName(PathForm.SYSTEM_INDEPENDENT) + "!/";, +		return new URL("jar", "", -1, file, handler);, +	}, +, +	@Override, +	public String toString() {, +		return getName();, +	}, +, +	@Override, +	public String getName() {, +		return getName(PathForm.SYSTEM_DEPENDENT);, +	}, +, +	private String getName(PathForm pathForm) {, +		if (pathForm == PathForm.SYSTEM_INDEPENDENT && File.separatorChar != '/') {, +			return this.name.replace(File.separatorChar, '/');, +		}, +		return this.name;, +, +, +	/**, +	 * Different forms that paths can be returned., +	 */, +	private static enum PathForm {, +, +		/**, +		 * Use system dependent paths (i.e. include backslashes on Windows), +		 */, +		SYSTEM_DEPENDENT,, +, +		/**, +		 * Use system independent paths (i.e. replace backslashes on Windows), +		 */, +		SYSTEM_INDEPENDENT, +	}, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/jar/JarFileTests.java]