[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, +import java.util.Map.Entry;, +				for (Entry<?, HandlerMethod> method : methods.entrySet()) {, +					map.put("method",  method.getValue().toString());, +					result.put( method.getKey().toString(), map);, +			for (Entry<String, AbstractUrlHandlerMapping> mapping : mappings.entrySet()) {, +				Map<String, Object> handlers = getHandlerMap(mapping.getValue());, +				for (Entry<String, Object> handler : handlers.entrySet()) {, +					result.put(handler.getKey(),, +							Collections.singletonMap("bean", mapping.getKey()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, +import java.util.Map.Entry;, +				for (Entry<?, HandlerMethod> method : methods.entrySet()) {, +					map.put("method",  method.getValue().toString());, +					result.put( method.getKey().toString(), map);, +			for (Entry<String, AbstractUrlHandlerMapping> mapping : mappings.entrySet()) {, +				Map<String, Object> handlers = getHandlerMap(mapping.getValue());, +				for (Entry<String, Object> handler : handlers.entrySet()) {, +					result.put(handler.getKey(),, +							Collections.singletonMap("bean", mapping.getKey()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2016 the original author or authors., +import java.util.Map.Entry;, +		for (Entry<Object, Object> name : this.objectNameStaticProperties.entrySet()) {, +			builder.append("," + name.getKey() + "=" + name.getValue());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpoint.java, +import java.util.Map.Entry;, +				for (Entry<?, HandlerMethod> method : methods.entrySet()) {, +					map.put("method",  method.getValue().toString());, +					result.put( method.getKey().toString(), map);, +			for (Entry<String, AbstractUrlHandlerMapping> mapping : mappings.entrySet()) {, +				Map<String, Object> handlers = getHandlerMap(mapping.getValue());, +				for (Entry<String, Object> handler : handlers.entrySet()) {, +					result.put(handler.getKey(),, +							Collections.singletonMap("bean", mapping.getKey()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, + * Copyright 2012-2016 the original author or authors., +import java.util.Map.Entry;, +		for (Entry<Object, Object> name : this.objectNameStaticProperties.entrySet()) {, +			builder.append("," + name.getKey() + "=" + name.getValue());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import java.util.Map.Entry;, +		private static final Log logger = LogFactory, +				.getLog(WebMvcConfigurerAdapter.class);, +			for (Entry<String, MediaType> mediaType : mediaTypes.entrySet()) {, +				configurer.mediaType(mediaType.getKey(), mediaType.getValue());]