[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointMvcAdapter.java, +import java.util.Collections;, +import java.util.Map;, +, +import org.springframework.http.HttpStatus;, +import org.springframework.http.ResponseEntity;, +		if (!this.delegate.isEnabled()) {, +			// Shouldn't happen, +			return new ResponseEntity<Map<String, String>>(Collections.singletonMap(, +					"message", "This endpoint is disabled"), HttpStatus.NOT_FOUND);, +		}, +	public Endpoint<?> getDelegate() {, +		return this.delegate;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointMvcAdapter.java, +import java.util.Collections;, +import java.util.Map;, +, +import org.springframework.http.HttpStatus;, +import org.springframework.http.ResponseEntity;, +		if (!this.delegate.isEnabled()) {, +			// Shouldn't happen, +			return new ResponseEntity<Map<String, String>>(Collections.singletonMap(, +					"message", "This endpoint is disabled"), HttpStatus.NOT_FOUND);, +		}, +	public Endpoint<?> getDelegate() {, +		return this.delegate;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			if (isGenericEndpoint(endpoint.getClass()) && endpoint.isEnabled()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointMvcAdapter.java, +import java.util.Collections;, +import java.util.Map;, +, +import org.springframework.http.HttpStatus;, +import org.springframework.http.ResponseEntity;, +		if (!this.delegate.isEnabled()) {, +			// Shouldn't happen, +			return new ResponseEntity<Map<String, String>>(Collections.singletonMap(, +					"message", "This endpoint is disabled"), HttpStatus.NOT_FOUND);, +		}, +	public Endpoint<?> getDelegate() {, +		return this.delegate;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			if (isGenericEndpoint(endpoint.getClass()) && endpoint.isEnabled()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/ShutdownMvcEndpoint.java, +import java.util.Collections;, +import java.util.Map;, +, +import org.springframework.http.HttpStatus;, +import org.springframework.http.ResponseEntity;, +		if (!getDelegate().isEnabled()) {, +			return new ResponseEntity<Map<String, String>>(Collections.singletonMap(, +					"message", "This endpoint is disabled"), HttpStatus.NOT_FOUND);, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointMvcAdapter.java, +import java.util.Collections;, +import java.util.Map;, +, +import org.springframework.http.HttpStatus;, +import org.springframework.http.ResponseEntity;, +		if (!this.delegate.isEnabled()) {, +			// Shouldn't happen, +			return new ResponseEntity<Map<String, String>>(Collections.singletonMap(, +					"message", "This endpoint is disabled"), HttpStatus.NOT_FOUND);, +		}, +	public Endpoint<?> getDelegate() {, +		return this.delegate;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoints.java, +			if (isGenericEndpoint(endpoint.getClass()) && endpoint.isEnabled()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/ShutdownMvcEndpoint.java, +import java.util.Collections;, +import java.util.Map;, +, +import org.springframework.http.HttpStatus;, +import org.springframework.http.ResponseEntity;, +		if (!getDelegate().isEnabled()) {, +			return new ResponseEntity<Map<String, String>>(Collections.singletonMap(, +					"message", "This endpoint is disabled"), HttpStatus.NOT_FOUND);, +		}, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/ShutdownMvcEndpointTests.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and]