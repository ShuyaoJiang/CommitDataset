[+++ b/.gitignore, +.factorypath, +++ b/.gitignore, +.factorypath, +++ b/.mvn/jvm.config, +-Xmx512m, +++ b/.gitignore, +.factorypath, +++ b/.mvn/jvm.config, +-Xmx512m, +++ b/.mvn/wrapper/maven-wrapper.jar, +++ b/.gitignore, +.factorypath, +++ b/.mvn/jvm.config, +-Xmx512m, +++ b/.mvn/wrapper/maven-wrapper.jar, +++ b/.mvn/wrapper/maven-wrapper.properties, +distributionUrl=https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.3.3/apache-maven-3.3.3-bin.zip, +++ b/.gitignore, +.factorypath, +++ b/.mvn/jvm.config, +-Xmx512m, +++ b/.mvn/wrapper/maven-wrapper.jar, +++ b/.mvn/wrapper/maven-wrapper.properties, +distributionUrl=https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.3.3/apache-maven-3.3.3-bin.zip, +++ b/.travis.yml, +services:, +  - mongodb, +  - redis, +- ./mvnw install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true || true, +- ./mvnw install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true, +script: ./mvnw install -q -nsu -Dmaven.test.redirectTestOutputToFile=true -P '!integration', +++ b/.gitignore, +.factorypath, +++ b/.mvn/jvm.config, +-Xmx512m, +++ b/.mvn/wrapper/maven-wrapper.jar, +++ b/.mvn/wrapper/maven-wrapper.properties, +distributionUrl=https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.3.3/apache-maven-3.3.3-bin.zip, +++ b/.travis.yml, +services:, +  - mongodb, +  - redis, +- ./mvnw install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true || true, +- ./mvnw install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true, +script: ./mvnw install -q -nsu -Dmaven.test.redirectTestOutputToFile=true -P '!integration', +++ b/CONTRIBUTING.adoc, +== Using GitHub issues, +We use GitHub issues to track bugs and enhancements. If you have a general usage question, +please ask on http://stackoverflow.com[Stack Overflow]. The Spring Boot team and the, +broader community monitor the http://stackoverflow.com/tags/spring-boot[`spring-boot`], +tag., +, +If you are reporting a bug, please help to speed up problem diagnosis by providing as much, +information as possible. Ideally, that would include a small, +https://github.com/spring-projects/spring-boot-issues[sample project] that reproduces the, +problem., +, +, +, +given the ability to merge pull requests. Use '`Phillip Webb`' or '`Dave Syer`' in the, +  the '`Importing into eclipse`' instructions below you should get project specific, +  `eclipse-code-formatter.xml` file from the `eclipse` folder. If using IntelliJ IDEA, you, +  can use the http://plugins.jetbrains.com/plugin/6546[Eclipse Code Formatter Plugin], +* Add yourself as an `@author` to the `.java` files that you modify substantially (more, +* Add some Javadocs., +  message (where `XXXX` is the issue number)., +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.2.3 or above and JDK 1.8., +	$ ./mvnw clean install, +a `MAVEN_OPTS` environment variable with the value `-Xmx512m`, +	$ ./mvnw clean install -DskipTests, +most of the time, however, sometimes it's useful to run a build that includes all modules, +	$ ./mvnw -P snapshot,prepare install -DskipTests, +	$ ./mvnw -s ./settings.xml -f spring-boot-full-build -P full clean install, +`-Xmx512m`. We generate more artifacts when running the full build, +=== Importing into eclipse, +You can import the Spring Boot code into any Eclipse Mars based distribution. The easiest, +way to setup a new environment is to use the Eclipse Installer with the provided, +`.setup` file., +, +, +==== Using the Eclipse Installer, +Spring Boot includes a `.setup` files which can be used with the Eclipse Installer to, +provision a new environment. To use the installer:, +, +* Download and run the latest Eclipse Installer from, +  http://www.eclipse.org/downloads/[eclipse.org/downloads/]., +* Switch to "Advanced Mode" using the drop down menu on the right., +* Select "`Eclipse IDE for Java Developers`" under "`Eclipse.org`" as the product to, +  install and click "`next`"., +* For the "`Project`" click on "`+`" to add a new setup file. Select "`Github Projects`", +  and browser for `<checkout>/eclipse/spring-boot-project.setup` from your locally cloned, +  copy of the source code. Click "`OK`" to add the setup file to the list., +* Double-click on "`Spring Boot`" from the project list to add it to the list that will, +  be provisioned then click "`Next`"., +* Click show all variables and make sure that "`Checkout Location`" points to the locally, +  cloned source code that you selected earlier. You might also want to pick a different, +  install location here., +* Click "`Finish`" to install the software.]