[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +					assertThat(registry.find("data.source.max.connections"), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +					assertThat(registry.find("data.source.max.connections"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +	static abstract class AbstractSessionRepositoryImplementationValidator {, +	static abstract class AbstractSessionRepositoryValidator {, +	 * Bean used to validate that a {@link ReactiveSessionRepository} exists and provide a, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +					assertThat(registry.find("data.source.max.connections"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +	static abstract class AbstractSessionRepositoryImplementationValidator {, +	static abstract class AbstractSessionRepositoryValidator {, +	 * Bean used to validate that a {@link ReactiveSessionRepository} exists and provide a, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/DefaultServletWebServerFactoryCustomizerTests.java, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(((AbstractProtocol<?>) server.getTomcat().getConnector(), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(((AbstractProtocol<?>) server.getTomcat().getConnector(), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(server.getTomcat().getConnector().getMaxPostSize()), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(server.getTomcat().getConnector().getMaxPostSize()), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			Tomcat tomcat = server.getTomcat();, +			server.stop();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +					assertThat(registry.find("data.source.max.connections"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +	static abstract class AbstractSessionRepositoryImplementationValidator {, +	static abstract class AbstractSessionRepositoryValidator {, +	 * Bean used to validate that a {@link ReactiveSessionRepository} exists and provide a, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/DefaultServletWebServerFactoryCustomizerTests.java, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(((AbstractProtocol<?>) server.getTomcat().getConnector(), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(((AbstractProtocol<?>) server.getTomcat().getConnector(), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(server.getTomcat().getConnector().getMaxPostSize()), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(server.getTomcat().getConnector().getMaxPostSize()), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			Tomcat tomcat = server.getTomcat();, +			server.stop();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +Auto-configuration will enable the instrumentation of all available ``DataSource``s with a, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +					assertThat(registry.find("data.source.max.connections"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +	static abstract class AbstractSessionRepositoryImplementationValidator {, +	static abstract class AbstractSessionRepositoryValidator {, +	 * Bean used to validate that a {@link ReactiveSessionRepository} exists and provide a, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/DefaultServletWebServerFactoryCustomizerTests.java, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(((AbstractProtocol<?>) server.getTomcat().getConnector(), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(((AbstractProtocol<?>) server.getTomcat().getConnector(), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(server.getTomcat().getConnector().getMaxPostSize()), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			assertThat(server.getTomcat().getConnector().getMaxPostSize()), +			server.stop();, +		TomcatWebServer server = (TomcatWebServer) factory.getWebServer();, +		server.start();, +			Tomcat tomcat = server.getTomcat();, +			server.stop();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +Auto-configuration will enable the instrumentation of all available ``DataSource``s with a, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/AnnotationConfigReactiveWebApplicationContext.java]