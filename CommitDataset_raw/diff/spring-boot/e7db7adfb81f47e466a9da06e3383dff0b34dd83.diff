[+++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/RestartApplicationListener.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		if (event instanceof ApplicationStartingEvent) {, +			onApplicationStartingEvent((ApplicationStartingEvent) event);, +	private void onApplicationStartingEvent(ApplicationStartingEvent event) {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/RestartApplicationListener.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		if (event instanceof ApplicationStartingEvent) {, +			onApplicationStartingEvent((ApplicationStartingEvent) event);, +	private void onApplicationStartingEvent(ApplicationStartingEvent event) {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestartApplicationListenerTests.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		listener.onApplicationEvent(new ApplicationStartingEvent(application, ARGS));, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/RestartApplicationListener.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		if (event instanceof ApplicationStartingEvent) {, +			onApplicationStartingEvent((ApplicationStartingEvent) event);, +	private void onApplicationStartingEvent(ApplicationStartingEvent event) {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestartApplicationListenerTests.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		listener.onApplicationEvent(new ApplicationStartingEvent(application, ARGS));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		listeners.starting();, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/RestartApplicationListener.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		if (event instanceof ApplicationStartingEvent) {, +			onApplicationStartingEvent((ApplicationStartingEvent) event);, +	private void onApplicationStartingEvent(ApplicationStartingEvent event) {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestartApplicationListenerTests.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		listener.onApplicationEvent(new ApplicationStartingEvent(application, ARGS));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		listeners.starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListener.java, +	void starting();, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/RestartApplicationListener.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		if (event instanceof ApplicationStartingEvent) {, +			onApplicationStartingEvent((ApplicationStartingEvent) event);, +	private void onApplicationStartingEvent(ApplicationStartingEvent event) {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestartApplicationListenerTests.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		listener.onApplicationEvent(new ApplicationStartingEvent(application, ARGS));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		listeners.starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListener.java, +	void starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListeners.java, +	public void starting() {, +			listener.starting();, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/RestartApplicationListener.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		if (event instanceof ApplicationStartingEvent) {, +			onApplicationStartingEvent((ApplicationStartingEvent) event);, +	private void onApplicationStartingEvent(ApplicationStartingEvent event) {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestartApplicationListenerTests.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		listener.onApplicationEvent(new ApplicationStartingEvent(application, ARGS));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		listeners.starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListener.java, +	void starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListeners.java, +	public void starting() {, +			listener.starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/event/ApplicationStartedEvent.java, + * @deprecated since 1.5.0 in favor of {@link ApplicationStartingEvent}, +@Deprecated, +public class ApplicationStartedEvent extends ApplicationStartingEvent {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/RestartApplicationListener.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		if (event instanceof ApplicationStartingEvent) {, +			onApplicationStartingEvent((ApplicationStartingEvent) event);, +	private void onApplicationStartingEvent(ApplicationStartingEvent event) {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/RestartApplicationListenerTests.java, +import org.springframework.boot.context.event.ApplicationStartingEvent;, +		listener.onApplicationEvent(new ApplicationStartingEvent(application, ARGS));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		listeners.starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListener.java, +	void starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListeners.java, +	public void starting() {, +			listener.starting();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/event/ApplicationStartedEvent.java, + * @deprecated since 1.5.0 in favor of {@link ApplicationStartingEvent}, +@Deprecated, +public class ApplicationStartedEvent extends ApplicationStartingEvent {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/event/ApplicationStartingEvent.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,]