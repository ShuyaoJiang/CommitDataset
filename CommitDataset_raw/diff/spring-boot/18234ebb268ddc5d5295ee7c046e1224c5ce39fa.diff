[+++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +			msg.append(getResourceDescription(location, resource));, +		/**, +		 * @param location, +		 * @param resource, +		 * @return, +		 */, +		private String getResourceDescription(String location, Resource resource) {, +			String resourceDescription = "'" + location + "'";, +			if (resource != null) {, +				try {, +					resourceDescription = String.format("'%s' (%s)",, +							resource.getURI().toASCIIString(), location);, +				}, +				catch (IOException ex) {, +					// Use the location as the description, +				}, +			}, +			return resourceDescription;, +		}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +			msg.append(getResourceDescription(location, resource));, +		/**, +		 * @param location, +		 * @param resource, +		 * @return, +		 */, +		private String getResourceDescription(String location, Resource resource) {, +			String resourceDescription = "'" + location + "'";, +			if (resource != null) {, +				try {, +					resourceDescription = String.format("'%s' (%s)",, +							resource.getURI().toASCIIString(), location);, +				}, +				catch (IOException ex) {, +					// Use the location as the description, +				}, +			}, +			return resourceDescription;, +		}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +		String string = ".properties)";, +		return "Loaded config file '", +				+ new File("target/test-classes/application" + suffix + ".properties"), +						.getAbsoluteFile().toURI().toString(), +				+ "' (classpath:/application" + suffix + string;]