[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/AccessLevel.java, +	private static final String REQUEST_ATTRIBUTE = "cloudFoundryAccessLevel";, +, +		request.setAttribute(REQUEST_ATTRIBUTE, this);, +	}, +, +	public static AccessLevel get(HttpServletRequest request) {, +		return (AccessLevel) request.getAttribute(REQUEST_ATTRIBUTE);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/AccessLevel.java, +	private static final String REQUEST_ATTRIBUTE = "cloudFoundryAccessLevel";, +, +		request.setAttribute(REQUEST_ATTRIBUTE, this);, +	}, +, +	public static AccessLevel get(HttpServletRequest request) {, +		return (AccessLevel) request.getAttribute(REQUEST_ATTRIBUTE);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryDiscoveryMvcEndpoint.java, +		AccessLevel accessLevel = AccessLevel.get(request);, +			if (accessLevel != null && accessLevel.isAccessAllowed(endpoint.getPath())) {, +				links.put(endpoint.getName(),, +						Link.withHref(url + "/" + endpoint.getName()));, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/AccessLevel.java, +	private static final String REQUEST_ATTRIBUTE = "cloudFoundryAccessLevel";, +, +		request.setAttribute(REQUEST_ATTRIBUTE, this);, +	}, +, +	public static AccessLevel get(HttpServletRequest request) {, +		return (AccessLevel) request.getAttribute(REQUEST_ATTRIBUTE);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryDiscoveryMvcEndpoint.java, +		AccessLevel accessLevel = AccessLevel.get(request);, +			if (accessLevel != null && accessLevel.isAccessAllowed(endpoint.getPath())) {, +				links.put(endpoint.getName(),, +						Link.withHref(url + "/" + endpoint.getName()));, +			}, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryDiscoveryMvcEndpointTests.java, +	private Set<NamedMvcEndpoint> endpoints;, +, +		NamedMvcEndpoint endpoint = new TestMvcEndpoint(new TestEndpoint("a"));, +		this.endpoints = new LinkedHashSet<NamedMvcEndpoint>();, +		this.endpoints.add(endpoint);, +		this.endpoint = new CloudFoundryDiscoveryMvcEndpoint(this.endpoints);, +		AccessLevel.FULL.put(request);, +		AccessLevel.FULL.put(request);, +	@Test, +	public void linksResponseWhenRequestHasAccessLevelRestricted() throws Exception {, +		NamedMvcEndpoint testHealthMvcEndpoint = new TestMvcEndpoint(, +				new TestEndpoint("health"));, +		this.endpoints.add(testHealthMvcEndpoint);, +		MockHttpServletRequest request = new MockHttpServletRequest("GET",, +				"/cloudfoundryapplication/");, +		AccessLevel.RESTRICTED.put(request);, +		Map<String, CloudFoundryDiscoveryMvcEndpoint.Link> links = this.endpoint, +				.links(request).get("_links");, +		assertThat(links.get("self").getHref()), +				.isEqualTo("http://localhost/cloudfoundryapplication");, +		assertThat(links.get("health").getHref()), +				.isEqualTo("http://localhost/cloudfoundryapplication/health");, +		assertThat(links.get("a")).isNull();, +	}, +]