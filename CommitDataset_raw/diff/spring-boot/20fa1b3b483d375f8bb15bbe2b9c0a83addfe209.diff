[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRole();, +				authenticationProperties.setRoles(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRole();, +				authenticationProperties.setRoles(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, + * @author Vedran Pavic, +		 * Roles required to access the management endpoint., +		private List<String> role = new ArrayList<String>(Arrays.asList("ADMIN"));, +		public void setRole(List<String> role) {, +		public List<String> getRole() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRole();, +				authenticationProperties.setRoles(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, + * @author Vedran Pavic, +		 * Roles required to access the management endpoint., +		private List<String> role = new ArrayList<String>(Arrays.asList("ADMIN"));, +		public void setRole(List<String> role) {, +		public List<String> getRole() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +						.addAll(this.management.getSecurity().getRole());, +			// Restrict the rest to the configured roles, +			List<String> roles = this.management.getSecurity().getRole();, +			requests.anyRequest().hasAnyRole(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRole();, +				authenticationProperties.setRoles(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, + * @author Vedran Pavic, +		 * Roles required to access the management endpoint., +		private List<String> role = new ArrayList<String>(Arrays.asList("ADMIN"));, +		public void setRole(List<String> role) {, +		public List<String> getRole() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +						.addAll(this.management.getSecurity().getRole());, +			// Restrict the rest to the configured roles, +			List<String> roles = this.management.getSecurity().getRole();, +			requests.anyRequest().hasAnyRole(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	management.security.role=ADMIN # Roles required to access the management endpoint., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRole();, +				authenticationProperties.setRoles(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.List;, + * @author Vedran Pavic, +		 * Roles required to access the management endpoint., +		private List<String> role = new ArrayList<String>(Arrays.asList("ADMIN"));, +		public void setRole(List<String> role) {, +		public List<String> getRole() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +						.addAll(this.management.getSecurity().getRole());, +			// Restrict the rest to the configured roles, +			List<String> roles = this.management.getSecurity().getRole();, +			requests.anyRequest().hasAnyRole(roles.toArray(new String[roles.size()]));, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	management.security.role=ADMIN # Roles required to access the management endpoint., +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +security roles required to access the endpoints. For example, you might set the following]