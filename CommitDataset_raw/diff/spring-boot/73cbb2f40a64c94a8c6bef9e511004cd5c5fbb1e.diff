[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoContributorAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., + * {@link EnableAutoConfiguration Auto-configuration} for standard, + * {@link InfoContributor}s., +	public EnvironmentInfoContributor envInfoContributor(, +			ConfigurableEnvironment environment) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoContributorAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., + * {@link EnableAutoConfiguration Auto-configuration} for standard, + * {@link InfoContributor}s., +	public EnvironmentInfoContributor envInfoContributor(, +			ConfigurableEnvironment environment) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the `defaults`, + * name or individually via the name of the element., +		return new ConditionOutcome(match,, +				getDefaultEndpointElementOutcomeMessage(match));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoContributorAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., + * {@link EnableAutoConfiguration Auto-configuration} for standard, + * {@link InfoContributor}s., +	public EnvironmentInfoContributor envInfoContributor(, +			ConfigurableEnvironment environment) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the `defaults`, + * name or individually via the name of the element., +		return new ConditionOutcome(match,, +				getDefaultEndpointElementOutcomeMessage(match));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledInfoContributorCondition.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoContributorAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., + * {@link EnableAutoConfiguration Auto-configuration} for standard, + * {@link InfoContributor}s., +	public EnvironmentInfoContributor envInfoContributor(, +			ConfigurableEnvironment environment) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the `defaults`, + * name or individually via the name of the element., +		return new ConditionOutcome(match,, +				getDefaultEndpointElementOutcomeMessage(match));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledInfoContributorCondition.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoContributorAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., + * {@link EnableAutoConfiguration Auto-configuration} for standard, + * {@link InfoContributor}s., +	public EnvironmentInfoContributor envInfoContributor(, +			ConfigurableEnvironment environment) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the `defaults`, + * name or individually via the name of the element., +		return new ConditionOutcome(match,, +				getDefaultEndpointElementOutcomeMessage(match));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledInfoContributorCondition.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/AbstractEnvironmentInfoContributor.java, +	 * <p>, +	 * Any key that starts with the {@code prefix} will be included, +	 * <p>, +	 * Any key that starts with the {@code prefix} will be bound to the {@code target}., +		PropertiesConfigurationFactory<Object> factory = new PropertiesConfigurationFactory<Object>(, +				target);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ConditionalOnEnabledInfoContributor.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoContributorAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., + * {@link EnableAutoConfiguration Auto-configuration} for standard, + * {@link InfoContributor}s., +	public EnvironmentInfoContributor envInfoContributor(, +			ConfigurableEnvironment environment) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the `defaults`, + * name or individually via the name of the element., +		return new ConditionOutcome(match,, +				getDefaultEndpointElementOutcomeMessage(match));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledInfoContributorCondition.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/AbstractEnvironmentInfoContributor.java, +	 * <p>, +	 * Any key that starts with the {@code prefix} will be included, +	 * <p>, +	 * Any key that starts with the {@code prefix} will be bound to the {@code target}., +		PropertiesConfigurationFactory<Object> factory = new PropertiesConfigurationFactory<Object>(]