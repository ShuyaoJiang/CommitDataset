[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/MetricsEndpoint.java, +		meter.measure(), +				.forEach((measurement) -> samples.merge(measurement.getStatistic(),, +						measurement.getValue(),, +						mergeFunction(measurement.getStatistic())));, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/MetricsEndpoint.java, +		meter.measure(), +				.forEach((measurement) -> samples.merge(measurement.getStatistic(),, +						measurement.getValue(),, +						mergeFunction(measurement.getStatistic())));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/MetricsEndpointTests.java, +	private void assertMetricHasStatisticEqualTo(MeterRegistry registry,, +			String metricName, Statistic stat, Double value) {, +				.stream().filter((sample) -> sample.getStatistic().equals(stat)), +				.findAny()).hasValueSatisfying(, +						(sample) -> assertThat(sample.getValue()).isEqualTo(value));, +				.filter((sample) -> sample.getStatistic().equals(Statistic.COUNT)), +				.findAny().map(MetricsEndpoint.Sample::getValue);]