[+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Christian Dupuis, +				String banner = StreamUtils.copyToString(, +								Charset.forName("UTF-8")));, +				System.out.println(environment.resolvePlaceholders(banner));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Christian Dupuis, +				String banner = StreamUtils.copyToString(, +								Charset.forName("UTF-8")));, +				System.out.println(environment.resolvePlaceholders(banner));, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, + * @author Christian Dupuis, +	public void customBannerWithProperties() throws Exception {, +		SpringApplication application = spy(new SpringApplication(ExampleConfig.class));, +		application.setWebEnvironment(false);, +		application.run("--banner.location=classpath:test-banner-with-placeholder.txt",, +				"--test.property=123456");, +		verify(application, never()).printBanner();, +	}, +, +	@Test, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, + * @author Christian Dupuis, +				String banner = StreamUtils.copyToString(, +								Charset.forName("UTF-8")));, +				System.out.println(environment.resolvePlaceholders(banner));, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, + * @author Christian Dupuis, +	public void customBannerWithProperties() throws Exception {, +		SpringApplication application = spy(new SpringApplication(ExampleConfig.class));, +		application.setWebEnvironment(false);, +		application.run("--banner.location=classpath:test-banner-with-placeholder.txt",, +				"--test.property=123456");, +		verify(application, never()).printBanner();, +	}, +, +	@Test, +++ b/spring-boot/src/test/resources/test-banner-with-placeholder.txt, +Running a Test!, +, +${test.property}]