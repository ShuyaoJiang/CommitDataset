[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.java, +		builder = builder.awaitTermination(this.properties.getAwaitTermination());, +		builder = builder.waitForTasksToCompleteOnShutdown(, +				this.properties.isWaitForTasksToCompleteOnShutdown());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.java, +		builder = builder.awaitTermination(this.properties.getAwaitTermination());, +		builder = builder.waitForTasksToCompleteOnShutdown(, +				this.properties.isWaitForTasksToCompleteOnShutdown());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionProperties.java, +import java.time.temporal.ChronoUnit;, +import org.springframework.boot.convert.DurationUnit;, + * @author Filip Hrisafov, +	/**, +	 * Maximum number of time that the executor is supposed to block on shutdown waiting, +	 * for remaining tasks to complete. This is particularly useful if your remaining, +	 * tasks are likely to need access to other resources that are also managed by the, +	 * container. If a duration suffix is not specified, seconds will be used., +	 */, +	@DurationUnit(ChronoUnit.SECONDS), +	private Duration awaitTermination;, +, +	/**, +	 * Whether the executor should wait for scheduled tasks to complete on shutdown., +	 */, +	private boolean waitForTasksToCompleteOnShutdown = false;, +, +	public Duration getAwaitTermination() {, +		return this.awaitTermination;, +	}, +, +	public void setAwaitTermination(Duration awaitTermination) {, +		this.awaitTermination = awaitTermination;, +	}, +, +	public boolean isWaitForTasksToCompleteOnShutdown() {, +		return this.waitForTasksToCompleteOnShutdown;, +	}, +, +	public void setWaitForTasksToCompleteOnShutdown(, +			boolean waitForTasksToCompleteOnShutdown) {, +		this.waitForTasksToCompleteOnShutdown = waitForTasksToCompleteOnShutdown;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.java, +		builder = builder.awaitTermination(this.properties.getAwaitTermination());, +		builder = builder.waitForTasksToCompleteOnShutdown(, +				this.properties.isWaitForTasksToCompleteOnShutdown());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionProperties.java, +import java.time.temporal.ChronoUnit;, +import org.springframework.boot.convert.DurationUnit;, + * @author Filip Hrisafov, +	/**, +	 * Maximum number of time that the executor is supposed to block on shutdown waiting, +	 * for remaining tasks to complete. This is particularly useful if your remaining, +	 * tasks are likely to need access to other resources that are also managed by the, +	 * container. If a duration suffix is not specified, seconds will be used., +	 */, +	@DurationUnit(ChronoUnit.SECONDS), +	private Duration awaitTermination;, +, +	/**, +	 * Whether the executor should wait for scheduled tasks to complete on shutdown., +	 */, +	private boolean waitForTasksToCompleteOnShutdown = false;, +, +	public Duration getAwaitTermination() {, +		return this.awaitTermination;, +	}, +, +	public void setAwaitTermination(Duration awaitTermination) {, +		this.awaitTermination = awaitTermination;, +	}, +, +	public boolean isWaitForTasksToCompleteOnShutdown() {, +		return this.waitForTasksToCompleteOnShutdown;, +	}, +, +	public void setWaitForTasksToCompleteOnShutdown(, +			boolean waitForTasksToCompleteOnShutdown) {, +		this.waitForTasksToCompleteOnShutdown = waitForTasksToCompleteOnShutdown;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues(, +				"spring.task.execution.pool.queue-capacity=10",, +				"spring.task.execution.thread-name-prefix=mytest-",, +				"spring.task.execution.await-termination=30s",, +				"spring.task.execution.wait-for-tasks-to-complete-on-shutdown=true"), +					assertThat(taskExecutor), +							.hasFieldOrPropertyWithValue("awaitTerminationSeconds", 30);, +					assertThat(taskExecutor).hasFieldOrPropertyWithValue(, +							"waitForTasksToCompleteOnShutdown", true);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.java, +		builder = builder.awaitTermination(this.properties.getAwaitTermination());, +		builder = builder.waitForTasksToCompleteOnShutdown(, +				this.properties.isWaitForTasksToCompleteOnShutdown());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskExecutionProperties.java, +import java.time.temporal.ChronoUnit;, +import org.springframework.boot.convert.DurationUnit;, + * @author Filip Hrisafov]