[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +import org.springframework.web.server.ResponseStatusException;, +	 * Log the original exception if handling it results in a Server Error or a Bad Request, +	 * (Client Error with 400 status code) one., +			if (ex instanceof ResponseStatusException) {, +				logger.error(buildMessage(request, ex));, +			else {, +				logger.error(buildMessage(request, null), ex);, +			}, +		}, +		else if (errorStatus == HttpStatus.BAD_REQUEST) {, +			Throwable ex = getError(request);, +			if (ex instanceof ResponseStatusException) {, +				logger.warn(buildMessage(request, ex));, +			}, +			else {, +				logger.warn(buildMessage(request, null), ex);, +			}, +		}, +	}, +, +	private String buildMessage(ServerRequest request, Throwable ex) {, +		StringBuilder message = new StringBuilder("Failed to handle request [");, +		message.append(request.methodName());, +		message.append(" ");, +		message.append(request.uri());, +		message.append("]");, +		if (ex != null) {, +			message.append(": ");, +			message.append(ex.getMessage());, +		}, +		return message.toString();]