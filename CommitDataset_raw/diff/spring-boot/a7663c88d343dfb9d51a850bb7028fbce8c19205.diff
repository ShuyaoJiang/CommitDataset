[+++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/remote/client/RemoteClientConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +			ServerHttpRequest anyRequest = any(ServerHttpRequest.class);, +			ServerHttpResponse anyResponse = any(ServerHttpResponse.class);, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/remote/client/RemoteClientConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +			ServerHttpRequest anyRequest = any(ServerHttpRequest.class);, +			ServerHttpResponse anyResponse = any(ServerHttpResponse.class);, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/MockRestarter.java, + * Copyright 2012-2018 the original author or authors., +		given(this.mock.getOrAddAttribute(anyString(), any(ObjectFactory.class))), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/remote/client/RemoteClientConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +			ServerHttpRequest anyRequest = any(ServerHttpRequest.class);, +			ServerHttpResponse anyResponse = any(ServerHttpResponse.class);, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/MockRestarter.java, + * Copyright 2012-2018 the original author or authors., +		given(this.mock.getOrAddAttribute(anyString(), any(ObjectFactory.class))), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/OnInitializedRestarterConditionTests.java, + * Copyright 2012-2018 the original author or authors., +			given(initializer.getInitialUrls(any(Thread.class))).willReturn(new URL[0]);, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/remote/client/RemoteClientConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +			ServerHttpRequest anyRequest = any(ServerHttpRequest.class);, +			ServerHttpResponse anyResponse = any(ServerHttpResponse.class);, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/MockRestarter.java, + * Copyright 2012-2018 the original author or authors., +		given(this.mock.getOrAddAttribute(anyString(), any(ObjectFactory.class))), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/OnInitializedRestarterConditionTests.java, + * Copyright 2012-2018 the original author or authors., +			given(initializer.getInitialUrls(any(Thread.class))).willReturn(new URL[0]);, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockitoTestExecutionListenerTests.java, + * Copyright 2012-2018 the original author or authors., +				any(MockDefinition.class));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/remote/client/RemoteClientConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +			ServerHttpRequest anyRequest = any(ServerHttpRequest.class);, +			ServerHttpResponse anyResponse = any(ServerHttpResponse.class);, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/MockRestarter.java, + * Copyright 2012-2018 the original author or authors., +		given(this.mock.getOrAddAttribute(anyString(), any(ObjectFactory.class))), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/OnInitializedRestarterConditionTests.java, + * Copyright 2012-2018 the original author or authors., +			given(initializer.getInitialUrls(any(Thread.class))).willReturn(new URL[0]);, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockitoTestExecutionListenerTests.java, + * Copyright 2012-2018 the original author or authors., +				any(MockDefinition.class));, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java, + * Copyright 2012-2018 the original author or authors., +		given(this.delegate.validateRequest(any(ClientHttpRequest.class))), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/remote/client/RemoteClientConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +			ServerHttpRequest anyRequest = any(ServerHttpRequest.class);, +			ServerHttpResponse anyResponse = any(ServerHttpResponse.class);, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/MockRestarter.java, + * Copyright 2012-2018 the original author or authors., +		given(this.mock.getOrAddAttribute(anyString(), any(ObjectFactory.class))), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/OnInitializedRestarterConditionTests.java, + * Copyright 2012-2018 the original author or authors., +			given(initializer.getInitialUrls(any(Thread.class))).willReturn(new URL[0]);, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockitoTestExecutionListenerTests.java, + * Copyright 2012-2018 the original author or authors., +				any(MockDefinition.class));, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java, + * Copyright 2012-2018 the original author or authors., +		given(this.delegate.validateRequest(any(ClientHttpRequest.class))), +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/TestRestTemplateTests.java, +		given(requestFactory.createRequest(eq(absoluteUri), any(HttpMethod.class))), +		verify(requestFactory).createRequest(eq(absoluteUri), any(HttpMethod.class));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, + * Copyright 2012-2018 the original author or authors., +		verify(this.publisher, never()).publishEvent(any(ApplicationEvent.class));, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/remote/client/RemoteClientConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +			ServerHttpRequest anyRequest = any(ServerHttpRequest.class);, +			ServerHttpResponse anyResponse = any(ServerHttpResponse.class);, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/MockRestarter.java, + * Copyright 2012-2018 the original author or authors., +		given(this.mock.getOrAddAttribute(anyString(), any(ObjectFactory.class)))]