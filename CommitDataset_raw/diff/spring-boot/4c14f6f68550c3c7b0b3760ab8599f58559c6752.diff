[+++ b/spring-boot/pom.xml, +			<groupId>org.apache.httpcomponents</groupId>, +			<artifactId>httpclient</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot/pom.xml, +			<groupId>org.apache.httpcomponents</groupId>, +			<artifactId>httpclient</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot/src/main/java/org/springframework/boot/test/RestTemplates.java, +import java.net.URI;, +import org.apache.http.client.config.CookieSpecs;, +import org.apache.http.client.config.RequestConfig;, +import org.apache.http.client.config.RequestConfig.Builder;, +import org.apache.http.client.protocol.HttpClientContext;, +import org.apache.http.protocol.HttpContext;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;, +import org.springframework.util.ClassUtils;, + * integration tests. They are fault tolerant, and optionally can carry Basic, + * authentication headers. If Apache Http Client 4.3.2 or better is available, + * (recommended) it will be used as the client, and configured to ignore cookies and, + * redirects., +		if (ClassUtils.isPresent("org.apache.http.client.config.RequestConfig", null)) {, +			new HttpComponentsCustomizer().customize(restTemplate);, +		}, +	private static class HttpComponentsCustomizer {, +, +		public void customize(RestTemplate restTemplate) {, +			restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory() {, +				@Override, +				protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {, +					HttpClientContext context = HttpClientContext.create();, +					Builder builder = RequestConfig.custom(), +							.setCookieSpec(CookieSpecs.IGNORE_COOKIES), +							.setAuthenticationEnabled(false).setRedirectsEnabled(false);, +					context.setRequestConfig(builder.build());, +					return context;, +				}, +			});, +		}, +, +	}, +]