[+++ /dev/null, +++ /dev/null, +++ b/eclipse/eclipse.properties, +copyright-year=2012-2018, +++ /dev/null, +++ b/eclipse/eclipse.properties, +copyright-year=2012-2018, +++ b/pom.xml, +				<property>, +					<name>!disable-spring-boot-default-profile</name>, +				</property>, +++ /dev/null, +++ b/eclipse/eclipse.properties, +copyright-year=2012-2018, +++ b/pom.xml, +				<property>, +					<name>!disable-spring-boot-default-profile</name>, +				</property>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context, +					.getBean(DispatcherServletPath.class);, +			return new ServletEndpointRegistrar(, +					dispatcherServletPath.getRelativePath(properties.getBasePath()),, +++ /dev/null, +++ b/eclipse/eclipse.properties, +copyright-year=2012-2018, +++ b/pom.xml, +				<property>, +					<name>!disable-spring-boot-default-profile</name>, +				</property>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context, +					.getBean(DispatcherServletPath.class);, +			return new ServletEndpointRegistrar(, +					dispatcherServletPath.getRelativePath(properties.getBasePath()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +				String pathPrefix = getPathPrefix(context);, +				return createDelegate(context, new RequestMatcherFactory(pathPrefix));, +		private String getPathPrefix(WebApplicationContext context) {, +				return context.getBean(DispatcherServletPath.class).getPrefix();, +				return "";, +				delegateMatchers.add(, +					.map((path) -> requestMatcherFactory.antPath(path, "/**")), +				return requestMatcherFactory.antPath(properties.getBasePath());, +		private final String prefix;, +		RequestMatcherFactory(String prefix) {, +			this.prefix = prefix;, +		public RequestMatcher antPath(String... parts) {, +			String pattern = this.prefix;, +			for (String part : parts) {, +				pattern += part;, +			}, +			return new AntPathRequestMatcher(pattern);, +++ /dev/null, +++ b/eclipse/eclipse.properties, +copyright-year=2012-2018, +++ b/pom.xml, +				<property>, +					<name>!disable-spring-boot-default-profile</name>, +				</property>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context, +					.getBean(DispatcherServletPath.class);, +			return new ServletEndpointRegistrar(, +					dispatcherServletPath.getRelativePath(properties.getBasePath()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +				String pathPrefix = getPathPrefix(context);, +				return createDelegate(context, new RequestMatcherFactory(pathPrefix));, +		private String getPathPrefix(WebApplicationContext context) {, +				return context.getBean(DispatcherServletPath.class).getPrefix();, +				return "";, +				delegateMatchers.add(, +					.map((path) -> requestMatcherFactory.antPath(path, "/**")), +				return requestMatcherFactory.antPath(properties.getBasePath());, +		private final String prefix;, +		RequestMatcherFactory(String prefix) {, +			this.prefix = prefix;, +		public RequestMatcher antPath(String... parts) {, +			String pattern = this.prefix;, +			for (String part : parts) {, +				pattern += part;, +			}, +			return new AntPathRequestMatcher(pattern);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/CompositeHandlerMapping.java, + * Composite {@link HandlerMapping}., +++ /dev/null, +++ b/eclipse/eclipse.properties, +copyright-year=2012-2018, +++ b/pom.xml, +				<property>, +					<name>!disable-spring-boot-default-profile</name>, +				</property>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context]