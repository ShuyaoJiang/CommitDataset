[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, + * @author Jon Schneider, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, + * @author Jon Schneider, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsAutoConfiguration.java, +	private final MetricsProperties properties;, +, +	public RestTemplateMetricsAutoConfiguration(MetricsProperties properties) {, +		this.properties = properties;, +	}, +, +			RestTemplateExchangeTagsProvider restTemplateTagConfigurer) {, +				this.properties.getWeb().getClient().getRequestsMetricName());, +	public MeterFilter metricsWebClientUriTagFilter() {, +		String metricName = this.properties.getWeb().getClient().getRequestsMetricName();, +		MeterFilter denyFilter = new OnlyOnceLoggingDenyMeterFilter(() -> String, +				.format("Reached the maximum number of URI tags for '%s'. Are you using ", +						+ "'uriVariables' on RestTemplate calls?", metricName));, +				this.properties.getWeb().getClient().getMaxUriTags(), denyFilter);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, + * @author Jon Schneider, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsAutoConfiguration.java, +	private final MetricsProperties properties;, +, +	public RestTemplateMetricsAutoConfiguration(MetricsProperties properties) {, +		this.properties = properties;, +	}, +, +			RestTemplateExchangeTagsProvider restTemplateTagConfigurer) {, +				this.properties.getWeb().getClient().getRequestsMetricName());, +	public MeterFilter metricsWebClientUriTagFilter() {, +		String metricName = this.properties.getWeb().getClient().getRequestsMetricName();, +		MeterFilter denyFilter = new OnlyOnceLoggingDenyMeterFilter(() -> String, +				.format("Reached the maximum number of URI tags for '%s'. Are you using ", +						+ "'uriVariables' on RestTemplate calls?", metricName));, +				this.properties.getWeb().getClient().getMaxUriTags(), denyFilter);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfiguration.java, +	private final MetricsProperties properties;, +, +	public WebFluxMetricsAutoConfiguration(MetricsProperties properties) {, +		this.properties = properties;, +	}, +, +			WebFluxTagsProvider tagConfigurer) {, +				this.properties.getWeb().getServer().getRequestsMetricName());, +	public MeterFilter metricsHttpServerUriTagFilter() {, +		String metricName = this.properties.getWeb().getServer().getRequestsMetricName();, +				this.properties.getWeb().getServer().getMaxUriTags(), filter);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, + * @author Jon Schneider, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsAutoConfiguration.java, +	private final MetricsProperties properties;, +, +	public RestTemplateMetricsAutoConfiguration(MetricsProperties properties) {, +		this.properties = properties;, +	}, +, +			RestTemplateExchangeTagsProvider restTemplateTagConfigurer) {, +				this.properties.getWeb().getClient().getRequestsMetricName());, +	public MeterFilter metricsWebClientUriTagFilter() {, +		String metricName = this.properties.getWeb().getClient().getRequestsMetricName();, +		MeterFilter denyFilter = new OnlyOnceLoggingDenyMeterFilter(() -> String, +				.format("Reached the maximum number of URI tags for '%s'. Are you using ", +						+ "'uriVariables' on RestTemplate calls?", metricName));, +				this.properties.getWeb().getClient().getMaxUriTags(), denyFilter);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfiguration.java, +	private final MetricsProperties properties;, +, +	public WebFluxMetricsAutoConfiguration(MetricsProperties properties) {, +		this.properties = properties;, +	}, +, +			WebFluxTagsProvider tagConfigurer) {, +				this.properties.getWeb().getServer().getRequestsMetricName());, +	public MeterFilter metricsHttpServerUriTagFilter() {, +		String metricName = this.properties.getWeb().getServer().getRequestsMetricName();, +				this.properties.getWeb().getServer().getMaxUriTags(), filter);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/servlet/WebMvcMetricsAutoConfiguration.java, +	private final MetricsProperties properties;, +, +	public WebMvcMetricsAutoConfiguration(MetricsProperties properties) {, +		this.properties = properties;, +	}, +, +			MeterRegistry registry, WebMvcTagsProvider tagsProvider,, +			WebApplicationContext context) {, +		Server serverProperties = this.properties.getWeb().getServer();, +	public MeterFilter metricsHttpServerUriTagFilter() {, +		String metricName = this.properties.getWeb().getServer().getRequestsMetricName();, +				this.properties.getWeb().getServer().getMaxUriTags(), filter);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter.java, + * @author Jon Schneider, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsAutoConfiguration.java, +	private final MetricsProperties properties;, +, +	public RestTemplateMetricsAutoConfiguration(MetricsProperties properties) {, +		this.properties = properties;, +	}, +, +			RestTemplateExchangeTagsProvider restTemplateTagConfigurer) {]