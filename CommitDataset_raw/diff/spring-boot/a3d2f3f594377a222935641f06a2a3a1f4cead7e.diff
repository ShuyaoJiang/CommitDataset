[+++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/asciidoc/getting-started.adoc, +The plugin is published to the Spring milestones repository. For Gradle versions less, +than 4.10, this means that you must apply the plugin imperatively:, +For Gradle 4.10 and above, Gradle can be configured to use the milestones repository, +and it can be applied using the `plugins` block. To configure Gradle to use the milestones, +repository, add the following to your `settings.gradle` (Groovy) or `settings.gradle.kts`, +(Kotlin):, +The plugin can then be applied using the `plugins` block:, +endif::[], +ifeval::["{version-type}" == "SNAPSHOT"], +The plugin is published to the Spring snapshots repository. For Gradle versions less, +than 4.10, this means that you must apply the plugin imperatively:, +[source,groovy,indent=0,subs="verbatim,attributes"], +----, +include::../gradle/getting-started/apply-plugin-milestone.gradle[], +----, +, +For Gradle 4.10 and above, Gradle can be configured to use the snapshots repository, +and it can be applied using the `plugins` block. To configure Gradle to use the snapshots, +repository, add the following to your `settings.gradle` (Groovy) or `settings.gradle.kts`, +(Kotlin):, +, +The plugin can then be applied using the `plugins` block:, +, +[source,groovy,indent=0,subs="verbatim,attributes",role="primary"], +.Groovy, +----, +include::../gradle/getting-started/apply-plugin-release.gradle[], +----, +, +[source,kotlin,indent=0,subs="verbatim,attributes",role="secondary"], +.Kotlin, +----, +include::../gradle/getting-started/apply-plugin-release.gradle.kts[], +----, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/asciidoc/getting-started.adoc, +The plugin is published to the Spring milestones repository. For Gradle versions less, +than 4.10, this means that you must apply the plugin imperatively:, +For Gradle 4.10 and above, Gradle can be configured to use the milestones repository, +and it can be applied using the `plugins` block. To configure Gradle to use the milestones, +repository, add the following to your `settings.gradle` (Groovy) or `settings.gradle.kts`, +(Kotlin):, +The plugin can then be applied using the `plugins` block:, +endif::[], +ifeval::["{version-type}" == "SNAPSHOT"], +The plugin is published to the Spring snapshots repository. For Gradle versions less, +than 4.10, this means that you must apply the plugin imperatively:, +[source,groovy,indent=0,subs="verbatim,attributes"], +----, +include::../gradle/getting-started/apply-plugin-milestone.gradle[], +----, +, +For Gradle 4.10 and above, Gradle can be configured to use the snapshots repository, +and it can be applied using the `plugins` block. To configure Gradle to use the snapshots, +repository, add the following to your `settings.gradle` (Groovy) or `settings.gradle.kts`, +(Kotlin):, +, +The plugin can then be applied using the `plugins` block:, +, +[source,groovy,indent=0,subs="verbatim,attributes",role="primary"], +.Groovy, +----, +include::../gradle/getting-started/apply-plugin-release.gradle[], +----, +, +[source,kotlin,indent=0,subs="verbatim,attributes",role="secondary"], +.Kotlin, +----, +include::../gradle/getting-started/apply-plugin-release.gradle.kts[], +----, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/asciidoc/managing-dependencies.adoc, +The Kotlin code above is a bit awkward. That's because we're using the imperative way of, +applying the dependency management plugin., +We can make the code less awkward by applying the plugin from the root parent project, or, +by using the `plugins` block as we're doing for the Spring Boot plugin. A downside of this, +method is that it forces us to specify the version of the dependency management plugin:, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/asciidoc/getting-started.adoc, +The plugin is published to the Spring milestones repository. For Gradle versions less, +than 4.10, this means that you must apply the plugin imperatively:, +For Gradle 4.10 and above, Gradle can be configured to use the milestones repository, +and it can be applied using the `plugins` block. To configure Gradle to use the milestones, +repository, add the following to your `settings.gradle` (Groovy) or `settings.gradle.kts`, +(Kotlin):, +The plugin can then be applied using the `plugins` block:, +endif::[], +ifeval::["{version-type}" == "SNAPSHOT"], +The plugin is published to the Spring snapshots repository. For Gradle versions less, +than 4.10, this means that you must apply the plugin imperatively:, +[source,groovy,indent=0,subs="verbatim,attributes"], +----, +include::../gradle/getting-started/apply-plugin-milestone.gradle[], +----, +, +For Gradle 4.10 and above, Gradle can be configured to use the snapshots repository, +and it can be applied using the `plugins` block. To configure Gradle to use the snapshots, +repository, add the following to your `settings.gradle` (Groovy) or `settings.gradle.kts`, +(Kotlin):, +, +The plugin can then be applied using the `plugins` block:, +]