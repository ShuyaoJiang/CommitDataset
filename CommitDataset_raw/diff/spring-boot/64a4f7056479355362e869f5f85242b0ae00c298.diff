[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +If the server's context-path has been configured to anything other then `/`, the Cloud, +Foundry endpoints will not be available at the root of the application. For example, if, +`server.servlet.context-path=/app`, Cloud Foundry endpoints will be available at, +`/app/cloudfoundryapplication/*`., +If you expect the Cloud Foundry endpoints to always be available at, +`/cloudfoundryapplication/*`, regardless of the server's context-path, you will need to, +explicitly configure that in your application. The configuration will differ depending on, +the web server in use. For Tomcat, the following configuration can be added:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +If the server's context-path has been configured to anything other then `/`, the Cloud, +Foundry endpoints will not be available at the root of the application. For example, if, +`server.servlet.context-path=/app`, Cloud Foundry endpoints will be available at, +`/app/cloudfoundryapplication/*`., +If you expect the Cloud Foundry endpoints to always be available at, +`/cloudfoundryapplication/*`, regardless of the server's context-path, you will need to, +explicitly configure that in your application. The configuration will differ depending on, +the web server in use. For Tomcat, the following configuration can be added:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +spring.kafka.consumer.properties.spring.json.value.default.type=com.example.Invoice, +spring.kafka.consumer.properties.spring.json.trusted.packages=com.example,org.acme, +`runApplication<MyApplication>(*args)` as shown in the following example:, +class MyApplication, +	runApplication<MyApplication>(*args), +`SpringApplication.run(MyApplication::class.java, *args)`. It also allows customization, +runApplication<MyApplication>(*args) {, +	lateinit var name: String, +	lateinit var description: String, +	val myService = MyService(), +	class MyService {, +		lateinit var apiToken: String, +		lateinit var uri: URI]