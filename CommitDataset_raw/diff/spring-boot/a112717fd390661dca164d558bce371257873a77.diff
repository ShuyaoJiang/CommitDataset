[+++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/RunCommand.java, +	private OptionSpec<Void> localOption;, +, +		this.localOption = parser.accepts("local",, +				"Accumulate the dependencies in a local folder (./grapes)");, +		if (configuration.isLocal() && System.getProperty("grape.root") == null) {, +			System.setProperty("grape.root", ".");, +		}, +		public boolean isLocal() {, +			return this.options.has(RunCommand.this.localOption);, +		}, +, +		@Override, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/RunCommand.java, +	private OptionSpec<Void> localOption;, +, +		this.localOption = parser.accepts("local",, +				"Accumulate the dependencies in a local folder (./grapes)");, +		if (configuration.isLocal() && System.getProperty("grape.root") == null) {, +			System.setProperty("grape.root", ".");, +		}, +		public boolean isLocal() {, +			return this.options.has(RunCommand.this.localOption);, +		}, +, +		@Override, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringMvcCompilerAutoConfiguration.java, +				"org.springframework.web.servlet.config.annotation",, +				"org.springframework.http");, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/RunCommand.java, +	private OptionSpec<Void> localOption;, +, +		this.localOption = parser.accepts("local",, +				"Accumulate the dependencies in a local folder (./grapes)");, +		if (configuration.isLocal() && System.getProperty("grape.root") == null) {, +			System.setProperty("grape.root", ".");, +		}, +		public boolean isLocal() {, +			return this.options.has(RunCommand.this.localOption);, +		}, +, +		@Override, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringMvcCompilerAutoConfiguration.java, +				"org.springframework.web.servlet.config.annotation",, +				"org.springframework.http");, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/runner/BootstrapRunnerConfiguration.java, +	/**, +	 * Returns {@code true} if the dependencies should be cached locally, +	 */, +	boolean isLocal();, +, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/RunCommand.java, +	private OptionSpec<Void> localOption;, +, +		this.localOption = parser.accepts("local",, +				"Accumulate the dependencies in a local folder (./grapes)");, +		if (configuration.isLocal() && System.getProperty("grape.root") == null) {, +			System.setProperty("grape.root", ".");, +		}, +		public boolean isLocal() {, +			return this.options.has(RunCommand.this.localOption);, +		}, +, +		@Override, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringMvcCompilerAutoConfiguration.java, +				"org.springframework.web.servlet.config.annotation",, +				"org.springframework.http");, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/runner/BootstrapRunnerConfiguration.java, +	/**, +	 * Returns {@code true} if the dependencies should be cached locally, +	 */, +	boolean isLocal();, +, +++ b/spring-bootstrap-cli/src/main/scripts/spring, +for f in "${SPRING_HOME}"/classes "${SPRING_HOME}"/*.jar "${SPRING_HOME}"/lib/*.jar; do]