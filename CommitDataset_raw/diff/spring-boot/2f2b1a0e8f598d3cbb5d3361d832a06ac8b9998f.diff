[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfigurationTests.java, +	private AnnotationConfigApplicationContext context;, +, +		load(new Class<?>[] { TestConfiguration.class,, +				EmbeddedDataSourceConfiguration.class });, +		load(new Class<?>[] { TestCustomConfiguration.class });, +		load(new Class<?>[] { EmptyConfiguration.class,, +				EmbeddedDataSourceConfiguration.class });, +		load(new Class<?>[] { JobConfiguration.class,, +				EmbeddedDataSourceConfiguration.class });, +		load(new Class<?>[] { NamedJobConfigurationWithRegisteredJob.class,, +						EmbeddedDataSourceConfiguration.class },, +		load(new Class<?>[] { NamedJobConfigurationWithLocalJob.class,, +						EmbeddedDataSourceConfiguration.class },, +		load(new Class<?>[] { JobConfiguration.class,, +						EmbeddedDataSourceConfiguration.class },, +		load(new Class<?>[] { TestConfiguration.class,, +						EmbeddedDataSourceConfiguration.class },, +				"spring.datasource.generate-unique-name=true",, +		load(new Class<?>[] { TestConfiguration.class,, +				HibernateJpaAutoConfiguration.class });, +		load(new Class<?>[] { TestConfiguration.class,, +						EmbeddedDataSourceConfiguration.class,, +						HibernateJpaAutoConfiguration.class },, +				"spring.datasource.generate-unique-name=true",, +		load(new Class<?>[] { TestConfiguration.class,, +						HibernateJpaAutoConfiguration.class },, +				"spring.datasource.generate-unique-name=true",, +				"spring.batch.tablePrefix:PREFIX_");, +		load(new Class<?>[] { TestConfiguration.class,, +						EmbeddedDataSourceConfiguration.class,, +						HibernateJpaAutoConfiguration.class },, +		load(new Class<?>[] { TestConfiguration.class,, +						EmbeddedDataSourceConfiguration.class },, +	private void load(Class<?>[] configs, String... environment) {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(ctx, environment);, +		if (configs != null) {, +			ctx.register(configs);, +		}, +		ctx.register(BatchAutoConfiguration.class, TransactionAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		ctx.refresh();, +		this.context = ctx;, +	}, +]