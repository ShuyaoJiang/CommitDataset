[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void notElasticsearchHealthIndicator() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void notElasticsearchHealthIndicator() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties.java, +	 * Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void notElasticsearchHealthIndicator() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties.java, +	 * Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# JEST (Elasticsearch HTTP client) ({sc-spring-boot-autoconfigure}/jest/JestProperties.{sc-ext}[JestProperties]), +	spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void notElasticsearchHealthIndicator() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties.java, +	 * Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# JEST (Elasticsearch HTTP client) ({sc-spring-boot-autoconfigure}/jest/JestProperties.{sc-ext}[JestProperties]), +	spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +|Checks that an Elasticsearch cluster is up., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void notElasticsearchHealthIndicator() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties.java, +	 * Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# JEST (Elasticsearch HTTP client) ({sc-spring-boot-autoconfigure}/jest/JestProperties.{sc-ext}[JestProperties]), +	spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +|Checks that an Elasticsearch cluster is up., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +==== Connecting to Elasticsearch using Jest, +local in-memory server (a `Node` in Elasticsearch terms) and use the current working, +is to tell Elasticsearch where to store its files:, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void notElasticsearchHealthIndicator() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties.java, +	 * Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# JEST (Elasticsearch HTTP client) ({sc-spring-boot-autoconfigure}/jest/JestProperties.{sc-ext}[JestProperties]), +	spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +|Checks that an Elasticsearch cluster is up., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +==== Connecting to Elasticsearch using Jest, +local in-memory server (a `Node` in Elasticsearch terms) and use the current working, +is to tell Elasticsearch where to store its files:, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManager.java, + * {@link RequestExpectationManager} that strips the specified root URI from the, +	 * @param restTemplate the source REST template, +	 * @param restTemplate the source REST template, +	 * @param restTemplate the source REST template, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ElasticsearchHealthIndicatorConfiguration.java, + * Actual Elasticsearch health indicator configurations imported by, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void notElasticsearchHealthIndicator() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/jest/JestProperties.java, +	 * Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# JEST (Elasticsearch HTTP client) ({sc-spring-boot-autoconfigure}/jest/JestProperties.{sc-ext}[JestProperties]), +	spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use., +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +|Checks that an Elasticsearch cluster is up., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +==== Connecting to Elasticsearch using Jest, +local in-memory server (a `Node` in Elasticsearch terms) and use the current working, +is to tell Elasticsearch where to store its files:, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManager.java, + * {@link RequestExpectationManager} that strips the specified root URI from the, +	 * @param restTemplate the source REST template, +	 * @param restTemplate the source REST template, +	 * @param restTemplate the source REST template, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java, +	public void bindToShouldReturnMockRestServiceServer() throws Exception {, +	public void bindToWithExpectationManagerShouldReturnMockRestServiceServer(), +	public void forRestTemplateWhenNotUsingRootUriTemplateHandlerShouldReturnOriginalRequestExpectationManager()]