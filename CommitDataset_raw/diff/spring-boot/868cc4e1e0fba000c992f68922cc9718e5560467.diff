[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		kafkaAdmin.setFatalIfBrokerNotAvailable(this.properties.getAdmin().isFailFast());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		kafkaAdmin.setFatalIfBrokerNotAvailable(this.properties.getAdmin().isFailFast());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		 * Additional admin-specific properties used to configure the client., +		 * Fail fast if the broker is not available on startup., +		private boolean failFast;, +		public boolean isFailFast() {, +			return this.failFast;, +		public void setFailFast(boolean failFast) {, +			this.failFast = failFast;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		kafkaAdmin.setFatalIfBrokerNotAvailable(this.properties.getAdmin().isFailFast());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		 * Additional admin-specific properties used to configure the client., +		 * Fail fast if the broker is not available on startup., +		private boolean failFast;, +		public boolean isFailFast() {, +			return this.failFast;, +		public void setFailFast(boolean failFast) {, +			this.failFast = failFast;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfigurationTests.java, +				"spring.kafka.admin.fail-fast=true",, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		kafkaAdmin.setFatalIfBrokerNotAvailable(this.properties.getAdmin().isFailFast());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		 * Additional admin-specific properties used to configure the client., +		 * Fail fast if the broker is not available on startup., +		private boolean failFast;, +		public boolean isFailFast() {, +			return this.failFast;, +		public void setFailFast(boolean failFast) {, +			this.failFast = failFast;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfigurationTests.java, +				"spring.kafka.admin.fail-fast=true",, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.kafka.admin.fail-fast=false # Fail fast if the broker is not available on startup., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		kafkaAdmin.setFatalIfBrokerNotAvailable(this.properties.getAdmin().isFailFast());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		 * Additional admin-specific properties used to configure the client., +		 * Fail fast if the broker is not available on startup., +		private boolean failFast;, +		public boolean isFailFast() {, +			return this.failFast;, +		public void setFailFast(boolean failFast) {, +			this.failFast = failFast;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfigurationTests.java, +				"spring.kafka.admin.fail-fast=true",, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.kafka.admin.fail-fast=false # Fail fast if the broker is not available on startup., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +TIP: To create a topic on startup, simply add a bean of type `NewTopic`. If the topic, +already exists, the related bean is ignored., +]