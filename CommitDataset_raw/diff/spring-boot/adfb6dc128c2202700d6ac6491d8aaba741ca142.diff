[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteSpringApplication.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteSpringApplication.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/JsonReader.java, +		source.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +		item.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +			deprecation.setShortReason(this.sentenceExtractor.getFirstSentence(reason));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteSpringApplication.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/JsonReader.java, +		source.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +		item.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +			deprecation.setShortReason(this.sentenceExtractor.getFirstSentence(reason));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/SentenceExtractor.java, +			String sentence = text.substring(breakIterator.first(), breakIterator.next());, +			return removeSpaceBetweenLine(sentence.trim());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteSpringApplication.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/JsonReader.java, +		source.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +		item.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +			deprecation.setShortReason(this.sentenceExtractor.getFirstSentence(reason));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/SentenceExtractor.java, +			String sentence = text.substring(breakIterator.first(), breakIterator.next());, +			return removeSpaceBetweenLine(sentence.trim());, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/ClasspathLoggingApplicationListener.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteSpringApplication.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/JsonReader.java, +		source.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +		item.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +			deprecation.setShortReason(this.sentenceExtractor.getFirstSentence(reason));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/SentenceExtractor.java, +			String sentence = text.substring(breakIterator.first(), breakIterator.next());, +			return removeSpaceBetweenLine(sentence.trim());, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/ClasspathLoggingApplicationListener.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteSpringApplication.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/JsonReader.java, +		source.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +		item.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +			deprecation.setShortReason(this.sentenceExtractor.getFirstSentence(reason));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/SentenceExtractor.java, +			String sentence = text.substring(breakIterator.first(), breakIterator.next());, +			return removeSpaceBetweenLine(sentence.trim());, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/ClasspathLoggingApplicationListener.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteSpringApplication.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/JsonReader.java, +		source.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +		item.setShortDescription(this.sentenceExtractor.getFirstSentence(description));, +			deprecation.setShortReason(this.sentenceExtractor.getFirstSentence(reason));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata/src/main/java/org/springframework/boot/configurationmetadata/SentenceExtractor.java, +			String sentence = text.substring(breakIterator.first(), breakIterator.next());, +			return removeSpaceBetweenLine(sentence.trim());, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/ClasspathLoggingApplicationListener.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/builder/SpringApplicationBuilderTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +			if (!existing.containsKey("hibernate.hbm2ddl.auto"), +			if (existing.containsKey("hibernate.hbm2ddl.auto")) {]