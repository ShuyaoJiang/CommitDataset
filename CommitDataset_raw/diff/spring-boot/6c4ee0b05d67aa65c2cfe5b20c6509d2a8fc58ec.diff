[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/redis/RedisAutoConfiguration.java, +import org.apache.commons.pool.impl.GenericObjectPool;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;, +import org.springframework.boot.autoconfigure.redis.RedisAutoConfiguration.RedisProperties.Pool;, +import org.springframework.data.redis.connection.PoolConfig;, +import org.springframework.data.redis.connection.lettuce.DefaultLettucePool;, +import org.springframework.data.redis.connection.lettuce.LettucePool;, +	@ConditionalOnMissingClass(name = "org.apache.commons.pool.impl.GenericObjectPool"), +	protected static class RedisConnectionConfiguration {, +		@ConditionalOnMissingBean, +	}, +, +	@Configuration, +	@ConditionalOnClass(GenericObjectPool.class), +	protected static class RedisPooledConnectionConfiguration {, +, +		@Autowired, +		private RedisProperties config;, +, +		@Bean, +		@ConditionalOnMissingBean, +		RedisConnectionFactory redisConnectionFactory() throws UnknownHostException {, +			if (this.config.getPool() != null) {, +				LettuceConnectionFactory factory = new LettuceConnectionFactory(, +						lettucePool());, +				return factory;, +			}, +			LettuceConnectionFactory factory = new LettuceConnectionFactory(, +					this.config.getHost(), this.config.getPort());, +			if (this.config.getPassword() != null) {, +				factory.setPassword(this.config.getPassword());, +			}, +			return factory;, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public LettucePool lettucePool() {, +			return new DefaultLettucePool(this.config.getHost(), this.config.getPort(),, +					poolConfig());, +		}, +, +		private PoolConfig poolConfig() {, +			PoolConfig pool = new PoolConfig();, +			Pool props = this.config.getPool();, +			if (props != null) {, +				pool.setMaxActive(props.getMaxActive());, +				pool.setMaxIdle(props.getMaxIdle());, +				pool.setMinIdle(props.getMinIdle());, +				pool.setMaxWait(props.getMaxWait());, +			}, +			return pool;, +		}, +	}, +, +	@Configuration, +	@EnableConfigurationProperties(RedisProperties.class), +	protected static class RedisConfiguration {, +, +		@Autowired, +		private RedisProperties config;, +, +		private Pool pool;, +, +		public Pool getPool() {, +			return this.pool;, +		}, +, +		public void setPool(Pool pool) {, +			this.pool = pool;, +		}, +, +		public static class Pool {, +			private int maxIdle = 8;, +			private int minIdle = 0;, +			private int maxActive = 8;, +			private int maxWait = -1;, +, +			public int getMaxIdle() {, +				return this.maxIdle;, +			}, +, +			public void setMaxIdle(int maxIdle) {, +				this.maxIdle = maxIdle;, +			}, +, +			public int getMinIdle() {, +				return this.minIdle;, +			}, +, +			public void setMinIdle(int minIdle) {, +				this.minIdle = minIdle;, +			}, +, +			public int getMaxActive() {, +				return this.maxActive;, +			}, +, +			public void setMaxActive(int maxActive) {, +				this.maxActive = maxActive;]