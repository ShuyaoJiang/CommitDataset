[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.velocity</groupId>, +			<artifactId>velocity</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.velocity</groupId>, +			<artifactId>velocity</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateViewResolverConfigurer;, +			Resource resource = this.resourceLoader.getResource(this.properties, +					.getTemplateLoaderPath());, +			new TemplateViewResolverConfigurer().configureTemplateViewResolver(resolver,, +					this.properties);, +, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.velocity</groupId>, +			<artifactId>velocity</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateViewResolverConfigurer;, +			Resource resource = this.resourceLoader.getResource(this.properties, +					.getTemplateLoaderPath());, +			new TemplateViewResolverConfigurer().configureTemplateViewResolver(resolver,, +					this.properties);, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.java, +import org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties;, + * {@link ConfigurationProperties} for configuring FreeMarker, + *, + * @author Andy Wilkinson, +public class FreeMarkerProperties extends AbstractTemplateViewResolverProperties {, +	private Map<String, String> settings = new HashMap<String, String>();, +	public FreeMarkerProperties() {, +		super(DEFAULT_PREFIX, DEFAULT_SUFFIX);, +	public String getTemplateLoaderPath() {, +		return this.templateLoaderPath;, +	}, +, +	public void setTemplateLoaderPath(String templateLoaderPath) {, +		this.templateLoaderPath = templateLoaderPath;, +	}, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.apache.velocity</groupId>, +			<artifactId>velocity</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.template.TemplateViewResolverConfigurer;, +			Resource resource = this.resourceLoader.getResource(this.properties, +					.getTemplateLoaderPath());, +			new TemplateViewResolverConfigurer().configureTemplateViewResolver(resolver,, +					this.properties);, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.java, +import org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties;, + * {@link ConfigurationProperties} for configuring FreeMarker, + *, + * @author Andy Wilkinson, +public class FreeMarkerProperties extends AbstractTemplateViewResolverProperties {, +	private Map<String, String> settings = new HashMap<String, String>();, +	public FreeMarkerProperties() {, +		super(DEFAULT_PREFIX, DEFAULT_SUFFIX);, +	public String getTemplateLoaderPath() {, +		return this.templateLoaderPath;, +	}, +, +	public void setTemplateLoaderPath(String templateLoaderPath) {, +		this.templateLoaderPath = templateLoaderPath;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/template/AbstractTemplateViewResolverProperties.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.template;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import org.springframework.web.servlet.view.AbstractTemplateViewResolver;, +, +/**]