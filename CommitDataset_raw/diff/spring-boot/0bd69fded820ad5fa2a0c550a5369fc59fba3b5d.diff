[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.java, +import java.util.concurrent.ScheduledExecutorService;, +, +	@ConditionalOnMissingBean({ SchedulingConfigurer.class, TaskScheduler.class,, +			ScheduledExecutorService.class }), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.java, +import java.util.concurrent.ScheduledExecutorService;, +, +	@ConditionalOnMissingBean({ SchedulingConfigurer.class, TaskScheduler.class,, +			ScheduledExecutorService.class }), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java, +import java.util.concurrent.Executors;, +import java.util.concurrent.ScheduledExecutorService;, +	public void enableSchedulingWithExistingScheduledExecutorServiceBacksOff() {, +		this.contextRunner.withUserConfiguration(SchedulingConfiguration.class,, +				ScheduledExecutorServiceConfiguration.class).run((context) -> {, +					assertThat(context).doesNotHaveBean(TaskScheduler.class);, +					assertThat(context).hasSingleBean(ScheduledExecutorService.class);, +					TestBean bean = context.getBean(TestBean.class);, +					Thread.sleep(15);, +					assertThat(bean.threadNames), +							.allMatch((name) -> name.contains("pool-"));, +				});, +	}, +, +	@Test, +	static class ScheduledExecutorServiceConfiguration {, +, +		@Bean, +		public ScheduledExecutorService customScheduledExecutorService() {, +			return Executors.newScheduledThreadPool(2);, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.java, +import java.util.concurrent.ScheduledExecutorService;, +, +	@ConditionalOnMissingBean({ SchedulingConfigurer.class, TaskScheduler.class,, +			ScheduledExecutorService.class }), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java, +import java.util.concurrent.Executors;, +import java.util.concurrent.ScheduledExecutorService;, +	public void enableSchedulingWithExistingScheduledExecutorServiceBacksOff() {, +		this.contextRunner.withUserConfiguration(SchedulingConfiguration.class,, +				ScheduledExecutorServiceConfiguration.class).run((context) -> {, +					assertThat(context).doesNotHaveBean(TaskScheduler.class);, +					assertThat(context).hasSingleBean(ScheduledExecutorService.class);, +					TestBean bean = context.getBean(TestBean.class);, +					Thread.sleep(15);, +					assertThat(bean.threadNames), +							.allMatch((name) -> name.contains("pool-"));, +				});, +	}, +, +	@Test, +	static class ScheduledExecutorServiceConfiguration {, +, +		@Bean, +		public ScheduledExecutorService customScheduledExecutorService() {, +			return Executors.newScheduledThreadPool(2);, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Both a `TaskExecutorBuilder` bean and a `TaskSchedulerBuilder` bean are made available in, +the context if a custom executor or scheduler needs to be created.]