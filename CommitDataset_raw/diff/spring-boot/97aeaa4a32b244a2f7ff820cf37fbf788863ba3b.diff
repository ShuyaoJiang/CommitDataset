[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>javax.json.bind</groupId>, +			<artifactId>javax.json.bind-api</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>javax.json</groupId>, +			<artifactId>javax.json-api</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +			<groupId>org.apache.johnzon</groupId>, +			<artifactId>johnzon-jsonb</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>javax.json.bind</groupId>, +			<artifactId>javax.json.bind-api</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>javax.json</groupId>, +			<artifactId>javax.json-api</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +			<groupId>org.apache.johnzon</groupId>, +			<artifactId>johnzon-jsonb</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +import org.springframework.boot.autoconfigure.condition.NoneNestedConditions;, + * @author Eddú Meléndez, +	@Conditional(PreferGsonOrMissingJacksonAndJsonbCondition.class), +	private static class PreferGsonOrMissingJacksonAndJsonbCondition extends AnyNestedCondition {, +		PreferGsonOrMissingJacksonAndJsonbCondition() {, +		@Conditional(JacksonAndJsonbMissing.class), +		static class JacksonJsonbMissing {, +, +		}, +, +	}, +, +	private static class JacksonAndJsonbMissing extends NoneNestedConditions {, +, +		JacksonAndJsonbMissing() {, +			super(ConfigurationPhase.REGISTER_BEAN);, +		}, +, +		@ConditionalOnBean(MappingJackson2HttpMessageConverter.class), +		@ConditionalOnProperty(name = HttpMessageConvertersAutoConfiguration.PREFERRED_MAPPER_PROPERTY, havingValue = "jsonb"), +		static class JsonbMissing {, +, +		}, +, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>javax.json.bind</groupId>, +			<artifactId>javax.json.bind-api</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>javax.json</groupId>, +			<artifactId>javax.json-api</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +			<groupId>org.apache.johnzon</groupId>, +			<artifactId>johnzon-jsonb</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +import org.springframework.boot.autoconfigure.condition.NoneNestedConditions;, + * @author Eddú Meléndez, +	@Conditional(PreferGsonOrMissingJacksonAndJsonbCondition.class), +	private static class PreferGsonOrMissingJacksonAndJsonbCondition extends AnyNestedCondition {, +		PreferGsonOrMissingJacksonAndJsonbCondition() {, +		@Conditional(JacksonAndJsonbMissing.class), +		static class JacksonJsonbMissing {, +, +		}, +, +	}, +, +	private static class JacksonAndJsonbMissing extends NoneNestedConditions {, +, +		JacksonAndJsonbMissing() {, +			super(ConfigurationPhase.REGISTER_BEAN);, +		}, +, +		@ConditionalOnBean(MappingJackson2HttpMessageConverter.class), +		@ConditionalOnProperty(name = HttpMessageConvertersAutoConfiguration.PREFERRED_MAPPER_PROPERTY, havingValue = "jsonb"), +		static class JsonbMissing {, +, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.java, +import org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration;]