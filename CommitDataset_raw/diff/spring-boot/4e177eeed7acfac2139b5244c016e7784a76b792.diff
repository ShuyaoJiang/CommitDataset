[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain;, +import org.springframework.web.servlet.resource.ResourceUrlEncodingFilter;, + * @author Kazuki Shimizu, +		@Bean, +		@ConditionalOnMissingBean, +		@ConditionalOnEnabledResourceChain, +		public ResourceUrlEncodingFilter resourceUrlEncodingFilter() {, +			return new ResourceUrlEncodingFilter();, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain;, +import org.springframework.web.servlet.resource.ResourceUrlEncodingFilter;, + * @author Kazuki Shimizu, +		@Bean, +		@ConditionalOnMissingBean, +		@ConditionalOnEnabledResourceChain, +		public ResourceUrlEncodingFilter resourceUrlEncodingFilter() {, +			return new ResourceUrlEncodingFilter();, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfigurationTests.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.web.servlet.resource.ResourceUrlEncodingFilter;, + * @author Kazuki Shimizu, +	@Test, +	public void registerResourceHandlingFilterDisabledByDefault() throws Exception {, +		registerAndRefreshContext();, +		assertThat(this.context.getBeansOfType(ResourceUrlEncodingFilter.class)), +				.isEmpty();, +	}, +, +	@Test, +	public void registerResourceHandlingFilterOnlyIfResourceChainIsEnabled(), +			throws Exception {, +		registerAndRefreshContext("spring.resources.chain.enabled:true");, +		assertThat(this.context.getBean(ResourceUrlEncodingFilter.class)).isNotNull();, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain;, +import org.springframework.web.servlet.resource.ResourceUrlEncodingFilter;, + * @author Kazuki Shimizu, +		@Bean, +		@ConditionalOnMissingBean, +		@ConditionalOnEnabledResourceChain, +		public ResourceUrlEncodingFilter resourceUrlEncodingFilter() {, +			return new ResourceUrlEncodingFilter();, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfigurationTests.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.web.servlet.resource.ResourceUrlEncodingFilter;, + * @author Kazuki Shimizu, +	@Test, +	public void registerResourceHandlingFilterDisabledByDefault() throws Exception {, +		registerAndRefreshContext();, +		assertThat(this.context.getBeansOfType(ResourceUrlEncodingFilter.class)), +				.isEmpty();, +	}, +, +	@Test, +	public void registerResourceHandlingFilterOnlyIfResourceChainIsEnabled(), +			throws Exception {, +		registerAndRefreshContext("spring.resources.chain.enabled:true");, +		assertThat(this.context.getBean(ResourceUrlEncodingFilter.class)).isNotNull();, +	}, +, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +`ResourceUrlEncodingFilter`, auto-configured for Thymeleaf, Velocity and FreeMarker. You, +should manually declare this filter when using JSPs. Other template engines aren't, +automatically supported right now, but can be with custom template macros/helpers and the, +use of the]