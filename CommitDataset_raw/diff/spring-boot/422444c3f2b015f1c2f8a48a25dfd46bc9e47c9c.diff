[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, + * @author Stephane Nicoll, +	@EnableConfigurationProperties(WebMvcProperties.class), +		@Autowired, +		private WebMvcProperties webMvcProperties;, +, +			DispatcherServlet dispatcherServlet = new DispatcherServlet();, +			dispatcherServlet.setThrowExceptionIfNoHandlerFound(, +					this.webMvcProperties.isThrowExceptionIfNoHandlerFound());, +			return dispatcherServlet;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, + * @author Stephane Nicoll, +	@EnableConfigurationProperties(WebMvcProperties.class), +		@Autowired, +		private WebMvcProperties webMvcProperties;, +, +			DispatcherServlet dispatcherServlet = new DispatcherServlet();, +			dispatcherServlet.setThrowExceptionIfNoHandlerFound(, +					this.webMvcProperties.isThrowExceptionIfNoHandlerFound());, +			return dispatcherServlet;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	/**, +	 * If a "NoHandlerFoundException" should be thrown if no Handler was found to process, +	 * a request., +	 */, +	private boolean throwExceptionIfNoHandlerFound = false;, +, +	public boolean isThrowExceptionIfNoHandlerFound() {, +		return this.throwExceptionIfNoHandlerFound;, +	}, +, +	public void setThrowExceptionIfNoHandlerFound(boolean throwExceptionIfNoHandlerFound) {, +		this.throwExceptionIfNoHandlerFound = throwExceptionIfNoHandlerFound;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, + * @author Stephane Nicoll, +	@EnableConfigurationProperties(WebMvcProperties.class), +		@Autowired, +		private WebMvcProperties webMvcProperties;, +, +			DispatcherServlet dispatcherServlet = new DispatcherServlet();, +			dispatcherServlet.setThrowExceptionIfNoHandlerFound(, +					this.webMvcProperties.isThrowExceptionIfNoHandlerFound());, +			return dispatcherServlet;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	/**, +	 * If a "NoHandlerFoundException" should be thrown if no Handler was found to process, +	 * a request., +	 */, +	private boolean throwExceptionIfNoHandlerFound = false;, +, +	public boolean isThrowExceptionIfNoHandlerFound() {, +		return this.throwExceptionIfNoHandlerFound;, +	}, +, +	public void setThrowExceptionIfNoHandlerFound(boolean throwExceptionIfNoHandlerFound) {, +		this.throwExceptionIfNoHandlerFound = throwExceptionIfNoHandlerFound;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.beans.DirectFieldAccessor;, +	@After, +	public void closeContext() {, +		if (this.context != null) {, +			this.context.close();, +		}, +	}, +, +	@Test, +	public void dispatcherServletConfig() {, +		this.context = new AnnotationConfigWebApplicationContext();, +		this.context.setServletContext(new MockServletContext());, +		this.context.register(ServerPropertiesAutoConfiguration.class,, +				DispatcherServletAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.mvc.throw-exception-if-no-handler-found:true");, +		this.context.refresh();, +		DispatcherServlet bean = this.context.getBean(DispatcherServlet.class);, +		assertEquals(true, new DirectFieldAccessor(bean)., +				getPropertyValue("throwExceptionIfNoHandlerFound"));, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, + * @author Stephane Nicoll, +	@EnableConfigurationProperties(WebMvcProperties.class), +		@Autowired, +		private WebMvcProperties webMvcProperties;, +, +			DispatcherServlet dispatcherServlet = new DispatcherServlet();, +			dispatcherServlet.setThrowExceptionIfNoHandlerFound(, +					this.webMvcProperties.isThrowExceptionIfNoHandlerFound());, +			return dispatcherServlet;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	/**]