[+++ b/SUPPORT.adoc, +We choose not use GitHub issues for general usage questions and support, preferring to, +++ b/SUPPORT.adoc, +We choose not use GitHub issues for general usage questions and support, preferring to, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurations.java, + * @author Phillip Webb, +++ b/SUPPORT.adoc, +We choose not use GitHub issues for general usage questions and support, preferring to, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurations.java, + * @author Phillip Webb, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +			 * Invokes the endpoint with a batch of ConsumerRecords., +++ b/SUPPORT.adoc, +We choose not use GitHub issues for general usage questions and support, preferring to, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurations.java, + * @author Phillip Webb, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +			 * Invokes the endpoint with a batch of ConsumerRecords., +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/AbstractApplicationContextTester.java, + *     this.context.withPropertyValues("spring.foo=biz").run((loaded) -&gt; {, + *     this.context.withPropertyValues("spring.foo=fails").run((loaded) -&gt; {, + *         assertThat(loaded).getFailure().hasCauseInstanceOf(BadPropertyException.class);, +++ b/SUPPORT.adoc, +We choose not use GitHub issues for general usage questions and support, preferring to, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurations.java, + * @author Phillip Webb, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +			 * Invokes the endpoint with a batch of ConsumerRecords., +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/AbstractApplicationContextTester.java, + *     this.context.withPropertyValues("spring.foo=biz").run((loaded) -&gt; {, + *     this.context.withPropertyValues("spring.foo=fails").run((loaded) -&gt; {, + *         assertThat(loaded).getFailure().hasCauseInstanceOf(BadPropertyException.class);, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/context/AssertProviderApplicationContextTests.java, +	public void getWhenTypeIsNullShouldThrowException() throws Exception {, +++ b/SUPPORT.adoc, +We choose not use GitHub issues for general usage questions and support, preferring to, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurations.java, + * @author Phillip Webb, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +			 * Invokes the endpoint with a batch of ConsumerRecords., +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/AbstractApplicationContextTester.java, + *     this.context.withPropertyValues("spring.foo=biz").run((loaded) -&gt; {, + *     this.context.withPropertyValues("spring.foo=fails").run((loaded) -&gt; {, + *         assertThat(loaded).getFailure().hasCauseInstanceOf(BadPropertyException.class);, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/context/AssertProviderApplicationContextTests.java, +	public void getWhenTypeIsNullShouldThrowException() throws Exception {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/annotation/Configurations.java, +	 * Return the classes from all the specified configurations in the order that they, +	 * Return the classes from all the specified configurations in the order that they]