[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +	 * @return the servlet, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +	 * @return the servlet, +++ b/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java, +	 * different but related subtransactions. This setting has no effect on resource access, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +	 * @return the servlet, +++ b/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java, +	 * different but related subtransactions. This setting has no effect on resource access, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentHandler.java, +					"The urlPatterns and value attributes are mutually exclusive.");, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +	 * @return the servlet, +++ b/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java, +	 * different but related subtransactions. This setting has no effect on resource access, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentHandler.java, +					"The urlPatterns and value attributes are mutually exclusive.");, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentRegisteringPostProcessor.java, +		List<ServletComponentHandler> handlers = new ArrayList<ServletComponentHandler>();, +		handlers.add(new WebServletHandler());, +		handlers.add(new WebFilterHandler());, +		handlers.add(new WebListenerHandler());, +		HANDLERS = Collections.unmodifiableList(handlers);, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +	 * @return the servlet, +++ b/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java, +	 * different but related subtransactions. This setting has no effect on resource access, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentHandler.java, +					"The urlPatterns and value attributes are mutually exclusive.");, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentRegisteringPostProcessor.java, +		List<ServletComponentHandler> handlers = new ArrayList<ServletComponentHandler>();, +		handlers.add(new WebServletHandler());, +		handlers.add(new WebFilterHandler());, +		handlers.add(new WebListenerHandler());, +		HANDLERS = Collections.unmodifiableList(handlers);, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/BindingPreparationTests.java, +		// Then it would have to be actually bound to get the list to auto-grow, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +	 * @return the servlet, +++ b/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java, +	 * different but related subtransactions. This setting has no effect on resource access, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentHandler.java, +					"The urlPatterns and value attributes are mutually exclusive.");, +++ b/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentRegisteringPostProcessor.java, +		List<ServletComponentHandler> handlers = new ArrayList<ServletComponentHandler>();, +		handlers.add(new WebServletHandler());, +		handlers.add(new WebFilterHandler());, +		handlers.add(new WebListenerHandler());, +		HANDLERS = Collections.unmodifiableList(handlers);, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/BindingPreparationTests.java, +		// Then it would have to be actually bound to get the list to auto-grow, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/RelaxedDataBinderTests.java, +	public void testBindNestedWithEnvironmentStyle() throws Exception {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	 * Reset any cached handlers just in case a jar protocol has already been used. We, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	 * @param args the application arguments, +	 * @param args the application arguments, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +	 * @return the servlet, +++ b/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java, +	 * different but related subtransactions. This setting has no effect on resource access]