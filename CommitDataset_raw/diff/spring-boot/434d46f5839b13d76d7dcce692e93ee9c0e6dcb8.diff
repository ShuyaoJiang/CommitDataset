[+++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties.java, +	private Proxy proxy = new Proxy();, +, +	public Proxy getProxy() {, +		return this.proxy;, +	}, +, +	public static class Proxy {, +, +		/**, +		 * The host of the proxy to use to connect to the remote application., +		 */, +		private String host;, +, +		/**, +		 * The port of the proxy to use to connect to the remote application., +		 */, +		private Integer port;, +, +		public String getHost() {, +			return this.host;, +		}, +, +		public void setHost(String host) {, +			this.host = host;, +		}, +, +		public Integer getPort() {, +			return this.port;, +		}, +, +		public void setPort(Integer port) {, +			this.port = port;, +		}, +, +	}, +, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties.java, +	private Proxy proxy = new Proxy();, +, +	public Proxy getProxy() {, +		return this.proxy;, +	}, +, +	public static class Proxy {, +, +		/**, +		 * The host of the proxy to use to connect to the remote application., +		 */, +		private String host;, +, +		/**, +		 * The port of the proxy to use to connect to the remote application., +		 */, +		private Integer port;, +, +		public String getHost() {, +			return this.host;, +		}, +, +		public void setHost(String host) {, +			this.host = host;, +		}, +, +		public Integer getPort() {, +			return this.port;, +		}, +, +		public void setPort(Integer port) {, +			this.port = port;, +		}, +, +	}, +, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/remote/client/RemoteClientConfiguration.java, +import java.net.InetSocketAddress;, +import java.net.Proxy.Type;, +import org.springframework.boot.devtools.autoconfigure.RemoteDevToolsProperties.Proxy;, +		SimpleClientHttpRequestFactory requestFactory = new SimpleClientHttpRequestFactory();, +		Proxy proxy = this.properties.getRemote().getProxy();, +		if (proxy.getHost() != null && proxy.getPort() != null) {, +			requestFactory.setProxy(new java.net.Proxy(Type.HTTP, new InetSocketAddress(, +					proxy.getHost(), proxy.getPort())));, +		}, +		return new InterceptingClientHttpRequestFactory(requestFactory, interceptors);, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/RemoteDevToolsProperties.java, +	private Proxy proxy = new Proxy();, +, +	public Proxy getProxy() {, +		return this.proxy;, +	}, +, +	public static class Proxy {, +, +		/**, +		 * The host of the proxy to use to connect to the remote application., +		 */, +		private String host;, +, +		/**]