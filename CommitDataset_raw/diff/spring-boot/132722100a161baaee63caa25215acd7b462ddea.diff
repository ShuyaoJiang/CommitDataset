[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java, +		Log applicationLog = getApplicationLog();, +		new StartupInfoLogger(this.mainApplicationClass).log(applicationLog);, +		if (applicationLog.isDebugEnabled()) {, +			applicationLog.debug("Sources: " + this.sources);, +		}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java, +		Log applicationLog = getApplicationLog();, +		new StartupInfoLogger(this.mainApplicationClass).log(applicationLog);, +		if (applicationLog.isDebugEnabled()) {, +			applicationLog.debug("Sources: " + this.sources);, +		}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/StartupInfoLogger.java, +		if (log.isInfoEnabled()) {, +			log.info(getStartupMessage());, +		}, +		if (log.isDebugEnabled()) {, +			log.debug(getRunningMessage());, +		}, +	}, +, +	private String getStartupMessage() {, +		return message.toString();, +	}, +, +	private StringBuilder getRunningMessage() {, +		StringBuilder message = new StringBuilder();, +		return message;, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java, +		Log applicationLog = getApplicationLog();, +		new StartupInfoLogger(this.mainApplicationClass).log(applicationLog);, +		if (applicationLog.isDebugEnabled()) {, +			applicationLog.debug("Sources: " + this.sources);, +		}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/StartupInfoLogger.java, +		if (log.isInfoEnabled()) {, +			log.info(getStartupMessage());, +		}, +		if (log.isDebugEnabled()) {, +			log.debug(getRunningMessage());, +		}, +	}, +, +	private String getStartupMessage() {, +		return message.toString();, +	}, +, +	private StringBuilder getRunningMessage() {, +		StringBuilder message = new StringBuilder();, +		return message;, +++ b/spring-bootstrap/src/main/resources/org/springframework/bootstrap/logging/logback/logback.xml, +	<logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN"/>, +	<logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN"/>, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java, +		Log applicationLog = getApplicationLog();, +		new StartupInfoLogger(this.mainApplicationClass).log(applicationLog);, +		if (applicationLog.isDebugEnabled()) {, +			applicationLog.debug("Sources: " + this.sources);, +		}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/StartupInfoLogger.java, +		if (log.isInfoEnabled()) {, +			log.info(getStartupMessage());, +		}, +		if (log.isDebugEnabled()) {, +			log.debug(getRunningMessage());, +		}, +	}, +, +	private String getStartupMessage() {, +		return message.toString();, +	}, +, +	private StringBuilder getRunningMessage() {, +		StringBuilder message = new StringBuilder();, +		return message;, +++ b/spring-bootstrap/src/main/resources/org/springframework/bootstrap/logging/logback/logback.xml, +	<logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN"/>, +	<logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN"/>, +++ /dev/null, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/SpringApplication.java, +		Log applicationLog = getApplicationLog();, +		new StartupInfoLogger(this.mainApplicationClass).log(applicationLog);, +		if (applicationLog.isDebugEnabled()) {, +			applicationLog.debug("Sources: " + this.sources);, +		}, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/StartupInfoLogger.java, +		if (log.isInfoEnabled()) {, +			log.info(getStartupMessage());, +		}, +		if (log.isDebugEnabled()) {, +			log.debug(getRunningMessage());, +		}, +	}, +, +	private String getStartupMessage() {, +		return message.toString();, +	}, +, +	private StringBuilder getRunningMessage() {, +		StringBuilder message = new StringBuilder();]