[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +	private DataSize maxHttpHeaderSize = DataSize.ofKiloBytes(8);, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "server.max-http-header-size"), +		@Deprecated, +		public void setMaxHttpHeaderSize(int maxHttpHeaderSize) {, +			this.maxHttpHeaderSize = maxHttpHeaderSize;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +	private DataSize maxHttpHeaderSize = DataSize.ofKiloBytes(8);, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "server.max-http-header-size"), +		@Deprecated, +		public void setMaxHttpHeaderSize(int maxHttpHeaderSize) {, +			this.maxHttpHeaderSize = maxHttpHeaderSize;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +	@SuppressWarnings("deprecation"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +	private DataSize maxHttpHeaderSize = DataSize.ofKiloBytes(8);, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "server.max-http-header-size"), +		@Deprecated, +		public void setMaxHttpHeaderSize(int maxHttpHeaderSize) {, +			this.maxHttpHeaderSize = maxHttpHeaderSize;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +	@SuppressWarnings("deprecation"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +		bind("server.max-http-header-size", "1MB");, +				.isEqualTo(DataSize.ofMegaBytes(1));, +	}, +, +	@Test, +	public void testCustomizeHeaderSizeUseBytesByDefault() {, +		bind("server.max-http-header-size", "1024");, +		assertThat(this.properties.getMaxHttpHeaderSize()), +				.isEqualTo(DataSize.ofKiloBytes(1));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +	private DataSize maxHttpHeaderSize = DataSize.ofKiloBytes(8);, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "server.max-http-header-size"), +		@Deprecated, +		public void setMaxHttpHeaderSize(int maxHttpHeaderSize) {, +			this.maxHttpHeaderSize = maxHttpHeaderSize;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +	@SuppressWarnings("deprecation"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +		bind("server.max-http-header-size", "1MB");, +				.isEqualTo(DataSize.ofMegaBytes(1));, +	}, +, +	@Test, +	public void testCustomizeHeaderSizeUseBytesByDefault() {, +		bind("server.max-http-header-size", "1024");, +		assertThat(this.properties.getMaxHttpHeaderSize()), +				.isEqualTo(DataSize.ofKiloBytes(1));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +	public void customMaxHttpHeaderSize() {, +		bind("server.max-http-header-size=1KB");, +		customizeAndRunServer((server) -> assertThat(((AbstractHttp11Protocol<?>) server, +				.getTomcat().getConnector().getProtocolHandler()).getMaxHttpHeaderSize()), +						.isEqualTo(DataSize.ofKiloBytes(1).toBytes()));, +	}, +, +	@Test, +	@Deprecated, +	public void customMaxHttpHeaderSizeWithDeprecatedProperty() {, +		bind("server.max-http-header-size=4KB",, +				"server.tomcat.max-http-header-size=1024");, +		customizeAndRunServer((server) -> assertThat(((AbstractHttp11Protocol<?>) server, +				.getTomcat().getConnector().getProtocolHandler()).getMaxHttpHeaderSize()), +						.isEqualTo(DataSize.ofKiloBytes(1).toBytes()));, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;, +	private DataSize maxHttpHeaderSize = DataSize.ofKiloBytes(8);, +		@Deprecated, +		@DeprecatedConfigurationProperty(replacement = "server.max-http-header-size"), +		@Deprecated, +		public void setMaxHttpHeaderSize(int maxHttpHeaderSize) {, +			this.maxHttpHeaderSize = maxHttpHeaderSize;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +	@SuppressWarnings("deprecation"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +		bind("server.max-http-header-size", "1MB");, +				.isEqualTo(DataSize.ofMegaBytes(1));]