[+++ b/spring-boot-docs/src/main/asciidoc/using-spring-boot.adoc, +The Spring Boot Gradle plugin also includes a `bootRun` task which can be used to run, +++ b/spring-boot-docs/src/main/asciidoc/using-spring-boot.adoc, +The Spring Boot Gradle plugin also includes a `bootRun` task which can be used to run, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/SpringBootPlugin.groovy, +++ b/spring-boot-docs/src/main/asciidoc/using-spring-boot.adoc, +The Spring Boot Gradle plugin also includes a `bootRun` task which can be used to run, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/SpringBootPlugin.groovy, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/run/FindMainClassTask.java, +import org.gradle.api.plugins.ExtraPropertiesExtension;, + * @author Andy Wilkinson, +		if (!project.hasProperty("mainClassName"), +				|| project.property("mainClassName") == null) {, +			String mainClass = findMainClass();, +			if (project.hasProperty("mainClassName")) {, +				project.setProperty("mainClassName", mainClass);, +			}, +			else {, +				ExtraPropertiesExtension extraProperties = (ExtraPropertiesExtension) project, +						.getExtensions().getByName("ext");, +				extraProperties.set("mainClassName", mainClass);, +			}, +, +		if (mainClass == null && application != null) {, +		Task runTask = project.getTasks().findByName("run");, +		if (mainClass == null && runTask != null) {, +		if (application != null && application.getMainClassName() == null) {, +		if (runTask != null && !runTask.hasProperty("main")) {]