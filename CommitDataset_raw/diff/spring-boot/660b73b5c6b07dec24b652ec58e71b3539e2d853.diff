[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +import java.util.ArrayList;, +import java.util.List;, +import org.springframework.core.convert.ConversionService;, +import org.springframework.core.convert.support.DefaultConversionService;, +import com.fasterxml.jackson.databind.BeanDescription;, +import com.fasterxml.jackson.databind.SerializationConfig;, +import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;, +import com.fasterxml.jackson.databind.ser.BeanSerializerFactory;, +import com.fasterxml.jackson.databind.ser.BeanSerializerModifier;, +import com.fasterxml.jackson.databind.ser.SerializerFactory;, +		applySerializationModifier(mapper);, +	}, +, +	/**, +	 * Ensure only bindable and non-cyclic bean properties are reported., +	 */, +	private void applySerializationModifier(ObjectMapper mapper) {, +		SerializerFactory factory = BeanSerializerFactory.instance, +				.withSerializerModifier(new GenericSerializerModifier());, +		mapper.setSerializerFactory(factory);, +	protected static class GenericSerializerModifier extends BeanSerializerModifier {, +, +		private ConversionService conversionService = new DefaultConversionService();, +, +		@Override, +		public List<BeanPropertyWriter> changeProperties(SerializationConfig config,, +				BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties) {, +			List<BeanPropertyWriter> result = new ArrayList<BeanPropertyWriter>();, +			for (BeanPropertyWriter writer : beanProperties) {, +				AnnotatedMethod setter = beanDesc.findMethod(, +						"set" + StringUtils.capitalize(writer.getName()),, +						new Class<?>[] { writer.getPropertyType() });, +				if (setter != null, +						&& this.conversionService.canConvert(String.class,, +								writer.getPropertyType())) {, +					result.add(writer);, +				}, +			}, +			return result;, +		}, +, +	}, +]