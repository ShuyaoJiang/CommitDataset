[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.EmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedWebApplicationContext;, +			registerContainer(this.applicationContext,, +					childContext.getEmbeddedServletContainer());, +	};, +, +	private void registerContainer(ApplicationContext applicationContext,, +			EmbeddedServletContainer embeddedServletContainer) {, +		if (applicationContext instanceof EmbeddedWebApplicationContext) {, +			((EmbeddedWebApplicationContext) applicationContext), +					.getEmbeddedServletContainers().put("management",, +							embeddedServletContainer);, +			// Maybe unregister it when it shuts down?, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.EmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedWebApplicationContext;, +			registerContainer(this.applicationContext,, +					childContext.getEmbeddedServletContainer());, +	};, +, +	private void registerContainer(ApplicationContext applicationContext,, +			EmbeddedServletContainer embeddedServletContainer) {, +		if (applicationContext instanceof EmbeddedWebApplicationContext) {, +			((EmbeddedWebApplicationContext) applicationContext), +					.getEmbeddedServletContainers().put("management",, +							embeddedServletContainer);, +			// Maybe unregister it when it shuts down?, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.EmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedWebApplicationContext;, +			registerContainer(this.applicationContext,, +					childContext.getEmbeddedServletContainer());, +	};, +, +	private void registerContainer(ApplicationContext applicationContext,, +			EmbeddedServletContainer embeddedServletContainer) {, +		if (applicationContext instanceof EmbeddedWebApplicationContext) {, +			((EmbeddedWebApplicationContext) applicationContext), +					.getEmbeddedServletContainers().put("management",, +							embeddedServletContainer);, +			// Maybe unregister it when it shuts down?, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/main/resources/application.properties, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.EmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedWebApplicationContext;, +			registerContainer(this.applicationContext,, +					childContext.getEmbeddedServletContainer());, +	};, +, +	private void registerContainer(ApplicationContext applicationContext,, +			EmbeddedServletContainer embeddedServletContainer) {, +		if (applicationContext instanceof EmbeddedWebApplicationContext) {, +			((EmbeddedWebApplicationContext) applicationContext), +					.getEmbeddedServletContainers().put("management",, +							embeddedServletContainer);, +			// Maybe unregister it when it shuts down?, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/main/resources/application.properties, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +import org.springframework.beans.factory.annotation.Value;, +@IntegrationTest("server.port=0"), +	@Value("${local.server.port}"), +	private int port;, +, +				.getForEntity("http://localhost:" + port + "/oops", Map.class);, +				"http://localhost:" + port + "/admin/health", String.class);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.EmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedWebApplicationContext;, +			registerContainer(this.applicationContext,, +					childContext.getEmbeddedServletContainer());, +	};, +, +	private void registerContainer(ApplicationContext applicationContext,, +			EmbeddedServletContainer embeddedServletContainer) {, +		if (applicationContext instanceof EmbeddedWebApplicationContext) {, +			((EmbeddedWebApplicationContext) applicationContext), +					.getEmbeddedServletContainers().put("management",, +							embeddedServletContainer);, +			// Maybe unregister it when it shuts down?, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/main/resources/application.properties, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +import org.springframework.beans.factory.annotation.Value;, +@IntegrationTest("server.port=0"), +	@Value("${local.server.port}"), +	private int port;, +]