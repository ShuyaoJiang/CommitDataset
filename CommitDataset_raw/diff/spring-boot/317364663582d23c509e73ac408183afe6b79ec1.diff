[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/MultipartAutoConfiguration.java, +import javax.servlet.MultipartConfigElement;, +import javax.servlet.Servlet;, +, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, + * {@link javax.servlet.MultipartConfigElement multipartConfigElement} if none is, + * otherwise defined. The {@link EmbeddedWebApplicationContext} will associate the, + * The {@link javax.servlet.MultipartConfigElement} is a Servlet API that's used to, + * configure how the container handles file uploads. By default, +@ConditionalOnExpression("${multipart.enabled:true}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/MultipartAutoConfiguration.java, +import javax.servlet.MultipartConfigElement;, +import javax.servlet.Servlet;, +, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, + * {@link javax.servlet.MultipartConfigElement multipartConfigElement} if none is, + * otherwise defined. The {@link EmbeddedWebApplicationContext} will associate the, + * The {@link javax.servlet.MultipartConfigElement} is a Servlet API that's used to, + * configure how the container handles file uploads. By default, +@ConditionalOnExpression("${multipart.enabled:true}"), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/AutoConfigurationReportTests.java, +import static org.hamcrest.Matchers.hasItem;, +		assertThat(getNumberOfOutcomes(outcomes), equalTo(2));, +		assertThat(messages, hasItem(onClassMessage));]