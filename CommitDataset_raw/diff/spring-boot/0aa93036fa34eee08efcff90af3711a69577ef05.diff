[+++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/main/java/sample/ui/method/SampleMethodSecurityApplication.java, +import org.springframework.context.annotation.Configuration;, +import org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter;, +	@Order(Ordered.HIGHEST_PRECEDENCE), +	@Configuration, +	protected static class AuthenticationSecurity extends GlobalAuthenticationConfigurerAdapter {, +		public void init(AuthenticationManagerBuilder auth) throws Exception {, +	}, +	, +	@Order(Ordered.LOWEST_PRECEDENCE - 8), +	protected static class ApplicationSecurity extends WebSecurityConfigurerAdapter {, +++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/main/java/sample/ui/method/SampleMethodSecurityApplication.java, +import org.springframework.context.annotation.Configuration;, +import org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter;, +	@Order(Ordered.HIGHEST_PRECEDENCE), +	@Configuration, +	protected static class AuthenticationSecurity extends GlobalAuthenticationConfigurerAdapter {, +		public void init(AuthenticationManagerBuilder auth) throws Exception {, +	}, +	, +	@Order(Ordered.LOWEST_PRECEDENCE - 8), +	protected static class ApplicationSecurity extends WebSecurityConfigurerAdapter {, +++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/test/java/sample/ui/method/SampleMethodSecurityApplicationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertTrue;, +, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<String> entity = new TestRestTemplate("admin", "admin"), +	@Test, +	public void testManagementUnauthorizedAccess() throws Exception {, +		ResponseEntity<String> entity = new TestRestTemplate("user", "user"), +				.getForEntity("http://localhost:" + port + "/beans", String.class);, +		assertEquals(HttpStatus.FORBIDDEN, entity.getStatusCode());, +	}, +]