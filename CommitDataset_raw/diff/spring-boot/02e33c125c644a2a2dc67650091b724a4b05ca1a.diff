[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +	private static final Logger logger = LoggerFactory, +			.getLogger(HibernateJpaAutoConfiguration.class);, +, +, +		String HIBERNATE43_NOJTAPLATFORM_CLASS = "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform";, +		String HIBERNATE42_NOJTAPLATFORM_CLASS = "org.hibernate.service.jta.platform.internal.NoJtaPlatform";, +, +			try {, +					Object jtaPlatform = null;, +					if (ClassUtils.isPresent(HIBERNATE43_NOJTAPLATFORM_CLASS, null)) {, +						jtaPlatform = ClassUtils.forName(HIBERNATE43_NOJTAPLATFORM_CLASS,, +								null).newInstance();, +					}, +					else if (ClassUtils.isPresent(HIBERNATE42_NOJTAPLATFORM_CLASS, null)) {, +						jtaPlatform = ClassUtils.forName(HIBERNATE42_NOJTAPLATFORM_CLASS,, +								null).newInstance();, +					}, +					if (jtaPlatform != null) {, +						vendorProperties.put(JTA_PLATFORM, jtaPlatform);, +					}, +				}, +			}, +			catch (Exception e) {, +				logger.error("Could not configure the JTA platform", e);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +	private static final Logger logger = LoggerFactory, +			.getLogger(HibernateJpaAutoConfiguration.class);, +, +, +		String HIBERNATE43_NOJTAPLATFORM_CLASS = "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform";, +		String HIBERNATE42_NOJTAPLATFORM_CLASS = "org.hibernate.service.jta.platform.internal.NoJtaPlatform";, +, +			try {, +					Object jtaPlatform = null;, +					if (ClassUtils.isPresent(HIBERNATE43_NOJTAPLATFORM_CLASS, null)) {, +						jtaPlatform = ClassUtils.forName(HIBERNATE43_NOJTAPLATFORM_CLASS,, +								null).newInstance();, +					}, +					else if (ClassUtils.isPresent(HIBERNATE42_NOJTAPLATFORM_CLASS, null)) {, +						jtaPlatform = ClassUtils.forName(HIBERNATE42_NOJTAPLATFORM_CLASS,, +								null).newInstance();, +					}, +					if (jtaPlatform != null) {, +						vendorProperties.put(JTA_PLATFORM, jtaPlatform);, +					}, +				}, +			}, +			catch (Exception e) {, +				logger.error("Could not configure the JTA platform", e);, +++ b/spring-boot-samples/pom.xml]