[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, + * disabled by providing a bean of type AuthenticationManager, or by autowiring an, + * {@link AuthenticationManagerBuilder} into a method in one of your configuration, + * classes. The value provided by this configuration will become the "global", + * authentication manager (from Spring Security), or the parent of the global instance., + * Thus it acts as a fallback when no others are provided, is used by method security if, + * enabled, and as a parent authentication manager for "local" authentication managers in, + * individual filter chains., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, + * disabled by providing a bean of type AuthenticationManager, or by autowiring an, + * {@link AuthenticationManagerBuilder} into a method in one of your configuration, + * classes. The value provided by this configuration will become the "global", + * authentication manager (from Spring Security), or the parent of the global instance., + * Thus it acts as a fallback when no others are provided, is used by method security if, + * enabled, and as a parent authentication manager for "local" authentication managers in, + * individual filter chains., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, + * an {@link AuthenticationManager}. Also provides audit logging of authentication events., + * <li>Customize the user details: autowire an {@link AuthenticationManagerBuilder} into a, + * method in one of your configuration classes or equivalently add a bean of type, + * AuthenticationManager</li>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, + * disabled by providing a bean of type AuthenticationManager, or by autowiring an, + * {@link AuthenticationManagerBuilder} into a method in one of your configuration, + * classes. The value provided by this configuration will become the "global", + * authentication manager (from Spring Security), or the parent of the global instance., + * Thus it acts as a fallback when no others are provided, is used by method security if, + * enabled, and as a parent authentication manager for "local" authentication managers in, + * individual filter chains., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, + * an {@link AuthenticationManager}. Also provides audit logging of authentication events., + * <li>Customize the user details: autowire an {@link AuthenticationManagerBuilder} into a, + * method in one of your configuration classes or equivalently add a bean of type, + * AuthenticationManager</li>, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +relevant in non-web applications). To switch off the default web security configuration, +completely you can add a bean with `@EnableWebSecurity` (this does not disable the, +authentication manager configuration). To customize, +(e.g. to add form-based login). To also switch off the authentication manager configuration, +you can add a bean of type `AuthenticationManager`, or else configure the, +global `AuthenticationManager` by `@Autowiring` an `AuthenticationManagerBuilder` into, +a method in one of your `@Configuration` classes. There are several secure applications in the]