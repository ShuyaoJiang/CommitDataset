[+++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerApplicationTests.java, + * {@code @SpringBootTest} based tests for {@link UserVehicleController}., +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerApplicationTests.java, + * {@code @SpringBootTest} based tests for {@link UserVehicleController}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/OverrideAutoConfiguration.java, +	 * override property}., +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerApplicationTests.java, + * {@code @SpringBootTest} based tests for {@link UserVehicleController}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/OverrideAutoConfiguration.java, +	 * override property}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/filter/TypeExcludeFilters.java, + * Annotation that can be on tests to define a set of {@link TypeExcludeFilter} classes that, +	 * {@code Class<?>} argument if they need access to the {@code testClass}., +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerApplicationTests.java, + * {@code @SpringBootTest} based tests for {@link UserVehicleController}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/OverrideAutoConfiguration.java, +	 * override property}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/filter/TypeExcludeFilters.java, + * Annotation that can be on tests to define a set of {@link TypeExcludeFilter} classes that, +	 * {@code Class<?>} argument if they need access to the {@code testClass}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/AutoConfigureJsonTesters.java, + * auto-configuration of JSON testers., +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerApplicationTests.java, + * {@code @SpringBootTest} based tests for {@link UserVehicleController}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/OverrideAutoConfiguration.java, +	 * override property}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/filter/TypeExcludeFilters.java, + * Annotation that can be on tests to define a set of {@link TypeExcludeFilter} classes that, +	 * {@code Class<?>} argument if they need access to the {@code testClass}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/AutoConfigureJsonTesters.java, + * auto-configuration of JSON testers., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/orm/jpa/DataJpaTest.java, + * database, you should consider {@link SpringBootTest @SpringBootTest}, +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerApplicationTests.java, + * {@code @SpringBootTest} based tests for {@link UserVehicleController}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/OverrideAutoConfiguration.java, +	 * override property}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/filter/TypeExcludeFilters.java, + * Annotation that can be on tests to define a set of {@link TypeExcludeFilter} classes that, +	 * {@code Class<?>} argument if they need access to the {@code testClass}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/AutoConfigureJsonTesters.java, + * auto-configuration of JSON testers., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/orm/jpa/DataJpaTest.java, + * database, you should consider {@link SpringBootTest @SpringBootTest}, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/servlet/WebMvcTest.java, + * {@link MockMvc} (include support for HtmlUnit WebClient and Selenium WebDriver). For, +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/web/UserVehicleControllerApplicationTests.java, + * {@code @SpringBootTest} based tests for {@link UserVehicleController}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/OverrideAutoConfiguration.java, +	 * override property}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/filter/TypeExcludeFilters.java, + * Annotation that can be on tests to define a set of {@link TypeExcludeFilter} classes that, +	 * {@code Class<?>} argument if they need access to the {@code testClass}., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/AutoConfigureJsonTesters.java, + * auto-configuration of JSON testers., +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/orm/jpa/DataJpaTest.java, + * database, you should consider {@link SpringBootTest @SpringBootTest}, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/servlet/WebMvcTest.java, + * {@link MockMvc} (include support for HtmlUnit WebClient and Selenium WebDriver). For, +++ b/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/filter/TypeExcludeFiltersContextCustomizerFactoryTests.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test.autoconfigure.filter;, +, +import java.io.IOException;, +, +import org.junit.Test;, +, +import org.springframework.boot.context.TypeExcludeFilter;, +import org.springframework.context.ConfigurableApplicationContext;, +import org.springframework.context.annotation.AnnotationConfigApplicationContext;, +import org.springframework.core.type.classreading.MetadataReader;, +import org.springframework.core.type.classreading.MetadataReaderFactory;, +import org.springframework.core.type.classreading.SimpleMetadataReaderFactory;, +import org.springframework.test.context.ContextCustomizer;, +import org.springframework.test.context.MergedContextConfiguration;, +, +import static org.assertj.core.api.Assertions.assertThat;, +import static org.mockito.Mockito.mock;, +, +/**, + * Tests for {@link TypeExcludeFiltersContextCustomizerFactory}., + *, + * @author Phillip Webb, + */, +public class TypeExcludeFiltersContextCustomizerFactoryTests {]