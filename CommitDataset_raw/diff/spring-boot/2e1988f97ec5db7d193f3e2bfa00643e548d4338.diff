[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import javax.servlet.http.HttpServletRequest;, +import org.springframework.http.HttpHeaders;, +import org.springframework.web.servlet.handler.AbstractUrlHandlerMapping;, +import org.springframework.web.servlet.mvc.ParameterizableViewController;, +		@Bean, +		public WelcomePageHandlerMapping welcomePageHandlerMapping(, +				ResourceProperties resourceProperties) {, +			return new WelcomePageHandlerMapping(resourceProperties.getWelcomePage());, +		}, +, +	static final class WelcomePageHandlerMapping extends AbstractUrlHandlerMapping {, +, +		private static final Log logger = LogFactory, +				.getLog(WelcomePageHandlerMapping.class);, +, +		private WelcomePageHandlerMapping(Resource welcomePage) {, +			if (welcomePage != null) {, +				logger.info("Adding welcome page: " + welcomePage);, +				ParameterizableViewController controller = new ParameterizableViewController();, +				controller.setViewName("forward:index.html");, +				setRootHandler(controller);, +				setOrder(0);, +			}, +		}, +, +		@Override, +		public Object getHandlerInternal(HttpServletRequest request) throws Exception {, +			for (MediaType mediaType : MediaType, +					.parseMediaTypes(request.getHeader(HttpHeaders.ACCEPT))) {, +				if (mediaType.includes(MediaType.TEXT_HTML)) {, +					return super.getHandlerInternal(request);, +				}, +			}, +			return null;, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import javax.servlet.http.HttpServletRequest;, +import org.springframework.http.HttpHeaders;, +import org.springframework.web.servlet.handler.AbstractUrlHandlerMapping;, +import org.springframework.web.servlet.mvc.ParameterizableViewController;, +		@Bean, +		public WelcomePageHandlerMapping welcomePageHandlerMapping(, +				ResourceProperties resourceProperties) {, +			return new WelcomePageHandlerMapping(resourceProperties.getWelcomePage());, +		}, +, +	static final class WelcomePageHandlerMapping extends AbstractUrlHandlerMapping {, +, +		private static final Log logger = LogFactory, +				.getLog(WelcomePageHandlerMapping.class);, +, +		private WelcomePageHandlerMapping(Resource welcomePage) {, +			if (welcomePage != null) {, +				logger.info("Adding welcome page: " + welcomePage);, +				ParameterizableViewController controller = new ParameterizableViewController();, +				controller.setViewName("forward:index.html");, +				setRootHandler(controller);, +				setOrder(0);, +			}, +		}, +, +		@Override, +		public Object getHandlerInternal(HttpServletRequest request) throws Exception {, +			for (MediaType mediaType : MediaType, +					.parseMediaTypes(request.getHeader(HttpHeaders.ACCEPT))) {, +				if (mediaType.includes(MediaType.TEXT_HTML)) {, +					return super.getHandlerInternal(request);, +				}, +			}, +			return null;, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfigurationTests.java, +import org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WelcomePageHandlerMapping;, +import org.springframework.http.MediaType;, +import org.springframework.test.web.servlet.MockMvc;, +import org.springframework.test.web.servlet.setup.MockMvcBuilders;, +import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.forwardedUrl;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;, +				.isEqualTo(7);, +	@Test, +	public void welcomePageMappingProducesNotFoundResponseWhenThereIsNoWelcomePage(), +			throws Exception {, +		load("spring.resources.static-locations:classpath:/no-welcome-page/");, +		assertThat(this.context.getBeansOfType(WelcomePageHandlerMapping.class)), +				.hasSize(1);, +		MockMvcBuilders.webAppContextSetup(this.context).build(), +				.perform(get("/").accept(MediaType.TEXT_HTML)), +				.andExpect(status().isNotFound());, +	}, +, +	@Test, +	public void welcomePageMappingHandlesRequestsThatAcceptTextHtml() throws Exception {]