[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cache/InfinispanCacheStatisticsProvider.java, +				initializeStats(objectName, statistics);, +	private void initializeStats(ObjectName objectName,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cache/InfinispanCacheStatisticsProvider.java, +				initializeStats(objectName, statistics);, +	private void initializeStats(ObjectName objectName,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +	 * Create a new sensitive endpoint instance. The endpoint will enabled flag will be, +	 * Create a new endpoint instance. The endpoint will enabled flag will be based on the, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cache/InfinispanCacheStatisticsProvider.java, +				initializeStats(objectName, statistics);, +	private void initializeStats(ObjectName objectName,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +	 * Create a new sensitive endpoint instance. The endpoint will enabled flag will be, +	 * Create a new endpoint instance. The endpoint will enabled flag will be based on the, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/Endpoint.java, +	 * characters (i.e. a {@literal "\w"} regex)., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cache/InfinispanCacheStatisticsProvider.java, +				initializeStats(objectName, statistics);, +	private void initializeStats(ObjectName objectName,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +	 * Create a new sensitive endpoint instance. The endpoint will enabled flag will be, +	 * Create a new endpoint instance. The endpoint will enabled flag will be based on the, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/Endpoint.java, +	 * characters (i.e. a {@literal "\w"} regex)., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HypermediaDisabled.java, + * method shouldn't generate a hypermedia response., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cache/InfinispanCacheStatisticsProvider.java, +				initializeStats(objectName, statistics);, +	private void initializeStats(ObjectName objectName,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +	 * Create a new sensitive endpoint instance. The endpoint will enabled flag will be, +	 * Create a new endpoint instance. The endpoint will enabled flag will be based on the, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/Endpoint.java, +	 * characters (i.e. a {@literal "\w"} regex)., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HypermediaDisabled.java, + * method shouldn't generate a hypermedia response., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/PublicMetricsAutoConfigurationTests.java, +			return InitializedBuilder.create(), +			return InitializedBuilder.create().type(HikariDataSource.class).build();, +			return InitializedBuilder.create().type(BasicDataSource.class).build();, +			return InitializedBuilder.create(), +			return InitializedBuilder.create().type(BasicDataSource.class).build();, +			return InitializedBuilder.create(), +			return InitializedBuilder.create().type(BasicDataSource.class).build();, +	private static class InitializedBuilder {]