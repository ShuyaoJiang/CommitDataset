[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/DefaultCommandFactory.java, +import java.util.ArrayList;, +import java.util.Collections;, +	private static final List<Command> DEFAULT_COMMANDS;, +, +	static {, +		ArrayList<Command> defaultCommands = new ArrayList<Command>();, +		defaultCommands.add(new VersionCommand());, +		defaultCommands.add(new RunCommand());, +		defaultCommands.add(new TestCommand());, +		defaultCommands.add(new GrabCommand());, +		defaultCommands.add(new JarCommand());, +		defaultCommands.add(new WarCommand());, +		defaultCommands.add(new InstallCommand());, +		defaultCommands.add(new UninstallCommand());, +		defaultCommands.add(new InitCommand());, +		DEFAULT_COMMANDS = Collections.unmodifiableList(defaultCommands);, +	}, +		return DEFAULT_COMMANDS;, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/DefaultCommandFactory.java, +import java.util.ArrayList;, +import java.util.Collections;, +	private static final List<Command> DEFAULT_COMMANDS;, +, +	static {, +		ArrayList<Command> defaultCommands = new ArrayList<Command>();, +		defaultCommands.add(new VersionCommand());, +		defaultCommands.add(new RunCommand());, +		defaultCommands.add(new TestCommand());, +		defaultCommands.add(new GrabCommand());, +		defaultCommands.add(new JarCommand());, +		defaultCommands.add(new WarCommand());, +		defaultCommands.add(new InstallCommand());, +		defaultCommands.add(new UninstallCommand());, +		defaultCommands.add(new InitCommand());, +		DEFAULT_COMMANDS = Collections.unmodifiableList(defaultCommands);, +	}, +		return DEFAULT_COMMANDS;, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/env/DevToolsPropertyDefaultsPostProcessor.java, +	private static final Map<String, Object> PROPERTIES;, +		PROPERTIES = Collections.unmodifiableMap(devToolsProperties);, +					PROPERTIES);, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/DefaultCommandFactory.java, +import java.util.ArrayList;, +import java.util.Collections;, +	private static final List<Command> DEFAULT_COMMANDS;, +, +	static {, +		ArrayList<Command> defaultCommands = new ArrayList<Command>();, +		defaultCommands.add(new VersionCommand());, +		defaultCommands.add(new RunCommand());, +		defaultCommands.add(new TestCommand());, +		defaultCommands.add(new GrabCommand());, +		defaultCommands.add(new JarCommand());, +		defaultCommands.add(new WarCommand());, +		defaultCommands.add(new InstallCommand());, +		defaultCommands.add(new UninstallCommand());, +		defaultCommands.add(new InitCommand());, +		DEFAULT_COMMANDS = Collections.unmodifiableList(defaultCommands);, +	}, +		return DEFAULT_COMMANDS;, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/env/DevToolsPropertyDefaultsPostProcessor.java, +	private static final Map<String, Object> PROPERTIES;, +		PROPERTIES = Collections.unmodifiableMap(devToolsProperties);, +					PROPERTIES);, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/ImportsContextCustomizer.java, +		private static final Set<AnnotationFilter> ANNOTATION_FILTERS;, +			ANNOTATION_FILTERS = Collections.unmodifiableSet(filters);, +			for (AnnotationFilter annotationFilter : ANNOTATION_FILTERS) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/DefaultCommandFactory.java, +import java.util.ArrayList;, +import java.util.Collections;, +	private static final List<Command> DEFAULT_COMMANDS;, +, +	static {, +		ArrayList<Command> defaultCommands = new ArrayList<Command>();, +		defaultCommands.add(new VersionCommand());, +		defaultCommands.add(new RunCommand());, +		defaultCommands.add(new TestCommand());, +		defaultCommands.add(new GrabCommand());, +		defaultCommands.add(new JarCommand());, +		defaultCommands.add(new WarCommand());, +		defaultCommands.add(new InstallCommand());, +		defaultCommands.add(new UninstallCommand());, +		defaultCommands.add(new InitCommand());, +		DEFAULT_COMMANDS = Collections.unmodifiableList(defaultCommands);, +	}, +		return DEFAULT_COMMANDS;, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/env/DevToolsPropertyDefaultsPostProcessor.java, +	private static final Map<String, Object> PROPERTIES;, +		PROPERTIES = Collections.unmodifiableMap(devToolsProperties);, +					PROPERTIES);, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/ImportsContextCustomizer.java, +		private static final Set<AnnotationFilter> ANNOTATION_FILTERS;, +			ANNOTATION_FILTERS = Collections.unmodifiableSet(filters);, +			for (AnnotationFilter annotationFilter : ANNOTATION_FILTERS) {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/JavaCompilerFieldValuesParser.java, +		private static final Map<Class<?>, Object> DEFAULT_TYPE_VALUES;, +			DEFAULT_TYPE_VALUES = Collections.unmodifiableMap(values);, +		private static final Map<String, Object> WELL_KNOWN_STATIC_FINALS;]