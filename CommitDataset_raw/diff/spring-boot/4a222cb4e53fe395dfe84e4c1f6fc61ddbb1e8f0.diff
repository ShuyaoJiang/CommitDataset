[+++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/loader/tools/launch.script, +! [[ -x "$PID_FOLDER" ]] && echoYellow "PID_FOLDER $PID_FOLDER does not exist. Falling back to /tmp" && PID_FOLDER="/tmp", +! [[ -x "$LOG_FOLDER" ]] && echoYellow "LOG_FOLDER $LOG_FOLDER does not exist. Falling back to /tmp" && LOG_FOLDER="/tmp", +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/loader/tools/launch.script, +! [[ -x "$PID_FOLDER" ]] && echoYellow "PID_FOLDER $PID_FOLDER does not exist. Falling back to /tmp" && PID_FOLDER="/tmp", +! [[ -x "$LOG_FOLDER" ]] && echoYellow "LOG_FOLDER $LOG_FOLDER does not exist. Falling back to /tmp" && LOG_FOLDER="/tmp", +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/java/org/springframework/boot/launchscript/SysVinitLaunchScriptIT.java, +		String output = doTest("basic-launch.sh");, +		assertThat(output).doesNotContain("PID_FOLDER");, +	}, +, +	@Test, +	public void launchWithMissingLogFolderGeneratesAWarning() throws Exception {, +		String output = doTest("launch-with-missing-log-folder.sh");, +		assertThat(output).has(coloredString(AnsiColor.YELLOW,, +				"LOG_FOLDER /does/not/exist does not exist. Falling back to /tmp"));, +	}, +, +	@Test, +	public void launchWithMissingPidFolderGeneratesAWarning() throws Exception {, +		String output = doTest("launch-with-missing-pid-folder.sh");, +		assertThat(output).has(coloredString(AnsiColor.YELLOW,, +				"PID_FOLDER /does/not/exist does not exist. Falling back to /tmp"));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/loader/tools/launch.script, +! [[ -x "$PID_FOLDER" ]] && echoYellow "PID_FOLDER $PID_FOLDER does not exist. Falling back to /tmp" && PID_FOLDER="/tmp", +! [[ -x "$LOG_FOLDER" ]] && echoYellow "LOG_FOLDER $LOG_FOLDER does not exist. Falling back to /tmp" && LOG_FOLDER="/tmp", +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/java/org/springframework/boot/launchscript/SysVinitLaunchScriptIT.java, +		String output = doTest("basic-launch.sh");, +		assertThat(output).doesNotContain("PID_FOLDER");, +	}, +, +	@Test, +	public void launchWithMissingLogFolderGeneratesAWarning() throws Exception {, +		String output = doTest("launch-with-missing-log-folder.sh");, +		assertThat(output).has(coloredString(AnsiColor.YELLOW,, +				"LOG_FOLDER /does/not/exist does not exist. Falling back to /tmp"));, +	}, +, +	@Test, +	public void launchWithMissingPidFolderGeneratesAWarning() throws Exception {, +		String output = doTest("launch-with-missing-pid-folder.sh");, +		assertThat(output).has(coloredString(AnsiColor.YELLOW,, +				"PID_FOLDER /does/not/exist does not exist. Falling back to /tmp"));, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/launch-with-missing-log-folder.sh, +source ./test-functions.sh, +install_service, +echo 'LOG_FOLDER=/does/not/exist' > /test-service/spring-boot-app.conf, +start_service, +await_app, +curl -s http://127.0.0.1:8080/, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/loader/tools/launch.script, +! [[ -x "$PID_FOLDER" ]] && echoYellow "PID_FOLDER $PID_FOLDER does not exist. Falling back to /tmp" && PID_FOLDER="/tmp", +! [[ -x "$LOG_FOLDER" ]] && echoYellow "LOG_FOLDER $LOG_FOLDER does not exist. Falling back to /tmp" && LOG_FOLDER="/tmp", +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/java/org/springframework/boot/launchscript/SysVinitLaunchScriptIT.java, +		String output = doTest("basic-launch.sh");, +		assertThat(output).doesNotContain("PID_FOLDER");, +	}, +, +	@Test, +	public void launchWithMissingLogFolderGeneratesAWarning() throws Exception {, +		String output = doTest("launch-with-missing-log-folder.sh");, +		assertThat(output).has(coloredString(AnsiColor.YELLOW,, +				"LOG_FOLDER /does/not/exist does not exist. Falling back to /tmp"));, +	}, +, +	@Test, +	public void launchWithMissingPidFolderGeneratesAWarning() throws Exception {, +		String output = doTest("launch-with-missing-pid-folder.sh");, +		assertThat(output).has(coloredString(AnsiColor.YELLOW,, +				"PID_FOLDER /does/not/exist does not exist. Falling back to /tmp"));, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/launch-with-missing-log-folder.sh, +source ./test-functions.sh, +install_service, +echo 'LOG_FOLDER=/does/not/exist' > /test-service/spring-boot-app.conf, +start_service, +await_app, +curl -s http://127.0.0.1:8080/, +++ b/spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/launch-with-missing-pid-folder.sh, +source ./test-functions.sh, +install_service, +echo 'PID_FOLDER=/does/not/exist' > /test-service/spring-boot-app.conf, +start_service, +await_app, +curl -s http://127.0.0.1:8080/]