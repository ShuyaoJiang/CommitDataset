[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraHealthIndicatorAutoConfiguration.java, +import java.util.Map;, +, +import org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;, +import org.springframework.boot.actuate.health.HealthIndicator;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.context.annotation.Bean;, +import org.springframework.data.cassandra.core.CassandraOperations;, + * {@link EnableAutoConfiguration Auto-configuration} for, + * {@link CassandraHealthIndicator}., + * @since 2.1.0, +@ConditionalOnClass({ Cluster.class, CassandraOperations.class }), +@ConditionalOnBean(CassandraOperations.class), +		CassandraReactiveHealthIndicatorAutoConfiguration.class }), +public class CassandraHealthIndicatorAutoConfiguration extends, +		CompositeHealthIndicatorConfiguration<CassandraHealthIndicator, CassandraOperations> {, +, +	private final Map<String, CassandraOperations> cassandraOperations;, +, +	public CassandraHealthIndicatorAutoConfiguration(, +			Map<String, CassandraOperations> cassandraOperations) {, +		this.cassandraOperations = cassandraOperations;, +	}, +, +	@Bean, +	@ConditionalOnMissingBean(name = "cassandraHealthIndicator"), +	public HealthIndicator cassandraHealthIndicator() {, +		return createHealthIndicator(this.cassandraOperations);, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraHealthIndicatorAutoConfiguration.java, +import java.util.Map;, +, +import org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;, +import org.springframework.boot.actuate.health.HealthIndicator;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.context.annotation.Bean;, +import org.springframework.data.cassandra.core.CassandraOperations;, + * {@link EnableAutoConfiguration Auto-configuration} for, + * {@link CassandraHealthIndicator}., + * @since 2.1.0, +@ConditionalOnClass({ Cluster.class, CassandraOperations.class }), +@ConditionalOnBean(CassandraOperations.class), +		CassandraReactiveHealthIndicatorAutoConfiguration.class }), +public class CassandraHealthIndicatorAutoConfiguration extends, +		CompositeHealthIndicatorConfiguration<CassandraHealthIndicator, CassandraOperations> {, +, +	private final Map<String, CassandraOperations> cassandraOperations;, +, +	public CassandraHealthIndicatorAutoConfiguration(, +			Map<String, CassandraOperations> cassandraOperations) {, +		this.cassandraOperations = cassandraOperations;, +	}, +, +	@Bean, +	@ConditionalOnMissingBean(name = "cassandraHealthIndicator"), +	public HealthIndicator cassandraHealthIndicator() {, +		return createHealthIndicator(this.cassandraOperations);, +	}, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraHealthIndicatorAutoConfiguration.java, +import java.util.Map;, +, +import org.springframework.boot.actuate.autoconfigure.health.CompositeHealthIndicatorConfiguration;, +import org.springframework.boot.actuate.health.HealthIndicator;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.context.annotation.Bean;, +import org.springframework.data.cassandra.core.CassandraOperations;, + * {@link EnableAutoConfiguration Auto-configuration} for, + * {@link CassandraHealthIndicator}., + * @since 2.1.0, +@ConditionalOnClass({ Cluster.class, CassandraOperations.class }), +@ConditionalOnBean(CassandraOperations.class), +		CassandraReactiveHealthIndicatorAutoConfiguration.class }), +public class CassandraHealthIndicatorAutoConfiguration extends, +		CompositeHealthIndicatorConfiguration<CassandraHealthIndicator, CassandraOperations> {, +, +	private final Map<String, CassandraOperations> cassandraOperations;, +, +	public CassandraHealthIndicatorAutoConfiguration(, +			Map<String, CassandraOperations> cassandraOperations) {, +		this.cassandraOperations = cassandraOperations;, +	}, +, +	@Bean, +	@ConditionalOnMissingBean(name = "cassandraHealthIndicator"), +	public HealthIndicator cassandraHealthIndicator() {, +		return createHealthIndicator(this.cassandraOperations);, +	}, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfiguration.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *]