[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter.java, +		return DistributionStatisticConfig.builder(), +				.percentilesHistogram(, +						lookup(distribution.getPercentilesHistogram(), id, null)), +				.percentiles(lookup(distribution.getPercentiles(), id, null)), +				.sla(convertSla(id.getType(), lookup(distribution.getSla(), id, null))), +				.build().merge(config);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter.java, +		return DistributionStatisticConfig.builder(), +				.percentilesHistogram(, +						lookup(distribution.getPercentilesHistogram(), id, null)), +				.percentiles(lookup(distribution.getPercentiles(), id, null)), +				.sla(convertSla(id.getType(), lookup(distribution.getSla(), id, null))), +				.build().merge(config);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java, +	public void toLinksWhenServletPathNotEmptyShouldMatch() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter.java, +		return DistributionStatisticConfig.builder(), +				.percentilesHistogram(, +						lookup(distribution.getPercentilesHistogram(), id, null)), +				.percentiles(lookup(distribution.getPercentiles(), id, null)), +				.sla(convertSla(id.getType(), lookup(distribution.getSla(), id, null))), +				.build().merge(config);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java, +	public void toLinksWhenServletPathNotEmptyShouldMatch() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +	public void hibernatePropertiesCustomizerTakesPrecedenceOverStrategyInstancesAndNamingStrategyProperties() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter.java, +		return DistributionStatisticConfig.builder(), +				.percentilesHistogram(, +						lookup(distribution.getPercentilesHistogram(), id, null)), +				.percentiles(lookup(distribution.getPercentiles(), id, null)), +				.sla(convertSla(id.getType(), lookup(distribution.getSla(), id, null))), +				.build().merge(config);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java, +	public void toLinksWhenServletPathNotEmptyShouldMatch() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +	public void hibernatePropertiesCustomizerTakesPrecedenceOverStrategyInstancesAndNamingStrategyProperties() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/resources/org/springframework/boot/autoconfigure/quartz/tables_h2.sql, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter.java, +		return DistributionStatisticConfig.builder(), +				.percentilesHistogram(, +						lookup(distribution.getPercentilesHistogram(), id, null)), +				.percentiles(lookup(distribution.getPercentiles(), id, null)), +				.sla(convertSla(id.getType(), lookup(distribution.getSla(), id, null))), +				.build().merge(config);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequestTests.java, +	public void toLinksWhenServletPathNotEmptyShouldMatch() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +	public void hibernatePropertiesCustomizerTakesPrecedenceOverStrategyInstancesAndNamingStrategyProperties() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/resources/org/springframework/boot/autoconfigure/quartz/tables_h2.sql, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +properties is not supported., +`@ComponentScan` directive on your `@SpringBootApplication`-annotated class, be aware that]