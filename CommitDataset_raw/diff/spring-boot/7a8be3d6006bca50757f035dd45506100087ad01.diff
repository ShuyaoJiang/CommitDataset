[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializerTests.java, +import java.lang.reflect.Field;, +import org.apache.commons.logging.impl.SLF4JLogFactory;, +import org.springframework.util.ReflectionUtils;, +	private Field logFactoryField;, +, +	private LogFactory originalLogFactory;, +, +		try {, +			this.logFactoryField = LogFactory.class.getDeclaredField("logFactory");, +			ReflectionUtils.makeAccessible(this.logFactoryField);, +, +			this.originalLogFactory = (LogFactory) ReflectionUtils.getField(, +					this.logFactoryField, null);, +, +			ReflectionUtils.setField(this.logFactoryField, null, new MockLogFactory());, +		}, +		catch (Exception e) {, +			throw new IllegalStateException("Failed to set logFactory", e);, +		}, +, +		ReflectionUtils.setField(this.logFactoryField, null, this.originalLogFactory);, +	public static class MockLogFactory extends SLF4JLogFactory {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializerTests.java, +import java.lang.reflect.Field;, +import org.apache.commons.logging.impl.SLF4JLogFactory;, +import org.springframework.util.ReflectionUtils;, +	private Field logFactoryField;, +, +	private LogFactory originalLogFactory;, +, +		try {, +			this.logFactoryField = LogFactory.class.getDeclaredField("logFactory");, +			ReflectionUtils.makeAccessible(this.logFactoryField);, +, +			this.originalLogFactory = (LogFactory) ReflectionUtils.getField(, +					this.logFactoryField, null);, +, +			ReflectionUtils.setField(this.logFactoryField, null, new MockLogFactory());, +		}, +		catch (Exception e) {, +			throw new IllegalStateException("Failed to set logFactory", e);, +		}, +, +		ReflectionUtils.setField(this.logFactoryField, null, this.originalLogFactory);, +	public static class MockLogFactory extends SLF4JLogFactory {, +++ b/spring-boot-cli/pom.xml, +		<dependency>, +			<groupId>org.slf4j</groupId>, +			<artifactId>jcl-over-slf4j</artifactId>, +		</dependency>, +		<!-- Runtime -->, +		<dependency>, +			<groupId>org.slf4j</groupId>, +			<artifactId>slf4j-nop</artifactId>, +			<version>1.7.7</version>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializerTests.java, +import java.lang.reflect.Field;, +import org.apache.commons.logging.impl.SLF4JLogFactory;, +import org.springframework.util.ReflectionUtils;, +	private Field logFactoryField;, +, +	private LogFactory originalLogFactory;, +, +		try {, +			this.logFactoryField = LogFactory.class.getDeclaredField("logFactory");, +			ReflectionUtils.makeAccessible(this.logFactoryField);, +, +			this.originalLogFactory = (LogFactory) ReflectionUtils.getField(, +					this.logFactoryField, null);, +, +			ReflectionUtils.setField(this.logFactoryField, null, new MockLogFactory());, +		}, +		catch (Exception e) {, +			throw new IllegalStateException("Failed to set logFactory", e);, +		}, +, +		ReflectionUtils.setField(this.logFactoryField, null, this.originalLogFactory);, +	public static class MockLogFactory extends SLF4JLogFactory {, +++ b/spring-boot-cli/pom.xml, +		<dependency>, +			<groupId>org.slf4j</groupId>, +			<artifactId>jcl-over-slf4j</artifactId>, +		</dependency>, +		<!-- Runtime -->, +		<dependency>, +			<groupId>org.slf4j</groupId>, +			<artifactId>slf4j-nop</artifactId>, +			<version>1.7.7</version>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-dependencies/pom.xml, +				<exclusions>, +					<exclusion>, +						<groupId>commons-logging</groupId>, +						<artifactId>commons-logging</artifactId>, +					</exclusion>, +				</exclusions>]