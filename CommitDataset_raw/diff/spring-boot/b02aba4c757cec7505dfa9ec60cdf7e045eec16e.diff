[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.Collections;, +		 * Comma-separated list of roles that can access the management endpoint., +		private List<String> roles = Collections.singletonList("ADMIN");, +		public void setRoles(List<String> roles) {, +			this.roles = roles;, +		@Deprecated, +		public void setRole(String role) {, +			this.roles = Collections.singletonList(role);, +		}, +, +		public List<String> getRoles() {, +			return this.roles;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.Collections;, +		 * Comma-separated list of roles that can access the management endpoint., +		private List<String> roles = Collections.singletonList("ADMIN");, +		public void setRoles(List<String> roles) {, +			this.roles = roles;, +		@Deprecated, +		public void setRole(String role) {, +			this.roles = Collections.singletonList(role);, +		}, +, +		public List<String> getRoles() {, +			return this.roles;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +						.addAll(this.management.getSecurity().getRoles());, +			List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.Collections;, +		 * Comma-separated list of roles that can access the management endpoint., +		private List<String> roles = Collections.singletonList("ADMIN");, +		public void setRoles(List<String> roles) {, +			this.roles = roles;, +		@Deprecated, +		public void setRole(String role) {, +			this.roles = Collections.singletonList(role);, +		}, +, +		public List<String> getRoles() {, +			return this.roles;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +						.addAll(this.management.getSecurity().getRoles());, +			List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "management.security.role",, +    "type": "java.lang.String",, +    "description": "Roles required to access the management endpoint.",, +    "defaultValue": "ADMIN",, +    "deprecation": {, +      "replacement": "management.security.roles", +    }, +  },, +  {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import java.util.Collections;, +		 * Comma-separated list of roles that can access the management endpoint., +		private List<String> roles = Collections.singletonList("ADMIN");, +		public void setRoles(List<String> roles) {, +			this.roles = roles;, +		@Deprecated, +		public void setRole(String role) {, +			this.roles = Collections.singletonList(role);, +		}, +, +		public List<String> getRoles() {, +			return this.roles;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +						.addAll(this.management.getSecurity().getRoles());, +			List<String> roles = this.management.getSecurity().getRoles();, +++ b/spring-boot-actuator/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "management.security.role",, +    "type": "java.lang.String",, +    "description": "Roles required to access the management endpoint.",, +    "defaultValue": "ADMIN",, +    "deprecation": {, +      "replacement": "management.security.roles", +    }, +  },, +  {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementServerPropertiesAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.boot.test.util.EnvironmentTestUtils;, +import org.springframework.context.annotation.AnnotationConfigApplicationContext;, +import org.springframework.context.annotation.Configuration;, +, +	private AnnotationConfigApplicationContext context;, +]