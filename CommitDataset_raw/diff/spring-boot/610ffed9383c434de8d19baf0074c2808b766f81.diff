[+++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Spring Boot will not search for or use a `META-INF/persistence.xml` by default. If you, +prefer to use a traditional `persistence.xml`, you need to define your own `@Bean` of type, +`LocalEntityManagerFactoryBean` (with id '`entityManagerFactory`', and set the persistence, +unit name there., +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Spring Boot will not search for or use a `META-INF/persistence.xml` by default. If you, +prefer to use a traditional `persistence.xml`, you need to define your own `@Bean` of type, +`LocalEntityManagerFactoryBean` (with id '`entityManagerFactory`', and set the persistence, +unit name there., +++ b/spring-boot-tools/spring-boot-test-support/src/main/java/org/springframework/boot/junit/runner/classpath/ModifiedClassPathRunner.java, +import java.util.regex.Pattern;, +	private static final Pattern INTELLIJ_CLASSPATH_JAR_PATTERN = Pattern.compile(, +			".*classpath(\\d+)?.jar");, +, +			if (isManifestOnlyJar(url)) {, +	private boolean isManifestOnlyJar(URL url) {, +		return isSurefireBooterJar(url) || isShortenedIntelliJJar(url);, +	}, +, +	private boolean isShortenedIntelliJJar(URL url) {, +		String urlPath = url.getPath();, +		boolean isCandidate = INTELLIJ_CLASSPATH_JAR_PATTERN.matcher(urlPath).matches();, +		if (isCandidate) {, +			try {, +				Attributes attributes = getManifestMainAttributesFromUrl(url);, +				String createdBy = attributes.getValue("Created-By");, +				return createdBy != null && createdBy.contains("IntelliJ");, +			}, +			catch (Exception ex) {, +				return false;, +			}, +		}, +		return false;, +	}, +, +		Attributes attributes = getManifestMainAttributesFromUrl(booterJar);, +		return StringUtils.delimitedListToStringArray(attributes, +				.getValue(Attributes.Name.CLASS_PATH), " ");, +	}, +, +	private Attributes getManifestMainAttributesFromUrl(URL url) throws Exception {, +		JarFile jarFile = new JarFile(new File(url.toURI()));, +			return jarFile.getManifest().getMainAttributes();]