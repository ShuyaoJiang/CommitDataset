[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, +			liquibase.setTestRollbackOnUpdate(this.properties.isTestRollbackOnUpdate());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, +			liquibase.setTestRollbackOnUpdate(this.properties.isTestRollbackOnUpdate());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, + * Copyright 2012-2018 the original author or authors., +	/**, +	 * Whether rollback should be tested before update is performed., +	 */, +	private boolean testRollbackOnUpdate;, +, +	public boolean isTestRollbackOnUpdate() {, +		return this.testRollbackOnUpdate;, +	}, +, +	public void setTestRollbackOnUpdate(boolean testRollbackOnUpdate) {, +		this.testRollbackOnUpdate = testRollbackOnUpdate;, +	}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, +			liquibase.setTestRollbackOnUpdate(this.properties.isTestRollbackOnUpdate());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, + * Copyright 2012-2018 the original author or authors., +	/**, +	 * Whether rollback should be tested before update is performed., +	 */, +	private boolean testRollbackOnUpdate;, +, +	public boolean isTestRollbackOnUpdate() {, +		return this.testRollbackOnUpdate;, +	}, +, +	public void setTestRollbackOnUpdate(boolean testRollbackOnUpdate) {, +		this.testRollbackOnUpdate = testRollbackOnUpdate;, +	}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +	public void testRollbackOnUpdate() throws IOException {, +		this.contextRunner.withUserConfiguration(EmbeddedDataSourceConfiguration.class), +				.withPropertyValues(, +						"spring.liquibase.test-rollback-on-update:true"), +				.run((context) -> {, +					SpringLiquibase liquibase = context.getBean(SpringLiquibase.class);, +					assertThat(liquibase.isTestRollbackOnUpdate());, +				});, +	}, +, +	@Test]