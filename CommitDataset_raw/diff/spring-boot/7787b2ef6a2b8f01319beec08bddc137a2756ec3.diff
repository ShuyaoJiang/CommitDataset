[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java, +import groovy.text.SimpleTemplateEngine;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;, +import org.springframework.boot.context.properties.ConfigurationProperties;, +	public abstract static class BaseGroovyTemplateConfiguration implements, +			BeanClassLoaderAware {, +		@Autowired, +		private ApplicationContext resourceLoader;, +, +		protected ClassLoader createParentLoaderForTemplates() throws Exception {, +	}, +, +	@Configuration, +	@ConditionalOnClass(MarkupTemplateEngine.class), +	public static class GroovyMarkupConfiguration extends BaseGroovyTemplateConfiguration {, +, +		@Autowired, +		private GroovyTemplateProperties properties;, +, +		@Bean, +		@ConfigurationProperties(prefix = "spring.groovy.template.configuration"), +		public TemplateConfiguration groovyTemplateConfiguration() {, +			return new TemplateConfiguration();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean(TemplateEngine.class), +		public TemplateEngine groovyTemplateEngine() throws Exception {, +			TemplateConfiguration configuration = groovyTemplateConfiguration();, +			configuration.setCacheTemplates(this.properties.isCache());, +			return new MarkupTemplateEngine(createParentLoaderForTemplates(),, +					configuration, new GroovyTemplateResolver());, +		}, +, +	}, +, +	@Configuration, +	@ConditionalOnMissingClass(name = "groovy.text.markup.MarkupTemplateEngine"), +	public static class GroovySimpleConfiguration extends BaseGroovyTemplateConfiguration {, +, +		@Autowired, +		private GroovyTemplateProperties properties;, +, +		@Bean, +		@ConditionalOnMissingBean(TemplateEngine.class), +		public TemplateEngine groovyTemplateEngine() throws Exception {, +			return new SimpleTemplateEngine(createParentLoaderForTemplates());, +		}, +, +	}, +, +	@Configuration, +	@ConditionalOnClass({ Servlet.class, LocaleContextHolder.class }), +	@ConditionalOnWebApplication, +	public static class GroovyWebConfiguration {, +, +		@Autowired, +		private GroovyTemplateProperties properties;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java, +import groovy.text.SimpleTemplateEngine;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;, +import org.springframework.boot.context.properties.ConfigurationProperties;, +	public abstract static class BaseGroovyTemplateConfiguration implements, +			BeanClassLoaderAware {, +		@Autowired, +		private ApplicationContext resourceLoader;, +, +		protected ClassLoader createParentLoaderForTemplates() throws Exception {, +	}, +, +	@Configuration, +	@ConditionalOnClass(MarkupTemplateEngine.class), +	public static class GroovyMarkupConfiguration extends BaseGroovyTemplateConfiguration {, +, +		@Autowired, +		private GroovyTemplateProperties properties;, +, +		@Bean, +		@ConfigurationProperties(prefix = "spring.groovy.template.configuration"), +		public TemplateConfiguration groovyTemplateConfiguration() {, +			return new TemplateConfiguration();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean(TemplateEngine.class), +		public TemplateEngine groovyTemplateEngine() throws Exception {, +			TemplateConfiguration configuration = groovyTemplateConfiguration();, +			configuration.setCacheTemplates(this.properties.isCache());, +			return new MarkupTemplateEngine(createParentLoaderForTemplates(),, +					configuration, new GroovyTemplateResolver());, +		}, +, +	}, +, +	@Configuration, +	@ConditionalOnMissingClass(name = "groovy.text.markup.MarkupTemplateEngine"), +	public static class GroovySimpleConfiguration extends BaseGroovyTemplateConfiguration {, +, +		@Autowired]