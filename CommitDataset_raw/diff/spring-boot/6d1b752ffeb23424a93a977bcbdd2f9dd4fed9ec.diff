[+++ b/spring-boot-actuator-docs/src/main/asciidoc/loggers.adoc, +consist of the following values (although not all logging systems support the full set):, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +allowing it to inherit configuration from its parent., +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +++ b/spring-boot-actuator-docs/src/main/asciidoc/loggers.adoc, +consist of the following values (although not all logging systems support the full set):, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +allowing it to inherit configuration from its parent., +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MetricFilterAutoConfigurationTests.java, +	public void recordsHttpInteractionsWithWildcardMapping() throws Exception {, +++ b/spring-boot-actuator-docs/src/main/asciidoc/loggers.adoc, +consist of the following values (although not all logging systems support the full set):, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +allowing it to inherit configuration from its parent., +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MetricFilterAutoConfigurationTests.java, +	public void recordsHttpInteractionsWithWildcardMapping() throws Exception {, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +		String urlBase = "http://localhost:" + awaitServerPort();, +		String urlBase = "http://localhost:" + awaitServerPort();, +++ b/spring-boot-actuator-docs/src/main/asciidoc/loggers.adoc, +consist of the following values (although not all logging systems support the full set):, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +allowing it to inherit configuration from its parent., +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MetricFilterAutoConfigurationTests.java, +	public void recordsHttpInteractionsWithWildcardMapping() throws Exception {, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +		String urlBase = "http://localhost:" + awaitServerPort();, +		String urlBase = "http://localhost:" + awaitServerPort();, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/JvmLauncher.java, +		this.outputDirectory = new File("target/output/", +++ b/spring-boot-actuator-docs/src/main/asciidoc/loggers.adoc, +consist of the following values (although not all logging systems support the full set):, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +allowing it to inherit configuration from its parent., +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MetricFilterAutoConfigurationTests.java, +	public void recordsHttpInteractionsWithWildcardMapping() throws Exception {, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +		String urlBase = "http://localhost:" + awaitServerPort();, +		String urlBase = "http://localhost:" + awaitServerPort();, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/JvmLauncher.java, +		this.outputDirectory = new File("target/output/", +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/LibraryCallback.java, +	 * Callback for a single library backed by a {@link File}., +++ b/spring-boot-actuator-docs/src/main/asciidoc/loggers.adoc, +consist of the following values (although not all logging systems support the full set):, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +allowing it to inherit configuration from its parent., +Example HTTP request: [small]##link:../loggers[icon:external-link[role="silver"]]##, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MetricFilterAutoConfigurationTests.java, +	public void recordsHttpInteractionsWithWildcardMapping() throws Exception {, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +		String urlBase = "http://localhost:" + awaitServerPort();, +		String urlBase = "http://localhost:" + awaitServerPort();, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/JvmLauncher.java, +		this.outputDirectory = new File("target/output/", +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/LibraryCallback.java, +	 * Callback for a single library backed by a {@link File}., +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java, +	 * The name used for the root logger. LoggingSystem implementations should ensure]