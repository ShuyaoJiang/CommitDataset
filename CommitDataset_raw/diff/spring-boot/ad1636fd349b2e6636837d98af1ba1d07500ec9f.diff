[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +        if ("".equals(virtualHost) || virtualHost.equals("/")) {, +            this.virtualHost = "/";, +        } else {, +//            remove all trailing /, +            this.virtualHost = virtualHost;, +        }, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +        if ("".equals(virtualHost) || virtualHost.equals("/")) {, +            this.virtualHost = "/";, +        } else {, +//            remove all trailing /, +            this.virtualHost = virtualHost;, +        }, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoconfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +, +        assertEquals("vhost", connectionFactory.getVirtualHost());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +        if ("".equals(virtualHost) || virtualHost.equals("/")) {, +            this.virtualHost = "/";, +        } else {, +//            remove all trailing /, +            this.virtualHost = virtualHost;, +        }, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoconfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +, +        assertEquals("vhost", connectionFactory.getVirtualHost());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitPropertiesTests.java, +import org.junit.Test;, +, +	private final RabbitProperties properties = new RabbitProperties();, +    @Test, +    public void testDefaultVirtualHost() {, +        this.properties.setVirtualHost("/");, +        assertEquals("/", this.properties.getVirtualHost());, +    }, +, +    @Test, +    public void testemptyVirtualHost() {, +        this.properties.setVirtualHost("");, +        assertEquals("/", this.properties.getVirtualHost());, +    }, +, +    @Test, +    public void testCustomVirtualHost() {, +        this.properties.setVirtualHost("myvHost");, +        assertEquals("myvHost", this.properties.getVirtualHost());, +    }, +, +    @Test, +    public void testCustomFalsyVirtualHost() {, +        this.properties.setVirtualHost("/myvHost");, +        assertEquals("myvHost", this.properties.getVirtualHost());, +    }, +]