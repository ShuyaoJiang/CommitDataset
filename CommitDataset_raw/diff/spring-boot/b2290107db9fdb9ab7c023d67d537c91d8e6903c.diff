[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			String candidate = StringUtils.trimWhitespace(contextPath);, +			if (StringUtils.hasText(candidate) && candidate.endsWith("/")) {, +				return candidate.substring(0, candidate.length() - 1);, +			return candidate;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			String candidate = StringUtils.trimWhitespace(contextPath);, +			if (StringUtils.hasText(candidate) && candidate.endsWith("/")) {, +				return candidate.substring(0, candidate.length() - 1);, +			return candidate;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, + * Copyright 2012-2019 the original author or authors., +	public void testContextPathWithLeadingWhitespace() {, +	public void testContextPathWithTrailingWhitespace() {, +	public void testContextPathWithLeadingAndTrailingWhitespace() {, +		bind("server.servlet.context-path", " /assets ");, +		assertThat(this.properties.getServlet().getContextPath()).isEqualTo("/assets");, +	}, +, +	@Test, +	public void testContextPathWithLeadingAndTrailingWhitespaceAndContextWithSpace() {]