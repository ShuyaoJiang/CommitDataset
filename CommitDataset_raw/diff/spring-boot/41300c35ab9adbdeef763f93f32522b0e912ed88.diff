[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, + * @author Eddú Meléndez, +		/**, +		 * Number of milliseconds after which unused connections are closed., +		 */, +		private Integer idleTimeout = 600000;, +, +		/**, +		 * Number of milliseconds after user will be prompted to login again., +		 */, +		private Integer authTimeout = 600000;, +, +				config.put("crash.ssh.auth_timeout", String.valueOf(this.authTimeout));, +				config.put("crash.ssh.idle_timeout", String.valueOf(this.idleTimeout));, +		public Integer getIdleTimeout() {, +			return this.idleTimeout;, +		}, +, +		public void setIdleTimeout(Integer idleTimeout) {, +			this.idleTimeout = idleTimeout;, +		}, +, +		public Integer getAuthTimeout() {, +			return this.authTimeout;, +		}, +, +		public void setAuthTimeout(Integer authTimeout) {, +			this.authTimeout = authTimeout;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, + * @author Eddú Meléndez, +		/**, +		 * Number of milliseconds after which unused connections are closed., +		 */, +		private Integer idleTimeout = 600000;, +, +		/**, +		 * Number of milliseconds after user will be prompted to login again., +		 */, +		private Integer authTimeout = 600000;, +, +				config.put("crash.ssh.auth_timeout", String.valueOf(this.authTimeout));, +				config.put("crash.ssh.idle_timeout", String.valueOf(this.idleTimeout));, +		public Integer getIdleTimeout() {, +			return this.idleTimeout;, +		}, +, +		public void setIdleTimeout(Integer idleTimeout) {, +			this.idleTimeout = idleTimeout;, +		}, +, +		public Integer getAuthTimeout() {, +			return this.authTimeout;, +		}, +, +		public void setAuthTimeout(Integer authTimeout) {, +			this.authTimeout = authTimeout;, +		}, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, + * @author Eddú Meléndez, +		load(env);, +		load(env);, +		assertEquals("600000", lifeCycle.getConfig().getProperty("crash.ssh.auth_timeout"));, +		assertEquals("600000", lifeCycle.getConfig().getProperty("crash.ssh.idle_timeout"));, +		load(env);, +	public void testSshConfigurationCustomTimeouts() {, +		MockEnvironment env = new MockEnvironment();, +		env.setProperty("shell.ssh.enabled", "true");, +		env.setProperty("shell.ssh.auth-timeout", "300000");, +		env.setProperty("shell.ssh.idle-timeout", "300000");, +		load(env);, +, +		PluginLifeCycle lifeCycle = this.context.getBean(PluginLifeCycle.class);, +, +		assertEquals("300000", lifeCycle.getConfig().getProperty("crash.ssh.auth_timeout"));, +		assertEquals("300000", lifeCycle.getConfig().getProperty("crash.ssh.idle_timeout"));, +	}, +, +	private void load(MockEnvironment env) {, +		this.context = new AnnotationConfigWebApplicationContext();, +		this.context.setEnvironment(env);, +		this.context.register(CrshAutoConfiguration.class);, +		this.context.refresh();, +	}, +, +	@Test, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, + * @author Eddú Meléndez, +		/**, +		 * Number of milliseconds after which unused connections are closed., +		 */, +		private Integer idleTimeout = 600000;, +, +		/**, +		 * Number of milliseconds after user will be prompted to login again., +		 */, +		private Integer authTimeout = 600000;, +, +				config.put("crash.ssh.auth_timeout", String.valueOf(this.authTimeout));, +				config.put("crash.ssh.idle_timeout", String.valueOf(this.idleTimeout));]