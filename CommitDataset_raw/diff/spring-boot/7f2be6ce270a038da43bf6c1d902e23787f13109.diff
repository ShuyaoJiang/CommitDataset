[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>com.fasterxml.jackson.module</groupId>, +			<artifactId>jackson-module-parameter-names</artifactId>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>com.fasterxml.jackson.module</groupId>, +			<artifactId>jackson-module-parameter-names</artifactId>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnJava;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnJava.JavaVersion;, +import com.fasterxml.jackson.annotation.JsonCreator;, +import com.fasterxml.jackson.module.paramnames.ParameterNamesModule;, +	@ConditionalOnJava(JavaVersion.EIGHT), +	@ConditionalOnClass(ParameterNamesModule.class), +	static class ParameterNamesModuleConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean(ParameterNamesModule.class), +		public ParameterNamesModule parametersNameModule() {, +			return new ParameterNamesModule(JsonCreator.Mode.PROPERTIES);, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>com.fasterxml.jackson.module</groupId>, +			<artifactId>jackson-module-parameter-names</artifactId>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnJava;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnJava.JavaVersion;, +import com.fasterxml.jackson.annotation.JsonCreator;, +import com.fasterxml.jackson.module.paramnames.ParameterNamesModule;, +	@ConditionalOnJava(JavaVersion.EIGHT), +	@ConditionalOnClass(ParameterNamesModule.class), +	static class ParameterNamesModuleConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean(ParameterNamesModule.class), +		public ParameterNamesModule parametersNameModule() {, +			return new ParameterNamesModule(JsonCreator.Mode.PROPERTIES);, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +import com.fasterxml.jackson.annotation.JsonCreator;, +import com.fasterxml.jackson.annotation.JsonCreator.Mode;, +import com.fasterxml.jackson.databind.introspect.Annotated;, +import com.fasterxml.jackson.module.paramnames.ParameterNamesModule;, +	@Test, +	public void parameterNamesModuleIsAutoConfigured() {, +		assertParameterNamesModuleCreatorBinding(Mode.PROPERTIES,, +				JacksonAutoConfiguration.class);, +	}, +, +	@Test, +	public void customParameterNamesModuleCanBeConfigured() {, +		assertParameterNamesModuleCreatorBinding(Mode.DELEGATING,, +				ParameterNamesModuleConfig.class, JacksonAutoConfiguration.class);, +	}, +, +	private void assertParameterNamesModuleCreatorBinding(Mode expectedMode,, +			Class<?>... configClasses) {, +		this.context.register(configClasses);, +		this.context.refresh();, +		Annotated annotated = mock(Annotated.class);, +		Mode mode = this.context.getBean(ObjectMapper.class).getDeserializationConfig(), +				.getAnnotationIntrospector().findCreatorBinding(annotated);, +		assertThat(mode, is(equalTo(expectedMode)));, +	}, +, +	@Configuration, +	protected static class ParameterNamesModuleConfig {, +, +		@Bean, +		public ParameterNamesModule parameterNamesModule() {, +			return new ParameterNamesModule(JsonCreator.Mode.DELEGATING);, +		}, +, +	}, +]