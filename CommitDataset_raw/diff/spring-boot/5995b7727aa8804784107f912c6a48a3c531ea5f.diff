[+++ b/README.md, +### spring-boot-actuator, +The Actuator uses auto-configuration to decorate your application with features that, +_See [spring-boot-actuator/README.md](spring-boot-actuator/README.md)._, +* [spring-boot-sample-actuator](spring-boot-sample-actuator) - Simple REST service with production features, +* [spring-boot-sample-actuator-ui](spring-boot-sample-actuator-ui) - A web UI example with production features, +++ b/README.md, +### spring-boot-actuator, +The Actuator uses auto-configuration to decorate your application with features that, +_See [spring-boot-actuator/README.md](spring-boot-actuator/README.md)._, +* [spring-boot-sample-actuator](spring-boot-sample-actuator) - Simple REST service with production features, +* [spring-boot-sample-actuator-ui](spring-boot-sample-actuator-ui) - A web UI example with production features, +++ b/pom.xml, +		<module>spring-boot-actuator</module>, +++ b/README.md, +### spring-boot-actuator, +The Actuator uses auto-configuration to decorate your application with features that, +_See [spring-boot-actuator/README.md](spring-boot-actuator/README.md)._, +* [spring-boot-sample-actuator](spring-boot-sample-actuator) - Simple REST service with production features, +* [spring-boot-sample-actuator-ui](spring-boot-sample-actuator-ui) - A web UI example with production features, +++ b/pom.xml, +		<module>spring-boot-actuator</module>, +++ b/spring-boot-actuator/README.md, +# Spring Boot Actuator, +, +The aim of this project is minimum fuss for getting applications up, +and running in production, and in other environments.  There is a, +strong emphasis on implementing RESTful web services but many features, +are more generic than that., +, +|Feature |Implementation |Notes |, +|---|---|---|, +|Server   |Tomcat or Jetty  | Whatever is on the classpath |, +|REST     |Spring MVC       | |, +|Security |Spring Security  | If on the classpath |, +|Logging  |Logback, Log4j or JDK | Whatever is on the classpath. Sensible defaults. |, +|Database |HSQLDB or H2     | Per classpath, or define a DataSource to override |, +|Externalized configuration | Properties or YAML | Support for Spring profiles. Bind automatically to @Bean. |, +|Audit                      | Spring Security and Spring ApplicationEvent |Flexible abstraction with sensible defaults for security events |, +|Validation                 | JSR-303    |If on the classpath |, +|Management endpoints       | Spring MVC | Health, basic metrics, request tracing, shutdown, thread dumps |, +|Error pages                | Spring MVC | Sensible defaults based on exception and status code |, +|JSON                       |Jackson 2 | |, +|ORM                        |Spring Data JPA | If on the classpath |, +|Batch                      |Spring Batch | If enabled and on the classpath |, +|Integration Patterns       |Spring Integration | If on the classpath |, +, +For a quick introduction and to get started quickly with a new, +project, carry on reading.  For more in depth coverage of the features, +of Spring Boot Actuator, go to the, +[Feature Guide](docs/Features.md)., +, +# Getting Started, +, +You will need Java (6 at least) and a build tool (Maven is what we use, +below, but you are more than welcome to use gradle).  These can be, +downloaded or installed easily in most operating systems.  For Ubuntu:, +, +    $ sudo apt-get install openjdk-6-jdk maven, +, +<!--FIXME: short instructions for Mac.-->, +, +## A basic project, +, +If you are using Maven create a really simple `pom.xml` with 2 dependencies:, +, +    <project>, +      <modelVersion>4.0.0</modelVersion>, +      <groupId>com.mycompany</groupId>, +      <artifactId>myproject</artifactId>, +      <version>1.0.0-SNAPSHOT</version>, +      <packaging>jar</packaging>, +      <parent>, +        <groupId>org.springframework.boot</groupId>, +        <artifactId>spring-starter-parent</artifactId>, +        <version>{{project.version}}</version>, +      </parent>, +      <dependencies>, +        <dependency>, +          <groupId>org.springframework.boot</groupId>, +          <artifactId>spring-starter-web</artifactId>, +        </dependency>, +        <dependency>, +          <groupId>org.springframework.boot</groupId>, +          <artifactId>spring-starter-actuator</artifactId>, +        </dependency>, +      </dependencies>, +      <build>, +        <plugins>, +          <plugin>, +            <groupId>org.springframework.boot</groupId>, +            <artifactId>spring-package-maven-plugin</artifactId>, +         </plugin>, +        </plugins>, +      </build>, +    </project>, +, +If you like Gradle, that's fine, and you will know what to do with, +those dependencies.  The first dependency adds Spring Boot auto, +configuration and the Tomcat container to your application, and the]