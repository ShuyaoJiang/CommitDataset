[+++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/env/DevToolsPropertyDefaultsPostProcessor.java, +import org.apache.commons.logging.Log;, +, +import org.springframework.boot.devtools.logger.DevToolsLogFactory;, +	private static final Log logger = DevToolsLogFactory, +			.getLog(DevToolsPropertyDefaultsPostProcessor.class);, +, +	private static final String ENABLED = "spring.devtools.add-properties";, +, +		Map<String, Object> properties = new HashMap<>();, +		properties.put("spring.thymeleaf.cache", "false");, +		properties.put("spring.freemarker.cache", "false");, +		properties.put("spring.groovy.template.cache", "false");, +		properties.put("spring.mustache.cache", "false");, +		properties.put("server.servlet.session.persistent", "true");, +		properties.put("spring.h2.console.enabled", "true");, +		properties.put("spring.resources.cache.period", "0");, +		properties.put("spring.resources.chain.cache", "false");, +		properties.put("spring.template.provider.cache", "false");, +		properties.put("spring.mvc.log-resolved-exception", "true");, +		properties.put("server.error.include-stacktrace", "ALWAYS");, +		properties.put("server.servlet.jsp.init-parameters.development", "true");, +		properties.put("spring.reactor.stacktrace-mode.enabled", "true");, +		properties.put("logging.level.web", "debug");, +		PROPERTIES = Collections.unmodifiableMap(properties);, +			logger.info("Devtools property and logging defaults active! Set '" + ENABLED, +					+ "' to 'false' to disable");, +			environment.getPropertySources(), +					.addLast(new MapPropertySource("devtools", PROPERTIES));, +		if (environment.getProperty(ENABLED, Boolean.class, true)) {, +		return false;, +	}, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/env/DevToolsPropertyDefaultsPostProcessor.java, +import org.apache.commons.logging.Log;, +, +import org.springframework.boot.devtools.logger.DevToolsLogFactory;, +	private static final Log logger = DevToolsLogFactory, +			.getLog(DevToolsPropertyDefaultsPostProcessor.class);, +, +	private static final String ENABLED = "spring.devtools.add-properties";, +, +		Map<String, Object> properties = new HashMap<>();, +		properties.put("spring.thymeleaf.cache", "false");, +		properties.put("spring.freemarker.cache", "false");, +		properties.put("spring.groovy.template.cache", "false");, +		properties.put("spring.mustache.cache", "false");, +		properties.put("server.servlet.session.persistent", "true");, +		properties.put("spring.h2.console.enabled", "true");, +		properties.put("spring.resources.cache.period", "0");, +		properties.put("spring.resources.chain.cache", "false");, +		properties.put("spring.template.provider.cache", "false");, +		properties.put("spring.mvc.log-resolved-exception", "true");, +		properties.put("server.error.include-stacktrace", "ALWAYS");, +		properties.put("server.servlet.jsp.init-parameters.development", "true");, +		properties.put("spring.reactor.stacktrace-mode.enabled", "true");, +		properties.put("logging.level.web", "debug");, +		PROPERTIES = Collections.unmodifiableMap(properties);, +			logger.info("Devtools property and logging defaults active! Set '" + ENABLED, +					+ "' to 'false' to disable");, +			environment.getPropertySources(), +					.addLast(new MapPropertySource("devtools", PROPERTIES));, +		if (environment.getProperty(ENABLED, Boolean.class, true)) {, +		return false;, +	}, +++ b/spring-boot-project/spring-boot-devtools/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    },, +    {, +      "name": "spring.devtools.add-properties",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable devtool property defaults.",, +      "defaultValue": true, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/env/DevToolsPropertyDefaultsPostProcessor.java, +import org.apache.commons.logging.Log;, +, +import org.springframework.boot.devtools.logger.DevToolsLogFactory;, +	private static final Log logger = DevToolsLogFactory, +			.getLog(DevToolsPropertyDefaultsPostProcessor.class);, +, +	private static final String ENABLED = "spring.devtools.add-properties";, +, +		Map<String, Object> properties = new HashMap<>();, +		properties.put("spring.thymeleaf.cache", "false");, +		properties.put("spring.freemarker.cache", "false");, +		properties.put("spring.groovy.template.cache", "false");, +		properties.put("spring.mustache.cache", "false");, +		properties.put("server.servlet.session.persistent", "true");, +		properties.put("spring.h2.console.enabled", "true");, +		properties.put("spring.resources.cache.period", "0");, +		properties.put("spring.resources.chain.cache", "false");, +		properties.put("spring.template.provider.cache", "false");, +		properties.put("spring.mvc.log-resolved-exception", "true");, +		properties.put("server.error.include-stacktrace", "ALWAYS");, +		properties.put("server.servlet.jsp.init-parameters.development", "true");, +		properties.put("spring.reactor.stacktrace-mode.enabled", "true");, +		properties.put("logging.level.web", "debug");, +		PROPERTIES = Collections.unmodifiableMap(properties);, +			logger.info("Devtools property and logging defaults active! Set '" + ENABLED, +					+ "' to 'false' to disable");, +			environment.getPropertySources(), +					.addLast(new MapPropertySource("devtools", PROPERTIES));]