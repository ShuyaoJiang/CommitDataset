[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.context.annotation.Import;, +import org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration;, +import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter;, +	@Import(EnableWebMvcConfiguration.class), +	/**, +	 * Configuration equivalent to {@code @EnableWebMvc} but with extra, +	 * {@link WebMvcProperties} support., +	 */, +	@Configuration, +	public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration {, +, +		@Autowired(required = false), +		private WebMvcProperties mvcProperties;, +, +		@Bean, +		@Override, +		public RequestMappingHandlerAdapter requestMappingHandlerAdapter() {, +			RequestMappingHandlerAdapter adapter = super.requestMappingHandlerAdapter();, +			adapter.setIgnoreDefaultModelOnRedirect(this.mvcProperties == null ? true, +					: this.mvcProperties.isIgnoreDefaultModelOnRedirect());, +			return adapter;, +		}, +, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.context.annotation.Import;, +import org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration;, +import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter;, +	@Import(EnableWebMvcConfiguration.class), +	/**, +	 * Configuration equivalent to {@code @EnableWebMvc} but with extra, +	 * {@link WebMvcProperties} support., +	 */, +	@Configuration, +	public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration {, +, +		@Autowired(required = false), +		private WebMvcProperties mvcProperties;, +, +		@Bean, +		@Override, +		public RequestMappingHandlerAdapter requestMappingHandlerAdapter() {, +			RequestMappingHandlerAdapter adapter = super.requestMappingHandlerAdapter();, +			adapter.setIgnoreDefaultModelOnRedirect(this.mvcProperties == null ? true, +					: this.mvcProperties.isIgnoreDefaultModelOnRedirect());, +			return adapter;, +		}, +, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	/**, +	 * If the the content of the "default" model should be ignored during redirect, +	 * scenarios., +	 */, +	private boolean ignoreDefaultModelOnRedirect = true;, +, +	public boolean isIgnoreDefaultModelOnRedirect() {, +		return this.ignoreDefaultModelOnRedirect;, +	}, +, +	public void setIgnoreDefaultModelOnRedirect(boolean ignoreDefaultModelOnRedirect) {, +		this.ignoreDefaultModelOnRedirect = ignoreDefaultModelOnRedirect;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.context.annotation.Import;, +import org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration;, +import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter;, +	@Import(EnableWebMvcConfiguration.class), +	/**, +	 * Configuration equivalent to {@code @EnableWebMvc} but with extra, +	 * {@link WebMvcProperties} support., +	 */, +	@Configuration, +	public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration {, +, +		@Autowired(required = false), +		private WebMvcProperties mvcProperties;, +, +		@Bean, +		@Override, +		public RequestMappingHandlerAdapter requestMappingHandlerAdapter() {, +			RequestMappingHandlerAdapter adapter = super.requestMappingHandlerAdapter();, +			adapter.setIgnoreDefaultModelOnRedirect(this.mvcProperties == null ? true, +					: this.mvcProperties.isIgnoreDefaultModelOnRedirect());, +			return adapter;, +		}, +, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	/**, +	 * If the the content of the "default" model should be ignored during redirect, +	 * scenarios., +	 */, +	private boolean ignoreDefaultModelOnRedirect = true;, +, +	public boolean isIgnoreDefaultModelOnRedirect() {, +		return this.ignoreDefaultModelOnRedirect;, +	}, +]