[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties(RepositoryRestProperties.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties(RepositoryRestProperties.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestProperties.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.data.rest;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import org.springframework.data.rest.core.config.RepositoryRestConfiguration;, +import org.springframework.http.MediaType;, +, +/**, + * Configuration properties for Spring Data REST., + *, + * @author Stephane Nicoll, + * @since 1.3.0, + */, +@ConfigurationProperties("spring.data.rest"), +public class RepositoryRestProperties {, +, +	/**, +	 * Base path to be used by Spring Data REST to expose repository resources., +	 */, +	private String basePath;, +, +	/**, +	 * Default size of pages., +	 */, +	private Integer defaultPageSize;, +, +	/**, +	 * Maximum size of pages., +	 */, +	private Integer maxPageSize;, +, +	/**, +	 * Name of the URL query string parameter that indicates what page to return., +	 */, +	private String pageParamName;, +, +	/**, +	 * Name of the URL query string parameter that indicates how many results to return at once., +	 */, +	private String limitParamName;, +, +	/**, +	 * Name of the URL query string parameter that indicates what direction to sort results., +	 */, +	private String sortParamName;, +, +	/**, +	 * Content type to use as a default when none is specified., +	 */, +	private MediaType defaultMediaType;, +, +	/**, +	 * Return a response body after creating an entity., +	 */, +	private Boolean returnBodyOnCreate;, +, +	/**, +	 * Return a response body after updating an entity., +	 */, +	private Boolean returnBodyOnUpdate;, +, +	/**, +	 * Enable enum value translation via the Spring Data REST default resource bundle. Will use, +	 * the fully qualified enum name as key., +	 */, +	private Boolean enableEnumTranslation;, +, +	public void applyTo(RepositoryRestConfiguration configuration) {, +		if (this.basePath != null) {, +			configuration.setBasePath(this.basePath);, +		}, +		if (this.defaultPageSize != null) {, +			configuration.setDefaultPageSize(this.defaultPageSize);, +		}, +		if (this.maxPageSize != null) {, +			configuration.setMaxPageSize(this.maxPageSize);, +		}, +		if (this.pageParamName != null) {]