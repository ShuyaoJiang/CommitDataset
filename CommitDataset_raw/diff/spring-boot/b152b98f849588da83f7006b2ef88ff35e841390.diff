[+++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +								+ "Application output:%n%s%s",, +								this.launchedApplication.getStandardOut())),, +						FileCopyUtils.copyToString(new FileReader(, +								this.launchedApplication.getStandardError()))));, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +								+ "Application output:%n%s%s",, +								this.launchedApplication.getStandardOut())),, +						FileCopyUtils.copyToString(new FileReader(, +								this.launchedApplication.getStandardError()))));, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/JvmLauncher.java, +		File standardError = new File(this.outputDirectory, name + ".err");, +				.redirectError(standardError).redirectOutput(standardOut).start();, +		return new LaunchedJvm(process, standardOut, standardError);, +		private final File standardError;, +, +		LaunchedJvm(Process process, File standardOut, File standardError) {, +			this.standardError = standardError;, +		File getStandardError() {, +			return this.standardError;, +		}, +, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +								+ "Application output:%n%s%s",, +								this.launchedApplication.getStandardOut())),, +						FileCopyUtils.copyToString(new FileReader(, +								this.launchedApplication.getStandardError()))));, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/JvmLauncher.java, +		File standardError = new File(this.outputDirectory, name + ".err");, +				.redirectError(standardError).redirectOutput(standardOut).start();, +		return new LaunchedJvm(process, standardOut, standardError);, +		private final File standardError;, +, +		LaunchedJvm(Process process, File standardOut, File standardError) {, +			this.standardError = standardError;, +		File getStandardError() {, +			return this.standardError;, +		}, +, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/LaunchedApplication.java, +	private final File standardError;, +, +	LaunchedApplication(File classesDirectory, File standardOut, File standardError,, +			Process... processes) {, +		this.standardError = standardError;, +	File getStandardError() {, +		return this.standardError;, +	}, +, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +								+ "Application output:%n%s%s",, +								this.launchedApplication.getStandardOut())),, +						FileCopyUtils.copyToString(new FileReader(, +								this.launchedApplication.getStandardError()))));, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/JvmLauncher.java, +		File standardError = new File(this.outputDirectory, name + ".err");, +				.redirectError(standardError).redirectOutput(standardOut).start();, +		return new LaunchedJvm(process, standardOut, standardError);, +		private final File standardError;, +, +		LaunchedJvm(Process process, File standardOut, File standardError) {, +			this.standardError = standardError;, +		File getStandardError() {, +			return this.standardError;, +		}, +, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/LaunchedApplication.java, +	private final File standardError;, +, +	LaunchedApplication(File classesDirectory, File standardOut, File standardError,, +			Process... processes) {, +		this.standardError = standardError;, +	File getStandardError() {, +		return this.standardError;, +	}, +, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/LocalApplicationLauncher.java, +				jvm.getStandardError(), jvm.getProcess());, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/DevToolsIntegrationTests.java, +								+ "Application output:%n%s%s",, +								this.launchedApplication.getStandardOut())),, +						FileCopyUtils.copyToString(new FileReader(, +								this.launchedApplication.getStandardError()))));, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/JvmLauncher.java, +		File standardError = new File(this.outputDirectory, name + ".err");, +				.redirectError(standardError).redirectOutput(standardOut).start();, +		return new LaunchedJvm(process, standardOut, standardError);, +		private final File standardError;, +, +		LaunchedJvm(Process process, File standardOut, File standardError) {, +			this.standardError = standardError;, +		File getStandardError() {, +			return this.standardError;, +		}, +, +++ b/spring-boot-integration-tests/spring-boot-devtools-tests/src/test/java/org/springframework/boot/devtools/tests/LaunchedApplication.java, +	private final File standardError;, +, +	LaunchedApplication(File classesDirectory, File standardOut, File standardError,, +			Process... processes) {]