[+++ b/spring-boot-dependencies/pom.xml, +		<spring.version>4.3.0.BUILD-SNAPSHOT</spring.version>, +++ b/spring-boot-dependencies/pom.xml, +		<spring.version>4.3.0.BUILD-SNAPSHOT</spring.version>, +++ b/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java, +import org.springframework.beans.factory.InjectionPoint;, +import org.springframework.beans.factory.UnsatisfiedDependencyException;, +		InjectionPoint failedInjectionPoint = findFailedInjectionPoint(ex);, +		if (failedInjectionPoint != null && failedInjectionPoint.getField() != null) {, +			return String.format(" (field %s)", failedInjectionPoint.getField());, +	private InjectionPoint findFailedInjectionPoint(BeanCreationException ex) {, +		if (!(ex instanceof UnsatisfiedDependencyException)) {, +			return null;, +		}, +		return ((UnsatisfiedDependencyException) ex).getInjectionPoint();, +++ b/spring-boot-dependencies/pom.xml, +		<spring.version>4.3.0.BUILD-SNAPSHOT</spring.version>, +++ b/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java, +import org.springframework.beans.factory.InjectionPoint;, +import org.springframework.beans.factory.UnsatisfiedDependencyException;, +		InjectionPoint failedInjectionPoint = findFailedInjectionPoint(ex);, +		if (failedInjectionPoint != null && failedInjectionPoint.getField() != null) {, +			return String.format(" (field %s)", failedInjectionPoint.getField());, +	private InjectionPoint findFailedInjectionPoint(BeanCreationException ex) {, +		if (!(ex instanceof UnsatisfiedDependencyException)) {, +			return null;, +		}, +		return ((UnsatisfiedDependencyException) ex).getInjectionPoint();, +++ b/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java, +				+ CycleWithAutowiredFields.BeanThreeConfiguration.class.getName());]