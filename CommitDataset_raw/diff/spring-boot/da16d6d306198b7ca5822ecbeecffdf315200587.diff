[+++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/HealthEndpointDocumentation.java, +				.andExpect(status().isOk()).andDo(document("health/insensitive"));, +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/HealthEndpointDocumentation.java, +				.andExpect(status().isOk()).andDo(document("health/insensitive"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/rich/MultiMetricRichGaugeReader.java, + * used matches that in the RichGaugeExporter, so this reader can be used on a store that, +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/HealthEndpointDocumentation.java, +				.andExpect(status().isOk()).andDo(document("health/insensitive"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/rich/MultiMetricRichGaugeReader.java, + * used matches that in the RichGaugeExporter, so this reader can be used on a store that, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void solrHealthIndicator() {, +	public void notSolrHealthIndicator() {, +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/HealthEndpointDocumentation.java, +				.andExpect(status().isOk()).andDo(document("health/insensitive"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/rich/MultiMetricRichGaugeReader.java, + * used matches that in the RichGaugeExporter, so this reader can be used on a store that, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void solrHealthIndicator() {, +	public void notSolrHealthIndicator() {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ShellPropertiesTests.java, +	public void testDefaultPasswordAutogeneratedIfUnresolvedPlaceholder() {, +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/HealthEndpointDocumentation.java, +				.andExpect(status().isOk()).andDo(document("health/insensitive"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/rich/MultiMetricRichGaugeReader.java, + * used matches that in the RichGaugeExporter, so this reader can be used on a store that, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void solrHealthIndicator() {, +	public void notSolrHealthIndicator() {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ShellPropertiesTests.java, +	public void testDefaultPasswordAutogeneratedIfUnresolvedPlaceholder() {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporterTests.java, +		MutablePropertyValues mpv = new MutablePropertyValues();, +		mpv.add("enabled", Boolean.FALSE);, +				new RootBeanDefinition(TestEndpoint.class, null, mpv));, +		MutablePropertyValues mpv = new MutablePropertyValues();, +		mpv.add("enabled", Boolean.TRUE);, +				new RootBeanDefinition(TestEndpoint.class, null, mpv));, +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/HealthEndpointDocumentation.java, +				.andExpect(status().isOk()).andDo(document("health/insensitive"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/rich/MultiMetricRichGaugeReader.java, + * used matches that in the RichGaugeExporter, so this reader can be used on a store that, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void solrHealthIndicator() {, +	public void notSolrHealthIndicator() {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ShellPropertiesTests.java, +	public void testDefaultPasswordAutogeneratedIfUnresolvedPlaceholder() {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporterTests.java, +		MutablePropertyValues mpv = new MutablePropertyValues();, +		mpv.add("enabled", Boolean.FALSE);, +				new RootBeanDefinition(TestEndpoint.class, null, mpv));, +		MutablePropertyValues mpv = new MutablePropertyValues();, +		mpv.add("enabled", Boolean.TRUE);, +				new RootBeanDefinition(TestEndpoint.class, null, mpv));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpointTests.java, +	public void insecureAnonymousAccessUnrestricted() {, +	public void insensitiveAnonymousAccessRestricted() {, +	public void insecureInsensitiveAnonymousAccessUnrestricted() {, +++ b/spring-boot-actuator-docs/src/main/asciidoc/health.adoc, +include::{generated}/health/insensitive/http-response.adoc[], +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +This endpoint (if available) contains HTML documentation for the other endpoints. Its path, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/HealthEndpointDocumentation.java, +				.andExpect(status().isOk()).andDo(document("health/insensitive"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/rich/MultiMetricRichGaugeReader.java, + * used matches that in the RichGaugeExporter, so this reader can be used on a store that, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +	public void solrHealthIndicator() {, +	public void notSolrHealthIndicator() {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ShellPropertiesTests.java]