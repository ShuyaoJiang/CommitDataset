[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +	 * management.server.servlet.context-path if management.server.port is configured., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +	 * management.server.servlet.context-path if management.server.port is configured., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementServerProperties.java, +	private final Servlet servlet = new Servlet();, +, +	@NestedConfigurationProperty, +	private Ssl ssl;, +	public InetAddress getAddress() {, +		return this.address;, +	}, +, +	public void setAddress(InetAddress address) {, +		this.address = address;, +	}, +, +	public Servlet getServlet() {, +		return this.servlet;, +	public boolean getAddApplicationContextHeader() {, +		return this.addApplicationContextHeader;, +	public void setAddApplicationContextHeader(boolean addApplicationContextHeader) {, +		this.addApplicationContextHeader = addApplicationContextHeader;, +	}, +, +	/**, +	 * Servlet properties., +	 */, +	public class Servlet {, +, +		/**, +		 * Management endpoint context-path. For instance, '/management'. Requires a, +		 * custom management.server.port., +		 */, +		private String contextPath  = "";, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +	 * management.server.servlet.context-path if management.server.port is configured., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementServerProperties.java, +	private final Servlet servlet = new Servlet();, +, +	@NestedConfigurationProperty, +	private Ssl ssl;, +	public InetAddress getAddress() {, +		return this.address;, +	}, +, +	public void setAddress(InetAddress address) {, +		this.address = address;, +	}, +, +	public Servlet getServlet() {, +		return this.servlet;, +	public boolean getAddApplicationContextHeader() {, +		return this.addApplicationContextHeader;, +	public void setAddApplicationContextHeader(boolean addApplicationContextHeader) {, +		this.addApplicationContextHeader = addApplicationContextHeader;, +	}, +, +	/**, +	 * Servlet properties., +	 */, +	public class Servlet {, +, +		/**, +		 * Management endpoint context-path. For instance, '/management'. Requires a, +		 * custom management.server.port., +		 */, +		private String contextPath  = "";, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementChildContextConfiguration.java, +			webServerFactory.setContextPath(, +					managementServerProperties.getServlet().getContextPath());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +	 * management.server.servlet.context-path if management.server.port is configured., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementServerProperties.java, +	private final Servlet servlet = new Servlet();, +, +	@NestedConfigurationProperty, +	private Ssl ssl;, +	public InetAddress getAddress() {, +		return this.address;, +	}, +, +	public void setAddress(InetAddress address) {, +		this.address = address;, +	}, +, +	public Servlet getServlet() {, +		return this.servlet;, +	public boolean getAddApplicationContextHeader() {, +		return this.addApplicationContextHeader;, +	public void setAddApplicationContextHeader(boolean addApplicationContextHeader) {, +		this.addApplicationContextHeader = addApplicationContextHeader;, +	}, +, +	/**, +	 * Servlet properties., +	 */, +	public class Servlet {]