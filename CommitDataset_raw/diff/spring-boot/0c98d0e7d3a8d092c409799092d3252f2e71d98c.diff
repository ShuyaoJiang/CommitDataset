[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +	private final boolean jsr303Present;, +, +	private volatile Validator jsr303Validator;, +		this.jsr303Present = ConfigurationPropertiesJsr303Validator, +				.isJsr303Present(applicationContext);, +		if (this.jsr303Present && target.getAnnotation(Validated.class) != null) {, +			validators.add(getJsr303Validator());, +	private Validator getJsr303Validator() {, +		if (this.jsr303Validator == null) {, +			this.jsr303Validator = new ConfigurationPropertiesJsr303Validator(, +					this.applicationContext);, +		}, +		return this.jsr303Validator;, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +	private final boolean jsr303Present;, +, +	private volatile Validator jsr303Validator;, +		this.jsr303Present = ConfigurationPropertiesJsr303Validator, +				.isJsr303Present(applicationContext);, +		if (this.jsr303Present && target.getAnnotation(Validated.class) != null) {, +			validators.add(getJsr303Validator());, +	private Validator getJsr303Validator() {, +		if (this.jsr303Validator == null) {, +			this.jsr303Validator = new ConfigurationPropertiesJsr303Validator(, +					this.applicationContext);, +		}, +		return this.jsr303Validator;, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesJsr303Validator.java, +	ConfigurationPropertiesJsr303Validator(ApplicationContext applicationContext) {, +	public static boolean isJsr303Present(ApplicationContext applicationContext) {, +				return false;, +		return true;, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +	private final boolean jsr303Present;, +, +	private volatile Validator jsr303Validator;, +		this.jsr303Present = ConfigurationPropertiesJsr303Validator, +				.isJsr303Present(applicationContext);, +		if (this.jsr303Present && target.getAnnotation(Validated.class) != null) {, +			validators.add(getJsr303Validator());, +	private Validator getJsr303Validator() {, +		if (this.jsr303Validator == null) {, +			this.jsr303Validator = new ConfigurationPropertiesJsr303Validator(, +					this.applicationContext);, +		}, +		return this.jsr303Validator;, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesJsr303Validator.java, +	ConfigurationPropertiesJsr303Validator(ApplicationContext applicationContext) {, +	public static boolean isJsr303Present(ApplicationContext applicationContext) {, +				return false;, +		return true;, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/ValidationExceptionFailureAnalyzerTests.java, + * Copyright 2012-2018 the original author or authors., +		new AnnotationConfigApplicationContext(NonValidatedTestConfiguration.class), +				.close();, +]