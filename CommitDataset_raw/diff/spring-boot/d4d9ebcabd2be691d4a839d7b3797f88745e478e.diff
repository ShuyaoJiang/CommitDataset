[+++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/resources/org/springframework/boot/git.properties, +#Tue Oct 15 09:46:33 EDT 2013, +git.commit.id.abbrev=be12635, +git.commit.message.full=Ensure env vars are consulted for PATH\n, +git.commit.id=be1263500df0c363ad45c0ccf387e4c06e6f5c7d, +git.commit.message.short=Ensure env vars are consulted for PATH, +git.commit.time=2013-10-14T16\:07\:50-0400, +git.build.time=2013-10-15T09\:46\:33-0400, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/resources/org/springframework/boot/git.properties, +#Tue Oct 15 09:46:33 EDT 2013, +git.commit.id.abbrev=be12635, +git.commit.message.full=Ensure env vars are consulted for PATH\n, +git.commit.id=be1263500df0c363ad45c0ccf387e4c06e6f5c7d, +git.commit.message.short=Ensure env vars are consulted for PATH, +git.commit.time=2013-10-14T16\:07\:50-0400, +git.build.time=2013-10-15T09\:46\:33-0400, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/git.properties, +#Tue Oct 15 09:46:12 EDT 2013, +git.commit.id.abbrev=be12635, +git.commit.message.full=Ensure env vars are consulted for PATH\n, +git.commit.id=be1263500df0c363ad45c0ccf387e4c06e6f5c7d, +git.commit.message.short=Ensure env vars are consulted for PATH, +git.commit.time=2013-10-14T16\:07\:50-0400, +git.build.time=2013-10-15T09\:46\:12-0400, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/resources/org/springframework/boot/git.properties, +#Tue Oct 15 09:46:33 EDT 2013, +git.commit.id.abbrev=be12635, +git.commit.message.full=Ensure env vars are consulted for PATH\n, +git.commit.id=be1263500df0c363ad45c0ccf387e4c06e6f5c7d, +git.commit.message.short=Ensure env vars are consulted for PATH, +git.commit.time=2013-10-14T16\:07\:50-0400, +git.build.time=2013-10-15T09\:46\:33-0400, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/git.properties, +#Tue Oct 15 09:46:12 EDT 2013, +git.commit.id.abbrev=be12635, +git.commit.message.full=Ensure env vars are consulted for PATH\n, +git.commit.id=be1263500df0c363ad45c0ccf387e4c06e6f5c7d, +git.commit.message.short=Ensure env vars are consulted for PATH, +git.commit.time=2013-10-14T16\:07\:50-0400, +git.build.time=2013-10-15T09\:46\:12-0400, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +			for (Archive archive : getClassPathArchives(path)) {, +				List<Archive> nested = new ArrayList<Archive>(, +						archive.getNestedArchives(new EntryFilter() {, +							@Override, +							public boolean matches(Entry entry) {, +								return entry.isDirectory(), +										|| entry.getName().endsWith(".jar"), +										|| entry.getName().endsWith(".zip");, +							}, +						}));, +				nested.add(0, archive);, +				lib.addAll(nested);, +			}, +		}, +		addParentClassLoaderEntries(lib);, +		return lib;, +	}, +, +	private List<Archive> getClassPathArchives(String path) {, +		List<Archive> lib = new ArrayList<Archive>();, +			this.logger.info("Adding classpath entries from " + file);, +			lib.add(archive);, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/resources/org/springframework/boot/git.properties, +#Tue Oct 15 09:46:33 EDT 2013, +git.commit.id.abbrev=be12635, +git.commit.message.full=Ensure env vars are consulted for PATH\n, +git.commit.id=be1263500df0c363ad45c0ccf387e4c06e6f5c7d, +git.commit.message.short=Ensure env vars are consulted for PATH, +git.commit.time=2013-10-14T16\:07\:50-0400, +git.build.time=2013-10-15T09\:46\:33-0400, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/git.properties, +#Tue Oct 15 09:46:12 EDT 2013, +git.commit.id.abbrev=be12635, +git.commit.message.full=Ensure env vars are consulted for PATH\n, +git.commit.id=be1263500df0c363ad45c0ccf387e4c06e6f5c7d, +git.commit.message.short=Ensure env vars are consulted for PATH, +git.commit.time=2013-10-14T16\:07\:50-0400, +git.build.time=2013-10-15T09\:46\:12-0400, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +			for (Archive archive : getClassPathArchives(path)) {, +				List<Archive> nested = new ArrayList<Archive>(, +						archive.getNestedArchives(new EntryFilter() {, +							@Override, +							public boolean matches(Entry entry) {, +								return entry.isDirectory(), +										|| entry.getName().endsWith(".jar"), +										|| entry.getName().endsWith(".zip");, +							}, +						}));, +				nested.add(0, archive);, +				lib.addAll(nested);, +			}, +		}, +		addParentClassLoaderEntries(lib);, +		return lib;, +	}, +, +	private List<Archive> getClassPathArchives(String path) {, +		List<Archive> lib = new ArrayList<Archive>();]