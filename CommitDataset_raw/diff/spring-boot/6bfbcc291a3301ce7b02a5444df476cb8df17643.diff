[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java, +import java.net.InetSocketAddress;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collection;, +import java.util.List;, +, +import org.springframework.util.Assert;, +	private List<NettyServerCustomizer> nettyServerCustomizers = new ArrayList<>();, +, +	/**, +	 * Returns a mutable collection of the {@link NettyServerCustomizer}s that will be, +	 * applied to the Netty server builder., +	 * @return the customizers that will be applied, +	 */, +	public Collection<NettyServerCustomizer> getNettyServerCustomizers() {, +		return this.nettyServerCustomizers;, +	}, +, +	/**, +	 * Set {@link NettyServerCustomizer}s that should be applied to the Netty, +	 * server builder. Calling this method will replace any existing customizers., +	 * @param nettyServerCustomizers the customizers to set, +	 */, +	public void setNettyServerCustomizers(, +			Collection<? extends NettyServerCustomizer> nettyServerCustomizers) {, +		Assert.notNull(nettyServerCustomizers,, +				"NettyServerCustomizers must not be null");, +		this.nettyServerCustomizers = new ArrayList<>(nettyServerCustomizers);, +	}, +, +, +	/**, +	 * Add {@link NettyServerCustomizer}s that should applied while building the server., +	 * @param nettyServerCustomizer the customizers to add, +	 */, +	public void addContextCustomizers(, +			NettyServerCustomizer... nettyServerCustomizer) {, +		Assert.notNull(nettyServerCustomizer,, +				"NettyWebServerCustomizer must not be null");, +		this.nettyServerCustomizers.addAll(Arrays.asList(nettyServerCustomizer));, +	}, +, +		return HttpServer.builder().options(options -> {, +			options.listenAddress(getListenAddress());, +			this.nettyServerCustomizers.forEach(customizer -> customizer.customize(options));, +		}).build();, +	}, +, +	private InetSocketAddress getListenAddress() {, +			return new InetSocketAddress(getAddress().getHostAddress(), getPort());, +			return new InetSocketAddress(getPort());, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java, +import java.net.InetSocketAddress;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collection;, +import java.util.List;, +, +import org.springframework.util.Assert;, +	private List<NettyServerCustomizer> nettyServerCustomizers = new ArrayList<>();, +, +	/**, +	 * Returns a mutable collection of the {@link NettyServerCustomizer}s that will be, +	 * applied to the Netty server builder., +	 * @return the customizers that will be applied, +	 */, +	public Collection<NettyServerCustomizer> getNettyServerCustomizers() {, +		return this.nettyServerCustomizers;, +	}, +, +	/**, +	 * Set {@link NettyServerCustomizer}s that should be applied to the Netty, +	 * server builder. Calling this method will replace any existing customizers., +	 * @param nettyServerCustomizers the customizers to set, +	 */, +	public void setNettyServerCustomizers(, +			Collection<? extends NettyServerCustomizer> nettyServerCustomizers) {, +		Assert.notNull(nettyServerCustomizers,, +				"NettyServerCustomizers must not be null");, +		this.nettyServerCustomizers = new ArrayList<>(nettyServerCustomizers);, +	}, +, +, +	/**, +	 * Add {@link NettyServerCustomizer}s that should applied while building the server., +	 * @param nettyServerCustomizer the customizers to add, +	 */, +	public void addContextCustomizers(, +			NettyServerCustomizer... nettyServerCustomizer) {, +		Assert.notNull(nettyServerCustomizer,, +				"NettyWebServerCustomizer must not be null");, +		this.nettyServerCustomizers.addAll(Arrays.asList(nettyServerCustomizer));, +	}, +, +		return HttpServer.builder().options(options -> {, +			options.listenAddress(getListenAddress());, +			this.nettyServerCustomizers.forEach(customizer -> customizer.customize(options));, +		}).build();, +	}]