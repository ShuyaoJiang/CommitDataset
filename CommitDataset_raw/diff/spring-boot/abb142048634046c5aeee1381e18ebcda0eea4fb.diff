[+++ b/spring-boot-samples/spring-boot-sample-tomcat/src/main/java/org/springframework/boot/sample/tomcat/web/SampleController.java, +++ b/spring-boot-samples/spring-boot-sample-tomcat/src/main/java/org/springframework/boot/sample/tomcat/web/SampleController.java, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +			try {, +				// Allow the server to start so the ServletContext is available, but stop, +				// the connector to prevent requests from being handled before the Spring, +				// context is ready:, +				Connector connector = this.tomcat.getConnector();, +				connector.getProtocolHandler().stop();, +			}, +			catch (Exception e) {, +				this.logger.error("Cannot pause connector: ", e);, +			}, +				connector.getProtocolHandler().start();, +++ b/spring-boot-samples/spring-boot-sample-tomcat/src/main/java/org/springframework/boot/sample/tomcat/web/SampleController.java, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +			try {, +				// Allow the server to start so the ServletContext is available, but stop, +				// the connector to prevent requests from being handled before the Spring, +				// context is ready:, +				Connector connector = this.tomcat.getConnector();, +				connector.getProtocolHandler().stop();, +			}, +			catch (Exception e) {, +				this.logger.error("Cannot pause connector: ", e);, +			}, +				connector.getProtocolHandler().start();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +		if (connector.getProtocolHandler() instanceof AbstractProtocol) {, +			if (getAddress() != null) {, +				((AbstractProtocol) connector.getProtocolHandler()), +						.setAddress(getAddress());, +		// If ApplicationContext is slow to start we want Tomcat not to bind to the socket, +		// prematurely..., +		connector.setProperty("bindOnInit", "false");, +	}]