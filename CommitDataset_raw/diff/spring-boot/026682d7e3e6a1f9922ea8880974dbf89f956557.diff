[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqProperties.java, +	 * Sql dialect to use, auto-detected by default., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqProperties.java, +	 * Sql dialect to use, auto-detected by default., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfigurationTests.java, +import org.springframework.util.ObjectUtils;, + * @author Stephane Nicoll, +	private AnnotationConfigApplicationContext context;, +		load();, +		load(JooqDataSourceConfiguration.class);, +		load(JooqDataSourceConfiguration.class, TxManagerConfiguration.class);, +		load(JooqDataSourceConfiguration.class, TxManagerConfiguration.class,, +				TestExecuteListenerProvider.class, TestVisitListenerProvider.class);, +		load(new Class<?>[] { JooqDataSourceConfiguration.class }, "spring.jooq.sql-dialect:PoSTGrES");, +	private void load(Class<?>... configs) {, +		load(configs, new String[0]);, +	}, +, +	private void load(Class<?>[] configs, String... environment) {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		TestPropertyValues.of("spring.datasource.name:jooqtest").applyTo(ctx);, +		TestPropertyValues.of(environment).applyTo(ctx);, +		if (!ObjectUtils.isEmpty(configs)) {, +			ctx.register(configs);, +		}, +		ctx.register(JooqAutoConfiguration.class);, +		ctx.refresh();, +		this.context = ctx;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqProperties.java, +	 * Sql dialect to use, auto-detected by default., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfigurationTests.java, +import org.springframework.util.ObjectUtils;, + * @author Stephane Nicoll, +	private AnnotationConfigApplicationContext context;, +		load();, +		load(JooqDataSourceConfiguration.class);, +		load(JooqDataSourceConfiguration.class, TxManagerConfiguration.class);, +		load(JooqDataSourceConfiguration.class, TxManagerConfiguration.class,, +				TestExecuteListenerProvider.class, TestVisitListenerProvider.class);, +		load(new Class<?>[] { JooqDataSourceConfiguration.class }, "spring.jooq.sql-dialect:PoSTGrES");, +	private void load(Class<?>... configs) {, +		load(configs, new String[0]);, +	}, +, +	private void load(Class<?>[] configs, String... environment) {, +		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();, +		TestPropertyValues.of("spring.datasource.name:jooqtest").applyTo(ctx);, +		TestPropertyValues.of(environment).applyTo(ctx);, +		if (!ObjectUtils.isEmpty(configs)) {, +			ctx.register(configs);, +		}, +		ctx.register(JooqAutoConfiguration.class);, +		ctx.refresh();, +		this.context = ctx;, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.jooq.sql-dialect= # Sql dialect to use, auto-detected by default.]