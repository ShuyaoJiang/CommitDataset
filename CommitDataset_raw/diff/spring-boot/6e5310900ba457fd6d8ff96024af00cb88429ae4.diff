[+++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>thymeleaf-extras-springsecurity5</artifactId>, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>thymeleaf-extras-springsecurity5</artifactId>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +import org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect;, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>thymeleaf-extras-springsecurity5</artifactId>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +import org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafReactiveAutoConfigurationTests.java, +import org.thymeleaf.context.IContext;, +import org.thymeleaf.extras.springsecurity5.util.SpringSecurityContextUtils;, +import org.thymeleaf.spring5.context.webflux.SpringWebFluxContext;, +import org.springframework.mock.http.server.reactive.MockServerHttpRequest;, +import org.springframework.mock.web.server.MockServerWebExchange;, +import org.springframework.security.authentication.TestingAuthenticationToken;, +import org.springframework.security.core.context.SecurityContextImpl;, +	public void useSecurityDialect() {, +		load(BaseConfiguration.class);, +		ISpringWebFluxTemplateEngine engine = this.context, +				.getBean(ISpringWebFluxTemplateEngine.class);, +		MockServerWebExchange exchange = MockServerWebExchange, +				.from(MockServerHttpRequest.get("/test").build());, +		exchange.getAttributes().put(, +				SpringSecurityContextUtils.SECURITY_CONTEXT_MODEL_ATTRIBUTE_NAME,, +				new SecurityContextImpl(, +						new TestingAuthenticationToken("alice", "admin")));, +		IContext attrs = new SpringWebFluxContext(exchange);, +		String result = engine.process("security-dialect", attrs);, +		assertThat(result).isEqualTo("<html><body><div>alice</div></body></html>\n");, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>thymeleaf-extras-springsecurity5</artifactId>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +import org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafReactiveAutoConfigurationTests.java, +import org.thymeleaf.context.IContext;, +import org.thymeleaf.extras.springsecurity5.util.SpringSecurityContextUtils;, +import org.thymeleaf.spring5.context.webflux.SpringWebFluxContext;, +import org.springframework.mock.http.server.reactive.MockServerHttpRequest;, +import org.springframework.mock.web.server.MockServerWebExchange;, +import org.springframework.security.authentication.TestingAuthenticationToken;, +import org.springframework.security.core.context.SecurityContextImpl;, +	public void useSecurityDialect() {, +		load(BaseConfiguration.class);, +		ISpringWebFluxTemplateEngine engine = this.context, +				.getBean(ISpringWebFluxTemplateEngine.class);, +		MockServerWebExchange exchange = MockServerWebExchange, +				.from(MockServerHttpRequest.get("/test").build());, +		exchange.getAttributes().put(, +				SpringSecurityContextUtils.SECURITY_CONTEXT_MODEL_ATTRIBUTE_NAME,, +				new SecurityContextImpl(, +						new TestingAuthenticationToken("alice", "admin")));, +		IContext attrs = new SpringWebFluxContext(exchange);, +		String result = engine.process("security-dialect", attrs);, +		assertThat(result).isEqualTo("<html><body><div>alice</div></body></html>\n");, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafServletAutoConfigurationTests.java, +import org.thymeleaf.context.WebContext;, +import org.springframework.security.authentication.TestingAuthenticationToken;, +import org.springframework.security.core.context.SecurityContextHolder;, +import org.springframework.security.core.context.SecurityContextImpl;, +	public void useSecurityDialect() {, +		load(BaseConfiguration.class);, +		TemplateEngine engine = this.context.getBean(TemplateEngine.class);, +		WebContext attrs = new WebContext(new MockHttpServletRequest(),, +				new MockHttpServletResponse(), new MockServletContext());, +		try {, +			SecurityContextHolder.setContext(new SecurityContextImpl(, +					new TestingAuthenticationToken("alice", "admin")));, +			String result = engine.process("security-dialect", attrs);, +			assertThat(result).isEqualTo("<html><body><div>alice</div></body></html>\n");, +		}, +		finally {, +			SecurityContextHolder.clearContext();, +		}, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>thymeleaf-extras-springsecurity5</artifactId>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +import org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafReactiveAutoConfigurationTests.java, +import org.thymeleaf.context.IContext;, +import org.thymeleaf.extras.springsecurity5.util.SpringSecurityContextUtils;, +import org.thymeleaf.spring5.context.webflux.SpringWebFluxContext;, +import org.springframework.mock.http.server.reactive.MockServerHttpRequest;, +import org.springframework.mock.web.server.MockServerWebExchange;, +import org.springframework.security.authentication.TestingAuthenticationToken;, +import org.springframework.security.core.context.SecurityContextImpl;, +	public void useSecurityDialect() {, +		load(BaseConfiguration.class);, +		ISpringWebFluxTemplateEngine engine = this.context, +				.getBean(ISpringWebFluxTemplateEngine.class);]