[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/LogFileMvcEndpoint.java, +import javax.servlet.ServletException;, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.http.HttpStatus;, +import org.springframework.web.servlet.resource.ResourceHttpRequestHandler;, + * @author Johannes Edmeier, +	@RequestMapping(method = { RequestMethod.GET, RequestMethod.HEAD }), +	public void invoke(HttpServletRequest request, HttpServletResponse response), +			throws ServletException, IOException {, +			response.setStatus(HttpStatus.NOT_FOUND.value());, +			return;, +		new Handler(resource).handleRequest(request, response);, +	/**, +	 * {@link ResourceHttpRequestHandler} to send the log file., +	 */, +	private static class Handler extends ResourceHttpRequestHandler {, +, +		private final Resource resource;, +, +		public Handler(Resource resource) {, +			this.resource = resource;, +		}, +, +		@Override, +		protected Resource getResource(HttpServletRequest request) throws IOException {, +			return this.resource;, +		}, +, +		@Override, +		protected MediaType getMediaType(Resource resource) {, +			return MediaType.TEXT_PLAIN;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/LogFileMvcEndpoint.java, +import javax.servlet.ServletException;, +import javax.servlet.http.HttpServletRequest;, +import javax.servlet.http.HttpServletResponse;, +import org.springframework.http.HttpStatus;, +import org.springframework.web.servlet.resource.ResourceHttpRequestHandler;, + * @author Johannes Edmeier, +	@RequestMapping(method = { RequestMethod.GET, RequestMethod.HEAD }), +	public void invoke(HttpServletRequest request, HttpServletResponse response), +			throws ServletException, IOException {, +			response.setStatus(HttpStatus.NOT_FOUND.value());, +			return;, +		new Handler(resource).handleRequest(request, response);, +	/**, +	 * {@link ResourceHttpRequestHandler} to send the log file., +	 */, +	private static class Handler extends ResourceHttpRequestHandler {, +, +		private final Resource resource;, +, +		public Handler(Resource resource) {, +			this.resource = resource;, +		}, +, +		@Override, +		protected Resource getResource(HttpServletRequest request) throws IOException {, +			return this.resource;, +		}, +, +		@Override, +		protected MediaType getMediaType(Resource resource) {, +			return MediaType.TEXT_PLAIN;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/LogFileMvcEndpointTests.java, +import org.springframework.http.HttpMethod;, +import org.springframework.mock.web.MockHttpServletRequest;, +import org.springframework.mock.web.MockHttpServletResponse;, + * @author Johannes Edmeier, +	public void notAvailableWithoutLogFile() throws Exception {, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		MockHttpServletRequest request = new MockHttpServletRequest(, +				HttpMethod.HEAD.name(), "/logfile");, +		this.mvc.invoke(request, response);, +		assertThat(response.getStatus(), equalTo(HttpStatus.NOT_FOUND.value()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		MockHttpServletRequest request = new MockHttpServletRequest(, +				HttpMethod.HEAD.name(), "/logfile");, +		this.mvc.invoke(request, response);, +		assertThat(response.getStatus(), equalTo(HttpStatus.NOT_FOUND.value()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		MockHttpServletRequest request = new MockHttpServletRequest(, +				HttpMethod.HEAD.name(), "/logfile");, +		this.mvc.invoke(request, response);, +		assertThat(response.getStatus(), equalTo(HttpStatus.OK.value()));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		MockHttpServletRequest request = new MockHttpServletRequest(, +				HttpMethod.HEAD.name(), "/logfile");, +		this.mvc.invoke(request, response);, +		assertThat(response.getStatus(), equalTo(HttpStatus.NOT_FOUND.value()));, +	public void invokeGetsContent() throws Exception {, +		MockHttpServletResponse response = new MockHttpServletResponse();]