[+++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTest.java, + * Copyright 2012-2018 the original author or authors., + * TestRestTemplate} and/or, + * {@link org.springframework.test.web.reactive.server.WebTestClient WebTestClient} bean, + * for use in web tests that are using a fully running web server.</li>, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTest.java, + * Copyright 2012-2018 the original author or authors., + * TestRestTemplate} and/or, + * {@link org.springframework.test.web.reactive.server.WebTestClient WebTestClient} bean, + * for use in web tests that are using a fully running web server.</li>, +++ /dev/null, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTest.java, + * Copyright 2012-2018 the original author or authors., + * TestRestTemplate} and/or, + * {@link org.springframework.test.web.reactive.server.WebTestClient WebTestClient} bean, + * for use in web tests that are using a fully running web server.</li>, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTest.java, + * Copyright 2012-2018 the original author or authors., + * TestRestTemplate} and/or, + * {@link org.springframework.test.web.reactive.server.WebTestClient WebTestClient} bean, + * for use in web tests that are using a fully running web server.</li>, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/reactive/server/WebTestClientContextCustomizer.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test.web.reactive.server;, +, +import java.util.Collection;, +, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.BeanFactoryAware;, +import org.springframework.beans.factory.BeanFactoryUtils;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.ListableBeanFactory;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.beans.factory.config.BeanDefinition;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +import org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.boot.test.context.SpringBootTest;, +import org.springframework.boot.web.codec.CodecCustomizer;, +import org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +import org.springframework.context.ConfigurableApplicationContext;, +import org.springframework.context.annotation.ConfigurationClassPostProcessor;, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.AnnotatedElementUtils;, +import org.springframework.test.context.ContextCustomizer;, +import org.springframework.test.context.MergedContextConfiguration;, +import org.springframework.test.web.reactive.server.WebTestClient;, +import org.springframework.util.CollectionUtils;, +import org.springframework.web.reactive.function.client.ExchangeStrategies;, +, +/**, + * {@link ContextCustomizer} for {@link WebTestClient}., + *, + * @author Stephane Nicoll, + */, +class WebTestClientContextCustomizer implements ContextCustomizer {, +, +	@Override, +	public void customizeContext(ConfigurableApplicationContext context,, +			MergedContextConfiguration mergedConfig) {, +		SpringBootTest annotation = AnnotatedElementUtils, +				.getMergedAnnotation(mergedConfig.getTestClass(), SpringBootTest.class);, +		if (annotation.webEnvironment().isEmbedded()) {, +			registerWebTestClient(context);, +		}, +	}, +, +	private void registerWebTestClient(ConfigurableApplicationContext context) {, +		ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();, +		if (beanFactory instanceof BeanDefinitionRegistry) {, +			registerWebTestClient(context, (BeanDefinitionRegistry) context);, +		}, +	}, +, +	private void registerWebTestClient(ConfigurableApplicationContext context,, +			BeanDefinitionRegistry registry) {, +		RootBeanDefinition definition = new RootBeanDefinition(]