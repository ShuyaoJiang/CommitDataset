[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +import org.springframework.web.filter.FormContentFilter;, +	@ConditionalOnMissingBean(FormContentFilter.class), +	@ConditionalOnProperty(prefix = "spring.mvc.formcontent.filter", name = "enabled", matchIfMissing = true), +	public OrderedFormContentFilter formContentFilter() {, +		return new OrderedFormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +import org.springframework.web.filter.FormContentFilter;, +	@ConditionalOnMissingBean(FormContentFilter.class), +	@ConditionalOnProperty(prefix = "spring.mvc.formcontent.filter", name = "enabled", matchIfMissing = true), +	public OrderedFormContentFilter formContentFilter() {, +		return new OrderedFormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "defaultValue": true,, +      "deprecation" : {, +        "replacement" : "spring.mvc.formcontent.filter.enabled",, +        "level" : "error", +      }, +    },, +    {, +      "name": "spring.mvc.formcontent.filter.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable Spring's FormContentFilter.",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +import org.springframework.web.filter.FormContentFilter;, +	@ConditionalOnMissingBean(FormContentFilter.class), +	@ConditionalOnProperty(prefix = "spring.mvc.formcontent.filter", name = "enabled", matchIfMissing = true), +	public OrderedFormContentFilter formContentFilter() {, +		return new OrderedFormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "defaultValue": true,, +      "deprecation" : {, +        "replacement" : "spring.mvc.formcontent.filter.enabled",, +        "level" : "error", +      }, +    },, +    {, +      "name": "spring.mvc.formcontent.filter.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable Spring's FormContentFilter.",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +		public OrderedFormContentFilter formContentFilter() {, +			return new OrderedFormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +import org.springframework.web.filter.FormContentFilter;, +	@ConditionalOnMissingBean(FormContentFilter.class), +	@ConditionalOnProperty(prefix = "spring.mvc.formcontent.filter", name = "enabled", matchIfMissing = true), +	public OrderedFormContentFilter formContentFilter() {, +		return new OrderedFormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "defaultValue": true,, +      "deprecation" : {, +        "replacement" : "spring.mvc.formcontent.filter.enabled",, +        "level" : "error", +      }, +    },, +    {, +      "name": "spring.mvc.formcontent.filter.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable Spring's FormContentFilter.",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfigurationTests.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +		public OrderedFormContentFilter formContentFilter() {, +			return new OrderedFormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java, +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +import org.springframework.web.filter.FormContentFilter;, +	public void formContentFilterIsAutoConfigured() {, +				.hasSingleBean(OrderedFormContentFilter.class));, +	public void formContentFilterCanBeOverridden() {, +		this.contextRunner.withUserConfiguration(CustomFormContentFilter.class), +					assertThat(context).doesNotHaveBean(OrderedFormContentFilter.class);, +					assertThat(context).hasSingleBean(FormContentFilter.class);, +	public void formContentFilterCanBeDisabled() {, +				.withPropertyValues("spring.mvc.formcontent.filter.enabled=false"), +						.doesNotHaveBean(FormContentFilter.class));, +	static class CustomFormContentFilter {, +		public FormContentFilter customFormContentFilter() {, +			return new FormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +import org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;, +import org.springframework.web.filter.FormContentFilter;, +	@ConditionalOnMissingBean(FormContentFilter.class), +	@ConditionalOnProperty(prefix = "spring.mvc.formcontent.filter", name = "enabled", matchIfMissing = true), +	public OrderedFormContentFilter formContentFilter() {, +		return new OrderedFormContentFilter();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "defaultValue": true,, +      "deprecation" : {, +        "replacement" : "spring.mvc.formcontent.filter.enabled",, +        "level" : "error", +      }, +    },]