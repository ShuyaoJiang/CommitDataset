[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +		String encoding = this.environment.getProperty("encoding", "utf-8");, +		messageSource.setDefaultEncoding(encoding);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +		String encoding = this.environment.getProperty("encoding", "utf-8");, +		messageSource.setDefaultEncoding(encoding);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfigurationTests.java, +import org.springframework.boot.test.EnvironmentTestUtils;, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.messages.basename:test/messages");, +	@Test, +	public void testBadEncoding() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(MessageSourceAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.messages.encoding:rubbish");, +		this.context.refresh();, +		// Bad encoding just means the messages are ignored, +		assertEquals("blah", this.context.getMessage("foo", null, "blah", Locale.UK));, +	}, +]