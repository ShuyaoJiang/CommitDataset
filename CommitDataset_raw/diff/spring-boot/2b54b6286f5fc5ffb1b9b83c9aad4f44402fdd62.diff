[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +import org.springframework.beans.factory.BeanClassLoaderAware;, +@ConfigurationProperties(path = "spring.datasource"), +public abstract class AbstractDataSourceConfiguration implements BeanClassLoaderAware {, +	private ClassLoader classLoader;, +, +	@Override, +	public void setBeanClassLoader(ClassLoader classLoader) {, +		this.classLoader = classLoader;, +	}, +, +		EmbeddedDatabaseConnection embeddedDatabaseConnection = EmbeddedDatabaseConnection, +				.get(this.classLoader);, +		this.driverClassName = embeddedDatabaseConnection.getDriverClassName();, +							+ embeddedDatabaseConnection + ". If you want an embedded ", +							+ "database please put a supoprted one on the classpath.");, +		EmbeddedDatabaseConnection embeddedDatabaseConnection = EmbeddedDatabaseConnection, +				.get(this.classLoader);, +		this.url = embeddedDatabaseConnection.getUrl();, +							+ embeddedDatabaseConnection + ". If you want an embedded ", +							+ "database please put a supported on on the classpath.");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +import org.springframework.beans.factory.BeanClassLoaderAware;, +@ConfigurationProperties(path = "spring.datasource"), +public abstract class AbstractDataSourceConfiguration implements BeanClassLoaderAware {, +	private ClassLoader classLoader;, +, +	@Override, +	public void setBeanClassLoader(ClassLoader classLoader) {, +		this.classLoader = classLoader;, +	}, +, +		EmbeddedDatabaseConnection embeddedDatabaseConnection = EmbeddedDatabaseConnection, +				.get(this.classLoader);, +		this.driverClassName = embeddedDatabaseConnection.getDriverClassName();, +							+ embeddedDatabaseConnection + ". If you want an embedded ", +							+ "database please put a supoprted one on the classpath.");, +		EmbeddedDatabaseConnection embeddedDatabaseConnection = EmbeddedDatabaseConnection, +				.get(this.classLoader);, +		this.url = embeddedDatabaseConnection.getUrl();, +							+ embeddedDatabaseConnection + ". If you want an embedded ", +							+ "database please put a supported on on the classpath.");, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +import org.springframework.beans.factory.BeanClassLoaderAware;, +@ConfigurationProperties(path = "spring.datasource"), +public abstract class AbstractDataSourceConfiguration implements BeanClassLoaderAware {, +	private ClassLoader classLoader;, +, +	@Override, +	public void setBeanClassLoader(ClassLoader classLoader) {, +		this.classLoader = classLoader;, +	}, +, +		EmbeddedDatabaseConnection embeddedDatabaseConnection = EmbeddedDatabaseConnection, +				.get(this.classLoader);, +		this.driverClassName = embeddedDatabaseConnection.getDriverClassName();, +							+ embeddedDatabaseConnection + ". If you want an embedded ", +							+ "database please put a supoprted one on the classpath.");, +		EmbeddedDatabaseConnection embeddedDatabaseConnection = EmbeddedDatabaseConnection, +				.get(this.classLoader);, +		this.url = embeddedDatabaseConnection.getUrl();, +							+ embeddedDatabaseConnection + ". If you want an embedded ", +							+ "database please put a supported on on the classpath.");, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/CommonsDataSourceConfiguration.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jdbc;, +, +import java.sql.SQLException;, +, +import javax.annotation.PreDestroy;, +import javax.sql.DataSource;, +, +import org.apache.commons.dbcp.BasicDataSource;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.dao.DataAccessResourceFailureException;, +, +/**, + * Configuration for a Commons DBCP database pool. The DBCP pool is popular but not, + * recommended in high volume environments (the Tomcat DataSource is more reliable)., + * ]