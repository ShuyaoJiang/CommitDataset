[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for a Spring Security in-memory, + * {@link AuthenticationManager}. Adds an {@link InMemoryUserDetailsManager} with a, + * default user and generated password. This can be disabled by providing a bean of type, + * {@link AuthenticationManager}, {@link AuthenticationProvider} or, + * {@link UserDetailsService}., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for a Spring Security in-memory, + * {@link AuthenticationManager}. Adds an {@link InMemoryUserDetailsManager} with a, + * default user and generated password. This can be disabled by providing a bean of type, + * {@link AuthenticationManager}, {@link AuthenticationProvider} or, + * {@link UserDetailsService}., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +former is typically used in conjunction with `@Nullable` to provide different behaviour, +for authenticated and unauthenticated users. The latter is typically used to perform, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for a Spring Security in-memory, + * {@link AuthenticationManager}. Adds an {@link InMemoryUserDetailsManager} with a, + * default user and generated password. This can be disabled by providing a bean of type, + * {@link AuthenticationManager}, {@link AuthenticationProvider} or, + * {@link UserDetailsService}., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +former is typically used in conjunction with `@Nullable` to provide different behaviour, +for authenticated and unauthenticated users. The latter is typically used to perform, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +secured by default. Spring Boot relies on Spring Securityâ€™s content-negotiation strategy, +to determine whether to use `httpBasic` or `formLogin`. To add method-level security to a, +web application, you can also add `@EnableGlobalMethodSecurity` with your desired, +settings. Additional information can be found in the, +{spring-security-reference}#jc-method[Spring Security Reference Guide].]