[+++ b/spring-boot-project/spring-boot-parent/src/checkstyle/checkstyle.xml, +				value="io.restassured.RestAssured.*, org.assertj.core.api.Assertions.*, org.junit.Assert.*, org.junit.Assume.*, org.junit.internal.matchers.ThrowableMessageMatcher.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.springframework.boot.configurationprocessor.ConfigurationMetadataMatchers.*, org.springframework.boot.configurationprocessor.TestCompiler.*, org.springframework.boot.test.autoconfigure.AutoConfigurationImportedCondition.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.ArgumentMatchers.*, org.mockito.Matchers.*, org.springframework.restdocs.hypermedia.HypermediaDocumentation.*, org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*, org.springframework.restdocs.operation.preprocess.Preprocessors.*, org.springframework.restdocs.payload.PayloadDocumentation.*, org.springframework.restdocs.request.RequestDocumentation.*, org.springframework.restdocs.restassured3.operation.preprocess.RestAssuredPreprocessors.*, org.springframework.restdocs.restassured3.RestAssuredRestDocumentation.*, org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.*, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*, org.springframework.test.web.servlet.result.MockMvcResultMatchers.*, org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*, org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*, org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo, org.springframework.test.web.client.ExpectedCount.*, org.springframework.test.web.client.match.MockRestRequestMatchers.*, org.springframework.test.web.client.response.MockRestResponseCreators.*" />, +++ b/spring-boot-project/spring-boot-parent/src/checkstyle/checkstyle.xml, +				value="io.restassured.RestAssured.*, org.assertj.core.api.Assertions.*, org.junit.Assert.*, org.junit.Assume.*, org.junit.internal.matchers.ThrowableMessageMatcher.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.springframework.boot.configurationprocessor.ConfigurationMetadataMatchers.*, org.springframework.boot.configurationprocessor.TestCompiler.*, org.springframework.boot.test.autoconfigure.AutoConfigurationImportedCondition.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.ArgumentMatchers.*, org.mockito.Matchers.*, org.springframework.restdocs.hypermedia.HypermediaDocumentation.*, org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*, org.springframework.restdocs.operation.preprocess.Preprocessors.*, org.springframework.restdocs.payload.PayloadDocumentation.*, org.springframework.restdocs.request.RequestDocumentation.*, org.springframework.restdocs.restassured3.operation.preprocess.RestAssuredPreprocessors.*, org.springframework.restdocs.restassured3.RestAssuredRestDocumentation.*, org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.*, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*, org.springframework.test.web.servlet.result.MockMvcResultMatchers.*, org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*, org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*, org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo, org.springframework.test.web.client.ExpectedCount.*, org.springframework.test.web.client.match.MockRestRequestMatchers.*, org.springframework.test.web.client.response.MockRestResponseCreators.*" />, +++ b/spring-boot-project/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework.restdocs</groupId>, +			<artifactId>spring-restdocs-webtestclient</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-parent/src/checkstyle/checkstyle.xml, +				value="io.restassured.RestAssured.*, org.assertj.core.api.Assertions.*, org.junit.Assert.*, org.junit.Assume.*, org.junit.internal.matchers.ThrowableMessageMatcher.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.springframework.boot.configurationprocessor.ConfigurationMetadataMatchers.*, org.springframework.boot.configurationprocessor.TestCompiler.*, org.springframework.boot.test.autoconfigure.AutoConfigurationImportedCondition.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.ArgumentMatchers.*, org.mockito.Matchers.*, org.springframework.restdocs.hypermedia.HypermediaDocumentation.*, org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*, org.springframework.restdocs.operation.preprocess.Preprocessors.*, org.springframework.restdocs.payload.PayloadDocumentation.*, org.springframework.restdocs.request.RequestDocumentation.*, org.springframework.restdocs.restassured3.operation.preprocess.RestAssuredPreprocessors.*, org.springframework.restdocs.restassured3.RestAssuredRestDocumentation.*, org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.*, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*, org.springframework.test.web.servlet.result.MockMvcResultMatchers.*, org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*, org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*, org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo, org.springframework.test.web.client.ExpectedCount.*, org.springframework.test.web.client.match.MockRestRequestMatchers.*, org.springframework.test.web.client.response.MockRestResponseCreators.*" />, +++ b/spring-boot-project/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework.restdocs</groupId>, +			<artifactId>spring-restdocs-webtestclient</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/restdocs/RestDocsAutoConfiguration.java, +import org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation;, +import org.springframework.restdocs.webtestclient.WebTestClientRestDocumentationConfigurer;, + * @author Roman Zaynetdinov, +	@Configuration, +	@ConditionalOnClass(WebTestClientRestDocumentation.class), +	@ConditionalOnWebApplication(type = Type.REACTIVE), +	static class RestDocsWebTestClientAutoConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean(WebTestClientRestDocumentationConfigurer.class), +		public WebTestClientRestDocumentationConfigurer restDocsWebTestClientConfigurer(, +				ObjectProvider<RestDocsWebTestClientConfigurationCustomizer> configurationCustomizerProvider,, +				RestDocumentationContextProvider contextProvider) {, +			WebTestClientRestDocumentationConfigurer configurer = WebTestClientRestDocumentation, +					.documentationConfiguration(contextProvider);, +			RestDocsWebTestClientConfigurationCustomizer configurationCustomizer = configurationCustomizerProvider, +					.getIfAvailable();, +			if (configurationCustomizer != null) {, +				configurationCustomizer.customize(configurer);, +			}, +			return configurer;, +		}, +, +		@Bean, +		@ConfigurationProperties(prefix = "spring.test.restdocs"), +		public RestDocsWebTestClientBuilderCustomizer restDocumentationConfigurer(, +				WebTestClientRestDocumentationConfigurer configurer) {, +			return new RestDocsWebTestClientBuilderCustomizer(configurer);, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-parent/src/checkstyle/checkstyle.xml, +				value="io.restassured.RestAssured.*, org.assertj.core.api.Assertions.*, org.junit.Assert.*, org.junit.Assume.*, org.junit.internal.matchers.ThrowableMessageMatcher.*, org.hamcrest.CoreMatchers.*, org.hamcrest.Matchers.*, org.springframework.boot.configurationprocessor.ConfigurationMetadataMatchers.*, org.springframework.boot.configurationprocessor.TestCompiler.*, org.springframework.boot.test.autoconfigure.AutoConfigurationImportedCondition.*, org.mockito.Mockito.*, org.mockito.BDDMockito.*, org.mockito.ArgumentMatchers.*, org.mockito.Matchers.*, org.springframework.restdocs.hypermedia.HypermediaDocumentation.*, org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*, org.springframework.restdocs.operation.preprocess.Preprocessors.*, org.springframework.restdocs.payload.PayloadDocumentation.*, org.springframework.restdocs.request.RequestDocumentation.*, org.springframework.restdocs.restassured3.operation.preprocess.RestAssuredPreprocessors.*, org.springframework.restdocs.restassured3.RestAssuredRestDocumentation.*, org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation.*, org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*, org.springframework.test.web.servlet.result.MockMvcResultMatchers.*, org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*, org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*, org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo, org.springframework.test.web.client.ExpectedCount.*, org.springframework.test.web.client.match.MockRestRequestMatchers.*, org.springframework.test.web.client.response.MockRestResponseCreators.*" />, +++ b/spring-boot-project/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework.restdocs</groupId>, +			<artifactId>spring-restdocs-webtestclient</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/restdocs/RestDocsAutoConfiguration.java, +import org.springframework.restdocs.webtestclient.WebTestClientRestDocumentation;, +import org.springframework.restdocs.webtestclient.WebTestClientRestDocumentationConfigurer;, + * @author Roman Zaynetdinov, +	@Configuration, +	@ConditionalOnClass(WebTestClientRestDocumentation.class), +	@ConditionalOnWebApplication(type = Type.REACTIVE), +	static class RestDocsWebTestClientAutoConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean(WebTestClientRestDocumentationConfigurer.class), +		public WebTestClientRestDocumentationConfigurer restDocsWebTestClientConfigurer(, +				ObjectProvider<RestDocsWebTestClientConfigurationCustomizer> configurationCustomizerProvider,, +				RestDocumentationContextProvider contextProvider) {, +			WebTestClientRestDocumentationConfigurer configurer = WebTestClientRestDocumentation, +					.documentationConfiguration(contextProvider);, +			RestDocsWebTestClientConfigurationCustomizer configurationCustomizer = configurationCustomizerProvider, +					.getIfAvailable();, +			if (configurationCustomizer != null) {, +				configurationCustomizer.customize(configurer);, +			}, +			return configurer;, +		}, +, +		@Bean, +		@ConfigurationProperties(prefix = "spring.test.restdocs"), +		public RestDocsWebTestClientBuilderCustomizer restDocumentationConfigurer(, +				WebTestClientRestDocumentationConfigurer configurer) {, +			return new RestDocsWebTestClientBuilderCustomizer(configurer);, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/restdocs/RestDocsWebTestClientBuilderCustomizer.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *]