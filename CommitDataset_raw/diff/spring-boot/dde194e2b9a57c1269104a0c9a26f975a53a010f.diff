[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer.CompressionProperties;, +	private CompressionProperties compression = new CompressionProperties();, +, +	public CompressionProperties getCompression() {, +		return this.compression;, +	}, +, +		if (container instanceof AbstractConfigurableEmbeddedServletContainer) {, +			((AbstractConfigurableEmbeddedServletContainer) container), +					.setCompression(getCompression());, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer.CompressionProperties;, +	private CompressionProperties compression = new CompressionProperties();, +, +	public CompressionProperties getCompression() {, +		return this.compression;, +	}, +, +		if (container instanceof AbstractConfigurableEmbeddedServletContainer) {, +			((AbstractConfigurableEmbeddedServletContainer) container), +					.setCompression(getCompression());, +		}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import static org.junit.Assert.assertTrue;, +	public void testCompressionBinding() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.compression.enabled", "true");, +		map.put("server.compression.mimeTypes", "foo/bar");, +		map.put("server.compression.minSize", "228");, +		bindProperties(map);, +		assertTrue(this.properties.getCompression().isEnabled());, +		assertEquals("foo/bar", this.properties.getCompression().getMimeTypes());, +		assertEquals(228, this.properties.getCompression().getMinSize());, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer.CompressionProperties;, +	private CompressionProperties compression = new CompressionProperties();, +, +	public CompressionProperties getCompression() {, +		return this.compression;, +	}, +, +		if (container instanceof AbstractConfigurableEmbeddedServletContainer) {, +			((AbstractConfigurableEmbeddedServletContainer) container), +					.setCompression(getCompression());, +		}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import static org.junit.Assert.assertTrue;, +	public void testCompressionBinding() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.compression.enabled", "true");, +		map.put("server.compression.mimeTypes", "foo/bar");, +		map.put("server.compression.minSize", "228");, +		bindProperties(map);, +		assertTrue(this.properties.getCompression().isEnabled());, +		assertEquals("foo/bar", this.properties.getCompression().getMimeTypes());, +		assertEquals(228, this.properties.getCompression().getMinSize());, +	}, +, +	@Test, +++ b/spring-boot/pom.xml, +			<groupId>org.eclipse.jetty</groupId>, +			<artifactId>jetty-servlets</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer.CompressionProperties;, +	private CompressionProperties compression = new CompressionProperties();, +, +	public CompressionProperties getCompression() {, +		return this.compression;, +	}, +, +		if (container instanceof AbstractConfigurableEmbeddedServletContainer) {, +			((AbstractConfigurableEmbeddedServletContainer) container), +					.setCompression(getCompression());, +		}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import static org.junit.Assert.assertTrue;, +	public void testCompressionBinding() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.compression.enabled", "true");, +		map.put("server.compression.mimeTypes", "foo/bar");, +		map.put("server.compression.minSize", "228");, +		bindProperties(map);, +		assertTrue(this.properties.getCompression().isEnabled());, +		assertEquals("foo/bar", this.properties.getCompression().getMimeTypes());, +		assertEquals(228, this.properties.getCompression().getMinSize());, +	}, +, +	@Test]