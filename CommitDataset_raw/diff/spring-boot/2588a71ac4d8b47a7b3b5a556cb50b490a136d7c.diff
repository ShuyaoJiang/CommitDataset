[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import org.springframework.http.client.reactive.JettyResourceFactory;, +import org.springframework.http.client.reactive.ReactorResourceFactory;, +		@ConditionalOnMissingBean, +		public ReactorResourceFactory reactorServerResourceFactory() {, +			return new ReactorResourceFactory();, +		}, +, +		@Bean, +		public NettyReactiveWebServerFactory nettyReactiveWebServerFactory(, +				ReactorResourceFactory resourceFactory) {, +			NettyReactiveWebServerFactory serverFactory = new NettyReactiveWebServerFactory();, +			serverFactory.setResourceFactory(resourceFactory);, +			return serverFactory;, +		@ConditionalOnMissingBean, +		public JettyResourceFactory jettyServerResourceFactory() {, +			return new JettyResourceFactory();, +		}, +, +		@Bean, +		public JettyReactiveWebServerFactory jettyReactiveWebServerFactory(, +				JettyResourceFactory resourceFactory) {, +			JettyReactiveWebServerFactory serverFactory = new JettyReactiveWebServerFactory();, +			serverFactory.setResourceFactory(resourceFactory);, +			return serverFactory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import org.springframework.http.client.reactive.JettyResourceFactory;, +import org.springframework.http.client.reactive.ReactorResourceFactory;, +		@ConditionalOnMissingBean, +		public ReactorResourceFactory reactorServerResourceFactory() {, +			return new ReactorResourceFactory();, +		}, +, +		@Bean, +		public NettyReactiveWebServerFactory nettyReactiveWebServerFactory(, +				ReactorResourceFactory resourceFactory) {, +			NettyReactiveWebServerFactory serverFactory = new NettyReactiveWebServerFactory();, +			serverFactory.setResourceFactory(resourceFactory);, +			return serverFactory;, +		@ConditionalOnMissingBean, +		public JettyResourceFactory jettyServerResourceFactory() {, +			return new JettyResourceFactory();, +		}, +, +		@Bean, +		public JettyReactiveWebServerFactory jettyReactiveWebServerFactory(, +				JettyResourceFactory resourceFactory) {, +			JettyReactiveWebServerFactory serverFactory = new JettyReactiveWebServerFactory();, +			serverFactory.setResourceFactory(resourceFactory);, +			return serverFactory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorConfiguration.java, +		public ReactorResourceFactory reactorClientResourceFactory() {, +		public JettyResourceFactory jettyClientResourceFactory() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import org.springframework.http.client.reactive.JettyResourceFactory;, +import org.springframework.http.client.reactive.ReactorResourceFactory;, +		@ConditionalOnMissingBean, +		public ReactorResourceFactory reactorServerResourceFactory() {, +			return new ReactorResourceFactory();, +		}, +, +		@Bean, +		public NettyReactiveWebServerFactory nettyReactiveWebServerFactory(, +				ReactorResourceFactory resourceFactory) {, +			NettyReactiveWebServerFactory serverFactory = new NettyReactiveWebServerFactory();, +			serverFactory.setResourceFactory(resourceFactory);, +			return serverFactory;, +		@ConditionalOnMissingBean, +		public JettyResourceFactory jettyServerResourceFactory() {, +			return new JettyResourceFactory();, +		}, +, +		@Bean, +		public JettyReactiveWebServerFactory jettyReactiveWebServerFactory(, +				JettyResourceFactory resourceFactory) {, +			JettyReactiveWebServerFactory serverFactory = new JettyReactiveWebServerFactory();, +			serverFactory.setResourceFactory(resourceFactory);, +			return serverFactory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorConfiguration.java, +		public ReactorResourceFactory reactorClientResourceFactory() {, +		public JettyResourceFactory jettyClientResourceFactory() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +[[boot-features-reactive-server]], +=== Embedded Reactive Server Support, +, +Spring Boot includes support for the following embedded reactive web servers:, +Reactor Netty, Tomcat, Jetty, and Undertow. Most developers use the appropriate “Starter”, +to obtain a fully configured instance. By default, the embedded server listens for HTTP, +requests on port 8080., +, +[[boot-features-reactive-server-resources]], +=== Reactive Server Resources Configuration, +, +When auto-configuring a Reactor Netty or Jetty server, Spring Boot will create specific, +beans that will provide HTTP resources to the server instance: `ReactorResourceFactory`, +or `JettyResourceFactory`., +, +By default, those resources will be also shared with the Reactor Netty and Jetty clients, +for optimal performances, given:, +]