[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	 * disabled. So we expose the same feature but only for machine endpoints., +	public ManagementErrorEndpoint errorEndpoint(final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(this.errorPath, errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	 * disabled. So we expose the same feature but only for machine endpoints., +	public ManagementErrorEndpoint errorEndpoint(final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(this.errorPath, errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	private ErrorAttributes errorAttributes;, +		if (this.errorAttributes != null) {, +			filter.setErrorAttributes(this.errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	 * disabled. So we expose the same feature but only for machine endpoints., +	public ManagementErrorEndpoint errorEndpoint(final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(this.errorPath, errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	private ErrorAttributes errorAttributes;, +		if (this.errorAttributes != null) {, +			filter.setErrorAttributes(this.errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/ManagementErrorEndpoint.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	private final ErrorAttributes errorAttributes;, +	public ManagementErrorEndpoint(String path, ErrorAttributes errorAttributes) {, +		Assert.notNull(errorAttributes, "ErrorAttributes must not be null");, +		this.errorAttributes = errorAttributes;, +		return this.errorAttributes.getErrorAttributes(, +				RequestContextHolder.currentRequestAttributes(), false);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	 * disabled. So we expose the same feature but only for machine endpoints., +	public ManagementErrorEndpoint errorEndpoint(final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(this.errorPath, errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	private ErrorAttributes errorAttributes;, +		if (this.errorAttributes != null) {, +			filter.setErrorAttributes(this.errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/ManagementErrorEndpoint.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	private final ErrorAttributes errorAttributes;, +	public ManagementErrorEndpoint(String path, ErrorAttributes errorAttributes) {, +		Assert.notNull(errorAttributes, "ErrorAttributes must not be null");, +		this.errorAttributes = errorAttributes;, +		return this.errorAttributes.getErrorAttributes(, +				RequestContextHolder.currentRequestAttributes(), false);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +import org.springframework.web.context.request.RequestAttributes;, +	private ErrorAttributes errorAttributes;, +		Throwable exception = (Throwable) request, +		if (exception != null && this.errorAttributes != null) {, +			RequestAttributes requestAttributes = new ServletRequestAttributes(request);, +			Map<String, Object> error = this.errorAttributes.getErrorAttributes(, +					requestAttributes, true);, +			trace.put("error", error);, +	public void setErrorAttributes(ErrorAttributes errorAttributes) {, +		this.errorAttributes = errorAttributes;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	 * disabled. So we expose the same feature but only for machine endpoints., +	public ManagementErrorEndpoint errorEndpoint(final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(this.errorPath, errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	private ErrorAttributes errorAttributes;, +		if (this.errorAttributes != null) {, +			filter.setErrorAttributes(this.errorAttributes);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/ManagementErrorEndpoint.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	private final ErrorAttributes errorAttributes;, +	public ManagementErrorEndpoint(String path, ErrorAttributes errorAttributes) {, +		Assert.notNull(errorAttributes, "ErrorAttributes must not be null");, +		this.errorAttributes = errorAttributes;, +		return this.errorAttributes.getErrorAttributes(, +				RequestContextHolder.currentRequestAttributes(), false);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +import org.springframework.web.context.request.RequestAttributes;, +	private ErrorAttributes errorAttributes;, +		Throwable exception = (Throwable) request, +		if (exception != null && this.errorAttributes != null) {, +			RequestAttributes requestAttributes = new ServletRequestAttributes(request);, +			Map<String, Object> error = this.errorAttributes.getErrorAttributes(, +					requestAttributes, true);, +			trace.put("error", error);, +	public void setErrorAttributes(ErrorAttributes errorAttributes) {, +		this.errorAttributes = errorAttributes;, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.web.DefaulErrorAttributes;, +		this.filter.setErrorAttributes(new DefaulErrorAttributes());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.ErrorAttributes;, +	 * disabled. So we expose the same feature but only for machine endpoints.]