[+++ b/pom.xml, +	<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	private PublicMetrics metrics;, +		if (this.metrics == null) {, +			this.metrics = new VanillaPublicMetrics(this.metricRepository);, +		}, +		return new MetricsEndpoint(this.metrics);, +++ b/pom.xml, +	<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	private PublicMetrics metrics;, +		if (this.metrics == null) {, +			this.metrics = new VanillaPublicMetrics(this.metricRepository);, +		}, +		return new MetricsEndpoint(this.metrics);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +++ b/pom.xml, +	<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	private PublicMetrics metrics;, +		if (this.metrics == null) {, +			this.metrics = new VanillaPublicMetrics(this.metricRepository);, +		}, +		return new MetricsEndpoint(this.metrics);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/PublicMetrics.java, +++ b/pom.xml, +	<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	private PublicMetrics metrics;, +		if (this.metrics == null) {, +			this.metrics = new VanillaPublicMetrics(this.metricRepository);, +		}, +		return new MetricsEndpoint(this.metrics);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/PublicMetrics.java, +++ /dev/null, +++ b/pom.xml, +	<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.5.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	private PublicMetrics metrics;, +		if (this.metrics == null) {, +			this.metrics = new VanillaPublicMetrics(this.metricRepository);, +		}, +		return new MetricsEndpoint(this.metrics);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/PublicMetrics.java, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/VanillaPublicMetrics.java, +import java.lang.management.ClassLoadingMXBean;, +import java.lang.management.GarbageCollectorMXBean;, +import java.lang.management.ManagementFactory;, +import java.lang.management.MemoryUsage;, +import java.lang.management.ThreadMXBean;, +import java.util.List;, +import org.springframework.util.StringUtils;, + * {@link MetricReader} along with memory information., +	private long timestamp;, +		Assert.notNull(reader, "MetricReader must not be null");, +		this.reader = reader;, +		this.timestamp = System.currentTimeMillis();, +, +		addMetrics(result);, +		addHeapMetrics(result);, +		addThreadMetrics(result);, +		addClassLoadingMetrics(result);, +		addGarbageCollecitonMetrics(result);, +	/**, +	 * Add basic system metrics., +	 */, +	protected void addMetrics(Collection<Metric<?>> result) {, +		result.add(new Metric<Long>("mem",, +				new Long(Runtime.getRuntime().totalMemory()) / 1024));, +		result.add(new Metric<Long>("mem.free", new Long(Runtime.getRuntime(), +				.freeMemory()) / 1024));, +		result.add(new Metric<Integer>("processors", Runtime.getRuntime(), +				.availableProcessors()));, +		// Add JVM uptime in ms, +		result.add(new Metric<Long>("uptime", new Long(ManagementFactory]