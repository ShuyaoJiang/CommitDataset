[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			 * Whether logging of the request will only be enabled if, +			 * "ServletRequest.getAttribute(conditionIf)" does not yield null., +			 */, +			private String conditionIf;, +, +			/**, +			 * Whether logging of the request will only be enabled if, +			 * "ServletRequest.getAttribute(conditionUnless)" yield null., +			 */, +			private String conditionUnless;, +, +			/**, +			 * Character set used by the log file. Default to the system default character, +			 * set., +			 */, +			private String encoding;, +, +			/**, +			 * Locale used to format timestamps in log entries and in log file name, +			 * suffix. Default to the default locale of the Java process., +			 */, +			private String locale;, +, +			/**, +			 * Whether to check for log file existence so it can be recreated it if an, +			 * external process has renamed it., +			 */, +			private boolean checkExists = false;, +, +			/**, +			 * Whether to use IPv6 canonical representation format as defined by RFC 5952., +			 */, +			private boolean ipv6Canonical = false;, +, +			/**, +			public String getConditionIf() {, +				return this.conditionIf;, +			}, +, +			public void setConditionIf(String conditionIf) {, +				this.conditionIf = conditionIf;, +			}, +, +			public String getConditionUnless() {, +				return this.conditionUnless;, +			}, +, +			public void setConditionUnless(String conditionUnless) {, +				this.conditionUnless = conditionUnless;, +			}, +, +			public String getEncoding() {, +				return this.encoding;, +			}, +, +			public void setEncoding(String encoding) {, +				this.encoding = encoding;, +			}, +, +			public String getLocale() {, +				return this.locale;, +			}, +, +			public void setLocale(String locale) {, +				this.locale = locale;, +			}, +, +			public boolean isCheckExists() {, +				return this.checkExists;, +			}, +, +			public void setCheckExists(boolean checkExists) {, +				this.checkExists = checkExists;, +			}, +, +			public boolean isIpv6Canonical() {, +				return this.ipv6Canonical;, +			}, +, +			public void setIpv6Canonical(boolean ipv6Canonical) {, +				this.ipv6Canonical = ipv6Canonical;, +			}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			 * Whether logging of the request will only be enabled if, +			 * "ServletRequest.getAttribute(conditionIf)" does not yield null., +			 */, +			private String conditionIf;, +, +			/**, +			 * Whether logging of the request will only be enabled if, +			 * "ServletRequest.getAttribute(conditionUnless)" yield null., +			 */, +			private String conditionUnless;, +, +			/**, +			 * Character set used by the log file. Default to the system default character, +			 * set., +			 */]