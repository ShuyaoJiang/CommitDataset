[+++ b/spring-boot/src/main/java/org/springframework/boot/context/listener/ConfigFileApplicationListener.java, +, +		String path = environment.resolvePlaceholders(location);, +		if (LOCATION_VARIABLE.equals(location) && !path.contains("$")) {, +			if (!path.contains(":")) {, +				path = "file:" + path;, +			}, +			path = StringUtils.cleanPath(path);, +		}, +		location = path;, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/listener/ConfigFileApplicationListener.java, +, +		String path = environment.resolvePlaceholders(location);, +		if (LOCATION_VARIABLE.equals(location) && !path.contains("$")) {, +			if (!path.contains(":")) {, +				path = "file:" + path;, +			}, +			path = StringUtils.cleanPath(path);, +		}, +		location = path;, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/listener/ConfigFileApplicationListenerTests.java, +		EnvironmentTestUtils.addEnviroment(this.environment,, +				"spring.profiles.active:prod");, +	public void specificResourceAsFile() throws Exception {, +		String location = "file:src/test/resources/specificlocation.properties";, +		EnvironmentTestUtils.addEnviroment(this.environment, "spring.config.location:", +				+ location);, +		this.initializer.onApplicationEvent(this.event);, +		assertThat(this.environment.getPropertySources().contains(location), is(true));, +	}, +, +	@Test, +	public void specificResourceDefaultsToFile() throws Exception {, +		String location = "src/test/resources/specificlocation.properties";, +		EnvironmentTestUtils.addEnviroment(this.environment, "spring.config.location:", +				+ location);, +		this.initializer.onApplicationEvent(this.event);, +		assertThat(this.environment.getPropertySources().contains("file:" + location),, +				is(true));, +	}, +, +	@Test]