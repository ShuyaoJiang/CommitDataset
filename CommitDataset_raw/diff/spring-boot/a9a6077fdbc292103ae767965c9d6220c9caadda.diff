[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/report/AutoConfigurationReportApplicationContextInitializer.java, +	public void handleError(SpringApplication application,, +			ConfigurableApplicationContext applicationContext, String[] args,, +			Throwable exception) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/report/AutoConfigurationReportApplicationContextInitializer.java, +	public void handleError(SpringApplication application,, +			ConfigurableApplicationContext applicationContext, String[] args,, +			Throwable exception) {, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	private Set<ApplicationContextInitializer<?>> initializers;, +		ConfigurableApplicationContext context = null;, +			context = createApplicationContext();, +		catch (RuntimeException ex) {, +			handleError(context, args, ex);, +			throw ex;, +		catch (Error ex) {, +			handleError(context, args, ex);, +			throw ex;, +	private void handleError(ConfigurableApplicationContext context, String[] args,, +			Throwable exception) {, +				((SpringApplicationErrorHandler) initializer).handleError(this, context,, +						args, exception);, +		this.initializers = new LinkedHashSet<ApplicationContextInitializer<?>>(, +				initializers);, +	 * Returns readonly set of the {@link ApplicationContextInitializer}s that will be, +	public Set<ApplicationContextInitializer<?>> getInitializers() {, +		return Collections.unmodifiableSet(this.initializers);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/report/AutoConfigurationReportApplicationContextInitializer.java, +	public void handleError(SpringApplication application,, +			ConfigurableApplicationContext applicationContext, String[] args,, +			Throwable exception) {, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	private Set<ApplicationContextInitializer<?>> initializers;, +		ConfigurableApplicationContext context = null;, +			context = createApplicationContext();, +		catch (RuntimeException ex) {, +			handleError(context, args, ex);, +			throw ex;, +		catch (Error ex) {, +			handleError(context, args, ex);, +			throw ex;, +	private void handleError(ConfigurableApplicationContext context, String[] args,, +			Throwable exception) {, +				((SpringApplicationErrorHandler) initializer).handleError(this, context,, +						args, exception);, +		this.initializers = new LinkedHashSet<ApplicationContextInitializer<?>>(, +				initializers);, +	 * Returns readonly set of the {@link ApplicationContextInitializer}s that will be, +	public Set<ApplicationContextInitializer<?>> getInitializers() {, +		return Collections.unmodifiableSet(this.initializers);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationErrorHandler.java, +import org.springframework.context.ConfigurableApplicationContext;, +, + * Strategy interface that can be used on a {@link SpringApplicationInitializer} to, + * capture errors in a {@link SpringApplication} after it fails to start up., + * @see SpringApplicationInitializer, +	 * Handle an application startup error., +	 * @param application the spring application., +	 * @param applicationContext the spring context (if one was created, may be, +	 * {@code null}), +	 * @param exception an exception thrown during startup (or null if none), +	void handleError(SpringApplication application,, +			ConfigurableApplicationContext applicationContext, String[] args,, +			Throwable exception);]