[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +				.just("error/" + errorStatus.value(),, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +				.just("error/" + errorStatus.value(),, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java, +	public void exactStatusTemplateErrorPage() {, +		this.contextRunner, +				.withPropertyValues("server.error.whitelabel.enabled=false",, +						"spring.mustache.prefix=" + getErrorTemplatesLocation()), +				.run((context) -> {, +					WebTestClient client = WebTestClient.bindToApplicationContext(context), +							.build();, +					String body = client.get().uri("/notfound"), +							.accept(MediaType.TEXT_HTML).exchange().expectStatus(), +							.isNotFound().expectBody(String.class).returnResult(), +							.getResponseBody();, +					assertThat(body).contains("404 page");, +				});, +	}, +, +	@Test, +	public void seriesStatusTemplateErrorPage() {, +		this.contextRunner, +				.withPropertyValues("server.error.whitelabel.enabled=false",, +						"spring.mustache.prefix=" + getErrorTemplatesLocation()), +				.run((context) -> {, +					WebTestClient client = WebTestClient.bindToApplicationContext(context), +							.build();, +					String body = client.get().uri("/badRequest"), +							.accept(MediaType.TEXT_HTML).exchange().expectStatus(), +							.isBadRequest().expectBody(String.class).returnResult(), +							.getResponseBody();, +					assertThat(body).contains("4xx page");, +				});, +	}, +, +	private String getErrorTemplatesLocation() {, +		String packageName = getClass().getPackage().getName();, +		return "classpath:/" + packageName.replace('.', '/') + "/templates/";, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +				.just("error/" + errorStatus.value(),, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java, +	public void exactStatusTemplateErrorPage() {, +		this.contextRunner, +				.withPropertyValues("server.error.whitelabel.enabled=false",, +						"spring.mustache.prefix=" + getErrorTemplatesLocation()), +				.run((context) -> {, +					WebTestClient client = WebTestClient.bindToApplicationContext(context), +							.build();, +					String body = client.get().uri("/notfound"), +							.accept(MediaType.TEXT_HTML).exchange().expectStatus(), +							.isNotFound().expectBody(String.class).returnResult(), +							.getResponseBody();, +					assertThat(body).contains("404 page");, +				});, +	}, +, +	@Test, +	public void seriesStatusTemplateErrorPage() {, +		this.contextRunner, +				.withPropertyValues("server.error.whitelabel.enabled=false",, +						"spring.mustache.prefix=" + getErrorTemplatesLocation()), +				.run((context) -> {, +					WebTestClient client = WebTestClient.bindToApplicationContext(context), +							.build();, +					String body = client.get().uri("/badRequest"), +							.accept(MediaType.TEXT_HTML).exchange().expectStatus(), +							.isBadRequest().expectBody(String.class).returnResult(), +							.getResponseBody();, +					assertThat(body).contains("4xx page");, +				});, +	}, +, +	private String getErrorTemplatesLocation() {, +		String packageName = getClass().getPackage().getName();, +		return "classpath:/" + packageName.replace('.', '/') + "/templates/";, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/resources/org/springframework/boot/autoconfigure/web/reactive/error/templates/error/404.mustache, +404 page, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +				.just("error/" + errorStatus.value(),, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java, +	public void exactStatusTemplateErrorPage() {, +		this.contextRunner, +				.withPropertyValues("server.error.whitelabel.enabled=false",, +						"spring.mustache.prefix=" + getErrorTemplatesLocation()), +				.run((context) -> {, +					WebTestClient client = WebTestClient.bindToApplicationContext(context), +							.build();, +					String body = client.get().uri("/notfound"), +							.accept(MediaType.TEXT_HTML).exchange().expectStatus(), +							.isNotFound().expectBody(String.class).returnResult(), +							.getResponseBody();, +					assertThat(body).contains("404 page");, +				});]