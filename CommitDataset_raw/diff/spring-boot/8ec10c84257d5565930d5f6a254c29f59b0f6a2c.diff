[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mustache/web/MustacheView.java, + * @author Phillip Webb, +	private Template template;, +	/**, +	 * Create a new {@link MustacheView} instance., +	 * @see #setTemplate(Template), +	 * @since 1.2.5, +	 */, +	public MustacheView() {, +	}, +, +	/**, +	 * Create a new {@link MustacheView} with the specified template., +	 * @param template the source template, +	 */, +	/**, +	 * Set the Mustache template that should actually be rendered., +	 * @param template the mustache template, +	 * @since 1.2.5, +	 */, +	public void setTemplate(Template template) {, +		this.template = template;, +	}, +, +		if (this.template != null) {, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mustache/web/MustacheView.java, + * @author Phillip Webb, +	private Template template;, +	/**, +	 * Create a new {@link MustacheView} instance., +	 * @see #setTemplate(Template), +	 * @since 1.2.5, +	 */, +	public MustacheView() {, +	}, +, +	/**, +	 * Create a new {@link MustacheView} with the specified template., +	 * @param template the source template, +	 */, +	/**, +	 * Set the Mustache template that should actually be rendered., +	 * @param template the mustache template, +	 * @since 1.2.5, +	 */, +	public void setTemplate(Template template) {, +		this.template = template;, +	}, +, +		if (this.template != null) {, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mustache/web/MustacheViewResolver.java, +import java.io.Reader;, + * @author Phillip Webb, +		setViewClass(requiredViewClass());, +	}, +, +	@Override, +	protected Class<?> requiredViewClass() {, +		return MustacheView.class;, +		MustacheView mustacheView = (MustacheView) super.loadView(viewName, locale);, +		mustacheView.setTemplate(createTemplate(resource));, +		return mustacheView;, +	private String getLocale(Locale locale) {, +		if (locale == null) {, +			return "";, +		}, +		LocaleEditor localeEditor = new LocaleEditor();, +		localeEditor.setValue(locale);, +		return "_" + localeEditor.getAsText();, +	}, +, +	private Template createTemplate(Resource resource) throws IOException {, +		return this.compiler.compile(getReader(resource));, +	}, +, +	private Reader getReader(Resource resource) throws IOException {, +		if (this.charset != null) {, +			return new InputStreamReader(resource.getInputStream(), this.charset);, +		}, +		return new InputStreamReader(resource.getInputStream());, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mustache/web/MustacheView.java, + * @author Phillip Webb, +	private Template template;, +	/**, +	 * Create a new {@link MustacheView} instance., +	 * @see #setTemplate(Template), +	 * @since 1.2.5, +	 */, +	public MustacheView() {, +	}, +, +	/**, +	 * Create a new {@link MustacheView} with the specified template., +	 * @param template the source template, +	 */, +	/**]