[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.config.BeanPostProcessor;, +import org.springframework.context.annotation.DependsOn;, +	public static class FlywayConfiguration {, +		@Bean, +		@DependsOn("flyway"), +		protected BeanPostProcessor forceFlywayToInitialize() {, +, +			return new BeanPostProcessor() {, +, +				@Override, +				public Object postProcessAfterInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +, +				@Override, +				public Object postProcessBeforeInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +, +			};, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.config.BeanPostProcessor;, +import org.springframework.context.annotation.DependsOn;, +	public static class FlywayConfiguration {, +		@Bean, +		@DependsOn("flyway"), +		protected BeanPostProcessor forceFlywayToInitialize() {, +, +			return new BeanPostProcessor() {, +, +				@Override, +				public Object postProcessAfterInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +, +				@Override, +				public Object postProcessBeforeInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +, +			};, +		}, +++ b/spring-boot-samples/spring-boot-sample-flyway/src/main/resources/application.properties, +spring.jpa.hibernate.ddl-auto: validate, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.config.BeanPostProcessor;, +import org.springframework.context.annotation.DependsOn;, +	public static class FlywayConfiguration {, +		@Bean, +		@DependsOn("flyway"), +		protected BeanPostProcessor forceFlywayToInitialize() {, +, +			return new BeanPostProcessor() {, +, +				@Override, +				public Object postProcessAfterInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +, +				@Override, +				public Object postProcessBeforeInitialization(Object bean, String beanName), +						throws BeansException {, +					return bean;, +				}, +, +			};, +		}, +++ b/spring-boot-samples/spring-boot-sample-flyway/src/main/resources/application.properties, +spring.jpa.hibernate.ddl-auto: validate, +++ b/spring-boot-samples/spring-boot-sample-flyway/src/main/resources/db/migrations/V1__init.sql, +	id BIGINT GENERATED BY DEFAULT AS IDENTITY,]