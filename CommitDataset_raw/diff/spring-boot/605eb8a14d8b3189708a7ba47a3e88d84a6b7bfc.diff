[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +			liquibase.setLabels(this.properties.getLabels());, +			liquibase.setChangeLogParameters(this.properties.getParameters());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +			liquibase.setLabels(this.properties.getLabels());, +			liquibase.setChangeLogParameters(this.properties.getParameters());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, + * Copyright 2012-2015 the original author or authors., +import java.util.Map;, +, +	/**, +	 * Comma-separated list of runtime labels to use., +	 */, +	private String labels;, +, +	/**, +	 * Change log parameters., +	 */, +	private Map<String, String> parameters;, +, +	public String getLabels() {, +		return this.labels;, +	}, +, +	public void setLabels(String labels) {, +		this.labels = labels;, +	}, +, +	public Map<String, String> getParameters() {, +		return this.parameters;, +	}, +, +	public void setParameters(Map<String, String> parameters) {, +		this.parameters = parameters;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +			liquibase.setLabels(this.properties.getLabels());, +			liquibase.setChangeLogParameters(this.properties.getParameters());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, + * Copyright 2012-2015 the original author or authors., +import java.util.Map;, +, +	/**, +	 * Comma-separated list of runtime labels to use., +	 */, +	private String labels;, +, +	/**, +	 * Change log parameters., +	 */, +	private Map<String, String> parameters;, +, +	public String getLabels() {, +		return this.labels;, +	}, +, +	public void setLabels(String labels) {, +		this.labels = labels;, +	}, +, +	public Map<String, String> getParameters() {, +		return this.parameters;, +	}, +, +	public void setParameters(Map<String, String> parameters) {, +		this.parameters = parameters;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, + * Copyright 2012-2015 the original author or authors., +import java.util.Map;, +, +	@Test, +	public void testOverrideLabels() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"liquibase.labels:test, production");, +		this.context.register(EmbeddedDataSourceConfiguration.class,, +				LiquibaseAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		SpringLiquibase liquibase = this.context.getBean(SpringLiquibase.class);, +		assertEquals("test, production", liquibase.getLabels());, +	}, +, +	@Test, +	@SuppressWarnings("unchecked"), +	public void testOverrideParameters() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context, "liquibase.parameters.foo:bar");, +		this.context.register(EmbeddedDataSourceConfiguration.class,, +				LiquibaseAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		SpringLiquibase liquibase = this.context.getBean(SpringLiquibase.class);, +		Map<String, String> parameters = (Map<String, String>) ReflectionTestUtils, +				.getField(liquibase, "parameters");, +		assertTrue(parameters.containsKey("foo"));]