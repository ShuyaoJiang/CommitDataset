[+++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/spring-boot-actuator/README.adoc, +  which creates a file containing the application PID (by default in the application, +  directory with a file name of `application.pid`)., +++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/spring-boot-actuator/README.adoc, +  which creates a file containing the application PID (by default in the application, +  directory with a file name of `application.pid`)., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.hornetq.embedded.queues= # comma-separated queues to create on startup, +	spring.hornetq.embedded.topics= # comma-separated topics to create on startup, +++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/spring-boot-actuator/README.adoc, +  which creates a file containing the application PID (by default in the application, +  directory with a file name of `application.pid`)., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.hornetq.embedded.queues= # comma-separated queues to create on startup, +	spring.hornetq.embedded.topics= # comma-separated topics to create on startup, +++ b/spring-boot-docs/src/main/asciidoc/appendix-executable-jar-format.adoc, +to distribute a self-contained application that you can just run from the command line, +++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/spring-boot-actuator/README.adoc, +  which creates a file containing the application PID (by default in the application, +  directory with a file name of `application.pid`)., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.hornetq.embedded.queues= # comma-separated queues to create on startup, +	spring.hornetq.embedded.topics= # comma-separated topics to create on startup, +++ b/spring-boot-docs/src/main/asciidoc/appendix-executable-jar-format.adoc, +to distribute a self-contained application that you can just run from the command line, +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +to deviate from Spring Boot's ``blessed'' dependencies. Alternative version metadata, +++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/spring-boot-actuator/README.adoc, +  which creates a file containing the application PID (by default in the application, +  directory with a file name of `application.pid`)., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.hornetq.embedded.queues= # comma-separated queues to create on startup, +	spring.hornetq.embedded.topics= # comma-separated topics to create on startup, +++ b/spring-boot-docs/src/main/asciidoc/appendix-executable-jar-format.adoc, +to distribute a self-contained application that you can just run from the command line, +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +to deviate from Spring Boot's ``blessed'' dependencies. Alternative version metadata, +++ b/spring-boot-docs/src/main/asciidoc/cloud-deployment.adoc, +or it might be a full-fledged application server. A buildpack is pluggable, but ideally, +By default, metadata about the running application as well as service connection, +++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/spring-boot-actuator/README.adoc, +  which creates a file containing the application PID (by default in the application, +  directory with a file name of `application.pid`)., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.hornetq.embedded.queues= # comma-separated queues to create on startup, +	spring.hornetq.embedded.topics= # comma-separated topics to create on startup, +++ b/spring-boot-docs/src/main/asciidoc/appendix-executable-jar-format.adoc, +to distribute a self-contained application that you can just run from the command line, +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +to deviate from Spring Boot's ``blessed'' dependencies. Alternative version metadata, +++ b/spring-boot-docs/src/main/asciidoc/cloud-deployment.adoc, +or it might be a full-fledged application server. A buildpack is pluggable, but ideally, +By default, metadata about the running application as well as service connection, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +A useful practice for use with `@IntegrationTest`s  is to set `server.port=0`, +`EmbeddedServletContainerCustomizer` and various Tomcat-specific `+*Customizers+` that you, +=== Enable Multiple Connectors with Tomcat, +`TomcatEmbeddedServletContainerFactory` which can allow multiple connectors, e.g. HTTP and, +To configure the more fine-grained settings of a logging system you need to use the native, +`spring-boot-starter-log4j`., +NOTE: The use of one of the Log4j starters gathers together the dependencies for, +configuring the output using Log4j or Log4j 2). See the Actuator Log4j or Log4j 2, +another one and mark it as `@Primary` if you want two data sources., +`spring.batch.job.names` (comma-separated job name patterns)., +NOTE: IntelliJ must be configured to use the same Java version as the command line Gradle, +NOTE: This only works if your Maven project inherits (directly or indirectly) from, +++ b/CONTRIBUTING.adoc, +If you prefer not to use m2eclipse you can generate eclipse project metadata using the, +++ b/spring-boot-actuator/README.adoc, +  which creates a file containing the application PID (by default in the application, +  directory with a file name of `application.pid`)., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.hornetq.embedded.queues= # comma-separated queues to create on startup, +	spring.hornetq.embedded.topics= # comma-separated topics to create on startup, +++ b/spring-boot-docs/src/main/asciidoc/appendix-executable-jar-format.adoc, +to distribute a self-contained application that you can just run from the command line, +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +to deviate from Spring Boot's ``blessed'' dependencies. Alternative version metadata, +++ b/spring-boot-docs/src/main/asciidoc/cloud-deployment.adoc, +or it might be a full-fledged application server. A buildpack is pluggable, but ideally, +By default, metadata about the running application as well as service connection, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +A useful practice for use with `@IntegrationTest`s  is to set `server.port=0`, +`EmbeddedServletContainerCustomizer` and various Tomcat-specific `+*Customizers+` that you, +=== Enable Multiple Connectors with Tomcat, +`TomcatEmbeddedServletContainerFactory` which can allow multiple connectors, e.g. HTTP and]