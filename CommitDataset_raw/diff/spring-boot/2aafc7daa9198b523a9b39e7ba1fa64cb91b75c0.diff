[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +import java.util.Map;, +import com.datastax.driver.core.HostDistance;, +import com.datastax.driver.core.PoolingOptions;, +		builder.withPoolingOptions(getPoolingOptions());, +	private PoolingOptions getPoolingOptions() {, +		PoolingOptions options = new PoolingOptions();, +		options.setHeartbeatIntervalSeconds(this.properties.getHeartbeatIntervalSeconds());, +		options.setMaxQueueSize(this.properties.getMaxQueueSize());, +		for (Map.Entry<HostDistance, Integer> entry : this.properties.getMaxRequestsPerConnection().entrySet()) {, +			options.setMaxRequestsPerConnection(entry.getKey(), entry.getValue());, +		}, +		return options;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +import java.util.Map;, +import com.datastax.driver.core.HostDistance;, +import com.datastax.driver.core.PoolingOptions;, +		builder.withPoolingOptions(getPoolingOptions());, +	private PoolingOptions getPoolingOptions() {, +		PoolingOptions options = new PoolingOptions();, +		options.setHeartbeatIntervalSeconds(this.properties.getHeartbeatIntervalSeconds());, +		options.setMaxQueueSize(this.properties.getMaxQueueSize());, +		for (Map.Entry<HostDistance, Integer> entry : this.properties.getMaxRequestsPerConnection().entrySet()) {, +			options.setMaxRequestsPerConnection(entry.getKey(), entry.getValue());, +		}, +		return options;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraProperties.java, +import java.util.HashMap;, +import java.util.Map;, +, +import com.datastax.driver.core.HostDistance;, +import com.datastax.driver.core.PoolingOptions;, +	 * Pooling option: heartbeat interval., +	 */, +	private int heartbeatIntervalSeconds = PoolingOptions.DEFAULT_HEARTBEAT_INTERVAL_SECONDS;, +, +	/**, +	 * Pooling option: max queue size., +	 */, +	private int maxQueueSize = PoolingOptions.DEFAULT_MAX_QUEUE_SIZE;, +, +	/**, +	 * Pooling option: max requests per connection., +	 */, +	private Map<HostDistance, Integer> maxRequestsPerConnection = new HashMap<HostDistance, Integer>();, +, +	/**, +	public int getHeartbeatIntervalSeconds() {, +		return this.heartbeatIntervalSeconds;, +	}, +, +	public void setHeartbeatIntervalSeconds(int heartbeatIntervalSeconds) {, +		this.heartbeatIntervalSeconds = heartbeatIntervalSeconds;, +	}, +, +	public int getMaxQueueSize() {, +		return this.maxQueueSize;, +	}, +, +	public void setMaxQueueSize(int maxQueueSize) {, +		this.maxQueueSize = maxQueueSize;, +	}, +, +	public Map<HostDistance, Integer> getMaxRequestsPerConnection() {, +		return this.maxRequestsPerConnection;, +	}, +, +	public void setMaxRequestsPerConnection(Map<HostDistance, Integer> maxRequestsPerConnection) {, +		this.maxRequestsPerConnection = maxRequestsPerConnection;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +import java.util.Map;, +import com.datastax.driver.core.HostDistance;, +import com.datastax.driver.core.PoolingOptions;, +		builder.withPoolingOptions(getPoolingOptions());, +	private PoolingOptions getPoolingOptions() {, +		PoolingOptions options = new PoolingOptions();, +		options.setHeartbeatIntervalSeconds(this.properties.getHeartbeatIntervalSeconds());, +		options.setMaxQueueSize(this.properties.getMaxQueueSize());, +		for (Map.Entry<HostDistance, Integer> entry : this.properties.getMaxRequestsPerConnection().entrySet()) {, +			options.setMaxRequestsPerConnection(entry.getKey(), entry.getValue());, +		}, +		return options;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraProperties.java, +import java.util.HashMap;, +import java.util.Map;, +, +import com.datastax.driver.core.HostDistance;, +import com.datastax.driver.core.PoolingOptions;, +	 * Pooling option: heartbeat interval., +	 */, +	private int heartbeatIntervalSeconds = PoolingOptions.DEFAULT_HEARTBEAT_INTERVAL_SECONDS;, +, +	/**, +	 * Pooling option: max queue size., +	 */]