[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ShutdownEndpoint.java, +	private boolean enabled = false;, +, +		if (!this.enabled) {, +		if (this.context == null) {, +			return Collections.<String, Object> singletonMap("message",, +					"No context to shutdown.");, +		}, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ShutdownEndpoint.java, +	private boolean enabled = false;, +, +		if (!this.enabled) {, +		if (this.context == null) {, +			return Collections.<String, Object> singletonMap("message",, +					"No context to shutdown.");, +		}, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/properties/ManagementServerProperties.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ShutdownEndpoint.java, +	private boolean enabled = false;, +, +		if (!this.enabled) {, +		if (this.context == null) {, +			return Collections.<String, Object> singletonMap("message",, +					"No context to shutdown.");, +		}, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/properties/ManagementServerProperties.java, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ShutdownEndpointTests.java, + * @author Dave Syer, +			ShutdownEndpoint endpoint = new ShutdownEndpoint();, +			endpoint.setEnabled(true);, +			return endpoint;]