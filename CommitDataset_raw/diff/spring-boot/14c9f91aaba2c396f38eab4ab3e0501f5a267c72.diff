[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthIndicatorFactory.java, +	 * @return a {@link HealthIndicator} that delegates to the specified, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthIndicatorFactory.java, +	 * @return a {@link HealthIndicator} that delegates to the specified, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java, +	 * @param statusMapping a map of health status code to HTTP status code, +	 * @param statusMapping a map of health status code to HTTP status code, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthIndicatorFactory.java, +	 * @return a {@link HealthIndicator} that delegates to the specified, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java, +	 * @param statusMapping a map of health status code to HTTP status code, +	 * @param statusMapping a map of health status code to HTTP status code, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfigurationTests.java, + * Tests for {@link ActiveMQAutoConfiguration}., +	public void defaultConnectionFactoryIsApplied() {, +	public void customConnectionFactoryIsApplied() {, +	public void defaultPooledConnectionFactoryIsApplied() {, +	public void customPooledConnectionFactoryIsApplied() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthIndicatorFactory.java, +	 * @return a {@link HealthIndicator} that delegates to the specified, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java, +	 * @param statusMapping a map of health status code to HTTP status code, +	 * @param statusMapping a map of health status code to HTTP status code, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfigurationTests.java, + * Tests for {@link ActiveMQAutoConfiguration}., +	public void defaultConnectionFactoryIsApplied() {, +	public void customConnectionFactoryIsApplied() {, +	public void defaultPooledConnectionFactoryIsApplied() {, +	public void customPooledConnectionFactoryIsApplied() {, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  `Environment` in a relaxed manner. It is often used with a prefix., +precedence. A custom implementation may obviously define another order., +Add an `org.apache.catalina.connector.Connector` to the, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthIndicatorFactory.java, +	 * @return a {@link HealthIndicator} that delegates to the specified, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java, +	 * @param statusMapping a map of health status code to HTTP status code, +	 * @param statusMapping a map of health status code to HTTP status code, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfigurationTests.java, + * Tests for {@link ActiveMQAutoConfiguration}., +	public void defaultConnectionFactoryIsApplied() {, +	public void customConnectionFactoryIsApplied() {, +	public void defaultPooledConnectionFactoryIsApplied() {, +	public void customPooledConnectionFactoryIsApplied() {, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  `Environment` in a relaxed manner. It is often used with a prefix., +precedence. A custom implementation may obviously define another order., +Add an `org.apache.catalina.connector.Connector` to the, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +for your application in `application.properties` (or whatever other basename you choose, +Spring Boot will create an `OAuth2ClientContext` and `OAuth2ProtectedResourceDetails` that, +scenes, you can register an `OkHttpClient.Builder` bean., +automatically in an `org.springframework.cache.CacheManager` implementation that the, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthIndicatorFactory.java, +	 * @return a {@link HealthIndicator} that delegates to the specified, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java, +	 * @param statusMapping a map of health status code to HTTP status code, +	 * @param statusMapping a map of health status code to HTTP status code, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfigurationTests.java, + * Tests for {@link ActiveMQAutoConfiguration}., +	public void defaultConnectionFactoryIsApplied() {, +	public void customConnectionFactoryIsApplied() {, +	public void defaultPooledConnectionFactoryIsApplied() {, +	public void customPooledConnectionFactoryIsApplied() {, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  `Environment` in a relaxed manner. It is often used with a prefix., +precedence. A custom implementation may obviously define another order., +Add an `org.apache.catalina.connector.Connector` to the, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +for your application in `application.properties` (or whatever other basename you choose, +Spring Boot will create an `OAuth2ClientContext` and `OAuth2ProtectedResourceDetails` that, +scenes, you can register an `OkHttpClient.Builder` bean., +automatically in an `org.springframework.cache.CacheManager` implementation that the, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/client/RestClientExcludeFilter.java, +		if (ClassUtils.isPresent(DATABIND_MODULE_CLASS_NAME,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthIndicatorFactory.java, +	 * @return a {@link HealthIndicator} that delegates to the specified, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java, +	 * @param statusMapping a map of health status code to HTTP status code, +	 * @param statusMapping a map of health status code to HTTP status code, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfigurationTests.java, + * Tests for {@link ActiveMQAutoConfiguration}., +	public void defaultConnectionFactoryIsApplied() {, +	public void customConnectionFactoryIsApplied() {, +	public void defaultPooledConnectionFactoryIsApplied() {, +	public void customPooledConnectionFactoryIsApplied() {, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  `Environment` in a relaxed manner. It is often used with a prefix., +precedence. A custom implementation may obviously define another order., +Add an `org.apache.catalina.connector.Connector` to the, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +for your application in `application.properties` (or whatever other basename you choose, +Spring Boot will create an `OAuth2ClientContext` and `OAuth2ProtectedResourceDetails` that, +scenes, you can register an `OkHttpClient.Builder` bean., +automatically in an `org.springframework.cache.CacheManager` implementation that the, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/client/RestClientExcludeFilter.java, +		if (ClassUtils.isPresent(DATABIND_MODULE_CLASS_NAME,, +++ b/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedWebappClassLoader.java, + * {@link ClassLoader#getSystemClassLoader() system classloader}. This is required to]