[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +import org.springframework.boot.context.ReactiveWebApplicationContext;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +import org.springframework.boot.context.ReactiveWebApplicationContext;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnNotWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +import org.springframework.boot.context.ReactiveWebApplicationContext;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnNotWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +import org.springframework.boot.context.ReactiveWebApplicationContext;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnNotWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/ReactiveWebServerAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(MissingHttpHandlerConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class, TooManyHttpHandlers.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +import org.springframework.boot.context.ReactiveWebApplicationContext;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnNotWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/ReactiveWebServerAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(MissingHttpHandlerConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class, TooManyHttpHandlers.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class,, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/WebFluxAnnotationAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +import org.springframework.boot.context.ReactiveWebApplicationContext;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnNotWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/ReactiveWebServerAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(MissingHttpHandlerConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class, TooManyHttpHandlers.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class,, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/WebFluxAnnotationAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/WebFluxFunctionalAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +import org.springframework.boot.context.ReactiveWebApplicationContext;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnNotWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplicationTests.java, +import org.springframework.boot.context.GenericReactiveWebApplicationContext;, +		GenericReactiveWebApplicationContext ctx = new GenericReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/ReactiveWebServerAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(MissingHttpHandlerConfiguration.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class, TooManyHttpHandlers.class);, +		this.context = new EmbeddedReactiveWebApplicationContext(BaseConfiguration.class,, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/WebFluxAnnotationAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/webflux/WebFluxFunctionalAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.EmbeddedReactiveWebApplicationContext;, +	private EmbeddedReactiveWebApplicationContext context;, +		this.context = new EmbeddedReactiveWebApplicationContext();, +++ b/spring-boot-test-autoconfigure/pom.xml, +			<groupId>org.springframework</groupId>, +			<artifactId>spring-webflux</artifactId>, +			<optional>true</optional>, +		</dependency>]