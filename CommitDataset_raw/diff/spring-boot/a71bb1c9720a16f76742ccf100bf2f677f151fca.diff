[+++ b/pom.xml, +				<groupId>org.codehaus.groovy</groupId>, +				<artifactId>groovy-templates</artifactId>, +				<version>2.1.3</version>, +			</dependency>, +			<dependency>, +++ b/pom.xml, +				<groupId>org.codehaus.groovy</groupId>, +				<artifactId>groovy-templates</artifactId>, +				<version>2.1.3</version>, +			</dependency>, +			<dependency>, +++ b/spring-bootstrap-cli/pom.xml, +			<groupId>org.codehaus.groovy</groupId>, +			<artifactId>groovy-templates</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/pom.xml, +				<groupId>org.codehaus.groovy</groupId>, +				<artifactId>groovy-templates</artifactId>, +				<version>2.1.3</version>, +			</dependency>, +			<dependency>, +++ b/spring-bootstrap-cli/pom.xml, +			<groupId>org.codehaus.groovy</groupId>, +			<artifactId>groovy-templates</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-bootstrap-cli/samples/template.groovy, +package org.test, +, +import static org.springframework.bootstrap.cli.template.GroovyTemplate.template;, +, +@Component, +class Example implements CommandLineRunner {, +, +	@Autowired, +	private MyService myService, +, +	void run(String... args) {, +		print template("test.txt", ["message":myService.sayWorld()]), +	}, +}, +, +, +@Service, +class MyService {, +, +	String sayWorld() {, +		return "World", +	}, +}, +, +, +++ b/pom.xml, +				<groupId>org.codehaus.groovy</groupId>, +				<artifactId>groovy-templates</artifactId>, +				<version>2.1.3</version>, +			</dependency>, +			<dependency>, +++ b/spring-bootstrap-cli/pom.xml, +			<groupId>org.codehaus.groovy</groupId>, +			<artifactId>groovy-templates</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-bootstrap-cli/samples/template.groovy, +package org.test, +, +import static org.springframework.bootstrap.cli.template.GroovyTemplate.template;, +, +@Component, +class Example implements CommandLineRunner {, +, +	@Autowired, +	private MyService myService, +, +	void run(String... args) {, +		print template("test.txt", ["message":myService.sayWorld()]), +	}, +}, +, +, +@Service, +class MyService {, +, +	String sayWorld() {, +		return "World", +	}, +}, +, +, +++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringMvcCompilerAutoConfiguration.java, +		dependencies.add("org.codehaus.groovy", "groovy-templates", "2.1.3");, +		imports.addStaticImport(, +				"org.springframework.bootstrap.cli.template.GroovyTemplate", "template");, +++ b/pom.xml, +				<groupId>org.codehaus.groovy</groupId>]