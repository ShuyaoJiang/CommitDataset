[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Spring's test framework into Spock. Exactly how you can use Spock to test a Spring Boot, +application depends on the version of Spock that you are using., +NOTE: Spring Boot provides dependency management for Spock 1.0. If you wish to use Spock, +1.1 you should <<howto.adoc#howto-customize-dependency-versions,override the, +`spock.version` property>> in your `build.gradle` or `pom.xml` file., +, +When using Spock 1.1, the annotations <<boot-features-testing-spring-boot-applications,, +described above>> can only be used and you can annotate your `Specification` with, +, +When using Spock 1.0, `@SpringBootTest` will not work for a web project. You need to use, +`@SpringApplicationConfiguration` and `@WebIntegrationTest(randomPort = true)`. Being, +unable to use `@SpringBootTest` means that you also lose the auto-configured, +`TestRestTemplate` bean. You can create an equivalent bean yourself using the following, +configuration:, +, +include::{code-examples}/test/spock/SpockTestRestTemplateExample.java[tag=test-rest-template-configuration], +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Spring's test framework into Spock. Exactly how you can use Spock to test a Spring Boot, +application depends on the version of Spock that you are using., +NOTE: Spring Boot provides dependency management for Spock 1.0. If you wish to use Spock, +1.1 you should <<howto.adoc#howto-customize-dependency-versions,override the, +`spock.version` property>> in your `build.gradle` or `pom.xml` file., +, +When using Spock 1.1, the annotations <<boot-features-testing-spring-boot-applications,, +described above>> can only be used and you can annotate your `Specification` with, +, +When using Spock 1.0, `@SpringBootTest` will not work for a web project. You need to use, +`@SpringApplicationConfiguration` and `@WebIntegrationTest(randomPort = true)`. Being, +unable to use `@SpringBootTest` means that you also lose the auto-configured, +`TestRestTemplate` bean. You can create an equivalent bean yourself using the following, +configuration:, +, +include::{code-examples}/test/spock/SpockTestRestTemplateExample.java[tag=test-rest-template-configuration], +++ b/spring-boot-docs/src/main/java/org/springframework/boot/test/spock/SpockTestRestTemplateExample.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test.spock;, +, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.test.context.SpringBootTest;, +import org.springframework.boot.test.web.client.LocalHostUriTemplateHandler;, +import org.springframework.boot.test.web.client.TestRestTemplate;, +import org.springframework.boot.web.client.RestTemplateBuilder;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.env.Environment;, +, +/**, + * Example configuration for using TestRestTemplate with Spock 1.0 when, + * {@link SpringBootTest} cannot be used., + *, + * @author Andy Wilkinson, + */, +public class SpockTestRestTemplateExample {, +, +	/**, +	 * Test configuration for a {@link TestRestTemplate}., +	 */, +	// tag::test-rest-template-configuration[], +	@Configuration, +	static class TestRestTemplateConfiguration {, +, +		@Bean, +		public TestRestTemplate testRestTemplate(, +				ObjectProvider<RestTemplateBuilder> builderProvider,, +				Environment environment) {, +			RestTemplateBuilder builder = builderProvider.getIfAvailable();, +			TestRestTemplate template = builder == null ? new TestRestTemplate(), +					: new TestRestTemplate(builder.build());, +			template.setUriTemplateHandler(new LocalHostUriTemplateHandler(environment));, +			return template;, +		}, +, +	}, +	// end::test-rest-template-configuration[], +, +}, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Spring's test framework into Spock. Exactly how you can use Spock to test a Spring Boot, +application depends on the version of Spock that you are using., +NOTE: Spring Boot provides dependency management for Spock 1.0. If you wish to use Spock, +1.1 you should <<howto.adoc#howto-customize-dependency-versions,override the, +`spock.version` property>> in your `build.gradle` or `pom.xml` file., +, +When using Spock 1.1, the annotations <<boot-features-testing-spring-boot-applications,]