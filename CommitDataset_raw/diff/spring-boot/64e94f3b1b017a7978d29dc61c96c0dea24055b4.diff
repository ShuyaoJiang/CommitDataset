[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration.java, +import org.springframework.boot.autoconfigure.SpringBootApplication;, + * This works with the {@link AuthenticationConfiguration} to ensure that users are able, + * to use:, + * within their classes annotated with {@link EnableAutoConfiguration} or, + * {@link SpringBootApplication}., + * @since 1.2.2, +	public static BootGlobalAuthenticationConfigurationAdapter bootGlobalAuthenticationConfigurationAdapter(, +			ApplicationContext context) {, +	private static class BootGlobalAuthenticationConfigurationAdapter extends, +			GlobalAuthenticationConfigurerAdapter {, +		private static final Log logger = LogFactory, +				.getLog(BootGlobalAuthenticationConfiguration.class);, +			Map<String, Object> beansWithAnnotation = this.context, +					.getBeansWithAnnotation(EnableAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration.java, +import org.springframework.boot.autoconfigure.SpringBootApplication;, + * This works with the {@link AuthenticationConfiguration} to ensure that users are able, + * to use:, + * within their classes annotated with {@link EnableAutoConfiguration} or, + * {@link SpringBootApplication}., + * @since 1.2.2, +	public static BootGlobalAuthenticationConfigurationAdapter bootGlobalAuthenticationConfigurationAdapter(, +			ApplicationContext context) {, +	private static class BootGlobalAuthenticationConfigurationAdapter extends, +			GlobalAuthenticationConfigurerAdapter {, +		private static final Log logger = LogFactory, +				.getLog(BootGlobalAuthenticationConfiguration.class);, +			Map<String, Object> beansWithAnnotation = this.context, +					.getBeansWithAnnotation(EnableAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration.java, +import org.springframework.boot.autoconfigure.SpringBootApplication;, + * This works with the {@link AuthenticationConfiguration} to ensure that users are able, + * to use:, + * within their classes annotated with {@link EnableAutoConfiguration} or, + * {@link SpringBootApplication}., + * @since 1.2.2, +	public static BootGlobalAuthenticationConfigurationAdapter bootGlobalAuthenticationConfigurationAdapter(, +			ApplicationContext context) {, +	private static class BootGlobalAuthenticationConfigurationAdapter extends, +			GlobalAuthenticationConfigurerAdapter {, +		private static final Log logger = LogFactory, +				.getLog(BootGlobalAuthenticationConfiguration.class);, +			Map<String, Object> beansWithAnnotation = this.context, +					.getBeansWithAnnotation(EnableAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, +++ b/spring-boot-security-tests/spring-boot-security-tests-web-helloworld/pom.xml, +	<properties>, +		<main.basedir>${basedir}/../..</main.basedir>, +	</properties>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration.java, +import org.springframework.boot.autoconfigure.SpringBootApplication;, + * This works with the {@link AuthenticationConfiguration} to ensure that users are able, + * to use:, + * within their classes annotated with {@link EnableAutoConfiguration} or, + * {@link SpringBootApplication}., + * @since 1.2.2, +	public static BootGlobalAuthenticationConfigurationAdapter bootGlobalAuthenticationConfigurationAdapter(, +			ApplicationContext context) {, +	private static class BootGlobalAuthenticationConfigurationAdapter extends, +			GlobalAuthenticationConfigurerAdapter {, +		private static final Log logger = LogFactory, +				.getLog(BootGlobalAuthenticationConfiguration.class);, +			Map<String, Object> beansWithAnnotation = this.context, +					.getBeansWithAnnotation(EnableAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, +++ b/spring-boot-security-tests/spring-boot-security-tests-web-helloworld/pom.xml, +	<properties>, +		<main.basedir>${basedir}/../..</main.basedir>, +	</properties>, +++ b/spring-boot-security-tests/spring-boot-security-tests-web-helloworld/src/main/java/sample/HelloWebSecurityApplication.java, +, +	public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {, +		auth.inMemoryAuthentication().withUser("user").password("password").roles("USER");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/BootGlobalAuthenticationConfiguration.java, +import org.springframework.boot.autoconfigure.SpringBootApplication;, + * This works with the {@link AuthenticationConfiguration} to ensure that users are able, + * to use:, + * within their classes annotated with {@link EnableAutoConfiguration} or, + * {@link SpringBootApplication}., + * @since 1.2.2, +	public static BootGlobalAuthenticationConfigurationAdapter bootGlobalAuthenticationConfigurationAdapter(, +			ApplicationContext context) {, +	private static class BootGlobalAuthenticationConfigurationAdapter extends, +			GlobalAuthenticationConfigurerAdapter {, +		private static final Log logger = LogFactory, +				.getLog(BootGlobalAuthenticationConfiguration.class);, +			Map<String, Object> beansWithAnnotation = this.context, +					.getBeansWithAnnotation(EnableAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, +++ b/spring-boot-security-tests/spring-boot-security-tests-web-helloworld/pom.xml, +	<properties>, +		<main.basedir>${basedir}/../..</main.basedir>, +	</properties>, +++ b/spring-boot-security-tests/spring-boot-security-tests-web-helloworld/src/main/java/sample/HelloWebSecurityApplication.java, +, +	public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {, +		auth.inMemoryAuthentication().withUser("user").password("password").roles("USER");, +++ b/spring-boot-security-tests/spring-boot-security-tests-web-helloworld/src/test/java/sample/HelloWebSecurityApplicationTests.java]