[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setSessionStoreDir(getSession().getStoreDir());, +		/**, +		 * The directory used to store session data., +		 */, +		private File storeDir;, +, +		public File getStoreDir() {, +			return this.storeDir;, +		}, +, +		public void setStoreDir(File storeDir) {, +			this.storeDir = storeDir;, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setSessionStoreDir(getSession().getStoreDir());, +		/**, +		 * The directory used to store session data., +		 */, +		private File storeDir;, +, +		public File getStoreDir() {, +			return this.storeDir;, +		}, +, +		public void setStoreDir(File storeDir) {, +			this.storeDir = storeDir;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import java.io.File;, +	@Test, +	public void sessionStoreDir() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.session.store-dir", "myfolder");, +		bindProperties(map);, +		JettyEmbeddedServletContainerFactory container = spy(, +				new JettyEmbeddedServletContainerFactory());, +		this.properties.customize(container);, +		verify(container).setSessionStoreDir(new File("myfolder"));, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setSessionStoreDir(getSession().getStoreDir());, +		/**, +		 * The directory used to store session data., +		 */, +		private File storeDir;, +, +		public File getStoreDir() {, +			return this.storeDir;, +		}, +, +		public void setStoreDir(File storeDir) {, +			this.storeDir = storeDir;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import java.io.File;, +	@Test, +	public void sessionStoreDir() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.session.store-dir", "myfolder");, +		bindProperties(map);, +		JettyEmbeddedServletContainerFactory container = spy(, +				new JettyEmbeddedServletContainerFactory());, +		this.properties.customize(container);, +		verify(container).setSessionStoreDir(new File("myfolder"));, +	}, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.session.store-dir= # dir used to save session data, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setSessionStoreDir(getSession().getStoreDir());, +		/**, +		 * The directory used to store session data., +		 */, +		private File storeDir;, +, +		public File getStoreDir() {, +			return this.storeDir;, +		}, +, +		public void setStoreDir(File storeDir) {, +			this.storeDir = storeDir;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import java.io.File;, +	@Test, +	public void sessionStoreDir() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.session.store-dir", "myfolder");, +		bindProperties(map);, +		JettyEmbeddedServletContainerFactory container = spy(, +				new JettyEmbeddedServletContainerFactory());, +		this.properties.customize(container);, +		verify(container).setSessionStoreDir(new File("myfolder"));, +	}]