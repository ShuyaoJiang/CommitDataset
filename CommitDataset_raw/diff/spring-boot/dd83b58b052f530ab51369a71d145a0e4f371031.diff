[+++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractDependencyFilterMojo.java, +	 * Comma separated list of groupId names to exclude (exact match)., +	 * Comma separated list of artifact names to exclude (exact match)., +		filters.addFilter(new MatchingGroupIdFilter(cleanFilterConfig(this.excludeGroupIds)));, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractDependencyFilterMojo.java, +	 * Comma separated list of groupId names to exclude (exact match)., +	 * Comma separated list of artifact names to exclude (exact match)., +		filters.addFilter(new MatchingGroupIdFilter(cleanFilterConfig(this.excludeGroupIds)));, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/MatchingGroupIdFilter.java, +package org.springframework.boot.maven;, +, +import org.apache.maven.artifact.Artifact;, +import org.apache.maven.shared.artifact.filter.collection.AbstractArtifactFeatureFilter;, +, +/**, + * An {@link org.apache.maven.shared.artifact.filter.collection.ArtifactsFilter, + * ArtifactsFilter} that filters by matching groupId., + *, + * Preferred over the {@link org.apache.maven.shared.artifact.filter.collection.GroupIdFilter} due, + * to that classes use of {@link String#startsWith} to match on prefix., + *, + * @author Mark Ingram, + * @since 1.1, + */, +public class MatchingGroupIdFilter extends AbstractArtifactFeatureFilter {, +, +	/**, +	 * Create a new instance with the CSV groupId values that should be excluded., +	 */, +	public MatchingGroupIdFilter(String exclude) {, +		super("", exclude);, +	}, +, +	protected String getArtifactFeature(Artifact artifact) {, +		return artifact.getGroupId();, +	}, +}, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractDependencyFilterMojo.java, +	 * Comma separated list of groupId names to exclude (exact match)., +	 * Comma separated list of artifact names to exclude (exact match)., +		filters.addFilter(new MatchingGroupIdFilter(cleanFilterConfig(this.excludeGroupIds)));, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/MatchingGroupIdFilter.java, +package org.springframework.boot.maven;, +, +import org.apache.maven.artifact.Artifact;, +import org.apache.maven.shared.artifact.filter.collection.AbstractArtifactFeatureFilter;, +, +/**, + * An {@link org.apache.maven.shared.artifact.filter.collection.ArtifactsFilter, + * ArtifactsFilter} that filters by matching groupId., + *, + * Preferred over the {@link org.apache.maven.shared.artifact.filter.collection.GroupIdFilter} due, + * to that classes use of {@link String#startsWith} to match on prefix., + *, + * @author Mark Ingram, + * @since 1.1, + */, +public class MatchingGroupIdFilter extends AbstractArtifactFeatureFilter {, +, +	/**, +	 * Create a new instance with the CSV groupId values that should be excluded., +	 */, +	public MatchingGroupIdFilter(String exclude) {, +		super("", exclude);, +	}, +, +	protected String getArtifactFeature(Artifact artifact) {, +		return artifact.getGroupId();, +	}, +}, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/DependencyFilterMojoTests.java, +	@Test, +	public void filterGroupIdExactMatch() throws MojoExecutionException {, +		TestableDependencyFilterMojo mojo = new TestableDependencyFilterMojo(, +				Collections.<Exclude>emptyList(), "com.foo", "");, +, +		Artifact artifact = createArtifact("com.foo.bar", "one");, +		Set<Artifact> artifacts = mojo.filterDependencies(, +				createArtifact("com.foo", "one"), createArtifact("com.foo", "two"),, +				artifact);, +		assertEquals("wrong filtering of artifacts", 1, artifacts.size());, +		assertSame("Wrong filtered artifact", artifact, artifacts.iterator().next());, +	}, +]