[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +			Manifest manifest = new ExplodedArchive(this.home, false).getManifest();, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +			Manifest manifest = new ExplodedArchive(this.home, false).getManifest();, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/archive/ExplodedArchive.java, +					if (file.equals(this.root) || this.recursive, +							|| file.getName().equals("META-INF")) {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +			Manifest manifest = new ExplodedArchive(this.home, false).getManifest();, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/archive/ExplodedArchive.java, +					if (file.equals(this.root) || this.recursive, +							|| file.getName().equals("META-INF")) {, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/archive/SpecialArchiveTests.java, +import static org.hamcrest.Matchers.equalTo;, +import static org.junit.Assert.assertNotNull;, +	@Test, +	public void getManifest() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(new File("src/test/resources/root"));, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(4));, +	}, +, +	@Test, +	public void getManifestEvenIfNonRecursive() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(, +				new File("src/test/resources/root"), false);, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(3));, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, +			Manifest manifest = new ExplodedArchive(this.home, false).getManifest();, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/archive/ExplodedArchive.java, +					if (file.equals(this.root) || this.recursive, +							|| file.getName().equals("META-INF")) {, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/archive/SpecialArchiveTests.java, +import static org.hamcrest.Matchers.equalTo;, +import static org.junit.Assert.assertNotNull;, +	@Test, +	public void getManifest() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(new File("src/test/resources/root"));, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(4));, +	}, +, +	@Test, +	public void getManifestEvenIfNonRecursive() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(, +				new File("src/test/resources/root"), false);, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(3));, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/test/resources/root/META-INF/spring/application.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<beans xmlns="http://www.springframework.org/schema/beans", +	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">, +, +, +</beans>]