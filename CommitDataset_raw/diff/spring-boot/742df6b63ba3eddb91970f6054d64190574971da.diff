[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/Ssl.java, +	 * Enabled SSL protocols., +	private String[] enabledProtocols;, +	public String[] getEnabledProtocols() {, +		return this.enabledProtocols;, +	}, +, +	public void setEnabledProtocols(String[] enabledProtocols) {, +		this.enabledProtocols = enabledProtocols;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/Ssl.java, +	 * Enabled SSL protocols., +	private String[] enabledProtocols;, +	public String[] getEnabledProtocols() {, +		return this.enabledProtocols;, +	}, +, +	public void setEnabledProtocols(String[] enabledProtocols) {, +		this.enabledProtocols = enabledProtocols;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +		if (ssl.getEnabledProtocols() != null) {, +			factory.setIncludeProtocols(ssl.getEnabledProtocols());, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/Ssl.java, +	 * Enabled SSL protocols., +	private String[] enabledProtocols;, +	public String[] getEnabledProtocols() {, +		return this.enabledProtocols;, +	}, +, +	public void setEnabledProtocols(String[] enabledProtocols) {, +		this.enabledProtocols = enabledProtocols;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +		if (ssl.getEnabledProtocols() != null) {, +			factory.setIncludeProtocols(ssl.getEnabledProtocols());, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +		protocol.setCiphers(StringUtils.arrayToCommaDelimitedString(ssl.getCiphers()));, +		if (ssl.getEnabledProtocols() != null) {, +			protocol.setProperty("sslEnabledProtocols",, +					StringUtils.arrayToCommaDelimitedString(ssl.getEnabledProtocols()));, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/Ssl.java, +	 * Enabled SSL protocols., +	private String[] enabledProtocols;, +	public String[] getEnabledProtocols() {, +		return this.enabledProtocols;, +	}, +, +	public void setEnabledProtocols(String[] enabledProtocols) {, +		this.enabledProtocols = enabledProtocols;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +		if (ssl.getEnabledProtocols() != null) {, +			factory.setIncludeProtocols(ssl.getEnabledProtocols());, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +		protocol.setCiphers(StringUtils.arrayToCommaDelimitedString(ssl.getCiphers()));, +		if (ssl.getEnabledProtocols() != null) {, +			protocol.setProperty("sslEnabledProtocols",, +					StringUtils.arrayToCommaDelimitedString(ssl.getEnabledProtocols()));, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory.java, +			builder.setSocketOption(Options.SSL_CLIENT_AUTH_MODE,, +					getSslClientAuthMode(ssl));, +			if (ssl.getEnabledProtocols() != null) {, +				builder.setSocketOption(Options.SSL_ENABLED_PROTOCOLS,, +						Sequence.of(ssl.getEnabledProtocols()));, +				builder.setSocketOption(Options.SSL_ENABLED_CIPHER_SUITES,, +						Sequence.of(ssl.getCiphers()));, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/Ssl.java, +	 * Enabled SSL protocols., +	private String[] enabledProtocols;, +	public String[] getEnabledProtocols() {, +		return this.enabledProtocols;, +	}, +, +	public void setEnabledProtocols(String[] enabledProtocols) {, +		this.enabledProtocols = enabledProtocols;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +		if (ssl.getEnabledProtocols() != null) {, +			factory.setIncludeProtocols(ssl.getEnabledProtocols());, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +		protocol.setCiphers(StringUtils.arrayToCommaDelimitedString(ssl.getCiphers()));, +		if (ssl.getEnabledProtocols() != null) {, +			protocol.setProperty("sslEnabledProtocols",, +					StringUtils.arrayToCommaDelimitedString(ssl.getEnabledProtocols()));, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory.java, +			builder.setSocketOption(Options.SSL_CLIENT_AUTH_MODE,, +					getSslClientAuthMode(ssl));]