[+++ b/spring-autoconfigure/src/test/java/org/springframework/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +, +		if (this.context != null) {, +			this.context.close();, +		((AnnotationConfigApplicationContext) this.context).register(, +				ComponentScanDetectorConfiguration.class,, +		((AnnotationConfigApplicationContext) this.context).register(, +				ComponentScanDetectorConfiguration.class,, +				DataSourceTransactionManagerAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestConfiguration.class);, +		context.register(ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestConfiguration.class);, +	public void testOpenEntityManagerInViewInterceptorNotRegisteredWhenFilterPresent(), +			throws Exception {, +		context.register(ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestFilterConfiguration.class);, +		assertEquals(, +				0,, +				this.context, +						.getBeanNamesForType(OpenEntityManagerInViewInterceptor.class).length);, +	public void testOpenEntityManagerInViewInterceptorNotRegisteredWhenExplicitlyOff(), +			throws Exception {, +		context.register(TestConfiguration.class,, +				ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		assertEquals(, +				0,, +				this.context, +						.getBeanNamesForType(OpenEntityManagerInViewInterceptor.class).length);, +++ b/spring-autoconfigure/src/test/java/org/springframework/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +, +		if (this.context != null) {, +			this.context.close();, +		((AnnotationConfigApplicationContext) this.context).register(, +				ComponentScanDetectorConfiguration.class,, +		((AnnotationConfigApplicationContext) this.context).register(, +				ComponentScanDetectorConfiguration.class,, +				DataSourceTransactionManagerAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestConfiguration.class);, +		context.register(ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestConfiguration.class);, +	public void testOpenEntityManagerInViewInterceptorNotRegisteredWhenFilterPresent(), +			throws Exception {, +		context.register(ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestFilterConfiguration.class);, +		assertEquals(, +				0,, +				this.context, +						.getBeanNamesForType(OpenEntityManagerInViewInterceptor.class).length);, +	public void testOpenEntityManagerInViewInterceptorNotRegisteredWhenExplicitlyOff(), +			throws Exception {, +		context.register(TestConfiguration.class,, +				ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		assertEquals(, +				0,, +				this.context, +						.getBeanNamesForType(OpenEntityManagerInViewInterceptor.class).length);, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/config/ArrayDocumentMatcher.java, +, + * , + * @author Dave Syer, +++ b/spring-autoconfigure/src/test/java/org/springframework/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +, +		if (this.context != null) {, +			this.context.close();, +		((AnnotationConfigApplicationContext) this.context).register(, +				ComponentScanDetectorConfiguration.class,, +		((AnnotationConfigApplicationContext) this.context).register(, +				ComponentScanDetectorConfiguration.class,, +				DataSourceTransactionManagerAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestConfiguration.class);, +		context.register(ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestConfiguration.class);, +	public void testOpenEntityManagerInViewInterceptorNotRegisteredWhenFilterPresent(), +			throws Exception {, +		context.register(ComponentScanDetectorConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class, TestFilterConfiguration.class);, +		assertEquals(, +				0,, +				this.context, +						.getBeanNamesForType(OpenEntityManagerInViewInterceptor.class).length);, +	public void testOpenEntityManagerInViewInterceptorNotRegisteredWhenExplicitlyOff()]