[+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		Collection<SpringApplicationRunListener> participants = createRunParticipants(args);, +		for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +	private Collection<SpringApplicationRunListener> createRunParticipants(, +		List<SpringApplicationRunListener> participants = new ArrayList<SpringApplicationRunListener>();, +				SpringApplicationRunListener.class, new Class<?>[] {, +	private void finishWithException(SpringApplicationRunListener participant,, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		Collection<SpringApplicationRunListener> participants = createRunParticipants(args);, +		for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +	private Collection<SpringApplicationRunListener> createRunParticipants(, +		List<SpringApplicationRunListener> participants = new ArrayList<SpringApplicationRunListener>();, +				SpringApplicationRunListener.class, new Class<?>[] {, +	private void finishWithException(SpringApplicationRunListener participant,, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListener.java, + * {@link SpringApplicationRunListener} instance will be created for each run., + * @author Dave Syer, +public interface SpringApplicationRunListener {, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		Collection<SpringApplicationRunListener> participants = createRunParticipants(args);, +		for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +			for (SpringApplicationRunListener participant : participants) {, +	private Collection<SpringApplicationRunListener> createRunParticipants(, +		List<SpringApplicationRunListener> participants = new ArrayList<SpringApplicationRunListener>();, +				SpringApplicationRunListener.class, new Class<?>[] {, +	private void finishWithException(SpringApplicationRunListener participant,, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListener.java, + * {@link SpringApplicationRunListener} instance will be created for each run., + * @author Dave Syer, +public interface SpringApplicationRunListener {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/event/EventPublishingRunListener.java, +import org.springframework.boot.SpringApplicationRunListener;, + * {@link SpringApplicationRunListener} to publish {@link SpringApplicationEvent}s., +public class EventPublishingRunListener implements SpringApplicationRunListener {, +	public EventPublishingRunListener(SpringApplication application, String[] args) {]