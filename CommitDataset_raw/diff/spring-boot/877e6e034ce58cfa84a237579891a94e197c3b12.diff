[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractor.java, +			authorities = asAuthorities(map.get(AUTHORITIES));, +	private String asAuthorities(Object object) {, +		if (object instanceof Collection) {, +			return StringUtils.collectionToCommaDelimitedString((Collection<?>) object);, +		}, +		if (ObjectUtils.isArray(object)) {, +			return StringUtils.arrayToCommaDelimitedString((Object[]) object);, +		}, +		return object.toString();, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractor.java, +			authorities = asAuthorities(map.get(AUTHORITIES));, +	private String asAuthorities(Object object) {, +		if (object instanceof Collection) {, +			return StringUtils.collectionToCommaDelimitedString((Collection<?>) object);, +		}, +		if (ObjectUtils.isArray(object)) {, +			return StringUtils.arrayToCommaDelimitedString((Object[]) object);, +		}, +		return object.toString();, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractorTests.java, + * Tests for {@link FixedAuthoritiesExtractor}., + *, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractor.java, +			authorities = asAuthorities(map.get(AUTHORITIES));, +	private String asAuthorities(Object object) {, +		if (object instanceof Collection) {, +			return StringUtils.collectionToCommaDelimitedString((Collection<?>) object);, +		}, +		if (ObjectUtils.isArray(object)) {, +			return StringUtils.arrayToCommaDelimitedString((Object[]) object);, +		}, +		return object.toString();, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractorTests.java, + * Tests for {@link FixedAuthoritiesExtractor}., + *, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractor.java, +			authorities = asAuthorities(map.get(AUTHORITIES));, +	private String asAuthorities(Object object) {, +		if (object instanceof Collection) {, +			return StringUtils.collectionToCommaDelimitedString((Collection<?>) object);, +		}, +		if (ObjectUtils.isArray(object)) {, +			return StringUtils.arrayToCommaDelimitedString((Object[]) object);, +		}, +		return object.toString();, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractorTests.java, + * Tests for {@link FixedAuthoritiesExtractor}., + *, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +, +, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/AuthoritiesExtractor.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractor.java, +			authorities = asAuthorities(map.get(AUTHORITIES));, +	private String asAuthorities(Object object) {, +		if (object instanceof Collection) {, +			return StringUtils.collectionToCommaDelimitedString((Collection<?>) object);, +		}, +		if (ObjectUtils.isArray(object)) {, +			return StringUtils.arrayToCommaDelimitedString((Object[]) object);, +		}, +		return object.toString();, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/FixedAuthoritiesExtractorTests.java, + * Tests for {@link FixedAuthoritiesExtractor}., + *, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfigurationTests.java, +, +, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/LoggingApplicationListenerTests.java, +]