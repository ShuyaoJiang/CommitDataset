[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;, +import org.springframework.core.Ordered;, + * @author Brian Clozel, +@ConditionalOnWebApplication, +	@Bean, +	public LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer() {, +		return new LocaleCharsetMappingsCustomizer(this.properties);, +	}, +, +	private static class LocaleCharsetMappingsCustomizer implements EmbeddedServletContainerCustomizer, Ordered {, +, +		private final HttpEncodingProperties properties;, +, +		LocaleCharsetMappingsCustomizer(HttpEncodingProperties properties) {, +			this.properties = properties;, +		}, +, +		@Override, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			if (this.properties.getMapping() != null) {, +				container.setLocaleCharsetMappings(this.properties.getMapping());, +			}, +		}, +, +		@Override, +		public int getOrder() {, +			return 0;, +		}, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;, +import org.springframework.core.Ordered;, + * @author Brian Clozel, +@ConditionalOnWebApplication, +	@Bean, +	public LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer() {, +		return new LocaleCharsetMappingsCustomizer(this.properties);, +	}, +, +	private static class LocaleCharsetMappingsCustomizer implements EmbeddedServletContainerCustomizer, Ordered {, +, +		private final HttpEncodingProperties properties;, +, +		LocaleCharsetMappingsCustomizer(HttpEncodingProperties properties) {, +			this.properties = properties;, +		}, +, +		@Override, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			if (this.properties.getMapping() != null) {, +				container.setLocaleCharsetMappings(this.properties.getMapping());, +			}, +		}, +, +		@Override, +		public int getOrder() {, +			return 0;, +		}, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpEncodingProperties.java, +import java.util.Locale;, +import java.util.Map;, + * @author Brian Clozel, +	/**, +	 * Locale to Encoding mapping., +	 */, +	private Map<Locale, Charset> mapping;, +, +	public Map<Locale, Charset> getMapping() {, +		return this.mapping;, +	}, +, +	public void setMapping(Map<Locale, Charset> mapping) {, +		this.mapping = mapping;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpEncodingAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;, +import org.springframework.core.Ordered;, + * @author Brian Clozel, +@ConditionalOnWebApplication, +	@Bean, +	public LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer() {, +		return new LocaleCharsetMappingsCustomizer(this.properties);, +	}, +, +	private static class LocaleCharsetMappingsCustomizer implements EmbeddedServletContainerCustomizer, Ordered {, +, +		private final HttpEncodingProperties properties;, +, +		LocaleCharsetMappingsCustomizer(HttpEncodingProperties properties) {]