[+++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/InstallTests.java, +	private ProjectConnection project;, +	private static final String BOOT_VERSION = ManagedDependencies.get().find(, +			"spring-boot").getVersion();, +	@Test, +	public void cleanInstall() throws Exception {, +		project.newBuild().forTasks("install").withArguments(, +				"-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +	public void cleanInstallApp() throws Exception {, +		project = new ProjectCreator().createProject("install-app");, +		// "install" from the application plugin was renamed "installApp" in Gradle, +		// 1.0, +		project.newBuild().forTasks("installApp").withArguments(, +				"-PbootVersion=" + BOOT_VERSION, "--stacktrace", "--info").run();, +++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/InstallTests.java, +	private ProjectConnection project;, +	private static final String BOOT_VERSION = ManagedDependencies.get().find(, +			"spring-boot").getVersion();, +	@Test, +	public void cleanInstall() throws Exception {, +		project.newBuild().forTasks("install").withArguments(, +				"-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +	public void cleanInstallApp() throws Exception {, +		project = new ProjectCreator().createProject("install-app");, +		// "install" from the application plugin was renamed "installApp" in Gradle, +		// 1.0, +		project.newBuild().forTasks("installApp").withArguments(, +				"-PbootVersion=" + BOOT_VERSION, "--stacktrace", "--info").run();, +++ b/spring-boot-integration-tests/src/test/resources/install-app.gradle, +buildscript {, +	repositories {, +		mavenLocal(), +	}, +	dependencies {, +		classpath("org.springframework.boot:spring-boot-gradle-plugin:${project.bootVersion}"), +	}, +}, +, +apply plugin: 'java', +apply plugin: 'maven', +apply plugin: 'spring-boot', +, +group = 'installer', +version = '0.0.0', +, +run {, +  main = 'org.springframework.boot.SpringApplication', +}, +, +jar {, +	baseName =  'install-app', +}, +, +repositories {, +	mavenLocal(), +	mavenCentral(), +}, +, +dependencies {, +	compile "org.springframework.boot:spring-boot-starter", +}, +++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/InstallTests.java, +	private ProjectConnection project;, +	private static final String BOOT_VERSION = ManagedDependencies.get().find(, +			"spring-boot").getVersion();, +	@Test, +	public void cleanInstall() throws Exception {, +		project.newBuild().forTasks("install").withArguments(, +				"-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +	public void cleanInstallApp() throws Exception {, +		project = new ProjectCreator().createProject("install-app");, +		// "install" from the application plugin was renamed "installApp" in Gradle, +		// 1.0, +		project.newBuild().forTasks("installApp").withArguments(, +				"-PbootVersion=" + BOOT_VERSION, "--stacktrace", "--info").run();, +++ b/spring-boot-integration-tests/src/test/resources/install-app.gradle, +buildscript {, +	repositories {, +		mavenLocal(), +	}, +	dependencies {, +		classpath("org.springframework.boot:spring-boot-gradle-plugin:${project.bootVersion}"), +	}, +}, +, +apply plugin: 'java', +apply plugin: 'maven', +apply plugin: 'spring-boot', +, +group = 'installer', +version = '0.0.0', +, +run {, +  main = 'org.springframework.boot.SpringApplication', +}, +, +jar {, +	baseName =  'install-app', +}, +]