[+++ b/spring-boot-samples/spring-boot-sample-data-gemfire/pom.xml, +, +, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<artifactId>spring-boot-configuration-processor</artifactId>, +			<optional>true</optional>, +		</dependency>, +, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<artifactId>spring-boot-starter-test</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/pom.xml, +, +, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<artifactId>spring-boot-configuration-processor</artifactId>, +			<optional>true</optional>, +		</dependency>, +, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<artifactId>spring-boot-starter-test</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/SampleDataGemFireApplication.java, + * Copyright 2012-2016 the original author or authors., +import com.gemstone.gemfire.cache.Cache;, +import com.gemstone.gemfire.cache.RegionAttributes;, +import sample.data.gemfire.config.SampleDataGemFireProperties;, +import sample.data.gemfire.domain.Gemstone;, +, +@EnableConfigurationProperties(SampleDataGemFireProperties.class), +	private final SampleDataGemFireProperties applicationProperties;, +, +	public SampleDataGemFireApplication(SampleDataGemFireProperties applicationProperties) {, +		this.applicationProperties = applicationProperties;, +	}, +, +	private Properties gemfireProperties() {, +		Properties gemfireProperties = new Properties();, +, +		gemfireProperties.setProperty("name", SampleDataGemFireApplication.class.getSimpleName());, +		gemfireProperties.setProperty("mcast-port", "0");, +		gemfireProperties.setProperty("locators", "");, +		gemfireProperties.setProperty("log-level", this.applicationProperties.getLogLevel());, +, +		return gemfireProperties;, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/pom.xml, +, +, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<artifactId>spring-boot-configuration-processor</artifactId>, +			<optional>true</optional>, +		</dependency>, +, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<artifactId>spring-boot-starter-test</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/SampleDataGemFireApplication.java, + * Copyright 2012-2016 the original author or authors., +import com.gemstone.gemfire.cache.Cache;, +import com.gemstone.gemfire.cache.RegionAttributes;, +import sample.data.gemfire.config.SampleDataGemFireProperties;, +import sample.data.gemfire.domain.Gemstone;, +, +@EnableConfigurationProperties(SampleDataGemFireProperties.class), +	private final SampleDataGemFireProperties applicationProperties;, +, +	public SampleDataGemFireApplication(SampleDataGemFireProperties applicationProperties) {, +		this.applicationProperties = applicationProperties;, +	}, +, +	private Properties gemfireProperties() {, +		Properties gemfireProperties = new Properties();, +, +		gemfireProperties.setProperty("name", SampleDataGemFireApplication.class.getSimpleName());, +		gemfireProperties.setProperty("mcast-port", "0");, +		gemfireProperties.setProperty("locators", "");, +		gemfireProperties.setProperty("log-level", this.applicationProperties.getLogLevel());, +, +		return gemfireProperties;, +	}, +, +++ /dev/null, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/pom.xml, +, +, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<artifactId>spring-boot-configuration-processor</artifactId>, +			<optional>true</optional>]