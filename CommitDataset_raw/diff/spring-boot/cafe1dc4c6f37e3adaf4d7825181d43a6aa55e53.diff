[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, + * Copyright 2012-2016 the original author or authors., +				logger.info(String.format(, +						"%n%nUsing default password for shell access: %s%n%n",, +						this.user.getPassword()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, + * Copyright 2012-2016 the original author or authors., +				logger.info(String.format(, +						"%n%nUsing default password for shell access: %s%n%n",, +						this.user.getPassword()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, + * Copyright 2012-2016 the original author or authors., +				this.logger.info(String.format("%n%nError starting ApplicationContext. ", +						+ "debug logging (start with --debug)%n%n"));, +		message.append(String.format("%n%n%n"));, +		message.append(String.format("=========================%n"));, +		message.append(String.format("AUTO-CONFIGURATION REPORT%n"));, +		message.append(String.format("=========================%n%n%n"));, +		message.append(String.format("Positive matches:%n"));, +		message.append(String.format("-----------------%n"));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Negative matches:%n"));, +		message.append(String.format("-----------------%n"));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Exclusions:%n"));, +		message.append(String.format("-----------%n"));, +			message.append(String.format("%n    None%n"));, +				message.append(String.format("%n    %s%n", exclusion));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Unconditional classes:%n"));, +		message.append(String.format("----------------------%n"));, +			message.append(String.format("%n    None%n"));, +				message.append(String.format("%n    %s%n", unconditionalClass));, +		message.append(String.format("%n%n"));, +		message.append(String.format("%n   %s", source));, +				conditionAndOutcomes.isFullMatch() ? " matched" : " did not match"), +				.append(String.format("%n"));, +			message.append(String.format(")%n"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, + * Copyright 2012-2016 the original author or authors., +				logger.info(String.format(, +						"%n%nUsing default password for shell access: %s%n%n",, +						this.user.getPassword()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, + * Copyright 2012-2016 the original author or authors., +				this.logger.info(String.format("%n%nError starting ApplicationContext. ", +						+ "debug logging (start with --debug)%n%n"));, +		message.append(String.format("%n%n%n"));, +		message.append(String.format("=========================%n"));, +		message.append(String.format("AUTO-CONFIGURATION REPORT%n"));, +		message.append(String.format("=========================%n%n%n"));, +		message.append(String.format("Positive matches:%n"));, +		message.append(String.format("-----------------%n"));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Negative matches:%n"));, +		message.append(String.format("-----------------%n"));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Exclusions:%n"));, +		message.append(String.format("-----------%n"));, +			message.append(String.format("%n    None%n"));, +				message.append(String.format("%n    %s%n", exclusion));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Unconditional classes:%n"));, +		message.append(String.format("----------------------%n"));, +			message.append(String.format("%n    None%n"));, +				message.append(String.format("%n    %s%n", unconditionalClass));, +		message.append(String.format("%n%n"));, +		message.append(String.format("%n   %s", source));, +				conditionAndOutcomes.isFullMatch() ? " matched" : " did not match"), +				.append(String.format("%n"));, +			message.append(String.format(")%n"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				logger.info(String.format(, +						"%n%nUsing default security password: %s%n", user.getPassword()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, + * Copyright 2012-2016 the original author or authors., +				logger.info(String.format(, +						"%n%nUsing default password for shell access: %s%n%n",, +						this.user.getPassword()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, + * Copyright 2012-2016 the original author or authors., +				this.logger.info(String.format("%n%nError starting ApplicationContext. ", +						+ "debug logging (start with --debug)%n%n"));, +		message.append(String.format("%n%n%n"));, +		message.append(String.format("=========================%n"));, +		message.append(String.format("AUTO-CONFIGURATION REPORT%n"));, +		message.append(String.format("=========================%n%n%n"));, +		message.append(String.format("Positive matches:%n"));, +		message.append(String.format("-----------------%n"));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Negative matches:%n"));, +		message.append(String.format("-----------------%n"));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Exclusions:%n"));, +		message.append(String.format("-----------%n"));, +			message.append(String.format("%n    None%n"));, +				message.append(String.format("%n    %s%n", exclusion));, +		message.append(String.format("%n%n"));, +		message.append(String.format("Unconditional classes:%n"));]