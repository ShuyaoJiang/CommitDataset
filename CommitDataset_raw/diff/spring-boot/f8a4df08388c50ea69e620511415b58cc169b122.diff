[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, + * Once in effect, the auto-configuration allows to configure any property of, + * {@link RepositoryRestConfiguration} using the {@code spring.data.rest} prefix., +	static class RepositoryRestMvcBootConfiguration extends, +			RepositoryRestMvcConfiguration {, +		@Override, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, + * Once in effect, the auto-configuration allows to configure any property of, + * {@link RepositoryRestConfiguration} using the {@code spring.data.rest} prefix., +	static class RepositoryRestMvcBootConfiguration extends, +			RepositoryRestMvcConfiguration {, +		@Override, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +		RepositoryRestConfiguration bean = this.context, +				.getBean(RepositoryRestConfiguration.class);, +		RepositoryRestConfiguration bean = this.context, +				.getBean(RepositoryRestConfiguration.class);, +		assertEquals("Custom base URI should not have been set", URI.create(""),, +				bean.getBaseUri());, +	private void load(Class<?> config, String... environment) {, +		applicationContext.register(config, EmbeddedDataSourceConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, + * Once in effect, the auto-configuration allows to configure any property of, + * {@link RepositoryRestConfiguration} using the {@code spring.data.rest} prefix., +	static class RepositoryRestMvcBootConfiguration extends, +			RepositoryRestMvcConfiguration {, +		@Override, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +		RepositoryRestConfiguration bean = this.context, +				.getBean(RepositoryRestConfiguration.class);, +		RepositoryRestConfiguration bean = this.context, +				.getBean(RepositoryRestConfiguration.class);, +		assertEquals("Custom base URI should not have been set", URI.create(""),, +				bean.getBaseUri());, +	private void load(Class<?> config, String... environment) {, +		applicationContext.register(config, EmbeddedDataSourceConfiguration.class,, +++ b/spring-boot-cli/samples/caching.groovy, +package org.test, +, +import java.util.concurrent.atomic.AtomicLong, +, +@Configuration, +@EnableCaching, +class Sample {, +, +	@Bean CacheManager cacheManager() {, +		new ConcurrentMapCacheManager(), +	}, +, +	@Component, +	static class MyClient implements CommandLineRunner {, +, +		private final MyService myService, +, +		@Autowired, +		MyClient(MyService myService) {, +			this.myService = myService, +		} , +, +		void run(String... args) { , +			long counter = myService.get('someKey'), +			long counter2 = myService.get('someKey'), +			if (counter == counter2) {, +				println 'Hello World', +			} else {, +				println 'Something went wrong with the cache setup', +			}, +, +		}, +	}, +, +	@Component, +	static class MyService {, +, +		private final AtomicLong counter = new AtomicLong(), +, +		@Cacheable('foo'), +		Long get(String id) {, +			return counter.getAndIncrement(), +		}, +, +	}, +, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, + * Once in effect, the auto-configuration allows to configure any property of, + * {@link RepositoryRestConfiguration} using the {@code spring.data.rest} prefix., +	static class RepositoryRestMvcBootConfiguration extends, +			RepositoryRestMvcConfiguration {, +		@Override, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;]