[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration.java, +	@ConditionalOnProperty("spring.influx.url"), +		if (Strings.isNullOrEmpty(this.properties.getUser())) {, +			return InfluxDBFactory.connect(this.properties.getUrl());, +		return InfluxDBFactory.connect(this.properties.getUrl(), this.properties.getUser(),, +				this.properties.getPassword());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration.java, +	@ConditionalOnProperty("spring.influx.url"), +		if (Strings.isNullOrEmpty(this.properties.getUser())) {, +			return InfluxDBFactory.connect(this.properties.getUrl());, +		return InfluxDBFactory.connect(this.properties.getUrl(), this.properties.getUser(),, +				this.properties.getPassword());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/influx/InfluxDbProperties.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration.java, +	@ConditionalOnProperty("spring.influx.url"), +		if (Strings.isNullOrEmpty(this.properties.getUser())) {, +			return InfluxDBFactory.connect(this.properties.getUrl());, +		return InfluxDBFactory.connect(this.properties.getUrl(), this.properties.getUser(),, +				this.properties.getPassword());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/influx/InfluxDbProperties.java, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfigurationTests.java, +	public void influxDbRequiresUrl() {, +	public void influxDbCanBeCustomized() {, +		load("spring.influx.url=http://localhost",, +				"spring.influx.password:password",, +				"spring.influx.user:user");, +	public void influxDbCanBeCreatedWithoutCredentials() {, +		load("spring.influx.url=http://localhost");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfiguration.java, +	@ConditionalOnProperty("spring.influx.url"), +		if (Strings.isNullOrEmpty(this.properties.getUser())) {, +			return InfluxDBFactory.connect(this.properties.getUrl());, +		return InfluxDBFactory.connect(this.properties.getUrl(), this.properties.getUser(),, +				this.properties.getPassword());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/influx/InfluxDbProperties.java, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/influx/InfluxDbAutoConfigurationTests.java, +	public void influxDbRequiresUrl() {, +	public void influxDbCanBeCustomized() {, +		load("spring.influx.url=http://localhost",, +				"spring.influx.password:password",, +				"spring.influx.user:user");, +	public void influxDbCanBeCreatedWithoutCredentials() {, +		load("spring.influx.url=http://localhost");, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.influx.password= # Login password., +	spring.influx.url= # Url of the InfluxDB instance to connect to., +	spring.influx.user= # Login user.]