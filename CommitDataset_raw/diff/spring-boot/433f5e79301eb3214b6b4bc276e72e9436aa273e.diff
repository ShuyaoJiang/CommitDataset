[+++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTestContextCustomizer.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.boot.web.client.RestTemplateBuilder;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +			registerTestRestTemplate(context);, +	private void registerTestRestTemplate(ConfigurableApplicationContext context) {, +		ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();, +		if (beanFactory instanceof BeanDefinitionRegistry) {, +			registerTestRestTemplate(context, (BeanDefinitionRegistry) context);, +		}, +, +	}, +, +	private void registerTestRestTemplate(ConfigurableApplicationContext context,, +			BeanDefinitionRegistry registry) {, +		registry.registerBeanDefinition("testRestTemplate",, +				new RootBeanDefinition(TestRestTemplateFactory.class));, +	}, +, +	/**, +	 * {@link FactoryBean} used to create a configure a {@link TestRestTemplate}., +	 */, +	public static class TestRestTemplateFactory, +			implements FactoryBean<TestRestTemplate>, ApplicationContextAware {, +		private TestRestTemplate object;, +, +		@Override, +		public void setApplicationContext(ApplicationContext applicationContext), +				throws BeansException {, +			RestTemplateBuilder builder = getRestTemplateBuilder(applicationContext);, +			TestRestTemplate template = new TestRestTemplate(builder.build());, +			template.setUriTemplateHandler(, +					new LocalHostUriTemplateHandler(applicationContext.getEnvironment()));, +			this.object = template;, +		}, +, +		private RestTemplateBuilder getRestTemplateBuilder(, +				ApplicationContext applicationContext) {, +			try {, +				return applicationContext.getBean(RestTemplateBuilder.class);, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +				return new RestTemplateBuilder();, +			}, +		}, +, +		@Override, +		public boolean isSingleton() {, +			return true;, +		}, +, +		@Override, +		public Class<?> getObjectType() {, +			return TestRestTemplate.class;, +		}, +, +		@Override, +		public TestRestTemplate getObject() throws Exception {, +			return this.object;, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootTestContextCustomizer.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +import org.springframework.beans.factory.support.RootBeanDefinition;, +import org.springframework.boot.web.client.RestTemplateBuilder;, +import org.springframework.context.ApplicationContext;, +import org.springframework.context.ApplicationContextAware;, +			registerTestRestTemplate(context);, +	private void registerTestRestTemplate(ConfigurableApplicationContext context) {, +		ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();, +		if (beanFactory instanceof BeanDefinitionRegistry) {, +			registerTestRestTemplate(context, (BeanDefinitionRegistry) context);, +		}, +, +	}, +, +	private void registerTestRestTemplate(ConfigurableApplicationContext context,, +			BeanDefinitionRegistry registry) {, +		registry.registerBeanDefinition("testRestTemplate",, +				new RootBeanDefinition(TestRestTemplateFactory.class));, +	}, +, +	/**, +	 * {@link FactoryBean} used to create a configure a {@link TestRestTemplate}., +	 */, +	public static class TestRestTemplateFactory, +			implements FactoryBean<TestRestTemplate>, ApplicationContextAware {, +		private TestRestTemplate object;, +, +		@Override, +		public void setApplicationContext(ApplicationContext applicationContext), +				throws BeansException {]