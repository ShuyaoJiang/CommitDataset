[+++ b/spring-boot/src/main/java/org/springframework/boot/endpoint/web/jersey/JerseyEndpointResourceFactory.java, +import java.util.function.Function;, +import reactor.core.publisher.Mono;, +import org.springframework.util.ClassUtils;, +		private static final List<Function<Object, Object>> bodyConverters;, +, +		static {, +			bodyConverters = new ArrayList<>();, +			bodyConverters.add(new ResourceBodyConverter());, +			if (ClassUtils.isPresent("reactor.core.publisher.Mono",, +					EndpointInvokingInflector.class.getClassLoader())) {, +				bodyConverters.add(new MonoBodyConverter());, +			}, +		}, +, +			if (body instanceof Mono) {, +				return ((Mono<?>) body).block();, +			}, +			return body;, +		}, +, +	}, +, +	private static final class ResourceBodyConverter implements Function<Object, Object> {, +, +		@Override, +		public Object apply(Object body) {, +			if (body instanceof org.springframework.core.io.Resource) {, +				try {, +					return ((org.springframework.core.io.Resource) body).getInputStream();, +				}, +				catch (IOException ex) {, +					throw new IllegalStateException();, +				}, +			}, +			return body;, +		}, +, +	}, +, +	private static final class MonoBodyConverter implements Function<Object, Object> {, +, +		@Override, +		public Object apply(Object body) {, +			if (body instanceof Mono) {, +				return ((Mono<?>) body).block();, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/endpoint/web/jersey/JerseyEndpointResourceFactory.java, +import java.util.function.Function;, +import reactor.core.publisher.Mono;, +import org.springframework.util.ClassUtils;, +		private static final List<Function<Object, Object>> bodyConverters;, +, +		static {, +			bodyConverters = new ArrayList<>();, +			bodyConverters.add(new ResourceBodyConverter());, +			if (ClassUtils.isPresent("reactor.core.publisher.Mono",, +					EndpointInvokingInflector.class.getClassLoader())) {, +				bodyConverters.add(new MonoBodyConverter());, +			}, +		}, +, +			if (body instanceof Mono) {, +				return ((Mono<?>) body).block();, +			}, +			return body;, +		}, +, +	}, +, +	private static final class ResourceBodyConverter implements Function<Object, Object> {, +, +		@Override, +		public Object apply(Object body) {, +			if (body instanceof org.springframework.core.io.Resource) {, +				try {, +					return ((org.springframework.core.io.Resource) body).getInputStream();, +				}, +				catch (IOException ex) {, +					throw new IllegalStateException();, +				}, +			}, +			return body;, +		}, +, +	}, +, +	private static final class MonoBodyConverter implements Function<Object, Object> {, +, +		@Override, +		public Object apply(Object body) {, +			if (body instanceof Mono) {, +				return ((Mono<?>) body).block();, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/endpoint/web/reactive/WebEndpointReactiveHandlerMapping.java, +import org.reactivestreams.Publisher;, +import reactor.core.publisher.Mono;, +import reactor.core.scheduler.Schedulers;, +, +		OperationInvoker operationInvoker = operation.getInvoker();]