[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +import org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler;, +		BindHandler handler = new IgnoreTopLevelConverterNotFoundBindHandler();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +import org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler;, +		BindHandler handler = new IgnoreTopLevelConverterNotFoundBindHandler();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandler.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.context.properties.bind.handler;, +, +import org.springframework.boot.context.properties.bind.AbstractBindHandler;, +import org.springframework.boot.context.properties.bind.BindContext;, +import org.springframework.boot.context.properties.bind.BindHandler;, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.source.ConfigurationPropertyName;, +import org.springframework.core.convert.ConverterNotFoundException;, +, +/**, + * {@link BindHandler} that can be used to ignore top-level {@link ConverterNotFoundException}s., + *, + * @author Madhura Bhave, + * @since 2.0.0, + */, +public class IgnoreTopLevelConverterNotFoundBindHandler extends AbstractBindHandler {, +, +	@Override, +	public Object onFailure(ConfigurationPropertyName name, Bindable<?> target,, +			BindContext context, Exception error) throws Exception {, +		if (context.getDepth() == 0 && error instanceof ConverterNotFoundException) {, +			return null;, +		}, +		throw error;, +	}, +, +}, +, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +import org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler;, +		BindHandler handler = new IgnoreTopLevelConverterNotFoundBindHandler();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandler.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.context.properties.bind.handler;, +, +import org.springframework.boot.context.properties.bind.AbstractBindHandler;, +import org.springframework.boot.context.properties.bind.BindContext;, +import org.springframework.boot.context.properties.bind.BindHandler;, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.source.ConfigurationPropertyName;, +import org.springframework.core.convert.ConverterNotFoundException;, +, +/**, + * {@link BindHandler} that can be used to ignore top-level {@link ConverterNotFoundException}s., + *, + * @author Madhura Bhave, + * @since 2.0.0, + */, +public class IgnoreTopLevelConverterNotFoundBindHandler extends AbstractBindHandler {, +, +	@Override, +	public Object onFailure(ConfigurationPropertyName name, Bindable<?> target,, +			BindContext context, Exception error) throws Exception {, +		if (context.getDepth() == 0 && error instanceof ConverterNotFoundException) {, +			return null;, +		}, +		throw error;, +	}, +, +}, +]