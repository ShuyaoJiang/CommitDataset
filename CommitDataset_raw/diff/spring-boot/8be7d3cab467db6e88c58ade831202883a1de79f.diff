[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			resolver.setFullModeViewNames(, +					this.properties.getReactive().getFullModeViewNames());, +			resolver.setChunkedModeViewNames(, +					this.properties.getReactive().getChunkedModeViewNames());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			resolver.setFullModeViewNames(, +					this.properties.getReactive().getFullModeViewNames());, +			resolver.setChunkedModeViewNames(, +					this.properties.getReactive().getChunkedModeViewNames());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +	 * Comma-separated list of view names (patterns allowed) that should be excluded from, +	 * resolution., +		 * Maximum size of data buffers used for writing to the response, in bytes., +		 * Templates will execute in CHUNKED mode by default if this is set a value., +		 * Comma-separated list of view names (patterns allowed) that should be executed, +		 * in FULL mode even if a max chunk size is set., +		 * Comma-separated list of view names (patterns allowed) that should be the only, +		 * ones executed in CHUNKED mode when a max chunk size is set., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			resolver.setFullModeViewNames(, +					this.properties.getReactive().getFullModeViewNames());, +			resolver.setChunkedModeViewNames(, +					this.properties.getReactive().getChunkedModeViewNames());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +	 * Comma-separated list of view names (patterns allowed) that should be excluded from, +	 * resolution., +		 * Maximum size of data buffers used for writing to the response, in bytes., +		 * Templates will execute in CHUNKED mode by default if this is set a value., +		 * Comma-separated list of view names (patterns allowed) that should be executed, +		 * in FULL mode even if a max chunk size is set., +		 * Comma-separated list of view names (patterns allowed) that should be the only, +		 * ones executed in CHUNKED mode when a max chunk size is set., +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafReactiveAutoConfigurationTests.java, +		load(BaseConfiguration.class,, +				"spring.thymeleaf.reactive.fullModeViewNames:foo,bar");, +		load(BaseConfiguration.class,, +				"spring.thymeleaf.reactive.chunkedModeViewNames:foo,bar");, +		assertThat(views.getChunkedModeViewNames()), +				.isEqualTo(new String[] { "foo", "bar" });]