[+++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/livereload/LiveReloadServerTests.java, +	public void setUp() throws Exception {, +	public void tearDown() throws Exception {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/livereload/LiveReloadServerTests.java, +	public void setUp() throws Exception {, +	public void tearDown() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializerTests.java, +	public void noLogWithoutComponentScanAnnotation() throws Exception {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/livereload/LiveReloadServerTests.java, +	public void setUp() throws Exception {, +	public void tearDown() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializerTests.java, +	public void noLogWithoutComponentScanAnnotation() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	public void tearDown() {, +		public InputStream create(InputStream in) throws IOException {, +			return new GZIPInputStream(in);, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/livereload/LiveReloadServerTests.java, +	public void setUp() throws Exception {, +	public void tearDown() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializerTests.java, +	public void noLogWithoutComponentScanAnnotation() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	public void tearDown() {, +		public InputStream create(InputStream in) throws IOException {, +			return new GZIPInputStream(in);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractFilterRegistrationBeanTests.java, +				Collections.singleton(mockServletRegistration("s4")));, +		bean.addServletRegistrationBeans(mockServletRegistration("s5"));, +				mockServletRegistration("a"));, +				Arrays.asList(mockServletRegistration("b"))));, +	protected final ServletRegistrationBean mockServletRegistration(String name) {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/livereload/LiveReloadServerTests.java, +	public void setUp() throws Exception {, +	public void tearDown() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializerTests.java, +	public void noLogWithoutComponentScanAnnotation() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	public void tearDown() {, +		public InputStream create(InputStream in) throws IOException {, +			return new GZIPInputStream(in);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractFilterRegistrationBeanTests.java, +				Collections.singleton(mockServletRegistration("s4")));, +		bean.addServletRegistrationBeans(mockServletRegistration("s5"));, +				mockServletRegistration("a"));, +				Arrays.asList(mockServletRegistration("b"))));, +	protected final ServletRegistrationBean mockServletRegistration(String name) {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/undertow/FileSessionPersistenceTests.java, +	public void persistAndLoad() throws Exception {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/livereload/LiveReloadServerTests.java, +	public void setUp() throws Exception {, +	public void tearDown() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializerTests.java, +	public void noLogWithoutComponentScanAnnotation() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	public void tearDown() {, +		public InputStream create(InputStream in) throws IOException {, +			return new GZIPInputStream(in);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractFilterRegistrationBeanTests.java, +				Collections.singleton(mockServletRegistration("s4")));, +		bean.addServletRegistrationBeans(mockServletRegistration("s5"));, +				mockServletRegistration("a"));, +				Arrays.asList(mockServletRegistration("b"))));, +	protected final ServletRegistrationBean mockServletRegistration(String name) {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/undertow/FileSessionPersistenceTests.java, +	public void persistAndLoad() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/web/ErrorPageFilterTests.java, +	public void responseIsNotCommittedWhenRequestIsAsync() throws Exception {, +	public void responseIsCommittedWhenRequestIsAsyncAndExceptionIsThrown(), +	public void responseIsCommittedWhenRequestIsAsyncAndStatusIs400Plus(), +	public void responseIsNotCommittedDuringAsyncDispatch() throws Exception {, +	public void responseIsCommittedWhenExceptionIsThrownDuringAsyncDispatch(), +	public void responseIsCommittedWhenStatusIs400PlusDuringAsyncDispatch(), +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/TestCommandIntegrationTests.java, +	public void setUp() throws Exception {, +	public void tearDown() {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/livereload/LiveReloadServerTests.java, +	public void setUp() throws Exception {, +	public void tearDown() throws Exception {]