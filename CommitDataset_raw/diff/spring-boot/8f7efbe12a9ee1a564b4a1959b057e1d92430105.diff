[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java, +			configureConnection(factory);, +		private void configureConnection(JedisConnectionFactory factory) {, +			if (StringUtils.hasText(this.properties.getUrl())) {, +				configureConnectionFromUrl(factory);, +			}, +			else {, +				factory.setHostName(this.properties.getHost());, +				factory.setPort(this.properties.getPort());, +				if (this.properties.getPassword() != null) {, +					factory.setPassword(this.properties.getPassword());, +				}, +			}, +		}, +, +		private void configureConnectionFromUrl(JedisConnectionFactory factory) {, +			String url = this.properties.getUrl();, +			if (url.startsWith("rediss://")) {, +				factory.setUseSsl(true);, +			}, +			try {, +				URI uri = new URI(url);, +				factory.setHostName(uri.getHost());, +				factory.setPort(uri.getPort());, +				if (uri.getUserInfo() != null) {, +					String password = uri.getUserInfo();, +					int index = password.lastIndexOf(":");, +					if (index >= 0) {, +						password = password.substring(index + 1);, +					}, +					factory.setPassword(password);, +				}, +			}, +			catch (URISyntaxException ex) {, +				throw new IllegalArgumentException("Malformed 'spring.redis.url' " + url,, +						ex);, +			}, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java, +			configureConnection(factory);, +		private void configureConnection(JedisConnectionFactory factory) {, +			if (StringUtils.hasText(this.properties.getUrl())) {, +				configureConnectionFromUrl(factory);, +			}, +			else {, +				factory.setHostName(this.properties.getHost());, +				factory.setPort(this.properties.getPort());, +				if (this.properties.getPassword() != null) {, +					factory.setPassword(this.properties.getPassword());, +				}, +			}, +		}, +, +		private void configureConnectionFromUrl(JedisConnectionFactory factory) {, +			String url = this.properties.getUrl();, +			if (url.startsWith("rediss://")) {, +				factory.setUseSsl(true);, +			}, +			try {, +				URI uri = new URI(url);, +				factory.setHostName(uri.getHost());, +				factory.setPort(uri.getPort());, +				if (uri.getUserInfo() != null) {, +					String password = uri.getUserInfo();, +					int index = password.lastIndexOf(":");, +					if (index >= 0) {, +						password = password.substring(index + 1);, +					}, +					factory.setPassword(password);, +				}, +			}, +			catch (URISyntaxException ex) {, +				throw new IllegalArgumentException("Malformed 'spring.redis.url' " + url,, +						ex);, +			}, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfigurationTests.java, + * @author Marco Aust, +	public void testOverrideUrlRedisConfiguration() throws Exception {, +				"spring.redis.port:1000", "spring.redis.ssl:true",]