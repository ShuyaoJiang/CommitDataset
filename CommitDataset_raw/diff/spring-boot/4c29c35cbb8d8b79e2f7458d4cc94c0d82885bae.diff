[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		DefaultKafkaProducerFactory<?, ?> factory = new DefaultKafkaProducerFactory<>(, +		String transactionIdPrefix = this.properties.getProducer(), +				.getTransactionIdPrefix();, +		if (transactionIdPrefix != null) {, +			factory.setTransactionIdPrefix(transactionIdPrefix);, +	public KafkaTransactionManager<?, ?> kafkaTransactionManager(, +			ProducerFactory<?, ?> producerFactory) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		DefaultKafkaProducerFactory<?, ?> factory = new DefaultKafkaProducerFactory<>(, +		String transactionIdPrefix = this.properties.getProducer(), +				.getTransactionIdPrefix();, +		if (transactionIdPrefix != null) {, +			factory.setTransactionIdPrefix(transactionIdPrefix);, +	public KafkaTransactionManager<?, ?> kafkaTransactionManager(, +			ProducerFactory<?, ?> producerFactory) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		 * When non empty, enables transaction support for producer., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		DefaultKafkaProducerFactory<?, ?> factory = new DefaultKafkaProducerFactory<>(, +		String transactionIdPrefix = this.properties.getProducer(), +				.getTransactionIdPrefix();, +		if (transactionIdPrefix != null) {, +			factory.setTransactionIdPrefix(transactionIdPrefix);, +	public KafkaTransactionManager<?, ?> kafkaTransactionManager(, +			ProducerFactory<?, ?> producerFactory) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		 * When non empty, enables transaction support for producer., +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfigurationTests.java, +					assertThat(context.getBeansOfType(KafkaTransactionManager.class)), +					assertThat(context.getBeansOfType(KafkaTransactionManager.class)), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.java, +		DefaultKafkaProducerFactory<?, ?> factory = new DefaultKafkaProducerFactory<>(, +		String transactionIdPrefix = this.properties.getProducer(), +				.getTransactionIdPrefix();, +		if (transactionIdPrefix != null) {, +			factory.setTransactionIdPrefix(transactionIdPrefix);, +	public KafkaTransactionManager<?, ?> kafkaTransactionManager(, +			ProducerFactory<?, ?> producerFactory) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java, +		 * When non empty, enables transaction support for producer., +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/kafka/KafkaAutoConfigurationTests.java, +					assertThat(context.getBeansOfType(KafkaTransactionManager.class)), +					assertThat(context.getBeansOfType(KafkaTransactionManager.class)), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.kafka.producer.transaction-id-prefix= # When non empty, enables transaction support for producer.]