[+++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +* Look for use of `RelaxedPropertyResolver` to pull configuration values explicitly out of the, +  flexible than the `RelaxedPropertyResolver` approach, but does allow some relaxed binding,, +in this way have lower, +priority than any added using the default locations (e.g. `application.properties), system properties, environment variables or the command line., +`RelaxedPropertyResolver`., +If you put a `logback.xml` in the root of your classpath it will be picked up from, +there , +(or `logback-spring.xml` to take advantage of the templating features provided by Boot). Spring Boot provides a default base configuration that you can include if you just, +If you look at that `base.xml` in the spring-boot jar, you will see that it uses, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +* Look for use of `RelaxedPropertyResolver` to pull configuration values explicitly out of the, +  flexible than the `RelaxedPropertyResolver` approach, but does allow some relaxed binding,, +in this way have lower, +priority than any added using the default locations (e.g. `application.properties), system properties, environment variables or the command line., +`RelaxedPropertyResolver`., +If you put a `logback.xml` in the root of your classpath it will be picked up from, +there , +(or `logback-spring.xml` to take advantage of the templating features provided by Boot). Spring Boot provides a default base configuration that you can include if you just, +If you look at that `base.xml` in the spring-boot jar, you will see that it uses, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|The version number of your application as declared in `MANIFEST.MF`. For example `Implementation-Version: 1.0` is printed as `1.0`., +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +* Look for use of `RelaxedPropertyResolver` to pull configuration values explicitly out of the, +  flexible than the `RelaxedPropertyResolver` approach, but does allow some relaxed binding,, +in this way have lower, +priority than any added using the default locations (e.g. `application.properties), system properties, environment variables or the command line., +`RelaxedPropertyResolver`., +If you put a `logback.xml` in the root of your classpath it will be picked up from, +there , +(or `logback-spring.xml` to take advantage of the templating features provided by Boot). Spring Boot provides a default base configuration that you can include if you just, +If you look at that `base.xml` in the spring-boot jar, you will see that it uses, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|The version number of your application as declared in `MANIFEST.MF`. For example `Implementation-Version: 1.0` is printed as `1.0`., +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +		property = context.getEnvironment().getProperty("my.property");, +		assertThat(property, equalTo("fromapplicationproperties"));]