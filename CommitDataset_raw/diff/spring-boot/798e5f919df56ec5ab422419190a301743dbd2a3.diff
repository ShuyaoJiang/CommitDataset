[+++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationContextLoader.java, +	public ApplicationContext loadContext(final MergedContextConfiguration config), +	 * override this method to add custom behavior, +		initializers.add(new PropertySourceLocationsInitializer(mergedConfig, +				.getPropertySourceLocations()));, +	/**, +	 * {@link ApplicationContextInitializer} to setup test property source locations., +	 */, +	private static class PropertySourceLocationsInitializer implements, +			ApplicationContextInitializer<ConfigurableApplicationContext> {, +, +		private final String[] propertySourceLocations;, +, +		public PropertySourceLocationsInitializer(String[] propertySourceLocations) {, +			this.propertySourceLocations = propertySourceLocations;, +		}, +, +		@Override, +		public void initialize(ConfigurableApplicationContext applicationContext) {, +			TestPropertySourceUtils.addPropertiesFilesToEnvironment(applicationContext,, +					this.propertySourceLocations);, +		}, +, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationContextLoader.java, +	public ApplicationContext loadContext(final MergedContextConfiguration config), +	 * override this method to add custom behavior, +		initializers.add(new PropertySourceLocationsInitializer(mergedConfig, +				.getPropertySourceLocations()));, +	/**, +	 * {@link ApplicationContextInitializer} to setup test property source locations., +	 */, +	private static class PropertySourceLocationsInitializer implements, +			ApplicationContextInitializer<ConfigurableApplicationContext> {, +, +		private final String[] propertySourceLocations;, +, +		public PropertySourceLocationsInitializer(String[] propertySourceLocations) {, +			this.propertySourceLocations = propertySourceLocations;, +		}, +, +		@Override, +		public void initialize(ConfigurableApplicationContext applicationContext) {, +			TestPropertySourceUtils.addPropertiesFilesToEnvironment(applicationContext,, +					this.propertySourceLocations);, +		}, +, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/test/SpringApplicationIntegrationTestPropertyLocationTests.java, +import javax.annotation.PostConstruct;, +, +import org.springframework.beans.factory.annotation.Value;, +import org.springframework.boot.test.SpringApplicationIntegrationTestPropertyLocationTests.MoreConfig;, +import org.springframework.context.annotation.Configuration;, +@SpringApplicationConfiguration(classes = { Config.class, MoreConfig.class }), +	@Configuration, +	static class MoreConfig {, +, +		@Value("${value1}"), +		private String value1;, +, +		@Value("${value2}"), +		private String value2;, +, +		@Value("${annotation-referenced}"), +		private String annotationReferenced;, +, +		@PostConstruct, +		void checkValues() {, +			assertThat(this.value1, equalTo("123"));, +			assertThat(this.value2, equalTo("456"));, +			assertThat(this.annotationReferenced, equalTo("fromfile"));, +		}, +, +	}, +]