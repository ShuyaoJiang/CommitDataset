[+++ b/spring-boot-samples/spring-boot-sample-jta-atomikos/src/test/java/sample/atomikos/SampleAtomikosApplicationTests.java, +		String output = this.outputCapture.toString();, +		assertThat(output, containsString(1, "---->"));, +		assertThat(output, containsString(1, "----> josh"));, +		assertThat(output, containsString(2, "Count is 1"));, +		assertThat(output, containsString(1, "Simulated error"));, +	private Matcher<? super String> containsString(final int times, String s) {, +				return "containing " + times + " times";, +				return i == times;, +++ b/spring-boot-samples/spring-boot-sample-jta-atomikos/src/test/java/sample/atomikos/SampleAtomikosApplicationTests.java, +		String output = this.outputCapture.toString();, +		assertThat(output, containsString(1, "---->"));, +		assertThat(output, containsString(1, "----> josh"));, +		assertThat(output, containsString(2, "Count is 1"));, +		assertThat(output, containsString(1, "Simulated error"));, +	private Matcher<? super String> containsString(final int times, String s) {, +				return "containing " + times + " times";, +				return i == times;, +++ b/spring-boot-samples/spring-boot-sample-jta-bitronix/src/test/java/sample/bitronix/SampleBitronixApplicationTests.java, +		String output = this.outputCapture.toString();, +		assertThat(output, containsString(1, "---->"));, +		assertThat(output, containsString(1, "----> josh"));, +		assertThat(output, containsString(2, "Count is 1"));, +		assertThat(output, containsString(1, "Simulated error"));, +	private Matcher<? super String> containsString(final int times, String s) {, +				return "containing " + times + " times";, +				return i == times;]