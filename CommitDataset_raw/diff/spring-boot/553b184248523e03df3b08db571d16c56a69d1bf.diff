[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastProperties.java, +		Assert.isTrue(this.config.exists(), () -> "Hazelcast configuration does not ", +				+ "exist '" + this.config.getDescription() + "'");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastProperties.java, +		Assert.isTrue(this.config.exists(), () -> "Hazelcast configuration does not ", +				+ "exist '" + this.config.getDescription() + "'");, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			Assert.isTrue(nonOptionArguments.size() >= 2, () -> "The name of the ", +					+ "resulting" + this.type + " and at least one source file must be ", +					+ "specified");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastProperties.java, +		Assert.isTrue(this.config.exists(), () -> "Hazelcast configuration does not ", +				+ "exist '" + this.config.getDescription() + "'");, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			Assert.isTrue(nonOptionArguments.size() >= 2, () -> "The name of the ", +					+ "resulting" + this.type + " and at least one source file must be ", +					+ "specified");, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/classloader/ClassLoaderFile.java, +				() -> "Contents must " + (kind == Kind.DELETED ? "" : "not "), +						+ "be null");]