[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.health.CompositeHealthIndicator;, +	private Map<String, DataSource> dataSources;, +	public HealthEndpoint<?> healthEndpoint() {, +			this.healthIndicator = createHealthIndicator();, +	private HealthIndicator<? extends Object> createHealthIndicator() {, +		if (this.dataSources == null || this.dataSources.isEmpty()) {, +			return new VanillaHealthIndicator();, +		}, +, +		if (this.dataSources.size() == 1) {, +			return new SimpleHealthIndicator(this.dataSources.values().iterator().next());, +		}, +, +		CompositeHealthIndicator composite = new CompositeHealthIndicator();, +		for (Map.Entry<String, DataSource> entry : this.dataSources.entrySet()) {, +			composite.addHealthIndicator(entry.getKey(),, +					new SimpleHealthIndicator(entry.getValue()));, +		}, +		return composite;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.health.CompositeHealthIndicator;, +	private Map<String, DataSource> dataSources;, +	public HealthEndpoint<?> healthEndpoint() {, +			this.healthIndicator = createHealthIndicator();, +	private HealthIndicator<? extends Object> createHealthIndicator() {, +		if (this.dataSources == null || this.dataSources.isEmpty()) {, +			return new VanillaHealthIndicator();, +		}, +, +		if (this.dataSources.size() == 1) {, +			return new SimpleHealthIndicator(this.dataSources.values().iterator().next());, +		}, +, +		CompositeHealthIndicator composite = new CompositeHealthIndicator();, +		for (Map.Entry<String, DataSource> entry : this.dataSources.entrySet()) {, +			composite.addHealthIndicator(entry.getKey(),, +					new SimpleHealthIndicator(entry.getValue()));, +		}, +		return composite;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +	/**, +	 * Create a new {@link SimpleHealthIndicator} instance., +	 */, +	public SimpleHealthIndicator() {, +	}, +, +	/**, +	 * Create a new {@link SimpleHealthIndicator} using the specified datasource., +	 * @param dataSource the data source, +	 */, +	public SimpleHealthIndicator(DataSource dataSource) {, +		this.dataSource = dataSource;, +		this.jdbcTemplate = new JdbcTemplate(dataSource);, +	}, +]