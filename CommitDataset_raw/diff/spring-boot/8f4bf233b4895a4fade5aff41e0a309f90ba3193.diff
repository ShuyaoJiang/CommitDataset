[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorAutoConfiguration.java, +import java.time.Duration;, +			Duration responseTimeout = this.properties.getResponseTimeout();, +					responseTimeout == null ? 100 : responseTimeout.toMillis(),, +					this.properties.getIndices());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorAutoConfiguration.java, +import java.time.Duration;, +			Duration responseTimeout = this.properties.getResponseTimeout();, +					responseTimeout == null ? 100 : responseTimeout.toMillis(),, +					this.properties.getIndices());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorProperties.java, +import java.time.Duration;, +	 * Time to wait for a response from the cluster., +	private Duration responseTimeout = Duration.ofMillis(100);, +	public Duration getResponseTimeout() {, +	public void setResponseTimeout(Duration responseTimeout) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorAutoConfiguration.java, +import java.time.Duration;, +			Duration responseTimeout = this.properties.getResponseTimeout();, +					responseTimeout == null ? 100 : responseTimeout.toMillis(),, +					this.properties.getIndices());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorProperties.java, +import java.time.Duration;, +	 * Time to wait for a response from the cluster., +	private Duration responseTimeout = Duration.ofMillis(100);, +	public Duration getResponseTimeout() {, +	public void setResponseTimeout(Duration responseTimeout) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import java.time.Duration;, +import org.springframework.boot.context.properties.bind.BindResult;, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.bind.Binder;, +import org.springframework.core.env.Environment;, +	private static final Bindable<Duration> DURATION = Bindable.of(Duration.class);, +, +	private final Environment environment;, +	 * @param environment the environment, +	EndpointIdTimeToLivePropertyFunction(Environment environment) {, +		this.environment = environment;, +		String name = String.format("management.endpoint.%s.cache.time-to-live",, +		BindResult<Duration> duration = Binder.get(this.environment).bind(name, DURATION);, +		return duration.map(Duration::toMillis).orElse(null);, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorAutoConfiguration.java, +import java.time.Duration;, +			Duration responseTimeout = this.properties.getResponseTimeout();, +					responseTimeout == null ? 100 : responseTimeout.toMillis(),, +					this.properties.getIndices());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorProperties.java, +import java.time.Duration;, +	 * Time to wait for a response from the cluster., +	private Duration responseTimeout = Duration.ofMillis(100);, +	public Duration getResponseTimeout() {, +	public void setResponseTimeout(Duration responseTimeout) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import java.time.Duration;, +import org.springframework.boot.context.properties.bind.BindResult;, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.bind.Binder;, +import org.springframework.core.env.Environment;, +	private static final Bindable<Duration> DURATION = Bindable.of(Duration.class);, +, +	private final Environment environment;, +	 * @param environment the environment, +	EndpointIdTimeToLivePropertyFunction(Environment environment) {, +		this.environment = environment;, +		String name = String.format("management.endpoint.%s.cache.time-to-live",, +		BindResult<Duration> duration = Binder.get(this.environment).bind(name, DURATION);, +		return duration.map(Duration::toMillis).orElse(null);, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/CorsEndpointProperties.java, +import java.time.Duration;, +import java.time.temporal.ChronoUnit;, +import org.springframework.boot.context.properties.bind.convert.DurationUnit;, +	 * How long the response from a pre-flight request can be cached by clients. If a, +	 * duration suffix is not specified, seconds will be used., +	@DurationUnit(ChronoUnit.SECONDS), +	private Duration maxAge = Duration.ofSeconds(1800);, +	public Duration getMaxAge() {, +	public void setMaxAge(Duration maxAge) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorAutoConfiguration.java, +import java.time.Duration;, +			Duration responseTimeout = this.properties.getResponseTimeout();, +					responseTimeout == null ? 100 : responseTimeout.toMillis(),, +					this.properties.getIndices());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorProperties.java, +import java.time.Duration;, +	 * Time to wait for a response from the cluster., +	private Duration responseTimeout = Duration.ofMillis(100);, +	public Duration getResponseTimeout() {, +	public void setResponseTimeout(Duration responseTimeout) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import java.time.Duration;, +import org.springframework.boot.context.properties.bind.BindResult;, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.bind.Binder;, +import org.springframework.core.env.Environment;, +	private static final Bindable<Duration> DURATION = Bindable.of(Duration.class);, +, +	private final Environment environment;]