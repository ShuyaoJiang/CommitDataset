[+++ b/spring-boot-test/src/test/java/org/springframework/boot/test/context/runner/AbstractApplicationContextRunnerTests.java, +		get().withSystemProperties(key + "=value").run((context) -> {, +				.withUserConfiguration(FailingConfig.class).run((context) -> {, +					assertThat(context).hasFailed();, +			get().withSystemProperties(key + "=newValue").run((context) -> {, +			get().withSystemProperties(key + "=").run((context) -> {, +				.run((context) -> {, +					Environment environment = context.getEnvironment();, +				.run((context) -> {, +					Environment environment = context.getEnvironment();, +				.run((context) -> assertThat(context).hasBean("foo"));, +				.run((context) -> assertThat(context).hasBean("foo").hasBean("bar"));, +				.run((context) -> assertThat(context).hasFailed());, +				.run((context) -> {, +						ClassUtils.forName(Gson.class.getName(), context.getClassLoader());, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/context/runner/AbstractApplicationContextRunnerTests.java, +		get().withSystemProperties(key + "=value").run((context) -> {, +				.withUserConfiguration(FailingConfig.class).run((context) -> {, +					assertThat(context).hasFailed();, +			get().withSystemProperties(key + "=newValue").run((context) -> {, +			get().withSystemProperties(key + "=").run((context) -> {, +				.run((context) -> {, +					Environment environment = context.getEnvironment();, +				.run((context) -> {, +					Environment environment = context.getEnvironment();, +				.run((context) -> assertThat(context).hasBean("foo"));, +				.run((context) -> assertThat(context).hasBean("foo").hasBean("bar"));, +				.run((context) -> assertThat(context).hasFailed());, +				.run((context) -> {, +						ClassUtils.forName(Gson.class.getName(), context.getClassLoader());, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/context/runner/WebApplicationContextRunnerTests.java, +		get().run((context) -> assertThat(context.getServletContext())]