[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		return new CacheMetricsRegistrar(this.registry, this.binderProviders);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		return new CacheMetricsRegistrar(this.registry, this.binderProviders);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +					registry.get("cache.gets").tags("name", "cache1"), +					registry.get("cache.gets").tags("name", "cache2"), +					assertThat(registry.find("cache.gets").tags("name", "cache1"), +					assertThat(registry.find("cache.gets").tags("name", "cache2"), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		return new CacheMetricsRegistrar(this.registry, this.binderProviders);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +					registry.get("cache.gets").tags("name", "cache1"), +					registry.get("cache.gets").tags("name", "cache2"), +					assertThat(registry.find("cache.gets").tags("name", "cache1"), +					assertThat(registry.find("cache.gets").tags("name", "cache2"), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMeterBinderProvider.java, +	MeterBinder getMeterBinder(C cache, Iterable<Tag> tags);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		return new CacheMetricsRegistrar(this.registry, this.binderProviders);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +					registry.get("cache.gets").tags("name", "cache1"), +					registry.get("cache.gets").tags("name", "cache2"), +					assertThat(registry.find("cache.gets").tags("name", "cache1"), +					assertThat(registry.find("cache.gets").tags("name", "cache2"), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMeterBinderProvider.java, +	MeterBinder getMeterBinder(C cache, Iterable<Tag> tags);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.java, +	public CacheMetricsRegistrar(MeterRegistry registry,, +						cacheTags)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		return new CacheMetricsRegistrar(this.registry, this.binderProviders);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +					registry.get("cache.gets").tags("name", "cache1"), +					registry.get("cache.gets").tags("name", "cache2"), +					assertThat(registry.find("cache.gets").tags("name", "cache1"), +					assertThat(registry.find("cache.gets").tags("name", "cache2"), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMeterBinderProvider.java, +	MeterBinder getMeterBinder(C cache, Iterable<Tag> tags);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.java, +	public CacheMetricsRegistrar(MeterRegistry registry,, +						cacheTags)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CaffeineCacheMeterBinderProvider.java, +	public MeterBinder getMeterBinder(CaffeineCache cache, Iterable<Tag> tags) {, +		return new CaffeineCacheMetrics(cache.getNativeCache(), cache.getName(), tags);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		return new CacheMetricsRegistrar(this.registry, this.binderProviders);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +					registry.get("cache.gets").tags("name", "cache1"), +					registry.get("cache.gets").tags("name", "cache2"), +					assertThat(registry.find("cache.gets").tags("name", "cache1"), +					assertThat(registry.find("cache.gets").tags("name", "cache2"), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMeterBinderProvider.java, +	MeterBinder getMeterBinder(C cache, Iterable<Tag> tags);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.java, +	public CacheMetricsRegistrar(MeterRegistry registry,, +						cacheTags)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CaffeineCacheMeterBinderProvider.java, +	public MeterBinder getMeterBinder(CaffeineCache cache, Iterable<Tag> tags) {, +		return new CaffeineCacheMetrics(cache.getNativeCache(), cache.getName(), tags);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/EhCache2CacheMeterBinderProvider.java, +	public MeterBinder getMeterBinder(EhCacheCache cache, Iterable<Tag> tags) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		return new CacheMetricsRegistrar(this.registry, this.binderProviders);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +					registry.get("cache.gets").tags("name", "cache1"), +					registry.get("cache.gets").tags("name", "cache2"), +					assertThat(registry.find("cache.gets").tags("name", "cache1"), +					assertThat(registry.find("cache.gets").tags("name", "cache2"), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMeterBinderProvider.java, +	MeterBinder getMeterBinder(C cache, Iterable<Tag> tags);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.java, +	public CacheMetricsRegistrar(MeterRegistry registry,, +						cacheTags)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CaffeineCacheMeterBinderProvider.java, +	public MeterBinder getMeterBinder(CaffeineCache cache, Iterable<Tag> tags) {, +		return new CaffeineCacheMetrics(cache.getNativeCache(), cache.getName(), tags);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/EhCache2CacheMeterBinderProvider.java, +	public MeterBinder getMeterBinder(EhCacheCache cache, Iterable<Tag> tags) {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/HazelcastCacheMeterBinderProvider.java, +	public MeterBinder getMeterBinder(HazelcastCache cache, Iterable<Tag> tags) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfiguration.java, +++ /dev/null]