[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, + * @author Rob Tompkins, +		 * Web resource configuration., +		 */, +		private final WebResource webResource = new WebResource();, +, +		/**, +		public WebResource getWebResource() {, +			return this.webResource;, +		}, +, +		 * Tomcat web resource properties., +		 */, +		public static class WebResource {, +, +			/**, +			 * Whether tomcat WebResource caching is permitted for this web application., +			 */, +			private Boolean useCaching = Boolean.TRUE;, +, +			public Boolean getUseCaching() {, +				return this.useCaching;, +			}, +, +			public void setUseCaching(Boolean useCaching) {, +				this.useCaching = useCaching;, +			}, +, +		}, +, +		/**, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, + * @author Rob Tompkins, +		 * Web resource configuration., +		 */, +		private final WebResource webResource = new WebResource();, +, +		/**, +		public WebResource getWebResource() {, +			return this.webResource;, +		}, +, +		 * Tomcat web resource properties., +		 */, +		public static class WebResource {, +, +			/**, +			 * Whether tomcat WebResource caching is permitted for this web application., +			 */, +			private Boolean useCaching = Boolean.TRUE;, +, +			public Boolean getUseCaching() {, +				return this.useCaching;, +			}, +, +			public void setUseCaching(Boolean useCaching) {, +				this.useCaching = useCaching;, +			}, +, +		}, +, +		/**, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +import org.apache.catalina.WebResourceRoot;, +import org.apache.catalina.webresources.StandardRoot;, + * @author Rob Tompkins, +		ServerProperties.Tomcat.WebResource tomcatWebResourceProperties = tomcatProperties, +				.getWebResource();, +		propertyMapper.from(tomcatWebResourceProperties::getUseCaching).whenFalse(), +				.to((isWebResourceCachingAllowed) -> customizeWebResourceCaching(factory,, +						isWebResourceCachingAllowed));, +	private void customizeWebResourceCaching(ConfigurableTomcatWebServerFactory factory,, +			Boolean useWebResourceCaching) {, +		factory.addContextCustomizers((context) -> {, +			WebResourceRoot webResourceRoot = context.getResources();, +			if (webResourceRoot == null) {, +				webResourceRoot = new StandardRoot(context);, +			}, +			webResourceRoot.setCachingAllowed(useWebResourceCaching);, +			context.setResources(webResourceRoot);, +		});, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, + * @author Rob Tompkins, +		 * Web resource configuration., +		 */, +		private final WebResource webResource = new WebResource();, +, +		/**, +		public WebResource getWebResource() {, +			return this.webResource;, +		}, +, +		 * Tomcat web resource properties., +		 */, +		public static class WebResource {, +, +			/**, +			 * Whether tomcat WebResource caching is permitted for this web application.]