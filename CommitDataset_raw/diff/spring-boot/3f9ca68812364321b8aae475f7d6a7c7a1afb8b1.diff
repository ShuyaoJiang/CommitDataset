[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.java, +		// ServerProperties handles customization, this just checks we only have, +		// a single bean, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.java, +		// ServerProperties handles customization, this just checks we only have, +		// a single bean, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfigurationTests.java, +	private static AbstractEmbeddedServletContainerFactory containerFactory;, +		containerFactory = Mockito.mock(AbstractEmbeddedServletContainerFactory.class);, +				.getBean(AbstractEmbeddedServletContainerFactory.class);, +		assertEquals(3000, containerFactory.getPort());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.java, +		// ServerProperties handles customization, this just checks we only have, +		// a single bean, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfigurationTests.java, +	private static AbstractEmbeddedServletContainerFactory containerFactory;, +		containerFactory = Mockito.mock(AbstractEmbeddedServletContainerFactory.class);, +				.getBean(AbstractEmbeddedServletContainerFactory.class);, +		assertEquals(3000, containerFactory.getPort());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		EmbeddedServletContainerFactory, ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.java, +		// ServerProperties handles customization, this just checks we only have, +		// a single bean, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfigurationTests.java, +	private static AbstractEmbeddedServletContainerFactory containerFactory;, +		containerFactory = Mockito.mock(AbstractEmbeddedServletContainerFactory.class);, +				.getBean(AbstractEmbeddedServletContainerFactory.class);, +		assertEquals(3000, containerFactory.getPort());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		EmbeddedServletContainerFactory, ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainerFactory.java, + * @see EmbeddedServletContainerCustomizer, +public interface ConfigurableEmbeddedServletContainerFactory {, +	 * {@link EmbeddedServletContainerFactory#getEmbeddedServletContainer(ServletContextInitializer...)}, +	 * parameters. This method will replace any previously set or added initializers., +	 * to, +	 * {@link EmbeddedServletContainerFactory#getEmbeddedServletContainer(ServletContextInitializer...)}, +	 * parameters., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.java, +		// ServerProperties handles customization, this just checks we only have, +		// a single bean, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfigurationTests.java, +	private static AbstractEmbeddedServletContainerFactory containerFactory;, +		containerFactory = Mockito.mock(AbstractEmbeddedServletContainerFactory.class);, +				.getBean(AbstractEmbeddedServletContainerFactory.class);, +		assertEquals(3000, containerFactory.getPort());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		EmbeddedServletContainerFactory, ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ConfigurableEmbeddedServletContainerFactory.java, + * @see EmbeddedServletContainerCustomizer, +public interface ConfigurableEmbeddedServletContainerFactory {, +	 * {@link EmbeddedServletContainerFactory#getEmbeddedServletContainer(ServletContextInitializer...)}, +	 * parameters. This method will replace any previously set or added initializers., +	 * to, +	 * {@link EmbeddedServletContainerFactory#getEmbeddedServletContainer(ServletContextInitializer...)}, +	 * parameters., +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();, +		AbstractEmbeddedServletContainerFactory factory = getFactory();]