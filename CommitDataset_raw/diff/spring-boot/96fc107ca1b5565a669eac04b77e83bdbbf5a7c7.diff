[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			Integer order = this.properties.getTemplateResolverOrder();, +			if (order != null) {, +				resolver.setOrder(order);, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			Integer order = this.properties.getTemplateResolverOrder();, +			if (order != null) {, +				resolver.setOrder(order);, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +	 * Order of the template resolver in the chain. By default, the template resolver, +	 * is first in the chain. Order start at 1 and should only be set if you have, +	 * defined additional "TemplateResolver" beans., +	 */, +	private Integer templateResolverOrder;, +, +	/**, +	public Integer getTemplateResolverOrder() {, +		return templateResolverOrder;, +	}, +, +	public void setTemplateResolverOrder(Integer templateResolverOrder) {, +		this.templateResolverOrder = templateResolverOrder;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			Integer order = this.properties.getTemplateResolverOrder();, +			if (order != null) {, +				resolver.setOrder(order);, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +	 * Order of the template resolver in the chain. By default, the template resolver, +	 * is first in the chain. Order start at 1 and should only be set if you have, +	 * defined additional "TemplateResolver" beans., +	 */, +	private Integer templateResolverOrder;, +, +	/**, +	public Integer getTemplateResolverOrder() {, +		return templateResolverOrder;, +	}, +, +	public void setTemplateResolverOrder(Integer templateResolverOrder) {, +		this.templateResolverOrder = templateResolverOrder;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfigurationTests.java, + * @author Stephane Nicoll, +	public void overrideTemplateResolverOrder() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.thymeleaf.templateResolverOrder:25");, +		this.context.register(ThymeleafAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		this.context.getBean(TemplateEngine.class).initialize();, +		ITemplateResolver resolver = this.context.getBean(ITemplateResolver.class);, +		assertEquals(Integer.valueOf(25), resolver.getOrder());, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			Integer order = this.properties.getTemplateResolverOrder();, +			if (order != null) {, +				resolver.setOrder(order);, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +	 * Order of the template resolver in the chain. By default, the template resolver, +	 * is first in the chain. Order start at 1 and should only be set if you have, +	 * defined additional "TemplateResolver" beans., +	 */, +	private Integer templateResolverOrder;, +, +	/**, +	public Integer getTemplateResolverOrder() {, +		return templateResolverOrder;, +	}, +, +	public void setTemplateResolverOrder(Integer templateResolverOrder) {, +		this.templateResolverOrder = templateResolverOrder;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfigurationTests.java, + * @author Stephane Nicoll, +	public void overrideTemplateResolverOrder() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.thymeleaf.templateResolverOrder:25");, +		this.context.register(ThymeleafAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		this.context.getBean(TemplateEngine.class).initialize();, +		ITemplateResolver resolver = this.context.getBean(ITemplateResolver.class);, +		assertEquals(Integer.valueOf(25), resolver.getOrder());, +	}, +, +	@Test, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.thymeleaf.template-resolver-order= #  order of the template resolver in the chain]