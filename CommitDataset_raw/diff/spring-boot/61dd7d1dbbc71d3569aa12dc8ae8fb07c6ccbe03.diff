[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/properties/ManagementServerProperties.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/properties/ManagementServerProperties.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.hibernate</groupId>, +			<artifactId>hibernate-validator</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/properties/ManagementServerProperties.java, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.hibernate</groupId>, +			<artifactId>hibernate-validator</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.web;, +, +import java.io.File;, +import java.net.InetAddress;, +, +import javax.validation.constraints.NotNull;, +, +import org.apache.catalina.Context;, +import org.apache.catalina.connector.Connector;, +import org.apache.catalina.valves.AccessLogValve;, +import org.apache.catalina.valves.RemoteIpValve;, +import org.apache.coyote.AbstractProtocol;, +import org.apache.coyote.ProtocolHandler;, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainerFactory;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizerBeanPostProcessor;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerFactory;, +import org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer;, +import org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import org.springframework.util.SocketUtils;, +import org.springframework.util.StringUtils;, +, +/**, + * {@link ConfigurationProperties properties} for a web server (e.g. port and path, + * settings). Will be used to customize an {@link EmbeddedServletContainerFactory} when an, + * {@link EmbeddedServletContainerCustomizerBeanPostProcessor} is active., + * , + * @author Dave Syer, + */, +@ConfigurationProperties(name = "server", ignoreUnknownFields = false), +public class ServerProperties implements EmbeddedServletContainerCustomizer {, +, +	private Integer port;, +, +	private InetAddress address;, +, +	private Integer sessionTimeout;, +, +	private boolean scan = false;, +, +	@NotNull, +	private String contextPath = "";, +, +	private Tomcat tomcat = new Tomcat();, +, +	public Tomcat getTomcat() {, +		return this.tomcat;, +	}, +, +	public String getContextPath() {, +		return this.contextPath;, +	}, +, +	public void setContextPath(String contextPath) {, +		this.contextPath = contextPath;]