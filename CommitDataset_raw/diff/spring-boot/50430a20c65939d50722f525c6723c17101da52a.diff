[+++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	protected String getResponse(String url, String... headers) throws IOException,, +			URISyntaxException {, +		ClientHttpResponse response = getClientResponse(url, headers);, +			HttpComponentsClientHttpRequestFactory requestFactory, String... headers), +			throws IOException, URISyntaxException {, +		ClientHttpResponse response = getClientResponse(url, requestFactory, headers);, +	protected ClientHttpResponse getClientResponse(String url, String... headers), +			throws IOException, URISyntaxException {, +		}, headers);, +			HttpComponentsClientHttpRequestFactory requestFactory, String... headers), +			throws IOException, URISyntaxException {, +		for (String header : headers) {, +			String[] parts = header.split(":");, +			request.getHeaders().add(parts[0], parts[1]);, +		}, +	protected void assertForwardHeaderIsUsed(EmbeddedServletContainerFactory factory), +			throws IOException, URISyntaxException {, +		this.container = factory.getEmbeddedServletContainer(new ServletRegistrationBean(, +				new ExampleServlet(true), "/hello"));, +		this.container.start();, +		assertThat(getResponse(getLocalUrl("/hello"), "X-Forwarded-For:140.211.11.130"),, +				containsString("remoteaddr=140.211.11.130"));, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	protected String getResponse(String url, String... headers) throws IOException,, +			URISyntaxException {, +		ClientHttpResponse response = getClientResponse(url, headers);, +			HttpComponentsClientHttpRequestFactory requestFactory, String... headers), +			throws IOException, URISyntaxException {, +		ClientHttpResponse response = getClientResponse(url, requestFactory, headers);, +	protected ClientHttpResponse getClientResponse(String url, String... headers), +			throws IOException, URISyntaxException {, +		}, headers);, +			HttpComponentsClientHttpRequestFactory requestFactory, String... headers), +			throws IOException, URISyntaxException {, +		for (String header : headers) {, +			String[] parts = header.split(":");, +			request.getHeaders().add(parts[0], parts[1]);, +		}, +	protected void assertForwardHeaderIsUsed(EmbeddedServletContainerFactory factory), +			throws IOException, URISyntaxException {, +		this.container = factory.getEmbeddedServletContainer(new ServletRegistrationBean(, +				new ExampleServlet(true), "/hello"));, +		this.container.start();, +		assertThat(getResponse(getLocalUrl("/hello"), "X-Forwarded-For:140.211.11.130"),, +				containsString("remoteaddr=140.211.11.130"));, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/ExampleServlet.java, + * Copyright 2012-2015 the original author or authors., +			content += " remoteaddr=" + request.getRemoteAddr();, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	protected String getResponse(String url, String... headers) throws IOException,, +			URISyntaxException {, +		ClientHttpResponse response = getClientResponse(url, headers);, +			HttpComponentsClientHttpRequestFactory requestFactory, String... headers), +			throws IOException, URISyntaxException {, +		ClientHttpResponse response = getClientResponse(url, requestFactory, headers);, +	protected ClientHttpResponse getClientResponse(String url, String... headers), +			throws IOException, URISyntaxException {, +		}, headers);, +			HttpComponentsClientHttpRequestFactory requestFactory, String... headers), +			throws IOException, URISyntaxException {, +		for (String header : headers) {, +			String[] parts = header.split(":");, +			request.getHeaders().add(parts[0], parts[1]);, +		}, +	protected void assertForwardHeaderIsUsed(EmbeddedServletContainerFactory factory), +			throws IOException, URISyntaxException {, +		this.container = factory.getEmbeddedServletContainer(new ServletRegistrationBean(, +				new ExampleServlet(true), "/hello"));, +		this.container.start();, +		assertThat(getResponse(getLocalUrl("/hello"), "X-Forwarded-For:140.211.11.130"),, +				containsString("remoteaddr=140.211.11.130"));, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/ExampleServlet.java, + * Copyright 2012-2015 the original author or authors., +			content += " remoteaddr=" + request.getRemoteAddr();, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java, +import org.apache.catalina.valves.RemoteIpValve;, +	@Test, +	public void useForwardHeaders() throws Exception {, +		TomcatEmbeddedServletContainerFactory factory = getFactory();, +		factory.addContextValves(new RemoteIpValve());, +		assertForwardHeaderIsUsed(factory);, +	}, +]