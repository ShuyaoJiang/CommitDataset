[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +		public Builder properties(Map<String, String> properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +		public Builder properties(Map<String, String> properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +	protected Map<String, String> getVendorProperties() {, +		final Map<String, String> map = this.properties, +		private Map<String, String> map;, +				Map<String, String> map) {, +			String ddlAuto = this.map.get("hibernate.hbm2ddl.auto");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +		public Builder properties(Map<String, String> properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +	protected Map<String, String> getVendorProperties() {, +		final Map<String, String> map = this.properties, +		private Map<String, String> map;, +				Map<String, String> map) {, +			String ddlAuto = this.map.get("hibernate.hbm2ddl.auto");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	protected abstract Map<String, String> getVendorProperties();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +		public Builder properties(Map<String, String> properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +	protected Map<String, String> getVendorProperties() {, +		final Map<String, String> map = this.properties, +		private Map<String, String> map;, +				Map<String, String> map) {, +			String ddlAuto = this.map.get("hibernate.hbm2ddl.auto");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	protected abstract Map<String, String> getVendorProperties();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +	private Map<String, String> properties = new HashMap<String, String>();, +	public Map<String, String> getProperties() {, +	public void setProperties(Map<String, String> properties) {, +	public Map<String, String> getInitialHibernateProperties(DataSource dataSource) {, +	public Map<String, String> getHibernateProperties(DataSource dataSource) {, +		private String getDeferredDdlAuto(Map<String, String> existing,, +				return existing.get("hibernate.hbm2ddl.auto");, +		private Map<String, String> getDeferredAdditionalProperties(, +				Map<String, String> properties, DataSource dataSource) {, +			Map<String, String> deferred = getAdditionalProperties(properties);, +		private Map<String, String> getAdditionalProperties(Map<String, String> existing) {, +			Map<String, String> result = new HashMap<String, String>();, +		private boolean isAlreadyProvided(Map<String, String> existing, String key) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +		public Builder properties(Map<String, String> properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +	protected Map<String, String> getVendorProperties() {, +		final Map<String, String> map = this.properties, +		private Map<String, String> map;, +				Map<String, String> map) {, +			String ddlAuto = this.map.get("hibernate.hbm2ddl.auto");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	protected abstract Map<String, String> getVendorProperties();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +	private Map<String, String> properties = new HashMap<String, String>();, +	public Map<String, String> getProperties() {, +	public void setProperties(Map<String, String> properties) {, +	public Map<String, String> getInitialHibernateProperties(DataSource dataSource) {, +	public Map<String, String> getHibernateProperties(DataSource dataSource) {, +		private String getDeferredDdlAuto(Map<String, String> existing,, +				return existing.get("hibernate.hbm2ddl.auto");, +		private Map<String, String> getDeferredAdditionalProperties(, +				Map<String, String> properties, DataSource dataSource) {, +			Map<String, String> deferred = getAdditionalProperties(properties);, +		private Map<String, String> getAdditionalProperties(Map<String, String> existing) {, +			Map<String, String> result = new HashMap<String, String>();, +		private boolean isAlreadyProvided(Map<String, String> existing, String key) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/AbstractJpaAutoConfigurationTests.java, +				"spring.jpa.properties.a.b:c", "spring.jpa.properties.c:d");, +		assertThat(map.get("a.b"), equalTo((Object) "c"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +		public Builder properties(Map<String, String> properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +	protected Map<String, String> getVendorProperties() {, +		final Map<String, String> map = this.properties, +		private Map<String, String> map;, +				Map<String, String> map) {, +			String ddlAuto = this.map.get("hibernate.hbm2ddl.auto");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	protected abstract Map<String, String> getVendorProperties();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +	private Map<String, String> properties = new HashMap<String, String>();, +	public Map<String, String> getProperties() {, +	public void setProperties(Map<String, String> properties) {, +	public Map<String, String> getInitialHibernateProperties(DataSource dataSource) {, +	public Map<String, String> getHibernateProperties(DataSource dataSource) {, +		private String getDeferredDdlAuto(Map<String, String> existing,, +				return existing.get("hibernate.hbm2ddl.auto");, +		private Map<String, String> getDeferredAdditionalProperties(, +				Map<String, String> properties, DataSource dataSource) {, +			Map<String, String> deferred = getAdditionalProperties(properties);, +		private Map<String, String> getAdditionalProperties(Map<String, String> existing) {, +			Map<String, String> result = new HashMap<String, String>();, +		private boolean isAlreadyProvided(Map<String, String> existing, String key) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/AbstractJpaAutoConfigurationTests.java, +				"spring.jpa.properties.a.b:c", "spring.jpa.properties.c:d");, +		assertThat(map.get("a.b"), equalTo((Object) "c"));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/CustomHibernateJpaAutoConfigurationTests.java, +		String actual = bean.getHibernateProperties(dataSource).get(]