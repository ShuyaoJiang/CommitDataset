[+++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +		new SpringApplicationBuilder(Parent.class).child(, +				SampleParentContextApplication.class).run(args);, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +		new SpringApplicationBuilder(Parent.class).child(, +				SampleParentContextApplication.class).run(args);, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/test/java/sample/parent/consumer/SampleIntegrationApplicationTests.java, +, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +		new SpringApplicationBuilder(Parent.class).child(, +				SampleParentContextApplication.class).run(args);, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/test/java/sample/parent/consumer/SampleIntegrationApplicationTests.java, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/VersionManagedDependencies.java, + * Utility to provide access to {@link ManagedDependencies} with support for version file, + * overrides., +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +		new SpringApplicationBuilder(Parent.class).child(, +				SampleParentContextApplication.class).run(args);, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/test/java/sample/parent/consumer/SampleIntegrationApplicationTests.java, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/VersionManagedDependencies.java, + * Utility to provide access to {@link ManagedDependencies} with support for version file, + * overrides., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/ProjectLibraries.java, +				callback.library(new Library(artifact.getFile(), scope,, +						isUnpackRequired(artifact)));, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +		new SpringApplicationBuilder(Parent.class).child(, +				SampleParentContextApplication.class).run(args);, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/test/java/sample/parent/consumer/SampleIntegrationApplicationTests.java, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/VersionManagedDependencies.java, + * Utility to provide access to {@link ManagedDependencies} with support for version file, + * overrides., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/ProjectLibraries.java, +				callback.library(new Library(artifact.getFile(), scope,, +						isUnpackRequired(artifact)));, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/RepackagePluginFeatures.java, +		task.dependsOn(project.getConfigurations(), +				.getByName(Dependency.ARCHIVES_CONFIGURATION).getAllArtifacts(), +				.getBuildDependencies());, +		project.getExtensions().getExtraProperties(), +				.set("BootRepackage", RepackageTask.class);, +					@Override, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +		new SpringApplicationBuilder(Parent.class).child(, +				SampleParentContextApplication.class).run(args);, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/test/java/sample/parent/consumer/SampleIntegrationApplicationTests.java, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/VersionManagedDependencies.java, + * Utility to provide access to {@link ManagedDependencies} with support for version file, + * overrides., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/ProjectLibraries.java, +				callback.library(new Library(artifact.getFile(), scope,, +						isUnpackRequired(artifact)));, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/RepackagePluginFeatures.java, +		task.dependsOn(project.getConfigurations(), +				.getByName(Dependency.ARCHIVES_CONFIGURATION).getAllArtifacts(), +				.getBuildDependencies());, +		project.getExtensions().getExtraProperties(), +				.set("BootRepackage", RepackageTask.class);, +					@Override, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/RepackageTask.java, +		}, +		else if (extension.getCustomConfiguration() != null) {, +			}, +			else if (this.extension.getMainClass() != null) {, +			}, +			else if (getProject().getTasks().getByName("run").hasProperty("main")) {, +				mainClass = (String) getProject().getTasks().getByName("run"), +						.property("main");, +			}, +			finally {, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/main/java/sample/parent/SampleParentContextApplication.java, +		new SpringApplicationBuilder(Parent.class).child(, +				SampleParentContextApplication.class).run(args);, +++ b/spring-boot-samples/spring-boot-sample-parent-context/src/test/java/sample/parent/consumer/SampleIntegrationApplicationTests.java, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/VersionManagedDependencies.java, + * Utility to provide access to {@link ManagedDependencies} with support for version file, + * overrides., +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/ProjectLibraries.java, +				callback.library(new Library(artifact.getFile(), scope,, +						isUnpackRequired(artifact)));, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/RepackagePluginFeatures.java, +		task.dependsOn(project.getConfigurations(), +				.getByName(Dependency.ARCHIVES_CONFIGURATION).getAllArtifacts(), +				.getBuildDependencies());, +		project.getExtensions().getExtraProperties(), +				.set("BootRepackage", RepackageTask.class);, +					@Override, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/RepackageTask.java, +		}, +		else if (extension.getCustomConfiguration() != null) {, +			}, +			else if (this.extension.getMainClass() != null) {, +			}, +			else if (getProject().getTasks().getByName("run").hasProperty("main")) {, +				mainClass = (String) getProject().getTasks().getByName("run")]