[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, +		loggers.add("web",, +				"org.springframework.boot.web.servlet.ServletContextInitializerBeans");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, +		loggers.add("web",, +				"org.springframework.boot.web.servlet.ServletContextInitializerBeans");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, + * @author Brian Clozel, +	@Override, +	public String toString() {, +		StringBuilder builder = new StringBuilder(getOrDeduceName(this));, +		if (this.servletNames.isEmpty() && this.urlPatterns.isEmpty()) {, +			builder.append(" urls=").append(Arrays.toString(DEFAULT_URL_MAPPINGS));, +		}, +		else {, +			if (!this.servletNames.isEmpty()) {, +				builder.append(" servlets=").append(this.servletNames);, +			}, +			if (!this.urlPatterns.isEmpty()) {, +				builder.append(" urls=").append(this.urlPatterns);, +			}, +		}, +		return builder.toString();, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, +		loggers.add("web",, +				"org.springframework.boot.web.servlet.ServletContextInitializerBeans");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, + * @author Brian Clozel, +	@Override, +	public String toString() {, +		StringBuilder builder = new StringBuilder(getOrDeduceName(this));, +		if (this.servletNames.isEmpty() && this.urlPatterns.isEmpty()) {, +			builder.append(" urls=").append(Arrays.toString(DEFAULT_URL_MAPPINGS));, +		}, +		else {, +			if (!this.servletNames.isEmpty()) {, +				builder.append(" servlets=").append(this.servletNames);, +			}, +			if (!this.urlPatterns.isEmpty()) {, +				builder.append(" urls=").append(this.urlPatterns);, +			}, +		}, +		return builder.toString();, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletContextInitializerBeans.java, + * @author Brian Clozel, +		logBeansInformation(this.initializers);, +		if (ServletContextInitializerBeans.logger.isTraceEnabled()) {, +			ServletContextInitializerBeans.logger.trace("Added existing ", +				if (ServletContextInitializerBeans.logger.isTraceEnabled()) {, +					ServletContextInitializerBeans.logger.trace(, +	private void logBeansInformation(, +			MultiValueMap<Class<?>, ServletContextInitializer> initializers) {, +		if (ServletContextInitializerBeans.logger.isDebugEnabled()) {, +			List<ServletContextInitializer> filterRegistrations = new ArrayList<>();, +			filterRegistrations.addAll(initializers, +					.getOrDefault(FilterRegistrationBean.class, Collections.emptyList()));, +			filterRegistrations.addAll(, +					initializers.getOrDefault(Filter.class, Collections.emptyList()));, +			String filtersInfo = filterRegistrations.stream(), +					.map(FilterRegistrationBean.class::cast), +					.map(FilterRegistrationBean::toString), +					.collect(Collectors.joining(", "));, +			ServletContextInitializerBeans.logger, +					.debug("Mapping filters: " + filtersInfo);, +, +			List<ServletContextInitializer> servletRegistrations = new ArrayList<>();, +			servletRegistrations.addAll(initializers.getOrDefault(, +					ServletRegistrationBean.class, Collections.emptyList()));, +			servletRegistrations.addAll(, +					initializers.getOrDefault(Servlet.class, Collections.emptyList()));, +			String servletsInfo = servletRegistrations.stream(), +					.map(ServletRegistrationBean.class::cast), +					.map((servlet) -> servlet.getServletName() + " ", +							+ servlet.getUrlMappings()), +					.collect(Collectors.joining(", "));, +			ServletContextInitializerBeans.logger, +					.debug("Mapping servlets: " + servletsInfo);, +		}, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java, +		loggers.add("web",, +				"org.springframework.boot.web.servlet.ServletContextInitializerBeans");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java, + * @author Brian Clozel, +	@Override, +	public String toString() {, +		StringBuilder builder = new StringBuilder(getOrDeduceName(this));, +		if (this.servletNames.isEmpty() && this.urlPatterns.isEmpty()) {, +			builder.append(" urls=").append(Arrays.toString(DEFAULT_URL_MAPPINGS));, +		}, +		else {, +			if (!this.servletNames.isEmpty()) {, +				builder.append(" servlets=").append(this.servletNames);, +			}, +			if (!this.urlPatterns.isEmpty()) {]