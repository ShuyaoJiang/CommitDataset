[+++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.glassfish.jersey.core</groupId>, +			<artifactId>jersey-server</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.glassfish.jersey.containers</groupId>, +			<artifactId>jersey-container-servlet-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.glassfish.jersey.containers</groupId>, +			<artifactId>jersey-container-servlet</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.glassfish.jersey.ext</groupId>, +			<artifactId>jersey-spring3</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/pom.xml, +			<groupId>org.glassfish.jersey.core</groupId>, +			<artifactId>jersey-server</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.glassfish.jersey.containers</groupId>, +			<artifactId>jersey-container-servlet-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.glassfish.jersey.containers</groupId>, +			<artifactId>jersey-container-servlet</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.glassfish.jersey.ext</groupId>, +			<artifactId>jersey-spring3</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jersey;, +, +import javax.annotation.PostConstruct;, +import javax.servlet.ServletContext;, +import javax.servlet.ServletException;, +import javax.servlet.ServletRegistration;, +import javax.ws.rs.ApplicationPath;, +, +import org.glassfish.jersey.server.ResourceConfig;, +import org.glassfish.jersey.server.spring.SpringComponentProvider;, +import org.glassfish.jersey.servlet.ServletContainer;, +import org.glassfish.jersey.servlet.ServletProperties;, +import org.springframework.beans.factory.ListableBeanFactory;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.AutoConfigureBefore;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration;, +import org.springframework.boot.context.embedded.ServletRegistrationBean;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.core.annotation.Order;, +import org.springframework.web.WebApplicationInitializer;, +import org.springframework.web.filter.RequestContextFilter;, +, +/**, + * @author Dave Syer, + * , + */, +@Configuration, +@ConditionalOnClass({ SpringComponentProvider.class, ServletRegistration.class }), +@ConditionalOnBean(ResourceConfig.class), +@ConditionalOnWebApplication, +@Order(Ordered.HIGHEST_PRECEDENCE), +@AutoConfigureBefore(DispatcherServletAutoConfiguration.class), +public class JerseyAutoConfiguration implements WebApplicationInitializer {, +]