[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, + * {@link ApplicationContextInitializer} that writes the {@link AutoConfigurationReport}, + * to the log. Reports are logged at the {@link LogLevel#DEBUG DEBUG} level unless there, + * was a problem, in which case they are the {@link LogLevel#INFO INFO} level is used., +		ApplicationContextInitializer<ConfigurableApplicationContext> {, +		applicationContext.addApplicationListener(new AutoConfigurationReportListener());, +	protected void onApplicationEvent(ApplicationEvent event) {, +			if (((ApplicationContextEvent) event).getApplicationContext() == AutoConfigurationReportLoggingInitializer.this.applicationContext) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == AutoConfigurationReportLoggingInitializer.this.applicationContext) {, +	private class AutoConfigurationReportListener implements SmartApplicationListener {, +, +		@Override, +		public int getOrder() {, +			return Ordered.LOWEST_PRECEDENCE;, +		}, +, +		@Override, +		public boolean supportsEventType(Class<? extends ApplicationEvent> type) {, +			return ContextRefreshedEvent.class.isAssignableFrom(type), +					|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		}, +, +		@Override, +		public boolean supportsSourceType(Class<?> sourceType) {, +			return true;, +		}, +, +		@Override, +		public void onApplicationEvent(ApplicationEvent event) {, +			AutoConfigurationReportLoggingInitializer.this.onApplicationEvent(event);, +		}, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, + * {@link ApplicationContextInitializer} that writes the {@link AutoConfigurationReport}, + * to the log. Reports are logged at the {@link LogLevel#DEBUG DEBUG} level unless there, + * was a problem, in which case they are the {@link LogLevel#INFO INFO} level is used., +		ApplicationContextInitializer<ConfigurableApplicationContext> {, +		applicationContext.addApplicationListener(new AutoConfigurationReportListener());, +	protected void onApplicationEvent(ApplicationEvent event) {, +			if (((ApplicationContextEvent) event).getApplicationContext() == AutoConfigurationReportLoggingInitializer.this.applicationContext) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == AutoConfigurationReportLoggingInitializer.this.applicationContext) {, +	private class AutoConfigurationReportListener implements SmartApplicationListener {, +, +		@Override, +		public int getOrder() {, +			return Ordered.LOWEST_PRECEDENCE;, +		}, +, +		@Override, +		public boolean supportsEventType(Class<? extends ApplicationEvent> type) {, +			return ContextRefreshedEvent.class.isAssignableFrom(type), +					|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		}, +, +		@Override, +		public boolean supportsSourceType(Class<?> sourceType) {, +			return true;, +		}, +, +		@Override, +		public void onApplicationEvent(ApplicationEvent event) {, +			AutoConfigurationReportLoggingInitializer.this.onApplicationEvent(event);, +		}, +	}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfigurationTests.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, + * {@link ApplicationContextInitializer} that writes the {@link AutoConfigurationReport}, + * to the log. Reports are logged at the {@link LogLevel#DEBUG DEBUG} level unless there, + * was a problem, in which case they are the {@link LogLevel#INFO INFO} level is used., +		ApplicationContextInitializer<ConfigurableApplicationContext> {, +		applicationContext.addApplicationListener(new AutoConfigurationReportListener());, +	protected void onApplicationEvent(ApplicationEvent event) {, +			if (((ApplicationContextEvent) event).getApplicationContext() == AutoConfigurationReportLoggingInitializer.this.applicationContext) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == AutoConfigurationReportLoggingInitializer.this.applicationContext) {, +	private class AutoConfigurationReportListener implements SmartApplicationListener {, +, +		@Override, +		public int getOrder() {, +			return Ordered.LOWEST_PRECEDENCE;, +		}, +, +		@Override, +		public boolean supportsEventType(Class<? extends ApplicationEvent> type) {, +			return ContextRefreshedEvent.class.isAssignableFrom(type), +					|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		}, +, +		@Override, +		public boolean supportsSourceType(Class<?> sourceType) {, +			return true;, +		}, +, +		@Override, +		public void onApplicationEvent(ApplicationEvent event) {, +			AutoConfigurationReportLoggingInitializer.this.onApplicationEvent(event);, +		}, +	}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfigurationTests.java, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	private List<ApplicationContextInitializer<?>> initializers;]