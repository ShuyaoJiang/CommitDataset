[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/DataSourceInitializedPublisher.java, +		Map<String, Object> hibernate = this.properties, +				.getHibernateProperties(new HibernateSettings().ddlAuto(defaultDdlAuto));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/DataSourceInitializedPublisher.java, +		Map<String, Object> hibernate = this.properties, +				.getHibernateProperties(new HibernateSettings().ddlAuto(defaultDdlAuto));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.hibernate.boot.model.naming.ImplicitNamingStrategy;, +import org.hibernate.boot.model.naming.PhysicalNamingStrategy;, +	private final PhysicalNamingStrategy physicalNamingStrategy;, +, +	private final ImplicitNamingStrategy implicitNamingStrategy;, +, +			ObjectProvider<List<SchemaManagementProvider>> providers,, +			ObjectProvider<PhysicalNamingStrategy> physicalNamingStrategy,, +			ObjectProvider<ImplicitNamingStrategy> implicitNamingStrategy) {, +		this.physicalNamingStrategy = physicalNamingStrategy.getIfAvailable();, +		this.implicitNamingStrategy = implicitNamingStrategy.getIfAvailable();, +		vendorProperties.putAll(getProperties(), +				.getHibernateProperties(new HibernateSettings().ddlAuto(defaultDdlMode), +						.implicitNamingStrategy(this.implicitNamingStrategy), +						.physicalNamingStrategy(this.physicalNamingStrategy)));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/DataSourceInitializedPublisher.java, +		Map<String, Object> hibernate = this.properties, +				.getHibernateProperties(new HibernateSettings().ddlAuto(defaultDdlAuto));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.hibernate.boot.model.naming.ImplicitNamingStrategy;, +import org.hibernate.boot.model.naming.PhysicalNamingStrategy;, +	private final PhysicalNamingStrategy physicalNamingStrategy;, +, +	private final ImplicitNamingStrategy implicitNamingStrategy;, +, +			ObjectProvider<List<SchemaManagementProvider>> providers,, +			ObjectProvider<PhysicalNamingStrategy> physicalNamingStrategy,, +			ObjectProvider<ImplicitNamingStrategy> implicitNamingStrategy) {, +		this.physicalNamingStrategy = physicalNamingStrategy.getIfAvailable();, +		this.implicitNamingStrategy = implicitNamingStrategy.getIfAvailable();, +		vendorProperties.putAll(getProperties(), +				.getHibernateProperties(new HibernateSettings().ddlAuto(defaultDdlMode), +						.implicitNamingStrategy(this.implicitNamingStrategy), +						.physicalNamingStrategy(this.physicalNamingStrategy)));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateSettings.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.orm.jpa;, +, +import org.hibernate.boot.model.naming.ImplicitNamingStrategy;, +import org.hibernate.boot.model.naming.PhysicalNamingStrategy;, +, +/**, + * Settings to apply when configuring Hibernate., + *, + * @author Andy Wilkinson, + * @since 2.0.0, + */, +public class HibernateSettings {, +, +	private String ddlAuto;, +, +	private ImplicitNamingStrategy implicitNamingStrategy;, +, +	private PhysicalNamingStrategy physicalNamingStrategy;, +, +	public HibernateSettings ddlAuto(String ddlAuto) {, +		this.ddlAuto = ddlAuto;, +		return this;, +	}, +, +	public String getDdlAuto() {, +		return this.ddlAuto;, +	}, +, +	public HibernateSettings implicitNamingStrategy(, +			ImplicitNamingStrategy implicitNamingStrategy) {, +		this.implicitNamingStrategy = implicitNamingStrategy;, +		return this;, +	}, +, +	public ImplicitNamingStrategy getImplicitNamingStrategy() {, +		return this.implicitNamingStrategy;, +	}, +, +	public HibernateSettings physicalNamingStrategy(, +			PhysicalNamingStrategy physicalNamingStrategy) {, +		this.physicalNamingStrategy = physicalNamingStrategy;, +		return this;]