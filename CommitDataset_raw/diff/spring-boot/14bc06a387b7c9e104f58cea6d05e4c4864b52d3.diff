[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/ExecutableArchiveLauncher.java, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/ExecutableArchiveLauncher.java, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/Launcher.java, +import java.io.File;, +import java.net.URI;, +import java.security.CodeSource;, +import java.security.ProtectionDomain;, +import org.springframework.boot.loader.archive.ExplodedArchive;, +import org.springframework.boot.loader.archive.JarFileArchive;, +, +	protected final Archive createArchive() throws Exception {, +		ProtectionDomain protectionDomain = getClass().getProtectionDomain();, +		CodeSource codeSource = protectionDomain.getCodeSource();, +		URI location = (codeSource == null ? null : codeSource.getLocation().toURI());, +		String path = (location == null ? null : location.getPath());, +		if (path == null) {, +			throw new IllegalStateException("Unable to determine code source archive");, +		}, +		File root = new File(path);, +		if (!root.exists()) {, +			throw new IllegalStateException(, +					"Unable to determine code source archive from " + root);, +		}, +		return (root.isDirectory() ? new ExplodedArchive(root) : new JarFileArchive(root));, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/ExecutableArchiveLauncher.java, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/Launcher.java, +import java.io.File;, +import java.net.URI;, +import java.security.CodeSource;, +import java.security.ProtectionDomain;, +import org.springframework.boot.loader.archive.ExplodedArchive;, +import org.springframework.boot.loader.archive.JarFileArchive;, +, +	protected final Archive createArchive() throws Exception {, +		ProtectionDomain protectionDomain = getClass().getProtectionDomain();, +		CodeSource codeSource = protectionDomain.getCodeSource();, +		URI location = (codeSource == null ? null : codeSource.getLocation().toURI());, +		String path = (location == null ? null : location.getPath());, +		if (path == null) {, +			throw new IllegalStateException("Unable to determine code source archive");, +		}, +		File root = new File(path);, +		if (!root.exists()) {, +			throw new IllegalStateException(, +					"Unable to determine code source archive from " + root);, +		}, +		return (root.isDirectory() ? new ExplodedArchive(root) : new JarFileArchive(root));, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java]