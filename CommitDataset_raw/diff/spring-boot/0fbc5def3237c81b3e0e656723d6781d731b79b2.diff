[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +		source.setBase(this.properties.getBase());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +		source.setBase(this.properties.getBase());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfigurationTests.java, +	public void testQueryEmbeddedLdapWithBase() throws LDAPException {, +		TestPropertyValues.of("spring.ldap.embedded.base-dn:dc=spring,dc=org",, +				"spring.ldap.base:dc=spring,dc=org"), +				.applyTo(this.context);, +		this.context.register(EmbeddedLdapAutoConfiguration.class,, +				LdapAutoConfiguration.class, LdapDataAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertThat(this.context.getBeanNamesForType(LdapTemplate.class).length), +				.isEqualTo(1);, +		LdapTemplate ldapTemplate = this.context.getBean(LdapTemplate.class);, +		assertThat(ldapTemplate.list("ou=company1,c=Sweden")).hasSize(4);, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +		source.setBase(this.properties.getBase());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfigurationTests.java, +	public void testQueryEmbeddedLdapWithBase() throws LDAPException {, +		TestPropertyValues.of("spring.ldap.embedded.base-dn:dc=spring,dc=org",, +				"spring.ldap.base:dc=spring,dc=org"), +				.applyTo(this.context);, +		this.context.register(EmbeddedLdapAutoConfiguration.class,, +				LdapAutoConfiguration.class, LdapDataAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertThat(this.context.getBeanNamesForType(LdapTemplate.class).length), +				.isEqualTo(1);, +		LdapTemplate ldapTemplate = this.context.getBean(LdapTemplate.class);, +		assertThat(ldapTemplate.list("ou=company1,c=Sweden")).hasSize(4);, +	}, +, +	@Test, +++ b/spring-boot-dependencies/pom.xml, +		<spring-kafka.version>2.0.0.BUILD-SNAPSHOT</spring-kafka.version>]