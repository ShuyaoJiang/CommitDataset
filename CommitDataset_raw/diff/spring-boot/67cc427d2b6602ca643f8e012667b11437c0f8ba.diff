[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainer.java, +, +		public int getPort() {, +			return 0;, +		}, +	/**, +	 * @return the port this server is listening on (or zero if none), +	 */, +	int getPort();, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainer.java, +, +		public int getPort() {, +			return 0;, +		}, +	/**, +	 * @return the port this server is listening on (or zero if none), +	 */, +	int getPort();, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +	@Override, +	public int getPort() {, +		Connector[] connectors = this.server.getConnectors();, +		for (Connector connector : connectors) {, +			// Probably only one..., +			return connector.getLocalPort();, +		}, +		return 0;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainer.java, +, +		public int getPort() {, +			return 0;, +		}, +	/**, +	 * @return the port this server is listening on (or zero if none), +	 */, +	int getPort();, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +	@Override, +	public int getPort() {, +		Connector[] connectors = this.server.getConnectors();, +		for (Connector connector : connectors) {, +			// Probably only one..., +			return connector.getLocalPort();, +		}, +		return 0;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +			throw new EmbeddedServletContainerException("Unable to stop embedded Tomcat",, +					ex);, +	@Override, +	public int getPort() {, +		Connector connector = this.tomcat.getConnector();, +		if (connector != null) {, +			return connector.getLocalPort();, +		}, +		return 0;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedServletContainer.java, +, +		public int getPort() {, +			return 0;, +		}, +	/**, +	 * @return the port this server is listening on (or zero if none), +	 */, +	int getPort();, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +	@Override, +	public int getPort() {, +		Connector[] connectors = this.server.getConnectors();, +		for (Connector connector : connectors) {, +			// Probably only one..., +			return connector.getLocalPort();, +		}, +		return 0;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +			throw new EmbeddedServletContainerException("Unable to stop embedded Tomcat",, +					ex);, +	@Override, +	public int getPort() {, +		Connector connector = this.tomcat.getConnector();, +		if (connector != null) {, +			return connector.getLocalPort();, +		}, +		return 0;, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +import static org.junit.Assert.assertEquals;, +		assertEquals(8081, this.container.getPort());]