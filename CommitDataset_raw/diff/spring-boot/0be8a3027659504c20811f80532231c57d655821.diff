[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +import java.util.Collections;, +	 * @see #getEndpoints(Class), +		return getEndpoints(MvcEndpoint.class);, +	}, +, +	/**, +	 * Return the endpoints of the specified type., +	 * @param <E> the endpoint type, +	 * @param type the endpoint type, +	 * @return the endpoints, +	 * @see #getEndpoints(), +	 * @since 1.5.0, +	 */, +	@SuppressWarnings("unchecked"), +	public <E extends MvcEndpoint> Set<E> getEndpoints(Class<E> type) {, +		Set<E> result = new HashSet<E>(this.endpoints.size());, +		for (MvcEndpoint candidate : this.endpoints) {, +			if (type.isInstance(candidate)) {, +				result.add((E) candidate);, +			}, +		}, +		return Collections.unmodifiableSet(result);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +import java.util.Collections;, +	 * @see #getEndpoints(Class), +		return getEndpoints(MvcEndpoint.class);, +	}, +, +	/**, +	 * Return the endpoints of the specified type., +	 * @param <E> the endpoint type, +	 * @param type the endpoint type, +	 * @return the endpoints, +	 * @see #getEndpoints(), +	 * @since 1.5.0, +	 */, +	@SuppressWarnings("unchecked"), +	public <E extends MvcEndpoint> Set<E> getEndpoints(Class<E> type) {, +		Set<E> result = new HashSet<E>(this.endpoints.size());, +		for (MvcEndpoint candidate : this.endpoints) {, +			if (type.isInstance(candidate)) {, +				result.add((E) candidate);, +			}, +		}, +		return Collections.unmodifiableSet(result);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMappingTests.java, +	@Test, +	public void getEndpointsForSpecifiedType() throws Exception {, +		TestMvcEndpoint endpoint = new TestMvcEndpoint(new TestEndpoint("a"));, +		TestActionEndpoint other = new TestActionEndpoint(new TestEndpoint("b"));, +		EndpointHandlerMapping mapping = new EndpointHandlerMapping(, +				Arrays.asList(endpoint, other));, +		assertThat(mapping.getEndpoints(TestMvcEndpoint.class)).containsExactly(endpoint);, +	}, +]