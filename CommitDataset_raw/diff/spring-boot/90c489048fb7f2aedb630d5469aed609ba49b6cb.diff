[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import java.util.stream.Collectors;, +, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer;, + * @author Raheela Aslam, +		public TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory(, +				ObjectProvider<TomcatConnectorCustomizer> connectorCustomizers,, +				ObjectProvider<TomcatContextCustomizer> contextCustomizers) {, +			TomcatReactiveWebServerFactory factory = new TomcatReactiveWebServerFactory();, +			factory.getTomcatConnectorCustomizers().addAll(, +					connectorCustomizers.orderedStream().collect(Collectors.toList()));, +			factory.getTomcatContextCustomizers().addAll(, +					contextCustomizers.orderedStream().collect(Collectors.toList()));, +			return factory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import java.util.stream.Collectors;, +, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer;, + * @author Raheela Aslam, +		public TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory(, +				ObjectProvider<TomcatConnectorCustomizer> connectorCustomizers,, +				ObjectProvider<TomcatContextCustomizer> contextCustomizers) {, +			TomcatReactiveWebServerFactory factory = new TomcatReactiveWebServerFactory();, +			factory.getTomcatConnectorCustomizers().addAll(, +					connectorCustomizers.orderedStream().collect(Collectors.toList()));, +			factory.getTomcatContextCustomizers().addAll(, +					contextCustomizers.orderedStream().collect(Collectors.toList()));, +			return factory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration.java, +import java.util.stream.Collectors;, +, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer;, + * @author Raheela Asalm, +		public TomcatServletWebServerFactory tomcatServletWebServerFactory(, +				ObjectProvider<TomcatConnectorCustomizer> connectorCustomizers,, +				ObjectProvider<TomcatContextCustomizer> contextCustomizers) {, +			TomcatServletWebServerFactory factory = new TomcatServletWebServerFactory();, +			factory.getTomcatConnectorCustomizers().addAll(, +					connectorCustomizers.orderedStream().collect(Collectors.toList()));, +			factory.getTomcatContextCustomizers().addAll(, +					contextCustomizers.orderedStream().collect(Collectors.toList()));, +			return factory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration.java, +import java.util.stream.Collectors;, +, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer;, + * @author Raheela Aslam, +		public TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory(, +				ObjectProvider<TomcatConnectorCustomizer> connectorCustomizers,, +				ObjectProvider<TomcatContextCustomizer> contextCustomizers) {, +			TomcatReactiveWebServerFactory factory = new TomcatReactiveWebServerFactory();, +			factory.getTomcatConnectorCustomizers().addAll(, +					connectorCustomizers.orderedStream().collect(Collectors.toList()));, +			factory.getTomcatContextCustomizers().addAll(, +					contextCustomizers.orderedStream().collect(Collectors.toList()));, +			return factory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration.java, +import java.util.stream.Collectors;, +, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer;, + * @author Raheela Asalm, +		public TomcatServletWebServerFactory tomcatServletWebServerFactory(, +				ObjectProvider<TomcatConnectorCustomizer> connectorCustomizers,, +				ObjectProvider<TomcatContextCustomizer> contextCustomizers) {, +			TomcatServletWebServerFactory factory = new TomcatServletWebServerFactory();, +			factory.getTomcatConnectorCustomizers().addAll(, +					connectorCustomizers.orderedStream().collect(Collectors.toList()));, +			factory.getTomcatContextCustomizers().addAll(, +					contextCustomizers.orderedStream().collect(Collectors.toList()));, +			return factory;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfigurationTests.java, +import org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer;, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebApplicationContext;, + * @author Raheela Aslam, +	@Test, +	public void tomcatConnectorCustomizerBeanIsAddedToFactory() {, +		ReactiveWebApplicationContextRunner runner = new ReactiveWebApplicationContextRunner(, +				AnnotationConfigReactiveWebApplicationContext::new), +						.withConfiguration(AutoConfigurations, +								.of(ReactiveWebServerFactoryAutoConfiguration.class)), +						.withUserConfiguration(, +								TomcatConnectorCustomizerConfiguration.class);, +		runner.run((context) -> {, +			TomcatReactiveWebServerFactory factory = context, +					.getBean(TomcatReactiveWebServerFactory.class);, +			assertThat(factory.getTomcatConnectorCustomizers()).hasSize(1);, +		});, +	}, +]