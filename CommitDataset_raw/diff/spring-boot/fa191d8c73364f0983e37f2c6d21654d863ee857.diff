[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +		AnnotationConfigReactiveWebServerApplicationContext child = new AnnotationConfigReactiveWebServerApplicationContext();, +			AnnotationConfigReactiveWebServerApplicationContext childContext) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +		AnnotationConfigReactiveWebServerApplicationContext child = new AnnotationConfigReactiveWebServerApplicationContext();, +			AnnotationConfigReactiveWebServerApplicationContext childContext) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	private AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +		AnnotationConfigReactiveWebServerApplicationContext context = createApplicationContext(, +	protected int getPort(AnnotationConfigReactiveWebServerApplicationContext context) {, +		return context.getBean(CloudFoundryReactiveConfiguration.class).port;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +		AnnotationConfigReactiveWebServerApplicationContext child = new AnnotationConfigReactiveWebServerApplicationContext();, +			AnnotationConfigReactiveWebServerApplicationContext childContext) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	private AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +		AnnotationConfigReactiveWebServerApplicationContext context = createApplicationContext(, +	protected int getPort(AnnotationConfigReactiveWebServerApplicationContext context) {, +		return context.getBean(CloudFoundryReactiveConfiguration.class).port;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebApplicationContext;, +	private AnnotationConfigReactiveWebApplicationContext context;, +		this.context = new AnnotationConfigReactiveWebApplicationContext();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +		AnnotationConfigReactiveWebServerApplicationContext child = new AnnotationConfigReactiveWebServerApplicationContext();, +			AnnotationConfigReactiveWebServerApplicationContext childContext) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	private AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +		AnnotationConfigReactiveWebServerApplicationContext context = createApplicationContext(, +	protected int getPort(AnnotationConfigReactiveWebServerApplicationContext context) {, +		return context.getBean(CloudFoundryReactiveConfiguration.class).port;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebApplicationContext;, +	private AnnotationConfigReactiveWebApplicationContext context;, +		this.context = new AnnotationConfigReactiveWebApplicationContext();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	protected AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +		AnnotationConfigReactiveWebServerApplicationContext child = new AnnotationConfigReactiveWebServerApplicationContext();, +			AnnotationConfigReactiveWebServerApplicationContext childContext) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	private AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +		AnnotationConfigReactiveWebServerApplicationContext context = createApplicationContext(, +	protected int getPort(AnnotationConfigReactiveWebServerApplicationContext context) {, +		return context.getBean(CloudFoundryReactiveConfiguration.class).port;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebApplicationContext;, +	private AnnotationConfigReactiveWebApplicationContext context;, +		this.context = new AnnotationConfigReactiveWebApplicationContext();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	protected AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/test/WebFluxEndpointsRunner.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextFactory.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +		AnnotationConfigReactiveWebServerApplicationContext child = new AnnotationConfigReactiveWebServerApplicationContext();, +			AnnotationConfigReactiveWebServerApplicationContext childContext) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/CloudFoundryWebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	private AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();, +		AnnotationConfigReactiveWebServerApplicationContext context = createApplicationContext(, +	protected int getPort(AnnotationConfigReactiveWebServerApplicationContext context) {, +		return context.getBean(CloudFoundryReactiveConfiguration.class).port;, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebApplicationContext;, +	private AnnotationConfigReactiveWebApplicationContext context;, +		this.context = new AnnotationConfigReactiveWebApplicationContext();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointIntegrationTests.java, +import org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext;, +	protected AnnotationConfigReactiveWebServerApplicationContext createApplicationContext(, +		AnnotationConfigReactiveWebServerApplicationContext context = new AnnotationConfigReactiveWebServerApplicationContext();]