[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/getting-started.adoc, +this section. It answers the basic "`what?`", "`how?`" and "`why?`" questions. It, +includes an introduction to Spring Boot, along with installation instructions. We then, +walk you through building your first Spring Boot application, discussing some core, +, +Applications that you can run. We take an opinionated view of the Spring platform and, +third-party libraries, so that you can get started with minimum fuss. Most Spring Boot, +applications need very little Spring configuration., +Framework {spring-version} or above. Explicit build support is provided for Maven 3.2+, +and Gradle 4., +, +If you are new to Java development or if you want to experiment with Spring Boot, you, +might want to try the <<getting-started-installing-the-cli, Spring Boot CLI>> (Command, +is nothing special about a Spring Boot application, so you can run and debug a Spring, +Boot application as you would any other Java program., +Although you _could_ copy Spring Boot jars, we generally recommend that you use a build, +tool that supports dependency management (such as Maven or Gradle)., +Spring Boot is compatible with Apache Maven 3.2 or above. If you do not already have, +Maven installed, you can follow the instructions at http://maven.apache.org., +TIP: On many operating systems, Maven can be installed with a package manager. If you use, +OSX Homebrew, try `brew install maven`. Ubuntu users can run, +dependencies to one or more <<using-spring-boot.adoc#using-boot-starter,"`Starters`">>., +Spring Boot also provides an optional, +TIP: The `spring-boot-starter-parent` is a great way to use Spring Boot, but it might not, +be suitable all of the time. Sometimes you may need to inherit from a different parent, +POM, or you might not like our default settings. In those cases, see, +project. It is a small script and library that you commit alongside your code to, +bootstrap the build process. See {gradle-user-guide}/gradle_wrapper.html for details., +The following example shows a typical `build.gradle` file:, +You do not need to use the CLI to work with Spring Boot, but it is definitely the, +quickest way to get a Spring application off the ground., +Cutting edge, +http://repo.spring.io/snapshot/org/springframework/boot/spring-boot-cli/[snapshot, +Once downloaded, follow the, +{github-raw}/spring-boot-project/spring-boot-cli/src/main/content/INSTALL.txt[INSTALL.txt], +SDKMAN! (The Software Development Kit Manager) can be used for managing multiple versions, +of various binary SDKs, including Groovy and the Spring Boot CLI., +Get SDKMAN! from http://sdkman.io and install Spring Boot by using the following, +commands:, +If you are developing features for the CLI and want easy access to the version you built,, +use the following commands:, +The preceding instructions install a local instance of `spring` called the `dev`, +instance. It points at your target build location, so every time you rebuild Spring Boot,, +`spring` is up-to-date., +If you are on a Mac and use http://brew.sh/[Homebrew], you can install the Spring Boot, +CLI by using the following commands:, +NOTE: If you do not see the formula, your installation of brew might be out-of-date. In, +that case, run `brew update` and try again., +If you are on a Mac and use http://www.macports.org/[MacPorts], you can install the, +Spring Boot CLI by using the following command:, +The Spring Boot CLI includes scripts that provide command completion for the, +http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29[BASH] and, +You can use the following web application to test your installation. To start, create a, +file called `app.groovy`, as follows:, +NOTE: The first run of your application is slow, as dependencies are downloaded., +Subsequent runs are much quicker., +hosted on the {github-wiki}[project wiki]. You'll find upgrade instructions along with a, +list of "`new and noteworthy`" features for each release., +To upgrade an existing CLI installation use the appropriate package manager command (for, +example, `brew upgrade`) or, if you manually installed the CLI, follow the, +<<getting-started-manual-cli-installation, standard instructions>> remembering to update, +your `PATH` environment variable to remove any older references., +The http://spring.io[spring.io] web site contains many "`Getting Started`", +http://spring.io/guides[guides] that use Spring Boot. If you need to solve a specific, +problem, check there first., +"Web" starter from the dependencies searcher. Doing so generates a new project structure, +so that you can <<getting-started-first-application-code,start coding right away>>. Check, +the https://github.com/spring-io/initializr[Spring Initializr documentation] for more, +details., +We need to start by creating a Maven `pom.xml` file. The `pom.xml` is the recipe that is, +used to build your project. Open your favorite text editor and add the following:, +The preceding listing should give you a working build. You can test it by running `mvn, +package` (for now, you can ignore the "`jar will be empty - no content was marked for, +include built-in support for Maven). For simplicity, we continue to use a plain text, +editor for this example., +Spring Boot provides a number of "`Starters`" that let you add jars to your classpath., +Our sample application has already used `spring-boot-starter-parent` in the `parent`, +section of the POM. The `spring-boot-starter-parent` is a special starter that provides, +useful Maven defaults. It also provides a, +Other "`Starters`" provide dependencies that you are likely to need when developing a, +specific type of application. Since we are developing a web application, we add a, +`spring-boot-starter-web` dependency. Before that, we can look at what we currently have, +by running the following command:, +dependencies. You can see that `spring-boot-starter-parent` provides no dependencies by, +itself. To add the necessary dependencies, edit your `pom.xml` and add the, +If you run `mvn dependency:tree` again, you see that there are now a number of additional, +dependencies, including the Tomcat web server and Spring Boot itself., +The `@RequestMapping` annotation provides "`routing`" information. It tells Spring that, +any HTTP request with the `/` path should be mapped to the `home` method. The, +`@RestController` annotation tells Spring to render the resulting string directly back to, +the caller., +Spring Boot to "`guess`" how you want to configure Spring, based on the jar dependencies, +that you have added. Since `spring-boot-starter-web` added Tomcat and Spring MVC, the, +auto-configuration assumes that you are developing a web application and sets up Spring, +accordingly., +Auto-configuration is designed to work well with "`Starters`", but the two concepts are, +not directly tied. You are free to pick and choose jar dependencies outside of the, +that follows the Java convention for an application entry point. Our main method, +delegates to Spring Boot's `SpringApplication` class by calling `run`., +`SpringApplication` bootstraps our application, starting Spring, which, in turn, starts]