[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java, +	@ConditionalOnMissingBean(name = "influxDbHealthIndicator"), +	public HealthIndicator influxDbHealthIndicator() {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java, +	@ConditionalOnMissingBean(name = "influxDbHealthIndicator"), +	public HealthIndicator influxDbHealthIndicator() {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.influxdb.jms.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable InfluxDB health check.",, +      "defaultValue": true, +    },, +    {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java, +	@ConditionalOnMissingBean(name = "influxDbHealthIndicator"), +	public HealthIndicator influxDbHealthIndicator() {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.influxdb.jms.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable InfluxDB health check.",, +      "defaultValue": true, +    },, +    {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfigurationTests.java, +public class InfluxDbHealthIndicatorAutoConfigurationTests {, +			.withUserConfiguration(InfluxDbConfiguration.class), +			.withConfiguration(AutoConfigurations.of(, +	public void runShouldCreateIndicator() {, +	public void runWhenDisabledShouldNotCreateIndicator() {, +	static class InfluxDbConfiguration {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java, +	@ConditionalOnMissingBean(name = "influxDbHealthIndicator"), +	public HealthIndicator influxDbHealthIndicator() {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.influxdb.jms.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable InfluxDB health check.",, +      "defaultValue": true, +    },, +    {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfigurationTests.java, +public class InfluxDbHealthIndicatorAutoConfigurationTests {, +			.withUserConfiguration(InfluxDbConfiguration.class), +			.withConfiguration(AutoConfigurations.of(, +	public void runShouldCreateIndicator() {, +	public void runWhenDisabledShouldNotCreateIndicator() {, +	static class InfluxDbConfiguration {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/infux/InfluxDbHealthIndicator.java, +import org.influxdb.dto.Pong;, +	protected void doHealthCheck(Health.Builder builder) {, +		Pong pong = this.influxDb.ping();, +		builder.up().withDetail("version", pong.getVersion());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java, +	@ConditionalOnMissingBean(name = "influxDbHealthIndicator"), +	public HealthIndicator influxDbHealthIndicator() {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.influxdb.jms.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable InfluxDB health check.",, +      "defaultValue": true, +    },, +    {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfigurationTests.java, +public class InfluxDbHealthIndicatorAutoConfigurationTests {, +			.withUserConfiguration(InfluxDbConfiguration.class), +			.withConfiguration(AutoConfigurations.of(, +	public void runShouldCreateIndicator() {, +	public void runWhenDisabledShouldNotCreateIndicator() {, +	static class InfluxDbConfiguration {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/infux/InfluxDbHealthIndicator.java, +import org.influxdb.dto.Pong;, +	protected void doHealthCheck(Health.Builder builder) {, +		Pong pong = this.influxDb.ping();, +		builder.up().withDetail("version", pong.getVersion());, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/influx/InfluxDbHealthIndicatorTests.java, +import org.influxdb.dto.Pong;, +	public void influxDbIsUp() {, +		Pong pong = mock(Pong.class);, +		given(pong.getVersion()).willReturn("0.9");, +		given(influxDB.ping()).willReturn(pong);, +		verify(influxDB).ping();, +	public void influxDbIsDown() {, +		given(influxDB.ping()).willThrow(, +		verify(influxDB).ping();, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/influx/InfluxDbHealthIndicatorAutoConfiguration.java, +	@ConditionalOnMissingBean(name = "influxDbHealthIndicator"), +	public HealthIndicator influxDbHealthIndicator() {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.influxdb.jms.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable InfluxDB health check.",, +      "defaultValue": true, +    },]