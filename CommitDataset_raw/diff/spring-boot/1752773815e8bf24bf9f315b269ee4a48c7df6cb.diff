[+++ b/spring-boot-test/src/main/java/org/springframework/boot/test/json/BasicJsonTester.java, +import java.nio.charset.Charset;, + * @author Andy Wilkinson, +	 * Create a new {@link BasicJsonTester} instance that will load resources as UTF-8., +		this(resourceLoadClass, null);, +	}, +, +	/**, +	 * Create a new {@link BasicJsonTester} instance., +	 * @param resourceLoadClass the source class used to load resources, +	 * @param charset the charset used to load resources, +	 * @since 1.4.1, +	 */, +	public BasicJsonTester(Class<?> resourceLoadClass, Charset charset) {, +		this.loader = new JsonLoader(resourceLoadClass, charset);, +	}, +, +	/**, +	 * Initialize the marshal tester for use, configuring it to load JSON resources as, +	 * UTF-8., +	 * @param resourceLoadClass the source class used when loading relative classpath, +	 * resources, +	 * @param type the type under test, +	 */, +	protected final void initialize(Class<?> resourceLoadClass, ResolvableType type) {, +		this.initialize(resourceLoadClass, null, type);, +	 * @param charset the charset used when loading relative classpath resources, +	 * @since 1.4.1, +	protected final void initialize(Class<?> resourceLoadClass, Charset charset,, +			ResolvableType type) {, +			this.loader = new JsonLoader(resourceLoadClass, charset);, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/json/BasicJsonTester.java, +import java.nio.charset.Charset;, + * @author Andy Wilkinson, +	 * Create a new {@link BasicJsonTester} instance that will load resources as UTF-8., +		this(resourceLoadClass, null);, +	}, +, +	/**, +	 * Create a new {@link BasicJsonTester} instance., +	 * @param resourceLoadClass the source class used to load resources, +	 * @param charset the charset used to load resources, +	 * @since 1.4.1, +	 */, +	public BasicJsonTester(Class<?> resourceLoadClass, Charset charset) {, +		this.loader = new JsonLoader(resourceLoadClass, charset);, +	}, +, +	/**, +	 * Initialize the marshal tester for use, configuring it to load JSON resources as, +	 * UTF-8., +	 * @param resourceLoadClass the source class used when loading relative classpath, +	 * resources, +	 * @param type the type under test, +	 */, +	protected final void initialize(Class<?> resourceLoadClass, ResolvableType type) {, +		this.initialize(resourceLoadClass, null, type);, +	 * @param charset the charset used when loading relative classpath resources, +	 * @since 1.4.1, +	protected final void initialize(Class<?> resourceLoadClass, Charset charset,, +			ResolvableType type) {, +			this.loader = new JsonLoader(resourceLoadClass, charset);, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/json/JsonContentAssert.java, +import java.nio.charset.Charset;, + * @author Andy Wilkinson, +	 * Create a new {@link JsonContentAssert} instance that will load resources as UTF-8., +		this(resourceLoadClass, null, json);, +	}, +, +	/**, +	 * Create a new {@link JsonContentAssert} instance that will load resources in the, +	 * given {@code charset}., +	 * @param resourceLoadClass the source class used to load resources, +	 * @param charset the charset of the JSON resources, +	 * @param json the actual JSON content, +	 * @since 1.4.1, +	 */, +	public JsonContentAssert(Class<?> resourceLoadClass, Charset charset,, +			CharSequence json) {, +		this.loader = new JsonLoader(resourceLoadClass, charset);, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/json/BasicJsonTester.java, +import java.nio.charset.Charset;, + * @author Andy Wilkinson, +	 * Create a new {@link BasicJsonTester} instance that will load resources as UTF-8., +		this(resourceLoadClass, null);, +	}, +, +	/**, +	 * Create a new {@link BasicJsonTester} instance., +	 * @param resourceLoadClass the source class used to load resources, +	 * @param charset the charset used to load resources, +	 * @since 1.4.1, +	 */, +	public BasicJsonTester(Class<?> resourceLoadClass, Charset charset) {, +		this.loader = new JsonLoader(resourceLoadClass, charset);, +	}, +, +	/**, +	 * Initialize the marshal tester for use, configuring it to load JSON resources as, +	 * UTF-8.]