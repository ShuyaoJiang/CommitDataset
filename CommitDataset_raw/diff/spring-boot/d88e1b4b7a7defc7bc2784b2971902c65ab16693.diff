[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GrapeEngineCustomizer.java, +import org.apache.ivy.util.Message;, + * Customizes the groovy grape engine to enhance and patch the behaviour of ivy. Can add, + * Spring repos to the search path, provide simple log progress feedback if downloads are, + * taking a long time, and also fixes a problem where ivy cannot use a local Maven cache, + * repo., + * @author Dave Syer, +			Message.getDefaultLogger().log(msg, level);, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GrapeEngineCustomizer.java, +import org.apache.ivy.util.Message;, + * Customizes the groovy grape engine to enhance and patch the behaviour of ivy. Can add, + * Spring repos to the search path, provide simple log progress feedback if downloads are, + * taking a long time, and also fixes a problem where ivy cannot use a local Maven cache, + * repo., + * @author Dave Syer, +			Message.getDefaultLogger().log(msg, level);, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/GrapeEngineCustomizerTests.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.cli.compiler;, +, +import groovy.grape.GrapeIvy;, +import groovy.grape.IvyGrabRecord;, +, +import java.io.File;, +import java.io.IOException;, +import java.util.Arrays;, +import java.util.HashMap;, +import java.util.Map;, +, +import org.apache.ivy.core.module.id.ModuleId;, +import org.apache.ivy.core.module.id.ModuleRevisionId;, +import org.apache.ivy.core.report.ResolveReport;, +import org.apache.ivy.plugins.resolver.ChainResolver;, +import org.apache.ivy.plugins.resolver.IBiblioResolver;, +import org.apache.ivy.util.FileUtil;, +import org.junit.After;, +import org.junit.Before;, +import org.junit.Rule;, +import org.junit.Test;, +import org.junit.rules.ExpectedException;, +, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +, +/**, + * @author Dave Syer, + */, +public class GrapeEngineCustomizerTests {, +, +	@Rule, +	public ExpectedException expected = ExpectedException.none();, +	private String level;, +, +	@Before, +	public void setup() {, +		this.level = System.getProperty("ivy.message.logger.level");, +		System.setProperty("ivy.message.logger.level", "3");, +		System.setProperty("disableSpringSnapshotRepos", "true");, +	}, +, +	@After, +	public void shutdown() {, +		if (this.level == null) {, +			System.clearProperty("ivy.message.logger.level");, +		}, +		else {, +			System.setProperty("ivy.message.logger.level", this.level);, +		}, +	}, +, +	@Test, +	public void vanillaEngineWithPomExistsAndJarDoesToo() throws Exception {, +		GrapeIvy engine = new GrapeIvy();, +		prepareFoo(engine, true);, +		ResolveReport report = resolveFoo(engine, "foo", "foo", "1.0");, +		assertFalse(report.hasError());, +	}, +, +	@Test, +	public void vanillaEngineWithPomExistsButJarDoesNot() throws Exception {, +		GrapeIvy engine = new GrapeIvy();, +		prepareFoo(engine, false);, +		this.expected.expectMessage("Error grabbing Grapes");, +		ResolveReport report = resolveFoo(engine, "foo", "foo", "1.0");, +		assertTrue(report.hasError());]