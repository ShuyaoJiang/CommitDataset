[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, +import org.springframework.util.StringUtils;, +import org.springframework.web.servlet.LocaleResolver;, +import org.springframework.web.servlet.i18n.FixedLocaleResolver;, +		@Value("${spring.mvc.locale:}"), +		private String locale = "";, +, +		@Bean, +		@ConditionalOnMissingBean(LocaleResolver.class), +		@ConditionalOnExpression("'${spring.mvc.locale:}' != ''"), +		public LocaleResolver localeResolver() {, +			return new FixedLocaleResolver(StringUtils.parseLocaleString(this.locale));, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, +import org.springframework.util.StringUtils;, +import org.springframework.web.servlet.LocaleResolver;, +import org.springframework.web.servlet.i18n.FixedLocaleResolver;, +		@Value("${spring.mvc.locale:}"), +		private String locale = "";, +, +		@Bean, +		@ConditionalOnMissingBean(LocaleResolver.class), +		@ConditionalOnExpression("'${spring.mvc.locale:}' != ''"), +		public LocaleResolver localeResolver() {, +			return new FixedLocaleResolver(StringUtils.parseLocaleString(this.locale));, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfigurationTests.java, +import java.util.Locale;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.boot.test.EnvironmentTestUtils;, +import org.springframework.mock.web.MockHttpServletRequest;, +import org.springframework.util.StringUtils;, +import org.springframework.web.servlet.LocaleResolver;, +import org.springframework.web.servlet.i18n.FixedLocaleResolver;, +import static org.hamcrest.Matchers.instanceOf;, +	@Test(expected = NoSuchBeanDefinitionException.class), +	public void noLocaleResolver() throws Exception {, +		this.context = new AnnotationConfigEmbeddedWebApplicationContext();, +		this.context.register(AllResources.class, Config.class,, +				WebMvcAutoConfiguration.class,, +				HttpMessageConvertersAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		this.context.getBean(LocaleResolver.class);, +	}, +, +	@Test, +	public void overrideLocale() throws Exception {, +		this.context = new AnnotationConfigEmbeddedWebApplicationContext();, +		// set fixed locale, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.mvc.locale:en_UK");, +		this.context.register(AllResources.class, Config.class,, +				WebMvcAutoConfiguration.class,, +				HttpMessageConvertersAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		// mock request and set user preferred locale, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.addPreferredLocale(StringUtils.parseLocaleString("nl_NL"));, +		LocaleResolver localeResolver = this.context.getBean(LocaleResolver.class);, +		Locale locale = localeResolver.resolveLocale(request);, +		assertThat(localeResolver,, +				instanceOf(FixedLocaleResolver.class));, +		// test locale resolver uses fixed locale and not user preferred locale, +		assertThat(locale.toString(),, +				equalTo("en_UK"));, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, +import org.springframework.util.StringUtils;, +import org.springframework.web.servlet.LocaleResolver;, +import org.springframework.web.servlet.i18n.FixedLocaleResolver;, +		@Value("${spring.mvc.locale:}"), +		private String locale = "";, +, +		@Bean, +		@ConditionalOnMissingBean(LocaleResolver.class), +		@ConditionalOnExpression("'${spring.mvc.locale:}' != ''"), +		public LocaleResolver localeResolver() {, +			return new FixedLocaleResolver(StringUtils.parseLocaleString(this.locale));, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfigurationTests.java, +import java.util.Locale;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.boot.test.EnvironmentTestUtils;, +import org.springframework.mock.web.MockHttpServletRequest;, +import org.springframework.util.StringUtils;, +import org.springframework.web.servlet.LocaleResolver;, +import org.springframework.web.servlet.i18n.FixedLocaleResolver;, +import static org.hamcrest.Matchers.instanceOf;, +	@Test(expected = NoSuchBeanDefinitionException.class), +	public void noLocaleResolver() throws Exception {, +		this.context = new AnnotationConfigEmbeddedWebApplicationContext();]