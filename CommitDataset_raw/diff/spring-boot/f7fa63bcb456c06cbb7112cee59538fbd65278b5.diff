[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.actuate.web.BasicErrorController;, +	@Autowired(required = false), +	private BasicErrorController errorController;, +, +		if (this.errorController != null) {, +			filter.setErrorController(this.errorController);, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.actuate.web.BasicErrorController;, +	@Autowired(required = false), +	private BasicErrorController errorController;, +, +		if (this.errorController != null) {, +			filter.setErrorController(this.errorController);, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java, +import org.springframework.boot.actuate.web.BasicErrorController;, +	private BasicErrorController errorController;, +, +		headers.put("status", "" + response.getStatus());, +		Throwable error = (Throwable) request, +				.getAttribute("javax.servlet.error.exception");, +		if (error != null) {, +			if (this.errorController != null) {, +				trace.put("error", this.errorController.error(request));, +			}, +		}, +	public void setErrorController(BasicErrorController errorController) {, +		this.errorController = errorController;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.actuate.web.BasicErrorController;, +	@Autowired(required = false), +	private BasicErrorController errorController;, +, +		if (this.errorController != null) {, +			filter.setErrorController(this.errorController);, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java, +import org.springframework.boot.actuate.web.BasicErrorController;, +	private BasicErrorController errorController;, +, +		headers.put("status", "" + response.getStatus());, +		Throwable error = (Throwable) request, +				.getAttribute("javax.servlet.error.exception");, +		if (error != null) {, +			if (this.errorController != null) {, +				trace.put("error", this.errorController.error(request));, +			}, +		}, +	public void setErrorController(BasicErrorController errorController) {, +		this.errorController = errorController;, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +import org.springframework.boot.actuate.web.BasicErrorController;, +		assertEquals("{Content-Type=application/json, status=200}", map.get("response"), +				.toString());, +	}, +, +	@Test, +	public void filterHasResponseStatus() {, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/foo");, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		response.setStatus(404);, +		response.addHeader("Content-Type", "application/json");, +		Map<String, Object> trace = this.filter.getTrace(request);, +		this.filter.enhanceTrace(trace, response);, +		@SuppressWarnings("unchecked"), +		Map<String, Object> map = (Map<String, Object>) ((Map<String, Object>) trace, +				.get("headers")).get("response");, +		assertEquals("404", map.get("status").toString());, +	}, +, +	@Test, +	public void filterHasError() {, +		this.filter.setErrorController(new BasicErrorController());, +		MockHttpServletRequest request = new MockHttpServletRequest("GET", "/foo");, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		response.setStatus(500);, +		request.setAttribute("javax.servlet.error.exception", new IllegalStateException(, +				"Foo"));, +		response.addHeader("Content-Type", "application/json");, +		Map<String, Object> trace = this.filter.getTrace(request);, +		this.filter.enhanceTrace(trace, response);, +		@SuppressWarnings("unchecked"), +		Map<String, Object> map = (Map<String, Object>) trace.get("error");, +		System.err.println(map);, +		assertEquals("Foo", map.get("message").toString());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/TraceWebFilterAutoConfiguration.java, +import org.springframework.boot.actuate.web.BasicErrorController;, +	@Autowired(required = false), +	private BasicErrorController errorController;, +, +		if (this.errorController != null) {, +			filter.setErrorController(this.errorController);, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java]