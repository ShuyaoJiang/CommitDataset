[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, + * @author Stephane Nicoll, +	/**, +	 * Configuration to add {@link HandlerMapping} for {@link MvcEndpoint}s. See, +	 * {@link SecureEndpointHandlerMappingConfiguration} for an extended version that also, +	 * configures the security filter., +	 */, +	protected static class EndpointHandlerMappingConfiguration {, +			Set<MvcEndpoint> set = new HashSet<MvcEndpoint>(endpoints.getEndpoints());, +			set.addAll(beanFactory.getBeansOfType(MvcEndpoint.class).values());, +			EndpointHandlerMapping mapping = new EndpointHandlerMapping(set);, +			// In a child context we definitely want to see the parent endpoints, +			mapping.setDetectHandlerMethodsInAncestorContexts(true);, +			postProcessMapping(beanFactory, mapping);, +		/**, +		 * Hook to allow additional post processing of {@link EndpointHandlerMapping}., +		 * @param beanFactory the source bean factory, +		 * @param mapping the mapping to customize, +		 */, +		protected void postProcessMapping(ListableBeanFactory beanFactory,, +				EndpointHandlerMapping mapping) {, +	/**, +	 * Extension of {@link EndpointHandlerMappingConfiguration} that also configures the, +	 * security filter., +	 */, +	protected static class SecureEndpointHandlerMappingConfiguration extends, +			EndpointHandlerMappingConfiguration {, +		protected void postProcessMapping(ListableBeanFactory beanFactory,, +			// The parent context has the security filter, so we need to get it injected, +			// with our EndpointHandlerMapping if we can., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, + * @author Stephane Nicoll, +	/**, +	 * Configuration to add {@link HandlerMapping} for {@link MvcEndpoint}s. See, +	 * {@link SecureEndpointHandlerMappingConfiguration} for an extended version that also, +	 * configures the security filter., +	 */, +	protected static class EndpointHandlerMappingConfiguration {, +			Set<MvcEndpoint> set = new HashSet<MvcEndpoint>(endpoints.getEndpoints());, +			set.addAll(beanFactory.getBeansOfType(MvcEndpoint.class).values());, +			EndpointHandlerMapping mapping = new EndpointHandlerMapping(set);, +			// In a child context we definitely want to see the parent endpoints, +			mapping.setDetectHandlerMethodsInAncestorContexts(true);, +			postProcessMapping(beanFactory, mapping);, +		/**, +		 * Hook to allow additional post processing of {@link EndpointHandlerMapping}., +		 * @param beanFactory the source bean factory, +		 * @param mapping the mapping to customize, +		 */, +		protected void postProcessMapping(ListableBeanFactory beanFactory,, +				EndpointHandlerMapping mapping) {, +	/**, +	 * Extension of {@link EndpointHandlerMappingConfiguration} that also configures the, +	 * security filter., +	 */, +	protected static class SecureEndpointHandlerMappingConfiguration extends, +			EndpointHandlerMappingConfiguration {, +		protected void postProcessMapping(ListableBeanFactory beanFactory,, +			// The parent context has the security filter, so we need to get it injected, +			// with our EndpointHandlerMapping if we can., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, MongoDataAutoConfiguration.class,, +				HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, MongoDataAutoConfiguration.class,, +				HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, DataSourceProperties.class,, +				DataSourceConfig.class,, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +				ManagementServerProperties.class, HealthIndicatorAutoConfiguration.class);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, + * @author Stephane Nicoll, +	/**, +	 * Configuration to add {@link HandlerMapping} for {@link MvcEndpoint}s. See, +	 * {@link SecureEndpointHandlerMappingConfiguration} for an extended version that also, +	 * configures the security filter., +	 */, +	protected static class EndpointHandlerMappingConfiguration {, +			Set<MvcEndpoint> set = new HashSet<MvcEndpoint>(endpoints.getEndpoints());, +			set.addAll(beanFactory.getBeansOfType(MvcEndpoint.class).values());, +			EndpointHandlerMapping mapping = new EndpointHandlerMapping(set);, +			// In a child context we definitely want to see the parent endpoints, +			mapping.setDetectHandlerMethodsInAncestorContexts(true);, +			postProcessMapping(beanFactory, mapping);, +		/**, +		 * Hook to allow additional post processing of {@link EndpointHandlerMapping}., +		 * @param beanFactory the source bean factory, +		 * @param mapping the mapping to customize, +		 */, +		protected void postProcessMapping(ListableBeanFactory beanFactory,, +				EndpointHandlerMapping mapping) {, +	/**, +	 * Extension of {@link EndpointHandlerMappingConfiguration} that also configures the, +	 * security filter., +	 */]