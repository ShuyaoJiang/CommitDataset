[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;, +import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;, +	/**, +	 * If the user explicitly disables the basic security features and forgets to, +	 * <code>@EnableWebSecurity</code>, and yet still wants a bean of type, +	 * WebSecurityConfigurerAdapter, he is trying to use a custom security setup. The app, +	 * would fail in a confusing way without this shim configuration, which just helpfully, +	 * defines an empty <code>@EnableWebSecurity</code>., +	 * , +	 * @author Dave Syer, +	 */, +	@ConditionalOnExpression("!${security.basic.enabled:true}"), +	@ConditionalOnBean(WebSecurityConfigurerAdapter.class), +	@ConditionalOnClass(EnableWebSecurity.class), +	@ConditionalOnMissingBean(WebSecurityConfiguration.class), +	@ConditionalOnWebApplication, +	@EnableWebSecurity, +	protected static class EmptyWebSecurityConfiguration {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;, +import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;, +	/**, +	 * If the user explicitly disables the basic security features and forgets to, +	 * <code>@EnableWebSecurity</code>, and yet still wants a bean of type, +	 * WebSecurityConfigurerAdapter, he is trying to use a custom security setup. The app, +	 * would fail in a confusing way without this shim configuration, which just helpfully, +	 * defines an empty <code>@EnableWebSecurity</code>., +	 * , +	 * @author Dave Syer, +	 */, +	@ConditionalOnExpression("!${security.basic.enabled:true}"), +	@ConditionalOnBean(WebSecurityConfigurerAdapter.class), +	@ConditionalOnClass(EnableWebSecurity.class), +	@ConditionalOnMissingBean(WebSecurityConfiguration.class), +	@ConditionalOnWebApplication, +	@EnableWebSecurity, +	protected static class EmptyWebSecurityConfiguration {, +, +	}, +, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;, +import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;, +	/**, +	 * If the user explicitly disables the basic security features and forgets to, +	 * <code>@EnableWebSecurity</code>, and yet still wants a bean of type, +	 * WebSecurityConfigurerAdapter, he is trying to use a custom security setup. The app, +	 * would fail in a confusing way without this shim configuration, which just helpfully, +	 * defines an empty <code>@EnableWebSecurity</code>., +	 * , +	 * @author Dave Syer, +	 */, +	@ConditionalOnExpression("!${security.basic.enabled:true}"), +	@ConditionalOnBean(WebSecurityConfigurerAdapter.class), +	@ConditionalOnClass(EnableWebSecurity.class), +	@ConditionalOnMissingBean(WebSecurityConfiguration.class), +	@ConditionalOnWebApplication, +	@EnableWebSecurity, +	protected static class EmptyWebSecurityConfiguration {, +, +	}, +, +++ /dev/null, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/java/sample/ui/secure/SampleWebSecureApplication.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package sample.ui.secure;, +, +import java.util.Date;, +import java.util.Map;, +, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;]