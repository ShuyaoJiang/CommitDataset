[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/AggregateBinder.java, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +	AggregateBinder(BindContext context) {, +	/**, +	 * Determine if recursive binding is supported., +	 * @param source the configuration property source or {@code null} for all sources., +	 * @return if recursive binding is supported, +	 */, +	protected abstract boolean isAllowRecursiveBinding(, +			ConfigurationPropertySource source);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/AggregateBinder.java, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +	AggregateBinder(BindContext context) {, +	/**, +	 * Determine if recursive binding is supported., +	 * @param source the configuration property source or {@code null} for all sources., +	 * @return if recursive binding is supported, +	 */, +	protected abstract boolean isAllowRecursiveBinding(, +			ConfigurationPropertySource source);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java, +			boolean allowRecursiveBinding = aggregateBinder, +					.isAllowRecursiveBinding(source);, +					allowRecursiveBinding);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/AggregateBinder.java, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +	AggregateBinder(BindContext context) {, +	/**, +	 * Determine if recursive binding is supported., +	 * @param source the configuration property source or {@code null} for all sources., +	 * @return if recursive binding is supported, +	 */, +	protected abstract boolean isAllowRecursiveBinding(, +			ConfigurationPropertySource source);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java, +			boolean allowRecursiveBinding = aggregateBinder, +					.isAllowRecursiveBinding(source);, +					allowRecursiveBinding);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/IndexedElementsBinder.java, +		super(context);, +	}, +, +	@Override, +	protected boolean isAllowRecursiveBinding(ConfigurationPropertySource source) {, +		return source == null || source instanceof IterableConfigurationPropertySource;, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/AggregateBinder.java, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +	AggregateBinder(BindContext context) {, +	/**, +	 * Determine if recursive binding is supported., +	 * @param source the configuration property source or {@code null} for all sources., +	 * @return if recursive binding is supported, +	 */, +	protected abstract boolean isAllowRecursiveBinding(, +			ConfigurationPropertySource source);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java, +			boolean allowRecursiveBinding = aggregateBinder, +					.isAllowRecursiveBinding(source);, +					allowRecursiveBinding);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/IndexedElementsBinder.java, +		super(context);, +	}, +, +	@Override, +	protected boolean isAllowRecursiveBinding(ConfigurationPropertySource source) {, +		return source == null || source instanceof IterableConfigurationPropertySource;, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/MapBinder.java, +		super(context);, +	}, +, +	@Override, +	protected boolean isAllowRecursiveBinding(ConfigurationPropertySource source) {, +		return true;, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/AggregateBinder.java, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +	AggregateBinder(BindContext context) {, +	/**, +	 * Determine if recursive binding is supported., +	 * @param source the configuration property source or {@code null} for all sources., +	 * @return if recursive binding is supported, +	 */, +	protected abstract boolean isAllowRecursiveBinding(, +			ConfigurationPropertySource source);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java, +			boolean allowRecursiveBinding = aggregateBinder, +					.isAllowRecursiveBinding(source);, +					allowRecursiveBinding);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/IndexedElementsBinder.java, +		super(context);, +	}, +, +	@Override, +	protected boolean isAllowRecursiveBinding(ConfigurationPropertySource source) {, +		return source == null || source instanceof IterableConfigurationPropertySource;, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/MapBinder.java, +		super(context);, +	}, +, +	@Override, +	protected boolean isAllowRecursiveBinding(ConfigurationPropertySource source) {]