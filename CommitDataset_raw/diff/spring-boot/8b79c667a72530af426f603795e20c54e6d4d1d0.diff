[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryFactory.java, +import org.springframework.beans.BeanUtils;, +			Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +					ServerLocator.class);, +			return BeanUtils.instantiateClass(constructor, this.properties, serviceLocator);, +		Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +		return BeanUtils.instantiateClass(constructor, this.properties, false,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryFactory.java, +import org.springframework.beans.BeanUtils;, +			Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +					ServerLocator.class);, +			return BeanUtils.instantiateClass(constructor, this.properties, serviceLocator);, +		Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +		return BeanUtils.instantiateClass(constructor, this.properties, false,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties.java, + * Copyright 2012-2016 the original author or authors., +	 * Login user of the broker., +	 * Login password of the broker., +	public Embedded getEmbedded() {, +		return this.embedded;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryFactory.java, +import org.springframework.beans.BeanUtils;, +			Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +					ServerLocator.class);, +			return BeanUtils.instantiateClass(constructor, this.properties, serviceLocator);, +		Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +		return BeanUtils.instantiateClass(constructor, this.properties, false,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties.java, + * Copyright 2012-2016 the original author or authors., +	 * Login user of the broker., +	 * Login password of the broker., +	public Embedded getEmbedded() {, +		return this.embedded;, +	}, +, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryFactory.java, +import org.springframework.beans.BeanUtils;, +			Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +					ServerLocator.class);, +			return BeanUtils.instantiateClass(constructor, this.properties, serviceLocator);, +		Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +		return BeanUtils.instantiateClass(constructor, this.properties, false,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties.java, + * Copyright 2012-2016 the original author or authors., +	 * Login user of the broker., +	 * Login password of the broker., +	public Embedded getEmbedded() {, +		return this.embedded;, +	}, +, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQXAConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +								SpringBootHornetQXAConnectionFactory.class));, +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryFactory.java, +import org.springframework.beans.BeanUtils;, +			Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +					ServerLocator.class);, +			return BeanUtils.instantiateClass(constructor, this.properties, serviceLocator);, +		Constructor<T> constructor = factoryClass.getDeclaredConstructor(HornetQProperties.class,, +		return BeanUtils.instantiateClass(constructor, this.properties, false,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQProperties.java, + * Copyright 2012-2016 the original author or authors., +	 * Login user of the broker., +	 * Login password of the broker., +	public Embedded getEmbedded() {, +		return this.embedded;, +	}, +, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQXAConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +								SpringBootHornetQXAConnectionFactory.class));, +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/hornetq/HornetQConnectionFactoryConfiguration.java, + * Copyright 2012-2016 the original author or authors., +				.createConnectionFactory(SpringBootHornetQConnectionFactory.class);]