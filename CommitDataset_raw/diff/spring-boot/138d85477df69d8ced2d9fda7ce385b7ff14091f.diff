[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import org.springframework.boot.actuate.endpoint.EndpointId;, +class EndpointIdTimeToLivePropertyFunction implements Function<EndpointId, Long> {, +	public Long apply(EndpointId endpointId) {, +				endpointId.toLowerCaseString());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import org.springframework.boot.actuate.endpoint.EndpointId;, +class EndpointIdTimeToLivePropertyFunction implements Function<EndpointId, Long> {, +	public Long apply(EndpointId endpointId) {, +				endpointId.toLowerCaseString());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java, +	private void load(Function<EndpointId, Long> timeToLive,, +			PathMapper endpointPathMapper, Class<?> configuration,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import org.springframework.boot.actuate.endpoint.EndpointId;, +class EndpointIdTimeToLivePropertyFunction implements Function<EndpointId, Long> {, +	public Long apply(EndpointId endpointId) {, +				endpointId.toLowerCaseString());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java, +	private void load(Function<EndpointId, Long> timeToLive,, +			PathMapper endpointPathMapper, Class<?> configuration,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunctionTests.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.actuate.endpoint.EndpointId;, +	private final Function<EndpointId, Long> timeToLive = new EndpointIdTimeToLivePropertyFunction(, +		Long result = this.timeToLive.apply(EndpointId.of("test"));, +		this.environment.setProperty(, +				"management.endpoint.another-test.cache.time-to-live", "500");, +		Long result = this.timeToLive.apply(EndpointId.of("anotherTest"));, +	@Test, +	public void mixedCaseUserConfiguration() {, +, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import org.springframework.boot.actuate.endpoint.EndpointId;, +class EndpointIdTimeToLivePropertyFunction implements Function<EndpointId, Long> {, +	public Long apply(EndpointId endpointId) {, +				endpointId.toLowerCaseString());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java, +	private void load(Function<EndpointId, Long> timeToLive,, +			PathMapper endpointPathMapper, Class<?> configuration,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunctionTests.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.actuate.endpoint.EndpointId;, +	private final Function<EndpointId, Long> timeToLive = new EndpointIdTimeToLivePropertyFunction(, +		Long result = this.timeToLive.apply(EndpointId.of("test"));, +		this.environment.setProperty(, +				"management.endpoint.another-test.cache.time-to-live", "500");, +		Long result = this.timeToLive.apply(EndpointId.of("anotherTest"));, +	@Test, +	public void mixedCaseUserConfiguration() {, +, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisor.java, +import org.springframework.boot.actuate.endpoint.EndpointId;, +	private final Function<EndpointId, Long> endpointIdTimeToLive;, +	public CachingOperationInvokerAdvisor(, +			Function<EndpointId, Long> endpointIdTimeToLive) {, +		return apply(EndpointId.of(endpointId), operationType, parameters, invoker);, +	}, +, +	@Override, +	public OperationInvoker apply(EndpointId endpointId, OperationType operationType,, +			OperationParameters parameters, OperationInvoker invoker) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunction.java, +import org.springframework.boot.actuate.endpoint.EndpointId;, +class EndpointIdTimeToLivePropertyFunction implements Function<EndpointId, Long> {, +	public Long apply(EndpointId endpointId) {, +				endpointId.toLowerCaseString());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscovererTests.java, +	private void load(Function<EndpointId, Long> timeToLive,, +			PathMapper endpointPathMapper, Class<?> configuration,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointIdTimeToLivePropertyFunctionTests.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.boot.actuate.endpoint.EndpointId;, +	private final Function<EndpointId, Long> timeToLive = new EndpointIdTimeToLivePropertyFunction(, +		Long result = this.timeToLive.apply(EndpointId.of("test"));, +		this.environment.setProperty(, +				"management.endpoint.another-test.cache.time-to-live", "500");, +		Long result = this.timeToLive.apply(EndpointId.of("anotherTest"));, +	@Test, +	public void mixedCaseUserConfiguration() {, +, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisor.java, +import org.springframework.boot.actuate.endpoint.EndpointId;, +	private final Function<EndpointId, Long> endpointIdTimeToLive;, +	public CachingOperationInvokerAdvisor(, +			Function<EndpointId, Long> endpointIdTimeToLive) {, +		return apply(EndpointId.of(endpointId), operationType, parameters, invoker);, +	}, +, +	@Override, +	public OperationInvoker apply(EndpointId endpointId, OperationType operationType,, +			OperationParameters parameters, OperationInvoker invoker) {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/annotation/EndpointDiscovererTests.java, +				Function<EndpointId, Long> timeToLive) {]