[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setPersistSession(getSession().isPersistent());, +		/**, +		 * Persist session data between restarts., +		 */, +		private boolean persistent;, +, +		public boolean isPersistent() {, +			return this.persistent;, +		}, +, +		public void setPersistent(boolean persistent) {, +			this.persistent = persistent;, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setPersistSession(getSession().isPersistent());, +		/**, +		 * Persist session data between restarts., +		 */, +		private boolean persistent;, +, +		public boolean isPersistent() {, +			return this.persistent;, +		}, +, +		public void setPersistent(boolean persistent) {, +			this.persistent = persistent;, +		}, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.session.persistent= # true if session should be saved across restarts, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setPersistSession(getSession().isPersistent());, +		/**, +		 * Persist session data between restarts., +		 */, +		private boolean persistent;, +, +		public boolean isPersistent() {, +			return this.persistent;, +		}, +, +		public void setPersistent(boolean persistent) {, +			this.persistent = persistent;, +		}, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.session.persistent= # true if session should be saved across restarts, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +* `server.session.timeout` -- A session timeout., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setPersistSession(getSession().isPersistent());, +		/**, +		 * Persist session data between restarts., +		 */, +		private boolean persistent;, +, +		public boolean isPersistent() {, +			return this.persistent;, +		}, +, +		public void setPersistent(boolean persistent) {, +			this.persistent = persistent;, +		}, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.session.persistent= # true if session should be saved across restarts, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +* `server.session.timeout` -- A session timeout., +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer.java, +	private boolean persistSession;, +, +	public void setPersistSession(boolean persistSession) {, +		this.persistSession = persistSession;, +	}, +, +	public boolean isPersistSession() {, +		return this.persistSession;, +	}, +, +	@Override, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		container.setPersistSession(getSession().isPersistent());, +		/**, +		 * Persist session data between restarts., +		 */, +		private boolean persistent;, +, +		public boolean isPersistent() {, +			return this.persistent;, +		}, +, +		public void setPersistent(boolean persistent) {, +			this.persistent = persistent;, +		}, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.session.persistent= # true if session should be saved across restarts, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc]