[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getTimeZone() != null) {, +				builder.timeZone(this.jacksonProperties.getTimeZone());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getTimeZone() != null) {, +				builder.timeZone(this.jacksonProperties.getTimeZone());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +import java.util.TimeZone;, +	/**, +	 * Time zone used when formatting dates. Configured using any recognized time zone, +	 * identifier, for example "America/Los_Angeles" or "GMT+10"., +	 */, +	private TimeZone timeZone = null;, +, +	public TimeZone getTimeZone() {, +		return this.timeZone;, +	}, +, +	public void setTimeZone(TimeZone timeZone) {, +		this.timeZone = timeZone;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getTimeZone() != null) {, +				builder.timeZone(this.jacksonProperties.getTimeZone());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +import java.util.TimeZone;, +	/**, +	 * Time zone used when formatting dates. Configured using any recognized time zone, +	 * identifier, for example "America/Los_Angeles" or "GMT+10"., +	 */, +	private TimeZone timeZone = null;, +, +	public TimeZone getTimeZone() {, +		return this.timeZone;, +	}, +, +	public void setTimeZone(TimeZone timeZone) {, +		this.timeZone = timeZone;, +	}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +	@Test, +	public void customTimeZoneFormattingADateTime() throws JsonProcessingException {, +		this.context.register(JacksonAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.jackson.time-zone:America/Los_Angeles");, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.jackson.date-format:zzzz");, +		this.context.refresh();, +		ObjectMapper objectMapper = this.context.getBean(, +				Jackson2ObjectMapperBuilder.class).build();, +		DateTime dateTime = new DateTime(1436966242231L, DateTimeZone.UTC);, +		assertEquals("\"Pacific Daylight Time\"",, +				objectMapper.writeValueAsString(dateTime));, +	}, +, +	@Test, +	public void customTimeZoneFormattingADate() throws JsonProcessingException {, +		this.context.register(JacksonAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.jackson.time-zone:GMT+10");, +		EnvironmentTestUtils.addEnvironment(this.context, "spring.jackson.date-format:z");, +		this.context.refresh();, +		ObjectMapper objectMapper = this.context.getBean(, +				Jackson2ObjectMapperBuilder.class).build();, +		Date date = new Date(1436966242231L);, +		assertEquals("\"GMT+10:00\"", objectMapper.writeValueAsString(date));, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getTimeZone() != null) {, +				builder.timeZone(this.jacksonProperties.getTimeZone());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +import java.util.TimeZone;, +	/**, +	 * Time zone used when formatting dates. Configured using any recognized time zone, +	 * identifier, for example "America/Los_Angeles" or "GMT+10"., +	 */, +	private TimeZone timeZone = null;, +, +	public TimeZone getTimeZone() {, +		return this.timeZone;, +	}, +, +	public void setTimeZone(TimeZone timeZone) {, +		this.timeZone = timeZone;, +	}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +	@Test, +	public void customTimeZoneFormattingADateTime() throws JsonProcessingException {, +		this.context.register(JacksonAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.jackson.time-zone:America/Los_Angeles");, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.jackson.date-format:zzzz");, +		this.context.refresh();, +		ObjectMapper objectMapper = this.context.getBean(]