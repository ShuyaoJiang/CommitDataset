[+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	/**, +	 * Returns {@link ApplicationContextInitializer} loaded via the, +	 * {@link SpringFactoriesLoader}. Subclasses can override this method to modify, +	 * default initializers if necessary., +	 */, +	protected Collection<ApplicationContextInitializer<?>> getSpringFactoriesApplicationContextInitializers() {, +		callNonEnvironmentAwareSpringApplicationInitializers(args);, +		callEnvironmentAwareSpringApplicationInitializers(args, environment);, +	private void callNonEnvironmentAwareSpringApplicationInitializers(String[] args) {, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +	private void callEnvironmentAwareSpringApplicationInitializers(String[] args,, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	/**, +	 * Returns {@link ApplicationContextInitializer} loaded via the, +	 * {@link SpringFactoriesLoader}. Subclasses can override this method to modify, +	 * default initializers if necessary., +	 */, +	protected Collection<ApplicationContextInitializer<?>> getSpringFactoriesApplicationContextInitializers() {, +		callNonEnvironmentAwareSpringApplicationInitializers(args);, +		callEnvironmentAwareSpringApplicationInitializers(args, environment);, +	private void callNonEnvironmentAwareSpringApplicationInitializers(String[] args) {, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +	private void callEnvironmentAwareSpringApplicationInitializers(String[] args,, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationInitializer.java, +	 * @param args the run arguments, +	void initialize(SpringApplication springApplication, String[] args);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	/**, +	 * Returns {@link ApplicationContextInitializer} loaded via the, +	 * {@link SpringFactoriesLoader}. Subclasses can override this method to modify, +	 * default initializers if necessary., +	 */, +	protected Collection<ApplicationContextInitializer<?>> getSpringFactoriesApplicationContextInitializers() {, +		callNonEnvironmentAwareSpringApplicationInitializers(args);, +		callEnvironmentAwareSpringApplicationInitializers(args, environment);, +	private void callNonEnvironmentAwareSpringApplicationInitializers(String[] args) {, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +	private void callEnvironmentAwareSpringApplicationInitializers(String[] args,, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationInitializer.java, +	 * @param args the run arguments, +	void initialize(SpringApplication springApplication, String[] args);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/ConfigFileApplicationContextInitializer.java, +	public void initialize(SpringApplication springApplication, String[] args) {, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	/**, +	 * Returns {@link ApplicationContextInitializer} loaded via the, +	 * {@link SpringFactoriesLoader}. Subclasses can override this method to modify, +	 * default initializers if necessary., +	 */, +	protected Collection<ApplicationContextInitializer<?>> getSpringFactoriesApplicationContextInitializers() {, +		callNonEnvironmentAwareSpringApplicationInitializers(args);, +		callEnvironmentAwareSpringApplicationInitializers(args, environment);, +	private void callNonEnvironmentAwareSpringApplicationInitializers(String[] args) {, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +	private void callEnvironmentAwareSpringApplicationInitializers(String[] args,, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationInitializer.java, +	 * @param args the run arguments, +	void initialize(SpringApplication springApplication, String[] args);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/ConfigFileApplicationContextInitializer.java, +	public void initialize(SpringApplication springApplication, String[] args) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/EnvironmentDelegateApplicationContextInitializer.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	/**, +	 * Returns {@link ApplicationContextInitializer} loaded via the, +	 * {@link SpringFactoriesLoader}. Subclasses can override this method to modify, +	 * default initializers if necessary., +	 */, +	protected Collection<ApplicationContextInitializer<?>> getSpringFactoriesApplicationContextInitializers() {, +		callNonEnvironmentAwareSpringApplicationInitializers(args);, +		callEnvironmentAwareSpringApplicationInitializers(args, environment);, +	private void callNonEnvironmentAwareSpringApplicationInitializers(String[] args) {, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +	private void callEnvironmentAwareSpringApplicationInitializers(String[] args,, +				((SpringApplicationInitializer) initializer).initialize(this, args);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationInitializer.java, +	 * @param args the run arguments, +	void initialize(SpringApplication springApplication, String[] args);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/ConfigFileApplicationContextInitializer.java, +	public void initialize(SpringApplication springApplication, String[] args) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/EnvironmentDelegateApplicationContextInitializer.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/LoggingApplicationContextInitializer.java, +	public void initialize(SpringApplication springApplication, String[] args) {]