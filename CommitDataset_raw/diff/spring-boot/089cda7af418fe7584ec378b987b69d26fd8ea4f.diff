[+++ b/.gitignore, +.factorypath, +++ b/.gitignore, +.factorypath, +++ b/.settings-template.xml, +	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0, +                      http://maven.apache.org/xsd/settings-1.0.0.xsd">, +++ b/.gitignore, +.factorypath, +++ b/.settings-template.xml, +	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0, +                      http://maven.apache.org/xsd/settings-1.0.0.xsd">, +++ b/.travis.yml, +services: mongodb, +, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P spring-snapshot, +++ b/.gitignore, +.factorypath, +++ b/.settings-template.xml, +	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0, +                      http://maven.apache.org/xsd/settings-1.0.0.xsd">, +++ b/.travis.yml, +services: mongodb, +, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P spring-snapshot, +++ b/CONTRIBUTING.adoc, +Spring Boot is released under the non-restrictive Apache 2.0 license. If you would like, +to contribute something, or simply want to hack on the code this document should help, +you get started., +given the ability to merge pull requests., +* Use the Spring Framework code format conventions. Import `eclipse-code-formatter.xml`, +  from the `eclipse` folder of the project if you are using Eclipse. If using IntelliJ,, +  copy `spring-intellij-code-style.xml` to `~/.IntelliJIdea*/config/codestyles` and select, +  spring-intellij-code-style from Settings -> Code Styles., +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.0.6 or above and JDK 1.7., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m -XX:MaxPermSize=128m`, +	$ mvn -P snapshot,prepare install, +	$ cd spring-boot-full-build, +	$ mvn -s ../settings.xml -P full clean install, +We generate more artifacts when running the full build (such as Javadoc jars), so you, +may find the process a little slower than the standard build., +* Select `org.eclipse.m2e.maveneclipse.site-0.0.1-SNAPSHOT-site.zip` from the `eclipse`, +  folder in this checkout, +changes just won't be automatically formatted._, +If you prefer not to use m2eclipse you can generate eclipse project meta-data using the, +Maven is well supported by most Java IDEs. Refer to you vendor documentation., +++ b/.gitignore, +.factorypath, +++ b/.settings-template.xml, +	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0, +                      http://maven.apache.org/xsd/settings-1.0.0.xsd">, +++ b/.travis.yml, +services: mongodb, +, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P spring-snapshot, +++ b/CONTRIBUTING.adoc, +Spring Boot is released under the non-restrictive Apache 2.0 license. If you would like, +to contribute something, or simply want to hack on the code this document should help, +you get started., +given the ability to merge pull requests., +* Use the Spring Framework code format conventions. Import `eclipse-code-formatter.xml`, +  from the `eclipse` folder of the project if you are using Eclipse. If using IntelliJ,, +  copy `spring-intellij-code-style.xml` to `~/.IntelliJIdea*/config/codestyles` and select, +  spring-intellij-code-style from Settings -> Code Styles., +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.0.6 or above and JDK 1.7., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m -XX:MaxPermSize=128m`, +	$ mvn -P snapshot,prepare install, +	$ cd spring-boot-full-build, +	$ mvn -s ../settings.xml -P full clean install, +We generate more artifacts when running the full build (such as Javadoc jars), so you, +may find the process a little slower than the standard build., +* Select `org.eclipse.m2e.maveneclipse.site-0.0.1-SNAPSHOT-site.zip` from the `eclipse`, +  folder in this checkout, +changes just won't be automatically formatted._, +If you prefer not to use m2eclipse you can generate eclipse project meta-data using the, +Maven is well supported by most Java IDEs. Refer to you vendor documentation., +++ /dev/null, +++ b/.gitignore, +.factorypath, +++ b/.settings-template.xml, +	xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0, +                      http://maven.apache.org/xsd/settings-1.0.0.xsd">, +++ b/.travis.yml, +services: mongodb, +, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P spring-snapshot, +++ b/CONTRIBUTING.adoc, +Spring Boot is released under the non-restrictive Apache 2.0 license. If you would like, +to contribute something, or simply want to hack on the code this document should help, +you get started., +given the ability to merge pull requests., +* Use the Spring Framework code format conventions. Import `eclipse-code-formatter.xml`, +  from the `eclipse` folder of the project if you are using Eclipse. If using IntelliJ,, +  copy `spring-intellij-code-style.xml` to `~/.IntelliJIdea*/config/codestyles` and select, +  spring-intellij-code-style from Settings -> Code Styles., +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.0.6 or above and JDK 1.7., +a `MAVEN_OPTS` environment variable with the value `-Xmx512m -XX:MaxPermSize=128m`, +	$ mvn -P snapshot,prepare install, +	$ cd spring-boot-full-build, +	$ mvn -s ../settings.xml -P full clean install]