[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +public abstract class AbstractRabbitListenerContainerFactoryConfigurer<T extends AbstractRabbitListenerContainerFactory<?>> {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +public abstract class AbstractRabbitListenerContainerFactoryConfigurer<T extends AbstractRabbitListenerContainerFactory<?>> {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, + * Configure {@link DirectRabbitListenerContainerFactoryConfigurer} with sensible, + * defaults., +public final class DirectRabbitListenerContainerFactoryConfigurer extends, +		AbstractRabbitListenerContainerFactoryConfigurer<DirectRabbitListenerContainerFactory> {, +	public void configure(DirectRabbitListenerContainerFactory factory,, +			ConnectionFactory connectionFactory) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +public abstract class AbstractRabbitListenerContainerFactoryConfigurer<T extends AbstractRabbitListenerContainerFactory<?>> {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, + * Configure {@link DirectRabbitListenerContainerFactoryConfigurer} with sensible, + * defaults., +public final class DirectRabbitListenerContainerFactoryConfigurer extends, +		AbstractRabbitListenerContainerFactoryConfigurer<DirectRabbitListenerContainerFactory> {, +	public void configure(DirectRabbitListenerContainerFactory factory,, +			ConnectionFactory connectionFactory) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration.java, +		DirectRabbitListenerContainerFactoryConfigurer configurer = new DirectRabbitListenerContainerFactoryConfigurer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +public abstract class AbstractRabbitListenerContainerFactoryConfigurer<T extends AbstractRabbitListenerContainerFactory<?>> {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, + * Configure {@link DirectRabbitListenerContainerFactoryConfigurer} with sensible, + * defaults., +public final class DirectRabbitListenerContainerFactoryConfigurer extends, +		AbstractRabbitListenerContainerFactoryConfigurer<DirectRabbitListenerContainerFactory> {, +	public void configure(DirectRabbitListenerContainerFactory factory,, +			ConnectionFactory connectionFactory) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration.java, +		DirectRabbitListenerContainerFactoryConfigurer configurer = new DirectRabbitListenerContainerFactoryConfigurer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		 * Legacy container where the RabbitMQ consumer dispatches messages to an invoker, +		 * thread., +		 * Number of messages to be processed in a transaction; number of messages between, +		 * acks. For best results it should be less than or equal to the prefetch count., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/AbstractRabbitListenerContainerFactoryConfigurer.java, +public abstract class AbstractRabbitListenerContainerFactoryConfigurer<T extends AbstractRabbitListenerContainerFactory<?>> {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/DirectRabbitListenerContainerFactoryConfigurer.java, + * Configure {@link DirectRabbitListenerContainerFactoryConfigurer} with sensible, + * defaults., +public final class DirectRabbitListenerContainerFactoryConfigurer extends, +		AbstractRabbitListenerContainerFactoryConfigurer<DirectRabbitListenerContainerFactory> {, +	public void configure(DirectRabbitListenerContainerFactory factory,, +			ConnectionFactory connectionFactory) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration.java, +		DirectRabbitListenerContainerFactoryConfigurer configurer = new DirectRabbitListenerContainerFactoryConfigurer();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +		 * Legacy container where the RabbitMQ consumer dispatches messages to an invoker, +		 * thread., +		 * Number of messages to be processed in a transaction; number of messages between, +		 * acks. For best results it should be less than or equal to the prefetch count., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/SimpleRabbitListenerContainerFactoryConfigurer.java, + * Configure {@link SimpleRabbitListenerContainerFactoryConfigurer} with sensible, + * defaults., +public final class SimpleRabbitListenerContainerFactoryConfigurer extends, +		AbstractRabbitListenerContainerFactoryConfigurer<SimpleRabbitListenerContainerFactory> {, +	public void configure(SimpleRabbitListenerContainerFactory factory,, +			ConnectionFactory connectionFactory) {]