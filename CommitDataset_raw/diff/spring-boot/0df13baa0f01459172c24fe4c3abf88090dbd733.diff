[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerJwkConfiguration.java, +	private final OAuth2ResourceServerProperties.Jwt properties;, +		this.properties = properties.getJwt();, +		return new NimbusJwtDecoderJwkSupport(this.properties.getJwkSetUri(),, +				this.properties.getJwsAlgorithm());, +		return JwtDecoders.fromOidcIssuerLocation(this.properties.getIssuerUri());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerJwkConfiguration.java, +	private final OAuth2ResourceServerProperties.Jwt properties;, +		this.properties = properties.getJwt();, +		return new NimbusJwtDecoderJwkSupport(this.properties.getJwkSetUri(),, +				this.properties.getJwsAlgorithm());, +		return JwtDecoders.fromOidcIssuerLocation(this.properties.getIssuerUri());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfigurationTests.java, +					assertThat(context.getBean(JwtDecoder.class)), +							.isInstanceOf(NimbusJwtDecoderJwkSupport.class);, +	public void autoConfigurationShouldMatchDefaultJwsAlgorithm() {, +		this.contextRunner.withPropertyValues(, +				"spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://jwk-set-uri.com"), +				.run((context) -> {, +					JwtDecoder jwtDecoder = context.getBean(JwtDecoder.class);, +					assertThat(jwtDecoder).hasFieldOrPropertyWithValue("jwsAlgorithm",, +							JWSAlgorithm.RS256);, +				});, +	}, +, +	@Test, +	public void autoConfigurationShouldConfigureResourceServerWithJwsAlgorithm() {, +					assertThat(jwtDecoder).hasFieldOrPropertyWithValue("jwsAlgorithm",, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerJwkConfiguration.java, +	private final OAuth2ResourceServerProperties.Jwt properties;, +		this.properties = properties.getJwt();, +		return new NimbusJwtDecoderJwkSupport(this.properties.getJwkSetUri(),, +				this.properties.getJwsAlgorithm());, +		return JwtDecoders.fromOidcIssuerLocation(this.properties.getIssuerUri());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfigurationTests.java, +					assertThat(context.getBean(JwtDecoder.class)), +							.isInstanceOf(NimbusJwtDecoderJwkSupport.class);, +	public void autoConfigurationShouldMatchDefaultJwsAlgorithm() {, +		this.contextRunner.withPropertyValues(, +				"spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://jwk-set-uri.com"), +				.run((context) -> {, +					JwtDecoder jwtDecoder = context.getBean(JwtDecoder.class);, +					assertThat(jwtDecoder).hasFieldOrPropertyWithValue("jwsAlgorithm",, +							JWSAlgorithm.RS256);, +				});, +	}, +, +	@Test, +	public void autoConfigurationShouldConfigureResourceServerWithJwsAlgorithm() {, +					assertThat(jwtDecoder).hasFieldOrPropertyWithValue("jwsAlgorithm",, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +    spring.security.oauth2.resourceserver.jwt.jws-algorithm=RS256 # JSON Web Algorithm used for verifying the digital signatures.]