[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsWebEndpointExtension.java, +			return new WebEndpointResponse<>(WebEndpointResponse.BAD_REQUEST_STATUS);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsWebEndpointExtension.java, +			return new WebEndpointResponse<>(WebEndpointResponse.BAD_REQUEST_STATUS);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebEndpointResponse.java, + * @author Vedran Pavic, +	/**, +	 * {@code 200 OK}., +	 */, +	public static final int OK_STATUS = 200;, +, +	/**, +	 * {@code 400 Bad Request}., +	 */, +	public static final int BAD_REQUEST_STATUS = 400;, +, +	/**, +	 * {@code 429 Too Many Requests}., +	 */, +	public static final int TOO_MANY_REQUESTS_STATUS = 429;, +, +	/**, +	 * {@code 500 Internal Server Error}., +	 */, +	public static final int INTERNAL_SERVER_ERROR_STATUS = 500;, +, +	/**, +	 * {@code 503 Service Unavailable}., +	 */, +	public static final int SERVICE_UNAVAILABLE_STATUS = 503;, +, +		this(body, OK_STATUS);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsWebEndpointExtension.java, +			return new WebEndpointResponse<>(WebEndpointResponse.BAD_REQUEST_STATUS);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebEndpointResponse.java, + * @author Vedran Pavic, +	/**, +	 * {@code 200 OK}., +	 */, +	public static final int OK_STATUS = 200;, +, +	/**, +	 * {@code 400 Bad Request}., +	 */, +	public static final int BAD_REQUEST_STATUS = 400;, +, +	/**, +	 * {@code 429 Too Many Requests}., +	 */, +	public static final int TOO_MANY_REQUESTS_STATUS = 429;, +, +	/**, +	 * {@code 500 Internal Server Error}., +	 */, +	public static final int INTERNAL_SERVER_ERROR_STATUS = 500;, +, +	/**, +	 * {@code 503 Service Unavailable}., +	 */, +	public static final int SERVICE_UNAVAILABLE_STATUS = 503;, +, +		this(body, OK_STATUS);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthStatusHttpMapper.java, +import org.springframework.boot.actuate.endpoint.web.WebEndpointResponse;, +		addStatusMapping(Status.DOWN, WebEndpointResponse.SERVICE_UNAVAILABLE_STATUS);, +		addStatusMapping(Status.OUT_OF_SERVICE,, +				WebEndpointResponse.SERVICE_UNAVAILABLE_STATUS);, +					.map(this.statusMapping::get).findFirst(), +					.orElse(WebEndpointResponse.OK_STATUS);, +		return WebEndpointResponse.OK_STATUS;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/audit/AuditEventsWebEndpointExtension.java, +			return new WebEndpointResponse<>(WebEndpointResponse.BAD_REQUEST_STATUS);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebEndpointResponse.java, + * @author Vedran Pavic, +	/**, +	 * {@code 200 OK}., +	 */, +	public static final int OK_STATUS = 200;, +, +	/**, +	 * {@code 400 Bad Request}., +	 */, +	public static final int BAD_REQUEST_STATUS = 400;, +, +	/**, +	 * {@code 429 Too Many Requests}., +	 */, +	public static final int TOO_MANY_REQUESTS_STATUS = 429;, +, +	/**, +	 * {@code 500 Internal Server Error}., +	 */, +	public static final int INTERNAL_SERVER_ERROR_STATUS = 500;, +, +	/**, +	 * {@code 503 Service Unavailable}., +	 */, +	public static final int SERVICE_UNAVAILABLE_STATUS = 503;, +, +		this(body, OK_STATUS);]