[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +import org.springframework.context.annotation.Import;, +import org.springframework.jms.annotation.JmsBootstrapConfiguration;, +import org.springframework.jms.config.JmsListenerConfigUtils;, +@Import(JmsBootstrapConfiguration.class), +	@EnableJms, +	@ConditionalOnMissingBean(name = JmsListenerConfigUtils.JMS_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME), +	protected static class EnableJmsConfiguration {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +import org.springframework.context.annotation.Import;, +import org.springframework.jms.annotation.JmsBootstrapConfiguration;, +import org.springframework.jms.config.JmsListenerConfigUtils;, +@Import(JmsBootstrapConfiguration.class), +	@EnableJms, +	@ConditionalOnMissingBean(name = JmsListenerConfigUtils.JMS_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME), +	protected static class EnableJmsConfiguration {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsAutoConfigurationTests.java, +import org.springframework.jms.config.JmsListenerConfigUtils;, +		assertTrue("listener container factory should be created by default",, +	@Test, +	public void enableJmsAutomatically() throws Exception {, +		load(NoEnableJmsConfiguration.class);, +		AnnotationConfigApplicationContext ctx = this.context;, +		ctx.getBean(JmsListenerConfigUtils.JMS_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME);, +		ctx.getBean(JmsListenerConfigUtils.JMS_LISTENER_ENDPOINT_REGISTRY_BEAN_NAME);, +	}, +, +, +, +	@Configuration, +	protected static class NoEnableJmsConfiguration {, +	}, +]