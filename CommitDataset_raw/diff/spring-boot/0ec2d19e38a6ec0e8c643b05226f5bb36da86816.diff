[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			resolver.setCharacterEncoding(this.environment.getProperty("encoding",, +					"UTF-8"));, +	protected static class ThymeleafViewResolverConfiguration implements EnvironmentAware {, +, +		private RelaxedPropertyResolver environment;, +, +		@Override, +		public void setEnvironment(Environment environment) {, +			this.environment = new RelaxedPropertyResolver(environment,, +					"spring.thymeleaf.");, +		}, +			resolver.setCharacterEncoding(this.environment.getProperty("encoding",, +					"UTF-8"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			resolver.setCharacterEncoding(this.environment.getProperty("encoding",, +					"UTF-8"));, +	protected static class ThymeleafViewResolverConfiguration implements EnvironmentAware {, +, +		private RelaxedPropertyResolver environment;, +, +		@Override, +		public void setEnvironment(Environment environment) {, +			this.environment = new RelaxedPropertyResolver(environment,, +					"spring.thymeleaf.");, +		}, +			resolver.setCharacterEncoding(this.environment.getProperty("encoding",, +					"UTF-8"));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfigurationTests.java, +import org.thymeleaf.templateresolver.ITemplateResolver;, +import org.thymeleaf.templateresolver.TemplateResolver;, +	public void overrideCharacterEncoding() throws Exception {, +		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +		context.register(ThymeleafAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		Map<String, Object> map = new HashMap<String, Object>();, +		map.put("spring.thymeleaf.encoding", "UTF-16");, +		context.getEnvironment().getPropertySources(), +				.addFirst(new MapPropertySource("test", map));, +		context.refresh();, +		context.getBean(TemplateEngine.class).initialize();, +		ITemplateResolver resolver = context.getBean(ITemplateResolver.class);, +		assertTrue(resolver instanceof TemplateResolver);, +		assertEquals("UTF-16", ((TemplateResolver) resolver).getCharacterEncoding());, +		ThymeleafViewResolver views = context.getBean(ThymeleafViewResolver.class);, +		assertEquals("UTF-16", views.getCharacterEncoding());, +		context.close();, +	}, +, +	@Test]