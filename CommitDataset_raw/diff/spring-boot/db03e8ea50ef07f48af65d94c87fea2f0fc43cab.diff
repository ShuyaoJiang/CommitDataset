[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = Collections.emptyMap();, +		Map<String, GaugeWriter> writers = new HashMap<String, GaugeWriter>();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = Collections.emptyMap();, +		Map<String, GaugeWriter> writers = new HashMap<String, GaugeWriter>();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricExporters.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = new HashMap<String, GaugeWriter>();, +	public void setWriters(Map<String, GaugeWriter> writers) {, +		for (Entry<String, GaugeWriter> entry : this.writers.entrySet()) {, +			GaugeWriter writer = entry.getValue();, +	private MetricCopyExporter getExporter(GaugeWriter writer,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = Collections.emptyMap();, +		Map<String, GaugeWriter> writers = new HashMap<String, GaugeWriter>();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricExporters.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = new HashMap<String, GaugeWriter>();, +	public void setWriters(Map<String, GaugeWriter> writers) {, +		for (Entry<String, GaugeWriter> entry : this.writers.entrySet()) {, +			GaugeWriter writer = entry.getValue();, +	private MetricCopyExporter getExporter(GaugeWriter writer,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/MetricExportersTests.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = new LinkedHashMap<String, GaugeWriter>();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = Collections.emptyMap();, +		Map<String, GaugeWriter> writers = new HashMap<String, GaugeWriter>();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricExporters.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = new HashMap<String, GaugeWriter>();, +	public void setWriters(Map<String, GaugeWriter> writers) {, +		for (Entry<String, GaugeWriter> entry : this.writers.entrySet()) {, +			GaugeWriter writer = entry.getValue();, +	private MetricCopyExporter getExporter(GaugeWriter writer,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/MetricExportersTests.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	private Map<String, GaugeWriter> writers = new LinkedHashMap<String, GaugeWriter>();, +++ b/spring-boot-samples/spring-boot-sample-metrics-opentsdb/src/main/java/sample/metrics/opentsdb/SampleOpenTsdbExportApplication.java, +import org.springframework.boot.actuate.metrics.writer.GaugeWriter;, +	public GaugeWriter openTsdbMetricWriter() {]