[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +	public ManagementErrorEndpoint errorEndpoint(ServerProperties serverProperties,, +			final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(serverProperties.getError().getPath(), errorAttributes);, +			container.addErrorPages(new ErrorPage(this.server.getError().getPath()));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +	public ManagementErrorEndpoint errorEndpoint(ServerProperties serverProperties,, +			final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(serverProperties.getError().getPath(), errorAttributes);, +			container.addErrorPages(new ErrorPage(this.server.getError().getPath()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/BasicErrorController.java, + * Copyright 2012-2015 the original author or authors., +@RequestMapping("${server.error.path:${error.path:/error}}"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +	public ManagementErrorEndpoint errorEndpoint(ServerProperties serverProperties,, +			final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(serverProperties.getError().getPath(), errorAttributes);, +			container.addErrorPages(new ErrorPage(this.server.getError().getPath()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/BasicErrorController.java, + * Copyright 2012-2015 the original author or authors., +@RequestMapping("${server.error.path:${error.path:/error}}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +		return new BasicErrorController(errorAttributes, this.properties.getError());, +				+ this.properties.getError().getPath()));, +	@ConditionalOnProperty(prefix = "server.error.whitelabel", name = "enabled", matchIfMissing = true), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +	public ManagementErrorEndpoint errorEndpoint(ServerProperties serverProperties,, +			final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(serverProperties.getError().getPath(), errorAttributes);, +			container.addErrorPages(new ErrorPage(this.server.getError().getPath()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/BasicErrorController.java, + * Copyright 2012-2015 the original author or authors., +@RequestMapping("${server.error.path:${error.path:/error}}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +		return new BasicErrorController(errorAttributes, this.properties.getError());, +				+ this.properties.getError().getPath()));, +	@ConditionalOnProperty(prefix = "server.error.whitelabel", name = "enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${error.path:/error}"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +	public ManagementErrorEndpoint errorEndpoint(ServerProperties serverProperties,, +			final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(serverProperties.getError().getPath(), errorAttributes);, +			container.addErrorPages(new ErrorPage(this.server.getError().getPath()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/BasicErrorController.java, + * Copyright 2012-2015 the original author or authors., +@RequestMapping("${server.error.path:${error.path:/error}}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +		return new BasicErrorController(errorAttributes, this.properties.getError());, +				+ this.properties.getError().getPath()));, +	@ConditionalOnProperty(prefix = "server.error.whitelabel", name = "enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${error.path:/error}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	@NestedConfigurationProperty, +	private ErrorProperties error = new ErrorProperties();, +, +	public ErrorProperties getError() {, +		return this.error;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +	public ManagementErrorEndpoint errorEndpoint(ServerProperties serverProperties,, +			final ErrorAttributes errorAttributes) {, +		return new ManagementErrorEndpoint(serverProperties.getError().getPath(), errorAttributes);, +			container.addErrorPages(new ErrorPage(this.server.getError().getPath()));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/BasicErrorController.java, + * Copyright 2012-2015 the original author or authors., +@RequestMapping("${server.error.path:${error.path:/error}}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +		return new BasicErrorController(errorAttributes, this.properties.getError());, +				+ this.properties.getError().getPath()));, +	@ConditionalOnProperty(prefix = "server.error.whitelabel", name = "enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${error.path:/error}"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	@NestedConfigurationProperty, +	private ErrorProperties error = new ErrorProperties();, +, +	public ErrorProperties getError() {, +		return this.error;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "error.path",, +    "type": "java.lang.String",, +    "description": "Path of the error controller.",, +    "deprecation": {, +      "replacement": "server.error.path", +    }, +  },, +  {, +    "name": "server.error.whitelabel.enabled",]