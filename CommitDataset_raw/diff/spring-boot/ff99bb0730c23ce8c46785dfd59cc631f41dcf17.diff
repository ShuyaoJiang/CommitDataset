[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +import org.apache.catalina.Context;, +			ClassLoader classLoader = findContext().getLoader().getClassLoader();, +			Thread.currentThread().setContextClassLoader(classLoader);, +, +	private Context findContext() {, +		for (Container child : this.tomcat.getHost().findChildren()) {, +			if (child instanceof Context) {, +				return (Context) child;, +			}, +		}, +		throw new IllegalStateException("The host does not contain a Context");, +	}, +, +			if (Thread.currentThread(), +					.getContextClassLoader() instanceof TomcatEmbeddedWebappClassLoader) {, +				Thread.currentThread().setContextClassLoader(getClass().getClassLoader());, +			}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +import org.apache.catalina.Context;, +			ClassLoader classLoader = findContext().getLoader().getClassLoader();, +			Thread.currentThread().setContextClassLoader(classLoader);, +, +	private Context findContext() {, +		for (Container child : this.tomcat.getHost().findChildren()) {, +			if (child instanceof Context) {, +				return (Context) child;, +			}, +		}, +		throw new IllegalStateException("The host does not contain a Context");, +	}, +, +			if (Thread.currentThread(), +					.getContextClassLoader() instanceof TomcatEmbeddedWebappClassLoader) {, +				Thread.currentThread().setContextClassLoader(getClass().getClassLoader());, +			}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java, +import org.junit.After;, +	@After, +	public void restoreTccl() {, +		Thread.currentThread().setContextClassLoader(getClass().getClassLoader());, +	}, +, +	@Test, +	public void tcclOfMainThreadIsTomcatWebAppClassLoader() {, +		Thread.currentThread().setContextClassLoader(getClass().getClassLoader());, +		TomcatEmbeddedServletContainerFactory factory = getFactory();, +		this.container = factory.getEmbeddedServletContainer();, +		this.container.start();, +		assertThat(Thread.currentThread().getContextClassLoader()), +				.isInstanceOf(TomcatEmbeddedWebappClassLoader.class);, +		this.container.stop();, +	}, +]