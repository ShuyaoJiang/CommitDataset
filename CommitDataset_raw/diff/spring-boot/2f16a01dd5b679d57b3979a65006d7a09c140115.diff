[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/EnvironmentEndpointTests.java, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.amqp-free.credentials.uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("credentials.http_api_uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.cleardb-free.credentials"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("foo.mycredentials.uri"));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/EnvironmentEndpointTests.java, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.amqp-free.credentials.uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("credentials.http_api_uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.cleardb-free.credentials"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("foo.mycredentials.uri"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.java, +import org.springframework.beans.BeanUtils;, +import com.mongodb.DB;, +import com.mongodb.Mongo;, +import com.mongodb.MongoClient;, +, +		Class<? extends FieldNamingStrategy> strategyClass = this.properties, +				.getFieldNamingStrategy();, +		if (strategyClass != null) {, +			context.setFieldNamingStrategy(BeanUtils.instantiate(strategyClass));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/EnvironmentEndpointTests.java, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.amqp-free.credentials.uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("credentials.http_api_uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.cleardb-free.credentials"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("foo.mycredentials.uri"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.java, +import org.springframework.beans.BeanUtils;, +import com.mongodb.DB;, +import com.mongodb.Mongo;, +import com.mongodb.MongoClient;, +, +		Class<? extends FieldNamingStrategy> strategyClass = this.properties, +				.getFieldNamingStrategy();, +		if (strategyClass != null) {, +			context.setFieldNamingStrategy(BeanUtils.instantiate(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoProperties.java, +	public void setFieldNamingStrategy(, +			Class<? extends FieldNamingStrategy> fieldNamingStrategy) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/EnvironmentEndpointTests.java, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.amqp-free.credentials.uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("credentials.http_api_uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.cleardb-free.credentials"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("foo.mycredentials.uri"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.java, +import org.springframework.beans.BeanUtils;, +import com.mongodb.DB;, +import com.mongodb.Mongo;, +import com.mongodb.MongoClient;, +, +		Class<? extends FieldNamingStrategy> strategyClass = this.properties, +				.getFieldNamingStrategy();, +		if (strategyClass != null) {, +			context.setFieldNamingStrategy(BeanUtils.instantiate(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoProperties.java, +	public void setFieldNamingStrategy(, +			Class<? extends FieldNamingStrategy> fieldNamingStrategy) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/JspTemplateAvailabilityProvider.java, +			String prefix = getProperty(environment, "spring.mvc.view.prefix",, +					"spring.view.prefix", WebMvcAutoConfiguration.DEFAULT_PREFIX);, +			String suffix = getProperty(environment, "spring.mvc.view.suffix",, +					"spring.view.suffix", WebMvcAutoConfiguration.DEFAULT_SUFFIX);, +	private String getProperty(Environment environment, String key, String deprecatedKey,, +			String defaultValue) {, +		return environment.getProperty(deprecatedKey, defaultValue);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/EnvironmentEndpointTests.java, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.amqp-free.credentials.uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("credentials.http_api_uri"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("my.services.cleardb-free.credentials"));, +				((Map<String, Object>) env.get("systemProperties")), +						.get("foo.mycredentials.uri"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoDataAutoConfiguration.java, +import org.springframework.beans.BeanUtils;, +import com.mongodb.DB;, +import com.mongodb.Mongo;, +import com.mongodb.MongoClient;, +, +		Class<? extends FieldNamingStrategy> strategyClass = this.properties, +				.getFieldNamingStrategy();, +		if (strategyClass != null) {, +			context.setFieldNamingStrategy(BeanUtils.instantiate(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoProperties.java]