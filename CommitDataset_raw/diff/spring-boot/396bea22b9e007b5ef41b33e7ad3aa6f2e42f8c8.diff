[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +		public ParameterNamesModule parameterNamesModule() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +		public ParameterNamesModule parameterNamesModule() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, + * configuration also secures all web endpoints (except some well-known static resource, + * locations) with HTTP basic security. To replace all the default behaviours in a webapp, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +		public ParameterNamesModule parameterNamesModule() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, + * configuration also secures all web endpoints (except some well-known static resource, + * locations) with HTTP basic security. To replace all the default behaviours in a webapp, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/MixedMongoRepositoriesAutoConfigurationTests.java, +	// In this one the Jpa repositories and the auto-configuration packages overlap, so, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +		public ParameterNamesModule parameterNamesModule() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, + * configuration also secures all web endpoints (except some well-known static resource, + * locations) with HTTP basic security. To replace all the default behaviours in a webapp, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/MixedMongoRepositoriesAutoConfigurationTests.java, +	// In this one the Jpa repositories and the auto-configuration packages overlap, so, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  console of all the auto-configuration decisions that were made in your app. In a running, +	public class AuthenticationManagerConfiguration extends GlobalAuthenticationConfigurerAdapter {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +		public ParameterNamesModule parameterNamesModule() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, + * configuration also secures all web endpoints (except some well-known static resource, + * locations) with HTTP basic security. To replace all the default behaviours in a webapp, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/MixedMongoRepositoriesAutoConfigurationTests.java, +	// In this one the Jpa repositories and the auto-configuration packages overlap, so, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  console of all the auto-configuration decisions that were made in your app. In a running, +	public class AuthenticationManagerConfiguration extends GlobalAuthenticationConfigurerAdapter {, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +those values (so you can use anything that is legal in a URL path). For example, to change, +that the `root` URL returned `HTTP 401` (unauthorized) `4` times. The double asterisks (`star-star`), +[[production-ready-metric-writers-export-to-open-tsdb]], +If you provide a `@Bean` of type `OpenTsdbMetricWriter` and mark it, +aggregation. The `OpenTsdbMetricWriter` has a `url` property that you need to set, +the local server (the `MBeanExporter` is provided by Spring Boot JMX auto-configuration as, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +		public ParameterNamesModule parameterNamesModule() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, + * configuration also secures all web endpoints (except some well-known static resource, + * locations) with HTTP basic security. To replace all the default behaviours in a webapp, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/MixedMongoRepositoriesAutoConfigurationTests.java, +	// In this one the Jpa repositories and the auto-configuration packages overlap, so, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  console of all the auto-configuration decisions that were made in your app. In a running, +	public class AuthenticationManagerConfiguration extends GlobalAuthenticationConfigurerAdapter {, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +those values (so you can use anything that is legal in a URL path). For example, to change, +that the `root` URL returned `HTTP 401` (unauthorized) `4` times. The double asterisks (`star-star`), +[[production-ready-metric-writers-export-to-open-tsdb]], +If you provide a `@Bean` of type `OpenTsdbMetricWriter` and mark it, +aggregation. The `OpenTsdbMetricWriter` has a `url` property that you need to set, +the local server (the `MBeanExporter` is provided by Spring Boot JMX auto-configuration as, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +	public static final String REGISTER_SHUTDOWN_HOOK_PROPERTY = "logging.register-shutdown-hook";, +				.getProperty(REGISTER_SHUTDOWN_HOOK_PROPERTY, Boolean.class, false);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +		public ParameterNamesModule parameterNamesModule() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfiguration.java, + * configuration also secures all web endpoints (except some well-known static resource, + * locations) with HTTP basic security. To replace all the default behaviours in a webapp, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/mongo/MixedMongoRepositoriesAutoConfigurationTests.java, +	// In this one the Jpa repositories and the auto-configuration packages overlap, so, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +  console of all the auto-configuration decisions that were made in your app. In a running, +	public class AuthenticationManagerConfiguration extends GlobalAuthenticationConfigurerAdapter {, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +those values (so you can use anything that is legal in a URL path). For example, to change, +that the `root` URL returned `HTTP 401` (unauthorized) `4` times. The double asterisks (`star-star`), +[[production-ready-metric-writers-export-to-open-tsdb]], +If you provide a `@Bean` of type `OpenTsdbMetricWriter` and mark it, +aggregation. The `OpenTsdbMetricWriter` has a `url` property that you need to set, +the local server (the `MBeanExporter` is provided by Spring Boot JMX auto-configuration as, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +	public static final String REGISTER_SHUTDOWN_HOOK_PROPERTY = "logging.register-shutdown-hook";, +				.getProperty(REGISTER_SHUTDOWN_HOOK_PROPERTY, Boolean.class, false);, +++ b/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityScan.java, +	 * @return classes from the base packages to scan]