[+++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(dataSource);, +			Statement statement = configureDataSourceBehavior(dataSource);, +	protected final Statement configureDataSourceBehavior(DataSource dataSource), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(dataSource);, +			Statement statement = configureDataSourceBehavior(dataSource);, +	protected final Statement configureDataSourceBehavior(DataSource dataSource), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsEmbeddedDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(dataSource);, +			Statement statement = configureDataSourceBehavior(dataSource);, +	protected final Statement configureDataSourceBehavior(DataSource dataSource), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsEmbeddedDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(dataSource);, +			Statement statement = configureDataSourceBehavior(dataSource);, +	protected final Statement configureDataSourceBehavior(DataSource dataSource), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsEmbeddedDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/json/DuplicateJsonObjectContextCustomizerFactory.java, +					+ " predictable runtime behavior\n");, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(dataSource);, +			Statement statement = configureDataSourceBehavior(dataSource);, +	protected final Statement configureDataSourceBehavior(DataSource dataSource), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsEmbeddedDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/json/DuplicateJsonObjectContextCustomizerFactory.java, +					+ " predictable runtime behavior\n");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/repackage-classifier.apt.vm, +  repackaged one. That's a sane behavior for modules that represent an app but if, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/AbstractDevToolsDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(dataSource);, +			Statement statement = configureDataSourceBehavior(dataSource);, +	protected final Statement configureDataSourceBehavior(DataSource dataSource), +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsEmbeddedDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/DevToolsPooledDataSourceAutoConfigurationTests.java, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +		Statement statement = configureDataSourceBehavior(, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/json/DuplicateJsonObjectContextCustomizerFactory.java, +					+ " predictable runtime behavior\n");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/repackage-classifier.apt.vm, +  repackaged one. That's a sane behavior for modules that represent an app but if, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java, +	 * default. To change the default behavior you can use a]