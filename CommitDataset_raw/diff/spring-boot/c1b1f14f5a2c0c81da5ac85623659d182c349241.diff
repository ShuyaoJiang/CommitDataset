[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/MultipartProperties.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/MultipartProperties.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfigurationTests.java, +	@Test, +	public void configureMultipartProperties() {, +		this.context = new AnnotationConfigServletWebServerApplicationContext();, +		TestPropertyValues, +				.of("spring.servlet.multipart.max-file-size=2048KB",, +						"spring.servlet.multipart.max-request-size=15MB"), +				.applyTo(this.context);, +		this.context.register(WebServerWithNothing.class, BaseConfiguration.class);, +		this.context.refresh();, +		MultipartConfigElement multipartConfigElement = this.context, +				.getBean(MultipartConfigElement.class);, +		assertThat(multipartConfigElement.getMaxFileSize()).isEqualTo(2048 * 1024);, +		assertThat(multipartConfigElement.getMaxRequestSize()), +				.isEqualTo(15 * 1024 * 1024);, +	}, +, +	@Test, +	public void configureMultipartPropertiesWithRawLongValues() {, +		this.context = new AnnotationConfigServletWebServerApplicationContext();, +		TestPropertyValues, +				.of("spring.servlet.multipart.max-file-size=512",, +						"spring.servlet.multipart.max-request-size=2048"), +				.applyTo(this.context);, +		this.context.register(WebServerWithNothing.class, BaseConfiguration.class);, +		this.context.refresh();, +		MultipartConfigElement multipartConfigElement = this.context, +				.getBean(MultipartConfigElement.class);, +		assertThat(multipartConfigElement.getMaxFileSize()).isEqualTo(512);, +		assertThat(multipartConfigElement.getMaxRequestSize()).isEqualTo(2048);, +	}, +]