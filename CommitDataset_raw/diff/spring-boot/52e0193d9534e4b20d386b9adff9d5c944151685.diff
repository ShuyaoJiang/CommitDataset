[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.amqp.RabbitTemplateAutoConfiguration.RabbitConnectionFactoryProperties;, +import com.rabbitmq.client.Channel;, +, +@ConditionalOnClass({ RabbitTemplate.class, Channel.class }), +@EnableConfigurationProperties(RabbitConnectionFactoryProperties.class), +	private ConnectionFactory connectionFactory;, +	@ConditionalOnMissingBean(RabbitTemplate.class), +		public ConnectionFactory rabbitConnectionFactory(, +				RabbitConnectionFactoryProperties config) {, +					config.getHost());, +			connectionFactory.setPort(config.getPort());, +			if (config.getUsername() != null) {, +				connectionFactory.setUsername(config.getUsername());, +			if (config.getPassword() != null) {, +				connectionFactory.setPassword(config.getPassword());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.amqp.RabbitTemplateAutoConfiguration.RabbitConnectionFactoryProperties;, +import com.rabbitmq.client.Channel;, +, +@ConditionalOnClass({ RabbitTemplate.class, Channel.class }), +@EnableConfigurationProperties(RabbitConnectionFactoryProperties.class), +	private ConnectionFactory connectionFactory;, +	@ConditionalOnMissingBean(RabbitTemplate.class), +		public ConnectionFactory rabbitConnectionFactory(, +				RabbitConnectionFactoryProperties config) {, +					config.getHost());, +			connectionFactory.setPort(config.getPort());, +			if (config.getUsername() != null) {, +				connectionFactory.setUsername(config.getUsername());, +			if (config.getPassword() != null) {, +				connectionFactory.setPassword(config.getPassword());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.jms.JmsTemplateAutoConfiguration.JmsTemplateProperties;, +public class JmsTemplateAutoConfiguration {, +	@ConditionalOnMissingBean(JmsTemplate.class), +			return this.pubSubDomain;, +		ConnectionFactory jmsConnectionFactory() {, +				pool.setConnectionFactory(new ActiveMQConnectionFactory(this.config, +						.getBrokerURL()));, +			}, +			else {, +			}, +			else {, +			return this.inMemory;, +			return this.pooled;]