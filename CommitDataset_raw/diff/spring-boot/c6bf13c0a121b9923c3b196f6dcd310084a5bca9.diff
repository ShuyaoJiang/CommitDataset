[+++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileEnvironmentPostProcessor.java, +		private List<String> processedProfiles;, +, +			this.processedProfiles = new LinkedList<String>();, +				this.processedProfiles.add(profile);, +						for (String processedProfile : this.processedProfiles) {, +							if (processedProfile != null) {, +								loadIntoGroup(group, location + name + "-", +										+ processedProfile + "." + ext, profile);, +							}, +						}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileEnvironmentPostProcessor.java, +		private List<String> processedProfiles;, +, +			this.processedProfiles = new LinkedList<String>();, +				this.processedProfiles.add(profile);, +						for (String processedProfile : this.processedProfiles) {, +							if (processedProfile != null) {, +								loadIntoGroup(group, location + name + "-", +										+ processedProfile + "." + ext, profile);, +							}, +						}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileEnvironmentPostProcessorTests.java, +	public void profileSubDocumentInSameProfileSpecificFile() throws Exception {, +	@Test, +	public void profileSubDocumentInDifferentProfileSpecificFile() throws Exception {, +		// gh-4132, +		SpringApplication application = new SpringApplication(Config.class);, +		application.setWebEnvironment(false);, +		this.context = application.run(, +				"--spring.profiles.active=activeprofilewithdifferentsubdoc,activeprofilewithdifferentsubdoc2");, +		String property = this.context.getEnvironment().getProperty("foobar");, +		assertThat(property, equalTo("baz"));, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileEnvironmentPostProcessor.java, +		private List<String> processedProfiles;, +, +			this.processedProfiles = new LinkedList<String>();, +				this.processedProfiles.add(profile);, +						for (String processedProfile : this.processedProfiles) {, +							if (processedProfile != null) {, +								loadIntoGroup(group, location + name + "-", +										+ processedProfile + "." + ext, profile);, +							}, +						}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileEnvironmentPostProcessorTests.java, +	public void profileSubDocumentInSameProfileSpecificFile() throws Exception {, +	@Test, +	public void profileSubDocumentInDifferentProfileSpecificFile() throws Exception {, +		// gh-4132, +		SpringApplication application = new SpringApplication(Config.class);, +		application.setWebEnvironment(false);, +		this.context = application.run(, +				"--spring.profiles.active=activeprofilewithdifferentsubdoc,activeprofilewithdifferentsubdoc2");, +		String property = this.context.getEnvironment().getProperty("foobar");, +		assertThat(property, equalTo("baz"));, +	}, +, +++ b/spring-boot/src/test/resources/application-activeprofilewithdifferentsubdoc.yml, +---, +spring.profiles: activeprofilewithdifferentsubdoc2, +foobar: baz, +---]