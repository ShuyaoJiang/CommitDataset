[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +import java.util.concurrent.atomic.AtomicInteger;, +, +import org.apache.catalina.Engine;, +	private static AtomicInteger containerCounter = new AtomicInteger(-1);, +			int instanceId = containerCounter.incrementAndGet();, +			if (instanceId > 0) {, +				Engine engine = this.tomcat.getEngine();, +				engine.setName(engine.getName() + "-" + instanceId);, +			}, +			Thread awaitThread = new Thread("container-" + (containerCounter.get())) {, +		finally {, +			containerCounter.decrementAndGet();, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +import java.util.concurrent.atomic.AtomicInteger;, +, +import org.apache.catalina.Engine;, +	private static AtomicInteger containerCounter = new AtomicInteger(-1);, +			int instanceId = containerCounter.incrementAndGet();, +			if (instanceId > 0) {, +				Engine engine = this.tomcat.getEngine();, +				engine.setName(engine.getName() + "-" + instanceId);, +			}, +			Thread awaitThread = new Thread("container-" + (containerCounter.get())) {, +		finally {, +			containerCounter.decrementAndGet();, +		}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java, +import static org.junit.Assert.assertEquals;, +	// JMX MBean names clash if you get more than one Engine with the same name..., +	@Test, +	public void tomcatEngineNames() throws Exception {, +		TomcatEmbeddedServletContainerFactory factory = getFactory();, +		this.container = factory.getEmbeddedServletContainer();, +		factory.setPort(8081);, +		TomcatEmbeddedServletContainer container2 = (TomcatEmbeddedServletContainer) factory, +				.getEmbeddedServletContainer();, +		assertEquals("Tomcat", ((TomcatEmbeddedServletContainer) this.container), +				.getTomcat().getEngine().getName());, +		assertEquals("Tomcat-1", container2.getTomcat().getEngine().getName());, +		container2.stop();, +	}, +]