[+++ b/spring-bootstrap-actuator/docs/Features.md, +# Spring Bootstrap Actuator Feature Guide, +, +Here are some (most, hopefully all) the features of Spring Bootstrap, +Actuator with some commentary to help you start using them.  We, +recommend you first build a project with the Actuator (e.g. the, +getting started project from the main README), and then try each, +feature in turn there., +, +TODO: some of these are features of Spring Bootstrap (or, +`SpringApplication`) not the Actuator., +, +TODO: group things together and break them out into separate files., +, +## Commandline Arguments, +, +Commandline arguments are passed on to any `CommandLineRunner` beans, +found in the application.  Option arguments (starting with `--`,, +e.g. `--server.port=9000`) are converted to a `PropertySource` and, +added to the Spring `Environment` with first priority (they always, +take precedence and override values from other sources).  Properties, +in the `Environment` (including System properties and OS environment, +variables) can always be injected into Spring components using, +`@Value` with placeholders, e.g., +, +    @Component, +    public class MyService {, +        @Value("${app.message:Hello World}"), +        private String message;, +        ..., +    }, +, +The default value comes after the first colon (":")., +, +## Externalized Configuration, +, +In addition to command line option arguments, Spring Bootstrap will, +pick up a file called `application.properties` in the root of your, +classpath (if there is one) and add those properties to the Spring, +`Environment`.  The search path for `application.properties` is, +actually, 1) root or classpath, 2) current directory, 3) `/config`, +package in classpath, 4) `/config` subdir of current directory.  The, +list is ordered by decreasing precedence (so properties can be, +overridden by others with the same name defined in later locations)., +, +The values in `application.properties` are filtered through the, +existing `Environment` when they are used so you can refer back to, +previously defined values (e.g. from System properties), e.g., +, +    app.name: MyApp, +    app.description: ${app.name} is a Cool New App, +, +Spring Bootstrap also binds the properties to any bean in your, +application context whose type is `@ConfigurationProperties`.  The, +Actuator provides some of those beans out of the box, so you can, +easily customize server and management properties (ports etc.),, +endpoint locations and logging.  See below for more detail, or inspect, +the `*Properties` types in the Actuator jar., +, +## Setting the Default Spring Profile, +, +Spring Profiles are a way to segregate parts of the application, +configuration and make it only available in certain environments.  Any, +`@Component` that is marked with `@Profile` will only be loaded in the, +profile specified by the latter annotation.  , +, +Spring Bootstrap takes it a stage further.  If you include in your, +`application.properties` a value for a property named, +`spring.active.profiles` then those profiles will be active by, +default.  E.g., +, +    spring.active.profiles: dev,hsqldb, +    , +## Profile-dependent configuration, +, +Spring Bootstrap loads additional properties files if there are active, +profiles using a naming convention `application-{profile}.properties`., +Property values from those files override trhe default ones., +, +## Custom Typesafe Externalized Configuration, +, +If you want a strongly typed bean (or beans) to govern and validate, +the configuration of your application beyond the built in properties,, +all you need to do is create a `@ConfigurationProperties` class, e.g., +, +    @ConfigurationProperties(name="my"), +    public class MyProperties {, +    }, +, +and declare one either explicitly (with `@Bean`) or implicitly by, +adding, +, +    @EnableConfigurationProperties(MyProperties.class), +    , +to one of your `@Configuration` (or `@Component`) classes.  Then you can, +, +    @Autowired, +    private MyProperties configuration = new MyProperties();, +, +in any of your component classes to grab that configuration and use it.]