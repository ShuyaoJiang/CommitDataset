[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTags.java, +		return (path.startsWith("/") ? path : "/" + path);, +		return (throwable instanceof IOException ? IO_ERROR : CLIENT_ERROR);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTags.java, +		return (path.startsWith("/") ? path : "/" + path);, +		return (throwable instanceof IOException ? IO_ERROR : CLIENT_ERROR);, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthWebEndpointResponseMapperTests.java, +				.will((Answer<Boolean>) (invocation) -> {, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTags.java, +		return (path.startsWith("/") ? path : "/" + path);, +		return (throwable instanceof IOException ? IO_ERROR : CLIENT_ERROR);, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthWebEndpointResponseMapperTests.java, +				.will((Answer<Boolean>) (invocation) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/LdapAutoConfigurationTests.java, +				.run((context) -> assertThat(context).hasSingleBean(LdapTemplate.class));, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTags.java, +		return (path.startsWith("/") ? path : "/" + path);, +		return (throwable instanceof IOException ? IO_ERROR : CLIENT_ERROR);, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthWebEndpointResponseMapperTests.java, +				.will((Answer<Boolean>) (invocation) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/LdapAutoConfigurationTests.java, +				.run((context) -> assertThat(context).hasSingleBean(LdapTemplate.class));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RepackageMojo.java, +			String artifactId = (this.classifier != null, +					? "artifact with classifier " + this.classifier : "main artifact");]