[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, +			else if (manager instanceof LazyAuthenticationManager) {, +				((LazyAuthenticationManager) manager), +						.setAuthenticationEventPublisher(this.authenticationEventPublisher);, +			}, +		private AuthenticationManager authenticationManager;, +		private AuthenticationEventPublisher authenticationEventPublisher;, +		public void setAuthenticationEventPublisher(, +				AuthenticationEventPublisher authenticationEventPublisher) {, +			this.authenticationEventPublisher = authenticationEventPublisher;, +		}, +, +			if (this.authenticationManager == null) {, +				this.authenticationManager = this.builder.getOrBuild();, +				if (this.authenticationManager instanceof ProviderManager) {, +					((ProviderManager) this.authenticationManager), +							.setAuthenticationEventPublisher(this.authenticationEventPublisher);, +				}, +			}, +			return this.authenticationManager.authenticate(authentication);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, +			else if (manager instanceof LazyAuthenticationManager) {, +				((LazyAuthenticationManager) manager), +						.setAuthenticationEventPublisher(this.authenticationEventPublisher);, +			}, +		private AuthenticationManager authenticationManager;, +		private AuthenticationEventPublisher authenticationEventPublisher;, +		public void setAuthenticationEventPublisher(, +				AuthenticationEventPublisher authenticationEventPublisher) {, +			this.authenticationEventPublisher = authenticationEventPublisher;, +		}, +, +			if (this.authenticationManager == null) {, +				this.authenticationManager = this.builder.getOrBuild();, +				if (this.authenticationManager instanceof ProviderManager) {, +					((ProviderManager) this.authenticationManager), +							.setAuthenticationEventPublisher(this.authenticationEventPublisher);, +				}, +			}, +			return this.authenticationManager.authenticate(authentication);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfigurationTests.java, +import org.springframework.security.authentication.event.AbstractAuthenticationEvent;, +		pingAuthenticationListener();, +	}, +, +	private void pingAuthenticationListener() {, +		AuthenticationListener listener = new AuthenticationListener();, +		this.context.addApplicationListener(listener);, +			manager.authenticate(new UsernamePasswordAuthenticationToken("foo", "wrong"));, +		assertTrue("Wrong event type: " + listener.event,, +				listener.event instanceof AuthenticationFailureBadCredentialsEvent);, +		pingAuthenticationListener();, +	private static final class AuthenticationListener implements, +			ApplicationListener<AbstractAuthenticationEvent> {, +, +		private ApplicationEvent event;, +, +		@Override, +		public void onApplicationEvent(AbstractAuthenticationEvent event) {, +			this.event = event;, +		}, +	}, +]