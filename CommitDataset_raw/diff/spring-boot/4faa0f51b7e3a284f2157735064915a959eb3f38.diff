[+++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/junit/GradleCompatibilitySuite.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/junit/GradleCompatibilitySuite.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/plugin/KotlinPluginActionIntegrationTests.java, + * Copyright 2012-2019 the original author or authors., +	public void kotlinVersionPropertyIsSet() {, +		assertThat(output).containsPattern("Kotlin version: [0-9]\\.[0-9]\\.[0-9]+");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/junit/GradleCompatibilitySuite.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/plugin/KotlinPluginActionIntegrationTests.java, + * Copyright 2012-2019 the original author or authors., +	public void kotlinVersionPropertyIsSet() {, +		assertThat(output).containsPattern("Kotlin version: [0-9]\\.[0-9]\\.[0-9]+");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/testkit/GradleBuild.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/junit/GradleCompatibilitySuite.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/plugin/KotlinPluginActionIntegrationTests.java, + * Copyright 2012-2019 the original author or authors., +	public void kotlinVersionPropertyIsSet() {, +		assertThat(output).containsPattern("Kotlin version: [0-9]\\.[0-9]\\.[0-9]+");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/testkit/GradleBuild.java, + * Copyright 2012-2019 the original author or authors., +++ /dev/null, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/junit/GradleCompatibilitySuite.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/plugin/KotlinPluginActionIntegrationTests.java, + * Copyright 2012-2019 the original author or authors., +	public void kotlinVersionPropertyIsSet() {, +		assertThat(output).containsPattern("Kotlin version: [0-9]\\.[0-9]\\.[0-9]+");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/java/org/springframework/boot/gradle/testkit/GradleBuild.java, + * Copyright 2012-2019 the original author or authors., +++ /dev/null, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/test/resources/org/springframework/boot/gradle/plugin/KotlinPluginActionIntegrationTests-kotlinVersionPropertyIsSet.gradle, +plugins {, +	id 'org.springframework.boot' version '{version}', +}, +, +apply plugin: 'io.spring.dependency-management', +apply plugin: 'org.jetbrains.kotlin.jvm', +, +dependencyManagement {, +	resolutionStrategy {, +		eachDependency {, +			if (it.requested.group == 'org.springframework.boot') {, +				it.useVersion project.bootVersion, +			}, +		}, +	}, +}, +, +repositories {, +	mavenCentral(), +	mavenLocal(), +}, +, +dependencies {, +	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8', +}, +, +task kotlinVersion {, +	doLast {, +		def kotlinVersion = project.hasProperty('kotlin.version') ? project.getProperty('kotlin.version') : 'none', +		println "Kotlin version: ${kotlinVersion}", +	}, +}]