[+++ b/pom.xml, +              <groupId>org.springframework.hateoas</groupId>, +              <artifactId>spring-hateoas</artifactId>, +              <version>0.5.0.RELEASE</version>, +            </dependency>, +            <dependency>, +++ b/pom.xml, +              <groupId>org.springframework.hateoas</groupId>, +              <artifactId>spring-hateoas</artifactId>, +              <version>0.5.0.RELEASE</version>, +            </dependency>, +            <dependency>, +++ b/spring-bootstrap/pom.xml, +			<groupId>org.springframework.hateoas</groupId>, +			<artifactId>spring-hateoas</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/pom.xml, +              <groupId>org.springframework.hateoas</groupId>, +              <artifactId>spring-hateoas</artifactId>, +              <version>0.5.0.RELEASE</version>, +            </dependency>, +            <dependency>, +++ b/spring-bootstrap/pom.xml, +			<groupId>org.springframework.hateoas</groupId>, +			<artifactId>spring-hateoas</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/autoconfigure/data/JpaWebAutoConfigurationTests.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.bootstrap.autoconfigure.data;, +, +import org.junit.Ignore;, +import org.junit.Test;, +import org.springframework.bootstrap.autoconfigure.PropertyPlaceholderAutoConfiguration;, +import org.springframework.bootstrap.autoconfigure.data.test.City;, +import org.springframework.bootstrap.autoconfigure.data.test.CityRepository;, +import org.springframework.bootstrap.autoconfigure.jdbc.EmbeddedDatabaseConfiguration;, +import org.springframework.bootstrap.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;, +import org.springframework.context.annotation.ComponentScan;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.data.repository.support.DomainClassConverter;, +import org.springframework.mock.web.MockServletContext;, +import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;, +, +import static org.junit.Assert.assertNotNull;, +, +/**, + * @author Dave Syer, + * , + */, +@Ignore, +// until spring data commons 1.6.0, jpa 1.5.0 available, +public class JpaWebAutoConfigurationTests {, +, +	private AnnotationConfigWebApplicationContext context;, +, +	@Test, +	public void testDefaultRepositoryConfiguration() throws Exception {, +		this.context = new AnnotationConfigWebApplicationContext();, +		this.context.setServletContext(new MockServletContext());, +		this.context.register(TestConfiguration.class,, +				EmbeddedDatabaseConfiguration.class, HibernateJpaAutoConfiguration.class,, +				JpaRepositoriesAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertNotNull(this.context.getBean(CityRepository.class));, +		assertNotNull(this.context.getBean(DomainClassConverter.class));, +	}, +, +	@Configuration, +	// @EnableSpringDataWebSupport, +	@ComponentScan(basePackageClasses = City.class), +	protected static class TestConfiguration {, +, +	}, +, +}]