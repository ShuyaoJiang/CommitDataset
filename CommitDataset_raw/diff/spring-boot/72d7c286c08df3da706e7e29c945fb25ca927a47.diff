[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +				String path = endpointHandlerMapping.getPrefix() + endpoint.getPath();, +				paths.add(path);, +				if (secure) {, +					// Add Spring MVC-generated additional paths, +					paths.add(path + "/");, +					paths.add(path + ".*");, +				}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +				String path = endpointHandlerMapping.getPrefix() + endpoint.getPath();, +				paths.add(path);, +				if (secure) {, +					// Add Spring MVC-generated additional paths, +					paths.add(path + "/");, +					paths.add(path + ".*");, +				}, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/SampleActuatorApplicationTests.java, +	public void testMetricsIsSecure() throws Exception {, +		@SuppressWarnings("rawtypes"), +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +				"http://localhost:8080/metrics", Map.class);, +		assertEquals(HttpStatus.UNAUTHORIZED, entity.getStatusCode());, +		entity = new TestRestTemplate().getForEntity(, +				"http://localhost:8080/metrics/", Map.class);, +		assertEquals(HttpStatus.UNAUTHORIZED, entity.getStatusCode());, +		entity = new TestRestTemplate().getForEntity(, +				"http://localhost:8080/metrics/foo", Map.class);, +		assertEquals(HttpStatus.UNAUTHORIZED, entity.getStatusCode());, +		entity = new TestRestTemplate().getForEntity(, +				"http://localhost:8080/metrics.json", Map.class);, +		assertEquals(HttpStatus.UNAUTHORIZED, entity.getStatusCode());, +	}, +, +	@Test]