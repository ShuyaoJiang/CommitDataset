[+++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +	/**, +	 * Flag to indicate that an exception should be raised if a Validator is available and, +	 * validation fails., +	 * , +	 * @param exceptionIfInvalid the flag to set, +	 */, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +	/**, +	 * Flag to indicate that an exception should be raised if a Validator is available and, +	 * validation fails., +	 * , +	 * @param exceptionIfInvalid the flag to set, +	 */, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +	 * Flag to indicate that validation errors can be swallowed. If set they will be, +	 * logged, but not propagate to the caller., +	 * @return the flag value (default true), +	 */, +	boolean exceptionIfInvalid() default true;, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +	/**, +	 * Flag to indicate that an exception should be raised if a Validator is available and, +	 * validation fails., +	 * , +	 * @param exceptionIfInvalid the flag to set, +	 */, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +	 * Flag to indicate that validation errors can be swallowed. If set they will be, +	 * logged, but not propagate to the caller., +	 * @return the flag value (default true), +	 */, +	boolean exceptionIfInvalid() default true;, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			factory.setExceptionIfInvalid(annotation.exceptionIfInvalid());, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +	/**, +	 * Flag to indicate that an exception should be raised if a Validator is available and, +	 * validation fails., +	 * , +	 * @param exceptionIfInvalid the flag to set, +	 */, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +	 * Flag to indicate that validation errors can be swallowed. If set they will be, +	 * logged, but not propagate to the caller., +	 * @return the flag value (default true), +	 */, +	boolean exceptionIfInvalid() default true;, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			factory.setExceptionIfInvalid(annotation.exceptionIfInvalid());, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/PropertiesConfigurationFactoryTests.java, +import java.io.IOException;, +, +	public void testValidationErrorCanBeSuppressed() throws Exception {, +		this.validator = new SpringValidatorAdapter(Validation, +				.buildDefaultValidatorFactory().getValidator());, +		setupFactory();, +		this.factory.setExceptionIfInvalid(false);, +		bindFoo("bar: blah");, +	}, +, +	@Test, +		setupFactory();, +		return bindFoo(values);, +	}, +, +	private Foo bindFoo(final String values) throws Exception {, +		this.factory.afterPropertiesSet();, +		return this.factory.getObject();, +	}, +, +	private void setupFactory() throws IOException {, +		this.factory = new PropertiesConfigurationFactory<Foo>(Foo.class);, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +	/**, +	 * Flag to indicate that an exception should be raised if a Validator is available and, +	 * validation fails., +	 * , +	 * @param exceptionIfInvalid the flag to set, +	 */, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationProperties.java, +	 * Flag to indicate that validation errors can be swallowed. If set they will be, +	 * logged, but not propagate to the caller., +	 * @return the flag value (default true), +	 */, +	boolean exceptionIfInvalid() default true;, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +			factory.setExceptionIfInvalid(annotation.exceptionIfInvalid());, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/PropertiesConfigurationFactoryTests.java, +import java.io.IOException;, +, +	public void testValidationErrorCanBeSuppressed() throws Exception {]