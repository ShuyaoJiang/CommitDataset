[+++ b/spring-boot-actuator/pom.xml, +			<groupId>com.github.ben-manes.caffeine</groupId>, +			<artifactId>caffeine</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/pom.xml, +			<groupId>com.github.ben-manes.caffeine</groupId>, +			<artifactId>caffeine</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import com.github.benmanes.caffeine.cache.Caffeine;, +import org.springframework.boot.actuate.cache.CaffeineCacheStatisticsProvider;, +import org.springframework.cache.caffeine.CaffeineCacheManager;, + * @author Eddú Meléndez, +	@ConditionalOnClass({ Caffeine.class, CaffeineCacheManager.class }), +	static class CaffeineCacheStatisticsProviderConfiguration {, +, +		@Bean, +		public CaffeineCacheStatisticsProvider caffeineCacheStatisticsProvider() {, +			return new CaffeineCacheStatisticsProvider();, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-actuator/pom.xml, +			<groupId>com.github.ben-manes.caffeine</groupId>, +			<artifactId>caffeine</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import com.github.benmanes.caffeine.cache.Caffeine;, +import org.springframework.boot.actuate.cache.CaffeineCacheStatisticsProvider;, +import org.springframework.cache.caffeine.CaffeineCacheManager;, + * @author Eddú Meléndez, +	@ConditionalOnClass({ Caffeine.class, CaffeineCacheManager.class }), +	static class CaffeineCacheStatisticsProviderConfiguration {, +, +		@Bean, +		public CaffeineCacheStatisticsProvider caffeineCacheStatisticsProvider() {, +			return new CaffeineCacheStatisticsProvider();, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cache/CaffeineCacheStatisticsProvider.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.cache;, +, +import com.github.benmanes.caffeine.cache.stats.CacheStats;, +, +import org.springframework.cache.CacheManager;, +import org.springframework.cache.caffeine.CaffeineCache;, +, +/**, + * {@link CacheStatisticsProvider} implementation for Caffeine., + *, + * @author Eddú Meléndez, + * @since 1.4.0, + */, +public class CaffeineCacheStatisticsProvider, +		implements CacheStatisticsProvider<CaffeineCache> {, +, +	@Override, +	public CacheStatistics getCacheStatistics(CacheManager cacheManager,, +			CaffeineCache cache) {, +		DefaultCacheStatistics statistics = new DefaultCacheStatistics();, +		statistics.setSize(cache.getNativeCache().estimatedSize());, +		CacheStats caffeineStatistics = cache.getNativeCache().stats();, +		if (caffeineStatistics.requestCount() > 0) {, +			statistics.setHitRatio(caffeineStatistics.hitRate());, +			statistics.setMissRatio(caffeineStatistics.missRate());, +		}, +		return statistics;, +	}, +, +}, +++ b/spring-boot-actuator/pom.xml]