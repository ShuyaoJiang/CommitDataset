[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|Maximum log file size (if LOG_FILE enabled). (Only supported with the default logback, + setup.), +|Maximum number of archive log files to keep (if LOG_FILE enabled). (Only supported with, + the default logback setup.), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|Maximum log file size (if LOG_FILE enabled). (Only supported with the default logback, + setup.), +|Maximum number of archive log files to keep (if LOG_FILE enabled). (Only supported with, + the default logback setup.), +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/DefaultLogbackConfiguration.java, +		SizeAndTimeBasedRollingPolicy<ILoggingEvent> rollingPolicy = new SizeAndTimeBasedRollingPolicy<>();, +		setMaxFileSize(rollingPolicy,, +				this.patterns.getProperty("logging.file.max-size", MAX_FILE_SIZE));, +		rollingPolicy.setMaxHistory(this.patterns.getProperty("logging.file.max-history",, +				Integer.class, CoreConstants.UNBOUND_HISTORY));, +		appender.setRollingPolicy(rollingPolicy);, +		rollingPolicy.setParent(appender);, +		config.start(rollingPolicy);, +	}, +, +	private void setMaxFileSize(, +			SizeAndTimeBasedRollingPolicy<ILoggingEvent> rollingPolicy,, +			String maxFileSize) {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|Maximum log file size (if LOG_FILE enabled). (Only supported with the default logback, + setup.), +|Maximum number of archive log files to keep (if LOG_FILE enabled). (Only supported with, + the default logback setup.), +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/DefaultLogbackConfiguration.java, +		SizeAndTimeBasedRollingPolicy<ILoggingEvent> rollingPolicy = new SizeAndTimeBasedRollingPolicy<>();, +		setMaxFileSize(rollingPolicy,, +				this.patterns.getProperty("logging.file.max-size", MAX_FILE_SIZE));, +		rollingPolicy.setMaxHistory(this.patterns.getProperty("logging.file.max-history",, +				Integer.class, CoreConstants.UNBOUND_HISTORY));, +		appender.setRollingPolicy(rollingPolicy);, +		rollingPolicy.setParent(appender);, +		config.start(rollingPolicy);, +	}, +, +	private void setMaxFileSize(, +			SizeAndTimeBasedRollingPolicy<ILoggingEvent> rollingPolicy,, +			String maxFileSize) {, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java, +		assertThat(getRollingPolicy().getMaxHistory()), +				.isEqualTo(CoreConstants.UNBOUND_HISTORY);, +		LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(, +				environment);, +		LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(, +				environment);]