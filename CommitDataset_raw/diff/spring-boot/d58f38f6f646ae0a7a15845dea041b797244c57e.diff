[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DefaultErrorViewResolverTests.java, +				"classpath:" + packageName.replace('.', '/') + path + "/" });, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DefaultErrorViewResolverTests.java, +				"classpath:" + packageName.replace('.', '/') + path + "/" });, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			String name = sourceClass.replace('.', '/') + ".class";, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DefaultErrorViewResolverTests.java, +				"classpath:" + packageName.replace('.', '/') + path + "/" });, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			String name = sourceClass.replace('.', '/') + ".class";, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/ExtendedGroovyClassLoader.java, +					.put(classNode.getName().replace('.', '/') + ".class", code);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DefaultErrorViewResolverTests.java, +				"classpath:" + packageName.replace('.', '/') + path + "/" });, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			String name = sourceClass.replace('.', '/') + ".class";, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/ExtendedGroovyClassLoader.java, +					.put(classNode.getName().replace('.', '/') + ".class", code);, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/classloader/RestartClassLoaderTests.java, +	private static final String PACKAGE_PATH = PACKAGE.replace('.', '/');, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DefaultErrorViewResolverTests.java, +				"classpath:" + packageName.replace('.', '/') + path + "/" });, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			String name = sourceClass.replace('.', '/') + ".class";, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/ExtendedGroovyClassLoader.java, +					.put(classNode.getName().replace('.', '/') + ".class", code);, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/classloader/RestartClassLoaderTests.java, +	private static final String PACKAGE_PATH = PACKAGE.replace('.', '/');, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/settings/DevToolsSettingsTests.java, +			.replace('.', '/') + "/";, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DefaultErrorViewResolverTests.java, +				"classpath:" + packageName.replace('.', '/') + path + "/" });, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			String name = sourceClass.replace('.', '/') + ".class";, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/ExtendedGroovyClassLoader.java, +					.put(classNode.getName().replace('.', '/') + ".class", code);, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/classloader/RestartClassLoaderTests.java, +	private static final String PACKAGE_PATH = PACKAGE.replace('.', '/');, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/settings/DevToolsSettingsTests.java, +			.replace('.', '/') + "/";, +++ b/spring-boot-test-support/src/main/java/org/springframework/boot/junit/compiler/TestCompiler.java, +		return type.getName().replace('.', '/') + ".java";, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +			code = code.toLowerCase().replace('_', '-');, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheCondition.java, +		String value = resolver.getProperty("type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionCondition.java, +		String value = resolver.getProperty("store-type").replace('-', '_').toUpperCase();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DefaultErrorViewResolverTests.java, +				"classpath:" + packageName.replace('.', '/') + path + "/" });, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/archive/ArchiveCommand.java, +			String name = sourceClass.replace('.', '/') + ".class";]