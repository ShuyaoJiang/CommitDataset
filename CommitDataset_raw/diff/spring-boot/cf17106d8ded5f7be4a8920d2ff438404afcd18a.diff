[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.java, + * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.java, + * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.java, + * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java, +import java.util.concurrent.ConcurrentHashMap;, +		private final Set<String> threadNames = ConcurrentHashMap.newKeySet();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.java, + * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java, +import java.util.concurrent.ConcurrentHashMap;, +		private final Set<String> threadNames = ConcurrentHashMap.newKeySet();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfigurationTests.java, +		public WebFluxRegistrations webFluxRegistrationsHandlerAdapter() {, +		public WebFluxRegistrations webFluxRegistrationsHandlerMapping() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.java, + * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java, +import java.util.concurrent.ConcurrentHashMap;, +		private final Set<String> threadNames = ConcurrentHashMap.newKeySet();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfigurationTests.java, +		public WebFluxRegistrations webFluxRegistrationsHandlerAdapter() {, +		public WebFluxRegistrations webFluxRegistrationsHandlerMapping() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +A `ThreadPoolTaskScheduler` can also be auto-configured if need to be associated to, +Both a `TaskExecutorBuilder` bean and a `TaskSchedulerBuilder` bean are made available in the, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.java, + * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java, +import java.util.concurrent.ConcurrentHashMap;, +		private final Set<String> threadNames = ConcurrentHashMap.newKeySet();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfigurationTests.java, +		public WebFluxRegistrations webFluxRegistrationsHandlerAdapter() {, +		public WebFluxRegistrations webFluxRegistrationsHandlerMapping() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +A `ThreadPoolTaskScheduler` can also be auto-configured if need to be associated to, +Both a `TaskExecutorBuilder` bean and a `TaskSchedulerBuilder` bean are made available in the, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/PropertyMapperTests.java, +	public void fromValueAsIntShouldAdaptValue() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.java, + * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,\, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfigurationTests.java, +import java.util.concurrent.ConcurrentHashMap;, +		private final Set<String> threadNames = ConcurrentHashMap.newKeySet();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfigurationTests.java, +		public WebFluxRegistrations webFluxRegistrationsHandlerAdapter() {, +		public WebFluxRegistrations webFluxRegistrationsHandlerMapping() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +A `ThreadPoolTaskScheduler` can also be auto-configured if need to be associated to, +Both a `TaskExecutorBuilder` bean and a `TaskSchedulerBuilder` bean are made available in the, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/PropertyMapperTests.java, +	public void fromValueAsIntShouldAdaptValue() {, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/task/TaskSchedulerBuilderTests.java, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.spy;, +import static org.mockito.Mockito.verify;, +import static org.mockito.Mockito.verifyZeroInteractions;, +		ThreadPoolTaskScheduler scheduler = this.builder.threadNamePrefix("test-"), +				.build();, +		assertThat(scheduler.getThreadNamePrefix()).isEqualTo("test-");, +		TaskSchedulerCustomizer customizer = mock(TaskSchedulerCustomizer.class);, +		ThreadPoolTaskScheduler scheduler = this.builder.customizers(customizer).build();, +		verify(customizer).customize(scheduler);, +		ThreadPoolTaskScheduler scheduler = spy(new ThreadPoolTaskScheduler());, +					verify(taskScheduler).setPoolSize(4);, +					verify(taskScheduler).setThreadNamePrefix("test-");, +		TaskSchedulerCustomizer customizer1 = mock(TaskSchedulerCustomizer.class);, +		TaskSchedulerCustomizer customizer2 = mock(TaskSchedulerCustomizer.class);, +		ThreadPoolTaskScheduler scheduler = this.builder.customizers(customizer1), +		verifyZeroInteractions(customizer1);, +		verify(customizer2).customize(scheduler);, +		TaskSchedulerCustomizer customizer1 = mock(TaskSchedulerCustomizer.class);, +		TaskSchedulerCustomizer customizer2 = mock(TaskSchedulerCustomizer.class);, +		verify(customizer1).customize(scheduler);, +		verify(customizer2).customize(scheduler);]