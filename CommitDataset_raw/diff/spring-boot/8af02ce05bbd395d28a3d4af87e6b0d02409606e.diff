[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/amqp/RabbitHealthIndicator.java, +		super("Rabbit health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/amqp/RabbitHealthIndicator.java, +		super("Rabbit health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cassandra/CassandraHealthIndicator.java, +	public CassandraHealthIndicator() {, +		super("Cassandra health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/amqp/RabbitHealthIndicator.java, +		super("Rabbit health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cassandra/CassandraHealthIndicator.java, +	public CassandraHealthIndicator() {, +		super("Cassandra health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicator.java, +	public CouchbaseHealthIndicator() {, +		super("Couchbase health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/amqp/RabbitHealthIndicator.java, +		super("Rabbit health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cassandra/CassandraHealthIndicator.java, +	public CassandraHealthIndicator() {, +		super("Cassandra health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicator.java, +	public CouchbaseHealthIndicator() {, +		super("Couchbase health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchHealthIndicator.java, +		super("Elasticsearch health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/amqp/RabbitHealthIndicator.java, +		super("Rabbit health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cassandra/CassandraHealthIndicator.java, +	public CassandraHealthIndicator() {, +		super("Cassandra health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicator.java, +	public CouchbaseHealthIndicator() {, +		super("Couchbase health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchHealthIndicator.java, +		super("Elasticsearch health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchJestHealthIndicator.java, +		super("Elasticsearch health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/amqp/RabbitHealthIndicator.java, +		super("Rabbit health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cassandra/CassandraHealthIndicator.java, +	public CassandraHealthIndicator() {, +		super("Cassandra health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/couchbase/CouchbaseHealthIndicator.java, +	public CouchbaseHealthIndicator() {, +		super("Couchbase health check failed");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchHealthIndicator.java, +		super("Elasticsearch health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/elasticsearch/ElasticsearchJestHealthIndicator.java, +		super("Elasticsearch health check failed");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/AbstractHealthIndicator.java, +import java.util.function.Function;, +, +import org.springframework.util.Assert;, +import org.springframework.util.StringUtils;, +	private static final String NO_MESSAGE = null;, +, +	private static final String DEFAULT_MESSAGE = "Health check failed";, +, +	private final Function<Exception, String> healthCheckFailedMessage;, +, +	/**, +	 * Create a new {@link AbstractHealthIndicator} instance with a default, +	 * {@code healthCheckFailedMessage}., +	 */, +	public AbstractHealthIndicator() {, +		this(NO_MESSAGE);, +	}, +, +	/**, +	 * Create a new {@link AbstractHealthIndicator} instance with a specific message to, +	 * log when the health check fails., +	 * @param healthCheckFailedMessage the message to log on health check failure, +	 * @since 2.0.0, +	 */, +	protected AbstractHealthIndicator(String healthCheckFailedMessage) {, +		this.healthCheckFailedMessage = (ex) -> healthCheckFailedMessage;, +	}, +, +	/**, +	 * Create a new {@link AbstractHealthIndicator} instance with a specific message to, +	 * log when the health check fails., +	 * @param healthCheckFailedMessage the message to log on health check failure]