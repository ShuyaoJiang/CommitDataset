[+++ /dev/null, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +import io.micrometer.core.instrument.binder.jvm.JvmGcMetrics;, +import io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics;, +import io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics;, +import io.micrometer.core.instrument.binder.logging.LogbackMetrics;, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +import io.micrometer.core.instrument.binder.system.UptimeMetrics;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@Configuration, +	@ConditionalOnProperty(value = "management.metrics.binders.jvm.enabled", matchIfMissing = true), +	static class JvmMeterBindersConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JvmGcMetrics jvmGcMetrics() {, +			return new JvmGcMetrics();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JvmMemoryMetrics jvmMemoryMetrics() {, +			return new JvmMemoryMetrics();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JvmThreadMetrics jvmThreadMetrics() {, +			return new JvmThreadMetrics();, +		}, +, +	}, +, +	static class MeterBindersConfiguration {, +, +		@Bean, +		@ConditionalOnClass(name = "ch.qos.logback.classic.Logger"), +		@ConditionalOnMissingBean(LogbackMetrics.class), +		@ConditionalOnProperty(value = "management.metrics.binders.logback.enabled", matchIfMissing = true), +		public LogbackMetrics logbackMetrics() {, +			return new LogbackMetrics();, +		}, +, +		@Bean, +		@ConditionalOnProperty(value = "management.metrics.binders.uptime.enabled", matchIfMissing = true), +		@ConditionalOnMissingBean, +		public UptimeMetrics uptimeMetrics() {, +			return new UptimeMetrics();, +		}, +, +		@Bean, +		@ConditionalOnProperty(value = "management.metrics.binders.processor.enabled", matchIfMissing = true), +		@ConditionalOnMissingBean, +		public ProcessorMetrics processorMetrics() {, +			return new ProcessorMetrics();, +		}, +, +	}, +, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +import io.micrometer.core.instrument.binder.jvm.JvmGcMetrics;, +import io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics;, +import io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics;, +import io.micrometer.core.instrument.binder.logging.LogbackMetrics;, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +import io.micrometer.core.instrument.binder.system.UptimeMetrics;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@Configuration, +	@ConditionalOnProperty(value = "management.metrics.binders.jvm.enabled", matchIfMissing = true), +	static class JvmMeterBindersConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JvmGcMetrics jvmGcMetrics() {, +			return new JvmGcMetrics();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JvmMemoryMetrics jvmMemoryMetrics() {, +			return new JvmMemoryMetrics();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JvmThreadMetrics jvmThreadMetrics() {, +			return new JvmThreadMetrics();, +		}, +, +	}, +, +	static class MeterBindersConfiguration {, +, +		@Bean, +		@ConditionalOnClass(name = "ch.qos.logback.classic.Logger"), +		@ConditionalOnMissingBean(LogbackMetrics.class), +		@ConditionalOnProperty(value = "management.metrics.binders.logback.enabled", matchIfMissing = true), +		public LogbackMetrics logbackMetrics() {]