[+++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import javax.sql.DataSource;, +, +import org.springframework.boot.actuate.health.CompositeHealthIndicator;, +import org.springframework.boot.actuate.health.HealthIndicator;, +import org.springframework.boot.actuate.health.SimpleHealthIndicator;, +import org.springframework.boot.actuate.health.VanillaHealthIndicator;, +	@Autowired(required = false), +	private HealthIndicator<? extends Object> healthIndicator;, +, +	@Autowired(required = false), +	private Map<String, DataSource> dataSources;, +, +	public HealthEndpoint<?> healthEndpoint() {, +		if (this.healthIndicator == null) {, +			this.healthIndicator = createHealthIndicator();, +		}, +		return new HealthEndpoint<Object>(this.healthIndicator);, +	}, +, +	private HealthIndicator<? extends Object> createHealthIndicator() {, +		if (this.dataSources == null || this.dataSources.isEmpty()) {, +			return new VanillaHealthIndicator();, +		}, +, +		if (this.dataSources.size() == 1) {, +			return new SimpleHealthIndicator(this.dataSources.values().iterator().next());, +		}, +, +		CompositeHealthIndicator composite = new CompositeHealthIndicator();, +		for (Map.Entry<String, DataSource> entry : this.dataSources.entrySet()) {, +			composite.addHealthIndicator(entry.getKey(),, +					new SimpleHealthIndicator(entry.getValue()));, +		}, +		return composite;, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import javax.sql.DataSource;, +, +import org.springframework.boot.actuate.health.CompositeHealthIndicator;, +import org.springframework.boot.actuate.health.HealthIndicator;, +import org.springframework.boot.actuate.health.SimpleHealthIndicator;, +import org.springframework.boot.actuate.health.VanillaHealthIndicator;, +	@Autowired(required = false), +	private HealthIndicator<? extends Object> healthIndicator;, +, +	@Autowired(required = false), +	private Map<String, DataSource> dataSources;, +, +	public HealthEndpoint<?> healthEndpoint() {, +		if (this.healthIndicator == null) {, +			this.healthIndicator = createHealthIndicator();, +		}, +		return new HealthEndpoint<Object>(this.healthIndicator);, +	}, +, +	private HealthIndicator<? extends Object> createHealthIndicator() {, +		if (this.dataSources == null || this.dataSources.isEmpty()) {, +			return new VanillaHealthIndicator();, +		}, +, +		if (this.dataSources.size() == 1) {, +			return new SimpleHealthIndicator(this.dataSources.values().iterator().next());, +		}, +, +		CompositeHealthIndicator composite = new CompositeHealthIndicator();, +		for (Map.Entry<String, DataSource> entry : this.dataSources.entrySet()) {, +			composite.addHealthIndicator(entry.getKey(),, +					new SimpleHealthIndicator(entry.getValue()));, +		}, +		return composite;, +++ /dev/null, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import javax.sql.DataSource;, +, +import org.springframework.boot.actuate.health.CompositeHealthIndicator;, +import org.springframework.boot.actuate.health.HealthIndicator;, +import org.springframework.boot.actuate.health.SimpleHealthIndicator;, +import org.springframework.boot.actuate.health.VanillaHealthIndicator;, +	@Autowired(required = false), +	private HealthIndicator<? extends Object> healthIndicator;, +, +	@Autowired(required = false), +	private Map<String, DataSource> dataSources;, +, +	public HealthEndpoint<?> healthEndpoint() {, +		if (this.healthIndicator == null) {, +			this.healthIndicator = createHealthIndicator();, +		}, +		return new HealthEndpoint<Object>(this.healthIndicator);, +	}, +, +	private HealthIndicator<? extends Object> createHealthIndicator() {, +		if (this.dataSources == null || this.dataSources.isEmpty()) {, +			return new VanillaHealthIndicator();, +		}, +]