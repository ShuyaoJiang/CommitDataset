[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	private Security maybeCreateSecurity() {, +		if (ClassUtils.isPresent(SECURITY_CHECK_CLASS, null)) {, +			return new Security();, +		}, +		return null;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	private Security maybeCreateSecurity() {, +		if (ClassUtils.isPresent(SECURITY_CHECK_CLASS, null)) {, +			return new Security();, +		}, +		return null;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +				ignored.addAll(Arrays.asList(EndpointPaths, +						.get(this.endpointHandlerMapping)));, +					return EndpointPaths.get(endpointHandlerMapping);, +				return EndpointPaths.get(endpointHandlerMapping, false);, +	private static class EndpointPaths {, +, +		public static String[] get(EndpointHandlerMapping endpointHandlerMapping) {, +			String[] insecure = get(endpointHandlerMapping, false);, +			String[] secure = get(endpointHandlerMapping, true);, +			return StringUtils.mergeStringArrays(insecure, secure);, +		public static String[] get(EndpointHandlerMapping endpointHandlerMapping,, +				boolean secure) {, +, +}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	private Security maybeCreateSecurity() {, +		if (ClassUtils.isPresent(SECURITY_CHECK_CLASS, null)) {, +			return new Security();, +		}, +		return null;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +				ignored.addAll(Arrays.asList(EndpointPaths, +						.get(this.endpointHandlerMapping)));, +					return EndpointPaths.get(endpointHandlerMapping);, +				return EndpointPaths.get(endpointHandlerMapping, false);, +	private static class EndpointPaths {, +, +		public static String[] get(EndpointHandlerMapping endpointHandlerMapping) {, +			String[] insecure = get(endpointHandlerMapping, false);, +			String[] secure = get(endpointHandlerMapping, true);, +			return StringUtils.mergeStringArrays(insecure, secure);, +		public static String[] get(EndpointHandlerMapping endpointHandlerMapping,, +				boolean secure) {, +, +}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, +	@ConditionalOnJava(JavaVersion.EIGHT), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	private Security maybeCreateSecurity() {, +		if (ClassUtils.isPresent(SECURITY_CHECK_CLASS, null)) {, +			return new Security();, +		}, +		return null;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +				ignored.addAll(Arrays.asList(EndpointPaths, +						.get(this.endpointHandlerMapping)));, +					return EndpointPaths.get(endpointHandlerMapping);, +				return EndpointPaths.get(endpointHandlerMapping, false);, +	private static class EndpointPaths {, +, +		public static String[] get(EndpointHandlerMapping endpointHandlerMapping) {, +			String[] insecure = get(endpointHandlerMapping, false);, +			String[] secure = get(endpointHandlerMapping, true);, +			return StringUtils.mergeStringArrays(insecure, secure);, +		public static String[] get(EndpointHandlerMapping endpointHandlerMapping,, +				boolean secure) {, +, +}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, +	@ConditionalOnJava(JavaVersion.EIGHT), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/ActuatorHalBrowserEndpoint.java, +				// Ignore, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	private Security maybeCreateSecurity() {, +		if (ClassUtils.isPresent(SECURITY_CHECK_CLASS, null)) {, +			return new Security();, +		}, +		return null;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +				ignored.addAll(Arrays.asList(EndpointPaths, +						.get(this.endpointHandlerMapping)));, +					return EndpointPaths.get(endpointHandlerMapping);, +				return EndpointPaths.get(endpointHandlerMapping, false);, +	private static class EndpointPaths {, +, +		public static String[] get(EndpointHandlerMapping endpointHandlerMapping) {, +			String[] insecure = get(endpointHandlerMapping, false);]