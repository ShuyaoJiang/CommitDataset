[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			container.setPort(this.managementServerProperties.getPort());, +			container.setAddress(this.managementServerProperties.getAddress());, +			container.setContextPath(this.managementServerProperties.getContextPath());, +			container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			container.setPort(this.managementServerProperties.getPort());, +			container.setAddress(this.managementServerProperties.getAddress());, +			container.setContextPath(this.managementServerProperties.getContextPath());, +			container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +		container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			container.setPort(this.managementServerProperties.getPort());, +			container.setAddress(this.managementServerProperties.getAddress());, +			container.setContextPath(this.managementServerProperties.getContextPath());, +			container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +		container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +		if (getPort() != null) {, +			container.setPort(getPort());, +			container.setAddress(getAddress());, +			container.setContextPath(getContextPath());, +			container.setSessionTimeout(getSessionTimeout());, +		if (container instanceof TomcatEmbeddedServletContainerFactory) {, +			getTomcat(), +					.customizeTomcat((TomcatEmbeddedServletContainerFactory) container);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			container.setPort(this.managementServerProperties.getPort());, +			container.setAddress(this.managementServerProperties.getAddress());, +			container.setContextPath(this.managementServerProperties.getContextPath());, +			container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +		container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +		if (getPort() != null) {, +			container.setPort(getPort());, +			container.setAddress(getAddress());, +			container.setContextPath(getContextPath());, +			container.setSessionTimeout(getSessionTimeout());, +		if (container instanceof TomcatEmbeddedServletContainerFactory) {, +			getTomcat(), +					.customizeTomcat((TomcatEmbeddedServletContainerFactory) container);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, + * {@link ConfigurableEmbeddedServletContainer} from a {@link ServerProperties}, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			container.setPort(this.managementServerProperties.getPort());, +			container.setAddress(this.managementServerProperties.getAddress());, +			container.setContextPath(this.managementServerProperties.getContextPath());, +			container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ErrorMvcAutoConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +		container.addErrorPages(new ErrorPage(this.errorPath));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +		if (getPort() != null) {, +			container.setPort(getPort());, +			container.setAddress(getAddress());, +			container.setContextPath(getContextPath());, +			container.setSessionTimeout(getSessionTimeout());, +		if (container instanceof TomcatEmbeddedServletContainerFactory) {, +			getTomcat(), +					.customizeTomcat((TomcatEmbeddedServletContainerFactory) container);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerPropertiesAutoConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, + * {@link ConfigurableEmbeddedServletContainer} from a {@link ServerProperties}, +	public void customize(ConfigurableEmbeddedServletContainer container) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/EmbeddedServletContainerAutoConfigurationTests.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +			if (bean instanceof ConfigurableEmbeddedServletContainer) {, +		public void customize(ConfigurableEmbeddedServletContainer container) {, +			container.setPort(9000);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +		public void customize(ConfigurableEmbeddedServletContainer container) {]