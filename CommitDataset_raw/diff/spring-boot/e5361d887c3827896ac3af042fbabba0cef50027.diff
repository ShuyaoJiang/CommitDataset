[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# BANNER, +	spring.banner.charset=UTF-8 # Banner file encoding., +	spring.banner.location=classpath:banner.txt # Banner file location., +	spring.banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used)., +	spring.banner.image.width= # Width of the banner image in chars (default 76), +	spring.banner.image.height= # Height of the banner image in chars (default based on image height), +	spring.banner.image.margin= # Left hand image margin in chars (default 2), +	spring.banner.image.invert= # Whether images should be inverted for dark terminal themes (default false), +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# BANNER, +	spring.banner.charset=UTF-8 # Banner file encoding., +	spring.banner.location=classpath:banner.txt # Banner file location., +	spring.banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used)., +	spring.banner.image.width= # Width of the banner image in chars (default 76), +	spring.banner.image.height= # Height of the banner image in chars (default based on image height), +	spring.banner.image.margin= # Left hand image margin in chars (default 2), +	spring.banner.image.invert= # Whether images should be inverted for dark terminal themes (default false), +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +your classpath or by setting the `spring.banner.location` property to the location of such, +a file. If the file has an encoding other than UTF-8, you can set `spring.banner.charset`., +In addition to a text file, you can also add a `banner.gif`, `banner.jpg`, or `banner.png`, +image file to your classpath or set the `spring.banner.image.location` property. Images, +are converted into an ASCII art representation and printed above any text banner., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# BANNER, +	spring.banner.charset=UTF-8 # Banner file encoding., +	spring.banner.location=classpath:banner.txt # Banner file location., +	spring.banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used)., +	spring.banner.image.width= # Width of the banner image in chars (default 76), +	spring.banner.image.height= # Height of the banner image in chars (default based on image height), +	spring.banner.image.margin= # Left hand image margin in chars (default 2), +	spring.banner.image.invert= # Whether images should be inverted for dark terminal themes (default false), +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +your classpath or by setting the `spring.banner.location` property to the location of such, +a file. If the file has an encoding other than UTF-8, you can set `spring.banner.charset`., +In addition to a text file, you can also add a `banner.gif`, `banner.jpg`, or `banner.png`, +image file to your classpath or set the `spring.banner.image.location` property. Images, +are converted into an ASCII art representation and printed above any text banner., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ImageBanner.java, +	private static final String BANNER_IMAGE_PREFIX = "spring.banner.image.";, +, +		int width = environment.getProperty(BANNER_IMAGE_PREFIX + "width",, +				Integer.class, 76);, +		int height = environment.getProperty(BANNER_IMAGE_PREFIX + "height",, +				Integer.class, 0);, +		int margin = environment.getProperty(BANNER_IMAGE_PREFIX + "margin",, +				Integer.class, 2);, +		boolean invert = environment.getProperty(BANNER_IMAGE_PREFIX + "invert",, +				Boolean.class, false);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# BANNER, +	spring.banner.charset=UTF-8 # Banner file encoding., +	spring.banner.location=classpath:banner.txt # Banner file location., +	spring.banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used)., +	spring.banner.image.width= # Width of the banner image in chars (default 76), +	spring.banner.image.height= # Height of the banner image in chars (default based on image height), +	spring.banner.image.margin= # Left hand image margin in chars (default 2), +	spring.banner.image.invert= # Whether images should be inverted for dark terminal themes (default false), +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +your classpath or by setting the `spring.banner.location` property to the location of such, +a file. If the file has an encoding other than UTF-8, you can set `spring.banner.charset`., +In addition to a text file, you can also add a `banner.gif`, `banner.jpg`, or `banner.png`, +image file to your classpath or set the `spring.banner.image.location` property. Images, +are converted into an ASCII art representation and printed above any text banner., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ImageBanner.java, +	private static final String BANNER_IMAGE_PREFIX = "spring.banner.image.";, +, +		int width = environment.getProperty(BANNER_IMAGE_PREFIX + "width",, +				Integer.class, 76);, +		int height = environment.getProperty(BANNER_IMAGE_PREFIX + "height",, +				Integer.class, 0);, +		int margin = environment.getProperty(BANNER_IMAGE_PREFIX + "margin",, +				Integer.class, 2);, +		boolean invert = environment.getProperty(BANNER_IMAGE_PREFIX + "invert",, +				Boolean.class, false);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ResourceBanner.java, +					environment.getProperty("spring.banner.charset", Charset.class,, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# BANNER, +	spring.banner.charset=UTF-8 # Banner file encoding., +	spring.banner.location=classpath:banner.txt # Banner file location., +	spring.banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used)., +	spring.banner.image.width= # Width of the banner image in chars (default 76), +	spring.banner.image.height= # Height of the banner image in chars (default based on image height), +	spring.banner.image.margin= # Left hand image margin in chars (default 2), +	spring.banner.image.invert= # Whether images should be inverted for dark terminal themes (default false), +, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +your classpath or by setting the `spring.banner.location` property to the location of such, +a file. If the file has an encoding other than UTF-8, you can set `spring.banner.charset`., +In addition to a text file, you can also add a `banner.gif`, `banner.jpg`, or `banner.png`, +image file to your classpath or set the `spring.banner.image.location` property. Images, +are converted into an ASCII art representation and printed above any text banner., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ImageBanner.java, +	private static final String BANNER_IMAGE_PREFIX = "spring.banner.image.";]