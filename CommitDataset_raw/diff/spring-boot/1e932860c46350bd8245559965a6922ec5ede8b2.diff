[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasProperties.java, + * @author Stephane Nicoll, + * @since 2.0.0, +	private String uri = "http://localhost:7101/api/v1/publish";, +	private Duration meterTimeToLive = Duration.ofMinutes(15);, +	 * Whether to enable streaming to Atlas LWC., +	private boolean lwcEnabled;, +	private Duration configRefreshFrequency = Duration.ofSeconds(10);, +	private Duration configTimeToLive = Duration.ofSeconds(150);, +	private String configUri = "http://localhost:7101/lwc/api/v1/expressions/local-dev";, +	private String evalUri = "http://localhost:7101/lwc/api/v1/evaluate";, +	public boolean isLwcEnabled() {, +	public void setLwcEnabled(boolean lwcEnabled) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasProperties.java, + * @author Stephane Nicoll, + * @since 2.0.0, +	private String uri = "http://localhost:7101/api/v1/publish";, +	private Duration meterTimeToLive = Duration.ofMinutes(15);, +	 * Whether to enable streaming to Atlas LWC., +	private boolean lwcEnabled;, +	private Duration configRefreshFrequency = Duration.ofSeconds(10);, +	private Duration configTimeToLive = Duration.ofSeconds(150);, +	private String configUri = "http://localhost:7101/lwc/api/v1/expressions/local-dev";, +	private String evalUri = "http://localhost:7101/lwc/api/v1/evaluate";, +	public boolean isLwcEnabled() {, +	public void setLwcEnabled(boolean lwcEnabled) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasPropertiesConfigAdapter.java, +		return get(AtlasProperties::isEnabled, AtlasConfig.super::enabled);, +		return get(AtlasProperties::isLwcEnabled, AtlasConfig.super::lwcEnabled);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasProperties.java, + * @author Stephane Nicoll, + * @since 2.0.0, +	private String uri = "http://localhost:7101/api/v1/publish";, +	private Duration meterTimeToLive = Duration.ofMinutes(15);, +	 * Whether to enable streaming to Atlas LWC., +	private boolean lwcEnabled;, +	private Duration configRefreshFrequency = Duration.ofSeconds(10);, +	private Duration configTimeToLive = Duration.ofSeconds(150);, +	private String configUri = "http://localhost:7101/lwc/api/v1/expressions/local-dev";, +	private String evalUri = "http://localhost:7101/lwc/api/v1/evaluate";, +	public boolean isLwcEnabled() {, +	public void setLwcEnabled(boolean lwcEnabled) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasPropertiesConfigAdapter.java, +		return get(AtlasProperties::isEnabled, AtlasConfig.super::enabled);, +		return get(AtlasProperties::isLwcEnabled, AtlasConfig.super::lwcEnabled);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, + * @author Stephane Nicoll, +	private boolean descriptions = true;, +	 * Tag that will be mapped to "host" when shipping metrics to Datadog., +	private String hostTag = "instance";, +	private String uri = "https://app.datadoghq.com";, +	public boolean isDescriptions() {, +	public void setDescriptions(boolean descriptions) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasProperties.java, + * @author Stephane Nicoll, + * @since 2.0.0, +	private String uri = "http://localhost:7101/api/v1/publish";, +	private Duration meterTimeToLive = Duration.ofMinutes(15);, +	 * Whether to enable streaming to Atlas LWC., +	private boolean lwcEnabled;, +	private Duration configRefreshFrequency = Duration.ofSeconds(10);, +	private Duration configTimeToLive = Duration.ofSeconds(150);, +	private String configUri = "http://localhost:7101/lwc/api/v1/expressions/local-dev";, +	private String evalUri = "http://localhost:7101/lwc/api/v1/evaluate";, +	public boolean isLwcEnabled() {, +	public void setLwcEnabled(boolean lwcEnabled) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasPropertiesConfigAdapter.java, +		return get(AtlasProperties::isEnabled, AtlasConfig.super::enabled);, +		return get(AtlasProperties::isLwcEnabled, AtlasConfig.super::lwcEnabled);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogProperties.java, + * @author Stephane Nicoll, +	private boolean descriptions = true;, +	 * Tag that will be mapped to "host" when shipping metrics to Datadog., +	private String hostTag = "instance";, +	private String uri = "https://app.datadoghq.com";, +	public boolean isDescriptions() {, +	public void setDescriptions(boolean descriptions) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogPropertiesConfigAdapter.java, +		return get(DatadogProperties::isDescriptions, DatadogConfig.super::descriptions);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasProperties.java, + * @author Stephane Nicoll, + * @since 2.0.0, +	private String uri = "http://localhost:7101/api/v1/publish";, +	private Duration meterTimeToLive = Duration.ofMinutes(15);, +	 * Whether to enable streaming to Atlas LWC., +	private boolean lwcEnabled;, +	private Duration configRefreshFrequency = Duration.ofSeconds(10);, +	private Duration configTimeToLive = Duration.ofSeconds(150);, +	private String configUri = "http://localhost:7101/lwc/api/v1/expressions/local-dev";, +	private String evalUri = "http://localhost:7101/lwc/api/v1/evaluate";, +	public boolean isLwcEnabled() {, +	public void setLwcEnabled(boolean lwcEnabled) {, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasPropertiesConfigAdapter.java, +		return get(AtlasProperties::isEnabled, AtlasConfig.super::enabled);, +		return get(AtlasProperties::isLwcEnabled, AtlasConfig.super::lwcEnabled);]