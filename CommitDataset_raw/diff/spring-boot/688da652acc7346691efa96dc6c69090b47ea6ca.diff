[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +			EndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,, +				provider.getEndpoints(), endpointMediaTypes,, +				getCorsConfiguration(corsProperties));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +			EndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,, +				provider.getEndpoints(), endpointMediaTypes,, +				getCorsConfiguration(corsProperties));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * {@code management.server.port} is the same as the {@code server.port} the management, + * context will be the same as the main application context. If the, + * {@code management.server.port} is different to the {@code server.port} the management, + * context will be a separate context that has the main application context as its parent., +@EnableConfigurationProperties({ WebEndpointProperties.class,, +		ManagementServerProperties.class }), +			Boolean enabled = this.environment, +					.getProperty("management.server.ssl.enabled", Boolean.class, false);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +			EndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,, +				provider.getEndpoints(), endpointMediaTypes,, +				getCorsConfiguration(corsProperties));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * {@code management.server.port} is the same as the {@code server.port} the management, + * context will be the same as the main application context. If the, + * {@code management.server.port} is different to the {@code server.port} the management, + * context will be a separate context that has the main application context as its parent., +@EnableConfigurationProperties({ WebEndpointProperties.class,, +		ManagementServerProperties.class }), +			Boolean enabled = this.environment, +					.getProperty("management.server.ssl.enabled", Boolean.class, false);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointPropertiesTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +			EndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,, +				provider.getEndpoints(), endpointMediaTypes,, +				getCorsConfiguration(corsProperties));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * {@code management.server.port} is the same as the {@code server.port} the management, + * context will be the same as the main application context. If the, + * {@code management.server.port} is different to the {@code server.port} the management, + * context will be a separate context that has the main application context as its parent., +@EnableConfigurationProperties({ WebEndpointProperties.class,, +		ManagementServerProperties.class }), +			Boolean enabled = this.environment, +					.getProperty("management.server.ssl.enabled", Boolean.class, false);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointPropertiesTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java, +	public void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +			EndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,, +				provider.getEndpoints(), endpointMediaTypes,, +				getCorsConfiguration(corsProperties));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * {@code management.server.port} is the same as the {@code server.port} the management, + * context will be the same as the main application context. If the, + * {@code management.server.port} is different to the {@code server.port} the management, + * context will be a separate context that has the main application context as its parent., +@EnableConfigurationProperties({ WebEndpointProperties.class,, +		ManagementServerProperties.class }), +			Boolean enabled = this.environment, +					.getProperty("management.server.ssl.enabled", Boolean.class, false);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointPropertiesTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java, +	public void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/ShutdownEndpointTests.java, +		assertThat(context.getBean(ShutdownEndpoint.class).shutdown().get("message")), +				.startsWith("Shutting down");, +		assertThat(context.getBean(ShutdownEndpoint.class).shutdown().get("message")), +				.startsWith("Shutting down");, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.java, +			EndpointMediaTypes endpointMediaTypes, CorsEndpointProperties corsProperties,, +				provider.getEndpoints(), endpointMediaTypes,, +				getCorsConfiguration(corsProperties));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.java, + * {@code management.server.port} is the same as the {@code server.port} the management, + * context will be the same as the main application context. If the, + * {@code management.server.port} is different to the {@code server.port} the management, + * context will be a separate context that has the main application context as its parent., +@EnableConfigurationProperties({ WebEndpointProperties.class,, +		ManagementServerProperties.class }), +			Boolean enabled = this.environment, +					.getProperty("management.server.ssl.enabled", Boolean.class, false);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointPropertiesTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebMvcEndpointIntegrationTests.java, +	public void endpointsAreSecureWithActuatorRoleWithCustomBasePath() throws Exception {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/ShutdownEndpointTests.java, +		assertThat(context.getBean(ShutdownEndpoint.class).shutdown().get("message")), +				.startsWith("Shutting down");, +		assertThat(context.getBean(ShutdownEndpoint.class).shutdown().get("message")), +				.startsWith("Shutting down");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +	private void configureProviderDisablesAutocommit(, +			Map<String, Object> vendorProperties) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java]