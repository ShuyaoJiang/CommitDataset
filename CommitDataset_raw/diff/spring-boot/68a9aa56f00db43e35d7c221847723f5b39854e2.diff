[+++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +concourse-url: "https://ci.spring.io", +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +concourse-url: "https://ci.spring.io", +++ b/ci/pipeline.yml, +          BUILD_PIPELINE_NAME: ((pipeline-name)), +          BUILD_JOB_NAME: build, +          CONCOURSE_URL: ((concourse-url)), +        BUILD_PIPELINE_NAME: ((pipeline-name)), +        BUILD_JOB_NAME: build, +        CONCOURSE_URL: ((concourse-url)), +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +concourse-url: "https://ci.spring.io", +++ b/ci/pipeline.yml, +          BUILD_PIPELINE_NAME: ((pipeline-name)), +          BUILD_JOB_NAME: build, +          CONCOURSE_URL: ((concourse-url)), +        BUILD_PIPELINE_NAME: ((pipeline-name)), +        BUILD_JOB_NAME: build, +        CONCOURSE_URL: ((concourse-url)), +++ b/ci/scripts/determine-email-body.sh, +pushd git-repo > /dev/null, +popd > /dev/null, +PREV_STATES=$(echo $PREV_STATUSES | jq -r --arg BUILD_JOB_NAME "$BUILD_JOB_NAME" '.[]  | select(.context == $BUILD_JOB_NAME) | .state'), +	echo "Build SUCCESSFUL ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME}" > email-details/subject, +    	echo "Build ${CONCOURSE_URL}/teams/spring-boot/pipelines/${BUILD_PIPELINE_NAME} is successful!" > email-details/body, +		touch email-details/body, +	echo "Build ${CONCOURSE_URL}/teams/spring-boot/pipelines/${BUILD_PIPELINE_NAME} has failed!" > email-details/body, +		echo "Still FAILING ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME}" > email-details/subject, +		echo "Build FAILURE ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME}" > email-details/subject, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +pipeline-name: "spring-boot-2.0.x", +concourse-url: "https://ci.spring.io", +++ b/ci/pipeline.yml, +          BUILD_PIPELINE_NAME: ((pipeline-name)), +          BUILD_JOB_NAME: build, +          CONCOURSE_URL: ((concourse-url)), +        BUILD_PIPELINE_NAME: ((pipeline-name)), +        BUILD_JOB_NAME: build, +        CONCOURSE_URL: ((concourse-url)), +++ b/ci/scripts/determine-email-body.sh, +pushd git-repo > /dev/null, +popd > /dev/null, +PREV_STATES=$(echo $PREV_STATUSES | jq -r --arg BUILD_JOB_NAME "$BUILD_JOB_NAME" '.[]  | select(.context == $BUILD_JOB_NAME) | .state'), +	echo "Build SUCCESSFUL ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME}" > email-details/subject, +    	echo "Build ${CONCOURSE_URL}/teams/spring-boot/pipelines/${BUILD_PIPELINE_NAME} is successful!" > email-details/body, +		touch email-details/body, +	echo "Build ${CONCOURSE_URL}/teams/spring-boot/pipelines/${BUILD_PIPELINE_NAME} has failed!" > email-details/body, +		echo "Still FAILING ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME}" > email-details/subject, +		echo "Build FAILURE ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME}" > email-details/subject, +++ b/pom.xml, +		<revision>2.0.2.BUILD-SNAPSHOT</revision>, +++ b/ci/README.adoc]