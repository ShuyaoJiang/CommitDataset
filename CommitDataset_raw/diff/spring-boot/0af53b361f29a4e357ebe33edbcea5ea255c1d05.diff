[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +	private volatile boolean started;, +, +		synchronized (this.monitor) {, +			if (this.started) {, +				return;, +			}, +				this.started = true;, +	}, +			if (!this.started) {, +				return;, +			}, +			this.started = false;, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +	private volatile boolean started;, +, +		synchronized (this.monitor) {, +			if (this.started) {, +				return;, +			}, +				this.started = true;, +	}, +			if (!this.started) {, +				return;, +			}, +			this.started = false;, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private volatile boolean started;, +, +		synchronized (this.monitor) {, +			if (this.started) {, +				return;, +			}, +				this.started = true;, +	}, +			if (!this.started) {, +				return;, +			}, +				this.started = false;, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +	private volatile boolean started;, +, +		synchronized (this.monitor) {, +			if (this.started) {, +				return;, +			}, +				this.started = true;, +	}, +			if (!this.started) {, +				return;, +			}, +			this.started = false;, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private volatile boolean started;, +, +		synchronized (this.monitor) {, +			if (this.started) {, +				return;, +			}, +				this.started = true;, +	}, +			if (!this.started) {, +				return;, +			}, +				this.started = false;, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer.java, +	private volatile boolean started = false;, +			if (this.started) {, +				return;, +			}, +			if (!this.started) {, +				return;, +			}, +			try {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +	private volatile boolean started;, +, +		synchronized (this.monitor) {, +			if (this.started) {, +				return;, +			}, +				this.started = true;, +	}, +			if (!this.started) {, +				return;, +			}, +			this.started = false;, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainer.java, +	private volatile boolean started;, +, +		synchronized (this.monitor) {, +			if (this.started) {, +				return;, +			}, +				this.started = true;, +	}, +			if (!this.started) {, +				return;, +			}, +				this.started = false;]