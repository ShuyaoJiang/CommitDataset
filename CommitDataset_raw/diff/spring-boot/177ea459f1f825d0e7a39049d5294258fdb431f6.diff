[+++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.console= # appender pattern for output to the console (only supported with the default logback setup), +	logging.pattern.file= # appender pattern for output to the file (only supported with the default logback setup), +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.console= # appender pattern for output to the console (only supported with the default logback setup), +	logging.pattern.file= # appender pattern for output to the file (only supported with the default logback setup), +++ b/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java, +		loadDefaults(initializationContext, logFile);, +	 * @param initializationContext the logging initialization context, +	protected abstract void loadDefaults(, +			LoggingInitializationContext initializationContext, LogFile logFile);, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.console= # appender pattern for output to the console (only supported with the default logback setup), +	logging.pattern.file= # appender pattern for output to the file (only supported with the default logback setup), +++ b/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java, +		loadDefaults(initializationContext, logFile);, +	 * @param initializationContext the logging initialization context, +	protected abstract void loadDefaults(, +			LoggingInitializationContext initializationContext, LogFile logFile);, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/java/JavaLoggingSystem.java, + * Copyright 2012-2015 the original author or authors., +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.console= # appender pattern for output to the console (only supported with the default logback setup), +	logging.pattern.file= # appender pattern for output to the file (only supported with the default logback setup), +++ b/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java, +		loadDefaults(initializationContext, logFile);, +	 * @param initializationContext the logging initialization context, +	protected abstract void loadDefaults(, +			LoggingInitializationContext initializationContext, LogFile logFile);, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/java/JavaLoggingSystem.java, + * Copyright 2012-2015 the original author or authors., +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/log4j/Log4JLoggingSystem.java, +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.console= # appender pattern for output to the console (only supported with the default logback setup), +	logging.pattern.file= # appender pattern for output to the file (only supported with the default logback setup), +++ b/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java, +		loadDefaults(initializationContext, logFile);, +	 * @param initializationContext the logging initialization context, +	protected abstract void loadDefaults(, +			LoggingInitializationContext initializationContext, LogFile logFile);, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/java/JavaLoggingSystem.java, + * Copyright 2012-2015 the original author or authors., +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/log4j/Log4JLoggingSystem.java, +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java, +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.console= # appender pattern for output to the console (only supported with the default logback setup), +	logging.pattern.file= # appender pattern for output to the file (only supported with the default logback setup), +++ b/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java, +		loadDefaults(initializationContext, logFile);, +	 * @param initializationContext the logging initialization context, +	protected abstract void loadDefaults(, +			LoggingInitializationContext initializationContext, LogFile logFile);, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/java/JavaLoggingSystem.java, + * Copyright 2012-2015 the original author or authors., +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/log4j/Log4JLoggingSystem.java, +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java, +	protected void loadDefaults(LoggingInitializationContext initializationContext,, +			LogFile logFile) {, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/logback/DefaultLogbackConfiguration.java, + * Copyright 2012-2015 the original author or authors., +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.boot.logging.LoggingInitializationContext;, +import org.springframework.core.env.Environment;, +import org.springframework.core.env.PropertyResolver;, +import org.springframework.core.env.PropertySourcesPropertyResolver;, +	private final PropertyResolver patterns;, +, +	public DefaultLogbackConfiguration(, +			LoggingInitializationContext initializationContext, LogFile logFile) {, +		this.patterns = getPatternsResolver(initializationContext.getEnvironment());, +	private PropertyResolver getPatternsResolver(Environment environment) {, +		if (environment == null) {, +			return new PropertySourcesPropertyResolver(null);, +		}, +		return new RelaxedPropertyResolver(environment, "logging.pattern.");, +	}, +, +		String logPattern = this.patterns.getProperty("console", CONSOLE_LOG_PATTERN);, +		encoder.setPattern(OptionHelper.substVars(logPattern, config.getContext()));, +		String logPattern = this.patterns.getProperty("file", FILE_LOG_PATTERN);, +		encoder.setPattern(OptionHelper.substVars(logPattern, config.getContext()));, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.console= # appender pattern for output to the console (only supported with the default logback setup), +	logging.pattern.file= # appender pattern for output to the file (only supported with the default logback setup)]