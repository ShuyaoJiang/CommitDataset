[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, + * Copyright 2012-2016 the original author or authors., +	private static final String FILE_COLON_DOUBLE_SLASH = "file://";, +, +		String spec = getNormalizedFile(url), +				.substring(jarFile.getUrl().getFile().length());, +	private String getNormalizedFile(URL url) {, +		if (!url.getFile().startsWith(FILE_COLON_DOUBLE_SLASH)) {, +			return url.getFile();, +		}, +		return "file:" + url.getFile().substring(FILE_COLON_DOUBLE_SLASH.length());, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, + * Copyright 2012-2016 the original author or authors., +	private static final String FILE_COLON_DOUBLE_SLASH = "file://";, +, +		String spec = getNormalizedFile(url), +				.substring(jarFile.getUrl().getFile().length());, +	private String getNormalizedFile(URL url) {, +		if (!url.getFile().startsWith(FILE_COLON_DOUBLE_SLASH)) {, +			return url.getFile();, +		}, +		return "file:" + url.getFile().substring(FILE_COLON_DOUBLE_SLASH.length());, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/jar/JarFileTests.java, + * Copyright 2012-2016 the original author or authors., +		nonNestedJarFileFromString(, +				"jar:file:" + this.rootJarFile.getAbsolutePath() + "!/2.dat");, +	public void createNonNestedUrlFromStringWithDoubleSlash() throws Exception {, +		nonNestedJarFileFromString(, +				"jar:file://" + this.rootJarFile.getAbsolutePath() + "!/2.dat");, +	}, +, +	private void nonNestedJarFileFromString(String spec) throws Exception {]