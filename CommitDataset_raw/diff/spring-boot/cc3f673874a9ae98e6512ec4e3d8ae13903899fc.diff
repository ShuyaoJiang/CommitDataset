[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +import org.springframework.security.authentication.event.AuthenticationSuccessEvent;, +		else if (event instanceof AuthenticationSuccessEvent) {, +			onAuthenticationEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +import org.springframework.security.authentication.event.AuthenticationSuccessEvent;, +		else if (event instanceof AuthenticationSuccessEvent) {, +			onAuthenticationEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, +import org.springframework.security.authentication.event.InteractiveAuthenticationSuccessEvent;, +import static org.mockito.Mockito.never;, +	public void testOtherAuthenticationSuccess() {, +		this.listener.onApplicationEvent(new InteractiveAuthenticationSuccessEvent(, +				new UsernamePasswordAuthenticationToken("user", "password"), getClass()));, +		// No need to audit this one (it shadows a regular AuthenticationSuccessEvent), +		verify(this.publisher, never()).publishEvent((ApplicationEvent) anyObject());, +	}, +, +	@Test, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +import org.springframework.security.authentication.event.AuthenticationSuccessEvent;, +		else if (event instanceof AuthenticationSuccessEvent) {, +			onAuthenticationEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/security/AuthenticationAuditListenerTests.java, +import org.springframework.security.authentication.event.InteractiveAuthenticationSuccessEvent;, +import static org.mockito.Mockito.never;, +	public void testOtherAuthenticationSuccess() {, +		this.listener.onApplicationEvent(new InteractiveAuthenticationSuccessEvent(, +				new UsernamePasswordAuthenticationToken("user", "password"), getClass()));, +		// No need to audit this one (it shadows a regular AuthenticationSuccessEvent), +		verify(this.publisher, never()).publishEvent((ApplicationEvent) anyObject());, +	}, +, +	@Test, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/resources/application.properties, +logging.level.org.springframework.boot.actuate.audit.listener.AuditListener: DEBUG]