[+++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertySourcesPropertyValues.java, +import java.util.LinkedHashMap;, +	private final Map<String, PropertyValue> propertyValues = new LinkedHashMap<String, PropertyValue>();, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertySourcesPropertyValues.java, +import java.util.LinkedHashMap;, +	private final Map<String, PropertyValue> propertyValues = new LinkedHashMap<String, PropertyValue>();, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/PropertySourcesPropertyValuesTests.java, +import java.util.ArrayList;, +import java.util.LinkedHashMap;, +import org.springframework.beans.PropertyValue;, +	public void testOrderPreserved() {, +		LinkedHashMap<String, Object> map = new LinkedHashMap<String, Object>();, +		map.put("one", 1);, +		map.put("two", 2);, +		map.put("three", 3);, +		map.put("four", 4);, +		map.put("five", 5);, +		this.propertySources.addFirst(new MapPropertySource("ordered", map));, +		PropertySourcesPropertyValues propertyValues = new PropertySourcesPropertyValues(, +				this.propertySources);, +		PropertyValue[] values = propertyValues.getPropertyValues();, +		assertEquals(6, values.length);, +		Collection<String> names = new ArrayList<String>();, +		for (PropertyValue value : values) {, +			names.add(value.getName());, +		}, +		assertEquals("[one, two, three, four, five, name]", names.toString());, +	}, +, +	@Test]