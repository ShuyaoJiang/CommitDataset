[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +		SmartInitializingSingleton {, +	public void afterSingletonsInstantiated() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +		SmartInitializingSingleton {, +	public void afterSingletonsInstantiated() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/BeanTypeRegistry.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +			SmartInitializingSingleton {, +		public void afterSingletonsInstantiated() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +		SmartInitializingSingleton {, +	public void afterSingletonsInstantiated() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/BeanTypeRegistry.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +			SmartInitializingSingleton {, +		public void afterSingletonsInstantiated() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +			SmartInitializingSingleton {, +		@Autowired, +		private ApplicationContext context;, +, +		public void afterSingletonsInstantiated() {, +			if (this.context.getBeanNamesForType(AuthenticationManager.class).length == 0) {, +			AuthenticationManager manager = this.context, +					.getBean(AuthenticationManager.class);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +		SmartInitializingSingleton {, +	public void afterSingletonsInstantiated() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/BeanTypeRegistry.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +			SmartInitializingSingleton {, +		public void afterSingletonsInstantiated() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +			SmartInitializingSingleton {, +		@Autowired, +		private ApplicationContext context;, +, +		public void afterSingletonsInstantiated() {, +			if (this.context.getBeanNamesForType(AuthenticationManager.class).length == 0) {, +			AuthenticationManager manager = this.context, +					.getBean(AuthenticationManager.class);, +++ b/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityScanRegistrar.java, +import org.springframework.beans.factory.SmartInitializingSingleton;, +			SmartInitializingSingleton {, +		public void afterSingletonsInstantiated() {]