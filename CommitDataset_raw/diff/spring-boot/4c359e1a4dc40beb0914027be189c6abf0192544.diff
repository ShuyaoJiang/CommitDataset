[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.core.io.ResourceLoader;, +import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;, +		@Autowired, +		private ResourceLoader resourceLoader;, +, +		// Special case for static home page, +		@Override, +		public void addViewControllers(ViewControllerRegistry registry) {, +			if (this.resourceLoader.getResource("classpath:/static/index.html").exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +			else if (this.resourceLoader.getResource("classpath:/public/index.html"), +					.exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +			else if (this.resourceLoader.getResource("classpath:/resources/index.html"), +					.exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.core.io.ResourceLoader;, +import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;, +		@Autowired, +		private ResourceLoader resourceLoader;, +, +		// Special case for static home page, +		@Override, +		public void addViewControllers(ViewControllerRegistry registry) {, +			if (this.resourceLoader.getResource("classpath:/static/index.html").exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +			else if (this.resourceLoader.getResource("classpath:/public/index.html"), +					.exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +			else if (this.resourceLoader.getResource("classpath:/resources/index.html"), +					.exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +		}, +, +++ b/spring-boot-samples/pom.xml, +		<module>spring-boot-sample-web-static</module>, +				<plugin>, +					<artifactId>maven-war-plugin</artifactId>, +					<version>2.3</version>, +					<configuration>, +						<failOnMissingWebXml>false</failOnMissingWebXml>, +					</configuration>, +				</plugin>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.core.io.ResourceLoader;, +import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;, +		@Autowired, +		private ResourceLoader resourceLoader;, +, +		// Special case for static home page, +		@Override, +		public void addViewControllers(ViewControllerRegistry registry) {, +			if (this.resourceLoader.getResource("classpath:/static/index.html").exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +			else if (this.resourceLoader.getResource("classpath:/public/index.html"), +					.exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +			else if (this.resourceLoader.getResource("classpath:/resources/index.html"), +					.exists()) {, +				registry.addViewController("/").setViewName("/index.html");, +			}, +		}, +, +++ b/spring-boot-samples/pom.xml, +		<module>spring-boot-sample-web-static</module>, +				<plugin>, +					<artifactId>maven-war-plugin</artifactId>, +					<version>2.3</version>, +					<configuration>, +						<failOnMissingWebXml>false</failOnMissingWebXml>, +					</configuration>, +				</plugin>, +++ b/spring-boot-samples/spring-boot-sample-web-static/pom.xml, +<?xml version="1.0" encoding="UTF-8"?>, +<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">, +	<modelVersion>4.0.0</modelVersion>, +	<parent>, +		<groupId>org.springframework.boot</groupId>, +		<artifactId>spring-boot-samples</artifactId>, +		<version>0.5.0.BUILD-SNAPSHOT</version>, +	</parent>, +	<artifactId>spring-boot-sample-web-static</artifactId>, +	<packaging>war</packaging>, +	<properties>, +		<main.basedir>${basedir}/../..</main.basedir>, +	</properties>, +	<dependencies>]