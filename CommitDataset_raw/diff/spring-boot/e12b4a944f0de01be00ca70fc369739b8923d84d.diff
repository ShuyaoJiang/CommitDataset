[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +	 * authentication for all or some of those endpoints the best thing to do is to add your, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +	 * authentication for all or some of those endpoints the best thing to do is to add your, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/MainClassFinder.java, +		 * @param mainClass the main class, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +	 * authentication for all or some of those endpoints the best thing to do is to add your, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/MainClassFinder.java, +		 * @param mainClass the main class, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/AbstractExecutableArchiveLauncherTests.java, +		JarEntry libFoo = new JarEntry(entryPrefix + "/lib/foo.jar");, +		libFoo.setMethod(ZipEntry.STORED);, +		libFoo.setSize(fooJarStream.size());, +		libFoo.setCrc(crc32.getValue());, +		jarOutputStream.putNextEntry(libFoo);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +	 * authentication for all or some of those endpoints the best thing to do is to add your, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/MainClassFinder.java, +		 * @param mainClass the main class, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/AbstractExecutableArchiveLauncherTests.java, +		JarEntry libFoo = new JarEntry(entryPrefix + "/lib/foo.jar");, +		libFoo.setMethod(ZipEntry.STORED);, +		libFoo.setSize(fooJarStream.size());, +		libFoo.setCrc(crc32.getValue());, +		jarOutputStream.putNextEntry(libFoo);, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/custom-layout.apt, +---, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +	 * authentication for all or some of those endpoints the best thing to do is to add your, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/MainClassFinder.java, +		 * @param mainClass the main class, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/AbstractExecutableArchiveLauncherTests.java, +		JarEntry libFoo = new JarEntry(entryPrefix + "/lib/foo.jar");, +		libFoo.setMethod(ZipEntry.STORED);, +		libFoo.setSize(fooJarStream.size());, +		libFoo.setCrc(crc32.getValue());, +		jarOutputStream.putNextEntry(libFoo);, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/custom-layout.apt, +---, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/logback/DefaultLogbackConfiguration.java, +		setRollingPolicy(appender, config, logFile);, +		setMaxFileSize(appender, config);, +	private void setRollingPolicy(RollingFileAppender<ILoggingEvent> appender,, +	private void setMaxFileSize(RollingFileAppender<ILoggingEvent> appender,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +	 * authentication for all or some of those endpoints the best thing to do is to add your, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/MainClassFinder.java, +		 * @param mainClass the main class, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/AbstractExecutableArchiveLauncherTests.java, +		JarEntry libFoo = new JarEntry(entryPrefix + "/lib/foo.jar");, +		libFoo.setMethod(ZipEntry.STORED);, +		libFoo.setSize(fooJarStream.size());, +		libFoo.setCrc(crc32.getValue());, +		jarOutputStream.putNextEntry(libFoo);, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/custom-layout.apt, +---, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/logback/DefaultLogbackConfiguration.java, +		setRollingPolicy(appender, config, logFile);, +		setMaxFileSize(appender, config);, +	private void setRollingPolicy(RollingFileAppender<ILoggingEvent> appender,, +	private void setMaxFileSize(RollingFileAppender<ILoggingEvent> appender,, +++ b/spring-boot/src/main/java/org/springframework/boot/orm/jpa/hibernate/SpringPhysicalNamingStrategy.java, +	 * Get an the identifier for the specified details. By default this method will return, +	 * @param jdbcEnvironment the JDBC environment which can be used to determine case, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +	 * for all or some of those endpoints the best thing to do is to add your own, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/JolokiaMvcEndpointIntegrationTests.java, + * Integration tests for {@link JolokiaMvcEndpoint}., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java]