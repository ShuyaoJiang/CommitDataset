[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(prefix = "management.metrics.export.simple", name = "enabled", havingValue = "true", matchIfMissing = true), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(prefix = "management.metrics.export.simple", name = "enabled", havingValue = "true", matchIfMissing = true), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleProperties.java, +	 * Enable in-memory metrics that aren't published anywhere (allows you to see, +	 * what metrics are collected in the metrics actuator endpoint)., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(prefix = "management.metrics.export.simple", name = "enabled", havingValue = "true", matchIfMissing = true), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleProperties.java, +	 * Enable in-memory metrics that aren't published anywhere (allows you to see, +	 * what metrics are collected in the metrics actuator endpoint)., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimplePropertiesConfigAdapter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(prefix = "management.metrics.export.simple", name = "enabled", havingValue = "true", matchIfMissing = true), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleProperties.java, +	 * Enable in-memory metrics that aren't published anywhere (allows you to see, +	 * what metrics are collected in the metrics actuator endpoint)., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimplePropertiesConfigAdapter.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfigurationTests.java, +	public void backsOffWhenSpecificallyDisabled() {, +		this.contextRunner.withUserConfiguration(BaseConfiguration.class), +				.withPropertyValues("management.metrics.export.simple.enabled=false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SimpleMeterRegistry.class), +						.doesNotHaveBean(SimpleConfig.class));, +	}, +, +	@Test]