[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Many more questions can be answered by looking at the source code and the Javadoc. Some, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Many more questions can be answered by looking at the source code and the Javadoc. Some, +++ b/spring-boot-docs/src/main/asciidoc/index.adoc, +:sc-spring-boot-test-autoconfigure: {github-code}/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Many more questions can be answered by looking at the source code and the Javadoc. Some, +++ b/spring-boot-docs/src/main/asciidoc/index.adoc, +:sc-spring-boot-test-autoconfigure: {github-code}/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-cli.adoc, +Spring Boot CLI. There is also extensive Javadoc throughout the, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Many more questions can be answered by looking at the source code and the Javadoc. Some, +++ b/spring-boot-docs/src/main/asciidoc/index.adoc, +:sc-spring-boot-test-autoconfigure: {github-code}/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-cli.adoc, +Spring Boot CLI. There is also extensive Javadoc throughout the, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Most developers will just use the `spring-boot-starter-test` '`Starter POM`' which, +* {spring-reference}/#integration-testing.html[Spring Test] & Spring Boot Test -- Utilities and integration test support for Spring Boot, +* http://joel-costigliola.github.io/assertj/[AssertJ] -- A fluent assertion library., +alternative to the standard `spring-test` `@ContextConfiguration` annotation when you need, +* `NONE` -- Loads an `ApplicationContext` using `SpringApplication` but does not provide, +classes, on fields within your test, or on `@Configuration` classes and fields. When used, +on a field, the instance of the created mock will also be injected. Mock beans are, +See the Javadoc for full details., +want to involve database calls in those tests; or you _might be wanting_ to test JPA, +used to automatically configure such '`slices`'. Each of them works in a similar way,, +use the `@JsonTest` annotation. `@JsonTest` will auto-configure Jackson `ObjectMapper`,, +The `@DataJpaTest` can be used if you want to test JPA applications. By default it will, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Many more questions can be answered by looking at the source code and the Javadoc. Some, +++ b/spring-boot-docs/src/main/asciidoc/index.adoc, +:sc-spring-boot-test-autoconfigure: {github-code}/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-cli.adoc, +Spring Boot CLI. There is also extensive Javadoc throughout the, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Most developers will just use the `spring-boot-starter-test` '`Starter POM`' which, +* {spring-reference}/#integration-testing.html[Spring Test] & Spring Boot Test -- Utilities and integration test support for Spring Boot, +* http://joel-costigliola.github.io/assertj/[AssertJ] -- A fluent assertion library., +alternative to the standard `spring-test` `@ContextConfiguration` annotation when you need, +* `NONE` -- Loads an `ApplicationContext` using `SpringApplication` but does not provide, +classes, on fields within your test, or on `@Configuration` classes and fields. When used, +on a field, the instance of the created mock will also be injected. Mock beans are, +See the Javadoc for full details., +want to involve database calls in those tests; or you _might be wanting_ to test JPA, +used to automatically configure such '`slices`'. Each of them works in a similar way,, +use the `@JsonTest` annotation. `@JsonTest` will auto-configure Jackson `ObjectMapper`,, +The `@DataJpaTest` can be used if you want to test JPA applications. By default it will, +++ b/spring-boot-samples/spring-boot-sample-test/src/main/java/sample/test/domain/User.java, +	public Long getId() {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +Many more questions can be answered by looking at the source code and the Javadoc. Some, +++ b/spring-boot-docs/src/main/asciidoc/index.adoc, +:sc-spring-boot-test-autoconfigure: {github-code}/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-cli.adoc, +Spring Boot CLI. There is also extensive Javadoc throughout the, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +Most developers will just use the `spring-boot-starter-test` '`Starter POM`' which, +* {spring-reference}/#integration-testing.html[Spring Test] & Spring Boot Test -- Utilities and integration test support for Spring Boot, +* http://joel-costigliola.github.io/assertj/[AssertJ] -- A fluent assertion library., +alternative to the standard `spring-test` `@ContextConfiguration` annotation when you need, +* `NONE` -- Loads an `ApplicationContext` using `SpringApplication` but does not provide, +classes, on fields within your test, or on `@Configuration` classes and fields. When used, +on a field, the instance of the created mock will also be injected. Mock beans are, +See the Javadoc for full details., +want to involve database calls in those tests; or you _might be wanting_ to test JPA, +used to automatically configure such '`slices`'. Each of them works in a similar way,, +use the `@JsonTest` annotation. `@JsonTest` will auto-configure Jackson `ObjectMapper`,, +The `@DataJpaTest` can be used if you want to test JPA applications. By default it will, +++ b/spring-boot-samples/spring-boot-sample-test/src/main/java/sample/test/domain/User.java, +	public Long getId() {, +++ b/spring-boot-samples/spring-boot-sample-test/src/main/java/sample/test/domain/UserRepository.java, + * Domain repository for {@link User}., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfigurationTests.java, +	public void testExplicitDriverClassClearsUsername() throws Exception {, +	// see testExplicitDriverClassClearsUsername, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc]