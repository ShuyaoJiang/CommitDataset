[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/AuthenticationManagerConfiguration.java, +	@ConditionalOnMissingBean(type = "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/AuthenticationManagerConfiguration.java, +	@ConditionalOnMissingBean(type = "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/servlet/AuthenticationManagerConfigurationTests.java, +import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;, +	@Test, +	public void userDetailsServiceWhenClientRegistrationRepositoryBeanPresent() {, +		this.contextRunner, +				.withUserConfiguration(TestConfigWithClientRegistrationRepository.class,, +						AuthenticationManagerConfiguration.class), +				.run(((context) -> assertThat(context).doesNotHaveBean(InMemoryUserDetailsManager.class)));, +	}, +, +	@Configuration, +	@Import(TestSecurityConfiguration.class), +	protected static class TestConfigWithClientRegistrationRepository {, +, +		@Bean, +		public ClientRegistrationRepository clientRegistrationRepository() {, +			return mock(ClientRegistrationRepository.class);, +		}, +, +	}, +]