[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration.java, +	@ConditionalOnProperty(prefix = "error.whitelabel", name = "enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorMvcAutoConfiguration.java, +	@ConditionalOnProperty(prefix = "error.whitelabel", name = "enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerDirectMockMvcTests.java, +import javax.servlet.ServletException;, +, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +, + * @author Sebastien Deleuze, +	@Rule, +	public final ExpectedException thrown = ExpectedException.none();, +, +	@Test, +	public void errorPageNotAvailableWithWhitelabelDisabled() throws Exception {, +		setup((ConfigurableWebApplicationContext) new SpringApplication(, +				WebMvcIncludedConfiguration.class).run("--server.port=0", "--error.whitelabel.enabled=false"));, +, +		thrown.expect(ServletException.class);, +		this.mockMvc.perform(get("/error").accept(MediaType.TEXT_HTML));, +	}, +]