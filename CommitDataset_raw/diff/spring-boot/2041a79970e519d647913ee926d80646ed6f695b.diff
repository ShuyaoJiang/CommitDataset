[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class MessageSourceAutoConfiguration implements EnvironmentAware {, +	private RelaxedPropertyResolver environment;, +, +	@Override, +	public void setEnvironment(Environment environment) {, +		this.environment = new RelaxedPropertyResolver(environment, "spring.messages.");, +	}, +		String basename = this.environment.getProperty("basename", "messages");, +		messageSource.setBasename(basename);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class MessageSourceAutoConfiguration implements EnvironmentAware {, +	private RelaxedPropertyResolver environment;, +, +	@Override, +	public void setEnvironment(Environment environment) {, +		this.environment = new RelaxedPropertyResolver(environment, "spring.messages.");, +	}, +		String basename = this.environment.getProperty("basename", "messages");, +		messageSource.setBasename(basename);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class BatchDatabaseInitializer implements EnvironmentAware {, +, +	private static final String DEFAULT_SCHEMA_LOCATION = "classpath:org/springframework/batch/core/schema-@@platform@@.sql";, +	private RelaxedPropertyResolver environment;, +, +	@Override, +	public void setEnvironment(Environment environment) {, +		this.environment = new RelaxedPropertyResolver(environment, "spring.batch.");, +	}, +		String schemaLocation = this.environment.getProperty("schema",, +				DEFAULT_SCHEMA_LOCATION);, +		schemaLocation = schemaLocation.replace("@@platform@@", platform);, +		populator.addScript(this.resourceLoader.getResource(schemaLocation));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class MessageSourceAutoConfiguration implements EnvironmentAware {, +	private RelaxedPropertyResolver environment;, +, +	@Override, +	public void setEnvironment(Environment environment) {, +		this.environment = new RelaxedPropertyResolver(environment, "spring.messages.");, +	}, +		String basename = this.environment.getProperty("basename", "messages");, +		messageSource.setBasename(basename);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class BatchDatabaseInitializer implements EnvironmentAware {, +, +	private static final String DEFAULT_SCHEMA_LOCATION = "classpath:org/springframework/batch/core/schema-@@platform@@.sql";, +	private RelaxedPropertyResolver environment;, +, +	@Override, +	public void setEnvironment(Environment environment) {, +		this.environment = new RelaxedPropertyResolver(environment, "spring.batch.");, +	}, +		String schemaLocation = this.environment.getProperty("schema",, +				DEFAULT_SCHEMA_LOCATION);, +		schemaLocation = schemaLocation.replace("@@platform@@", platform);, +		populator.addScript(this.resourceLoader.getResource(schemaLocation));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +	protected static class DefaultTemplateResolverConfiguration implements, +			EnvironmentAware {, +		private RelaxedPropertyResolver environment;, +		@Override, +		public void setEnvironment(Environment environment) {, +			this.environment = new RelaxedPropertyResolver(environment,, +					"spring.thymeleaf.");, +		}, +			resolver.setPrefix(this.environment.getProperty("prefix",, +					"classpath:/templates/"));, +			resolver.setSuffix(this.environment.getProperty("suffix", ".html"));, +			resolver.setTemplateMode(this.environment.getProperty("mode", "HTML5"));, +			resolver.setCacheable(this.environment.getProperty("cache", Boolean.class,, +					true));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import org.springframework.boot.bind.RelaxedPropertyResolver;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class MessageSourceAutoConfiguration implements EnvironmentAware {, +	private RelaxedPropertyResolver environment;, +, +	@Override, +	public void setEnvironment(Environment environment) {]