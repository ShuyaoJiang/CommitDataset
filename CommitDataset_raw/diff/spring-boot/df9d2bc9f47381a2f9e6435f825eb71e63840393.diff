[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnPropertyCondition.java, +				String key = this.prefix + name;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.java, + * Copyright 2012-2017 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnPropertyCondition.java, +				String key = this.prefix + name;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnPropertyTests.java, + * Copyright 2012-2017 the original author or authors., +import org.springframework.boot.WebApplicationType;, +import org.springframework.boot.builder.SpringApplicationBuilder;, +import org.springframework.context.ConfigurableApplicationContext;, +import org.springframework.core.env.ConfigurableEnvironment;, +import org.springframework.core.env.StandardEnvironment;, +	private ConfigurableApplicationContext context;, +, +	private ConfigurableEnvironment environment = new StandardEnvironment();, +		EnvironmentTestUtils.addEnvironment(this.environment, environment);, +		this.context = new SpringApplicationBuilder(config).environment(this.environment), +				.web(WebApplicationType.NONE).run();, +	@Configuration, +	@Configuration]