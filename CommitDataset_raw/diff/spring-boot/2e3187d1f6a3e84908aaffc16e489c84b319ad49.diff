[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java, +			return OriginTrackedValue.of(getValue(value), origin);, +		}, +, +		private Object getValue(Object value) {, +			return (value != null ? value : "");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java, +			return OriginTrackedValue.of(getValue(value), origin);, +		}, +, +		private Object getValue(Object value) {, +			return (value != null ? value : "");, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/env/OriginTrackedYamlLoaderTests.java, +	@Test, +	public void processEmptyAndNullValues() throws Exception {, +		OriginTrackedValue empty = getValue("empty");, +		OriginTrackedValue nullValue = getValue("null-value");, +		assertThat(empty.getValue()).isEqualTo("");, +		assertThat(getLocation(empty)).isEqualTo("27:8");, +		assertThat(nullValue.getValue()).isEqualTo("");, +		assertThat(getLocation(nullValue)).isEqualTo("28:13");, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java, +			return OriginTrackedValue.of(getValue(value), origin);, +		}, +, +		private Object getValue(Object value) {, +			return (value != null ? value : "");, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/env/OriginTrackedYamlLoaderTests.java, +	@Test, +	public void processEmptyAndNullValues() throws Exception {, +		OriginTrackedValue empty = getValue("empty");, +		OriginTrackedValue nullValue = getValue("null-value");, +		assertThat(empty.getValue()).isEqualTo("");, +		assertThat(getLocation(empty)).isEqualTo("27:8");, +		assertThat(nullValue.getValue()).isEqualTo("");, +		assertThat(getLocation(nullValue)).isEqualTo("28:13");, +	}, +, +++ b/spring-boot-project/spring-boot/src/test/resources/org/springframework/boot/env/test-yaml.yml, +empty: "", +null-value: null]