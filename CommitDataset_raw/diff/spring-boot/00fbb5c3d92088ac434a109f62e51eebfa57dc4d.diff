[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/SsoSecurityConfigurer.java, +import org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoRestTemplateFactory;, +				.getBean(UserInfoRestTemplateFactory.class).getUserInfoRestTemplate();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/SsoSecurityConfigurer.java, +import org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoRestTemplateFactory;, +				.getBean(UserInfoRestTemplateFactory.class).getUserInfoRestTemplate();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration.java, +import org.springframework.security.oauth2.client.OAuth2ClientContext;, +	@Bean, +	@ConditionalOnMissingBean, +	public UserInfoRestTemplateFactory userInfoRestTemplateFactory(, +			ObjectProvider<List<UserInfoRestTemplateCustomizer>> customizersProvider,, +			ObjectProvider<OAuth2ProtectedResourceDetails> detailsProvider,, +			ObjectProvider<OAuth2ClientContext> oauth2ClientContextProvider) {, +		return new UserInfoRestTemplateFactory(customizersProvider, detailsProvider,, +				oauth2ClientContextProvider);, +	}, +, +					UserInfoRestTemplateFactory restTemplateFactory,, +				this.restTemplate = restTemplateFactory.getUserInfoRestTemplate();, +					UserInfoRestTemplateFactory restTemplateFactory,, +				this.restTemplate = restTemplateFactory.getUserInfoRestTemplate();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/SsoSecurityConfigurer.java, +import org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoRestTemplateFactory;, +				.getBean(UserInfoRestTemplateFactory.class).getUserInfoRestTemplate();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration.java, +import org.springframework.security.oauth2.client.OAuth2ClientContext;, +	@Bean, +	@ConditionalOnMissingBean, +	public UserInfoRestTemplateFactory userInfoRestTemplateFactory(, +			ObjectProvider<List<UserInfoRestTemplateCustomizer>> customizersProvider,, +			ObjectProvider<OAuth2ProtectedResourceDetails> detailsProvider,, +			ObjectProvider<OAuth2ClientContext> oauth2ClientContextProvider) {, +		return new UserInfoRestTemplateFactory(customizersProvider, detailsProvider,, +				oauth2ClientContextProvider);, +	}, +, +					UserInfoRestTemplateFactory restTemplateFactory,, +				this.restTemplate = restTemplateFactory.getUserInfoRestTemplate();, +					UserInfoRestTemplateFactory restTemplateFactory,, +				this.restTemplate = restTemplateFactory.getUserInfoRestTemplate();, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/SsoSecurityConfigurer.java, +import org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoRestTemplateFactory;, +				.getBean(UserInfoRestTemplateFactory.class).getUserInfoRestTemplate();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration.java, +import org.springframework.security.oauth2.client.OAuth2ClientContext;, +	@Bean, +	@ConditionalOnMissingBean, +	public UserInfoRestTemplateFactory userInfoRestTemplateFactory(, +			ObjectProvider<List<UserInfoRestTemplateCustomizer>> customizersProvider,, +			ObjectProvider<OAuth2ProtectedResourceDetails> detailsProvider,, +			ObjectProvider<OAuth2ClientContext> oauth2ClientContextProvider) {, +		return new UserInfoRestTemplateFactory(customizersProvider, detailsProvider,, +				oauth2ClientContextProvider);, +	}, +, +					UserInfoRestTemplateFactory restTemplateFactory,, +				this.restTemplate = restTemplateFactory.getUserInfoRestTemplate();, +					UserInfoRestTemplateFactory restTemplateFactory,, +				this.restTemplate = restTemplateFactory.getUserInfoRestTemplate();, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/UserInfoRestTemplateFactory.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.security.oauth2.resource;, +, +import java.util.List;, +, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerTokenServicesConfiguration.AcceptJsonRequestEnhancer;, +import org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerTokenServicesConfiguration.AcceptJsonRequestInterceptor;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.annotation.AnnotationAwareOrderComparator;, +import org.springframework.security.oauth2.client.OAuth2ClientContext;, +import org.springframework.security.oauth2.client.OAuth2RestTemplate;, +import org.springframework.security.oauth2.client.resource.OAuth2ProtectedResourceDetails;, +import org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeAccessTokenProvider;, +import org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails;, +import org.springframework.util.CollectionUtils;, +, +/**, + * Factory used to create the rest template used for extracting user info during, + * authentication., + *, + * @author Dave Syer]