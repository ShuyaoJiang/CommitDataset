[+++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringApplicationContextLoader.java, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.test.context.ContextCustomizer;, +		ConfigurableApplicationContext context = application.run();, +		return context;, +			MergedContextConfiguration config, SpringApplication application) {, +		for (ContextCustomizer contextCustomizer : config.getContextCustomizers()) {, +			initializers.add(new ContextCustomizerAdapter(contextCustomizer, config));, +		}, +				config.getPropertySourceLocations()));, +		for (Class<? extends ApplicationContextInitializer<?>> initializerClass : config, +			return (AnnotationUtils.findAnnotation(configuration.getTestClass(),, +					annotation) != null);, +		}, +, +	}, +, +	/**, +	 * Adapts a {@link ContextCustomizer} to a {@link ApplicationContextInitializer} so, +	 * that it can be triggered via {@link SpringApplication}., +	 */, +	private static class ContextCustomizerAdapter, +			implements ApplicationContextInitializer<ConfigurableApplicationContext> {, +, +		private final ContextCustomizer contextCustomizer;, +, +		private final MergedContextConfiguration config;, +, +		ContextCustomizerAdapter(ContextCustomizer contextCustomizer,, +				MergedContextConfiguration config) {, +			this.contextCustomizer = contextCustomizer;, +			this.config = config;, +		}, +, +		@Override, +		public void initialize(ConfigurableApplicationContext applicationContext) {, +			this.contextCustomizer.customizeContext(applicationContext, this.config);]