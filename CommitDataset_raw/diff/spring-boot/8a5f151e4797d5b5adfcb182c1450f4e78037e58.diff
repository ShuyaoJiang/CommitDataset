[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +		@ConditionalOnProperty(name = "spring.freemarker.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +		@ConditionalOnProperty(name = "spring.freemarker.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.java, +	/**, +	 * Switches off MVC view resolution if set to false (default true)., +	 */, +	private boolean enabled = true;, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +		@ConditionalOnProperty(name = "spring.freemarker.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.java, +	/**, +	 * Switches off MVC view resolution if set to false (default true)., +	 */, +	private boolean enabled = true;, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(name = "spring.groovy.template.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +		@ConditionalOnProperty(name = "spring.freemarker.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.java, +	/**, +	 * Switches off MVC view resolution if set to false (default true)., +	 */, +	private boolean enabled = true;, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(name = "spring.groovy.template.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties.java, +	/**, +	 * Switches off MVC view resolution if set to false (default true)., +	 */, +	private boolean enabled = true;, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +		@ConditionalOnProperty(name = "spring.freemarker.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerProperties.java, +	/**, +	 * Switches off MVC view resolution if set to false (default true)., +	 */, +	private boolean enabled = true;, +, +	public boolean isEnabled() {, +		return this.enabled;, +	}, +, +	public void setEnabled(boolean enabled) {, +		this.enabled = enabled;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(name = "spring.groovy.template.enabled", matchIfMissing = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateProperties.java, +	/**, +	 * Switches off MVC view resolution if set to false (default true)., +	 */, +	private boolean enabled = true;, +]