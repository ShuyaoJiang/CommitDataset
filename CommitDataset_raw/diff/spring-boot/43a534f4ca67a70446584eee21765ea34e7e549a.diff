[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +		else {, +			Resource schema = this.embeddedProperties.getValidation().getSchema();, +			if (schema != null) {, +							Schema.getSchema(schema.getInputStream())));, +							"Unable to load schema " + schema.getDescription(), ex);, +				}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +		else {, +			Resource schema = this.embeddedProperties.getValidation().getSchema();, +			if (schema != null) {, +							Schema.getSchema(schema.getInputStream())));, +							"Unable to load schema " + schema.getDescription(), ex);, +				}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties.java, +	 * Schema validation., +	public static class Credential {, +	public static class Validation {, +		 * Enable LDAP schema validation., +		 * Path to the custom schema., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +		else {, +			Resource schema = this.embeddedProperties.getValidation().getSchema();, +			if (schema != null) {, +							Schema.getSchema(schema.getInputStream())));, +							"Unable to load schema " + schema.getDescription(), ex);, +				}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties.java, +	 * Schema validation., +	public static class Credential {, +	public static class Validation {, +		 * Enable LDAP schema validation., +		 * Path to the custom schema., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +    spring.ldap.embedded.base-dn= # The base DN, +    spring.ldap.embedded.port= # Embedded LDAP port., +    spring.ldap.embedded.validation.enabled=true # Enable LDAP schema validation., +    spring.ldap.embedded.validation.schema= # Path to the custom schema., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfiguration.java, +		else {, +			Resource schema = this.embeddedProperties.getValidation().getSchema();, +			if (schema != null) {, +							Schema.getSchema(schema.getInputStream())));, +							"Unable to load schema " + schema.getDescription(), ex);, +				}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapProperties.java, +	 * Schema validation., +	public static class Credential {, +	public static class Validation {, +		 * Enable LDAP schema validation., +		 * Path to the custom schema., +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +    spring.ldap.embedded.base-dn= # The base DN, +    spring.ldap.embedded.port= # Embedded LDAP port., +    spring.ldap.embedded.validation.enabled=true # Enable LDAP schema validation., +    spring.ldap.embedded.validation.schema= # Path to the custom schema., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +By default, a standard schema will be used to validate `LDIF` files, you can turn off, +validation altogether using the `spring.ldap.embedded.validation.enabled` property. If, +you have custom attributes, you can use `spring.ldap.embedded.validation.schema` to define, +your custom attribute types or object classes.]