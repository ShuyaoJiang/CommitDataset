[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +			private static final Log logger = LogFactory, +					.getLog(Neo4jWebMvcConfiguration.class);, +, +			private final Neo4jProperties neo4jProperties;, +, +			protected Neo4jWebMvcConfiguration(Neo4jProperties neo4jProperties) {, +				this.neo4jProperties = neo4jProperties;, +			}, +, +				if (this.neo4jProperties.getOpenInView() == null) {, +					logger.warn("spring.data.neo4j.open-in-view is enabled by default.", +							+ "Therefore, database queries may be performed during view ", +							+ "rendering. Explicitly configure ", +							+ "spring.data.neo4j.open-in-view to disable this warning");, +				}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +			private static final Log logger = LogFactory, +					.getLog(Neo4jWebMvcConfiguration.class);, +, +			private final Neo4jProperties neo4jProperties;, +, +			protected Neo4jWebMvcConfiguration(Neo4jProperties neo4jProperties) {, +				this.neo4jProperties = neo4jProperties;, +			}, +, +				if (this.neo4jProperties.getOpenInView() == null) {, +					logger.warn("spring.data.neo4j.open-in-view is enabled by default.", +							+ "Therefore, database queries may be performed during view ", +							+ "rendering. Explicitly configure ", +							+ "spring.data.neo4j.open-in-view to disable this warning");, +				}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties.java, +	/**, +	 * Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the, +	 * entire processing of the request.",, +	 */, +	private Boolean openInView;, +, +	public Boolean getOpenInView() {, +		return this.openInView;, +	}, +, +	public void setOpenInView(Boolean openInView) {, +		this.openInView = openInView;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +			private static final Log logger = LogFactory, +					.getLog(Neo4jWebMvcConfiguration.class);, +, +			private final Neo4jProperties neo4jProperties;, +, +			protected Neo4jWebMvcConfiguration(Neo4jProperties neo4jProperties) {, +				this.neo4jProperties = neo4jProperties;, +			}, +, +				if (this.neo4jProperties.getOpenInView() == null) {, +					logger.warn("spring.data.neo4j.open-in-view is enabled by default.", +							+ "Therefore, database queries may be performed during view ", +							+ "rendering. Explicitly configure ", +							+ "spring.data.neo4j.open-in-view to disable this warning");, +				}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties.java, +	/**, +	 * Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the, +	 * entire processing of the request.",, +	 */, +	private Boolean openInView;, +, +	public Boolean getOpenInView() {, +		return this.openInView;, +	}, +, +	public void setOpenInView(Boolean openInView) {, +		this.openInView = openInView;, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +			private static final Log logger = LogFactory, +					.getLog(JpaWebMvcConfiguration.class);, +, +			private final JpaProperties jpaProperties;, +, +			protected JpaWebMvcConfiguration(JpaProperties jpaProperties) {, +				this.jpaProperties = jpaProperties;, +			}, +, +				if (this.jpaProperties.getOpenInView() == null) {, +					logger.warn("spring.jpa.open-in-view is enabled by default. ", +							+ "Therefore, database queries may be performed during view "]