[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/BasicErrorController.java, +import org.springframework.http.ResponseEntity;, +		Map<String, Object> map = extract(new ServletRequestAttributes(request), false,, +				false);, +	public ResponseEntity<Map<String, Object>> error(HttpServletRequest request) {, +		Map<String, Object> extracted = extract(attributes,, +				trace != null && !"false".equals(trace.toLowerCase()), true);, +		HttpStatus statusCode;, +		try {, +			statusCode = HttpStatus.valueOf((Integer) extracted.get("status"));, +		}, +		catch (Exception e) {, +			statusCode = HttpStatus.INTERNAL_SERVER_ERROR;, +		}, +		return new ResponseEntity<Map<String, Object>>(extracted, statusCode);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/BasicErrorController.java, +import org.springframework.http.ResponseEntity;, +		Map<String, Object> map = extract(new ServletRequestAttributes(request), false,, +				false);, +	public ResponseEntity<Map<String, Object>> error(HttpServletRequest request) {, +		Map<String, Object> extracted = extract(attributes,, +				trace != null && !"false".equals(trace.toLowerCase()), true);, +		HttpStatus statusCode;, +		try {, +			statusCode = HttpStatus.valueOf((Integer) extracted.get("status"));, +		}, +		catch (Exception e) {, +			statusCode = HttpStatus.INTERNAL_SERVER_ERROR;, +		}, +		return new ResponseEntity<Map<String, Object>>(extracted, statusCode);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/web/BasicErrorControllerIntegrationTests.java, +				.andExpect(status().is5xxServerError()).andReturn();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/BasicErrorController.java, +import org.springframework.http.ResponseEntity;, +		Map<String, Object> map = extract(new ServletRequestAttributes(request), false,, +				false);, +	public ResponseEntity<Map<String, Object>> error(HttpServletRequest request) {, +		Map<String, Object> extracted = extract(attributes,, +				trace != null && !"false".equals(trace.toLowerCase()), true);, +		HttpStatus statusCode;, +		try {, +			statusCode = HttpStatus.valueOf((Integer) extracted.get("status"));, +		}, +		catch (Exception e) {, +			statusCode = HttpStatus.INTERNAL_SERVER_ERROR;, +		}, +		return new ResponseEntity<Map<String, Object>>(extracted, statusCode);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/web/BasicErrorControllerIntegrationTests.java, +				.andExpect(status().is5xxServerError()).andReturn();, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +		assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, entity.getStatusCode());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/BasicErrorController.java, +import org.springframework.http.ResponseEntity;, +		Map<String, Object> map = extract(new ServletRequestAttributes(request), false,, +				false);, +	public ResponseEntity<Map<String, Object>> error(HttpServletRequest request) {, +		Map<String, Object> extracted = extract(attributes,, +				trace != null && !"false".equals(trace.toLowerCase()), true);, +		HttpStatus statusCode;, +		try {, +			statusCode = HttpStatus.valueOf((Integer) extracted.get("status"));, +		}, +		catch (Exception e) {, +			statusCode = HttpStatus.INTERNAL_SERVER_ERROR;, +		}, +		return new ResponseEntity<Map<String, Object>>(extracted, statusCode);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/web/BasicErrorControllerIntegrationTests.java, +				.andExpect(status().is5xxServerError()).andReturn();, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +		assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, entity.getStatusCode());, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/SampleActuatorApplicationTests.java, +		assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, entity.getStatusCode());]