[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory.java, +		DeploymentManager manager = Servlets.newContainer().addDeployment(deployment);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory.java, +		DeploymentManager manager = Servlets.newContainer().addDeployment(deployment);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactoryTests.java, +import io.undertow.servlet.api.ServletContainer;, +import static org.hamcrest.Matchers.is;, +import static org.hamcrest.Matchers.not;, +	@Test, +	public void eachFactoryUsesADiscreteServletContainer() {, +		assertThat(getServletContainerFromNewFactory(),, +				is(not(equalTo(getServletContainerFromNewFactory()))));, +	}, +, +	private ServletContainer getServletContainerFromNewFactory() {, +		UndertowEmbeddedServletContainer undertow1 = (UndertowEmbeddedServletContainer) getFactory(), +				.getEmbeddedServletContainer();, +		return ((DeploymentManager) ReflectionTestUtils.getField(undertow1, "manager")), +				.getDeployment().getServletContainer();, +	}, +]