[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * 'spring.resources.cache.cachecontrol' properties., +		private final CacheControl cacheControl = new CacheControl();, +		public CacheControl getCacheControl() {, +			return this.cacheControl;, +		public static class CacheControl {, +			public org.springframework.http.CacheControl toHttpCacheControl() {, +				org.springframework.http.CacheControl cacheControl = createCacheControl();, +						org.springframework.http.CacheControl::mustRevalidate);, +				callIfTrue(this.noTransform, cacheControl, org.springframework.http.CacheControl::noTransform);, +				callIfTrue(this.cachePublic, cacheControl, org.springframework.http.CacheControl::cachePublic);, +				callIfTrue(this.cachePrivate, cacheControl, org.springframework.http.CacheControl::cachePrivate);, +						org.springframework.http.CacheControl::proxyRevalidate);, +			private org.springframework.http.CacheControl createCacheControl() {, +					return org.springframework.http.CacheControl.noStore();, +					return org.springframework.http.CacheControl.noCache();, +					return org.springframework.http.CacheControl.maxAge(this.maxAge.getSeconds(),, +				return org.springframework.http.CacheControl.empty();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * 'spring.resources.cache.cachecontrol' properties., +		private final CacheControl cacheControl = new CacheControl();, +		public CacheControl getCacheControl() {, +			return this.cacheControl;, +		public static class CacheControl {, +			public org.springframework.http.CacheControl toHttpCacheControl() {, +				org.springframework.http.CacheControl cacheControl = createCacheControl();, +						org.springframework.http.CacheControl::mustRevalidate);, +				callIfTrue(this.noTransform, cacheControl, org.springframework.http.CacheControl::noTransform);, +				callIfTrue(this.cachePublic, cacheControl, org.springframework.http.CacheControl::cachePublic);, +				callIfTrue(this.cachePrivate, cacheControl, org.springframework.http.CacheControl::cachePrivate);, +						org.springframework.http.CacheControl::proxyRevalidate);, +			private org.springframework.http.CacheControl createCacheControl() {, +					return org.springframework.http.CacheControl.noStore();, +					return org.springframework.http.CacheControl.noCache();, +					return org.springframework.http.CacheControl.maxAge(this.maxAge.getSeconds(),, +				return org.springframework.http.CacheControl.empty();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			CacheControl cacheControl = this.resourceProperties.getCache().getCacheControl(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * 'spring.resources.cache.cachecontrol' properties., +		private final CacheControl cacheControl = new CacheControl();, +		public CacheControl getCacheControl() {, +			return this.cacheControl;, +		public static class CacheControl {, +			public org.springframework.http.CacheControl toHttpCacheControl() {, +				org.springframework.http.CacheControl cacheControl = createCacheControl();, +						org.springframework.http.CacheControl::mustRevalidate);, +				callIfTrue(this.noTransform, cacheControl, org.springframework.http.CacheControl::noTransform);, +				callIfTrue(this.cachePublic, cacheControl, org.springframework.http.CacheControl::cachePublic);, +				callIfTrue(this.cachePrivate, cacheControl, org.springframework.http.CacheControl::cachePrivate);, +						org.springframework.http.CacheControl::proxyRevalidate);, +			private org.springframework.http.CacheControl createCacheControl() {, +					return org.springframework.http.CacheControl.noStore();, +					return org.springframework.http.CacheControl.noCache();, +					return org.springframework.http.CacheControl.maxAge(this.maxAge.getSeconds(),, +				return org.springframework.http.CacheControl.empty();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			CacheControl cacheControl = this.resourceProperties.getCache().getCacheControl(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ResourcePropertiesTests.java, +		org.springframework.http.CacheControl cacheControl = this.properties.getCache().getCacheControl(), +		Cache.CacheControl properties = this.properties.getCache().getCacheControl();, +		org.springframework.http.CacheControl cacheControl = properties.toHttpCacheControl();, +		Cache.CacheControl properties = this.properties.getCache().getCacheControl();, +		org.springframework.http.CacheControl cacheControl = properties.toHttpCacheControl();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * 'spring.resources.cache.cachecontrol' properties., +		private final CacheControl cacheControl = new CacheControl();, +		public CacheControl getCacheControl() {, +			return this.cacheControl;, +		public static class CacheControl {, +			public org.springframework.http.CacheControl toHttpCacheControl() {, +				org.springframework.http.CacheControl cacheControl = createCacheControl();, +						org.springframework.http.CacheControl::mustRevalidate);, +				callIfTrue(this.noTransform, cacheControl, org.springframework.http.CacheControl::noTransform);, +				callIfTrue(this.cachePublic, cacheControl, org.springframework.http.CacheControl::cachePublic);, +				callIfTrue(this.cachePrivate, cacheControl, org.springframework.http.CacheControl::cachePrivate);, +						org.springframework.http.CacheControl::proxyRevalidate);, +			private org.springframework.http.CacheControl createCacheControl() {, +					return org.springframework.http.CacheControl.noStore();, +					return org.springframework.http.CacheControl.noCache();, +					return org.springframework.http.CacheControl.maxAge(this.maxAge.getSeconds(),, +				return org.springframework.http.CacheControl.empty();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.java, +			CacheControl cacheControl = this.resourceProperties.getCache().getCacheControl(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ResourcePropertiesTests.java, +		org.springframework.http.CacheControl cacheControl = this.properties.getCache().getCacheControl(), +		Cache.CacheControl properties = this.properties.getCache().getCacheControl();, +		org.springframework.http.CacheControl cacheControl = properties.toHttpCacheControl();, +		Cache.CacheControl properties = this.properties.getCache().getCacheControl();, +		org.springframework.http.CacheControl cacheControl = properties.toHttpCacheControl();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfigurationTests.java, +				.withPropertyValues("spring.resources.cache.cachecontrol.max-age:5",, +						"spring.resources.cache.cachecontrol.proxy-revalidate:true"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		 * 'spring.resources.cache.cachecontrol' properties., +		private final CacheControl cacheControl = new CacheControl();, +		public CacheControl getCacheControl() {, +			return this.cacheControl;, +		public static class CacheControl {, +			public org.springframework.http.CacheControl toHttpCacheControl() {]