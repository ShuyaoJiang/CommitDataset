[+++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java, + * @author Raja Kolli, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/JmsHealthIndicator.java, + * Copyright 2012-2017 the original author or authors., +		try (Connection connection = this.connectionFactory.createConnection()) {, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/JmsHealthIndicator.java, + * Copyright 2012-2017 the original author or authors., +		try (Connection connection = this.connectionFactory.createConnection()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java, + * @author Raja Kolli, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/JmsHealthIndicator.java, + * Copyright 2012-2017 the original author or authors., +		try (Connection connection = this.connectionFactory.createConnection()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +		try (ServerSocket serverSocket = new ServerSocket()) {, +		try (ClientHttpResponse response = request.execute()) {, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/JmsHealthIndicator.java, + * Copyright 2012-2017 the original author or authors., +		try (Connection connection = this.connectionFactory.createConnection()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +		try (ServerSocket serverSocket = new ServerSocket()) {, +		try (ClientHttpResponse response = request.execute()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/TomcatPublicMetricsTests.java, +		try (AnnotationConfigServletWebServerApplicationContext context = new AnnotationConfigServletWebServerApplicationContext(, +				Config.class)) {, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/JmsHealthIndicator.java, + * Copyright 2012-2017 the original author or authors., +		try (Connection connection = this.connectionFactory.createConnection()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +		try (ServerSocket serverSocket = new ServerSocket()) {, +		try (ClientHttpResponse response = request.execute()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/TomcatPublicMetricsTests.java, +		try (AnnotationConfigServletWebServerApplicationContext context = new AnnotationConfigServletWebServerApplicationContext(, +				Config.class)) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/MetricCopyExporterTests.java, + * Copyright 2012-2017 the original author or authors., +		try (MetricCopyExporter customExporter = new MetricCopyExporter(this.reader, writer)) {, +			customExporter.export();, +			customExporter.export();, +			customExporter.flush();, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +				.perform(get("/application/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +		try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HeapdumpMvcEndpoint.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/JmsHealthIndicator.java, + * Copyright 2012-2017 the original author or authors., +		try (Connection connection = this.connectionFactory.createConnection()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java, + * @author Raja Kolli, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +		try (ServerSocket serverSocket = new ServerSocket()) {, +		try (ClientHttpResponse response = request.execute()) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/TomcatPublicMetricsTests.java, +		try (AnnotationConfigServletWebServerApplicationContext context = new AnnotationConfigServletWebServerApplicationContext(]