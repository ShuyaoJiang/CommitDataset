[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionTests.java, +			.withConfiguration(, +					AutoConfigurations.of(HealthIndicatorAutoConfiguration.class,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionTests.java, +			.withConfiguration(, +					AutoConfigurations.of(HealthIndicatorAutoConfiguration.class,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointWebExtensionTests.java, +		this.contextRunner.withUserConfiguration(HealthIndicatorsConfiguration.class), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionTests.java, +			.withConfiguration(, +					AutoConfigurations.of(HealthIndicatorAutoConfiguration.class,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointWebExtensionTests.java, +		this.contextRunner.withUserConfiguration(HealthIndicatorsConfiguration.class), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurerTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionTests.java, +			.withConfiguration(, +					AutoConfigurations.of(HealthIndicatorAutoConfiguration.class,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointWebExtensionTests.java, +		this.contextRunner.withUserConfiguration(HealthIndicatorsConfiguration.class), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurerTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/MetricsRestTemplateCustomizer.java, +		List<ClientHttpRequestInterceptor> existingInterceptors = restTemplate, +				.getInterceptors();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionTests.java, +			.withConfiguration(, +					AutoConfigurations.of(HealthIndicatorAutoConfiguration.class,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointWebExtensionTests.java, +		this.contextRunner.withUserConfiguration(HealthIndicatorsConfiguration.class), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurerTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/MetricsRestTemplateCustomizer.java, +		List<ClientHttpRequestInterceptor> existingInterceptors = restTemplate, +				.getInterceptors();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/scheduling/ScheduledTasksEndpoint.java, +		private static final Map<Class<? extends Task>, Function<Task, TaskDescription>> DESCRIBERS = new LinkedHashMap<>();, +			DESCRIBERS.put(FixedRateTask.class,, +			DESCRIBERS.put(FixedDelayTask.class,, +			DESCRIBERS.put(CronTask.class,, +			DESCRIBERS.put(TriggerTask.class,, +			return DESCRIBERS.entrySet().stream(), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionTests.java, +			.withConfiguration(, +					AutoConfigurations.of(HealthIndicatorAutoConfiguration.class,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointWebExtensionTests.java, +		this.contextRunner.withUserConfiguration(HealthIndicatorsConfiguration.class), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurerTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/MetricsRestTemplateCustomizer.java, +		List<ClientHttpRequestInterceptor> existingInterceptors = restTemplate, +				.getInterceptors();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/scheduling/ScheduledTasksEndpoint.java, +		private static final Map<Class<? extends Task>, Function<Task, TaskDescription>> DESCRIBERS = new LinkedHashMap<>();, +			DESCRIBERS.put(FixedRateTask.class,, +			DESCRIBERS.put(FixedDelayTask.class,, +			DESCRIBERS.put(CronTask.class,, +			DESCRIBERS.put(TriggerTask.class,, +			return DESCRIBERS.entrySet().stream(), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/client/MetricsRestTemplateCustomizerTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.java, +		return new HealthEndpoint(HealthIndicatorBeansComposite.get(applicationContext));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.java, +		ReactiveWebHealthConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionTests.java, +			.withConfiguration(, +					AutoConfigurations.of(HealthIndicatorAutoConfiguration.class,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointWebExtensionTests.java, +		this.contextRunner.withUserConfiguration(HealthIndicatorsConfiguration.class), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryConfigurerTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/MetricsRestTemplateCustomizer.java, +		List<ClientHttpRequestInterceptor> existingInterceptors = restTemplate, +				.getInterceptors();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/scheduling/ScheduledTasksEndpoint.java]