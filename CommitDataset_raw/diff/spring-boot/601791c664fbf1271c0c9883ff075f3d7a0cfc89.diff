[+++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +import org.springframework.core.io.DefaultResourceLoader;, +		TestPropertySourceUtils.addPropertiesFilesToEnvironment(environment,, +				application.getResourceLoader() == null, +						? new DefaultResourceLoader(getClass().getClassLoader()), +						: application.getResourceLoader(),, +				config.getPropertySourceLocations());, +		TestPropertySourceUtils.addInlinedPropertiesToEnvironment(environment,, +				getInlinedProperties(config));, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +import org.springframework.core.io.DefaultResourceLoader;, +		TestPropertySourceUtils.addPropertiesFilesToEnvironment(environment,, +				application.getResourceLoader() == null, +						? new DefaultResourceLoader(getClass().getClassLoader()), +						: application.getResourceLoader(),, +				config.getPropertySourceLocations());, +		TestPropertySourceUtils.addInlinedPropertiesToEnvironment(environment,, +				getInlinedProperties(config));, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/context/SpringBootTestCustomConfigNameTests.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test.context;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +, +import org.springframework.beans.factory.annotation.Value;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;, +import org.springframework.test.context.junit4.SpringRunner;, +, +import static org.assertj.core.api.Assertions.assertThat;, +, +/**, + * Tests for {@SpringBootTest} with a custom config name, + *, + * @author Andy Wilkinson, + */, +@RunWith(SpringRunner.class), +@SpringBootTest(properties = "spring.config.name=custom-config-name"), +public class SpringBootTestCustomConfigNameTests {, +, +	@Value("${test.foo}"), +	private String foo;, +, +	@Test, +	public void propertyIsLoadedFromConfigFileWithCustomName() {, +		assertThat(this.foo).isEqualTo("bar");, +	}, +, +	@Configuration, +	static class TestConfiguration {, +, +		public PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {, +			return new PropertySourcesPlaceholderConfigurer();, +		}, +, +	}, +, +}, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +import org.springframework.core.io.DefaultResourceLoader;, +		TestPropertySourceUtils.addPropertiesFilesToEnvironment(environment,, +				application.getResourceLoader() == null, +						? new DefaultResourceLoader(getClass().getClassLoader()), +						: application.getResourceLoader(),, +				config.getPropertySourceLocations());, +		TestPropertySourceUtils.addInlinedPropertiesToEnvironment(environment,, +				getInlinedProperties(config));, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/context/SpringBootTestCustomConfigNameTests.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +]