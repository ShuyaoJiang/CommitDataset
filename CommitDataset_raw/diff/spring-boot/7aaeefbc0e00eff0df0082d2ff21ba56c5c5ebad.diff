[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +import java.util.regex.Pattern;, +	private static final Pattern PATH_VAR_PATTERN = Pattern.compile("\\{.*?}");, +, +		this.canonicalPath = PATH_VAR_PATTERN.matcher(path).replaceAll("{*}");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +import java.util.regex.Pattern;, +	private static final Pattern PATH_VAR_PATTERN = Pattern.compile("\\{.*?}");, +, +		this.canonicalPath = PATH_VAR_PATTERN.matcher(path).replaceAll("{*}");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, +import java.util.regex.Pattern;, +	private static final Pattern STRIP_URI_PATTERN = Pattern.compile("^https?://[^/]+/");, +, +		return STRIP_URI_PATTERN.matcher(uri).replaceAll("");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +import java.util.regex.Pattern;, +	private static final Pattern PATH_VAR_PATTERN = Pattern.compile("\\{.*?}");, +, +		this.canonicalPath = PATH_VAR_PATTERN.matcher(path).replaceAll("{*}");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, +import java.util.regex.Pattern;, +	private static final Pattern STRIP_URI_PATTERN = Pattern.compile("^https?://[^/]+/");, +, +		return STRIP_URI_PATTERN.matcher(uri).replaceAll("");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, +import java.util.regex.Pattern;, +, +	private static final Pattern TRAILING_SLASH_PATTERN = Pattern.compile("/$");, +, +	private static final Pattern MULTIPLE_SLASH_PATTERN = Pattern.compile("//+");, +, +		uri = MULTIPLE_SLASH_PATTERN.matcher(uri).replaceAll("/");, +		return TRAILING_SLASH_PATTERN.matcher(uri).replaceAll("");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +import java.util.regex.Pattern;, +	private static final Pattern PATH_VAR_PATTERN = Pattern.compile("\\{.*?}");, +, +		this.canonicalPath = PATH_VAR_PATTERN.matcher(path).replaceAll("{*}");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, +import java.util.regex.Pattern;, +	private static final Pattern STRIP_URI_PATTERN = Pattern.compile("^https?://[^/]+/");, +, +		return STRIP_URI_PATTERN.matcher(uri).replaceAll("");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, +import java.util.regex.Pattern;, +, +	private static final Pattern TRAILING_SLASH_PATTERN = Pattern.compile("/$");, +, +	private static final Pattern MULTIPLE_SLASH_PATTERN = Pattern.compile("//+");, +, +		uri = MULTIPLE_SLASH_PATTERN.matcher(uri).replaceAll("/");, +		return TRAILING_SLASH_PATTERN.matcher(uri).replaceAll("");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/TypeUtils.java, +import java.util.regex.Pattern;, +	private static final Pattern NEW_LINE_PATTERN = Pattern.compile("[\r\n]+");, +, +			javadoc = NEW_LINE_PATTERN.matcher(javadoc).replaceAll("").trim();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +import java.util.regex.Pattern;, +	private static final Pattern PATH_VAR_PATTERN = Pattern.compile("\\{.*?}");, +, +		this.canonicalPath = PATH_VAR_PATTERN.matcher(path).replaceAll("{*}");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, +import java.util.regex.Pattern;, +	private static final Pattern STRIP_URI_PATTERN = Pattern.compile("^https?://[^/]+/");, +, +		return STRIP_URI_PATTERN.matcher(uri).replaceAll("");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, +import java.util.regex.Pattern;, +, +	private static final Pattern TRAILING_SLASH_PATTERN = Pattern.compile("/$");, +, +	private static final Pattern MULTIPLE_SLASH_PATTERN = Pattern.compile("//+");, +, +		uri = MULTIPLE_SLASH_PATTERN.matcher(uri).replaceAll("/");, +		return TRAILING_SLASH_PATTERN.matcher(uri).replaceAll("");, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/TypeUtils.java, +import java.util.regex.Pattern;, +	private static final Pattern NEW_LINE_PATTERN = Pattern.compile("[\r\n]+");, +, +			javadoc = NEW_LINE_PATTERN.matcher(javadoc).replaceAll("").trim();, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/LaunchScriptConfiguration.java, +import java.util.regex.Pattern;, +	private static final Pattern WHITE_SPACE_PATTERN = Pattern.compile("\\s+");, +, +	private static final Pattern LINE_FEED_PATTERN = Pattern.compile("\n");, +, +		return (string != null) ? WHITE_SPACE_PATTERN.matcher(string).replaceAll(" "), +				: null;, +		return (string != null) ? LINE_FEED_PATTERN.matcher(string).replaceAll("\n#  "), +				: null;, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/WebOperationRequestPredicate.java, +import java.util.regex.Pattern;, +	private static final Pattern PATH_VAR_PATTERN = Pattern.compile("\\{.*?}");, +, +		this.canonicalPath = PATH_VAR_PATTERN.matcher(path).replaceAll("{*}");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, +import java.util.regex.Pattern;, +	private static final Pattern STRIP_URI_PATTERN = Pattern.compile("^https?://[^/]+/");]