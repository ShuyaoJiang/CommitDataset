[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +				if (this.virtualHost.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +				if (this.virtualHost.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +				if (this.virtualHost.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/webservices/WebServicesProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +				if (this.virtualHost.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/webservices/WebServicesProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/AsciiBytes.java, +		if (string == null || string.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +				if (this.virtualHost.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/webservices/WebServicesProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/AsciiBytes.java, +		if (string == null || string.isEmpty()) {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +			if (source.isEmpty() || (source.indexOf('%') < 0)) {, +			return this.name.isEmpty();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +				if (this.virtualHost.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/webservices/WebServicesProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/AsciiBytes.java, +		if (string == null || string.isEmpty()) {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +			if (source.isEmpty() || (source.indexOf('%') < 0)) {, +			return this.name.isEmpty();, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedConversionService.java, +				if (source.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +			String qualifiedKey = (prefix.isEmpty() ? prefix : prefix + ".") + key;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitProperties.java, +				if (this.virtualHost.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/webservices/WebServicesProperties.java, +		Assert.isTrue(this.path.isEmpty() || this.path.startsWith("/"),, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/AsciiBytes.java, +		if (string == null || string.isEmpty()) {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +			if (source.isEmpty() || (source.indexOf('%') < 0)) {, +			return this.name.isEmpty();, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedConversionService.java, +				if (source.isEmpty()) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer.java, +			if (scannedPackage == null || scannedPackage.isEmpty()) {, +			if (scannedPackage == null || scannedPackage.isEmpty()) {]