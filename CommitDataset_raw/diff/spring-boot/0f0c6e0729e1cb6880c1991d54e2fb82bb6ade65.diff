[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		this.binderProviders = binderProviders;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		this.binderProviders = binderProviders;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, CacheAutoConfiguration.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		this.binderProviders = binderProviders;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, CacheAutoConfiguration.class)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/AnnotationEndpointDiscoverer.java, + * Copyright 2012-2018 the original author or authors., +	private static final Log logger = LogFactory.getLog(AnnotationEndpointDiscoverer.class);, +				// Possibly a lambda-defined EndpointFilter which we could not resolve the, +				// generic EndpointInfo type for, +				if (logger.isDebugEnabled()) {, +					logger.debug("Non-matching EndpointInfo for EndpointFilter: " + filter, ex);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		this.binderProviders = binderProviders;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, CacheAutoConfiguration.class)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/AnnotationEndpointDiscoverer.java, + * Copyright 2012-2018 the original author or authors., +	private static final Log logger = LogFactory.getLog(AnnotationEndpointDiscoverer.class);, +				// Possibly a lambda-defined EndpointFilter which we could not resolve the, +				// generic EndpointInfo type for, +				if (logger.isDebugEnabled()) {, +					logger.debug("Non-matching EndpointInfo for EndpointFilter: " + filter, ex);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.java, +	private static final Log logger = LogFactory.getLog(CacheMetricsRegistrar.class);, +, +						// Possibly a lambda-defined CacheMeterBinderProvider which we could not resolve, +						// the generic Cache type for, +									"Non-matching Cache type for CacheMeterBinderProvider: ", +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		this.binderProviders = binderProviders;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, CacheAutoConfiguration.class)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/AnnotationEndpointDiscoverer.java, + * Copyright 2012-2018 the original author or authors., +	private static final Log logger = LogFactory.getLog(AnnotationEndpointDiscoverer.class);, +				// Possibly a lambda-defined EndpointFilter which we could not resolve the, +				// generic EndpointInfo type for, +				if (logger.isDebugEnabled()) {, +					logger.debug("Non-matching EndpointInfo for EndpointFilter: " + filter, ex);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.java, +	private static final Log logger = LogFactory.getLog(CacheMetricsRegistrar.class);, +, +						// Possibly a lambda-defined CacheMeterBinderProvider which we could not resolve, +						// the generic Cache type for, +									"Non-matching Cache type for CacheMeterBinderProvider: ", +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final Session session = new Session();, +	private final Servlet servlet = new Servlet();, +		private final Jsp jsp = new Jsp();, +		private final Cookie cookie = new Cookie();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		this.binderProviders = binderProviders;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, CacheAutoConfiguration.class)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/AnnotationEndpointDiscoverer.java, + * Copyright 2012-2018 the original author or authors., +	private static final Log logger = LogFactory.getLog(AnnotationEndpointDiscoverer.class);, +				// Possibly a lambda-defined EndpointFilter which we could not resolve the, +				// generic EndpointInfo type for, +				if (logger.isDebugEnabled()) {, +					logger.debug("Non-matching EndpointInfo for EndpointFilter: " + filter, ex);, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.java, +	private static final Log logger = LogFactory.getLog(CacheMetricsRegistrar.class);, +, +						// Possibly a lambda-defined CacheMeterBinderProvider which we could not resolve, +						// the generic Cache type for, +									"Non-matching Cache type for CacheMeterBinderProvider: ", +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final Session session = new Session();, +	private final Servlet servlet = new Servlet();, +		private final Jsp jsp = new Jsp();, +		private final Cookie cookie = new Cookie();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/WebServerFactoryCustomizerBeanPostProcessor.java, + * Copyright 2012-2018 the original author or authors., +	private static final Log logger = LogFactory.getLog(WebServerFactoryCustomizerBeanPostProcessor.class);, +, +				// Possibly a lambda-defined WebServerFactoryCustomizer which we could not resolve the, +				// generic WebServerFactory type for, +			logger.debug("Non-matching WebServerFactory type for WebServerFactoryCustomizer: " + customizer, ex);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.java, +		this.binderProviders = binderProviders;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, CacheAutoConfiguration.class)), +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/annotation/AnnotationEndpointDiscoverer.java, + * Copyright 2012-2018 the original author or authors., +	private static final Log logger = LogFactory.getLog(AnnotationEndpointDiscoverer.class);]