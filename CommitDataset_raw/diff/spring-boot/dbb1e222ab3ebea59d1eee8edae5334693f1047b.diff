[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthIndicatorAutoConfigurationTests.java, +			.withPropertyValues("spring.datasource.initialization-mode=never");, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthIndicatorAutoConfigurationTests.java, +			.withPropertyValues("spring.datasource.initialization-mode=never");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializer.java, +import org.springframework.boot.jdbc.DataSourceInitializationMode;, +import org.springframework.boot.jdbc.EmbeddedDatabaseConnection;, +			if (!isEnabled()) {, +				logger.debug("Initialization disabled (not running DDL scripts)");, +				return false;, +			}, +			if (!isEnabled()) {, +				logger.debug("Initialization disabled (not running data scripts)");, +				return;, +			}, +	private boolean isEnabled() {, +		DataSourceInitializationMode mode = this.properties.getInitializationMode();, +		if (mode == DataSourceInitializationMode.NEVER) {, +			return false;, +		}, +		if (mode == DataSourceInitializationMode.EMBEDDED, +				&& !isEmbedded()) {, +			return false;, +		}, +		return true;, +	}, +, +	private boolean isEmbedded() {, +		try {, +			return EmbeddedDatabaseConnection.isEmbedded(this.dataSource);, +		}, +		catch (Exception ex) {, +			logger.debug("Could not determine if datasource is embedded", ex);, +			return false;, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthIndicatorAutoConfigurationTests.java, +			.withPropertyValues("spring.datasource.initialization-mode=never");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializer.java, +import org.springframework.boot.jdbc.DataSourceInitializationMode;, +import org.springframework.boot.jdbc.EmbeddedDatabaseConnection;, +			if (!isEnabled()) {, +				logger.debug("Initialization disabled (not running DDL scripts)");, +				return false;, +			}, +			if (!isEnabled()) {, +				logger.debug("Initialization disabled (not running data scripts)");, +				return;, +			}, +	private boolean isEnabled() {, +		DataSourceInitializationMode mode = this.properties.getInitializationMode();, +		if (mode == DataSourceInitializationMode.NEVER) {, +			return false;, +		}, +		if (mode == DataSourceInitializationMode.EMBEDDED, +				&& !isEmbedded()) {, +			return false;, +		}, +		return true;, +	}, +, +	private boolean isEmbedded() {, +		try {, +			return EmbeddedDatabaseConnection.isEmbedded(this.dataSource);, +		}, +		catch (Exception ex) {, +			logger.debug("Could not determine if datasource is embedded", ex);, +			return false;, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, +import org.springframework.boot.jdbc.DataSourceInitializationMode;, +	 * Initialize the datasource using available DDL and DML scripts., +	private DataSourceInitializationMode initializationMode = DataSourceInitializationMode.EMBEDDED;, +	public DataSourceInitializationMode getInitializationMode() {, +		return this.initializationMode;, +	public void setInitializationMode(DataSourceInitializationMode initializationMode) {, +		this.initializationMode = initializationMode;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthIndicatorAutoConfigurationTests.java, +			.withPropertyValues("spring.datasource.initialization-mode=never");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializer.java, +import org.springframework.boot.jdbc.DataSourceInitializationMode;, +import org.springframework.boot.jdbc.EmbeddedDatabaseConnection;, +			if (!isEnabled()) {, +				logger.debug("Initialization disabled (not running DDL scripts)");, +				return false;, +			}, +			if (!isEnabled()) {, +				logger.debug("Initialization disabled (not running data scripts)");, +				return;, +			}, +	private boolean isEnabled() {, +		DataSourceInitializationMode mode = this.properties.getInitializationMode();, +		if (mode == DataSourceInitializationMode.NEVER) {, +			return false;, +		}, +		if (mode == DataSourceInitializationMode.EMBEDDED, +				&& !isEmbedded()) {]