[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +can also use the `@AutoConfigureTestEntityManager` annotation. A `JdbcTemplate` is also, +available should you need that., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +can also use the `@AutoConfigureTestEntityManager` annotation. A `JdbcTemplate` is also, +available should you need that., +++ b/spring-boot-test-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +can also use the `@AutoConfigureTestEntityManager` annotation. A `JdbcTemplate` is also, +available should you need that., +++ b/spring-boot-test-autoconfigure/src/main/resources/META-INF/spring.factories, +org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\, +++ b/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/orm/jpa/DataJpaTestIntegrationTests.java, +import org.springframework.jdbc.core.JdbcTemplate;, +	private JdbcTemplate jdbcTemplate;, +, +	@Autowired, +		String reference = this.jdbcTemplate.queryForObject(, +				"SELECT REFERENCE FROM EXAMPLE_ENTITY WHERE ID = ?", new Object[] {id}, String.class);, +		assertThat(reference).isEqualTo("123");]