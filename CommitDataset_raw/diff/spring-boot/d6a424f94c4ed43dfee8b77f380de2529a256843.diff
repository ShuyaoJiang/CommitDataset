[+++ b/spring-boot/src/main/java/org/springframework/boot/env/PropertiesPropertySourceLoader.java, +import org.springframework.core.io.support.EncodedResource;, +			Properties properties = PropertiesLoaderUtils, +					.loadProperties(new EncodedResource(resource, "UTF-8"));, +++ b/spring-boot/src/main/java/org/springframework/boot/env/PropertiesPropertySourceLoader.java, +import org.springframework.core.io.support.EncodedResource;, +			Properties properties = PropertiesLoaderUtils, +					.loadProperties(new EncodedResource(resource, "UTF-8"));, +++ b/spring-boot/src/test/java/org/springframework/boot/env/PropertiesPropertySourceLoaderTests.java, +	public void loadPropertiesEncoded() throws Exception {, +		PropertySource<?> source = this.loader.load("encoded.properties",, +				new ClassPathResource("test-encoded.properties", getClass()), null);, +		assertThat(source.getProperty("test"), equalTo((Object) "prकperties"));, +	}, +, +	@Test, +++ b/spring-boot/src/main/java/org/springframework/boot/env/PropertiesPropertySourceLoader.java, +import org.springframework.core.io.support.EncodedResource;, +			Properties properties = PropertiesLoaderUtils, +					.loadProperties(new EncodedResource(resource, "UTF-8"));, +++ b/spring-boot/src/test/java/org/springframework/boot/env/PropertiesPropertySourceLoaderTests.java, +	public void loadPropertiesEncoded() throws Exception {, +		PropertySource<?> source = this.loader.load("encoded.properties",, +				new ClassPathResource("test-encoded.properties", getClass()), null);, +		assertThat(source.getProperty("test"), equalTo((Object) "prकperties"));, +	}, +, +	@Test, +++ b/spring-boot/src/test/resources/org/springframework/boot/env/test-encoded.properties, +test=prकperties]