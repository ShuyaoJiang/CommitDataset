[+++ b/spring-boot-samples/spring-boot-sample-data-rest/pom.xml, +		<dependency>, +			<groupId>com.jayway.jsonpath</groupId>, +			<artifactId>json-path</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-rest/pom.xml, +		<dependency>, +			<groupId>com.jayway.jsonpath</groupId>, +			<artifactId>json-path</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-rest/src/test/java/sample/data/jpa/SampleDataRestApplicationTests.java, +import static org.hamcrest.Matchers.hasSize;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;, + * @author Andy Wilkinson, +, +	@Test, +	public void findByNameAndCountry() throws Exception {, +, +		this.mvc.perform(, +				get("/cities/search/findByNameAndCountryAllIgnoringCase?name=Melbourne&country=Australia")), +				.andExpect(status().isOk()), +				.andExpect(jsonPath("_embedded.citys", hasSize(1)));, +	}, +, +	@Test, +	public void findByContaining() throws Exception {, +, +		this.mvc.perform(, +				get("/cities/search/findByNameContainingAndCountryContainingAllIgnoringCase?name=&country=UK")), +				.andExpect(status().isOk()), +				.andExpect(jsonPath("_embedded.citys", hasSize(3)));, +	}, +++ b/spring-boot-samples/spring-boot-sample-data-rest/pom.xml, +		<dependency>, +			<groupId>com.jayway.jsonpath</groupId>, +			<artifactId>json-path</artifactId>, +			<scope>test</scope>, +		</dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-rest/src/test/java/sample/data/jpa/SampleDataRestApplicationTests.java, +import static org.hamcrest.Matchers.hasSize;, +import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;, + * @author Andy Wilkinson, +, +	@Test, +	public void findByNameAndCountry() throws Exception {, +, +		this.mvc.perform(, +				get("/cities/search/findByNameAndCountryAllIgnoringCase?name=Melbourne&country=Australia")), +				.andExpect(status().isOk()), +				.andExpect(jsonPath("_embedded.citys", hasSize(1)));, +	}, +, +	@Test, +	public void findByContaining() throws Exception {, +, +		this.mvc.perform(, +				get("/cities/search/findByNameContainingAndCountryContainingAllIgnoringCase?name=&country=UK")), +				.andExpect(status().isOk()), +				.andExpect(jsonPath("_embedded.citys", hasSize(3)));, +	}, +++ b/spring-boot-samples/spring-boot-sample-data-rest/src/test/java/sample/data/jpa/service/CityRepositoryIntegrationTests.java, +import static org.hamcrest.Matchers.equalTo;, +import static org.hamcrest.Matchers.notNullValue;, + * @author Andy Wilkinson, +, +	@Test, +	public void findByNameAndCountry() {, +		City city = this.repository.findByNameAndCountryAllIgnoringCase("Melbourne",, +				"Australia");, +		assertThat(city, notNullValue());, +		assertThat(city.getName(), is(equalTo("Melbourne")));, +	}, +, +	@Test, +	public void findContaining() {, +		Page<City> cities = this.repository, +				.findByNameContainingAndCountryContainingAllIgnoringCase("", "UK",, +						new PageRequest(0, 10));, +		assertThat(cities.getTotalElements(), is(equalTo(3L)));, +	}]