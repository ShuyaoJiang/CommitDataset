[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		Assert.notNull(contextPath, "ContextPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		Assert.notNull(contextPath, "ContextPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +		setId(id);, +		setId(id);, +		Assert.notNull(id, "Id must not be null");, +		Assert.isTrue(ID_PATTERN.matcher(id).matches(),, +				"Id must only contains letters, numbers and '_'");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		Assert.notNull(contextPath, "ContextPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +		setId(id);, +		setId(id);, +		Assert.notNull(id, "Id must not be null");, +		Assert.isTrue(ID_PATTERN.matcher(id).matches(),, +				"Id must only contains letters, numbers and '_'");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		setPath(path);, +		setPath(path);, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		Assert.notNull(contextPath, "ContextPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +		setId(id);, +		setId(id);, +		Assert.notNull(id, "Id must not be null");, +		Assert.isTrue(ID_PATTERN.matcher(id).matches(),, +				"Id must only contains letters, numbers and '_'");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		setPath(path);, +		setPath(path);, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		Assert.notNull(contextPath, "ContextPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +		setId(id);, +		setId(id);, +		Assert.notNull(id, "Id must not be null");, +		Assert.isTrue(ID_PATTERN.matcher(id).matches(),, +				"Id must only contains letters, numbers and '_'");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		setPath(path);, +		setPath(path);, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +		Assert.notNull(changeLog, "ChangeLog must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		Assert.notNull(contextPath, "ContextPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +		setId(id);, +		setId(id);, +		Assert.notNull(id, "Id must not be null");, +		Assert.isTrue(ID_PATTERN.matcher(id).matches(),, +				"Id must only contains letters, numbers and '_'");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		setPath(path);, +		setPath(path);, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +		Assert.notNull(changeLog, "ChangeLog must not be null");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		Assert.notNull(servletPath, "ServletPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		Assert.notNull(contextPath, "ContextPath must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +		setId(id);, +		setId(id);, +		Assert.notNull(id, "Id must not be null");, +		Assert.isTrue(ID_PATTERN.matcher(id).matches(),, +				"Id must only contains letters, numbers and '_'");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/AbstractMvcEndpoint.java, +		setPath(path);, +		setPath(path);, +		Assert.notNull(path, "Path must not be null");, +		Assert.isTrue(path.isEmpty() || path.startsWith("/"),, +				"Path must start with / or be empty");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/h2/H2ConsoleProperties.java, +		Assert.notNull(path, "Path must not be null");]