[+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfigurationTests.java, +import org.elasticsearch.client.RequestOptions;, +					client.index(index, RequestOptions.DEFAULT);, +					assertThat(client.get(getRequest, RequestOptions.DEFAULT).isExists()), +							.isTrue();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfigurationTests.java, +import org.elasticsearch.client.RequestOptions;, +					client.index(index, RequestOptions.DEFAULT);, +					assertThat(client.get(getRequest, RequestOptions.DEFAULT).isExists()), +							.isTrue();, +++ b/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/DetailedProgressReporterTests.java, +	private final TransferResource resource = new TransferResource(null, REPOSITORY,, +			ARTIFACT, null, null);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfigurationTests.java, +import org.elasticsearch.client.RequestOptions;, +					client.index(index, RequestOptions.DEFAULT);, +					assertThat(client.get(getRequest, RequestOptions.DEFAULT).isExists()), +							.isTrue();, +++ b/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/DetailedProgressReporterTests.java, +	private final TransferResource resource = new TransferResource(null, REPOSITORY,, +			ARTIFACT, null, null);, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootZipCopyAction.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/elasticsearch/rest/RestClientAutoConfigurationTests.java, +import org.elasticsearch.client.RequestOptions;, +					client.index(index, RequestOptions.DEFAULT);, +					assertThat(client.get(getRequest, RequestOptions.DEFAULT).isExists()), +							.isTrue();, +++ b/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/DetailedProgressReporterTests.java, +	private final TransferResource resource = new TransferResource(null, REPOSITORY,, +			ARTIFACT, null, null);, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootZipCopyAction.java, +	@SuppressWarnings("unchecked"), +++ b/spring-boot-project/spring-boot-tools/spring-boot-test-support/src/main/java/org/springframework/boot/testsupport/testcontainers/Container.java, +import org.testcontainers.containers.FailureDetectingExternalResource;, +		return ((FailureDetectingExternalResource) this.container).apply(base,, +				description);]