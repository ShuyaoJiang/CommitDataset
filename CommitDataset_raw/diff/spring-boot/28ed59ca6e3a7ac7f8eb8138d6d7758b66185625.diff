[+++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/RunProcess.java, +		builder.directory(this.workingDirectory);, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/RunProcess.java, +		builder.directory(this.workingDirectory);, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractRunMojo.java, +	 * Current working directory to use for the application. If not specified, basedir, +	 * will be used NOTE: the use of working directory means that processes will be, +	 * started by forking a new JVM., +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/RunProcess.java, +		builder.directory(this.workingDirectory);, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractRunMojo.java, +	 * Current working directory to use for the application. If not specified, basedir, +	 * will be used NOTE: the use of working directory means that processes will be, +	 * started by forking a new JVM., +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunMojo.java, +import java.net.URL;, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/RunProcess.java, +		builder.directory(this.workingDirectory);, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractRunMojo.java, +	 * Current working directory to use for the application. If not specified, basedir, +	 * will be used NOTE: the use of working directory means that processes will be, +	 * started by forking a new JVM., +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunMojo.java, +import java.net.URL;, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/StartMojo.java, + * Copyright 2012-2016 the original author or authors., +		RunProcess runProcess = runProcess(workingDirectory, args);, +	private RunProcess runProcess(File workingDirectory, List<String> args), +			throws MojoExecutionException {, +			RunProcess runProcess = new RunProcess(workingDirectory,, +					new JavaExecutable().toString());]