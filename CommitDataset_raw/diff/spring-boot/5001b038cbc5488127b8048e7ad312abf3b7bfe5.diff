[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/DataSourcePublicMetrics.java, +import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProviders;, +			DataSourcePoolMetadata poolMetadata = provider, +					.getDataSourcePoolMetadata(bean);, +			DataSourcePoolMetadata metadata = entry.getValue();, +			addMetric(metrics, prefix + "max", metadata.getMax());, +			addMetric(metrics, prefix + "min", metadata.getMin());, +			addMetric(metrics, prefix + "active", metadata.getActive());, +			addMetric(metrics, prefix + "usage", metadata.getUsage());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/DataSourcePublicMetrics.java, +import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProviders;, +			DataSourcePoolMetadata poolMetadata = provider, +					.getDataSourcePoolMetadata(bean);, +			DataSourcePoolMetadata metadata = entry.getValue();, +			addMetric(metrics, prefix + "max", metadata.getMax());, +			addMetric(metrics, prefix + "min", metadata.getMin());, +			addMetric(metrics, prefix + "active", metadata.getActive());, +			addMetric(metrics, prefix + "usage", metadata.getUsage());, +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +, +, +The following metrics are exposed for each supported `DataSource` defined in your, +application:, +* The maximum number connections (`datasource.xxx.max`)., +* The minimum number of connections (`datasource.xxx.min`)., +* The number of active connections (`datasource.xxx.active`), +* The current usage of the connection pool (`datasource.xxx.usage`)., +All data source metrics share the `datasource.` prefix. The prefix is further qualified, +for each data source:, +  source or the one flagged `@Primary` amongst the existing ones), the prefix is, +  `datasource.primary`., +* If the data source bean name ends with `dataSource`, the prefix is the name of the bean, +  without `dataSource` (i.e. `datasource.batch` for `batchDataSource`)., +* In all other cases, the name of the bean is used., +It is possible to override part or all of those defaults by registering a bean with a, +customized version of `DataSourcePublicMetrics`. By default, Spring Boot provides metadata, +for all  supported datasources; you can add additional `DataSourcePoolMetadataProvider`, +beans if your favorite data source isn't supported out of the box. See, +`DataSourcePoolMetadataProvidersConfiguration` for examples., +, +]