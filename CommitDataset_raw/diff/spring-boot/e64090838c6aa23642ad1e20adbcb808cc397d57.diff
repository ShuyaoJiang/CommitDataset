[+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java, +		Class<?> type = target.getType().resolve();, +		if (context.hasBoundBean(type)) {, +		return context.withBean(type, () -> {, +		private final Deque<Class<?>> beans = new ArrayDeque<>();, +		public <T> T withBean(Class<?> bean, Supplier<T> supplier) {, +			this.beans.push(bean);, +				this.beans.pop();, +		public boolean hasBoundBean(Class<?> bean) {, +			return this.beans.contains(bean);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java, +		Class<?> type = target.getType().resolve();, +		if (context.hasBoundBean(type)) {, +		return context.withBean(type, () -> {, +		private final Deque<Class<?>> beans = new ArrayDeque<>();, +		public <T> T withBean(Class<?> bean, Supplier<T> supplier) {, +			this.beans.push(bean);, +				this.beans.pop();, +		public boolean hasBoundBean(Class<?> bean) {, +			return this.beans.contains(bean);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/BinderTests.java]