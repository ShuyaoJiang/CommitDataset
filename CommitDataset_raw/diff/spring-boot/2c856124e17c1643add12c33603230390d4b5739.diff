[+++ b/spring-boot-junit-runners/src/main/java/org/springframework/boot/junit/runner/classpath/ModifiedClassPathRunner.java, +			return new ModifiedClassPathTestClass(classLoader, testClass.getName());, +		ModifiedClassPathTestClass testClass = (ModifiedClassPathTestClass) getTestClass();, +		return testClass.doWithModifiedClassPathThreadContextClassLoader(, +				new ModifiedClassPathTestClass.ModifiedClassPathTcclAction<Object, Exception>() {, +		return new ModifiedClassPathClassLoader(, +				processUrls(extractUrls(classLoader), testClass), classLoader.getParent(),, +				classLoader);, +	 * Custom {@link TestClass} that uses a modified class path., +	private static final class ModifiedClassPathTestClass extends TestClass {, +		ModifiedClassPathTestClass(ClassLoader classLoader, String testClassName), +				wrapped.add(new ModifiedClassPathFrameworkMethod(, +						frameworkMethod.getMethod()));, +		private <T, E extends Throwable> T doWithModifiedClassPathThreadContextClassLoader(, +				ModifiedClassPathTcclAction<T, E> action) throws E {, +		 * An action to be performed with the {@link ModifiedClassPathClassLoader} set as, +		 * the thread context class loader., +		private interface ModifiedClassPathTcclAction<T, E extends Throwable> {, +		 * Custom {@link FrameworkMethod} that runs methods with, +		 * {@link ModifiedClassPathClassLoader} as the thread context class loader., +		private final class ModifiedClassPathFrameworkMethod extends FrameworkMethod {, +			private ModifiedClassPathFrameworkMethod(Method method) {, +				return doWithModifiedClassPathThreadContextClassLoader(, +						new ModifiedClassPathTcclAction<Object, Throwable>() {, +								return ModifiedClassPathFrameworkMethod.super.invokeExplosively(, +	/**, +	 * Custom {@link URLClassLoader} that modifies the class path., +	 */, +	private static final class ModifiedClassPathClassLoader extends URLClassLoader {, +		ModifiedClassPathClassLoader(URL[] urls, ClassLoader parent,, +				ClassLoader junitLoader) {]