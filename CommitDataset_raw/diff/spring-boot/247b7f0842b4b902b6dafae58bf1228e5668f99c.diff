[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler.java, +				.append(").</div>");, +		if (error.get("message") != null) {, +			builder.append("<div>"), +					.append("</div>");, +		}, +		builder.append("</body></html>");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler.java, +				.append(").</div>");, +		if (error.get("message") != null) {, +			builder.append("<div>"), +					.append("</div>");, +		}, +		builder.append("</body></html>");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java, +	public void testExceptionWithNullMessage() throws Exception {, +		this.contextRunner, +				.withPropertyValues("spring.mustache.prefix=classpath:/unknown/"), +				.run((context) -> {, +					WebTestClient client = WebTestClient.bindToApplicationContext(context), +							.build();, +					String body = client.get().uri("/notfound").accept(MediaType.TEXT_HTML), +							.exchange().expectStatus(), +							.isEqualTo(HttpStatus.NOT_FOUND).expectHeader(), +							.contentType(MediaType.TEXT_HTML).expectBody(String.class), +							.returnResult().getResponseBody();, +					assertThat(body).contains("Whitelabel Error Page"), +							.contains("type=Not Found, status=404");, +				});, +	}, +, +	@Test]