[+++ b/spring-boot-actuator/pom.xml, +			<groupId>org.flywaydb</groupId>, +			<artifactId>flyway-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.liquibase</groupId>, +			<artifactId>liquibase-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/pom.xml, +			<groupId>org.flywaydb</groupId>, +			<artifactId>flyway-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.liquibase</groupId>, +			<artifactId>liquibase-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import liquibase.integration.spring.SpringLiquibase;, +, +import org.flywaydb.core.Flyway;, +import org.springframework.boot.actuate.endpoint.FlywayEndpoint;, +import org.springframework.boot.actuate.endpoint.LiquibaseEndpoint;, +import org.springframework.boot.autoconfigure.AutoConfigureAfter;, +import org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration;, +import org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration;, + * @author Eddú Meléndez, +@AutoConfigureAfter({ FlywayAutoConfiguration.class, LiquibaseAutoConfiguration.class }), +	@ConditionalOnBean(Flyway.class), +	@ConditionalOnClass(Flyway.class), +	static class FlywayEndpointConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public FlywayEndpoint flywayEndpoint(Flyway flyway) {, +			return new FlywayEndpoint(flyway);, +		}, +, +	}, +, +	@Configuration, +	@ConditionalOnBean(SpringLiquibase.class), +	@ConditionalOnClass(SpringLiquibase.class), +	static class LiquibaseEndpointConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public LiquibaseEndpoint liquibaseEndpoint(SpringLiquibase liquibase) {, +			return new LiquibaseEndpoint(liquibase);, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-actuator/pom.xml, +			<groupId>org.flywaydb</groupId>, +			<artifactId>flyway-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.liquibase</groupId>, +			<artifactId>liquibase-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import liquibase.integration.spring.SpringLiquibase;, +, +import org.flywaydb.core.Flyway;, +import org.springframework.boot.actuate.endpoint.FlywayEndpoint;, +import org.springframework.boot.actuate.endpoint.LiquibaseEndpoint;, +import org.springframework.boot.autoconfigure.AutoConfigureAfter;, +import org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration;, +import org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration;, + * @author Eddú Meléndez, +@AutoConfigureAfter({ FlywayAutoConfiguration.class, LiquibaseAutoConfiguration.class }), +	@ConditionalOnBean(Flyway.class), +	@ConditionalOnClass(Flyway.class), +	static class FlywayEndpointConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public FlywayEndpoint flywayEndpoint(Flyway flyway) {, +			return new FlywayEndpoint(flyway);, +		}, +, +	}, +, +	@Configuration, +	@ConditionalOnBean(SpringLiquibase.class), +	@ConditionalOnClass(SpringLiquibase.class), +	static class LiquibaseEndpointConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean]