[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/JspTemplateAvailabilityProvider.java, + * Copyright 2012-2018 the original author or authors., +import java.io.File;, +, +			if (resourceLoader.getResource(resourceName).exists()) {, +				return true;, +			}, +			return new File("src/main/webapp", resourceName).exists();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/JspTemplateAvailabilityProvider.java, + * Copyright 2012-2018 the original author or authors., +import java.io.File;, +, +			if (resourceLoader.getResource(resourceName).exists()) {, +				return true;, +			}, +			return new File("src/main/webapp", resourceName).exists();, +++ b/spring-boot-samples/spring-boot-sample-web-jsp/src/main/webapp/WEB-INF/jsp/error.jsp, +<!DOCTYPE html>, +<html lang="en">, +<body>, +Something went wrong: ${status} ${error}, +</body>, +</html>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/JspTemplateAvailabilityProvider.java, + * Copyright 2012-2018 the original author or authors., +import java.io.File;, +, +			if (resourceLoader.getResource(resourceName).exists()) {, +				return true;, +			}, +			return new File("src/main/webapp", resourceName).exists();, +++ b/spring-boot-samples/spring-boot-sample-web-jsp/src/main/webapp/WEB-INF/jsp/error.jsp, +<!DOCTYPE html>, +<html lang="en">, +<body>, +Something went wrong: ${status} ${error}, +</body>, +</html>, +++ b/spring-boot-samples/spring-boot-sample-web-jsp/src/test/java/sample/jsp/SampleWebJspApplicationTests.java, + * Copyright 2012-2018 the original author or authors., +import java.net.URI;, +import java.util.Arrays;, +, +import org.springframework.http.HttpHeaders;, +import org.springframework.http.HttpMethod;, +import org.springframework.http.MediaType;, +import org.springframework.http.RequestEntity;, +	@Test, +	public void customErrorPage() throws Exception {, +		HttpHeaders headers = new HttpHeaders();, +		headers.setAccept(Arrays.asList(MediaType.TEXT_HTML));, +		RequestEntity<Void> request = new RequestEntity<>(headers, HttpMethod.GET,, +				URI.create("/foo"));, +		ResponseEntity<String> entity = this.restTemplate.exchange(request, String.class);, +		assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);, +		assertThat(entity.getBody()).contains("Something went wrong");, +	}, +]