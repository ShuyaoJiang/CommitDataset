[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.DefaultServletContainerCustomizer;, +		private DefaultServletContainerCustomizer serverCustomizer;, +, +				this.serverCustomizer = BeanFactoryUtils.beanOfTypeIncludingAncestors(, +						this.beanFactory, DefaultServletContainerCustomizer.class);, +			this.serverCustomizer.customize(container);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.DefaultServletContainerCustomizer;, +		private DefaultServletContainerCustomizer serverCustomizer;, +, +				this.serverCustomizer = BeanFactoryUtils.beanOfTypeIncludingAncestors(, +						this.beanFactory, DefaultServletContainerCustomizer.class);, +			this.serverCustomizer.customize(container);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.DefaultServletContainerCustomizer;, +		private DefaultServletContainerCustomizer serverCustomizer;, +, +				this.serverCustomizer = BeanFactoryUtils.beanOfTypeIncludingAncestors(, +						this.beanFactory, DefaultServletContainerCustomizer.class);, +			this.serverCustomizer.customize(container);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultServletContainerCustomizer.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.web;, +, +import javax.servlet.ServletContext;, +import javax.servlet.ServletException;, +import javax.servlet.SessionCookieConfig;, +, +import io.undertow.Undertow;, +import io.undertow.UndertowOptions;, +import org.apache.catalina.Context;, +import org.apache.catalina.connector.Connector;, +import org.apache.catalina.valves.AccessLogValve;, +import org.apache.catalina.valves.RemoteIpValve;, +import org.apache.coyote.AbstractProtocol;, +import org.apache.coyote.ProtocolHandler;, +import org.apache.coyote.http11.AbstractHttp11Protocol;, +import org.eclipse.jetty.server.AbstractConnector;, +import org.eclipse.jetty.server.ConnectionFactory;, +import org.eclipse.jetty.server.Handler;, +import org.eclipse.jetty.server.HttpConfiguration;, +import org.eclipse.jetty.server.Server;, +import org.eclipse.jetty.server.handler.ContextHandler;, +import org.eclipse.jetty.server.handler.HandlerCollection;, +import org.eclipse.jetty.server.handler.HandlerWrapper;, +, +import org.springframework.boot.cloud.CloudPlatform;, +import org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizer;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerCustomizerBeanPostProcessor;, +import org.springframework.boot.context.embedded.EmbeddedServletContainerFactory;, +import org.springframework.boot.context.embedded.InitParameterConfiguringServletContextInitializer;, +import org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory;, +import org.springframework.boot.context.embedded.jetty.JettyServerCustomizer;, +import org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer;, +import org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer;, +import org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory;, +import org.springframework.boot.context.embedded.undertow.UndertowBuilderCustomizer;, +import org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory;, +import org.springframework.boot.web.servlet.ServletContextInitializer;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.Ordered;, +import org.springframework.core.env.Environment;, +import org.springframework.util.ObjectUtils;, +import org.springframework.util.StringUtils;, +, +/**, + * Customizer used by an {@link EmbeddedServletContainerFactory} when an, + * {@link EmbeddedServletContainerCustomizerBeanPostProcessor} is active., + *, + * @author Brian Clozel, + * @since 2.0.0, + */, +public class DefaultServletContainerCustomizer, +		implements EmbeddedServletContainerCustomizer, EnvironmentAware, Ordered {, +, +	private final ServerProperties serverProperties;, +, +	private Environment environment;, +, +	public DefaultServletContainerCustomizer(ServerProperties serverProperties) {, +		this.serverProperties = serverProperties;]