[+++ b/.gitignore, +.gradle, +*.sw?, +.#*, +*#, +/build, +.classpath, +.project, +.settings, +bin, +build, +target, +++ b/.gitignore, +.gradle, +*.sw?, +.#*, +*#, +/build, +.classpath, +.project, +.settings, +bin, +build, +target, +++ b/.travis.yml, +language: java, +, +install: mvn -U install --quiet -DskipTests=true, +script: mvn clean test, +, +++ b/.gitignore, +.gradle, +*.sw?, +.#*, +*#, +/build, +.classpath, +.project, +.settings, +bin, +build, +target, +++ b/.travis.yml, +language: java, +, +install: mvn -U install --quiet -DskipTests=true, +script: mvn clean test, +, +++ b/README.md, +# Spring Bootstrap, +Experimental work based on discussions at SpringOne2GX 2012. See also the 'bootstrap' branch of Spring., +, +, +## Elevator Pitch, +Opinionated view of the Spring family so that new users can quickly get to the 'meat and potatoes'. Assumes no knowledge of the Java development ecosystem. Absolutely no code generation and no XML., +, +, +## Installing, +You need to build from source for now, but when it's done instructions will look like this:, +, +1) Get Java, +Download and install the Java SDK from www.java.com, +, +2) Get Spring, +`curl -s try.springsource.org | bash` or use the Windows installer, +, +3) Get to Work!, +spr run yoursourcefile.groovy, +, +, +## What? It's Groovy then? or like Grails? or another Roo?, +There is a command line tool that uses Groovy underneath so that we can present simple snippets that can just run:, +, +	@Controller, +	class ThisWillActuallyRun {, +, +		@RequestMapping("/"), +		@ResponseBody, +		String home() {, +			return "Hello World!", +		}, +	}, +, +By inspecting the code for well known annotations we can `@Grab` appropriate dependencies and also dynamically add `import` statements. Groovy makes this really easy., +, +If you don't want to use the command line tool, and you would rather work using Java and an IDE you can. Just add a `main()` method that calls `SpringApplication` and add `@EnableAutoConfiguration`:, +, +	import org.springframework.bootstrap.*;, +	import org.springframework.context.annotation.*;, +, +	@Configuration, +	@EnableAutoConfiguration, +	@ComponentScan, +	public class MyApplication {, +, +		public static void main(String[] args) throws Exception {, +			SpringApplication.run(MyApplication.class, args);, +		}, +, +	}]