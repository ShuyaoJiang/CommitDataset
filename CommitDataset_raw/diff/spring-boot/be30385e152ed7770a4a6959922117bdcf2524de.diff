[+++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +A useful practice for use with `@WebIntegrationTests` is to set `server.port=0`, +	@WebIntegrationTest("server.port:0"), +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +A useful practice for use with `@WebIntegrationTests` is to set `server.port=0`, +	@WebIntegrationTest("server.port:0"), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +with `MockMVC`) by looking for the `@WebIntegrationTest` or `@WebAppConfiguration`, +annotations.  (`MockMVC` and `@WebAppConfiguration` are part of `spring-test`)., +superclasses) with `@WebIntegrationTest`. This can be very useful because it means you can, +	@WebIntegrationTest, +To change the port you can add environment properties to `@WebIntegrationTest` as colon-, +or equals-separated name-value pairs, e.g. `@WebIntegrationTest("server.port:9000")`., +	@WebIntegrationTest({"server.port=0", "management.port=0"}), +`@WebIntegrationTest` to suit the needs of your tests., +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +A useful practice for use with `@WebIntegrationTests` is to set `server.port=0`, +	@WebIntegrationTest("server.port:0"), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +with `MockMVC`) by looking for the `@WebIntegrationTest` or `@WebAppConfiguration`, +annotations.  (`MockMVC` and `@WebAppConfiguration` are part of `spring-test`)., +superclasses) with `@WebIntegrationTest`. This can be very useful because it means you can, +	@WebIntegrationTest, +To change the port you can add environment properties to `@WebIntegrationTest` as colon-, +or equals-separated name-value pairs, e.g. `@WebIntegrationTest("server.port:9000")`., +	@WebIntegrationTest({"server.port=0", "management.port=0"}), +`@WebIntegrationTest` to suit the needs of your tests., +++ b/spring-boot/src/main/java/org/springframework/boot/test/IntegrationTest.java, + * Copyright 2012-2015 the original author or authors., + * ports). Normally used in conjunction with {@code @SpringApplicationConfiguration}., + * <p>, + * If your test also uses {@code @WebAppConfiguration} consider using the, + * {@link WebIntegrationTest} instead., + * @see WebIntegrationTest, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +A useful practice for use with `@WebIntegrationTests` is to set `server.port=0`, +	@WebIntegrationTest("server.port:0"), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +with `MockMVC`) by looking for the `@WebIntegrationTest` or `@WebAppConfiguration`, +annotations.  (`MockMVC` and `@WebAppConfiguration` are part of `spring-test`)., +superclasses) with `@WebIntegrationTest`. This can be very useful because it means you can, +	@WebIntegrationTest, +To change the port you can add environment properties to `@WebIntegrationTest` as colon-, +or equals-separated name-value pairs, e.g. `@WebIntegrationTest("server.port:9000")`., +	@WebIntegrationTest({"server.port=0", "management.port=0"}), +`@WebIntegrationTest` to suit the needs of your tests., +++ b/spring-boot/src/main/java/org/springframework/boot/test/IntegrationTest.java, + * Copyright 2012-2015 the original author or authors., + * ports). Normally used in conjunction with {@code @SpringApplicationConfiguration}., + * <p>, + * If your test also uses {@code @WebAppConfiguration} consider using the, + * {@link WebIntegrationTest} instead., + * @see WebIntegrationTest, +++ b/spring-boot/src/main/java/org/springframework/boot/test/IntegrationTestPropertiesListener.java, + * Copyright 2013-2015 the original author or authors., +package org.springframework.boot.test;, +				.getAnnotationAttributes(testClass, IntegrationTest.class.getName());, +		if (annotationAttributes != null) {, +			MergedContextConfiguration configuration = (MergedContextConfiguration) ReflectionTestUtils, +					.getField(testContext, "mergedContextConfiguration");, +			new MergedContextConfigurationProperties(configuration).add(properties);, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +A useful practice for use with `@WebIntegrationTests` is to set `server.port=0`, +	@WebIntegrationTest("server.port:0"), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +with `MockMVC`) by looking for the `@WebIntegrationTest` or `@WebAppConfiguration`, +annotations.  (`MockMVC` and `@WebAppConfiguration` are part of `spring-test`)., +superclasses) with `@WebIntegrationTest`. This can be very useful because it means you can, +	@WebIntegrationTest, +To change the port you can add environment properties to `@WebIntegrationTest` as colon-, +or equals-separated name-value pairs, e.g. `@WebIntegrationTest("server.port:9000")`., +	@WebIntegrationTest({"server.port=0", "management.port=0"}), +`@WebIntegrationTest` to suit the needs of your tests., +++ b/spring-boot/src/main/java/org/springframework/boot/test/IntegrationTest.java, + * Copyright 2012-2015 the original author or authors., + * ports). Normally used in conjunction with {@code @SpringApplicationConfiguration}., + * <p>, + * If your test also uses {@code @WebAppConfiguration} consider using the, + * {@link WebIntegrationTest} instead., + * @see WebIntegrationTest, +++ b/spring-boot/src/main/java/org/springframework/boot/test/IntegrationTestPropertiesListener.java, + * Copyright 2013-2015 the original author or authors., +package org.springframework.boot.test;, +				.getAnnotationAttributes(testClass, IntegrationTest.class.getName());, +		if (annotationAttributes != null) {, +			MergedContextConfiguration configuration = (MergedContextConfiguration) ReflectionTestUtils, +					.getField(testContext, "mergedContextConfiguration");, +			new MergedContextConfigurationProperties(configuration).add(properties);, +++ b/spring-boot/src/main/java/org/springframework/boot/test/MergedContextConfigurationProperties.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,]