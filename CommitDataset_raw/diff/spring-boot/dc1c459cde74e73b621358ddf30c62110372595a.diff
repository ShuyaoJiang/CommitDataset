[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, +import java.util.HashSet;, +import java.util.Set;, +		CacheKey cacheKey = CacheKey.get(getPropertySource());, +		this.cacheKey = cacheKey.copy();, +	private static final class CacheKey {, +, +		private Object key;, +, +		private CacheKey(Object key) {, +			this.key = key;, +		}, +, +		public CacheKey copy() {, +			return new CacheKey(copyKey(this.key));, +		}, +, +		private Object copyKey(Object key) {, +			if (key instanceof Set) {, +				return new HashSet<Object>((Set<?>) key);, +			}, +			return ((String[]) key).clone();, +		}, +, +		@Override, +		public int hashCode() {, +			return this.key.hashCode();, +		}, +, +		@Override, +		public boolean equals(Object obj) {, +			if (this == obj) {, +				return true;, +			}, +			if (obj == null || getClass() != obj.getClass()) {, +				return false;, +			}, +			return ObjectUtils.nullSafeEquals(this.key, ((CacheKey) obj).key);, +		}, +, +		public static CacheKey get(EnumerablePropertySource<?> source) {, +			if (source instanceof MapPropertySource) {, +				return new CacheKey(((MapPropertySource) source).getSource().keySet());, +			}, +			return new CacheKey(source.getPropertyNames());, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, +import java.util.HashSet;, +import java.util.Set;, +		CacheKey cacheKey = CacheKey.get(getPropertySource());, +		this.cacheKey = cacheKey.copy();, +	private static final class CacheKey {, +, +		private Object key;, +, +		private CacheKey(Object key) {, +			this.key = key;, +		}, +, +		public CacheKey copy() {, +			return new CacheKey(copyKey(this.key));, +		}, +, +		private Object copyKey(Object key) {, +			if (key instanceof Set) {, +				return new HashSet<Object>((Set<?>) key);, +			}, +			return ((String[]) key).clone();, +		}, +, +		@Override, +		public int hashCode() {, +			return this.key.hashCode();, +		}, +, +		@Override, +		public boolean equals(Object obj) {, +			if (this == obj) {, +				return true;, +			}, +			if (obj == null || getClass() != obj.getClass()) {, +				return false;, +			}, +			return ObjectUtils.nullSafeEquals(this.key, ((CacheKey) obj).key);, +		}, +, +		public static CacheKey get(EnumerablePropertySource<?> source) {, +			if (source instanceof MapPropertySource) {, +				return new CacheKey(((MapPropertySource) source).getSource().keySet());, +			}, +			return new CacheKey(source.getPropertyNames());, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySourceTests.java, +	public void propertySourceKeyDataChangeInvalidatesCache() {]