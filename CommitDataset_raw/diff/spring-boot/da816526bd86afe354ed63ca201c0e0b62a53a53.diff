[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties.java, +		if (countBeans(AuthorizationServerEndpointsConfiguration.class) > 0) {, +		if (countBeans(ResourceServerTokenServicesConfiguration.class) == 0) {, +			// If we are not a resource server or an SSO client we don't need remote, +			// resource token services, +			return;, +		}, +	private int countBeans(Class<?> type) {, +		return BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.beanFactory,, +				type, true, false).length;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerProperties.java, +		if (countBeans(AuthorizationServerEndpointsConfiguration.class) > 0) {, +		if (countBeans(ResourceServerTokenServicesConfiguration.class) == 0) {, +			// If we are not a resource server or an SSO client we don't need remote, +			// resource token services, +			return;, +		}, +	private int countBeans(Class<?> type) {, +		return BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.beanFactory,, +				type, true, false).length;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/OAuth2AutoConfigurationTests.java, +import static org.hamcrest.CoreMatchers.equalTo;, +import static org.hamcrest.MatcherAssert.assertThat;, +, +import org.springframework.security.oauth2.client.OAuth2ClientContext;, +import org.springframework.security.oauth2.config.annotation.web.configuration.EnableOAuth2Client;, +	public void testClientIsNotResourceServer() {, +		this.context = new AnnotationConfigEmbeddedWebApplicationContext();, +		this.context.register(ClientConfiguration.class,, +				MinimalSecureWebApplication.class);, +		this.context.refresh();, +		assertThat(countBeans(RESOURCE_SERVER_CONFIG), equalTo(0));, +		assertThat(countBeans(AUTHORIZATION_SERVER_CONFIG), equalTo(0));, +		// Scoped target and proxy:, +		assertThat(countBeans(OAuth2ClientContext.class), equalTo(2));, +	}, +, +	@Test, +	@EnableOAuth2Client, +	protected static class ClientConfiguration extends TestSecurityConfiguration {, +	}, +, +	@Configuration]