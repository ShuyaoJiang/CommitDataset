[+++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +		doWithBlockedPort(new BlockedPortAction() {, +			public void run(int port) {, +					factory.setPort(port);, +					AbstractEmbeddedServletContainerFactoryTests.this.container = factory, +							.getEmbeddedServletContainer();, +		doWithBlockedPort(new BlockedPortAction() {, +			public void run(int port) {, +					AbstractEmbeddedServletContainerFactory factory = getFactory();, +					factory.setPort(SocketUtils.findAvailableTcpPort(40000));, +					addConnector(port, factory);, +					AbstractEmbeddedServletContainerFactoryTests.this.container = factory, +							.getEmbeddedServletContainer();, +	protected final void doWithBlockedPort(BlockedPortAction action) throws IOException {, +		int port = SocketUtils.findAvailableTcpPort(40000);, +		for (int i = 0; i < 10; i++) {, +				serverSocket.bind(new InetSocketAddress(port));, +				break;, +			}, +			catch (Exception ex) {, +			}, +		}, +		try {, +			action.run(port);, +	public interface BlockedPortAction {, +, +		void run(int port);, +, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +		doWithBlockedPort(new BlockedPortAction() {, +			public void run(int port) {, +					factory.setPort(port);, +					AbstractEmbeddedServletContainerFactoryTests.this.container = factory, +							.getEmbeddedServletContainer();, +		doWithBlockedPort(new BlockedPortAction() {, +			public void run(int port) {, +					AbstractEmbeddedServletContainerFactory factory = getFactory();, +					factory.setPort(SocketUtils.findAvailableTcpPort(40000));, +					addConnector(port, factory);, +					AbstractEmbeddedServletContainerFactoryTests.this.container = factory, +							.getEmbeddedServletContainer();, +	protected final void doWithBlockedPort(BlockedPortAction action) throws IOException {, +		int port = SocketUtils.findAvailableTcpPort(40000);, +		for (int i = 0; i < 10; i++) {, +				serverSocket.bind(new InetSocketAddress(port));, +				break;, +			}, +			catch (Exception ex) {, +			}, +		}, +		try {, +			action.run(port);, +	public interface BlockedPortAction {, +, +		void run(int port);, +, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java, +		doWithBlockedPort(new BlockedPortAction() {, +			public void run(int port) {]