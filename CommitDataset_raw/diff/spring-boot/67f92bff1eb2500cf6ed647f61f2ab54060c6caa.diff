[+++ b/spring-boot-dependencies/pom.xml, +		<spring-shell.version>1.1.0.RELEASE</spring-shell.version>, +				<groupId>org.springframework.shell</groupId>, +				<artifactId>spring-shell</artifactId>, +				<version>${spring-shell.version}</version>, +			</dependency>, +			<dependency>, +++ b/spring-boot-dependencies/pom.xml, +		<spring-shell.version>1.1.0.RELEASE</spring-shell.version>, +				<groupId>org.springframework.shell</groupId>, +				<artifactId>spring-shell</artifactId>, +				<version>${spring-shell.version}</version>, +			</dependency>, +			<dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/pom.xml, +	<name>Spring Boot Data GemFire Sample</name>, +	<description>Spring Boot Data GemFire Sample</description>, +		<dependency>, +			<groupId>org.springframework.shell</groupId>, +			<artifactId>spring-shell</artifactId>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-dependencies/pom.xml, +		<spring-shell.version>1.1.0.RELEASE</spring-shell.version>, +				<groupId>org.springframework.shell</groupId>, +				<artifactId>spring-shell</artifactId>, +				<version>${spring-shell.version}</version>, +			</dependency>, +			<dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/pom.xml, +	<name>Spring Boot Data GemFire Sample</name>, +	<description>Spring Boot Data GemFire Sample</description>, +		<dependency>, +			<groupId>org.springframework.shell</groupId>, +			<artifactId>spring-shell</artifactId>, +			<scope>runtime</scope>, +		</dependency>, +++ b/spring-boot-samples/spring-boot-sample-data-gemfire/src/main/java/sample/data/gemfire/SampleDataGemFireApplication.java, +import java.util.Properties;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.data.gemfire.CacheFactoryBean;, +import org.springframework.data.gemfire.GemfireTransactionManager;, +import org.springframework.data.gemfire.RegionAttributesFactoryBean;, +import org.springframework.data.gemfire.ReplicatedRegionFactoryBean;, +import com.gemstone.gemfire.cache.Cache;, +import com.gemstone.gemfire.cache.RegionAttributes;, +, +import sample.data.gemfire.config.SampleDataGemFireApplicationProperties;, +import sample.data.gemfire.domain.Gemstone;, +, +@EnableConfigurationProperties(SampleDataGemFireApplicationProperties.class), +@SuppressWarnings("unused"), +	protected static final String GEMSTONES_REGION_NAME = "Gemstones";, +, +	@Autowired, +	SampleDataGemFireApplicationProperties applicationProperties;, +, +	Properties gemfireProperties() {, +		Properties gemfireProperties = new Properties();, +, +		gemfireProperties.setProperty("name", SampleDataGemFireApplication.class.getSimpleName());, +		gemfireProperties.setProperty("mcast-port", "0");, +		gemfireProperties.setProperty("locators", "");, +		gemfireProperties.setProperty("log-level", applicationProperties.getLogLevel());, +, +		return gemfireProperties;, +	}, +, +	@Bean, +	CacheFactoryBean gemfireCache() {, +		CacheFactoryBean gemfireCache = new CacheFactoryBean();, +, +		gemfireCache.setClose(true);, +		gemfireCache.setProperties(gemfireProperties());, +, +		return gemfireCache;, +	}, +, +	@Bean(name = GEMSTONES_REGION_NAME), +	ReplicatedRegionFactoryBean<Long, Gemstone> gemstonesRegion(Cache gemfireCache,, +			RegionAttributes<Long, Gemstone> gemstonesRegionAttributes) {, +, +		ReplicatedRegionFactoryBean<Long, Gemstone> gemstonesRegion =, +			new ReplicatedRegionFactoryBean<Long, Gemstone>();, +, +		gemstonesRegion.setAttributes(gemstonesRegionAttributes);, +		gemstonesRegion.setClose(false);, +		gemstonesRegion.setCache(gemfireCache);, +		gemstonesRegion.setName(GEMSTONES_REGION_NAME);, +		gemstonesRegion.setPersistent(false);, +, +		return gemstonesRegion;, +	}, +, +	@Bean, +	@SuppressWarnings("unchecked"), +	RegionAttributesFactoryBean gemstonesRegionAttributes() {]