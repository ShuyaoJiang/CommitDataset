[+++ b/docs/howto.md, +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public void setKeysToSanitize(String... keysToSanitize) {, +		ObjectMapper mapper = new ObjectMapper();, +			Map<String, Object> value = mapper.convertValue(entry.getValue(), Map.class);, +			beans.put(entry.getKey(), sanitize(value));, +				return (object == null ? null : "******");, +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public void setKeysToSanitize(String... keysToSanitize) {, +		ObjectMapper mapper = new ObjectMapper();, +			Map<String, Object> value = mapper.convertValue(entry.getValue(), Map.class);, +			beans.put(entry.getKey(), sanitize(value));, +				return (object == null ? null : "******");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HttpMessageConverter}s., + * , +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public void setKeysToSanitize(String... keysToSanitize) {, +		ObjectMapper mapper = new ObjectMapper();, +			Map<String, Object> value = mapper.convertValue(entry.getValue(), Map.class);, +			beans.put(entry.getKey(), sanitize(value));, +				return (object == null ? null : "******");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HttpMessageConverter}s., + * , +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersTests.java, + * Tests for {@link HttpMessageConverters}., + * , +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public void setKeysToSanitize(String... keysToSanitize) {, +		ObjectMapper mapper = new ObjectMapper();, +			Map<String, Object> value = mapper.convertValue(entry.getValue(), Map.class);, +			beans.put(entry.getKey(), sanitize(value));, +				return (object == null ? null : "******");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HttpMessageConverter}s., + * , +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersTests.java, + * Tests for {@link HttpMessageConverters}., + * , +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/JreProxySelector.java, +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public void setKeysToSanitize(String... keysToSanitize) {, +		ObjectMapper mapper = new ObjectMapper();, +			Map<String, Object> value = mapper.convertValue(entry.getValue(), Map.class);, +			beans.put(entry.getKey(), sanitize(value));, +				return (object == null ? null : "******");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HttpMessageConverter}s., + * , +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersTests.java, + * Tests for {@link HttpMessageConverters}., + * , +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/JreProxySelector.java, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/README.md, +Then access the app via a browser (or curl) on http://localhost:8080 (the user name is, +"user" and look at the INFO log output for the password to login)., +The gradle build contains an intentionally odd configuration to exclude the security, +dependencies from the executable JAR. So the app run like this behaves differently than, +the one run from the Maven-built JAR file. See comments in the `build.gradle` for details., +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public void setKeysToSanitize(String... keysToSanitize) {, +		ObjectMapper mapper = new ObjectMapper();, +			Map<String, Object> value = mapper.convertValue(entry.getValue(), Map.class);, +			beans.put(entry.getKey(), sanitize(value));, +				return (object == null ? null : "******");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, + * {@link EnableAutoConfiguration Auto-configuration} for {@link HttpMessageConverter}s., + * , +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersTests.java, + * Tests for {@link HttpMessageConverters}., + * , +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/JreProxySelector.java, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/README.md, +Then access the app via a browser (or curl) on http://localhost:8080 (the user name is, +"user" and look at the INFO log output for the password to login)., +The gradle build contains an intentionally odd configuration to exclude the security, +dependencies from the executable JAR. So the app run like this behaves differently than, +the one run from the Maven-built JAR file. See comments in the `build.gradle` for details., +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/src/test/java/org/springframework/boot/sample/actuator/log4j/SampleActuatorApplicationTests.java, +import static org.junit.Assert.assertEquals;, +, +++ b/docs/howto.md, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +	public void setKeysToSanitize(String... keysToSanitize) {, +		ObjectMapper mapper = new ObjectMapper();, +			Map<String, Object> value = mapper.convertValue(entry.getValue(), Map.class);, +			beans.put(entry.getKey(), sanitize(value));, +				return (object == null ? null : "******");]