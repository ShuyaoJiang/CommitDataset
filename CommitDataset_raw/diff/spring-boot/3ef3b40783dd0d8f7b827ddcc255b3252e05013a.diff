[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/ConditionalOnEnabledEndpoint.java, +import org.springframework.boot.endpoint.EndpointExposure;, + * specific {@link EndpointExposure}, if any. If any property are set, they are evaluated, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/ConditionalOnEnabledEndpoint.java, +import org.springframework.boot.endpoint.EndpointExposure;, + * specific {@link EndpointExposure}, if any. If any property are set, they are evaluated, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/OnEnabledEndpointCondition.java, +import org.springframework.boot.endpoint.EndpointExposure;, +		// If both types are set, all exposure technologies are exposed, +		EndpointExposure[] exposures = endpoint.exposure();, +				(exposures.length == 1 ? exposures[0] : null));, +		private final EndpointExposure exposure;, +		EndpointAttributes(String id, boolean enabled, EndpointExposure exposure) {, +			this.exposure = exposure;, +			return provider.getEndpointEnablement(this.id, this.enabled, this.exposure);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/ConditionalOnEnabledEndpoint.java, +import org.springframework.boot.endpoint.EndpointExposure;, + * specific {@link EndpointExposure}, if any. If any property are set, they are evaluated, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/OnEnabledEndpointCondition.java, +import org.springframework.boot.endpoint.EndpointExposure;, +		// If both types are set, all exposure technologies are exposed, +		EndpointExposure[] exposures = endpoint.exposure();, +				(exposures.length == 1 ? exposures[0] : null));, +		private final EndpointExposure exposure;, +		EndpointAttributes(String id, boolean enabled, EndpointExposure exposure) {, +			this.exposure = exposure;, +			return provider.getEndpointEnablement(this.id, this.enabled, this.exposure);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/infrastructure/EndpointInfrastructureAutoConfiguration.java, +import org.springframework.boot.endpoint.EndpointExposure;, +				EndpointExposure.JMX);, +					EndpointExposure.WEB);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/ConditionalOnEnabledEndpoint.java, +import org.springframework.boot.endpoint.EndpointExposure;, + * specific {@link EndpointExposure}, if any. If any property are set, they are evaluated, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/OnEnabledEndpointCondition.java, +import org.springframework.boot.endpoint.EndpointExposure;, +		// If both types are set, all exposure technologies are exposed, +		EndpointExposure[] exposures = endpoint.exposure();, +				(exposures.length == 1 ? exposures[0] : null));, +		private final EndpointExposure exposure;, +		EndpointAttributes(String id, boolean enabled, EndpointExposure exposure) {, +			this.exposure = exposure;, +			return provider.getEndpointEnablement(this.id, this.enabled, this.exposure);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/infrastructure/EndpointInfrastructureAutoConfiguration.java, +import org.springframework.boot.endpoint.EndpointExposure;, +				EndpointExposure.JMX);, +					EndpointExposure.WEB);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/infrastructure/EndpointProvider.java, +import org.springframework.boot.endpoint.EndpointExposure;, +	private final EndpointExposure exposure;, +	 * @param exposure the exposure technology for the endpoint, +			EndpointExposure exposure) {, +		this.exposure = exposure;, +				endpoint.isEnabledByDefault(), this.exposure).isEnabled();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/ConditionalOnEnabledEndpoint.java, +import org.springframework.boot.endpoint.EndpointExposure;, + * specific {@link EndpointExposure}, if any. If any property are set, they are evaluated, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/OnEnabledEndpointCondition.java, +import org.springframework.boot.endpoint.EndpointExposure;, +		// If both types are set, all exposure technologies are exposed, +		EndpointExposure[] exposures = endpoint.exposure();, +				(exposures.length == 1 ? exposures[0] : null));, +		private final EndpointExposure exposure;, +		EndpointAttributes(String id, boolean enabled, EndpointExposure exposure) {, +			this.exposure = exposure;, +			return provider.getEndpointEnablement(this.id, this.enabled, this.exposure);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/infrastructure/EndpointInfrastructureAutoConfiguration.java, +import org.springframework.boot.endpoint.EndpointExposure;, +				EndpointExposure.JMX);, +					EndpointExposure.WEB);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/infrastructure/EndpointProvider.java, +import org.springframework.boot.endpoint.EndpointExposure;, +	private final EndpointExposure exposure;, +	 * @param exposure the exposure technology for the endpoint, +			EndpointExposure exposure) {, +		this.exposure = exposure;, +				endpoint.isEnabledByDefault(), this.exposure).isEnabled();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/support/EndpointEnablementProvider.java, +import org.springframework.boot.endpoint.EndpointExposure;, +	 * @param exposure the requested {@link EndpointExposure}, +	 * {@link EndpointExposure}, +			boolean enabledByDefault, EndpointExposure exposure) {, +		EndpointEnablement result = findEnablement(endpointId, exposure);, +			return getDefaultEndpointEnablement(endpointId, false, exposure);, +				exposure);, +			EndpointExposure exposure) {, +		if (exposure != null) {, +			return findEnablement(getKey(endpointId, exposure));, +		return findEnablementForAnyExposureTechnology(endpointId);, +			boolean enabledByDefault, EndpointExposure exposure) {, +		EndpointEnablement result = findGlobalEndpointEnablement(exposure);, +				exposure);, +			EndpointExposure exposure) {, +		if (exposure != null) {, +			EndpointEnablement result = findEnablement(getKey("default", exposure));, +			if (!exposure.isEnabledByDefault()) {, +				return getDefaultEndpointEnablement("default", false, exposure);, +		return findEnablementForAnyExposureTechnology("default");, +	private EndpointEnablement findEnablementForAnyExposureTechnology(String endpointId) {, +		for (EndpointExposure candidate : EndpointExposure.values()) {]