[+++ b/spring-boot-docs/src/main/asciidoc/deployment.adoc, +, +, +, +The script accepts the following parameters as environment variables, so you can change, +the default behavior in a script or on the command line:, +[cols="1,6"], +|===, +|Variable |Description, +|`MODE`, +|The "mode" of operation. The default depends on the way the jar was built, but will, + usually be "auto" (meaning it tries to guess if it is an init script by checking if it, + is a symlink in a directory called "init.d"). You can explicitly set it to "service" so, + that the "stop|start|status|restart" commands work, or to "run" if you just want to run, + the script and not in the background., +|`PID_FOLDER`, +|The root name of the pid folder (`/var/run` by default)., +|`LOG_FOLDER`, +|The name of the folder to put log files in (`/var/log` by default)., +|`APP_NAME`, +|The name of the app. If the jar is run from a symlink the script guesses the app name,, + but if it is not a symlink, or you want to explicitly set the app name this can be, +|`JAVA_HOME`, +|The location of the `java` executable is discovered by using the `PATH` by default, but, + you can set it explicitly if there is an executable file at `$JAVA_HOME/bin/java`., +|`JARFILE`, +|The explicit location of the jar file, in case the script is being used to launch a jar, + that it is not actually embedded in., +|`DEBUG`, +|if not empty will set the `-x` flag on the shell process, making it easy to see the logic, + in the script., +|===, +, +++ b/spring-boot-docs/src/main/asciidoc/deployment.adoc, +, +, +, +The script accepts the following parameters as environment variables, so you can change, +the default behavior in a script or on the command line:, +[cols="1,6"], +|===, +|Variable |Description, +|`MODE`, +|The "mode" of operation. The default depends on the way the jar was built, but will, + usually be "auto" (meaning it tries to guess if it is an init script by checking if it, + is a symlink in a directory called "init.d"). You can explicitly set it to "service" so, + that the "stop|start|status|restart" commands work, or to "run" if you just want to run, + the script and not in the background., +|`PID_FOLDER`, +|The root name of the pid folder (`/var/run` by default)., +|`LOG_FOLDER`, +|The name of the folder to put log files in (`/var/log` by default)., +|`APP_NAME`, +|The name of the app. If the jar is run from a symlink the script guesses the app name,, + but if it is not a symlink, or you want to explicitly set the app name this can be, +|`JAVA_HOME`, +|The location of the `java` executable is discovered by using the `PATH` by default, but, + you can set it explicitly if there is an executable file at `$JAVA_HOME/bin/java`., +|`JARFILE`, +|The explicit location of the jar file, in case the script is being used to launch a jar, + that it is not actually embedded in., +|`DEBUG`, +|if not empty will set the `-x` flag on the shell process, making it easy to see the logic, + in the script., +|===, +, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +, +, +++ b/spring-boot-docs/src/main/asciidoc/deployment.adoc, +, +, +, +The script accepts the following parameters as environment variables, so you can change, +the default behavior in a script or on the command line:, +[cols="1,6"], +|===, +|Variable |Description, +|`MODE`, +|The "mode" of operation. The default depends on the way the jar was built, but will, + usually be "auto" (meaning it tries to guess if it is an init script by checking if it, + is a symlink in a directory called "init.d"). You can explicitly set it to "service" so, + that the "stop|start|status|restart" commands work, or to "run" if you just want to run, + the script and not in the background., +|`PID_FOLDER`, +|The root name of the pid folder (`/var/run` by default)., +|`LOG_FOLDER`, +|The name of the folder to put log files in (`/var/log` by default)., +|`APP_NAME`, +|The name of the app. If the jar is run from a symlink the script guesses the app name,, + but if it is not a symlink, or you want to explicitly set the app name this can be, +|`JAVA_HOME`, +|The location of the `java` executable is discovered by using the `PATH` by default, but, + you can set it explicitly if there is an executable file at `$JAVA_HOME/bin/java`., +|`JARFILE`, +|The explicit location of the jar file, in case the script is being used to launch a jar, + that it is not actually embedded in., +|`DEBUG`, +|if not empty will set the `-x` flag on the shell process, making it easy to see the logic, + in the script.]