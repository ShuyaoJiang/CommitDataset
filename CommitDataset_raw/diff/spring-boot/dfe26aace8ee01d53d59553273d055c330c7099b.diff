[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/TraceProperties.java, +		defaultIncludes.add(Include.TIME_TAKEN);, +		/**, +		 * Include the time taken to service the request., +		 */, +		TIME_TAKEN, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/TraceProperties.java, +		defaultIncludes.add(Include.TIME_TAKEN);, +		/**, +		 * Include the time taken to service the request., +		 */, +		TIME_TAKEN, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java, +, +, +		long startTime = System.currentTimeMillis();, +			long endTime = System.currentTimeMillis();, +			addTimeTaken(startTime, endTime, trace);, +	private void addTimeTaken(long startTime, long endTime, Map<String, Object> trace) {, +		long timeTaken = endTime - startTime;, +		add(trace, Include.TIME_TAKEN, "timeTaken", "" + timeTaken);, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/TraceProperties.java, +		defaultIncludes.add(Include.TIME_TAKEN);, +		/**, +		 * Include the time taken to service the request., +		 */, +		TIME_TAKEN, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java, +, +, +		long startTime = System.currentTimeMillis();, +			long endTime = System.currentTimeMillis();, +			addTimeTaken(startTime, endTime, trace);, +	private void addTimeTaken(long startTime, long endTime, Map<String, Object> trace) {, +		long timeTaken = endTime - startTime;, +		add(trace, Include.TIME_TAKEN, "timeTaken", "" + timeTaken);, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +import org.springframework.mock.web.MockFilterChain;, +	@SuppressWarnings("unchecked"), +	public void filterAddsTimeTaken() throws Exception {, +		MockHttpServletRequest request = spy(new MockHttpServletRequest("GET", "/foo"));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		MockFilterChain chain = new MockFilterChain();, +		this.filter.doFilter(request, response, chain);, +		String timeTaken = (String) this.repository.findAll(), +				.iterator().next().getInfo().get("timeTaken");, +		assertThat(timeTaken).isNotNull();, +	}, +, +	@Test, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/TraceProperties.java, +		defaultIncludes.add(Include.TIME_TAKEN);, +		/**, +		 * Include the time taken to service the request., +		 */, +		TIME_TAKEN, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java, +, +, +		long startTime = System.currentTimeMillis();, +			long endTime = System.currentTimeMillis();, +			addTimeTaken(startTime, endTime, trace);, +	private void addTimeTaken(long startTime, long endTime, Map<String, Object> trace) {, +		long timeTaken = endTime - startTime;, +		add(trace, Include.TIME_TAKEN, "timeTaken", "" + timeTaken);, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/trace/WebRequestTraceFilterTests.java, +import org.springframework.mock.web.MockFilterChain;, +	@SuppressWarnings("unchecked"), +	public void filterAddsTimeTaken() throws Exception {, +		MockHttpServletRequest request = spy(new MockHttpServletRequest("GET", "/foo"));, +		MockHttpServletResponse response = new MockHttpServletResponse();, +		MockFilterChain chain = new MockFilterChain();, +		this.filter.doFilter(request, response, chain);, +		String timeTaken = (String) this.repository.findAll(), +				.iterator().next().getInfo().get("timeTaken");, +		assertThat(timeTaken).isNotNull();, +	}, +, +	@Test, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java, +			if (!this.systemToNative.containsKey(system)) {, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/TraceProperties.java, +		defaultIncludes.add(Include.TIME_TAKEN);, +		/**, +		 * Include the time taken to service the request., +		 */, +		TIME_TAKEN, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/trace/WebRequestTraceFilter.java]