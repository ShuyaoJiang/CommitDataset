[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +			Throwable ex = getError(request);, +			logger.error("Failed to handle request [" + request.methodName() + " ", +					+ request.uri() + "]", ex);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +			Throwable ex = getError(request);, +			logger.error("Failed to handle request [" + request.methodName() + " ", +					+ request.uri() + "]", ex);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.http2.enabled=true # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +			Throwable ex = getError(request);, +			logger.error("Failed to handle request [" + request.methodName() + " ", +					+ request.uri() + "]", ex);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.http2.enabled=true # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +`+server.http2.enabled+` configuration property. This support depends on the chosen web, +server and the application environment, since that protocol is not supported, +out-of-the-box by JDK8., +Spring Boot does not support `h2c`, the cleartext version of the HTTP/2 protocol. So you, +must configure <<howto-configure-ssl, configure SSL first>>., +, +As of Undertow 1.4.0+, HTTP/2 is supported without any additional requirement on JDK8., +, +Spring Boot ships by default with Tomcat 8.5.x; with that version, HTTP/2 is only, +supported if the `libtcnative` library and its dependencies are installed on the host, +operating system., +The library folder must be made available, if not already, to the JVM library path; this, +can be done with a JVM argument such as, +http://tomcat.apache.org/tomcat-8.5-doc/apr.html[official Tomcat documentation]., +This error is not fatal, and the application starts with HTTP/1.1 SSL support still., +Running your application with Tomcat 9.0.x and JDK9 doesn't require any native library, +installed. To use Tomcat 9, you can override the `tomcat.version` build property with the, +version of your choice., +, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +			Throwable ex = getError(request);, +			logger.error("Failed to handle request [" + request.methodName() + " ", +					+ request.uri() + "]", ex);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.http2.enabled=true # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +`+server.http2.enabled+` configuration property. This support depends on the chosen web, +server and the application environment, since that protocol is not supported, +out-of-the-box by JDK8., +Spring Boot does not support `h2c`, the cleartext version of the HTTP/2 protocol. So you, +must configure <<howto-configure-ssl, configure SSL first>>., +, +As of Undertow 1.4.0+, HTTP/2 is supported without any additional requirement on JDK8., +, +Spring Boot ships by default with Tomcat 8.5.x; with that version, HTTP/2 is only, +supported if the `libtcnative` library and its dependencies are installed on the host, +operating system., +The library folder must be made available, if not already, to the JVM library path; this, +can be done with a JVM argument such as, +http://tomcat.apache.org/tomcat-8.5-doc/apr.html[official Tomcat documentation]., +This error is not fatal, and the application starts with HTTP/1.1 SSL support still., +Running your application with Tomcat 9.0.x and JDK9 doesn't require any native library, +installed. To use Tomcat 9, you can override the `tomcat.version` build property with the, +version of your choice., +, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactory.java, +		JettyReactiveWebServerFactory.logger, +				.info("Server initialized with port: " + port);, +		new SslServerCustomizer(port, getSsl(), getSslStoreProvider()).customize(server);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler.java, +			Throwable ex = getError(request);, +			logger.error("Failed to handle request [" + request.methodName() + " ", +					+ request.uri() + "]", ex);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.http2.enabled=true # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +`+server.http2.enabled+` configuration property. This support depends on the chosen web, +server and the application environment, since that protocol is not supported, +out-of-the-box by JDK8., +Spring Boot does not support `h2c`, the cleartext version of the HTTP/2 protocol. So you, +must configure <<howto-configure-ssl, configure SSL first>>., +, +As of Undertow 1.4.0+, HTTP/2 is supported without any additional requirement on JDK8., +, +Spring Boot ships by default with Tomcat 8.5.x; with that version, HTTP/2 is only, +supported if the `libtcnative` library and its dependencies are installed on the host, +operating system., +The library folder must be made available, if not already, to the JVM library path; this, +can be done with a JVM argument such as, +http://tomcat.apache.org/tomcat-8.5-doc/apr.html[official Tomcat documentation]., +This error is not fatal, and the application starts with HTTP/1.1 SSL support still., +Running your application with Tomcat 9.0.x and JDK9 doesn't require any native library, +installed. To use Tomcat 9, you can override the `tomcat.version` build property with the, +version of your choice., +, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactory.java, +		JettyReactiveWebServerFactory.logger, +				.info("Server initialized with port: " + port);, +		new SslServerCustomizer(port, getSsl(), getSslStoreProvider()).customize(server);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java]