[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you do not include the `<execution/>` configuration, as shown in the prior example, you, +can run the plugin on its own (but only if the package goal is used as well), as shown in, +the following example:, +`pluginRepository` elements, as shown in the following listing:, +class that you want to launch can be specified either by using a configuration option or, +|No _(the default is the first class found that declares a `main` method)_, +, +This section shows two examples of Ant tasks., +, +`main`. If necessary, you can also use this task directly in your build. The following, +, +This section contains three examples of using `findmainclass`., +, +The following example shows a typical repackage implementation:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you do not include the `<execution/>` configuration, as shown in the prior example, you, +can run the plugin on its own (but only if the package goal is used as well), as shown in, +the following example:, +`pluginRepository` elements, as shown in the following listing:, +class that you want to launch can be specified either by using a configuration option or, +|No _(the default is the first class found that declares a `main` method)_, +, +This section shows two examples of Ant tasks., +, +`main`. If necessary, you can also use this task directly in your build. The following, +, +This section contains three examples of using `findmainclass`., +, +The following example shows a typical repackage implementation:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/deployment.adoc, +specifically), so they need an intermediary layer that adapts _your_ application to the, +The buildpack wraps your deployed code in whatever is needed to _start_ your application., +It might be a JDK and a call to `java`, an embedded web server, or a full-fledged, +application server. A buildpack is pluggable, but ideally you should be able to get by, +with as few customizations to it as possible. This reduces the footprint of functionality, +that is not under your control. It minimizes divergence between development and production, +environments., +information (such as database credentials). See the, +Tomcat, Jetty, or Undertow instance, which then uses the port when it starts up. The `$PORT`, +OpenShift has many resources describing how to deploy Spring Boot applications, including:, +Each has different features and pricing models. In this document, we describe only the, +This option applies to Spring Boot projects that produce a war file. No, +special configuration is required. You need only follow the official guide., +best to upload the binaries instead. To do so, add lines similar to the following to your, +[`application-boxfuse.properties`] file, Boxfuse bases its configuration on the, +and starts the necessary resources on AWS, resulting in output similar to the following, +requires. Normally, you put this file in `src/main/appengine`, and it should resemble the, +CAUTION: Fully executable jars work by embedding an extra script at the front of the file., +made fully executable. It is recommended that you make your jar or war fully executable, +only if you intend to execute it directly, rather than running it with `java -jar`, +support the standard `start`, `stop`, `restart`, and `status` commands., +Debian-based system, you could start it with the following command:, +IMPORTANT: Remember to change the `Description`, `User`, and `ExecStart` fields for your, +to, use the `embeddedLaunchScript` option to write your own file entirely., +|The name of the app. If the jar is run from a symlink, the script guesses the app name., +If it is not a symlink or you want to explicitly set the app name, this can be useful., +With the exception of `JARFILE` and `APP_NAME`, the settings listed in the preceding, +section can be configured by using a `.conf` file. The file is expected to be next to the, +jar file and have the same name but suffixed with `.conf` rather than `.jar`. For example,, +a jar named `/var/myapp/myapp.jar` uses the configuration file named, +`/var/myapp/myapp.conf`, as shown in the following example:, +A (https://github.com/snicoll-scratches/spring-boot-daemon[separately maintained sample]), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you do not include the `<execution/>` configuration, as shown in the prior example, you, +can run the plugin on its own (but only if the package goal is used as well), as shown in, +the following example:, +`pluginRepository` elements, as shown in the following listing:, +class that you want to launch can be specified either by using a configuration option or, +|No _(the default is the first class found that declares a `main` method)_, +, +This section shows two examples of Ant tasks., +, +`main`. If necessary, you can also use this task directly in your build. The following, +, +This section contains three examples of using `findmainclass`., +, +The following example shows a typical repackage implementation:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/deployment.adoc, +specifically), so they need an intermediary layer that adapts _your_ application to the, +The buildpack wraps your deployed code in whatever is needed to _start_ your application., +It might be a JDK and a call to `java`, an embedded web server, or a full-fledged, +application server. A buildpack is pluggable, but ideally you should be able to get by, +with as few customizations to it as possible. This reduces the footprint of functionality, +that is not under your control. It minimizes divergence between development and production, +environments., +information (such as database credentials). See the, +Tomcat, Jetty, or Undertow instance, which then uses the port when it starts up. The `$PORT`, +OpenShift has many resources describing how to deploy Spring Boot applications, including:, +Each has different features and pricing models. In this document, we describe only the, +This option applies to Spring Boot projects that produce a war file. No, +special configuration is required. You need only follow the official guide., +best to upload the binaries instead. To do so, add lines similar to the following to your, +[`application-boxfuse.properties`] file, Boxfuse bases its configuration on the, +and starts the necessary resources on AWS, resulting in output similar to the following, +requires. Normally, you put this file in `src/main/appengine`, and it should resemble the, +CAUTION: Fully executable jars work by embedding an extra script at the front of the file., +made fully executable. It is recommended that you make your jar or war fully executable, +only if you intend to execute it directly, rather than running it with `java -jar`, +support the standard `start`, `stop`, `restart`, and `status` commands.]