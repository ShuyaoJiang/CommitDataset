[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/BeanTypeRegistry.java, +	 * @return the names of beans (or objects created by FactoryBeans) annotated with the, +		if (logger.isDebugEnabled()) {, +			logger.debug("Ignoring " + message + " '" + name + "'", ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/BeanTypeRegistry.java, +	 * @return the names of beans (or objects created by FactoryBeans) annotated with the, +		if (logger.isDebugEnabled()) {, +			logger.debug("Ignoring " + message + " '" + name + "'", ex);, +++ b/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedPropertiesLoader.java, +	 * @param expandLists if list {@code name[]=a,b,c} shortcuts should be expanded, +			if (reader.isPropertyDelimiter()) {, +		while (!reader.isEndOfLine() && !(splitLists && reader.isListDelimiter())) {, +		public boolean isListDelimiter() {, +		public boolean isPropertyDelimiter() {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/BeanTypeRegistry.java, +	 * @return the names of beans (or objects created by FactoryBeans) annotated with the, +		if (logger.isDebugEnabled()) {, +			logger.debug("Ignoring " + message + " '" + name + "'", ex);, +++ b/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedPropertiesLoader.java, +	 * @param expandLists if list {@code name[]=a,b,c} shortcuts should be expanded, +			if (reader.isPropertyDelimiter()) {, +		while (!reader.isEndOfLine() && !(splitLists && reader.isListDelimiter())) {, +		public boolean isListDelimiter() {, +		public boolean isPropertyDelimiter() {, +++ b/spring-boot/src/main/java/org/springframework/boot/env/TextResourcePropertyOrigin.java, + * original {@link Resource} that loaded the text and a {@link Location} within it., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/BeanTypeRegistry.java, +	 * @return the names of beans (or objects created by FactoryBeans) annotated with the, +		if (logger.isDebugEnabled()) {, +			logger.debug("Ignoring " + message + " '" + name + "'", ex);, +++ b/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedPropertiesLoader.java, +	 * @param expandLists if list {@code name[]=a,b,c} shortcuts should be expanded, +			if (reader.isPropertyDelimiter()) {, +		while (!reader.isEndOfLine() && !(splitLists && reader.isListDelimiter())) {, +		public boolean isListDelimiter() {, +		public boolean isPropertyDelimiter() {, +++ b/spring-boot/src/main/java/org/springframework/boot/env/TextResourcePropertyOrigin.java, + * original {@link Resource} that loaded the text and a {@link Location} within it., +++ b/spring-boot/src/test/java/org/springframework/boot/env/TextResourcePropertyOriginTests.java, +	public void locationEqualsAndHashCodeShouldUseLineAndColumn() throws Exception {]