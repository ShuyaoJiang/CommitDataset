[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import java.nio.charset.Charset;, +	private Charset encoding = Charset.forName("UTF-8");, +		messageSource.setDefaultEncoding(this.encoding.name());, +	public Charset getEncoding() {, +	public void setEncoding(Charset encoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import java.nio.charset.Charset;, +	private Charset encoding = Charset.forName("UTF-8");, +		messageSource.setDefaultEncoding(this.encoding.name());, +	public Charset getEncoding() {, +	public void setEncoding(Charset encoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +			factory.setDefaultEncoding(this.properties.getCharsetName());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import java.nio.charset.Charset;, +	private Charset encoding = Charset.forName("UTF-8");, +		messageSource.setDefaultEncoding(this.encoding.name());, +	public Charset getEncoding() {, +	public void setEncoding(Charset encoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +			factory.setDefaultEncoding(this.properties.getCharsetName());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializer.java, +		if (this.properties.getSqlScriptEncoding() != null) {, +			populator.setSqlScriptEncoding(this.properties.getSqlScriptEncoding().name());, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import java.nio.charset.Charset;, +	private Charset encoding = Charset.forName("UTF-8");, +		messageSource.setDefaultEncoding(this.encoding.name());, +	public Charset getEncoding() {, +	public void setEncoding(Charset encoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +			factory.setDefaultEncoding(this.properties.getCharsetName());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializer.java, +		if (this.properties.getSqlScriptEncoding() != null) {, +			populator.setSqlScriptEncoding(this.properties.getSqlScriptEncoding().name());, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, + * Copyright 2012-2015 the original author or authors., +import java.nio.charset.Charset;, +	private Charset sqlScriptEncoding;, +	public Charset getSqlScriptEncoding() {, +	public void setSqlScriptEncoding(Charset sqlScriptEncoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import java.nio.charset.Charset;, +	private Charset encoding = Charset.forName("UTF-8");, +		messageSource.setDefaultEncoding(this.encoding.name());, +	public Charset getEncoding() {, +	public void setEncoding(Charset encoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +			factory.setDefaultEncoding(this.properties.getCharsetName());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializer.java, +		if (this.properties.getSqlScriptEncoding() != null) {, +			populator.setSqlScriptEncoding(this.properties.getSqlScriptEncoding().name());, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, + * Copyright 2012-2015 the original author or authors., +import java.nio.charset.Charset;, +	private Charset sqlScriptEncoding;, +	public Charset getSqlScriptEncoding() {, +	public void setSqlScriptEncoding(Charset sqlScriptEncoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailProperties.java, +import java.nio.charset.Charset;, +	private static final Charset DEFAULT_CHARSET = Charset.forName("UTF-8");, +, +	private Charset defaultEncoding = DEFAULT_CHARSET;, +	public Charset getDefaultEncoding() {, +	public void setDefaultEncoding(Charset defaultEncoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import java.nio.charset.Charset;, +	private Charset encoding = Charset.forName("UTF-8");, +		messageSource.setDefaultEncoding(this.encoding.name());, +	public Charset getEncoding() {, +	public void setEncoding(Charset encoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/freemarker/FreeMarkerAutoConfiguration.java, +			factory.setDefaultEncoding(this.properties.getCharsetName());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializer.java, +		if (this.properties.getSqlScriptEncoding() != null) {, +			populator.setSqlScriptEncoding(this.properties.getSqlScriptEncoding().name());, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, + * Copyright 2012-2015 the original author or authors., +import java.nio.charset.Charset;, +	private Charset sqlScriptEncoding;, +	public Charset getSqlScriptEncoding() {, +	public void setSqlScriptEncoding(Charset sqlScriptEncoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailProperties.java, +import java.nio.charset.Charset;, +	private static final Charset DEFAULT_CHARSET = Charset.forName("UTF-8");, +, +	private Charset defaultEncoding = DEFAULT_CHARSET;, +	public Charset getDefaultEncoding() {, +	public void setDefaultEncoding(Charset defaultEncoding) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailSenderAutoConfiguration.java, +		sender.setDefaultEncoding(this.properties.getDefaultEncoding().name());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import java.nio.charset.Charset;, +	private Charset encoding = Charset.forName("UTF-8");, +		messageSource.setDefaultEncoding(this.encoding.name());]