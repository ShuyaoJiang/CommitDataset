[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, + * {@code endpoints.jolokia.enabled: false} or {@code endpoints.enabled: false}., + * {@code jolokia.config.*} properties. See the <a, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, + * {@code endpoints.jolokia.enabled: false} or {@code endpoints.enabled: false}., + * {@code jolokia.config.*} properties. See the <a, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, + * "histogram.*", "meter.*". "timer.*") and sending them to the {@code GaugeService} or, + * {@code CounterService}., + * this by setting {@code spring.metrics.export.enabled=false})., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, + * {@code endpoints.jolokia.enabled: false} or {@code endpoints.enabled: false}., + * {@code jolokia.config.*} properties. See the <a, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, + * "histogram.*", "meter.*". "timer.*") and sending them to the {@code GaugeService} or, + * {@code CounterService}., + * this by setting {@code spring.metrics.export.enabled=false})., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, + * Configure property names by using {@code endpoints.configprops.keys_to_sanitize} in, + * your Spring Boot application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, + * {@code endpoints.jolokia.enabled: false} or {@code endpoints.enabled: false}., + * {@code jolokia.config.*} properties. See the <a, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, + * "histogram.*", "meter.*". "timer.*") and sending them to the {@code GaugeService} or, + * {@code CounterService}., + * this by setting {@code spring.metrics.export.enabled=false})., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, + * Configure property names by using {@code endpoints.configprops.keys_to_sanitize} in, + * your Spring Boot application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoint.java, + * to use {@code @RequestMapping} and the full Spring MVC machinery, but should not use, + * {@code @Controller} or {@code @RequestMapping} at the type level (since that would lead, + * to a double mapping of paths, once by the regular MVC handler mappings and once by the, + * {@link EndpointHandlerMapping})., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, + * by using {@code shell.auth.simple.username} and {@code shell.auth.simple.password}., + * Security. This authentication method will get enabled if {@code shell.auth} is set to, + * {@code spring} or if no explicit {@code shell.auth} is provided and a, + * {@code shell.auth.spring.roles}., + * using the following classpath scanning pattern {@code classpath*:/commands/**}. To add, + * different locations or override the default use {@code shell.command_path_patterns} in, + * your application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/JolokiaAutoConfiguration.java, + * {@code endpoints.jolokia.enabled: false} or {@code endpoints.enabled: false}., + * {@code jolokia.config.*} properties. See the <a, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, + * "histogram.*", "meter.*". "timer.*") and sending them to the {@code GaugeService} or, + * {@code CounterService}., + * this by setting {@code spring.metrics.export.enabled=false})., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, + * Configure property names by using {@code endpoints.configprops.keys_to_sanitize} in, + * your Spring Boot application configuration., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpoint.java, + * to use {@code @RequestMapping} and the full Spring MVC machinery, but should not use, + * {@code @Controller} or {@code @RequestMapping} at the type level (since that would lead, + * to a double mapping of paths, once by the regular MVC handler mappings and once by the, + * {@link EndpointHandlerMapping})., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/Health.java, +		 * Create new Builder instance, setting status to given {@code status}.]