[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java, +		registerWebApplicationScopes(null);, +		registerWebApplicationScopes(servletContext);, +		WebApplicationContextUtils.registerEnvironmentBeans(getBeanFactory(),, +				servletContext);, +	private void registerWebApplicationScopes(ServletContext servletContext) {, +		ExistingWebApplicationScopes existingScopes = new ExistingWebApplicationScopes(, +				getBeanFactory());, +		WebApplicationContextUtils.registerWebApplicationScopes(getBeanFactory(),, +				servletContext);, +		existingScopes.restore();, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContext.java, +		registerWebApplicationScopes(null);, +		registerWebApplicationScopes(servletContext);, +		WebApplicationContextUtils.registerEnvironmentBeans(getBeanFactory(),, +				servletContext);, +	private void registerWebApplicationScopes(ServletContext servletContext) {, +		ExistingWebApplicationScopes existingScopes = new ExistingWebApplicationScopes(, +				getBeanFactory());, +		WebApplicationContextUtils.registerWebApplicationScopes(getBeanFactory(),, +				servletContext);, +		existingScopes.restore();, +	}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/EmbeddedWebApplicationContextTests.java, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.config.BeanFactoryPostProcessor;, +import org.springframework.beans.factory.support.AbstractBeanDefinition;, +	public void doesNotReplaceExistingScopes() throws Exception {, +		// gh-2082, +	@Test, +	public void servletRequestCanBeInjectedEarly() throws Exception {, +		// gh-14990, +		addEmbeddedServletContainerFactoryBean();, +		RootBeanDefinition beanDefinition = new RootBeanDefinition(, +				WithAutowiredServletRequest.class);, +		beanDefinition.setAutowireMode(AbstractBeanDefinition.AUTOWIRE_CONSTRUCTOR);, +		this.context.registerBeanDefinition("withAutowiredServletRequest",, +				beanDefinition);, +		this.context.addBeanFactoryPostProcessor(new BeanFactoryPostProcessor() {, +, +			@Override, +			public void postProcessBeanFactory(, +					ConfigurableListableBeanFactory beanFactory) throws BeansException {, +				WithAutowiredServletRequest bean = beanFactory, +						.getBean(WithAutowiredServletRequest.class);, +				assertThat(bean.getRequest()).isNotNull();, +			}, +, +		});, +		this.context.refresh();, +	}, +, +	protected static class WithAutowiredServletRequest {, +, +		private final ServletRequest request;, +, +		public WithAutowiredServletRequest(ServletRequest request) {, +			this.request = request;, +		}, +, +		public ServletRequest getRequest() {, +			return this.request;, +		}, +, +	}, +]