[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@ConfigurationProperties(name = "spring.datasource"), +@EnableConfigurationProperties, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@ConfigurationProperties(name = "spring.datasource"), +@EnableConfigurationProperties, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfigurationTests.java, +import org.springframework.boot.TestUtils;, +import static org.junit.Assert.assertEquals;, +		assertNotNull(this.context.getBean(org.apache.tomcat.jdbc.pool.DataSource.class));, +	}, +, +	@Test, +	public void testDataSourcePropertiesOverridden() throws Exception {, +		this.context.register(TomcatDataSourceConfiguration.class);, +		TestUtils.addEnviroment(this.context, "spring.datasource.url:jdbc:foo//bar/spam");, +		this.context.refresh();, +		assertEquals("jdbc:foo//bar/spam",, +				this.context.getBean(org.apache.tomcat.jdbc.pool.DataSource.class), +						.getUrl());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@ConfigurationProperties(name = "spring.datasource"), +@EnableConfigurationProperties, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfigurationTests.java, +import org.springframework.boot.TestUtils;, +import static org.junit.Assert.assertEquals;, +		assertNotNull(this.context.getBean(org.apache.tomcat.jdbc.pool.DataSource.class));, +	}, +, +	@Test, +	public void testDataSourcePropertiesOverridden() throws Exception {, +		this.context.register(TomcatDataSourceConfiguration.class);, +		TestUtils.addEnviroment(this.context, "spring.datasource.url:jdbc:foo//bar/spam");, +		this.context.refresh();, +		assertEquals("jdbc:foo//bar/spam",, +				this.context.getBean(org.apache.tomcat.jdbc.pool.DataSource.class), +						.getUrl());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/EnableConfigurationPropertiesImportSelector.java, +		Object[] type = attributes == null ? null : (Object[]) attributes, +				.getFirst("value");]