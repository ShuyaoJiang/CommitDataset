[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainer.java, +import java.lang.reflect.Field;, +import java.util.List;, +, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +import org.springframework.util.ReflectionUtils;, +	private static final Log logger = LogFactory, +			.getLog(UndertowEmbeddedServletContainer.class);, +, +		UndertowEmbeddedServletContainer.logger.info("Undertow started on port(s) ", +				+ getPortsDescription());, +	}, +, +	@SuppressWarnings("rawtypes"), +	private String getPortsDescription() {, +		try {, +			// Use reflection if possible to get the actual listener configuration, +			Field listenersField = ReflectionUtils.findField(Undertow.class, "listeners");, +			listenersField.setAccessible(true);, +			List listeners = (List) listenersField.get(this.undertow);, +			StringBuilder ports = new StringBuilder();, +			for (Object listener : listeners) {, +				Field portField = ReflectionUtils.findField(listener.getClass(), "port");, +				portField.setAccessible(true);, +				Field typeField = ReflectionUtils.findField(listener.getClass(), "type");, +				typeField.setAccessible(true);, +				ports.append(ports.length() == 0 ? "" : ", ");, +				ports.append(portField.get(listener) + " (", +						+ typeField.get(listener).toString().toLowerCase() + ")");, +			}, +			return ports.toString();, +		}, +		catch (Exception ex) {, +		}, +		// We at least know our port, +		return String.valueOf(this.port);]