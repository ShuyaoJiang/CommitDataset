[+++ b/spring-actuator/README.md, +The aim of this project is minimum fuss for getting applications up, +and running in production, and in other environments.  There is a, +strong emphasis on implementing RESTful web services but many features, +are more generic than that., +[Feature Guide](docs/Features.md)., +        <artifactId>spring-starter-parent</artifactId>, +        <version>{{project.version}}</version>, +          <artifactId>spring-starter-web</artifactId>, +          <artifactId>spring-starter-actuator</artifactId>, +            <groupId>org.springframework.zero</groupId>, +            <artifactId>spring-package-maven-plugin</artifactId>, +configuration and the Tomcat container to your application, and the, +management endpoints.  If you prefer Jetty you can just add the, +embedded Jetty jars to your classpath instead of Tomcat (once you, +exclude the `spring-starter-tomcat` dependency)., +and package and run:, +There are also some endpoins that you didn't implement by came free, +with the Actuator:, +, +    $ curl localhost:8080/health, +    ok, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +location for the metrics endpoint - it gives you basic counts and, +response timing data by default but there are plenty of ways to, +customize it.  You can also try `/trace` and `/dump` to get some, +interesting information about how and what your app is doing., +, +++ b/spring-actuator/README.md, +The aim of this project is minimum fuss for getting applications up, +and running in production, and in other environments.  There is a, +strong emphasis on implementing RESTful web services but many features, +are more generic than that., +[Feature Guide](docs/Features.md)., +        <artifactId>spring-starter-parent</artifactId>, +        <version>{{project.version}}</version>, +          <artifactId>spring-starter-web</artifactId>, +          <artifactId>spring-starter-actuator</artifactId>, +            <groupId>org.springframework.zero</groupId>, +            <artifactId>spring-package-maven-plugin</artifactId>, +configuration and the Tomcat container to your application, and the, +management endpoints.  If you prefer Jetty you can just add the, +embedded Jetty jars to your classpath instead of Tomcat (once you, +exclude the `spring-starter-tomcat` dependency)., +and package and run:, +There are also some endpoins that you didn't implement by came free, +with the Actuator:, +, +    $ curl localhost:8080/health, +    ok, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +location for the metrics endpoint - it gives you basic counts and, +response timing data by default but there are plenty of ways to, +customize it.  You can also try `/trace` and `/dump` to get some, +interesting information about how and what your app is doing., +, +++ b/spring-actuator/docs/Features.md, +Many useful features of, +[Spring Bootstrap](../../spring-bootstrap/README.md) are all available, +in an Actuator application., +## Logging, +open.  The Starter projects and the Actuator use logback logging by, +default because it has the richest feature set., +++ b/spring-actuator/README.md, +The aim of this project is minimum fuss for getting applications up, +and running in production, and in other environments.  There is a, +strong emphasis on implementing RESTful web services but many features, +are more generic than that., +[Feature Guide](docs/Features.md)., +        <artifactId>spring-starter-parent</artifactId>, +        <version>{{project.version}}</version>, +          <artifactId>spring-starter-web</artifactId>, +          <artifactId>spring-starter-actuator</artifactId>, +            <groupId>org.springframework.zero</groupId>, +            <artifactId>spring-package-maven-plugin</artifactId>, +configuration and the Tomcat container to your application, and the, +management endpoints.  If you prefer Jetty you can just add the, +embedded Jetty jars to your classpath instead of Tomcat (once you, +exclude the `spring-starter-tomcat` dependency)., +and package and run:, +There are also some endpoins that you didn't implement by came free, +with the Actuator:, +, +    $ curl localhost:8080/health, +    ok, +    $ curl localhost:8080/metrics, +    {"counter.status.200.health":1.0,"gauge.response.health":10.0,"mem":120768.0,"mem.free":105012.0,"processors":4.0}, +, +`/health` is the default location for the health endpoint - it tells, +you if the application is running and healthy. `/metrics` is the default, +location for the metrics endpoint - it gives you basic counts and, +response timing data by default but there are plenty of ways to]