[+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, +public class ConfigurationPropertiesBindingPostProcessor, +		implements BeanPostProcessor, BeanFactoryAware, ResourceLoaderAware,, +		EnvironmentAware, ApplicationContextAware, InitializingBean, DisposableBean,, +		ApplicationListener<ContextRefreshedEvent>, PriorityOrdered {, +	private volatile Validator validator;, +		initializeValidator();, +		if (this.conversionService == null) {, +			this.conversionService = getOptionalBean(, +					ConfigurableApplicationContext.CONVERSION_SERVICE_BEAN_NAME,, +					ConversionService.class);, +		}, +	}, +, +	@Override, +	public void onApplicationEvent(ContextRefreshedEvent event) {, +		if (this.validator != null && isJsr303Present()) {, +			this.validator = null; // allow it to be garbage collected, +		}, +	}, +, +	private void initializeValidator() {, +		if (this.ownedValidator && this.validator != null) {, +		initializeValidator();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, +public class ConfigurationPropertiesBindingPostProcessor, +		implements BeanPostProcessor, BeanFactoryAware, ResourceLoaderAware,, +		EnvironmentAware, ApplicationContextAware, InitializingBean, DisposableBean,, +		ApplicationListener<ContextRefreshedEvent>, PriorityOrdered {, +	private volatile Validator validator;, +		initializeValidator();, +		if (this.conversionService == null) {, +			this.conversionService = getOptionalBean(, +					ConfigurableApplicationContext.CONVERSION_SERVICE_BEAN_NAME,, +					ConversionService.class);, +		}, +	}, +, +	@Override, +	public void onApplicationEvent(ContextRefreshedEvent event) {, +		if (this.validator != null && isJsr303Present()) {, +			this.validator = null; // allow it to be garbage collected, +		}, +	}, +, +	private void initializeValidator() {, +		if (this.ownedValidator && this.validator != null) {, +		initializeValidator();, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessorTests.java, +import org.springframework.test.util.ReflectionTestUtils;, +import static org.junit.Assert.assertNull;, +	public void testValidationAndNullOutValidator() {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(TestConfiguration.class);, +		this.context.refresh();, +		ConfigurationPropertiesBindingPostProcessor bean = this.context, +				.getBean(ConfigurationPropertiesBindingPostProcessor.class);, +		assertNull(ReflectionTestUtils.getField(bean, "validator"));, +	}, +, +	@Test]