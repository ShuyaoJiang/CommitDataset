[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/archive/ExplodedArchive.java, + * Copyright 2012-2014 the original author or authors., +	/**, +	 * Create a new {@link ExplodedArchive} instance., +	 * @param root the root folder, +	 */, +	/**, +	 * Create a new {@link ExplodedArchive} instance., +	 * @param root the root folder, +	 * @param recursive if recursive searching should be used to locate the manifest., +	 * Defaults to {@code true}, folders with a large tree might want to set this to {code, +	 * false}., +	 */, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/archive/ExplodedArchive.java, + * Copyright 2012-2014 the original author or authors., +	/**, +	 * Create a new {@link ExplodedArchive} instance., +	 * @param root the root folder, +	 */, +	/**, +	 * Create a new {@link ExplodedArchive} instance., +	 * @param root the root folder, +	 * @param recursive if recursive searching should be used to locate the manifest., +	 * Defaults to {@code true}, folders with a large tree might want to set this to {code, +	 * false}., +	 */, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/archive/ExplodedArchiveTests.java, + * Copyright 2012-2014 the original author or authors., +import static org.hamcrest.Matchers.greaterThan;, +import static org.junit.Assert.assertNotNull;, + * @author Dave Syer, +	@Test, +	public void getNonRecursiveEntriesForRoot() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(new File("/"), false);, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), greaterThan(1));, +	}, +, +	@Test, +	public void getNonRecursiveManifest() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(new File("src/test/resources/root"));, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(4));, +	}, +, +	@Test, +	public void getNonRecursiveManifestEvenIfNonRecursive() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(, +				new File("src/test/resources/root"), false);, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(3));, +	}, +, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/archive/ExplodedArchive.java, + * Copyright 2012-2014 the original author or authors., +	/**, +	 * Create a new {@link ExplodedArchive} instance., +	 * @param root the root folder, +	 */, +	/**, +	 * Create a new {@link ExplodedArchive} instance., +	 * @param root the root folder, +	 * @param recursive if recursive searching should be used to locate the manifest., +	 * Defaults to {@code true}, folders with a large tree might want to set this to {code, +	 * false}., +	 */, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/archive/ExplodedArchiveTests.java, + * Copyright 2012-2014 the original author or authors., +import static org.hamcrest.Matchers.greaterThan;, +import static org.junit.Assert.assertNotNull;, + * @author Dave Syer, +	@Test, +	public void getNonRecursiveEntriesForRoot() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(new File("/"), false);, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), greaterThan(1));, +	}, +, +	@Test, +	public void getNonRecursiveManifest() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(new File("src/test/resources/root"));, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(4));, +	}, +, +	@Test, +	public void getNonRecursiveManifestEvenIfNonRecursive() throws Exception {, +		ExplodedArchive archive = new ExplodedArchive(, +				new File("src/test/resources/root"), false);, +		assertNotNull(archive.getManifest());, +		Map<String, Archive.Entry> entries = getEntriesMap(archive);, +		assertThat(entries.size(), equalTo(3));, +	}, +, +++ /dev/null, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/archive/ExplodedArchive.java, + * Copyright 2012-2014 the original author or authors.]