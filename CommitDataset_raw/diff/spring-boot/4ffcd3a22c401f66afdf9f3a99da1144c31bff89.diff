[+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import org.springframework.util.ObjectUtils;, +			logStartupProfileInfo(context);, +	 * Called to log active profile information., +	 * @param context the application context, +	 */, +	protected void logStartupProfileInfo(ConfigurableApplicationContext context) {, +		Log log = getApplicationLog();, +		if (log.isInfoEnabled()) {, +			String[] activeProfiles = context.getEnvironment().getActiveProfiles();, +			if (ObjectUtils.isEmpty(activeProfiles)) {, +				log.info("No profiles are active");, +			}, +			else {, +				log.info("The following profiles are active: ", +						+ StringUtils.arrayToCommaDelimitedString(activeProfiles));, +			}, +		}, +	}, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import org.springframework.util.ObjectUtils;, +			logStartupProfileInfo(context);, +	 * Called to log active profile information., +	 * @param context the application context, +	 */, +	protected void logStartupProfileInfo(ConfigurableApplicationContext context) {, +		Log log = getApplicationLog();, +		if (log.isInfoEnabled()) {, +			String[] activeProfiles = context.getEnvironment().getActiveProfiles();, +			if (ObjectUtils.isEmpty(activeProfiles)) {, +				log.info("No profiles are active");, +			}, +			else {, +				log.info("The following profiles are active: ", +						+ StringUtils.arrayToCommaDelimitedString(activeProfiles));, +			}, +		}, +	}, +, +	/**, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +import static org.hamcrest.Matchers.containsString;, +	public void logsNoActiveProfiles() throws Exception {, +		SpringApplication application = new SpringApplication(ExampleConfig.class);, +		application.setWebEnvironment(false);, +		this.context = application.run();, +		assertThat(this.output.toString(), containsString("No profiles are active"));, +	}, +, +	@Test, +	public void logsActiveProfiles() throws Exception {, +		SpringApplication application = new SpringApplication(ExampleConfig.class);, +		application.setWebEnvironment(false);, +		this.context = application.run("--spring.profiles.active=myprofiles");, +		assertThat(this.output.toString(),, +				containsString("The following profiles are active: myprofile"));, +	}, +, +	@Test]