[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +import org.springframework.context.annotation.Import;, +		this.applicationContext.register(RootConfig.class, BaseConfiguration.class,, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class,, +				ErrorMvcAutoConfiguration.class);, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class,, +				ErrorMvcAutoConfiguration.class);, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class);, +		this.applicationContext.register(RootConfig.class, BaseConfiguration.class,, +	@Import({ PropertyPlaceholderAutoConfiguration.class,, +			EmbeddedServletContainerAutoConfiguration.class,, +			HttpMessageConvertersAutoConfiguration.class,, +			DispatcherServletAutoConfiguration.class, WebMvcAutoConfiguration.class,, +			ManagementServerPropertiesAutoConfiguration.class,, +			ServerPropertiesAutoConfiguration.class, WebMvcAutoConfiguration.class }), +	protected static class BaseConfiguration {, +, +	}, +, +	@Configuration, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +import org.springframework.context.annotation.Import;, +		this.applicationContext.register(RootConfig.class, BaseConfiguration.class,, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class,, +				ErrorMvcAutoConfiguration.class);, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class,, +				ErrorMvcAutoConfiguration.class);, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class);, +		this.applicationContext.register(RootConfig.class, BaseConfiguration.class,, +	@Import({ PropertyPlaceholderAutoConfiguration.class,, +			EmbeddedServletContainerAutoConfiguration.class,, +			HttpMessageConvertersAutoConfiguration.class,, +			DispatcherServletAutoConfiguration.class, WebMvcAutoConfiguration.class,, +			ManagementServerPropertiesAutoConfiguration.class,, +			ServerPropertiesAutoConfiguration.class, WebMvcAutoConfiguration.class }), +	protected static class BaseConfiguration {, +, +	}, +, +	@Configuration, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.context.embedded.ServletRegistrationBean;, +	@Configuration, +	protected static class DispatcherServletConfiguration {, +, +		@Autowired, +		private ServerProperties server;, +, +		@Bean(name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME), +		@Bean, +		public ServletRegistrationBean dispatcherServletRegistration() {, +			return new ServletRegistrationBean(dispatcherServlet(),, +					this.server.getServletPath());, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java, +import org.springframework.context.annotation.Import;, +		this.applicationContext.register(RootConfig.class, BaseConfiguration.class,, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class,, +				ErrorMvcAutoConfiguration.class);, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class,, +				ErrorMvcAutoConfiguration.class);, +				BaseConfiguration.class, EndpointWebMvcAutoConfiguration.class);, +		this.applicationContext.register(RootConfig.class, BaseConfiguration.class,, +	@Import({ PropertyPlaceholderAutoConfiguration.class,, +			EmbeddedServletContainerAutoConfiguration.class,, +			HttpMessageConvertersAutoConfiguration.class,, +			DispatcherServletAutoConfiguration.class, WebMvcAutoConfiguration.class,, +			ManagementServerPropertiesAutoConfiguration.class,, +			ServerPropertiesAutoConfiguration.class, WebMvcAutoConfiguration.class }), +	protected static class BaseConfiguration {, +, +	}, +, +	@Configuration, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.context.embedded.ServletRegistrationBean;, +	@Configuration, +	protected static class DispatcherServletConfiguration {, +, +		@Autowired, +		private ServerProperties server;, +, +		@Bean(name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME), +		@Bean, +		public ServletRegistrationBean dispatcherServletRegistration() {, +			return new ServletRegistrationBean(dispatcherServlet(),, +					this.server.getServletPath());, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	@NotNull, +	private String servletPath = "/";, +]