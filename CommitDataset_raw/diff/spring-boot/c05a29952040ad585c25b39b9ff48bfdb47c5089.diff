[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +					assertConverterBeanRegisteredWithHttpMessageConverters(context,, +							GsonHttpMessageConverter.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +					assertConverterBeanRegisteredWithHttpMessageConverters(context,, +							GsonHttpMessageConverter.class);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +The preceding example produces metadata information for `server.name`, `server.host.ip`,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +					assertConverterBeanRegisteredWithHttpMessageConverters(context,, +							GsonHttpMessageConverter.class);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +The preceding example produces metadata information for `server.name`, `server.host.ip`,, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/deployment.adoc, +functionality that is not under your control. It minimizes divergence between development, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +					assertConverterBeanRegisteredWithHttpMessageConverters(context,, +							GsonHttpMessageConverter.class);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +The preceding example produces metadata information for `server.name`, `server.host.ip`,, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/deployment.adoc, +functionality that is not under your control. It minimizes divergence between development, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +You also need to include the following element inside `<plugins/>`:, +setting SSL properties in `application.properties`:, +The following example shows how to define a JDBC data source by setting properties:, +configured to depend on the `elasticsearchClient` bean, as shown in the following example:, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +					assertConverterBeanRegisteredWithHttpMessageConverters(context,, +							GsonHttpMessageConverter.class);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +The preceding example produces metadata information for `server.name`, `server.host.ip`,, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/deployment.adoc, +functionality that is not under your control. It minimizes divergence between development, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +You also need to include the following element inside `<plugins/>`:, +setting SSL properties in `application.properties`:, +The following example shows how to define a JDBC data source by setting properties:, +configured to depend on the `elasticsearchClient` bean, as shown in the following example:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +- The response's status., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +					assertConverterBeanRegisteredWithHttpMessageConverters(context,, +							GsonHttpMessageConverter.class);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +The preceding example produces metadata information for `server.name`, `server.host.ip`,, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/deployment.adoc, +functionality that is not under your control. It minimizes divergence between development, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +You also need to include the following element inside `<plugins/>`:, +setting SSL properties in `application.properties`:, +The following example shows how to define a JDBC data source by setting properties:, +configured to depend on the `elasticsearchClient` bean, as shown in the following example:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +- The response's status., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +===== Custom Error Pages, +shows programmatically setting the port:, +. We prefer HikariCP for its performance and concurrency. If HikariCP is available, we, +in the Spring Framework Reference Documentation for more details. If that is not what you, +beans are not loaded into the `ApplicationContext`. The following example shows the, +A list of the auto-configuration settings that are enabled by `@DataLdapTest` can be, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityServiceTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidatorTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.java, +		static class JacksonAvailable {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +					assertConverterBeanRegisteredWithHttpMessageConverters(context,, +							GsonHttpMessageConverter.class);]