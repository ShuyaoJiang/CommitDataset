[+++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationContextLoader.java, +		super.processContextConfiguration(configAttributes);, +	protected String[] getResourceSuffixes() {, +		return new String[] { "-context.xml", "Context.groovy" };, +	}, +, +	@Override, +		throw new IllegalStateException();, +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationContextLoader.java, +		super.processContextConfiguration(configAttributes);, +	protected String[] getResourceSuffixes() {, +		return new String[] { "-context.xml", "Context.groovy" };, +	}, +, +	@Override, +		throw new IllegalStateException();, +++ b/spring-boot/src/test/java/org/springframework/boot/test/SpringApplicationConfigurationGroovyConventionConfigurationTests.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;, +, +import static org.hamcrest.Matchers.equalTo;, +import static org.junit.Assert.assertThat;, +, +/**, + * Tests for {@link SpringApplicationContextLoader} finding groovy config., + *, + * @author Phillip Webb, + */, +@RunWith(SpringJUnit4ClassRunner.class), +@SpringApplicationConfiguration, +public class SpringApplicationConfigurationGroovyConventionConfigurationTests {, +, +	@Autowired, +	private String foo;, +, +	@Test, +	public void groovyConfigLoaded() {, +		assertThat(this.foo, equalTo("World"));, +	}, +, +}, +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationContextLoader.java, +		super.processContextConfiguration(configAttributes);, +	protected String[] getResourceSuffixes() {, +		return new String[] { "-context.xml", "Context.groovy" };, +	}, +, +	@Override, +		throw new IllegalStateException();, +++ b/spring-boot/src/test/java/org/springframework/boot/test/SpringApplicationConfigurationGroovyConventionConfigurationTests.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test;, +, +import org.junit.Test;, +import org.junit.runner.RunWith;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;, +, +import static org.hamcrest.Matchers.equalTo;, +import static org.junit.Assert.assertThat;, +, +/**, + * Tests for {@link SpringApplicationContextLoader} finding groovy config., + *, + * @author Phillip Webb]