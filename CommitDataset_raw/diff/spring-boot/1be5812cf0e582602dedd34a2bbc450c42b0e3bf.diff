[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		private List<String> roles = Arrays.asList("ACTUATOR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		private List<String> roles = Arrays.asList("ACTUATOR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		private List<String> roles = Arrays.asList("ACTUATOR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +							this.roleResolver.getProperty("roles", "ROLE_ACTUATOR"))));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		private List<String> roles = Arrays.asList("ACTUATOR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +							this.roleResolver.getProperty("roles", "ROLE_ACTUATOR"))));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +										.singleton(new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		private List<String> roles = Arrays.asList("ACTUATOR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +							this.roleResolver.getProperty("roles", "ROLE_ACTUATOR"))));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +										.singleton(new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java, +				.commaSeparatedStringToAuthorityList("ROLE_USER,ROLE_ACTUATOR"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		private List<String> roles = Arrays.asList("ACTUATOR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +							this.roleResolver.getProperty("roles", "ROLE_ACTUATOR"))));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +										.singleton(new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java, +				.commaSeparatedStringToAuthorityList("ROLE_USER,ROLE_ACTUATOR"));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpointIntegrationTests.java, +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +	public void sensitiveEndpointsAreSecureWithNonActuatorRoleWithCustomContextPath(), +	public void sensitiveEndpointsAreSecureWithActuatorRoleWithCustomContextPath(), +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				"auth.spring.roles", "ACTUATOR",, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +		private List<String> roles = Arrays.asList("ACTUATOR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +		private String[] roles = new String[] { "ACTUATOR" };, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/HealthMvcEndpoint.java, +							this.roleResolver.getProperty("roles", "ROLE_ACTUATOR"))));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfigurationTests.java, +										.singleton(new SimpleGrantedAuthority("ACTUATOR")));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java, +				.commaSeparatedStringToAuthorityList("ROLE_USER,ROLE_ACTUATOR"));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/MvcEndpointIntegrationTests.java, +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +	public void sensitiveEndpointsAreSecureWithNonActuatorRoleWithCustomContextPath(), +	public void sensitiveEndpointsAreSecureWithActuatorRoleWithCustomContextPath(), +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +				new TestingAuthenticationToken("user", "N/A", "ROLE_ACTUATOR"));, +++ b/spring-boot-samples/spring-boot-sample-web-method-security/src/main/java/sample/security/method/SampleMethodSecurityApplication.java, +					.roles("ADMIN", "USER", "ACTUATOR").and().withUser("user").password("user")]