[+++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +			<groupId>com.google.guava</groupId>, +			<artifactId>guava</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +			<groupId>com.google.guava</groupId>, +			<artifactId>guava</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfiguration.java, +import org.springframework.boot.actuate.cache.GuavaCacheStatisticsProvider;, +import org.springframework.cache.guava.GuavaCache;, +	@ConditionalOnClass({ com.google.common.cache.Cache.class, GuavaCache.class }), +	static class GuavaCacheStatisticsConfiguration {, +, +		@Bean, +		public GuavaCacheStatisticsProvider guavaCacheStatisticsProvider() {, +			return new GuavaCacheStatisticsProvider();, +		}, +, +	}, +, +	@Configuration, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +			<groupId>com.google.guava</groupId>, +			<artifactId>guava</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfiguration.java, +import org.springframework.boot.actuate.cache.GuavaCacheStatisticsProvider;, +import org.springframework.cache.guava.GuavaCache;, +	@ConditionalOnClass({ com.google.common.cache.Cache.class, GuavaCache.class }), +	static class GuavaCacheStatisticsConfiguration {, +, +		@Bean, +		public GuavaCacheStatisticsProvider guavaCacheStatisticsProvider() {, +			return new GuavaCacheStatisticsProvider();, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cache/GuavaCacheStatisticsProvider.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.cache;, +, +import com.google.common.cache.CacheStats;, +, +import org.springframework.cache.CacheManager;, +import org.springframework.cache.guava.GuavaCache;, +, +/**, + * {@link CacheStatisticsProvider} implementation for Guava., + *, + * @author Stephane Nicoll, + * @since 1.3.0, + * @deprecated as of 1.5 following the removal of Guava support in Spring Framework 5, + */, +@Deprecated, +public class GuavaCacheStatisticsProvider implements CacheStatisticsProvider<GuavaCache> {]