[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebFluxEndpointCorsIntegrationTests.java, +import java.util.function.Consumer;, +, +import org.springframework.boot.autoconfigure.AutoConfigurations;, +import org.springframework.boot.test.context.runner.ContextConsumer;, +import org.springframework.boot.test.context.runner.ReactiveWebApplicationContextRunner;, +import org.springframework.boot.web.reactive.context.ReactiveWebApplicationContext;, + * @author Stephane Nicoll, +	private ReactiveWebApplicationContextRunner contextRunner = new ReactiveWebApplicationContextRunner(), +			.withConfiguration(AutoConfigurations.of(JacksonAutoConfiguration.class,, +					BeansEndpointAutoConfiguration.class)), +			.withPropertyValues("management.endpoints.web.exposure.include:*");, +		this.contextRunner.run(withWebTestClient((webTestClient) -> webTestClient, +				.options().uri("/actuator/beans").header("Origin", "spring.example.org"), +				.expectHeader().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN)));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org"), +				.run(withWebTestClient((webTestClient) -> {, +					webTestClient.options().uri("/actuator/beans"), +							.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET"), +							.exchange().expectStatus().isForbidden();, +					performAcceptedCorsRequest(webTestClient, "/actuator/beans");, +				}));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org"), +				.run(withWebTestClient(, +						(webTestClient) -> performAcceptedCorsRequest(webTestClient,, +								"/actuator/beans").expectHeader().valueEquals(, +										HttpHeaders.ACCESS_CONTROL_MAX_AGE, "1800")));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org",, +				.run(withWebTestClient(, +						(webTestClient) -> performAcceptedCorsRequest(webTestClient,, +								"/actuator/beans").expectHeader().valueEquals(, +										HttpHeaders.ACCESS_CONTROL_MAX_AGE, "2400")));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org"), +				.run(withWebTestClient((webTestClient) -> webTestClient.options(), +						.uri("/actuator/beans").header("Origin", "spring.example.org"), +						.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, "Alpha"), +						.exchange().expectStatus().isForbidden()));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org",, +				.run(withWebTestClient((webTestClient) -> webTestClient.options(), +						.uri("/actuator/beans").header("Origin", "spring.example.org"), +						.header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, "Alpha"), +						.exchange().expectStatus().isOk().expectHeader(), +						.valueEquals(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, "Alpha")));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org"), +				.run(withWebTestClient((webTestClient) -> webTestClient.options(), +						.uri("/actuator/beans").header("Origin", "spring.example.org"), +						.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "PATCH"), +						.exchange().expectStatus().isForbidden()));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org",, +				.run(withWebTestClient((webTestClient) -> webTestClient.options(), +						.uri("/actuator/beans").header("Origin", "spring.example.org"), +						.header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "HEAD"), +						.exchange().expectStatus().isOk().expectHeader().valueEquals(, +								HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, "GET,HEAD")));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org",, +				.run(withWebTestClient(, +						(webTestClient) -> performAcceptedCorsRequest(webTestClient,, +								"/actuator/beans").expectHeader().valueEquals(, +										HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS,, +										"true")));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org",, +				.run(withWebTestClient(, +						(webTestClient) -> performAcceptedCorsRequest(webTestClient,, +								"/actuator/beans").expectHeader().doesNotExist(, +										HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS)));, +	private ContextConsumer<ReactiveWebApplicationContext> withWebTestClient(, +			Consumer<WebTestClient> webTestClient) {, +		return (context) -> webTestClient, +				.accept(WebTestClient.bindToApplicationContext(context).configureClient(), +						.baseUrl("https://spring.example.org").build());, +	private WebTestClient.ResponseSpec performAcceptedCorsRequest(, +			WebTestClient webTestClient, String url) {, +		return webTestClient.options().uri(url), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/integrationtest/WebFluxEndpointCorsIntegrationTests.java, +import java.util.function.Consumer;, +, +import org.springframework.boot.autoconfigure.AutoConfigurations;, +import org.springframework.boot.test.context.runner.ContextConsumer;, +import org.springframework.boot.test.context.runner.ReactiveWebApplicationContextRunner;, +import org.springframework.boot.web.reactive.context.ReactiveWebApplicationContext;, + * @author Stephane Nicoll, +	private ReactiveWebApplicationContextRunner contextRunner = new ReactiveWebApplicationContextRunner(), +			.withConfiguration(AutoConfigurations.of(JacksonAutoConfiguration.class,, +					BeansEndpointAutoConfiguration.class)), +			.withPropertyValues("management.endpoints.web.exposure.include:*");, +		this.contextRunner.run(withWebTestClient((webTestClient) -> webTestClient, +				.options().uri("/actuator/beans").header("Origin", "spring.example.org"), +				.expectHeader().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN)));, +		this.contextRunner.withPropertyValues(, +				"management.endpoints.web.cors.allowed-origins:spring.example.org"), +				.run(withWebTestClient((webTestClient) -> {]