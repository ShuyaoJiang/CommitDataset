[+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.CassandraContainer;, +	public static CassandraContainer cassandra = new CassandraContainer();, +		TestPropertyValues.of("spring.data.cassandra.port=" + cassandra.getMappedPort()), +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.CassandraContainer;, +	public static CassandraContainer cassandra = new CassandraContainer();, +		TestPropertyValues.of("spring.data.cassandra.port=" + cassandra.getMappedPort()), +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.springframework.boot.testsupport.testcontainers.RedisContainer;, +	public static RedisContainer redis = new RedisContainer();, +		TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.CassandraContainer;, +	public static CassandraContainer cassandra = new CassandraContainer();, +		TestPropertyValues.of("spring.data.cassandra.port=" + cassandra.getMappedPort()), +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.springframework.boot.testsupport.testcontainers.RedisContainer;, +	public static RedisContainer redis = new RedisContainer();, +		TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationRedisTests.java, +	public static DockerTestContainer redis = new DockerTestContainer(, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.CassandraContainer;, +	public static CassandraContainer cassandra = new CassandraContainer();, +		TestPropertyValues.of("spring.data.cassandra.port=" + cassandra.getMappedPort()), +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.springframework.boot.testsupport.testcontainers.RedisContainer;, +	public static RedisContainer redis = new RedisContainer();, +		TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationRedisTests.java, +	public static DockerTestContainer redis = new DockerTestContainer(, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.Neo4jContainer;, +	public static Neo4jContainer neo4j = new Neo4jContainer();, +					.of("spring.data.neo4j.uri=bolt://localhost:" + neo4j.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.CassandraContainer;, +	public static CassandraContainer cassandra = new CassandraContainer();, +		TestPropertyValues.of("spring.data.cassandra.port=" + cassandra.getMappedPort()), +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.springframework.boot.testsupport.testcontainers.RedisContainer;, +	public static RedisContainer redis = new RedisContainer();, +		TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationRedisTests.java, +	public static DockerTestContainer redis = new DockerTestContainer(, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.Neo4jContainer;, +	public static Neo4jContainer neo4j = new Neo4jContainer();, +					.of("spring.data.neo4j.uri=bolt://localhost:" + neo4j.getMappedPort()), +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestWithIncludeFilterIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.Neo4jContainer;, +	public static Neo4jContainer neo4j = new Neo4jContainer();, +					.of("spring.data.neo4j.uri=bolt://localhost:" + neo4j.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.CassandraContainer;, +	public static CassandraContainer cassandra = new CassandraContainer();, +		TestPropertyValues.of("spring.data.cassandra.port=" + cassandra.getMappedPort()), +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.springframework.boot.testsupport.testcontainers.RedisContainer;, +	public static RedisContainer redis = new RedisContainer();, +		TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationRedisTests.java, +	public static DockerTestContainer redis = new DockerTestContainer(, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.Neo4jContainer;, +	public static Neo4jContainer neo4j = new Neo4jContainer();, +					.of("spring.data.neo4j.uri=bolt://localhost:" + neo4j.getMappedPort()), +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestWithIncludeFilterIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.Neo4jContainer;, +	public static Neo4jContainer neo4j = new Neo4jContainer();, +					.of("spring.data.neo4j.uri=bolt://localhost:" + neo4j.getMappedPort()), +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/redis/DataRedisTestIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.RedisContainer;, +	public static RedisContainer redis = new RedisContainer();, +			TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.CassandraContainer;, +	public static CassandraContainer cassandra = new CassandraContainer();, +		TestPropertyValues.of("spring.data.cassandra.port=" + cassandra.getMappedPort()), +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.springframework.boot.testsupport.testcontainers.RedisContainer;, +	public static RedisContainer redis = new RedisContainer();, +		TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationRedisTests.java, +	public static DockerTestContainer redis = new DockerTestContainer(, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.Neo4jContainer;, +	public static Neo4jContainer neo4j = new Neo4jContainer();, +					.of("spring.data.neo4j.uri=bolt://localhost:" + neo4j.getMappedPort()), +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestWithIncludeFilterIntegrationTests.java, +import org.springframework.boot.testsupport.testcontainers.Neo4jContainer;, +	public static Neo4jContainer neo4j = new Neo4jContainer();]