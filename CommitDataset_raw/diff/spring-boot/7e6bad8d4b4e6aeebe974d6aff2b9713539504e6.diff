[+++ b/.settings-template.xml, +++ b/.settings-template.xml, +++ b/.travis.yml, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P snapshot, +++ b/.settings-template.xml, +++ b/.travis.yml, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P snapshot, +++ b/CONTRIBUTING.adoc, +++ b/.settings-template.xml, +++ b/.travis.yml, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P snapshot, +++ b/CONTRIBUTING.adoc, +++ b/pom.xml, +	<version>1.1.6.BUILD-SNAPSHOT</version>, +				<module>spring-boot-parent</module>, +				<module>spring-boot-dependencies</module>, +			<id>full</id>, +++ b/.settings-template.xml, +++ b/.travis.yml, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P snapshot, +++ b/CONTRIBUTING.adoc, +++ b/pom.xml, +	<version>1.1.6.BUILD-SNAPSHOT</version>, +				<module>spring-boot-parent</module>, +				<module>spring-boot-dependencies</module>, +			<id>full</id>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.6.BUILD-SNAPSHOT</version>, +++ b/.settings-template.xml, +++ b/.travis.yml, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P snapshot, +++ b/CONTRIBUTING.adoc, +++ b/pom.xml, +	<version>1.1.6.BUILD-SNAPSHOT</version>, +				<module>spring-boot-parent</module>, +				<module>spring-boot-dependencies</module>, +			<id>full</id>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.6.BUILD-SNAPSHOT</version>, +++ /dev/null, +++ b/.settings-template.xml, +++ b/.travis.yml, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P snapshot, +++ b/CONTRIBUTING.adoc, +++ b/pom.xml, +	<version>1.1.6.BUILD-SNAPSHOT</version>, +				<module>spring-boot-parent</module>, +				<module>spring-boot-dependencies</module>, +			<id>full</id>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.6.BUILD-SNAPSHOT</version>, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.VanillaPublicMetrics;, +	private MetricReader metricRepository = new InMemoryMetricRepository();, +	private PublicMetrics metrics;, +		if (this.metrics == null) {, +			this.metrics = new VanillaPublicMetrics(this.metricRepository);, +		return new MetricsEndpoint(this.metrics);, +	@Bean, +	@ConditionalOnMissingBean, +	public ConfigurationPropertiesReportEndpoint configurationPropertiesReportEndpoint() {, +		ConfigurationPropertiesReportEndpoint endpoint = new ConfigurationPropertiesReportEndpoint();, +		endpoint.setConfigurationBeanFactoryMetaData(this.beanFactoryMetaData);, +		return endpoint;, +	}, +, +++ b/.settings-template.xml, +++ b/.travis.yml, +install: mvn install -q -U -DskipTests=true -Dmaven.test.redirectTestOutputToFile=true -P snapshot, +++ b/CONTRIBUTING.adoc, +++ b/pom.xml, +	<version>1.1.6.BUILD-SNAPSHOT</version>, +				<module>spring-boot-parent</module>, +				<module>spring-boot-dependencies</module>, +			<id>full</id>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.1.6.BUILD-SNAPSHOT</version>, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.VanillaPublicMetrics;, +	private MetricReader metricRepository = new InMemoryMetricRepository();, +	private PublicMetrics metrics;, +		if (this.metrics == null) {, +			this.metrics = new VanillaPublicMetrics(this.metricRepository);, +		return new MetricsEndpoint(this.metrics);, +	@Bean, +	@ConditionalOnMissingBean, +	public ConfigurationPropertiesReportEndpoint configurationPropertiesReportEndpoint() {, +		ConfigurationPropertiesReportEndpoint endpoint = new ConfigurationPropertiesReportEndpoint();, +		endpoint.setConfigurationBeanFactoryMetaData(this.beanFactoryMetaData);, +		return endpoint;, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, +import org.springframework.boot.actuate.health.VanillaHealthIndicator;, +	public HealthIndicator statusHealthIndicator() {, +		return new VanillaHealthIndicator();, +				return new DataSourceHealthIndicator(this.dataSources.values().iterator(), +						.next());]