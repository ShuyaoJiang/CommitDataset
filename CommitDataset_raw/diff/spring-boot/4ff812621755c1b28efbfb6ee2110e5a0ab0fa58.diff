[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +class ConfigurationPropertiesBinder {, +			String message = "Could not bind properties to '", +					+ ClassUtils.getShortName(target.getClass()) + "': ", +					+ getAnnotationDetails(annotation);, +			throw new ConfigurationPropertiesBindingException(message, ex);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +class ConfigurationPropertiesBinder {, +			String message = "Could not bind properties to '", +					+ ClassUtils.getShortName(target.getClass()) + "': ", +					+ getAnnotationDetails(annotation);, +			throw new ConfigurationPropertiesBindingException(message, ex);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinderBuilder.java, +class ConfigurationPropertiesBinderBuilder {, +	private static final String VALIDATOR_BEAN_NAME = ConfigurationPropertiesBindingPostProcessor.VALIDATOR_BEAN_NAME;, +	private  static final String CONVERSION_SERVICE_BEAN_NAME = ConfigurableApplicationContext.CONVERSION_SERVICE_BEAN_NAME;, +	ConfigurationPropertiesBinderBuilder(ApplicationContext applicationContext) {, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +class ConfigurationPropertiesBinder {, +			String message = "Could not bind properties to '", +					+ ClassUtils.getShortName(target.getClass()) + "': ", +					+ getAnnotationDetails(annotation);, +			throw new ConfigurationPropertiesBindingException(message, ex);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinderBuilder.java, +class ConfigurationPropertiesBinderBuilder {, +	private static final String VALIDATOR_BEAN_NAME = ConfigurationPropertiesBindingPostProcessor.VALIDATOR_BEAN_NAME;, +	private  static final String CONVERSION_SERVICE_BEAN_NAME = ConfigurableApplicationContext.CONVERSION_SERVICE_BEAN_NAME;, +	ConfigurationPropertiesBinderBuilder(ApplicationContext applicationContext) {, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingException.java, +class ConfigurationPropertiesBindingException extends RuntimeException {, +	ConfigurationPropertiesBindingException(String message,, +		super(message, cause);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +class ConfigurationPropertiesBinder {, +			String message = "Could not bind properties to '", +					+ ClassUtils.getShortName(target.getClass()) + "': ", +					+ getAnnotationDetails(annotation);, +			throw new ConfigurationPropertiesBindingException(message, ex);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinderBuilder.java, +class ConfigurationPropertiesBinderBuilder {, +	private static final String VALIDATOR_BEAN_NAME = ConfigurationPropertiesBindingPostProcessor.VALIDATOR_BEAN_NAME;, +	private  static final String CONVERSION_SERVICE_BEAN_NAME = ConfigurableApplicationContext.CONVERSION_SERVICE_BEAN_NAME;, +	ConfigurationPropertiesBinderBuilder(ApplicationContext applicationContext) {, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingException.java, +class ConfigurationPropertiesBindingException extends RuntimeException {, +	ConfigurationPropertiesBindingException(String message,, +		super(message, cause);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +	/**, +	 * The bean name of the configuration properties validator., +	 */, +	public static final String VALIDATOR_BEAN_NAME = "configurationPropertiesValidator";, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +class ConfigurationPropertiesBinder {, +			String message = "Could not bind properties to '", +					+ ClassUtils.getShortName(target.getClass()) + "': ", +					+ getAnnotationDetails(annotation);, +			throw new ConfigurationPropertiesBindingException(message, ex);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinderBuilder.java, +class ConfigurationPropertiesBinderBuilder {, +	private static final String VALIDATOR_BEAN_NAME = ConfigurationPropertiesBindingPostProcessor.VALIDATOR_BEAN_NAME;, +	private  static final String CONVERSION_SERVICE_BEAN_NAME = ConfigurableApplicationContext.CONVERSION_SERVICE_BEAN_NAME;, +	ConfigurationPropertiesBinderBuilder(ApplicationContext applicationContext) {, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingException.java, +class ConfigurationPropertiesBindingException extends RuntimeException {, +	ConfigurationPropertiesBindingException(String message,, +		super(message, cause);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +	/**, +	 * The bean name of the configuration properties validator., +	 */, +	public static final String VALIDATOR_BEAN_NAME = "configurationPropertiesValidator";, +, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinderBuilderTests.java, +import org.springframework.core.annotation.AnnotationUtils;, +		bind(binder, target);, +		bind(binder, target);, +		bind(binder, target);, +			bind(binder, target);, +	private void bind(ConfigurationPropertiesBinder binder, Object target) {, +		binder.bind(target, AnnotationUtils, +				.findAnnotation(target.getClass(), ConfigurationProperties.class));, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java, +class ConfigurationPropertiesBinder {, +			String message = "Could not bind properties to '", +					+ ClassUtils.getShortName(target.getClass()) + "': ", +					+ getAnnotationDetails(annotation);, +			throw new ConfigurationPropertiesBindingException(message, ex);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinderBuilder.java, +class ConfigurationPropertiesBinderBuilder {, +	private static final String VALIDATOR_BEAN_NAME = ConfigurationPropertiesBindingPostProcessor.VALIDATOR_BEAN_NAME;, +	private  static final String CONVERSION_SERVICE_BEAN_NAME = ConfigurableApplicationContext.CONVERSION_SERVICE_BEAN_NAME;, +	ConfigurationPropertiesBinderBuilder(ApplicationContext applicationContext) {, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingException.java, +class ConfigurationPropertiesBindingException extends RuntimeException {, +	ConfigurationPropertiesBindingException(String message,, +		super(message, cause);]