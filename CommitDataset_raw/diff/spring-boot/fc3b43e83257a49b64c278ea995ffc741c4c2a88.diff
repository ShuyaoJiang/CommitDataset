[+++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestIntegrationTests.java, +import java.util.concurrent.Callable;, +import java.util.concurrent.TimeUnit;, +import org.neo4j.ogm.config.Configuration;, +import org.neo4j.ogm.session.SessionFactory;, +import org.rnorth.ducttape.TimeoutException;, +import org.rnorth.ducttape.unreliables.Unreliables;, +			.waitingFor(new ConnectionVerifyingWaitStrategy()).withEnv("NEO4J_AUTH", "none"));, +	static class ConnectionVerifyingWaitStrategy extends HostPortWaitStrategy {, +			Configuration configuration = new Configuration.Builder(), +					.uri("bolt://localhost:7687").build();, +			SessionFactory sessionFactory = new SessionFactory(configuration,, +					"org.springframework.boot.test.autoconfigure.data.neo4j");, +				Unreliables.retryUntilTrue((int) startupTimeout.getSeconds(), TimeUnit.SECONDS,, +						checkConnection(sessionFactory));, +			catch (TimeoutException e) {, +				throw new IllegalStateException();, +, +		private Callable<Boolean> checkConnection(SessionFactory sessionFactory) {, +			return () -> {, +				try {, +					sessionFactory.openSession().beginTransaction().close();, +					return true;, +				}, +				catch (Exception ex) {, +					return false;, +				}, +			};, +		}, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestIntegrationTests.java, +import java.util.concurrent.Callable;, +import java.util.concurrent.TimeUnit;, +import org.neo4j.ogm.config.Configuration;, +import org.neo4j.ogm.session.SessionFactory;, +import org.rnorth.ducttape.TimeoutException;, +import org.rnorth.ducttape.unreliables.Unreliables;, +			.waitingFor(new ConnectionVerifyingWaitStrategy()).withEnv("NEO4J_AUTH", "none"));, +	static class ConnectionVerifyingWaitStrategy extends HostPortWaitStrategy {, +			Configuration configuration = new Configuration.Builder(), +					.uri("bolt://localhost:7687").build();, +			SessionFactory sessionFactory = new SessionFactory(configuration,, +					"org.springframework.boot.test.autoconfigure.data.neo4j");, +				Unreliables.retryUntilTrue((int) startupTimeout.getSeconds(), TimeUnit.SECONDS,, +						checkConnection(sessionFactory));, +			catch (TimeoutException e) {, +				throw new IllegalStateException();, +, +		private Callable<Boolean> checkConnection(SessionFactory sessionFactory) {, +			return () -> {, +				try {, +					sessionFactory.openSession().beginTransaction().close();, +					return true;, +				}, +				catch (Exception ex) {, +					return false;, +				}, +			};, +		}, +++ b/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/data/neo4j/DataNeo4jTestWithIncludeFilterIntegrationTests.java, +			.waitingFor(new DataNeo4jTestIntegrationTests.ConnectionVerifyingWaitStrategy()).withEnv("NEO4J_AUTH", "none"));]