[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +			registration.setLoadOnStartup(, +					this.webMvcProperties.getServlet().getLoadOnStartup());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +			registration.setLoadOnStartup(, +					this.webMvcProperties.getServlet().getLoadOnStartup());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	private final Servlet servlet = new Servlet();, +, +	public Servlet getServlet() {, +		return this.servlet;, +	}, +, +	public static class Servlet {, +, +		/**, +		 * Load on startup priority of the dispatcher servlet., +		 */, +		private int loadOnStartup = -1;, +, +		public int getLoadOnStartup() {, +			return this.loadOnStartup;, +		}, +, +		public void setLoadOnStartup(int loadOnStartup) {, +			this.loadOnStartup = loadOnStartup;, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +			registration.setLoadOnStartup(, +					this.webMvcProperties.getServlet().getLoadOnStartup());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	private final Servlet servlet = new Servlet();, +, +	public Servlet getServlet() {, +		return this.servlet;, +	}, +, +	public static class Servlet {, +, +		/**, +		 * Load on startup priority of the dispatcher servlet., +		 */, +		private int loadOnStartup = -1;, +, +		public int getLoadOnStartup() {, +			return this.loadOnStartup;, +		}, +, +		public void setLoadOnStartup(int loadOnStartup) {, +			this.loadOnStartup = loadOnStartup;, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfigurationTests.java, +import org.springframework.beans.DirectFieldAccessor;, +				"spring.mvc.throw-exception-if-no-handler-found:true",, +				"spring.mvc.dispatch-options-request:true",, +				"spring.mvc.dispatch-trace-request:true",, +				"spring.mvc.servlet.load-on-startup=5");, +		assertThat(, +				new DirectFieldAccessor(this.context.getBean("dispatcherServletRegistration")), +						.getPropertyValue("loadOnStartup")).isEqualTo(5);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfiguration.java, +			registration.setLoadOnStartup(, +					this.webMvcProperties.getServlet().getLoadOnStartup());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	private final Servlet servlet = new Servlet();, +, +	public Servlet getServlet() {, +		return this.servlet;, +	}, +, +	public static class Servlet {, +, +		/**, +		 * Load on startup priority of the dispatcher servlet., +		 */, +		private int loadOnStartup = -1;, +, +		public int getLoadOnStartup() {, +			return this.loadOnStartup;, +		}, +, +		public void setLoadOnStartup(int loadOnStartup) {, +			this.loadOnStartup = loadOnStartup;, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/DispatcherServletAutoConfigurationTests.java, +import org.springframework.beans.DirectFieldAccessor;, +				"spring.mvc.throw-exception-if-no-handler-found:true",, +				"spring.mvc.dispatch-options-request:true",, +				"spring.mvc.dispatch-trace-request:true",, +				"spring.mvc.servlet.load-on-startup=5");, +		assertThat(]