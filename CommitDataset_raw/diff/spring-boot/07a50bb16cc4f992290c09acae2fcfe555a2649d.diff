[+++ b/spring-boot-samples/spring-boot-sample-actuator-log4j2/src/test/java/sample/actuator/log4j2/SampleActuatorLog4J2ApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/", Map.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j2/src/test/java/sample/actuator/log4j2/SampleActuatorLog4J2ApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/", Map.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<String> entity = this.restTemplate.exchange("/", HttpMethod.GET,, +		ResponseEntity<String> entity = this.restTemplate, +				.getForEntity("/css/bootstrap.min.css", String.class);, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/metrics",, +				Map.class);, +		ResponseEntity<String> entity = this.restTemplate.exchange("/error",, +				HttpMethod.GET, new HttpEntity<Void>(headers), String.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j2/src/test/java/sample/actuator/log4j2/SampleActuatorLog4J2ApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/", Map.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<String> entity = this.restTemplate.exchange("/", HttpMethod.GET,, +		ResponseEntity<String> entity = this.restTemplate, +				.getForEntity("/css/bootstrap.min.css", String.class);, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/metrics",, +				Map.class);, +		ResponseEntity<String> entity = this.restTemplate.exchange("/error",, +				HttpMethod.GET, new HttpEntity<Void>(headers), String.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate, +				.withBasicAuth("user", getPassword()).getForEntity("/oops", Map.class);, +		ResponseEntity<String> entity = this.restTemplate, +				.withBasicAuth("user", getPassword()), +				.getForEntity("/admin/health", String.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j2/src/test/java/sample/actuator/log4j2/SampleActuatorLog4J2ApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/", Map.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<String> entity = this.restTemplate.exchange("/", HttpMethod.GET,, +		ResponseEntity<String> entity = this.restTemplate, +				.getForEntity("/css/bootstrap.min.css", String.class);, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/metrics",, +				Map.class);, +		ResponseEntity<String> entity = this.restTemplate.exchange("/error",, +				HttpMethod.GET, new HttpEntity<Void>(headers), String.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate, +				.withBasicAuth("user", getPassword()).getForEntity("/oops", Map.class);, +		ResponseEntity<String> entity = this.restTemplate, +				.withBasicAuth("user", getPassword()), +				.getForEntity("/admin/health", String.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/InsecureManagementSampleActuatorApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/", Map.class);, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/metrics",, +				Map.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j2/src/test/java/sample/actuator/log4j2/SampleActuatorLog4J2ApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/", Map.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<String> entity = this.restTemplate.exchange("/", HttpMethod.GET,, +		ResponseEntity<String> entity = this.restTemplate, +				.getForEntity("/css/bootstrap.min.css", String.class);, +		ResponseEntity<Map> entity = this.restTemplate.getForEntity("/metrics",, +				Map.class);, +		ResponseEntity<String> entity = this.restTemplate.exchange("/error",, +				HttpMethod.GET, new HttpEntity<Void>(headers), String.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +	@Autowired, +	private TestRestTemplate restTemplate;, +		ResponseEntity<Map> entity = this.restTemplate, +				.withBasicAuth("user", getPassword()).getForEntity("/oops", Map.class);, +		ResponseEntity<String> entity = this.restTemplate, +				.withBasicAuth("user", getPassword()), +				.getForEntity("/admin/health", String.class);]