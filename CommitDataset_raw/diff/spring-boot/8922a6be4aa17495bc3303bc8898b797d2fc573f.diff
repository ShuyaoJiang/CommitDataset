[+++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertySourcesPropertyValues.java, +						Object value = source.getProperty(propertyName);, +						try {, +							value = resolver.getProperty(propertyName);, +						}, +						catch (RuntimeException e) {, +							// Probably could not resolve placeholders, ignore it here, +						}, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertySourcesPropertyValues.java, +						Object value = source.getProperty(propertyName);, +						try {, +							value = resolver.getProperty(propertyName);, +						}, +						catch (RuntimeException e) {, +							// Probably could not resolve placeholders, ignore it here, +						}, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/PropertySourcesPropertyValuesTests.java, +	@Test, +	public void testPlaceholdersBindingWithError() {, +		TestBean target = new TestBean();, +		DataBinder binder = new DataBinder(target);, +		this.propertySources.addFirst(new MapPropertySource("another", Collections, +				.<String, Object> singletonMap("something", "${nonexistent}")));, +		binder.bind(new PropertySourcesPropertyValues(this.propertySources));, +		assertEquals("bar", target.getName());, +	}, +]