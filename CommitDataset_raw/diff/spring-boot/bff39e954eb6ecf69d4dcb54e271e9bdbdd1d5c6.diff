[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		private String portHeader;, +, +		public String getPortHeader() {, +			return this.portHeader;, +		}, +, +		public void setPortHeader(String portHeader) {, +			this.portHeader = portHeader;, +		}, +, +				valve.setPortHeader(getPortHeader());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		private String portHeader;, +, +		public String getPortHeader() {, +			return this.portHeader;, +		}, +, +		public void setPortHeader(String portHeader) {, +			this.portHeader = portHeader;, +		}, +, +				valve.setPortHeader(getPortHeader());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +		map.put("server.tomcat.port-header", "x-my-forward-port");, +		assertEquals("x-my-forward-port", remoteIpValve.getPortHeader());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		private String portHeader;, +, +		public String getPortHeader() {, +			return this.portHeader;, +		}, +, +		public void setPortHeader(String portHeader) {, +			this.portHeader = portHeader;, +		}, +, +				valve.setPortHeader(getPortHeader());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +		map.put("server.tomcat.port-header", "x-my-forward-port");, +		assertEquals("x-my-forward-port", remoteIpValve.getPortHeader());, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header, +	server.tomcat.port-header= # front end proxy port header]