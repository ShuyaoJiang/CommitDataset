[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration.java, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +==== Cross Site Request Forgery Protection, +Since Spring Boot relies on Spring Security's defaults, CSRF protection is turned on by default., +This means that the actuator endpoints that require a `POST` (shutdown and loggers endpoints), `PUT`, +or `DELETE` will get a 403 forbidden error when the default security configuration is in use., +, +NOTE: We recommend disabling CSRF protection completely only if you are creating a service that, +is used by non-browser clients., +, +Additional information about CSRF protection can be found in the {spring-security-reference}#csrf[Spring, +Security Reference Guide]., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration.java, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +==== Cross Site Request Forgery Protection, +Since Spring Boot relies on Spring Security's defaults, CSRF protection is turned on by default., +This means that the actuator endpoints that require a `POST` (shutdown and loggers endpoints), `PUT`, +or `DELETE` will get a 403 forbidden error when the default security configuration is in use., +, +NOTE: We recommend disabling CSRF protection completely only if you are creating a service that, +is used by non-browser clients., +, +Additional information about CSRF protection can be found in the {spring-security-reference}#csrf[Spring, +Security Reference Guide]., +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/ShutdownSampleActuatorApplicationTests.java, +import org.springframework.context.annotation.Configuration;, +import org.springframework.security.config.annotation.web.builders.HttpSecurity;, +import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;, +@SpringBootTest(classes = { ShutdownSampleActuatorApplicationTests.SecurityConfiguration.class,, +		SampleActuatorApplication.class },, +		webEnvironment = WebEnvironment.RANDOM_PORT), +	@Configuration, +	static class SecurityConfiguration extends WebSecurityConfigurerAdapter {, +, +		@Override, +		protected void configure(HttpSecurity http) throws Exception {, +			http.csrf().disable();, +		}, +, +	}, +]