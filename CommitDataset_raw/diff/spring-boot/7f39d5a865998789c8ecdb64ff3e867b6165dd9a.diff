[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/statsd/StatsdMetricWriter.java, +		Assert.notNull(client, "Client must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/statsd/StatsdMetricWriter.java, +		Assert.notNull(client, "Client must not be null");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBeanTests.java, +			Assert.state(!value.contains("$"), "value should not contain '$'");, +			Assert.state(!value.contains("$"), "value should not contain '$'");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/statsd/StatsdMetricWriter.java, +		Assert.notNull(client, "Client must not be null");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBeanTests.java, +			Assert.state(!value.contains("$"), "value should not contain '$'");, +			Assert.state(!value.contains("$"), "value should not contain '$'");, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +		Assert.notNull(target, "Target object must not be null");, +		Assert.notNull(type, "Target type must not be null");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/statsd/StatsdMetricWriter.java, +		Assert.notNull(client, "Client must not be null");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBeanTests.java, +			Assert.state(!value.contains("$"), "value should not contain '$'");, +			Assert.state(!value.contains("$"), "value should not contain '$'");, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +		Assert.notNull(target, "Target object must not be null");, +		Assert.notNull(type, "Target type must not be null");, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/YamlConfigurationFactory.java, +		Assert.notNull(type, "Root type must not be null");]