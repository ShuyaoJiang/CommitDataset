[+++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +				if (!environmentHasActiveProfile(profile.getName())) {, +		private boolean environmentHasActiveProfile(String profile) {, +			for (String activeProfile : this.environment.getActiveProfiles()) {, +				if (activeProfile.equals(profile)) {, +					return true;, +				}, +			}, +			return false;, +		}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +				if (!environmentHasActiveProfile(profile.getName())) {, +		private boolean environmentHasActiveProfile(String profile) {, +			for (String activeProfile : this.environment.getActiveProfiles()) {, +				if (activeProfile.equals(profile)) {, +					return true;, +				}, +			}, +			return false;, +		}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +		assertThat(environment.containsProperty("customprofile-customdefault")).isTrue();, +		assertThat(this.context.getEnvironment().acceptsProfiles("customdefault")), +				.isTrue();, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +				if (!environmentHasActiveProfile(profile.getName())) {, +		private boolean environmentHasActiveProfile(String profile) {, +			for (String activeProfile : this.environment.getActiveProfiles()) {, +				if (activeProfile.equals(profile)) {, +					return true;, +				}, +			}, +			return false;, +		}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +		assertThat(environment.containsProperty("customprofile-customdefault")).isTrue();, +		assertThat(this.context.getEnvironment().acceptsProfiles("customdefault")), +				.isTrue();, +++ b/spring-boot/src/test/resources/customprofile-customdefault.properties, +spring.profiles.include=specific, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +				if (!environmentHasActiveProfile(profile.getName())) {, +		private boolean environmentHasActiveProfile(String profile) {, +			for (String activeProfile : this.environment.getActiveProfiles()) {, +				if (activeProfile.equals(profile)) {, +					return true;, +				}, +			}, +			return false;, +		}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +		assertThat(environment.containsProperty("customprofile-customdefault")).isTrue();, +		assertThat(this.context.getEnvironment().acceptsProfiles("customdefault")), +				.isTrue();, +++ b/spring-boot/src/test/resources/customprofile-customdefault.properties, +spring.profiles.include=specific, +++ b/spring-boot/src/test/resources/customprofile.properties, +spring.profiles.active=customdefault]