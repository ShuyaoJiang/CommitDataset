[+++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +			<groupId>com.google.guava</groupId>, +			<artifactId>guava</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +			<groupId>com.google.guava</groupId>, +			<artifactId>guava</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfiguration.java, +import org.springframework.boot.actuate.cache.GuavaCacheStatisticsProvider;, +import org.springframework.cache.guava.GuavaCache;, +	@ConditionalOnClass({ com.google.common.cache.Cache.class, GuavaCache.class }), +	static class GuavaCacheStatisticsConfiguration {, +, +		@Bean, +		public GuavaCacheStatisticsProvider guavaCacheStatisticsProvider() {, +			return new GuavaCacheStatisticsProvider();, +		}, +, +	}, +, +	@Configuration, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +			<groupId>com.google.guava</groupId>, +			<artifactId>guava</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfiguration.java, +import org.springframework.boot.actuate.cache.GuavaCacheStatisticsProvider;, +import org.springframework.cache.guava.GuavaCache;, +	@ConditionalOnClass({ com.google.common.cache.Cache.class, GuavaCache.class }), +	static class GuavaCacheStatisticsConfiguration {, +, +		@Bean, +		public GuavaCacheStatisticsProvider guavaCacheStatisticsProvider() {, +			return new GuavaCacheStatisticsProvider();, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +@Deprecated, +++ b/pom.xml, +	<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator-docs/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.5.0.BUILD-SNAPSHOT</version>, +			<groupId>com.google.guava</groupId>, +			<artifactId>guava</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfiguration.java, +import org.springframework.boot.actuate.cache.GuavaCacheStatisticsProvider;, +import org.springframework.cache.guava.GuavaCache;, +	@ConditionalOnClass({ com.google.common.cache.Cache.class, GuavaCache.class }), +	static class GuavaCacheStatisticsConfiguration {, +, +		@Bean, +		public GuavaCacheStatisticsProvider guavaCacheStatisticsProvider() {, +			return new GuavaCacheStatisticsProvider();, +		}, +, +	}, +, +	@Configuration, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +@Deprecated, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.writer.DefaultCounterService;, +import org.springframework.boot.actuate.metrics.writer.DefaultGaugeService;, +	@ConditionalOnJava(value = JavaVersion.EIGHT, range = Range.OLDER_THAN)]