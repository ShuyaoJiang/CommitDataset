[+++ b/spring-boot-developer-tools/src/main/java/org/springframework/boot/developertools/autoconfigure/DeveloperToolsProperties.java, +	private Livereload livereload = new Livereload();, +, +	public Livereload getLivereload() {, +		return this.livereload;, +	}, +, +	/**, +	 * LiveReload properties, +	 */, +	public static class Livereload {, +, +		/**, +		 * Enable a livereload.com compatible server., +		 */, +		private boolean enabled = true;, +, +		/**, +		 * Server port., +		 */, +		private int port = 35729;, +, +		public boolean isEnabled() {, +			return this.enabled;, +		}, +, +		public void setEnabled(boolean enabled) {, +			this.enabled = enabled;, +		}, +, +		public int getPort() {, +			return this.port;, +		}, +, +		public void setPort(int port) {, +			this.port = port;, +		}, +, +	}, +, +++ b/spring-boot-developer-tools/src/main/java/org/springframework/boot/developertools/autoconfigure/DeveloperToolsProperties.java, +	private Livereload livereload = new Livereload();, +, +	public Livereload getLivereload() {, +		return this.livereload;, +	}, +, +	/**, +	 * LiveReload properties, +	 */, +	public static class Livereload {, +, +		/**, +		 * Enable a livereload.com compatible server., +		 */, +		private boolean enabled = true;, +, +		/**, +		 * Server port., +		 */, +		private int port = 35729;, +, +		public boolean isEnabled() {, +			return this.enabled;, +		}, +, +		public void setEnabled(boolean enabled) {, +			this.enabled = enabled;, +		}, +, +		public int getPort() {, +			return this.port;, +		}, +, +		public void setPort(int port) {, +			this.port = port;, +		}, +, +	}, +, +++ b/spring-boot-developer-tools/src/main/java/org/springframework/boot/developertools/autoconfigure/LocalDeveloperToolsAutoConfiguration.java, +import org.springframework.boot.developertools.livereload.LiveReloadServer;, +import org.springframework.boot.developertools.restart.RestartScope;, +import org.springframework.context.event.ContextRefreshedEvent;, +	 * Local LiveReload configuration., +	 */, +	@ConditionalOnProperty(prefix = "spring.developertools.livereload", name = "enabled", matchIfMissing = true), +	static class LiveReloadConfiguration {, +, +		@Autowired, +		private DeveloperToolsProperties properties;, +, +		@Autowired(required = false), +		private LiveReloadServer liveReloadServer;, +, +		@Bean, +		@RestartScope, +		@ConditionalOnMissingBean, +		public LiveReloadServer liveReloadServer() {, +			return new LiveReloadServer(this.properties.getLivereload().getPort(),]