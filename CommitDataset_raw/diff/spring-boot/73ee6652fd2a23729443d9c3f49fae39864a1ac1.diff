[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/ProjectGenerationRequest.java, +			String resolvedArtifactId = resolveArtifactId();, +			if (resolvedArtifactId != null) {, +				builder.setParameter("artifactId", resolvedArtifactId);, +	/**, +	 * Resolve the artifactId to use or {@code null} if it should not be customized., +	 * @return the artifactId, +	 */, +	protected String resolveArtifactId() {, +		if (this.artifactId != null) {, +			return this.artifactId;, +		}, +		if (this.output != null) {, +			int i = this.output.lastIndexOf('.');, +			return (i == -1 ? this.output : this.output.substring(0, i));, +		}, +		return null;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/ProjectGenerationRequest.java, +			String resolvedArtifactId = resolveArtifactId();, +			if (resolvedArtifactId != null) {, +				builder.setParameter("artifactId", resolvedArtifactId);, +	/**, +	 * Resolve the artifactId to use or {@code null} if it should not be customized., +	 * @return the artifactId, +	 */, +	protected String resolveArtifactId() {, +		if (this.artifactId != null) {, +			return this.artifactId;, +		}, +		if (this.output != null) {, +			int i = this.output.lastIndexOf('.');, +			return (i == -1 ? this.output : this.output.substring(0, i));, +		}, +		return null;, +	}, +, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/ProjectGenerationRequestTests.java, +	public void outputCustomizeArtifactId() {, +		this.request.setOutput("my-project");, +		assertEquals(, +				createDefaultUrl("?artifactId=my-project&type=test-type"),, +				this.request.generateUrl(createDefaultMetadata()));, +	}, +, +	@Test, +	public void outputArchiveCustomizeArtifactId() {, +		this.request.setOutput("my-project.zip");, +		assertEquals(, +				createDefaultUrl("?artifactId=my-project&type=test-type"),, +				this.request.generateUrl(createDefaultMetadata()));, +	}, +, +	@Test, +	public void outputArchiveWithDotsCustomizeArtifactId() {, +		this.request.setOutput("my.nice.project.zip");, +		assertEquals(, +				createDefaultUrl("?artifactId=my.nice.project&type=test-type"),, +				this.request.generateUrl(createDefaultMetadata()));, +	}, +, +	@Test, +	public void outputDoesNotOverrideCustomArtifactId() {, +		this.request.setOutput("my-project");, +		this.request.setArtifactId("my-id");, +		assertEquals(, +				createDefaultUrl("?artifactId=my-id&type=test-type"),, +				this.request.generateUrl(createDefaultMetadata()));, +	}, +, +	@Test]