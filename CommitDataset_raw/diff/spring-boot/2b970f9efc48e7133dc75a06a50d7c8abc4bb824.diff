[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Whether requests to the context root should be redirected by appending a / to, +		 * the path., +		 */, +		private Boolean redirectContextRoot;, +, +		/**, +		public Boolean getRedirectContextRoot() {, +			return this.redirectContextRoot;, +		}, +, +		public void setRedirectContextRoot(Boolean redirectContextRoot) {, +			this.redirectContextRoot = redirectContextRoot;, +		}, +, +			if (this.redirectContextRoot != null) {, +				customizeRedirectContextRoot(factory, this.redirectContextRoot);, +			}, +		private void customizeRedirectContextRoot(, +				TomcatEmbeddedServletContainerFactory factory,, +				final boolean redirectContextRoot) {, +			factory.addContextCustomizers(new TomcatContextCustomizer() {, +, +				@Override, +				public void customize(Context context) {, +					context.setMapperContextRootRedirectEnabled(redirectContextRoot);, +				}, +, +			});, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Whether requests to the context root should be redirected by appending a / to, +		 * the path., +		 */, +		private Boolean redirectContextRoot;, +, +		/**, +		public Boolean getRedirectContextRoot() {, +			return this.redirectContextRoot;, +		}, +, +		public void setRedirectContextRoot(Boolean redirectContextRoot) {, +			this.redirectContextRoot = redirectContextRoot;, +		}, +, +			if (this.redirectContextRoot != null) {, +				customizeRedirectContextRoot(factory, this.redirectContextRoot);, +			}, +		private void customizeRedirectContextRoot(, +				TomcatEmbeddedServletContainerFactory factory,, +				final boolean redirectContextRoot) {, +			factory.addContextCustomizers(new TomcatContextCustomizer() {, +, +				@Override, +				public void customize(Context context) {, +					context.setMapperContextRootRedirectEnabled(redirectContextRoot);, +				}, +, +			});, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import org.apache.catalina.Context;, +import org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer;, +	public void redirectContextRootIsNotConfiguredByDefault() throws Exception {, +		bindProperties(new HashMap<String, String>());, +		ServerProperties.Tomcat tomcat = this.properties.getTomcat();, +		assertThat(tomcat.getRedirectContextRoot()).isNull();, +	}, +, +	@Test, +	public void redirectContextRootCanBeConfigured() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.tomcat.redirect-context-root", "false");, +		bindProperties(map);, +		ServerProperties.Tomcat tomcat = this.properties.getTomcat();, +		assertThat(tomcat.getRedirectContextRoot()).isEqualTo(false);, +		TomcatEmbeddedServletContainerFactory container = new TomcatEmbeddedServletContainerFactory();, +		this.properties.customize(container);, +		Context context = mock(Context.class);, +		for (TomcatContextCustomizer customizer : container, +				.getTomcatContextCustomizers()) {, +			customizer.customize(context);, +		}, +		verify(context).setMapperContextRootRedirectEnabled(false);, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Whether requests to the context root should be redirected by appending a / to, +		 * the path., +		 */, +		private Boolean redirectContextRoot;, +, +		/**, +		public Boolean getRedirectContextRoot() {, +			return this.redirectContextRoot;, +		}, +]