[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfiguration.java, +	private final JndiLocatorDelegate jndiLocatorDelegate;, +, +		this.jndiLocatorDelegate = JndiLocatorDelegate.createDefaultResourceRefLocator();, +			return this.jndiLocatorDelegate.lookup(this.properties.getJndiName(),, +				return this.jndiLocatorDelegate.lookup(name, ConnectionFactory.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfiguration.java, +	private final JndiLocatorDelegate jndiLocatorDelegate;, +, +		this.jndiLocatorDelegate = JndiLocatorDelegate.createDefaultResourceRefLocator();, +			return this.jndiLocatorDelegate.lookup(this.properties.getJndiName(),, +				return this.jndiLocatorDelegate.lookup(name, ConnectionFactory.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailSenderJndiConfiguration.java, +			return JndiLocatorDelegate.createDefaultResourceRefLocator().lookup(jndiName,, +					Session.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfiguration.java, +	private final JndiLocatorDelegate jndiLocatorDelegate;, +, +		this.jndiLocatorDelegate = JndiLocatorDelegate.createDefaultResourceRefLocator();, +			return this.jndiLocatorDelegate.lookup(this.properties.getJndiName(),, +				return this.jndiLocatorDelegate.lookup(name, ConnectionFactory.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailSenderJndiConfiguration.java, +			return JndiLocatorDelegate.createDefaultResourceRefLocator().lookup(jndiName,, +					Session.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfigurationTests.java, +		ConnectionFactory connectionFactory = configureConnectionFactory(, +				"java:comp/env/myCF");, +		this.contextRunner.withPropertyValues("spring.jms.jndi-name=java:comp/env/myCF"), +				.run(assertConnectionFactory(connectionFactory));, +	}, +, +	@Test, +	public void jndiNamePropertySetWithResourceRef() {, +		ConnectionFactory connectionFactory = configureConnectionFactory(, +				"java:comp/env/myCF");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfiguration.java, +	private final JndiLocatorDelegate jndiLocatorDelegate;, +, +		this.jndiLocatorDelegate = JndiLocatorDelegate.createDefaultResourceRefLocator();, +			return this.jndiLocatorDelegate.lookup(this.properties.getJndiName(),, +				return this.jndiLocatorDelegate.lookup(name, ConnectionFactory.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mail/MailSenderJndiConfiguration.java, +			return JndiLocatorDelegate.createDefaultResourceRefLocator().lookup(jndiName,, +					Session.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JndiConnectionFactoryAutoConfigurationTests.java, +		ConnectionFactory connectionFactory = configureConnectionFactory(, +				"java:comp/env/myCF");, +		this.contextRunner.withPropertyValues("spring.jms.jndi-name=java:comp/env/myCF"), +				.run(assertConnectionFactory(connectionFactory));, +	}, +, +	@Test, +	public void jndiNamePropertySetWithResourceRef() {, +		ConnectionFactory connectionFactory = configureConnectionFactory(, +				"java:comp/env/myCF");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mail/MailSenderAutoConfigurationTests.java, +		Session session = configureJndiSession("java:comp/env/foo");, +		testJndiSessionLookup(session, "java:comp/env/foo");, +	}, +, +	@Test, +	public void jndiSessionAvailableWithResourceRef() {, +		Session session = configureJndiSession("java:comp/env/foo");, +		testJndiSessionLookup(session, "foo");, +	}, +, +	private void testJndiSessionLookup(Session session, String jndiName) {, +		this.contextRunner.withPropertyValues("spring.mail.jndi-name:" + jndiName)]