[+++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>neo4j-ogm-bolt-native-types</artifactId>, +			<groupId>org.neo4j</groupId>, +			<artifactId>neo4j-ogm-http-driver</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>neo4j-ogm-bolt-native-types</artifactId>, +			<groupId>org.neo4j</groupId>, +			<artifactId>neo4j-ogm-http-driver</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +import org.neo4j.ogm.driver.NativeTypesException;, +import org.neo4j.ogm.driver.NativeTypesNotAvailableException;, +import org.neo4j.ogm.driver.NativeTypesNotSupportedException;, +import org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException;, +import org.springframework.lang.Nullable;, + * @author Michael Simons, +		try {, +			eventListeners.forEach(sessionFactory::register);, +		catch (NativeTypesException ex) {, +			InvalidConfigurationPropertyValueException translatedMessage = translateNativeTypesException(, +					ex);, +			throw (translatedMessage != null) ? translatedMessage : ex;, +		}, +	}, +, +	@Nullable, +	private static InvalidConfigurationPropertyValueException translateNativeTypesException(, +			NativeTypesException cause) {, +, +		String propertyName = Neo4jProperties.CONFIGURATION_PREFIX + ".use-native-types";, +		boolean propertyValue = true;, +, +		if (cause instanceof NativeTypesNotAvailableException) {, +			String message = String.format(, +					"The native type module for your Neo4j-OGM driver is not available. ", +							+ "Please add the following dependency to your build:%n'%s'.",, +					((NativeTypesNotAvailableException) cause).getRequiredModule());, +			return new InvalidConfigurationPropertyValueException(propertyName,, +					propertyValue, message);, +		}, +		if (cause instanceof NativeTypesNotSupportedException) {, +			String message = String.format(, +					"The configured Neo4j-OGM driver %s does not support Neo4j native types. ", +							+ "Please consider one of the drivers that support Neo4js native types like the Bolt or the embedded driver.",, +					cause.getDriverClassName());, +			return new InvalidConfigurationPropertyValueException(propertyName,, +					propertyValue, message);, +		}, +, +		return null;, +	}, +++ b/spring-boot-project/spring-boot-autoconfigure/pom.xml, +			<artifactId>neo4j-ogm-bolt-native-types</artifactId>, +			<groupId>org.neo4j</groupId>, +			<artifactId>neo4j-ogm-http-driver</artifactId>, +			<scope>test</scope>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +import org.neo4j.ogm.driver.NativeTypesException;, +import org.neo4j.ogm.driver.NativeTypesNotAvailableException;, +import org.neo4j.ogm.driver.NativeTypesNotSupportedException;, +import org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException;, +import org.springframework.lang.Nullable;, + * @author Michael Simons, +		try {, +			eventListeners.forEach(sessionFactory::register);, +		catch (NativeTypesException ex) {, +			InvalidConfigurationPropertyValueException translatedMessage = translateNativeTypesException(, +					ex);, +			throw (translatedMessage != null) ? translatedMessage : ex;, +		}, +	}, +, +	@Nullable, +	private static InvalidConfigurationPropertyValueException translateNativeTypesException(, +			NativeTypesException cause) {, +, +		String propertyName = Neo4jProperties.CONFIGURATION_PREFIX + ".use-native-types";, +		boolean propertyValue = true;, +, +		if (cause instanceof NativeTypesNotAvailableException) {, +			String message = String.format(, +					"The native type module for your Neo4j-OGM driver is not available. ", +							+ "Please add the following dependency to your build:%n'%s'.",, +					((NativeTypesNotAvailableException) cause).getRequiredModule());, +			return new InvalidConfigurationPropertyValueException(propertyName,, +					propertyValue, message);, +		}, +		if (cause instanceof NativeTypesNotSupportedException) {, +			String message = String.format(, +					"The configured Neo4j-OGM driver %s does not support Neo4j native types. ", +							+ "Please consider one of the drivers that support Neo4js native types like the Bolt or the embedded driver.",]