[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Maximum size of the HTTP post content., +		private DataSize maxHttpPostSize = DataSize.ofMegabytes(2);, +		private DataSize maxHttpHeaderSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getMaxHttpHeaderSize() {, +		public void setMaxHttpHeaderSize(DataSize maxHttpHeaderSize) {, +		 * Maximum size of the HTTP post or put content., +		private DataSize maxHttpPostSize = DataSize.ofBytes(200000);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		 * Maximum size of the HTTP post content. When the value is -1, the default, the, +		 * size is unlimited., +		private DataSize maxHttpPostSize = DataSize.ofBytes(-1);, +		 * Size of each buffer. The default is derived from the maximum amount of memory, +		 * that is available to the JVM., +		private DataSize bufferSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getBufferSize() {, +		public void setBufferSize(DataSize bufferSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Maximum size of the HTTP post content., +		private DataSize maxHttpPostSize = DataSize.ofMegabytes(2);, +		private DataSize maxHttpHeaderSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getMaxHttpHeaderSize() {, +		public void setMaxHttpHeaderSize(DataSize maxHttpHeaderSize) {, +		 * Maximum size of the HTTP post or put content., +		private DataSize maxHttpPostSize = DataSize.ofBytes(200000);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		 * Maximum size of the HTTP post content. When the value is -1, the default, the, +		 * size is unlimited., +		private DataSize maxHttpPostSize = DataSize.ofBytes(-1);, +		 * Size of each buffer. The default is derived from the maximum amount of memory, +		 * that is available to the JVM., +		private DataSize bufferSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getBufferSize() {, +		public void setBufferSize(DataSize bufferSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer.java, +		propertyMapper.from(jettyProperties::getMaxHttpPostSize).whenNonNull(), +				.asInt(DataSize::toBytes), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Maximum size of the HTTP post content., +		private DataSize maxHttpPostSize = DataSize.ofMegabytes(2);, +		private DataSize maxHttpHeaderSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getMaxHttpHeaderSize() {, +		public void setMaxHttpHeaderSize(DataSize maxHttpHeaderSize) {, +		 * Maximum size of the HTTP post or put content., +		private DataSize maxHttpPostSize = DataSize.ofBytes(200000);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		 * Maximum size of the HTTP post content. When the value is -1, the default, the, +		 * size is unlimited., +		private DataSize maxHttpPostSize = DataSize.ofBytes(-1);, +		 * Size of each buffer. The default is derived from the maximum amount of memory, +		 * that is available to the JVM., +		private DataSize bufferSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getBufferSize() {, +		public void setBufferSize(DataSize bufferSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer.java, +		propertyMapper.from(jettyProperties::getMaxHttpPostSize).whenNonNull(), +				.asInt(DataSize::toBytes), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +		propertyMapper.from(tomcatProperties::getMaxHttpPostSize).whenNonNull(), +				.asInt(DataSize::toBytes), +		return (this.serverProperties.getTomcat().getMaxHttpHeaderSize().toBytes() > 0), +				? this.serverProperties.getTomcat().getMaxHttpHeaderSize(), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * Maximum size of the HTTP post content., +		private DataSize maxHttpPostSize = DataSize.ofMegabytes(2);, +		private DataSize maxHttpHeaderSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getMaxHttpHeaderSize() {, +		public void setMaxHttpHeaderSize(DataSize maxHttpHeaderSize) {, +		 * Maximum size of the HTTP post or put content., +		private DataSize maxHttpPostSize = DataSize.ofBytes(200000);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		 * Maximum size of the HTTP post content. When the value is -1, the default, the, +		 * size is unlimited., +		private DataSize maxHttpPostSize = DataSize.ofBytes(-1);, +		 * Size of each buffer. The default is derived from the maximum amount of memory, +		 * that is available to the JVM., +		private DataSize bufferSize = DataSize.ofBytes(0);, +		public DataSize getMaxHttpPostSize() {, +		public void setMaxHttpPostSize(DataSize maxHttpPostSize) {, +		public DataSize getBufferSize() {, +		public void setBufferSize(DataSize bufferSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/JettyWebServerFactoryCustomizer.java]