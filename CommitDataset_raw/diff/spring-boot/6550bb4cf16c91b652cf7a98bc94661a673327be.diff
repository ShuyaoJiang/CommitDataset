[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the, + * {@code defaults} name or individually via the name of the element., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the, + * {@code defaults} name or individually via the name of the element., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnBeanCondition.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/OnEnabledEndpointElementCondition.java, + * Base endpoint element condition. An element can be disabled globally via the, + * {@code defaults} name or individually via the name of the element., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnBeanCondition.java, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/restart/ChangeableUrls.java, +		if (jarFile == null) {, +			return Collections.<URL>emptyList();, +		}, +					"Failed to read Class-Path attribute from manifest of jar " + url);, +		String classPath = manifest.getMainAttributes(), +		if (!StringUtils.hasText(classPath)) {, +			return Collections.emptyList();, +		}, +		String[] entries = StringUtils.delimitedListToStringArray(classPath, " ");, +		List<URL> urls = new ArrayList<URL>(entries.length);, +		for (String entry : entries) {]