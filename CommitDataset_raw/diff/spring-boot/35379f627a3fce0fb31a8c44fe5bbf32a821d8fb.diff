[+++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create the underlying, +	 * {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create the underlying, +	 * {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +whereas in this example, the password is always set because it isn't attached to any, +profile, and it would have to be explicitly reset in all other profiles as necessary:, +, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create the underlying, +	 * {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +whereas in this example, the password is always set because it isn't attached to any, +profile, and it would have to be explicitly reset in all other profiles as necessary:, +, +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationConfiguration.java, + * <p>, + * Similar to the standard {@link ContextConfiguration @ContextConfiguration} but uses, + * Spring Boot's {@link SpringApplicationContextLoader}., +	 * @see ContextConfiguration#locations(), +	 * @see ContextConfiguration#classes(), +	 * @see ContextConfiguration#initializers(), +	 * @see ContextConfiguration#inheritLocations(), +	 * @see ContextConfiguration#inheritInitializers(), +	 * @see ContextConfiguration#name(), +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create the underlying, +	 * {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +whereas in this example, the password is always set because it isn't attached to any, +profile, and it would have to be explicitly reset in all other profiles as necessary:, +, +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationConfiguration.java, + * <p>, + * Similar to the standard {@link ContextConfiguration @ContextConfiguration} but uses, + * Spring Boot's {@link SpringApplicationContextLoader}., +	 * @see ContextConfiguration#locations(), +	 * @see ContextConfiguration#classes(), +	 * @see ContextConfiguration#initializers(), +	 * @see ContextConfiguration#inheritLocations(), +	 * @see ContextConfiguration#inheritInitializers(), +	 * @see ContextConfiguration#name(), +++ b/spring-boot/src/main/java/org/springframework/boot/yaml/ArrayDocumentMatcher.java, + * Copyright 2012-2015 the original author or authors., +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create the underlying, +	 * {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +whereas in this example, the password is always set because it isn't attached to any, +profile, and it would have to be explicitly reset in all other profiles as necessary:, +, +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationConfiguration.java, + * <p>, + * Similar to the standard {@link ContextConfiguration @ContextConfiguration} but uses, + * Spring Boot's {@link SpringApplicationContextLoader}., +	 * @see ContextConfiguration#locations(), +	 * @see ContextConfiguration#classes(), +	 * @see ContextConfiguration#initializers(), +	 * @see ContextConfiguration#inheritLocations(), +	 * @see ContextConfiguration#inheritInitializers(), +	 * @see ContextConfiguration#name(), +++ b/spring-boot/src/main/java/org/springframework/boot/yaml/ArrayDocumentMatcher.java, + * Copyright 2012-2015 the original author or authors., +++ b/spring-boot/src/main/java/org/springframework/boot/yaml/SpringProfileDocumentMatcher.java, + * Copyright 2012-2015 the original author or authors., +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcher.java, +	 * @param fileSystemWatcherFactory a factory to create the underlying, +	 * {@link FileSystemWatcher} used to monitor the local file system, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +whereas in this example, the password is always set because it isn't attached to any, +profile, and it would have to be explicitly reset in all other profiles as necessary:, +, +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationConfiguration.java, + * <p>, + * Similar to the standard {@link ContextConfiguration @ContextConfiguration} but uses, + * Spring Boot's {@link SpringApplicationContextLoader}., +	 * @see ContextConfiguration#locations(), +	 * @see ContextConfiguration#classes(), +	 * @see ContextConfiguration#initializers(), +	 * @see ContextConfiguration#inheritLocations(), +	 * @see ContextConfiguration#inheritInitializers(), +	 * @see ContextConfiguration#name(), +++ b/spring-boot/src/main/java/org/springframework/boot/yaml/ArrayDocumentMatcher.java, + * Copyright 2012-2015 the original author or authors., +++ b/spring-boot/src/main/java/org/springframework/boot/yaml/SpringProfileDocumentMatcher.java, + * Copyright 2012-2015 the original author or authors., +++ b/spring-boot/src/test/resources/testprofilesempty.yml]