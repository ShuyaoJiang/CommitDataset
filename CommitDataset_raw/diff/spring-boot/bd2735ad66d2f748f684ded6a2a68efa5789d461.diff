[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +import org.springframework.util.ObjectUtils;, + * omitted when mapping to '/*' (unless, + * {@link #ServletRegistrationBean(Servlet, boolean, String...) alwaysMapUrl} is set to, + * {@code false}). The servlet name will be deduced if not specified., +	private boolean alwaysMapUrl = true;, +, +		this(servlet, true, urlMappings);, +	}, +, +	/**, +	 * Create a new {@link ServletRegistrationBean} instance with the specified, +	 * {@link Servlet} and URL mappings., +	 * @param servlet the servlet being mapped, +	 * @param alwaysMapUrl if omitted URL mappings should be replaced with '/*', +	 * @param urlMappings the URLs being mapped, +	 */, +	public ServletRegistrationBean(Servlet servlet, boolean alwaysMapUrl,, +			String... urlMappings) {, +		this.alwaysMapUrl = alwaysMapUrl;, +			logger.info("Servlet " + name + " was not registered (disabled)");, +		if (urlMapping.length == 0 && this.alwaysMapUrl) {, +		if (!ObjectUtils.isEmpty(urlMapping)) {, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/ServletRegistrationBean.java, +import org.springframework.util.ObjectUtils;, + * omitted when mapping to '/*' (unless, + * {@link #ServletRegistrationBean(Servlet, boolean, String...) alwaysMapUrl} is set to, + * {@code false}). The servlet name will be deduced if not specified., +	private boolean alwaysMapUrl = true;, +, +		this(servlet, true, urlMappings);, +	}, +, +	/**, +	 * Create a new {@link ServletRegistrationBean} instance with the specified, +	 * {@link Servlet} and URL mappings., +	 * @param servlet the servlet being mapped, +	 * @param alwaysMapUrl if omitted URL mappings should be replaced with '/*', +	 * @param urlMappings the URLs being mapped, +	 */, +	public ServletRegistrationBean(Servlet servlet, boolean alwaysMapUrl,, +			String... urlMappings) {, +		this.alwaysMapUrl = alwaysMapUrl;, +			logger.info("Servlet " + name + " was not registered (disabled)");, +		if (urlMapping.length == 0 && this.alwaysMapUrl) {, +		if (!ObjectUtils.isEmpty(urlMapping)) {, +		}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/ServletRegistrationBeanTests.java, +import static org.mockito.Matchers.any;, +	@Test, +	public void withoutDefaultMappings() throws Exception {, +		ServletRegistrationBean bean = new ServletRegistrationBean(this.servlet, false);, +		bean.onStartup(this.servletContext);, +		verify(this.registration, never()).addMapping((String[]) any());, +	}, +]