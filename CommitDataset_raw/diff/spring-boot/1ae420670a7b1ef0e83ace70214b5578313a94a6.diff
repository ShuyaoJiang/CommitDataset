[+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizerTests.java, +	public void deduceUseForwardHeaders() {, +	public void defaultUseForwardHeaders() {, +	public void setUseForwardHeaders() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizerTests.java, +	public void deduceUseForwardHeaders() {, +	public void defaultUseForwardHeaders() {, +	public void setUseForwardHeaders() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +active, the `server.address` property is `192.168.1.120`. If the `development`,, +`spring.profiles` can therefore contain a simple profile name (for example `production`), +profile accepts the configuration. The `<springProfile>` tag can contain a simple profile, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizerTests.java, +	public void deduceUseForwardHeaders() {, +	public void defaultUseForwardHeaders() {, +	public void setUseForwardHeaders() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +active, the `server.address` property is `192.168.1.120`. If the `development`,, +`spring.profiles` can therefore contain a simple profile name (for example `production`), +profile accepts the configuration. The `<springProfile>` tag can contain a simple profile, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java, +	 * @since 2.1.0, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizerTests.java, +	public void deduceUseForwardHeaders() {, +	public void defaultUseForwardHeaders() {, +	public void setUseForwardHeaders() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +active, the `server.address` property is `192.168.1.120`. If the `development`,, +`spring.profiles` can therefore contain a simple profile name (for example `production`), +profile accepts the configuration. The `<springProfile>` tag can contain a simple profile, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java, +	 * @since 2.1.0, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringBootJoranConfiguratorTests.java, +		this.environment.setActiveProfiles("test");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizerTests.java, +	public void deduceUseForwardHeaders() {, +	public void defaultUseForwardHeaders() {, +	public void setUseForwardHeaders() {, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +active, the `server.address` property is `192.168.1.120`. If the `development`,, +`spring.profiles` can therefore contain a simple profile name (for example `production`), +profile accepts the configuration. The `<springProfile>` tag can contain a simple profile, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java, +	 * @since 2.1.0, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/logging/logback/SpringBootJoranConfiguratorTests.java, +		this.environment.setActiveProfiles("test");, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactoryTests.java, +			listeners[i] = new Connector();]