[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/RedisSessionProperties.java, +	private String namespace = "spring:session";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/RedisSessionProperties.java, +	private String namespace = "spring:session";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/ReactiveSessionAutoConfigurationRedisTests.java, + * @author Vedran Pavic, +				.run(validateSpringSessionUsesRedis("spring:session:", RedisFlushMode.ON_SAVE));, +				.run(validateSpringSessionUsesRedis("spring:session:", RedisFlushMode.ON_SAVE));, +				.run(validateSpringSessionUsesRedis("foo:", RedisFlushMode.IMMEDIATE));, +			String namespace, RedisFlushMode flushMode) {, +			assertThat(new DirectFieldAccessor(repository).getPropertyValue("namespace")), +					.isEqualTo(namespace);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/RedisSessionProperties.java, +	private String namespace = "spring:session";, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/ReactiveSessionAutoConfigurationRedisTests.java, + * @author Vedran Pavic, +				.run(validateSpringSessionUsesRedis("spring:session:", RedisFlushMode.ON_SAVE));, +				.run(validateSpringSessionUsesRedis("spring:session:", RedisFlushMode.ON_SAVE));, +				.run(validateSpringSessionUsesRedis("foo:", RedisFlushMode.IMMEDIATE));, +			String namespace, RedisFlushMode flushMode) {, +			assertThat(new DirectFieldAccessor(repository).getPropertyValue("namespace")), +					.isEqualTo(namespace);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationRedisTests.java, +				.run(validateSpringSessionUsesRedis("foo:event:created:",]