[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +		return new EndpointMBeanExporter();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +		return new EndpointMBeanExporter();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +import javax.management.MalformedObjectNameException;, +import javax.management.ObjectName;, +, +import org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;, +import org.springframework.jmx.export.naming.MetadataNamingStrategy;, +import org.springframework.jmx.export.naming.SelfNaming;, +import org.springframework.util.Assert;, +public class EndpointMBean implements SelfNaming {, +, +	private AnnotationJmxAttributeSource annotationSource = new AnnotationJmxAttributeSource();, +, +	private MetadataNamingStrategy metadataNamingStrategy = new MetadataNamingStrategy(, +			this.annotationSource);, +	private String beanName;, +, +	public EndpointMBean(String beanName, Endpoint<?> endpoint) {, +		Assert.notNull(beanName, "BeanName must not be null");, +		Assert.notNull(endpoint, "Endpoint must not be null");, +		this.beanName = beanName;, +	@ManagedAttribute(description = "Invoke the underlying endpoint"), +, +	@Override, +	public ObjectName getObjectName() throws MalformedObjectNameException {, +		return this.metadataNamingStrategy.getObjectName(this, this.beanName);, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +		return new EndpointMBeanExporter();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +import javax.management.MalformedObjectNameException;, +import javax.management.ObjectName;, +, +import org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;, +import org.springframework.jmx.export.naming.MetadataNamingStrategy;, +import org.springframework.jmx.export.naming.SelfNaming;, +import org.springframework.util.Assert;, +public class EndpointMBean implements SelfNaming {, +, +	private AnnotationJmxAttributeSource annotationSource = new AnnotationJmxAttributeSource();, +, +	private MetadataNamingStrategy metadataNamingStrategy = new MetadataNamingStrategy(, +			this.annotationSource);, +	private String beanName;, +, +	public EndpointMBean(String beanName, Endpoint<?> endpoint) {, +		Assert.notNull(beanName, "BeanName must not be null");, +		Assert.notNull(endpoint, "Endpoint must not be null");, +		this.beanName = beanName;, +	@ManagedAttribute(description = "Invoke the underlying endpoint"), +, +	@Override, +	public ObjectName getObjectName() throws MalformedObjectNameException {, +		return this.metadataNamingStrategy.getObjectName(this, this.beanName);, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +	protected void registerEndpoint(String beanName, Endpoint<?> endpoint,, +			mbeanExporter.registerManagedResource(new EndpointMBean(beanName, endpoint));, +			logger.error("Could not register MBean for endpoint [" + beanName + "]", ex);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +		return new EndpointMBeanExporter();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBean.java, +import javax.management.MalformedObjectNameException;, +import javax.management.ObjectName;, +, +import org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;, +import org.springframework.jmx.export.naming.MetadataNamingStrategy;, +import org.springframework.jmx.export.naming.SelfNaming;, +import org.springframework.util.Assert;, +public class EndpointMBean implements SelfNaming {, +, +	private AnnotationJmxAttributeSource annotationSource = new AnnotationJmxAttributeSource();, +, +	private MetadataNamingStrategy metadataNamingStrategy = new MetadataNamingStrategy(, +			this.annotationSource);, +	private String beanName;, +, +	public EndpointMBean(String beanName, Endpoint<?> endpoint) {, +		Assert.notNull(beanName, "BeanName must not be null");, +		Assert.notNull(endpoint, "Endpoint must not be null");, +		this.beanName = beanName;, +	@ManagedAttribute(description = "Invoke the underlying endpoint"), +, +	@Override, +	public ObjectName getObjectName() throws MalformedObjectNameException {, +		return this.metadataNamingStrategy.getObjectName(this, this.beanName);, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +	protected void registerEndpoint(String beanName, Endpoint<?> endpoint,, +			mbeanExporter.registerManagedResource(new EndpointMBean(beanName, endpoint));, +			logger.error("Could not register MBean for endpoint [" + beanName + "]", ex);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporterTests.java, +import java.util.Collections;, +import org.springframework.boot.actuate.endpoint.Endpoint;, +		this.context.registerBeanDefinition(, +				"mbeanExporter",, +				new RootBeanDefinition(MBeanExporter.class, null,]