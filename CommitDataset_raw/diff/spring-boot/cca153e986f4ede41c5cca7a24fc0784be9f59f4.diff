[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +You can also define a `@ControllerAdvice` to customize the JSON document to return for a, +particular controller and/or exception type., +, +[source,java,indent=0,subs="verbatim,quotes,attributes"], +----, +, +	@ControllerAdvice(basePackageClasses = FooController.class), +	public class FooControllerAdvice extends ResponseEntityExceptionHandler {, +, +		@ExceptionHandler(YourException.class), +		@ResponseBody, +		ResponseEntity<?> handleControllerException(HttpServletRequest request, Throwable ex) {, +			HttpStatus status = getStatus(request);, +			return new ResponseEntity<>(new CustomErrorType(status.value(), ex.getMessage()), status);, +		}, +, +		private HttpStatus getStatus(HttpServletRequest request) {, +			Integer statusCode = (Integer) request.getAttribute("javax.servlet.error.status_code");, +			if (statusCode == null) {, +				return HttpStatus.INTERNAL_SERVER_ERROR;, +			}, +			return HttpStatus.valueOf(statusCode);, +		}, +, +	}, +----, +, +In the example above, if `YourException` is thrown by a controller defined in the same package, +as `FooController`, a json representation of the `CustomerErrorType` POJO will be used instead, +of the `ErrorAttributes` representation., +]