[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +more details on both plugins as well as some help should you need to extend an, +"`<<using-spring-boot.adoc#using-boot>>`" section first., +== Spring Boot Maven Plugin, +support in Maven, letting you package executable jar or war archives and run an, +application "`in-place`". To use it, you must use Maven 3.2 (or later)., +NOTE: See the {spring-boot-maven-plugin-site}/[Spring Boot Maven Plugin Site], +=== Including the Plugin, +To use the Spring Boot Maven Plugin, include the appropriate XML in the `plugins`, +section of your `pom.xml`, as shown in the following example:, +The preceding configuration repackages a jar or war that is built during the `package` phase of, +the Maven lifecycle. The following example shows both the repackaged jar as well as the, +original jar in the `target` directory:, +If you do not include the `<execution/>` configuration as shown in the prior example, you, +can run the plugin on its own (but only if the package goal is used as well). For, +example:, +If you use a milestone or snapshot release, you also need to add the appropriate, +`pluginRepository` elements as shown in the following listing:, +=== Packaging Executable Jar and War Files, +Once `spring-boot-maven-plugin` has been included in your `pom.xml`, it automatically, +tries to rewrite archives to make them executable by using the `spring-boot:repackage`, +goal. You should configure your project to build a jar or war (as appropriate) by using, +the usual `packaging` element, as shown in the following example:, +Your existing archive is enhanced by Spring Boot during the `package` phase. The main, +class that you want to launch can either be specified by using a configuration option, +or by adding a `Main-Class` attribute to the manifest in the usual way. If you do not, +specify a main class, the plugin searches for a class with a, +To build a war file that is both executable and deployable into an external container, you, +need to mark the embedded container dependencies as "`provided`", as shown in the, +following example:, +== Spring Boot Gradle Plugin, +The Spring Boot Gradle Plugin provides Spring Boot support in Gradle, letting you, +package executable jar or war archives, run Spring Boot applications, and use the, +== Spring Boot AntLib Module, +use the module to create executable jars. To use the module, you need to declare an, +additional `spring-boot` namespace in your `build.xml`, as shown in the following, +example:, +You need to remember to start Ant using the `-lib` option, as shown in the following, +example:, +<<using-spring-boot.adoc#using-boot-ant, using Apache Ant with `spring-boot-antlib`>>., +=== Spring Boot Ant Tasks, +tasks are available:, +* <<spring-boot-ant-exejar>>, +* <<spring-boot-ant-findmainclass>>, +[[spring-boot-ant-exejar]], +==== `spring-boot:exejar`, +You can use the `exejar` task to create a Spring Boot executable jar. The following, +[[spring-boot-ant-findmainclass]], +=== `spring-boot:findmainclass`, +`main`. You can also use this task directly in your build, if needed. The following, +attributes are supported:, +== Supporting Other Build Systems, +If you want to use a build tool other than Maven, Gradle, or Ant, you likely need to, +"`<<appendix-executable-jar-format.adoc#executable-jar, executable jar format>>`" section, +actually generate jars. If you need to, you may use this library directly., +=== Repackaging Archives, +To repackage an existing archive so that it becomes a self-contained executable archive,, +=== Nested Libraries, +When repackaging an archive, you can include references to dependency files by using the, +`org.springframework.boot.loader.tools.Libraries` interface. We do not provide any, +concrete implementations of `Libraries` here as they are usually build-system-specific., +If your archive already includes libraries, you can use `Libraries.NONE`., +=== Finding a Main Class, +If you do not use `Repackager.setMainClass()` to specify a main class, the repackager, +uses http://asm.ow2.org/[ASM] to read class files and tries to find a suitable class, +=== Example Repackage Implementation, +The following listing shows a typical example repackage:, +== What to Read Next, +If you are interested in how the build tool plugins work, you can, +look at the {github-code}/spring-boot-project/spring-boot-tools[`spring-boot-tools`], +module on GitHub. More technical details of the executable jar formate are covered in , +<<appendix-executable-jar-format.adoc#executable-jar,the appendix>>., +If you have specific build-related questions, you can check out the]