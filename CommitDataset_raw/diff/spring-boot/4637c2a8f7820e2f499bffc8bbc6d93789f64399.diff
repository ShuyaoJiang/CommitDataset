[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			resolver.setExcludedViewNames(this.environment.getProperty(, +					"excludedViewNames", String[].class));, +			resolver.setViewNames(this.environment.getProperty("viewNames",, +					String[].class));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			resolver.setExcludedViewNames(this.environment.getProperty(, +					"excludedViewNames", String[].class));, +			resolver.setViewNames(this.environment.getProperty("viewNames",, +					String[].class));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfigurationTests.java, +import static org.junit.Assert.assertArrayEquals;, +	@Test, +	public void overrideViewNames() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.thymeleaf.viewNames:foo,bar");, +		this.context.register(ThymeleafAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		ThymeleafViewResolver views = this.context.getBean(ThymeleafViewResolver.class);, +		assertArrayEquals(new String[] { "foo", "bar" }, views.getViewNames());, +	}, +]