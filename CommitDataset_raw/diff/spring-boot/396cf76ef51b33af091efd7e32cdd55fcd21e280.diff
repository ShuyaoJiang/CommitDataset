[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +import org.springframework.util.StringUtils;, + * @author Eddú Meléndez, +		if (StringUtils.hasLength(this.jersey.getPath())) {, +			this.path = parsePath(this.jersey.getPath());, +		}, +		else {, +	}, +, +		return parsePath(path);, +, +	private static String parsePath(String applicationPath) {, +		if (!applicationPath.startsWith("/")) {, +			applicationPath = "/" + applicationPath;, +		return applicationPath.equals("/") ? "/*" : applicationPath + "/*";, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +import org.springframework.util.StringUtils;, + * @author Eddú Meléndez, +		if (StringUtils.hasLength(this.jersey.getPath())) {, +			this.path = parsePath(this.jersey.getPath());, +		}, +		else {, +	}, +, +		return parsePath(path);, +, +	private static String parsePath(String applicationPath) {, +		if (!applicationPath.startsWith("/")) {, +			applicationPath = "/" + applicationPath;, +		return applicationPath.equals("/") ? "/*" : applicationPath + "/*";, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyProperties.java, + * @author Eddú Meléndez, +	/**, +	 * Path at which the application will be available., +	 */, +	private String path;, +, +	public String getPath() {, +		return this.path;, +	}, +, +	public void setPath(String path) {, +		this.path = path;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfiguration.java, +import org.springframework.util.StringUtils;, + * @author Eddú Meléndez, +		if (StringUtils.hasLength(this.jersey.getPath())) {, +			this.path = parsePath(this.jersey.getPath());, +		}, +		else {, +	}, +, +		return parsePath(path);, +, +	private static String parsePath(String applicationPath) {, +		if (!applicationPath.startsWith("/")) {, +			applicationPath = "/" + applicationPath;, +		return applicationPath.equals("/") ? "/*" : applicationPath + "/*";, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jersey/JerseyProperties.java, + * @author Eddú Meléndez, +	/**, +	 * Path at which the application will be available., +	 */, +	private String path;, +, +	public String getPath() {, +		return this.path;, +	}, +, +	public void setPath(String path) {, +		this.path = path;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationWithoutApplicationPathTests.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jersey;, +]