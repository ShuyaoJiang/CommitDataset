[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +import org.eclipse.jetty.server.handler.HandlerCollection;, + * @author David Liu, +	private void handleDeferredInitialize(Handler... handlers) throws Exception {, +		for (Handler handler : handlers) {, +			else if (handler instanceof HandlerCollection) {, +				handleDeferredInitialize(((HandlerCollection) handler).getHandlers());, +			}, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +import org.eclipse.jetty.server.handler.HandlerCollection;, + * @author David Liu, +	private void handleDeferredInitialize(Handler... handlers) throws Exception {, +		for (Handler handler : handlers) {, +			else if (handler instanceof HandlerCollection) {, +				handleDeferredInitialize(((HandlerCollection) handler).getHandlers());, +			}, +		}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	protected ServletContextInitializer exampleServletRegistration() {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainer.java, +import org.eclipse.jetty.server.handler.HandlerCollection;, + * @author David Liu, +	private void handleDeferredInitialize(Handler... handlers) throws Exception {, +		for (Handler handler : handlers) {, +			else if (handler instanceof HandlerCollection) {, +				handleDeferredInitialize(((HandlerCollection) handler).getHandlers());, +			}, +		}, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java, +	protected ServletContextInitializer exampleServletRegistration() {, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactoryTests.java, +import org.eclipse.jetty.server.handler.HandlerCollection;, +import org.eclipse.jetty.server.handler.HandlerWrapper;, +	@Test, +	public void wrappedHandlers() throws Exception {, +		JettyEmbeddedServletContainerFactory factory = getFactory();, +		factory.setServerCustomizers(Arrays.asList(new JettyServerCustomizer() {, +			@Override, +			public void customize(Server server) {, +				Handler handler = server.getHandler();, +				HandlerWrapper wrapper = new HandlerWrapper();, +				wrapper.setHandler(handler);, +				HandlerCollection collection = new HandlerCollection();, +				collection.addHandler(wrapper);, +				server.setHandler(collection);, +			}, +		}));, +		this.container = factory, +				.getEmbeddedServletContainer(exampleServletRegistration());, +		this.container.start();, +		assertThat(getResponse(getLocalUrl("/hello")), equalTo("Hello World"));, +	}, +]