[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import static org.springframework.util.StringUtils.commaDelimitedListToStringArray;, +import static org.springframework.util.StringUtils.trimAllWhitespace;, +, +import org.springframework.util.StringUtils;, +		if (StringUtils.hasText(basename)) {, +			messageSource.setBasenames(commaDelimitedListToStringArray(trimAllWhitespace(basename)));, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import static org.springframework.util.StringUtils.commaDelimitedListToStringArray;, +import static org.springframework.util.StringUtils.trimAllWhitespace;, +, +import org.springframework.util.StringUtils;, +		if (StringUtils.hasText(basename)) {, +			messageSource.setBasenames(commaDelimitedListToStringArray(trimAllWhitespace(basename)));, +		}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +, +	public void testMultipleMessageSourceCreated() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(MessageSourceAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.messages.basename:test/messages,test/messages2");, +		this.context.refresh();, +		assertEquals("bar",, +				this.context.getMessage("foo", null, "Foo message", Locale.UK));, +		assertEquals("bar-bar",, +				this.context.getMessage("foo-foo", null, "Foo-Foo message", Locale.UK));, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +import static org.springframework.util.StringUtils.commaDelimitedListToStringArray;, +import static org.springframework.util.StringUtils.trimAllWhitespace;, +, +import org.springframework.util.StringUtils;, +		if (StringUtils.hasText(basename)) {, +			messageSource.setBasenames(commaDelimitedListToStringArray(trimAllWhitespace(basename)));, +		}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +, +	public void testMultipleMessageSourceCreated() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(MessageSourceAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.messages.basename:test/messages,test/messages2");, +		this.context.refresh();, +		assertEquals("bar",, +				this.context.getMessage("foo", null, "Foo message", Locale.UK));, +		assertEquals("bar-bar",, +				this.context.getMessage("foo-foo", null, "Foo-Foo message", Locale.UK));, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/test/resources/test/messages2.properties, +foo-foo=bar-bar]