[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBeanCreationFailureAnalyzer.java, + * @author Stephane Nicoll, +	public void setEnvironment(Environment environment) {, +		this.environment = environment;, +	}, +, +	@Override, +		StringBuilder description = new StringBuilder();, +		boolean datasourceUrlSpecified = this.environment.containsProperty(, +				"spring.datasource.url");, +		description.append("Failed to auto-configure a DataSource: ");, +		if (!datasourceUrlSpecified) {, +			description.append("'spring.datasource.url' is not specified and ");, +		}, +		description.append(String.format(, +				"no embedded datasource could be auto-configured.%n"));, +		description.append(String.format("%nReason: %s%n", cause.getMessage()));, +		StringBuilder action = new StringBuilder();, +		action.append(String.format("Consider the following:%n"));, +		if (EmbeddedDatabaseConnection.NONE == cause.getConnection()) {, +			action.append(String.format("\tIf you want an embedded database (H2, HSQL or ", +					+ "Derby), please put it on the classpath.%n"));, +			action.append(String.format("\tReview the configuration of %s%n.", cause.getConnection()));, +		action.append("\tIf you have database settings to be loaded from a particular ", +				+ "profile you may need to activate it").append(getActiveProfiles());, +		return new FailureAnalysis(description.toString(), action.toString(), cause);, +		StringBuilder message = new StringBuilder();, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBeanCreationFailureAnalyzer.java, + * @author Stephane Nicoll, +	public void setEnvironment(Environment environment) {, +		this.environment = environment;, +	}, +, +	@Override, +		StringBuilder description = new StringBuilder();, +		boolean datasourceUrlSpecified = this.environment.containsProperty(, +				"spring.datasource.url");, +		description.append("Failed to auto-configure a DataSource: ");, +		if (!datasourceUrlSpecified) {, +			description.append("'spring.datasource.url' is not specified and ");, +		}, +		description.append(String.format(, +				"no embedded datasource could be auto-configured.%n"));, +		description.append(String.format("%nReason: %s%n", cause.getMessage()));, +		StringBuilder action = new StringBuilder();, +		action.append(String.format("Consider the following:%n"));, +		if (EmbeddedDatabaseConnection.NONE == cause.getConnection()) {, +			action.append(String.format("\tIf you want an embedded database (H2, HSQL or ", +					+ "Derby), please put it on the classpath.%n"));, +			action.append(String.format("\tReview the configuration of %s%n.", cause.getConnection()));, +		action.append("\tIf you have database settings to be loaded from a particular ", +				+ "profile you may need to activate it").append(getActiveProfiles());, +		return new FailureAnalysis(description.toString(), action.toString(), cause);, +		StringBuilder message = new StringBuilder();, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, +, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBeanCreationFailureAnalyzer.java, + * @author Stephane Nicoll, +	public void setEnvironment(Environment environment) {, +		this.environment = environment;, +	}, +, +	@Override, +		StringBuilder description = new StringBuilder();, +		boolean datasourceUrlSpecified = this.environment.containsProperty(, +				"spring.datasource.url");, +		description.append("Failed to auto-configure a DataSource: ");, +		if (!datasourceUrlSpecified) {, +			description.append("'spring.datasource.url' is not specified and ");, +		}, +		description.append(String.format(, +				"no embedded datasource could be auto-configured.%n"));, +		description.append(String.format("%nReason: %s%n", cause.getMessage()));, +		StringBuilder action = new StringBuilder();, +		action.append(String.format("Consider the following:%n"));, +		if (EmbeddedDatabaseConnection.NONE == cause.getConnection()) {, +			action.append(String.format("\tIf you want an embedded database (H2, HSQL or ", +					+ "Derby), please put it on the classpath.%n"));, +			action.append(String.format("\tReview the configuration of %s%n.", cause.getConnection()));, +		action.append("\tIf you have database settings to be loaded from a particular ", +				+ "profile you may need to activate it").append(getActiveProfiles());, +		return new FailureAnalysis(description.toString(), action.toString(), cause);, +		StringBuilder message = new StringBuilder();, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, +, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBeanCreationFailureAnalyzerTests.java, + * Copyright 2012-2018 the original author or authors., +import org.springframework.mock.env.MockEnvironment;, + * @author Stephane Nicoll, +	private final MockEnvironment environment = new MockEnvironment();, +, +		assertThat(failureAnalysis.getDescription()).contains(, +				"'spring.datasource.url' is not specified",, +				"no embedded datasource could be auto-configured",, +				"Failed to determine a suitable driver class");]