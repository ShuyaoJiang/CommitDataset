[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +	 * Set whether to fall back to the system Locale if no files for a specific Locale, +	 * have been found.  if this is turned off, the only fallback will be the default, +	 * file (e.g. "messages.properties" for basename "messages")., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +	 * Set whether to fall back to the system Locale if no files for a specific Locale, +	 * have been found.  if this is turned off, the only fallback will be the default, +	 * file (e.g. "messages.properties" for basename "messages")., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfigurationTests.java, +import org.junit.After;, + * @author Eddú Meléndez, + * @author Stephane Nicoll, +	@After, +	public void closeContext() {, +		if (context != null) {, +			context.close();, +		}, +	}, +, +		load();, +		load("spring.messages.basename:test/messages");, +		load("spring.messages.basename:test/swedish");, +		load("spring.messages.basename:test/messages,test/messages2");, +		load("spring.messages.encoding:rubbish");, +		load("spring.messages.basename:test/messages");, +		load("spring.messages.basename:test/messages",, +		assertFalse(this.context.getBean(MessageSourceAutoConfiguration.class), +				.isFallbackToSystemLocale());, +	}, +, +	private void load(String... environment) {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context, environment);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfiguration.java, +	 * Set whether to fall back to the system Locale if no files for a specific Locale, +	 * have been found.  if this is turned off, the only fallback will be the default, +	 * file (e.g. "messages.properties" for basename "messages")., +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/MessageSourceAutoConfigurationTests.java, +import org.junit.After;, + * @author Eddú Meléndez, + * @author Stephane Nicoll, +	@After, +	public void closeContext() {, +		if (context != null) {, +			context.close();, +		}, +	}, +, +		load();, +		load("spring.messages.basename:test/messages");, +		load("spring.messages.basename:test/swedish");, +		load("spring.messages.basename:test/messages,test/messages2");, +		load("spring.messages.encoding:rubbish");, +		load("spring.messages.basename:test/messages");, +		load("spring.messages.basename:test/messages",, +		assertFalse(this.context.getBean(MessageSourceAutoConfiguration.class), +				.isFallbackToSystemLocale());, +	}, +, +	private void load(String... environment) {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context, environment);, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.messages.fallback-to-system-locale=true # set whether to fall back to the system Locale]