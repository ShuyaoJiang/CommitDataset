[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/LinksEnhancer.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import org.springframework.boot.actuate.endpoint.mvc.NamedMvcEndpoint;, +		Map<String, List<String>> added = new HashMap<String, List<String>>();, +, +			String rel = getRel(endpoint);, +			List<String> pathsForRel = added.get(rel) == null ? new ArrayList<String>() : added.get(rel);, +, +			if (!endpoint.getPath().equals(self) && !pathsForRel.contains(endpoint.getPath())) {, +				addEndpointLink(resource, endpoint, rel);, +				pathsForRel.add(endpoint.getPath());, +				added.put(rel, pathsForRel);, +	private String getRel(MvcEndpoint endpoint) {, +		String name = endpoint instanceof NamedMvcEndpoint ? ((NamedMvcEndpoint) endpoint).getName() : endpoint.getPath();, +		return (name.startsWith("/") ? name.substring(1) : name);, +	}, +, +	private void addEndpointLink(ResourceSupport resource, MvcEndpoint endpoint, String rel) {, +			String href = this.rootPath + endpoint.getPath();, +			resource.add(linkTo(type).slash(href).withRel(rel));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/LinksEnhancer.java, +import java.util.ArrayList;, +import java.util.HashMap;, +import java.util.List;, +import java.util.Map;, +import org.springframework.boot.actuate.endpoint.mvc.NamedMvcEndpoint;, +		Map<String, List<String>> added = new HashMap<String, List<String>>();, +, +			String rel = getRel(endpoint);, +			List<String> pathsForRel = added.get(rel) == null ? new ArrayList<String>() : added.get(rel);, +, +			if (!endpoint.getPath().equals(self) && !pathsForRel.contains(endpoint.getPath())) {, +				addEndpointLink(resource, endpoint, rel);, +				pathsForRel.add(endpoint.getPath());, +				added.put(rel, pathsForRel);, +	private String getRel(MvcEndpoint endpoint) {, +		String name = endpoint instanceof NamedMvcEndpoint ? ((NamedMvcEndpoint) endpoint).getName() : endpoint.getPath();, +		return (name.startsWith("/") ? name.substring(1) : name);, +	}, +, +	private void addEndpointLink(ResourceSupport resource, MvcEndpoint endpoint, String rel) {, +			String href = this.rootPath + endpoint.getPath();, +			resource.add(linkTo(type).slash(href).withRel(rel));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/LinksEnhancerTests.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure;, +, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +, +import org.assertj.core.api.Condition;, +import org.junit.Before;, +import org.junit.Test;, +, +import org.springframework.boot.actuate.endpoint.AbstractEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.AbstractMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter;, +import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoints;, +import org.springframework.hateoas.Link;, +import org.springframework.hateoas.ResourceSupport;, +import org.springframework.mock.web.MockHttpServletRequest;, +import org.springframework.web.context.request.RequestContextHolder;, +import org.springframework.web.context.request.ServletRequestAttributes;, +import org.springframework.web.context.support.StaticWebApplicationContext;, +, +import static org.assertj.core.api.Assertions.assertThat;, +, +/**, + * Tests for {@link LinksEnhancer}., + *, + * @author Madhura Bhave, + */, +public class LinksEnhancerTests {, +, +	@Before, +	public void setup() {, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		RequestContextHolder.setRequestAttributes(new ServletRequestAttributes(request));, +	}, +]