[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.JspServlet;, +	@NestedConfigurationProperty, +	private JspServlet jspServlet;, +, +	public JspServlet jspServlet() {, +		return this.jspServlet;, +	}, +, +	public JspServlet getJspServlet() {, +		return this.jspServlet;, +	}, +, +	public void setJspServlet(JspServlet jspServlet) {, +		this.jspServlet = jspServlet;, +	}, +, +		if (getJspServlet() != null) {, +			container.setJspServlet(getJspServlet());, +		}, +			factory.addContextCustomizers(new TomcatContextCustomizer() {, +				@Override, +				public void customize(Context context) {, +					context.setBackgroundProcessorDelay(Tomcat.this.backgroundProcessorDelay);, +				}, +			});, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.JspServlet;, +	@NestedConfigurationProperty, +	private JspServlet jspServlet;, +, +	public JspServlet jspServlet() {, +		return this.jspServlet;, +	}, +, +	public JspServlet getJspServlet() {, +		return this.jspServlet;, +	}, +, +	public void setJspServlet(JspServlet jspServlet) {, +		this.jspServlet = jspServlet;, +	}, +, +		if (getJspServlet() != null) {, +			container.setJspServlet(getJspServlet());, +		}, +			factory.addContextCustomizers(new TomcatContextCustomizer() {, +				@Override, +				public void customize(Context context) {, +					context.setBackgroundProcessorDelay(Tomcat.this.backgroundProcessorDelay);, +				}, +			});, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer.java, + * Copyright 2012-2015 the original author or authors., +import org.springframework.util.ClassUtils;, + * @author Andy Wilkinson, +	private JspServlet jspServlet = new JspServlet();, +, +		Assert.notNull(this.jspServlet);, +		this.jspServlet.setRegistered(registerJspServlet);, +		Assert.notNull(this.jspServlet);, +		this.jspServlet.setClassName(jspServletClassName);, +	@Override, +	public void setJspServlet(JspServlet jspServlet) {, +		this.jspServlet = jspServlet;, +	}, +, +	public JspServlet getJspServlet() {, +		return this.jspServlet;, +	/**, +	 * Returns whether or not he JSP servlet should be registered with the embedded, +	 * container., +	 * @return {@code true} if the container should be registered, otherwise {@code false}, +	 */, +	protected boolean shouldRegisterJspServlet() {, +		return this.jspServlet != null, +				&& this.jspServlet.getRegistered(), +				&& ClassUtils.isPresent(this.jspServlet.getClassName(), getClass(), +						.getClassLoader());, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.JspServlet;, +	@NestedConfigurationProperty, +	private JspServlet jspServlet;, +, +	public JspServlet jspServlet() {, +		return this.jspServlet;, +	}, +, +	public JspServlet getJspServlet() {, +		return this.jspServlet;, +	}, +, +	public void setJspServlet(JspServlet jspServlet) {, +		this.jspServlet = jspServlet;, +	}, +]