[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.java, +import org.springframework.util.ClassUtils;, +	private static final String DISABLED_SCANNER_CLASS = "org.hibernate.boot.archive.scan.internal.DisabledScanner";, +, +		applyScanner(result);, +	private void applyScanner(Map<String, Object> result) {, +		if (!result.containsKey(AvailableSettings.SCANNER), +				&& ClassUtils.isPresent(DISABLED_SCANNER_CLASS, null)) {, +			result.put(AvailableSettings.SCANNER, DISABLED_SCANNER_CLASS);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.java, +import org.springframework.util.ClassUtils;, +	private static final String DISABLED_SCANNER_CLASS = "org.hibernate.boot.archive.scan.internal.DisabledScanner";, +, +		applyScanner(result);, +	private void applyScanner(Map<String, Object> result) {, +		if (!result.containsKey(AvailableSettings.SCANNER), +				&& ClassUtils.isPresent(DISABLED_SCANNER_CLASS, null)) {, +			result.put(AvailableSettings.SCANNER, DISABLED_SCANNER_CLASS);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernatePropertiesTests.java, +	public void scannerUsesDisabledScannerByDefault() {, +		this.contextRunner.run(assertHibernateProperties(, +				(hibernateProperties) -> assertThat(hibernateProperties).containsEntry(, +						AvailableSettings.SCANNER,, +						"org.hibernate.boot.archive.scan.internal.DisabledScanner")));, +	}, +, +	@Test, +	public void scannerCanBeCustomized() {]