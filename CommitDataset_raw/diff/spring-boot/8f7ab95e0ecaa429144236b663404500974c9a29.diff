[+++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +import java.util.stream.Collectors;, +			return reader.lines(), +					.filter((line) -> !line.startsWith("Picked up ")), +					.collect(Collectors.toList());, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +import java.util.stream.Collectors;, +			return reader.lines(), +					.filter((line) -> !line.startsWith("Picked up ")), +					.collect(Collectors.toList());, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/maven/MavenSettings.java, +		reader.lines().forEach((line) -> writer.println(indent + line));, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +import java.util.stream.Collectors;, +			return reader.lines(), +					.filter((line) -> !line.startsWith("Picked up ")), +					.collect(Collectors.toList());, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/maven/MavenSettings.java, +		reader.lines().forEach((line) -> writer.println(indent + line));, +++ b/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import java.util.stream.Collectors;, +			return reader.lines().collect(Collectors.joining());, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +import java.util.stream.Collectors;, +			return reader.lines(), +					.filter((line) -> !line.startsWith("Picked up ")), +					.collect(Collectors.toList());, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/maven/MavenSettings.java, +		reader.lines().forEach((line) -> writer.println(indent + line));, +++ b/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import java.util.stream.Collectors;, +			return reader.lines().collect(Collectors.joining());, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/assertj/ApplicationContextAssert.java, +			reader.lines().forEach((line) -> {, +			});, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +import java.util.stream.Collectors;, +			return reader.lines(), +					.filter((line) -> !line.startsWith("Picked up ")), +					.collect(Collectors.toList());, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/maven/MavenSettings.java, +		reader.lines().forEach((line) -> writer.println(indent + line));, +++ b/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import java.util.stream.Collectors;, +			return reader.lines().collect(Collectors.joining());, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/assertj/ApplicationContextAssert.java, +			reader.lines().forEach((line) -> {, +			});, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/RunProcess.java, +			try (BufferedReader reader = new BufferedReader(, +					new InputStreamReader(process.getInputStream()))) {, +				reader.lines().forEach((line) -> {, +				});, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +import java.util.stream.Collectors;, +			return reader.lines(), +					.filter((line) -> !line.startsWith("Picked up ")), +					.collect(Collectors.toList());, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/maven/MavenSettings.java, +		reader.lines().forEach((line) -> writer.println(indent + line));, +++ b/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import java.util.stream.Collectors;, +			return reader.lines().collect(Collectors.joining());, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/assertj/ApplicationContextAssert.java, +			reader.lines().forEach((line) -> {, +			});, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/RunProcess.java, +			try (BufferedReader reader = new BufferedReader(, +					new InputStreamReader(process.getInputStream()))) {, +				reader.lines().forEach((line) -> {, +				});, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzerTests.java, +import java.util.stream.Collectors;, +		try (BufferedReader reader = new BufferedReader(, +			return reader.lines().collect(Collectors.toList());]