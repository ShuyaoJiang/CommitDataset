[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., + * @author Oliver Gierke, +	@Import(MongoRepositoriesAutoConfigureRegistrar.class), +, +		public Mongo mongo() throws UnknownHostException {, +		public MongoTemplate mongoTemplate(Mongo mongo) throws UnknownHostException {, +	@ConfigurationProperties(name = "spring.data.mongodb"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., + * @author Oliver Gierke, +	@Import(MongoRepositoriesAutoConfigureRegistrar.class), +, +		public Mongo mongo() throws UnknownHostException {, +		public MongoTemplate mongoTemplate(Mongo mongo) throws UnknownHostException {, +	@ConfigurationProperties(name = "spring.data.mongodb"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigureRegistrar.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., + * @author Oliver Gierke, +	@Import(MongoRepositoriesAutoConfigureRegistrar.class), +, +		public Mongo mongo() throws UnknownHostException {, +		public MongoTemplate mongoTemplate(Mongo mongo) throws UnknownHostException {, +	@ConfigurationProperties(name = "spring.data.mongodb"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigureRegistrar.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfigurationTests.java, + * @author Oliver Gierke, +				.getBean(org.springframework.boot.autoconfigure.data.alt.CityJpaRepository.class));, +	@EnableJpaRepositories(basePackageClasses = org.springframework.boot.autoconfigure.data.alt.CityJpaRepository.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., + * @author Oliver Gierke, +	@Import(MongoRepositoriesAutoConfigureRegistrar.class), +, +		public Mongo mongo() throws UnknownHostException {, +		public MongoTemplate mongoTemplate(Mongo mongo) throws UnknownHostException {, +	@ConfigurationProperties(name = "spring.data.mongodb"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigureRegistrar.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfigurationTests.java, + * @author Oliver Gierke, +				.getBean(org.springframework.boot.autoconfigure.data.alt.CityJpaRepository.class));, +	@EnableJpaRepositories(basePackageClasses = org.springframework.boot.autoconfigure.data.alt.CityJpaRepository.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigurationTests.java, +import org.springframework.boot.autoconfigure.data.alt.CityMongoDbRepository;, +import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;, +import com.mongodb.MongoClient;, +import static org.hamcrest.CoreMatchers.instanceOf;, +import static org.hamcrest.CoreMatchers.is;, +import static org.junit.Assert.assertThat;, + * @author Oliver Gierke, +, +		Mongo mongo = this.context.getBean(Mongo.class);, +		assertThat(mongo, is(instanceOf(MongoClient.class)));, +, +		Mongo mongo = this.context.getBean(Mongo.class);, +		assertThat(mongo, is(instanceOf(MongoClient.class)));, +	}, +, +	@Test, +	public void doesNotTriggerDefaultRepositoryDetectionIfCustomized() {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(CustomizedConfiguration.class,, +				MongoRepositoriesAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertNotNull(this.context.getBean(CityMongoDbRepository.class));, +	@Configuration, +	@TestAutoConfigurationPackage(MongoRepositoriesAutoConfigurationTests.class), +	@EnableMongoRepositories(basePackageClasses = CityMongoDbRepository.class), +	protected static class CustomizedConfiguration {, +, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfiguration.java, + * Copyright 2012-2014 the original author or authors., + * @author Oliver Gierke, +	@Import(MongoRepositoriesAutoConfigureRegistrar.class), +, +		public Mongo mongo() throws UnknownHostException {, +		public MongoTemplate mongoTemplate(Mongo mongo) throws UnknownHostException {, +	@ConfigurationProperties(name = "spring.data.mongodb"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigureRegistrar.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean;, +@ConditionalOnMissingBean(MongoRepositoryFactoryBean.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfigurationTests.java, + * @author Oliver Gierke]