[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityPropertiesTests.java, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.bind.Binder;, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +import org.springframework.boot.context.properties.source.MockConfigurationPropertySource;, +		bind("security.ignored", "/css/**");, +		bind("security.ignored", "");, +		bind("security.ignored", "none");, +		bind("security.ignored", "/css/**,/images/**");, +		MockConfigurationPropertySource source = new MockConfigurationPropertySource();, +		source.put("security.ignored[0]", "/css/**");, +		source.put("security.ignored[1]", "/foo/**");, +		bind(source);, +		bind("security.user.password", "${ADMIN_PASSWORD}");, +		bind("security.user.password", "");, +		bind("security.user.role", "USER,ADMIN");, +		bind("security.user.role", "ADMIN");, +	private void bind(String name, String value) {, +		bind(new MockConfigurationPropertySource(name, value));, +	}, +, +	private void bind(ConfigurationPropertySource source) {, +		new Binder(source).bind("security", Bindable.ofInstance(this.security));, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityPropertiesTests.java, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.bind.Binder;, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +import org.springframework.boot.context.properties.source.MockConfigurationPropertySource;, +		bind("security.ignored", "/css/**");, +		bind("security.ignored", "");, +		bind("security.ignored", "none");, +		bind("security.ignored", "/css/**,/images/**");, +		MockConfigurationPropertySource source = new MockConfigurationPropertySource();, +		source.put("security.ignored[0]", "/css/**");, +		source.put("security.ignored[1]", "/foo/**");, +		bind(source);, +		bind("security.user.password", "${ADMIN_PASSWORD}");, +		bind("security.user.password", "");, +		bind("security.user.role", "USER,ADMIN");, +		bind("security.user.role", "ADMIN");, +	private void bind(String name, String value) {, +		bind(new MockConfigurationPropertySource(name, value));, +	}, +, +	private void bind(ConfigurationPropertySource source) {, +		new Binder(source).bind("security", Bindable.ofInstance(this.security));, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.bind.Binder;, +import org.springframework.boot.context.properties.source.MockConfigurationPropertySource;, +		bind("server.address", "127.0.0.1");, +		bind("server.port", "9000");, +		bind("server.server-header", "Custom Server");, +		bind("server.connection-timeout", "60000");, +		bind("server.servlet.path", "/foo/*");, +		bind("server.servlet.path", "/foo");, +		map.put("server.tomcat.protocol-header", "X-Forwarded-Protocol");, +		map.put("server.tomcat.remote-ip-header", "Remote-Ip");, +		map.put("server.tomcat.internal-proxies", "10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}");, +		map.put("server.tomcat.background-processor-delay", "10");, +		bind(map);, +		bind(new HashMap<String, String>());, +		bind("server.servlet.context-path", "/foo/");, +		bind("server.servlet.context-path", "/");, +		bind("server.tomcat.uri-encoding", "US-ASCII");, +		bind("server.max-http-header-size", "9999");, +		bind("server.jetty.acceptors", "10");, +		bind("server.jetty.selectors", "10");, +		bind(map);, +	private void bind(String name, String value) {, +		bind(Collections.singletonMap(name, value));, +	}, +, +	private void bind(Map<String, String> map) {, +		MockConfigurationPropertySource source = new MockConfigurationPropertySource();, +		map.forEach(source::put);, +		new Binder(source).bind("server", Bindable.ofInstance(this.properties));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityPropertiesTests.java, +import org.springframework.boot.context.properties.bind.Bindable;, +import org.springframework.boot.context.properties.bind.Binder;, +import org.springframework.boot.context.properties.source.ConfigurationPropertySource;, +import org.springframework.boot.context.properties.source.MockConfigurationPropertySource;, +		bind("security.ignored", "/css/**");, +		bind("security.ignored", "");, +		bind("security.ignored", "none");, +		bind("security.ignored", "/css/**,/images/**");, +		MockConfigurationPropertySource source = new MockConfigurationPropertySource();, +		source.put("security.ignored[0]", "/css/**");, +		source.put("security.ignored[1]", "/foo/**");, +		bind(source);, +		bind("security.user.password", "${ADMIN_PASSWORD}");, +		bind("security.user.password", "");, +		bind("security.user.role", "USER,ADMIN");, +		bind("security.user.role", "ADMIN");, +	private void bind(String name, String value) {, +		bind(new MockConfigurationPropertySource(name, value));]