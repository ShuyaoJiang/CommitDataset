[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, +import org.springframework.web.util.pattern.PathPattern;, +	private static final String DATA_REST_PATH_PATTERN_ATTRIBUTE = "org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping.EFFECTIVE_REPOSITORY_RESOURCE_LOOKUP_PATH";, +, +		PathPattern dataRestPathPattern = (PathPattern) request, +				.getAttribute(DATA_REST_PATH_PATTERN_ATTRIBUTE);, +		if (dataRestPathPattern != null) {, +			return dataRestPathPattern.getPatternString();, +		}, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, +import org.springframework.web.util.pattern.PathPattern;, +	private static final String DATA_REST_PATH_PATTERN_ATTRIBUTE = "org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping.EFFECTIVE_REPOSITORY_RESOURCE_LOOKUP_PATH";, +, +		PathPattern dataRestPathPattern = (PathPattern) request, +				.getAttribute(DATA_REST_PATH_PATTERN_ATTRIBUTE);, +		if (dataRestPathPattern != null) {, +			return dataRestPathPattern.getPatternString();, +		}, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/WebMvcTagsTests.java, +import org.springframework.web.util.pattern.PathPatternParser;, +	public void uriTagIsDataRestsEffectiveRepositoryLookupPathWhenAvailable() {, +		this.request.setAttribute(, +				"org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping.EFFECTIVE_REPOSITORY_RESOURCE_LOOKUP_PATH",, +				new PathPatternParser().parse("/api/cities"));, +		this.request.setAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE,, +				"/api/{repository}");, +		Tag tag = WebMvcTags.uri(this.request, this.response);, +		assertThat(tag.getValue()).isEqualTo("/api/cities");, +	}, +, +	@Test]