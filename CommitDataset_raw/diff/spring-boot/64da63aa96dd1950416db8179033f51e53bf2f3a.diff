[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AbstractNestedCondition.java, +					ConditionMessage.empty());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AbstractNestedCondition.java, +					ConditionMessage.empty());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/AllNestedConditionsTests.java, +import org.springframework.context.annotation.Condition;, +import org.springframework.context.annotation.ConditionContext;, +import org.springframework.core.type.AnnotatedTypeMetadata;, +		@Conditional(NonSpringBootCondition.class), +		static class SubclassC {, +, +		}, +, +	}, +, +	static class NonSpringBootCondition implements Condition {, +, +		@Override, +		public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {, +			return true;, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AbstractNestedCondition.java, +					ConditionMessage.empty());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/AllNestedConditionsTests.java, +import org.springframework.context.annotation.Condition;, +import org.springframework.context.annotation.ConditionContext;, +import org.springframework.core.type.AnnotatedTypeMetadata;, +		@Conditional(NonSpringBootCondition.class), +		static class SubclassC {, +, +		}, +, +	}, +, +	static class NonSpringBootCondition implements Condition {, +, +		@Override, +		public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {, +			return true;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/AnyNestedConditionTests.java, +import org.springframework.context.annotation.Condition;, +import org.springframework.context.annotation.ConditionContext;, +import org.springframework.core.type.AnnotatedTypeMetadata;, +		@Conditional(NonSpringBootCondition.class), +		static class SubclassC {, +, +		}, +, +	}, +, +	static class NonSpringBootCondition implements Condition {, +, +		@Override, +		public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {, +			return false;, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AbstractNestedCondition.java, +					ConditionMessage.empty());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/AllNestedConditionsTests.java, +import org.springframework.context.annotation.Condition;, +import org.springframework.context.annotation.ConditionContext;, +import org.springframework.core.type.AnnotatedTypeMetadata;, +		@Conditional(NonSpringBootCondition.class), +		static class SubclassC {, +, +		}, +, +	}, +, +	static class NonSpringBootCondition implements Condition {, +, +		@Override, +		public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {, +			return true;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/AnyNestedConditionTests.java, +import org.springframework.context.annotation.Condition;, +import org.springframework.context.annotation.ConditionContext;, +import org.springframework.core.type.AnnotatedTypeMetadata;, +		@Conditional(NonSpringBootCondition.class), +		static class SubclassC {, +, +		}, +, +	}, +, +	static class NonSpringBootCondition implements Condition {, +, +		@Override, +		public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {, +			return false;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/condition/NoneNestedConditionsTests.java, +import org.springframework.context.annotation.Condition;]