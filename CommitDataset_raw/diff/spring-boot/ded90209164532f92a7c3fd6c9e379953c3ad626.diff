[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${spring.batch.initializer.enabled:true}"), +	private boolean enabled = true;, +, +		if (this.enabled) {, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${spring.batch.initializer.enabled:true}"), +	private boolean enabled = true;, +, +		if (this.enabled) {, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/AbstractRepositoryConfigurationSourceSupport.java, +			logger.info("Unable to find repository base packages.  If you need Repositories please define ", +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${spring.batch.initializer.enabled:true}"), +	private boolean enabled = true;, +, +		if (this.enabled) {, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/AbstractRepositoryConfigurationSourceSupport.java, +			logger.info("Unable to find repository base packages.  If you need Repositories please define ", +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/EmbeddedDataSourceConfiguration.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${spring.datasource.name:testdb}"), +	private String name = "testdb";, +, +		this.database = builder.setName(this.name).build();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${spring.batch.initializer.enabled:true}"), +	private boolean enabled = true;, +, +		if (this.enabled) {, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/AbstractRepositoryConfigurationSourceSupport.java, +			logger.info("Unable to find repository base packages.  If you need Repositories please define ", +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/EmbeddedDataSourceConfiguration.java, +import org.springframework.beans.factory.annotation.Value;, +	@Value("${spring.datasource.name:testdb}"), +	private String name = "testdb";, +, +		this.database = builder.setName(this.name).build();, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfigurationTests.java, +import javax.sql.DataSource;, +, +import org.junit.After;, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +import org.springframework.boot.TestUtils;, +import org.springframework.jdbc.BadSqlGrammarException;, +import org.springframework.jdbc.core.JdbcTemplate;, +import static org.junit.Assert.assertEquals;, +	@Rule, +	public ExpectedException expected = ExpectedException.none();, +, +	@After, +	public void close() {, +		if (this.context != null) {, +			this.context.close();, +		}, +	}, +, +		assertEquals(0, new JdbcTemplate(this.context.getBean(DataSource.class)), +				.queryForList("select * from BATCH_JOB_EXECUTION").size());, +	@Test, +	public void testDisableSchemaLoader() throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		TestUtils.addEnviroment(this.context, "spring.datasource.name:batchtest",, +				"spring.batch.initializer.enabled:false");, +		this.context.register(TestConfiguration.class, BatchAutoConfiguration.class,, +				EmbeddedDataSourceConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertNotNull(this.context.getBean(JobLauncher.class));, +		this.expected.expect(BadSqlGrammarException.class);, +		new JdbcTemplate(this.context.getBean(DataSource.class)), +				.queryForList("select * from BATCH_JOB_EXECUTION");, +	}, +]