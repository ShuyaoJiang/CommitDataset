[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/JpaPropertiesTests.java, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +	public void useNewIdGeneratorMappingsFalse() throws Exception {, +				"spring.jpa.hibernate.use-new-id-generator-mappings:false");, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "false");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/JpaPropertiesTests.java, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +	public void useNewIdGeneratorMappingsFalse() throws Exception {, +				"spring.jpa.hibernate.use-new-id-generator-mappings:false");, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "false");, +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/SampleDataJpaApplicationTests.java, +		"spring.datasource.jmx-enabled:true", "spring.jpa.hibernate.use-new-id-generator-mappings=false" }), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/JpaPropertiesTests.java, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +	public void useNewIdGeneratorMappingsFalse() throws Exception {, +				"spring.jpa.hibernate.use-new-id-generator-mappings:false");, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "false");, +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/SampleDataJpaApplicationTests.java, +		"spring.datasource.jmx-enabled:true", "spring.jpa.hibernate.use-new-id-generator-mappings=false" }), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/CityRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/JpaPropertiesTests.java, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +	public void useNewIdGeneratorMappingsFalse() throws Exception {, +				"spring.jpa.hibernate.use-new-id-generator-mappings:false");, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "false");, +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/SampleDataJpaApplicationTests.java, +		"spring.datasource.jmx-enabled:true", "spring.jpa.hibernate.use-new-id-generator-mappings=false" }), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/CityRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/HotelRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/JpaPropertiesTests.java, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +	public void useNewIdGeneratorMappingsFalse() throws Exception {, +				"spring.jpa.hibernate.use-new-id-generator-mappings:false");, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "false");, +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/SampleDataJpaApplicationTests.java, +		"spring.datasource.jmx-enabled:true", "spring.jpa.hibernate.use-new-id-generator-mappings=false" }), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/CityRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/HotelRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-rest/src/test/java/sample/data/rest/SampleDataRestApplicationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/JpaPropertiesTests.java, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +	public void useNewIdGeneratorMappingsFalse() throws Exception {, +				"spring.jpa.hibernate.use-new-id-generator-mappings:false");, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "false");, +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/SampleDataJpaApplicationTests.java, +		"spring.datasource.jmx-enabled:true", "spring.jpa.hibernate.use-new-id-generator-mappings=false" }), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/CityRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/HotelRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-rest/src/test/java/sample/data/rest/SampleDataRestApplicationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-rest/src/test/java/sample/data/rest/service/CityRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +				result.put(USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/JpaPropertiesTests.java, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +	public void useNewIdGeneratorMappingsFalse() throws Exception {, +				"spring.jpa.hibernate.use-new-id-generator-mappings:false");, +				.containsEntry(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "false");, +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/SampleDataJpaApplicationTests.java, +		"spring.datasource.jmx-enabled:true", "spring.jpa.hibernate.use-new-id-generator-mappings=false" }), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/CityRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-jpa/src/test/java/sample/data/jpa/service/HotelRepositoryIntegrationTests.java, +import org.springframework.test.context.TestPropertySource;, +@TestPropertySource(properties = "spring.jpa.hibernate.use-new-id-generator-mappings=false"), +++ b/spring-boot-samples/spring-boot-sample-data-rest/src/test/java/sample/data/rest/SampleDataRestApplicationTests.java]