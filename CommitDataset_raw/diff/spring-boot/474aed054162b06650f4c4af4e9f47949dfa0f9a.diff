[+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +			ConfigurableEnvironment environment = prepareEnvironment(listeners,, +					applicationArguments);, +			if (this.bannerMode != Banner.Mode.OFF) {, +				printBanner(environment);, +			}, +			context = createApplicationContext();, +			prepareContext(context, environment, listeners, applicationArguments);, +			refreshContext(context);, +	private ConfigurableEnvironment prepareEnvironment(, +		return environment;, +	private void prepareContext(ConfigurableApplicationContext context,, +			ConfigurableEnvironment environment, SpringApplicationRunListeners listeners,, +			ApplicationArguments applicationArguments) {, +	}, +	private void refreshContext(ConfigurableApplicationContext context) {, +		if (context == null || !context.isActive()) {, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +			ConfigurableEnvironment environment = prepareEnvironment(listeners,, +					applicationArguments);, +			if (this.bannerMode != Banner.Mode.OFF) {, +				printBanner(environment);, +			}, +			context = createApplicationContext();, +			prepareContext(context, environment, listeners, applicationArguments);, +			refreshContext(context);, +	private ConfigurableEnvironment prepareEnvironment(, +		return environment;, +	private void prepareContext(ConfigurableApplicationContext context,, +			ConfigurableEnvironment environment, SpringApplicationRunListeners listeners,, +			ApplicationArguments applicationArguments) {, +	}, +	private void refreshContext(ConfigurableApplicationContext context) {, +		if (context == null || !context.isActive()) {, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListener.java, + * Copyright 2012-2016 the original author or authors., +	 * @param context the application context or null if a failure occurred before the, +	 * context was created]