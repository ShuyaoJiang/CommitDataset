[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +			activeMqConnectionFactory = factoryClass, +					.getConstructor(String.class, String.class, String.class), +			activeMqConnectionFactory = factoryClass.getConstructor(String.class), +					.newInstance(brokerUrl);, +		if (packages.getTrustAll() != null) {, +			activeMqConnectionFactory.setTrustAllPackages(packages.getTrustAll());, +		}, +		if (!packages.getTrusted().isEmpty()) {, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +			activeMqConnectionFactory = factoryClass, +					.getConstructor(String.class, String.class, String.class), +			activeMqConnectionFactory = factoryClass.getConstructor(String.class), +					.newInstance(brokerUrl);, +		if (packages.getTrustAll() != null) {, +			activeMqConnectionFactory.setTrustAllPackages(packages.getTrustAll());, +		}, +		if (!packages.getTrusted().isEmpty()) {, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties.java, +		/**, +		 * Trust all packages., +		 */, +		private Boolean trustAll;, +		/**, +		 * The specific packages to trust (when not trusting all packages)., +		 */, +		public Boolean getTrustAll() {, +		public void setTrustAll(Boolean trustAll) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +			activeMqConnectionFactory = factoryClass, +					.getConstructor(String.class, String.class, String.class), +			activeMqConnectionFactory = factoryClass.getConstructor(String.class), +					.newInstance(brokerUrl);, +		if (packages.getTrustAll() != null) {, +			activeMqConnectionFactory.setTrustAllPackages(packages.getTrustAll());, +		}, +		if (!packages.getTrusted().isEmpty()) {, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties.java, +		/**, +		 * Trust all packages., +		 */, +		private Boolean trustAll;, +		/**, +		 * The specific packages to trust (when not trusting all packages)., +		 */, +		public Boolean getTrustAll() {, +		public void setTrustAll(Boolean trustAll) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQPropertiesTests.java, +	public void setTrustAllPackages() {, +	public void setTrustedPackages() {, +		ActiveMQConnectionFactory factory = new ActiveMQConnectionFactoryFactory(, +				this.properties).createConnectionFactory(ActiveMQConnectionFactory.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +			activeMqConnectionFactory = factoryClass, +					.getConstructor(String.class, String.class, String.class), +			activeMqConnectionFactory = factoryClass.getConstructor(String.class), +					.newInstance(brokerUrl);, +		if (packages.getTrustAll() != null) {, +			activeMqConnectionFactory.setTrustAllPackages(packages.getTrustAll());, +		}, +		if (!packages.getTrusted().isEmpty()) {, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties.java, +		/**, +		 * Trust all packages., +		 */, +		private Boolean trustAll;, +		/**, +		 * The specific packages to trust (when not trusting all packages)., +		 */, +		public Boolean getTrustAll() {, +		public void setTrustAll(Boolean trustAll) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQPropertiesTests.java, +	public void setTrustAllPackages() {, +	public void setTrustedPackages() {, +		ActiveMQConnectionFactory factory = new ActiveMQConnectionFactoryFactory(, +				this.properties).createConnectionFactory(ActiveMQConnectionFactory.class);, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +    spring.activemq.packages.trust-all= # Trust all packages, +    spring.activemq.packages.trusted= # The specific packages to trust (when not trusting all packages).]