[+++ b/README.md, +## Spring Boot CLI, +The Spring Boot CLI is a command line tool that can be used if you want to quickly , +prototype with Spring. It allows you to run [Groovy](http://groovy.codehaus.org/) scripts, , +which means that you have a familiar Java-like syntax, without so much boilerplate code., +You don't need to use the CLI to work with Spring Boot but it's definitely the quickest, +way to get a Spring application off the ground., +, +### Installing the CLI, +> **Note:** If you don't want to use the CLI,, +> [jump ahead to the Java example](#quick-start-java-example)., +, +You need [Java SDK v1.6](http://www.java.com) or higher to run the command line tool, +(there are even some issues with the `1.7.0_25` build of openjdk, so stick to earlier , +builds or use `1.6` for preference). You should check your current Java installation , +before you begin:, +### Manual installation, +You can download the Spring CLI distribution from the Spring software repository:, +* [spring-boot-cli-0.5.0.BUILD-SNAPSHOT-bin.zip](http://repo.springframework.org/milestone/org/springframework/boot/spring-boot-cli/0.5.0.M1/spring-boot-cli-0.5.0.M1-bin.zip), +* [spring-boot-cli-0.5.0.BUILD-SNAPSHOT-bin.tar.gz](http://repo.springframework.org/milestone/org/springframework/boot/spring-boot-cli/0.5.0.M1/spring-boot-cli-0.5.0.M1-bin.tar.gz), +, +Cutting edge [snapshot distributions](http://repo.springframework.org/snapshot/org/springframework/boot/spring-boot-cli/), +are also available., +, +Once downloaded, follow the [INSTALL](spring-boot-cli/src/main/content/INSTALL.txt) , +instructions from the unpacked archive., +, +### OSX Homebrew installation, +If you are on a Mac and using [homebrew](http://brew.sh/), all you need to do to install, +the Spring Boot CLI is:, +Homebrew will install `spring` to `/usr/local/bin`. Now you can jump right to a, +[quick start example](#quick-start-script-example)., +> **Note:** If you don't see the formula, you're installation of brew might be, +> out-of-date. Just execute `brew update` and try again., +### Quick start script example, +$ spring run app.groovy, +> **Note:** It will take some time when you first run the application as dependencies, +> are downloaded, subsequent runs will be much quicker., +Open [http://localhost:8080](http://localhost:8080) in your favorite web browser and you, +should see  the following output:, +> Hello World!, +, +## Spring Boot with Java, +an IDE you can. Here is how you build the same example using Java., +### Quick start Maven POM, +You will need to install [Apache Maven](http://maven.apache.org/) v3.0.5 or above to build, +this example., +, +Create a `pom.xml` to import the appropriate Spring Boot starters:, +<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance", +	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">, +, +	<groupId>com.example</groupId>, +, +	<!-- Inherit defaults from Spring Boot -->, +, +	<!-- Add typical dependencies for a web application -->, +, +	<!-- Package as an executable JAR -->, +				<groupId>org.springframework.boot</groupId>, +, +	<!-- Allow access to Spring milestones and snapshots -->, +	<!-- (you don't need this if you are using the GA release) -->, +			<id>spring-snapshots</id>, +			<url>http://repo.springsource.org/snapshot</url>, +			<snapshots><enabled>true</enabled></snapshots>, +		</repository>, +		<repository>, +			<id>spring-milestones</id>, +			<snapshots><enabled>true</enabled></snapshots>, +			<id>spring-snapshots</id>, +			<url>http://repo.springsource.org/snapshot</url>, +		</pluginRepository>, +		<pluginRepository>, +			<id>spring-milestones</id>, +> **Note:** If you prefer [Gradle](http://www.gradle.org) as your build system, we provide, +> a [plugin](spring-boot-tools/spring-boot-gradle-plugin/README.md) that can help you, +> package an executable JAR., +### Quick start Java example, +Here is the main class for a simple web application (just save the content to, +`src/main/java/SampleController.java`):, +Other than import statements, the main difference between this, +example and the earlier Groovy script is the `main()` method that calls, +`SpringApplication` and the `@EnableAutoConfiguration` annotation., +, +Open [http://localhost:8080](http://localhost:8080) in your favorite web browser and you, +should see  the following output:, +> Hello World!, +## Building Spring Boot from source, +You don't need to build from source to use Spring Boot (it's in, +[repo.springsource.org](http://repo.springsource.org)), but if you want to try out the, +latest and greatest, Spring Boot can be, +[built with maven](http://maven.apache.org/run-maven/index.html) v3.0.5 or above., +	$ mvn clean install, +, +_Also see [CONTRIBUTING.md](CONTRIBUTING.md) if you wish to submit pull requests._, +, +## Further Reading, +There are a number of modules in Spring Boot, if you want learn more about each one, +please refer to the appropriate README.md file:]