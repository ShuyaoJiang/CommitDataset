[+++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you're interested in how the build tool plugins work you can, +If you have specific build-related questions you can check out the, +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you're interested in how the build tool plugins work you can, +If you have specific build-related questions you can check out the, +++ b/spring-boot-docs/src/main/asciidoc/cloud-deployment.adoc, +Once you've built your application (using, for example, `mvn clean package`) and, +fit for tasks such as configuring a DataSource; it also lets you use Spring Cloud with, +Heroku., +You must configure your application to listen on the correct port. Here's the `Procfile`, +for our starter REST application:, +Your application should now be up and running on Heroku., +providers, since Spring Boot is so amenable to cloud-based deployment you're free to, +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you're interested in how the build tool plugins work you can, +If you have specific build-related questions you can check out the, +++ b/spring-boot-docs/src/main/asciidoc/cloud-deployment.adoc, +Once you've built your application (using, for example, `mvn clean package`) and, +fit for tasks such as configuring a DataSource; it also lets you use Spring Cloud with, +Heroku., +You must configure your application to listen on the correct port. Here's the `Procfile`, +for our starter REST application:, +Your application should now be up and running on Heroku., +providers, since Spring Boot is so amenable to cloud-based deployment you're free to, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +The Spring Boot auto-configuration tries its best to ``do the right thing'', but, +  {sc-spring-boot-autoconfigure}/web/ServerProperties.{sc-ext}[`ServerProperties`]), +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you're interested in how the build tool plugins work you can, +If you have specific build-related questions you can check out the, +++ b/spring-boot-docs/src/main/asciidoc/cloud-deployment.adoc, +Once you've built your application (using, for example, `mvn clean package`) and, +fit for tasks such as configuring a DataSource; it also lets you use Spring Cloud with, +Heroku., +You must configure your application to listen on the correct port. Here's the `Procfile`, +for our starter REST application:, +Your application should now be up and running on Heroku., +providers, since Spring Boot is so amenable to cloud-based deployment you're free to, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +The Spring Boot auto-configuration tries its best to ``do the right thing'', but, +  {sc-spring-boot-autoconfigure}/web/ServerProperties.{sc-ext}[`ServerProperties`]), +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +The way that endpoints are exposed will depend on the type of technology that you choose., +++ b/spring-boot-docs/src/main/asciidoc/build-tool-plugins.adoc, +If you're interested in how the build tool plugins work you can, +If you have specific build-related questions you can check out the, +++ b/spring-boot-docs/src/main/asciidoc/cloud-deployment.adoc, +Once you've built your application (using, for example, `mvn clean package`) and, +fit for tasks such as configuring a DataSource; it also lets you use Spring Cloud with, +Heroku., +You must configure your application to listen on the correct port. Here's the `Procfile`, +for our starter REST application:, +Your application should now be up and running on Heroku., +providers, since Spring Boot is so amenable to cloud-based deployment you're free to, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +The Spring Boot auto-configuration tries its best to ``do the right thing'', but, +  {sc-spring-boot-autoconfigure}/web/ServerProperties.{sc-ext}[`ServerProperties`]), +++ b/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +The way that endpoints are exposed will depend on the type of technology that you choose., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +environments. It allows you to create natural templates that can be correctly displayed, +If convention-based mapping is not flexible enough you can use the, +The default `AuthenticationManager` has a single user (``user'' username and random, +password, printed at INFO level when the application starts up). You can change the, +* Spring Data JPA -- Makes it easy to easily implement JPA-based repositories., +* JUnit -- The de-facto standard for unit testing Java applications., +These are common libraries that we generally find useful when writing tests. You are free, +If you have not used the `spring-test` module before you should start by reading the, +authentication (with a username and password). In either case the template will behave, +in a test-friendly way: not following redirects (so you can assert the response]