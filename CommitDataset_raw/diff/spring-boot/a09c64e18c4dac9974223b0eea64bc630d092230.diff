[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfigurationTests.java, +		this.contextRunner, +				.withPropertyValues("spring.ldap.embedded.port:1234",, +						"spring.ldap.embedded.base-dn:dc=spring,dc=org"), +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				"spring.ldap.embedded.base-dn:dc=spring,dc=org").run((context) -> {, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfigurationTests.java, +		this.contextRunner, +				.withPropertyValues("spring.ldap.embedded.port:1234",, +						"spring.ldap.embedded.base-dn:dc=spring,dc=org"), +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				"spring.ldap.embedded.base-dn:dc=spring,dc=org").run((context) -> {, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/reactive/WebFluxSecurityConfigurationTests.java, +				.run((context) -> assertThat(context), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfigurationTests.java, +		this.contextRunner, +				.withPropertyValues("spring.ldap.embedded.port:1234",, +						"spring.ldap.embedded.base-dn:dc=spring,dc=org"), +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				"spring.ldap.embedded.base-dn:dc=spring,dc=org").run((context) -> {, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/reactive/WebFluxSecurityConfigurationTests.java, +				.run((context) -> assertThat(context), +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/JavaPluginAction.java, +		configureArtifactPublication(bootJar);, +	private void configureArtifactPublication(BootJar bootJar) {, +		project.afterEvaluate((evaluated) ->, +					this::configureAdditionalMetadataLocations));, +	private void configureAdditionalMetadataLocations(JavaCompile compile) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfigurationTests.java, +		this.contextRunner, +				.withPropertyValues("spring.ldap.embedded.port:1234",, +						"spring.ldap.embedded.base-dn:dc=spring,dc=org"), +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				"spring.ldap.embedded.base-dn:dc=spring,dc=org").run((context) -> {, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/reactive/WebFluxSecurityConfigurationTests.java, +				.run((context) -> assertThat(context), +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/JavaPluginAction.java, +		configureArtifactPublication(bootJar);, +	private void configureArtifactPublication(BootJar bootJar) {, +		project.afterEvaluate((evaluated) ->, +					this::configureAdditionalMetadataLocations));, +	private void configureAdditionalMetadataLocations(JavaCompile compile) {, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/buildinfo/BuildInfoProperties.java, + * Copyright 2012-2018 the original author or authors., +@SuppressWarnings("serial"), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfigurationTests.java, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ldap/embedded/EmbeddedLdapAutoConfigurationTests.java, +		this.contextRunner, +				.withPropertyValues("spring.ldap.embedded.port:1234",, +						"spring.ldap.embedded.base-dn:dc=spring,dc=org"), +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				"spring.ldap.embedded.base-dn:dc=spring,dc=org").run((context) -> {, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/reactive/WebFluxSecurityConfigurationTests.java, +				.run((context) -> assertThat(context)]