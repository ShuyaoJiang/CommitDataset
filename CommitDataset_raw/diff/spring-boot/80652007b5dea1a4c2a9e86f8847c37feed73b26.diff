[+++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedDataBinder.java, +		if (descriptor == null) {, +			descriptor = TypeDescriptor.valueOf(Object.class);, +		}, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedDataBinder.java, +		if (descriptor == null) {, +			descriptor = TypeDescriptor.valueOf(Object.class);, +		}, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/RelaxedDataBinderTests.java, +	public void testBindNestedUntypedMap() throws Exception {, +		TargetWithNestedUntypedMap target = new TargetWithNestedUntypedMap();, +		bind(target, "nested.foo: bar\n" + "nested.value: 123");, +		assertEquals("123", target.getNested().get("value"));, +	}, +	, +	@Test, +	@SuppressWarnings("rawtypes"), +	public static class TargetWithNestedUntypedMap {, +, +		private Map nested;, +, +		public Map getNested() {, +			return this.nested;, +		}, +, +		public void setNested(Map nested) {, +			this.nested = nested;, +		}, +, +	}, +, +]