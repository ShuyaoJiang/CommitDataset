[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +		boolean skipSslValidation = Boolean.parseBoolean(, +				environment.getProperty("management.cloudfoundry.skipSslValidation"));, +				: new CloudFoundrySecurityService(restTemplateBuilder, cloudControllerUrl,, +						skipSslValidation);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +		boolean skipSslValidation = Boolean.parseBoolean(, +				environment.getProperty("management.cloudfoundry.skipSslValidation"));, +				: new CloudFoundrySecurityService(restTemplateBuilder, cloudControllerUrl,, +						skipSslValidation);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityService.java, +			String cloudControllerUrl, boolean skipSslValidation) {, +		if (skipSslValidation) {, +			restTemplateBuilder = restTemplateBuilder, +					.requestFactory(SkipSslVerificationHttpRequestFactory.class);, +		}, +		this.restTemplate = restTemplateBuilder.build();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +		boolean skipSslValidation = Boolean.parseBoolean(, +				environment.getProperty("management.cloudfoundry.skipSslValidation"));, +				: new CloudFoundrySecurityService(restTemplateBuilder, cloudControllerUrl,, +						skipSslValidation);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityService.java, +			String cloudControllerUrl, boolean skipSslValidation) {, +		if (skipSslValidation) {, +			restTemplateBuilder = restTemplateBuilder, +					.requestFactory(SkipSslVerificationHttpRequestFactory.class);, +		}, +		this.restTemplate = restTemplateBuilder.build();, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +import org.springframework.web.client.RestTemplate;, +	public void skipSslValidation() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"management.cloudfoundry.skipSslValidation:true");, +		this.context.refresh();, +		CloudFoundryEndpointHandlerMapping handlerMapping = getHandlerMapping();, +		Object interceptor = ReflectionTestUtils.getField(handlerMapping,, +				"securityInterceptor");, +		Object interceptorSecurityService = ReflectionTestUtils.getField(interceptor,, +				"cloudFoundrySecurityService");, +		RestTemplate restTemplate = (RestTemplate) ReflectionTestUtils, +				.getField(interceptorSecurityService, "restTemplate");, +		assertThat(restTemplate.getRequestFactory()), +				.isInstanceOf(SkipSslVerificationHttpRequestFactory.class);, +	}, +, +	@Test, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +		boolean skipSslValidation = Boolean.parseBoolean(, +				environment.getProperty("management.cloudfoundry.skipSslValidation"));, +				: new CloudFoundrySecurityService(restTemplateBuilder, cloudControllerUrl,, +						skipSslValidation);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityService.java, +			String cloudControllerUrl, boolean skipSslValidation) {, +		if (skipSslValidation) {, +			restTemplateBuilder = restTemplateBuilder, +					.requestFactory(SkipSslVerificationHttpRequestFactory.class);, +		}, +		this.restTemplate = restTemplateBuilder.build();, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundryActuatorAutoConfigurationTests.java, +import org.springframework.web.client.RestTemplate;, +	public void skipSslValidation() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"management.cloudfoundry.skipSslValidation:true");, +		this.context.refresh();, +		CloudFoundryEndpointHandlerMapping handlerMapping = getHandlerMapping();, +		Object interceptor = ReflectionTestUtils.getField(handlerMapping,, +				"securityInterceptor");, +		Object interceptorSecurityService = ReflectionTestUtils.getField(interceptor,, +				"cloudFoundrySecurityService");, +		RestTemplate restTemplate = (RestTemplate) ReflectionTestUtils, +				.getField(interceptorSecurityService, "restTemplate");, +		assertThat(restTemplate.getRequestFactory()), +				.isInstanceOf(SkipSslVerificationHttpRequestFactory.class);, +	}, +, +	@Test, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/cloudfoundry/CloudFoundrySecurityServiceTests.java, +import org.springframework.test.util.ReflectionTestUtils;, +import org.springframework.web.client.RestTemplate;, +		this.securityService = new CloudFoundrySecurityService(builder, CLOUD_CONTROLLER,, +				false);, +	public void skipSslValidationWhenTrue() throws Exception {, +		RestTemplateBuilder builder = new RestTemplateBuilder();, +		this.securityService = new CloudFoundrySecurityService(builder, CLOUD_CONTROLLER,, +				true);, +		RestTemplate restTemplate = (RestTemplate) ReflectionTestUtils, +				.getField(this.securityService, "restTemplate");, +		assertThat(restTemplate.getRequestFactory()), +				.isInstanceOf(SkipSslVerificationHttpRequestFactory.class);, +	}, +, +	@Test, +	public void doNotskipSslValidationWhenFalse() throws Exception {, +		RestTemplateBuilder builder = new RestTemplateBuilder();, +		this.securityService = new CloudFoundrySecurityService(builder, CLOUD_CONTROLLER,, +				false);, +		RestTemplate restTemplate = (RestTemplate) ReflectionTestUtils, +				.getField(this.securityService, "restTemplate");, +		assertThat(restTemplate.getRequestFactory())]