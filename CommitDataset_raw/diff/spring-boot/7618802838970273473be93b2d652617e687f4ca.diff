[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoProviderAutoConfiguration.java, +		return new EnvironmentInfoProvider(this.environment);, +		return new ScmGitPropertiesInfoProvider(this.gitProperties);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoProviderAutoConfiguration.java, +		return new EnvironmentInfoProvider(this.environment);, +		return new ScmGitPropertiesInfoProvider(this.gitProperties);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, + * The information, which the {@link InfoEndpoint} can provide can be customized to, + * display any information, however initially the info endpoint will provide git version, + * information (if available) and environment information,whose entries are prefixed with, + * info., + * In order to add additional information to the endpoint, one has to implement a class,, + * which implements the {@link org.springframework.boot.actuate.info.InfoProvider}, + * interface and register it in the application context. The InfoEndpoint will, + * automatically pick it up, when it is being instantiated., + * The standard InfoProvider for GIT is registered as the scmInfoProvider, and the, + * registration can be changed in case standard provider does not meet ones requirements., +		for (InfoProvider provider : this.infoProviders.values()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoProviderAutoConfiguration.java, +		return new EnvironmentInfoProvider(this.environment);, +		return new ScmGitPropertiesInfoProvider(this.gitProperties);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, + * The information, which the {@link InfoEndpoint} can provide can be customized to, + * display any information, however initially the info endpoint will provide git version, + * information (if available) and environment information,whose entries are prefixed with, + * info., + * In order to add additional information to the endpoint, one has to implement a class,, + * which implements the {@link org.springframework.boot.actuate.info.InfoProvider}, + * interface and register it in the application context. The InfoEndpoint will, + * automatically pick it up, when it is being instantiated., + * The standard InfoProvider for GIT is registered as the scmInfoProvider, and the, + * registration can be changed in case standard provider does not meet ones requirements., +		for (InfoProvider provider : this.infoProviders.values()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/EnvironmentInfoProvider.java, +, + * A {@link InfoProvider} that provides all environment entries prefixed with, + * info., +, +		this.info = new Info(extractInfoFromEnvironment());, +		return this.info;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoProviderAutoConfiguration.java, +		return new EnvironmentInfoProvider(this.environment);, +		return new ScmGitPropertiesInfoProvider(this.gitProperties);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, + * The information, which the {@link InfoEndpoint} can provide can be customized to, + * display any information, however initially the info endpoint will provide git version, + * information (if available) and environment information,whose entries are prefixed with, + * info., + * In order to add additional information to the endpoint, one has to implement a class,, + * which implements the {@link org.springframework.boot.actuate.info.InfoProvider}, + * interface and register it in the application context. The InfoEndpoint will, + * automatically pick it up, when it is being instantiated., + * The standard InfoProvider for GIT is registered as the scmInfoProvider, and the, + * registration can be changed in case standard provider does not meet ones requirements., +		for (InfoProvider provider : this.infoProviders.values()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/EnvironmentInfoProvider.java, +, + * A {@link InfoProvider} that provides all environment entries prefixed with, + * info., +, +		this.info = new Info(extractInfoFromEnvironment());, +		return this.info;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/Info.java, + * Carries information from a specific info provider., + * @see org.springframework.boot.actuate.endpoint.InfoEndpoint, +	 * Return the content., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/InfoProviderAutoConfiguration.java, +		return new EnvironmentInfoProvider(this.environment);, +		return new ScmGitPropertiesInfoProvider(this.gitProperties);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/InfoEndpoint.java, + * The information, which the {@link InfoEndpoint} can provide can be customized to, + * display any information, however initially the info endpoint will provide git version, + * information (if available) and environment information,whose entries are prefixed with, + * info., + * In order to add additional information to the endpoint, one has to implement a class,, + * which implements the {@link org.springframework.boot.actuate.info.InfoProvider}, + * interface and register it in the application context. The InfoEndpoint will, + * automatically pick it up, when it is being instantiated., + * The standard InfoProvider for GIT is registered as the scmInfoProvider, and the, + * registration can be changed in case standard provider does not meet ones requirements., +		for (InfoProvider provider : this.infoProviders.values()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/EnvironmentInfoProvider.java, +, + * A {@link InfoProvider} that provides all environment entries prefixed with, + * info., +, +		this.info = new Info(extractInfoFromEnvironment());, +		return this.info;, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/Info.java, + * Carries information from a specific info provider., + * @see org.springframework.boot.actuate.endpoint.InfoEndpoint, +	 * Return the content., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/info/InfoProvider.java, +/*]