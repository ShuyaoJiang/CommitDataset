[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +		protected final void deduceEndpointHandlerMappingIfMissing() {, +			if (this.endpointHandlerMapping == null) {, +				ApplicationContext context = (this.contextResolver == null ? null, +						: this.contextResolver.getApplicationContext());, +				if (context != null, +						&& context.getBeanNamesForType(EndpointHandlerMapping.class).length > 0) {, +					this.endpointHandlerMapping = context, +							.getBean(EndpointHandlerMapping.class);, +				}, +				if (this.endpointHandlerMapping == null) {, +					this.endpointHandlerMapping = new EndpointHandlerMapping(, +							Collections.<MvcEndpoint> emptySet());, +				}, +			}, +		}, +, +				ManagementWebSecurityConfigurerAdapter.this, +						.deduceEndpointHandlerMappingIfMissing();, +					this.delegate = createDelegate();, +, +			private RequestMatcher createDelegate() {, +				ServerProperties server = ManagementWebSecurityConfigurerAdapter.this.server;, +				List<RequestMatcher> matchers = new ArrayList<RequestMatcher>();, +				for (String path : getPaths()) {, +					matchers.add(new AntPathRequestMatcher(server.getPath(path)));, +				}, +				return (matchers.isEmpty() ? AnyRequestMatcher.INSTANCE, +						: new OrRequestMatcher(matchers));, +			}, +, +			private String[] getPaths() {, +				EndpointHandlerMapping endpointHandlerMapping = ManagementWebSecurityConfigurerAdapter.this.endpointHandlerMapping;, +				if (this.sensitive) {, +					return getEndpointPaths(endpointHandlerMapping);, +				}, +				return getEndpointPaths(endpointHandlerMapping, false);, +			}, +]