[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.java, +			private static final String REST_CONFIGURATION_CLASS = "org.springframework.", +					+ "data.rest.core.config.RepositoryRestConfiguration";, +, +				if (!ClassUtils.isPresent(REST_CONFIGURATION_CLASS, null)) {, +				return getMatchOutcome(context,, +						ClassUtils.resolveClassName(REST_CONFIGURATION_CLASS, null));, +			}, +, +			private ConditionOutcome getMatchOutcome(ConditionContext context,, +					Class<?> configurationClass) {, +				if (beanFactory.getBeanNamesForType(configurationClass, true, false).length == 0) {, +				String path = getManagementContextPath(beanFactory, environment);, +				if (isHome(path)) {, +					path = getProperty(environment, "endpoints.links.", "path");, +					if (isHome(path)) {, +						return ConditionOutcome.noMatch("Management context path ", +								+ "is home and so is links path");, +					}, +					return ConditionOutcome.match("Management context path ", +							+ "is home but links path is not: '" + path + "'");, +				}, +				// N.B. we don't cover the case where the user has Spring Data REST, +				// but changes *its* home page - you'd have to instantiate the, +				// RepositoryRestConfiguration and look at it's basePath for that., +				return ConditionOutcome.match("Management context path ", +						+ "is not home: '" + path + "'");, +			}, +, +			private String getManagementContextPath(, +					ConfigurableListableBeanFactory beanFactory, Environment environment) {, +					path = beanFactory.getBean(ManagementServerProperties.class), +							.getContextPath();, +				return path;, +			private boolean isHome(String path) {, +			private String getProperty(Environment environment, String prefix, String name) {, +			private <T> boolean hasCustomBeanDefinition(, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.java, +			private static final String REST_CONFIGURATION_CLASS = "org.springframework.", +					+ "data.rest.core.config.RepositoryRestConfiguration";, +, +				if (!ClassUtils.isPresent(REST_CONFIGURATION_CLASS, null)) {, +				return getMatchOutcome(context,, +						ClassUtils.resolveClassName(REST_CONFIGURATION_CLASS, null));, +			}, +, +			private ConditionOutcome getMatchOutcome(ConditionContext context,, +					Class<?> configurationClass) {, +				if (beanFactory.getBeanNamesForType(configurationClass, true, false).length == 0) {, +				String path = getManagementContextPath(beanFactory, environment);, +				if (isHome(path)) {, +					path = getProperty(environment, "endpoints.links.", "path");, +					if (isHome(path)) {, +						return ConditionOutcome.noMatch("Management context path ", +								+ "is home and so is links path");, +					}, +					return ConditionOutcome.match("Management context path ", +							+ "is home but links path is not: '" + path + "'");, +				}, +				// N.B. we don't cover the case where the user has Spring Data REST, +				// but changes *its* home page - you'd have to instantiate the, +				// RepositoryRestConfiguration and look at it's basePath for that., +				return ConditionOutcome.match("Management context path ", +						+ "is not home: '" + path + "'");, +			}, +, +			private String getManagementContextPath(, +					ConfigurableListableBeanFactory beanFactory, Environment environment) {, +					path = beanFactory.getBean(ManagementServerProperties.class), +							.getContextPath();, +				return path;, +			private boolean isHome(String path) {, +			private String getProperty(Environment environment, String prefix, String name) {, +			private <T> boolean hasCustomBeanDefinition(, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EndpointHandlerMapping.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.java, +			private static final String REST_CONFIGURATION_CLASS = "org.springframework.", +					+ "data.rest.core.config.RepositoryRestConfiguration";, +, +				if (!ClassUtils.isPresent(REST_CONFIGURATION_CLASS, null)) {, +				return getMatchOutcome(context,, +						ClassUtils.resolveClassName(REST_CONFIGURATION_CLASS, null));, +			}, +, +			private ConditionOutcome getMatchOutcome(ConditionContext context,, +					Class<?> configurationClass) {, +				if (beanFactory.getBeanNamesForType(configurationClass, true, false).length == 0) {, +				String path = getManagementContextPath(beanFactory, environment);, +				if (isHome(path)) {, +					path = getProperty(environment, "endpoints.links.", "path");, +					if (isHome(path)) {, +						return ConditionOutcome.noMatch("Management context path ", +								+ "is home and so is links path");, +					}, +					return ConditionOutcome.match("Management context path ", +							+ "is home but links path is not: '" + path + "'");, +				}, +				// N.B. we don't cover the case where the user has Spring Data REST, +				// but changes *its* home page - you'd have to instantiate the, +				// RepositoryRestConfiguration and look at it's basePath for that.]