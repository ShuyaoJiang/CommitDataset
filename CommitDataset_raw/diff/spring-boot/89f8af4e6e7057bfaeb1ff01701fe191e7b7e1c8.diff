[+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +	/**, +	 * Returns the absolute temp dir for given servlet container., +	 * @param prefix servlet container name, +	 * @return The temp dir for given servlet container., +	 */, +	protected File createTempDir(String prefix) {, +		try {, +			File tempFolder = File.createTempFile(prefix + ".", "." + getPort());, +			tempFolder.delete();, +			tempFolder.mkdir();, +			tempFolder.deleteOnExit();, +			return tempFolder;, +		}, +		catch (IOException ex) {, +			throw new EmbeddedServletContainerException(, +					"Unable to create tempdir. java.io.tmpdir is set to ", +							+ System.getProperty("java.io.tmpdir"),, +					ex);, +		}, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +	/**, +	 * Returns the absolute temp dir for given servlet container., +	 * @param prefix servlet container name, +	 * @return The temp dir for given servlet container., +	 */, +	protected File createTempDir(String prefix) {, +		try {, +			File tempFolder = File.createTempFile(prefix + ".", "." + getPort());, +			tempFolder.delete();, +			tempFolder.mkdir();, +			tempFolder.deleteOnExit();, +			return tempFolder;, +		}, +		catch (IOException ex) {, +			throw new EmbeddedServletContainerException(, +					"Unable to create tempdir. java.io.tmpdir is set to ", +							+ System.getProperty("java.io.tmpdir"),, +					ex);, +		}, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +		root = (root != null ? root : createTempDir("jetty-docbase"));, +				handler.setBaseResource(Resource.newResource(root.getCanonicalFile()));, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +	/**, +	 * Returns the absolute temp dir for given servlet container., +	 * @param prefix servlet container name, +	 * @return The temp dir for given servlet container., +	 */, +	protected File createTempDir(String prefix) {, +		try {, +			File tempFolder = File.createTempFile(prefix + ".", "." + getPort());, +			tempFolder.delete();, +			tempFolder.mkdir();, +			tempFolder.deleteOnExit();, +			return tempFolder;, +		}, +		catch (IOException ex) {, +			throw new EmbeddedServletContainerException(, +					"Unable to create tempdir. java.io.tmpdir is set to ", +							+ System.getProperty("java.io.tmpdir"),, +					ex);, +		}, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +		root = (root != null ? root : createTempDir("jetty-docbase"));, +				handler.setBaseResource(Resource.newResource(root.getCanonicalFile()));, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactory.java, +	/**, +	 * Returns the absolute temp dir for given servlet container., +	 * @param prefix servlet container name, +	 * @return The temp dir for given servlet container., +	 */, +	protected File createTempDir(String prefix) {, +		try {, +			File tempFolder = File.createTempFile(prefix + ".", "." + getPort());, +			tempFolder.delete();, +			tempFolder.mkdir();, +			tempFolder.deleteOnExit();, +			return tempFolder;, +		}, +		catch (IOException ex) {, +			throw new EmbeddedServletContainerException(, +					"Unable to create tempdir. java.io.tmpdir is set to ", +							+ System.getProperty("java.io.tmpdir"),, +					ex);, +		}, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +		root = (root != null ? root : createTempDir("jetty-docbase"));, +				handler.setBaseResource(Resource.newResource(root.getCanonicalFile()));, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.java, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/undertow/UndertowEmbeddedServletContainerFactory.java]