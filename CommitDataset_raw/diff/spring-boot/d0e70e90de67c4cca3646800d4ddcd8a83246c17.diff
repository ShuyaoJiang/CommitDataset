[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.springframework.boot.jdbc.metadata.CompositeDataSourcePoolMetadataProvider;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider;, +	private static final String PROVIDER_DISABLES_AUTOCOMMIT = "hibernate.connection.provider_disables_autocommit";, +, +	private final Collection<DataSourcePoolMetadataProvider> metadataProviders;, +			ObjectProvider<Collection<DataSourcePoolMetadataProvider>> metadataProviders,, +		this.metadataProviders = metadataProviders.getIfAvailable();, +		if (!vendorProperties.containsKey(PROVIDER_DISABLES_AUTOCOMMIT)) {, +			configureProviderDisablesAutocommit(vendorProperties);, +		}, +	private void configureProviderDisablesAutocommit(Map<String, Object> vendorProperties) {, +		CompositeDataSourcePoolMetadataProvider poolMetadataProvider = new CompositeDataSourcePoolMetadataProvider(, +			this.metadataProviders);, +		DataSourcePoolMetadata poolMetadata = poolMetadataProvider, +			.getDataSourcePoolMetadata(getDataSource());, +		if (poolMetadata != null, +			&& Boolean.FALSE.equals(poolMetadata.getDefaultAutoCommit()), +			&& getJtaTransactionManager() == null) {, +			vendorProperties.put(PROVIDER_DISABLES_AUTOCOMMIT, "true");, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.springframework.boot.jdbc.metadata.CompositeDataSourcePoolMetadataProvider;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider;, +	private static final String PROVIDER_DISABLES_AUTOCOMMIT = "hibernate.connection.provider_disables_autocommit";, +, +	private final Collection<DataSourcePoolMetadataProvider> metadataProviders;, +			ObjectProvider<Collection<DataSourcePoolMetadataProvider>> metadataProviders,, +		this.metadataProviders = metadataProviders.getIfAvailable();, +		if (!vendorProperties.containsKey(PROVIDER_DISABLES_AUTOCOMMIT)) {, +			configureProviderDisablesAutocommit(vendorProperties);, +		}, +	private void configureProviderDisablesAutocommit(Map<String, Object> vendorProperties) {, +		CompositeDataSourcePoolMetadataProvider poolMetadataProvider = new CompositeDataSourcePoolMetadataProvider(, +			this.metadataProviders);, +		DataSourcePoolMetadata poolMetadata = poolMetadataProvider, +			.getDataSourcePoolMetadata(getDataSource());, +		if (poolMetadata != null, +			&& Boolean.FALSE.equals(poolMetadata.getDefaultAutoCommit()), +			&& getJtaTransactionManager() == null) {, +			vendorProperties.put(PROVIDER_DISABLES_AUTOCOMMIT, "true");, +		}, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/CommonsDbcp2DataSourcePoolMetadata.java, +	@Override, +	public Boolean getDefaultAutoCommit() {, +		return getDataSource().getDefaultAutoCommit();, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.springframework.boot.jdbc.metadata.CompositeDataSourcePoolMetadataProvider;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider;, +	private static final String PROVIDER_DISABLES_AUTOCOMMIT = "hibernate.connection.provider_disables_autocommit";, +, +	private final Collection<DataSourcePoolMetadataProvider> metadataProviders;, +			ObjectProvider<Collection<DataSourcePoolMetadataProvider>> metadataProviders,, +		this.metadataProviders = metadataProviders.getIfAvailable();, +		if (!vendorProperties.containsKey(PROVIDER_DISABLES_AUTOCOMMIT)) {, +			configureProviderDisablesAutocommit(vendorProperties);, +		}, +	private void configureProviderDisablesAutocommit(Map<String, Object> vendorProperties) {, +		CompositeDataSourcePoolMetadataProvider poolMetadataProvider = new CompositeDataSourcePoolMetadataProvider(, +			this.metadataProviders);, +		DataSourcePoolMetadata poolMetadata = poolMetadataProvider, +			.getDataSourcePoolMetadata(getDataSource());, +		if (poolMetadata != null, +			&& Boolean.FALSE.equals(poolMetadata.getDefaultAutoCommit()), +			&& getJtaTransactionManager() == null) {, +			vendorProperties.put(PROVIDER_DISABLES_AUTOCOMMIT, "true");, +		}, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/CommonsDbcp2DataSourcePoolMetadata.java, +	@Override, +	public Boolean getDefaultAutoCommit() {, +		return getDataSource().getDefaultAutoCommit();, +	}, +, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/DataSourcePoolMetadata.java, +	/**, +	 * The default auto-commit state of connections created by this pool., +	 * If not set ({@code null}), default is JDBC driver default, +	 * (If set to null then the java.sql.Connection.setAutoCommit(boolean) method will not be called.), +	 * @return the default auto-commit state or {@code null}, +	 */, +	Boolean getDefaultAutoCommit();, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.java, +import org.springframework.boot.jdbc.metadata.CompositeDataSourcePoolMetadataProvider;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata;, +import org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider;, +	private static final String PROVIDER_DISABLES_AUTOCOMMIT = "hibernate.connection.provider_disables_autocommit";, +, +	private final Collection<DataSourcePoolMetadataProvider> metadataProviders;]