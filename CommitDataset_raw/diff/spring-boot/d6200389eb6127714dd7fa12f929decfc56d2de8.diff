[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +|`${Ansi.NAME}`,, +|Where `NAME` is the name of an ANSI escape code. See, +{sc-spring-boot}/ansi/AnsiPropertySource.{sc-ext}[`AnsiPropertySource`] for details., +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +|`${Ansi.NAME}`,, +|Where `NAME` is the name of an ANSI escape code. See, +{sc-spring-boot}/ansi/AnsiPropertySource.{sc-ext}[`AnsiPropertySource`] for details., +++ b/spring-boot/src/main/java/org/springframework/boot/ResourceBanner.java, +import org.springframework.boot.ansi.AnsiPropertySource;, +		resolvers.add(getAnsiResolver());, +	private PropertyResolver getAnsiResolver() {, +		MutablePropertySources sources = new MutablePropertySources();, +		sources.addFirst(new AnsiPropertySource("ansi", true));, +		return new PropertySourcesPropertyResolver(sources);, +	}, +, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +|`${Ansi.NAME}`,, +|Where `NAME` is the name of an ANSI escape code. See, +{sc-spring-boot}/ansi/AnsiPropertySource.{sc-ext}[`AnsiPropertySource`] for details., +++ b/spring-boot/src/main/java/org/springframework/boot/ResourceBanner.java, +import org.springframework.boot.ansi.AnsiPropertySource;, +		resolvers.add(getAnsiResolver());, +	private PropertyResolver getAnsiResolver() {, +		MutablePropertySources sources = new MutablePropertySources();, +		sources.addFirst(new AnsiPropertySource("ansi", true));, +		return new PropertySourcesPropertyResolver(sources);, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringBootBanner.java, +import static org.springframework.boot.ansi.AnsiColor.DEFAULT;, +import static org.springframework.boot.ansi.AnsiColor.GREEN;, +import static org.springframework.boot.ansi.AnsiStyle.FAINT;, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +, +|`${Ansi.NAME}`,, +|Where `NAME` is the name of an ANSI escape code. See, +{sc-spring-boot}/ansi/AnsiPropertySource.{sc-ext}[`AnsiPropertySource`] for details., +++ b/spring-boot/src/main/java/org/springframework/boot/ResourceBanner.java, +import org.springframework.boot.ansi.AnsiPropertySource;, +		resolvers.add(getAnsiResolver());, +	private PropertyResolver getAnsiResolver() {, +		MutablePropertySources sources = new MutablePropertySources();, +		sources.addFirst(new AnsiPropertySource("ansi", true));, +		return new PropertySourcesPropertyResolver(sources);, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringBootBanner.java, +import static org.springframework.boot.ansi.AnsiColor.DEFAULT;, +import static org.springframework.boot.ansi.AnsiColor.GREEN;, +import static org.springframework.boot.ansi.AnsiStyle.FAINT;, +++ b/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiBackground.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.ansi;, +, +/**, + * {@link AnsiElement Ansi} background colors., + *, + * @author Phillip Webb, + * @author Geoffrey Chandler, + * @since 1.3.0, + */, +public enum AnsiBackground implements AnsiElement {, +, +	DEFAULT("49"),, +, +	BLACK("40"),, +, +	RED("41"),, +, +	GREEN("42"),, +, +	YELLOW("43"),, +, +	BLUE("44"),, +, +	MAGENTA("45"),, +, +	CYAN("46"),, +, +	WHITE("47"),]