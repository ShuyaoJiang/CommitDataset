[+++ b/spring-boot-autoconfigure/pom.xml, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Compression;, +	@NestedConfigurationProperty, +	private Compression compression = new Compression();, +	public Compression getCompression() {, +		if (getCompression() != null) {, +			container.setCompression(getCompression());, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Compression;, +	@NestedConfigurationProperty, +	private Compression compression = new Compression();, +	public Compression getCompression() {, +		if (getCompression() != null) {, +			container.setCompression(getCompression());, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Compression;, +	@NestedConfigurationProperty, +	private Compression compression = new Compression();, +	public Compression getCompression() {, +		if (getCompression() != null) {, +			container.setCompression(getCompression());, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +++ /dev/null, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Compression;, +	@NestedConfigurationProperty, +	private Compression compression = new Compression();, +	public Compression getCompression() {, +		if (getCompression() != null) {, +			container.setCompression(getCompression());, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Compression;, +	@NestedConfigurationProperty, +	private Compression compression = new Compression();, +	public Compression getCompression() {, +		if (getCompression() != null) {, +			container.setCompression(getCompression());, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.compression.enabled=false # if response compression is enabled, +	server.compression.mime-types=text/html,text/xml,text/plain,text/css # comma-separated list of MIME types that should be compressed, +	server.compression.min-response-size=2048 # minimum response size that is required for compression to be performed, +++ b/spring-boot-autoconfigure/pom.xml, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.context.embedded.Compression;, +	@NestedConfigurationProperty, +	private Compression compression = new Compression();, +	public Compression getCompression() {, +		if (getCompression() != null) {, +			container.setCompression(getCompression());, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/spring.factories, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.compression.enabled=false # if response compression is enabled, +	server.compression.mime-types=text/html,text/xml,text/plain,text/css # comma-separated list of MIME types that should be compressed, +	server.compression.min-response-size=2048 # minimum response size that is required for compression to be performed, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +HTTP response compression is supported by Jetty, Tomcat, and Undertow. It can be enabled, +via `application.properties`:, +	server.compression.enabled=true, +By default, responses must be at least 2048 bytes in length for compression to be, +performed. This can be configured using the `server.compression.min-response-size`, +property., +By default, responses will only be compressed if their content type is one of the, +following:, + - `text/html`, + - `text/xml`, + - `text/plain`, + - `text/css`, +This can be configured using the `server.compression.mime-types` property.]