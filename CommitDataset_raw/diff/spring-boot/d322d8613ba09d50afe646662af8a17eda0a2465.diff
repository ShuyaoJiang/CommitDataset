[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfigurationTests.java, +import org.flywaydb.core.internal.callback.SqlScriptFlywayCallback;, +		assertThat(flyway.getCallbacks()).hasSize(3);, +		assertThat(flyway.getCallbacks()).startsWith(callbackTwo, callbackOne);, +		assertThat(flyway.getCallbacks()[2]).isInstanceOf(SqlScriptFlywayCallback.class);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfigurationTests.java, +import org.flywaydb.core.internal.callback.SqlScriptFlywayCallback;, +		assertThat(flyway.getCallbacks()).hasSize(3);, +		assertThat(flyway.getCallbacks()).startsWith(callbackTwo, callbackOne);, +		assertThat(flyway.getCallbacks()[2]).isInstanceOf(SqlScriptFlywayCallback.class);, +++ b/spring-boot-dependencies/pom.xml, +		<flyway.version>4.1.2</flyway.version>, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfigurationTests.java, +import org.flywaydb.core.internal.callback.SqlScriptFlywayCallback;, +		assertThat(flyway.getCallbacks()).hasSize(3);, +		assertThat(flyway.getCallbacks()).startsWith(callbackTwo, callbackOne);, +		assertThat(flyway.getCallbacks()[2]).isInstanceOf(SqlScriptFlywayCallback.class);, +++ b/spring-boot-dependencies/pom.xml, +		<flyway.version>4.1.2</flyway.version>, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	flyway.allow-mixed-migrations= #, +	flyway.baseline-version=1 # version to start migration, +	flyway.clean-disabled= #, +	flyway.ignore-future-migrations= #, +	flyway.ignore-missing-migrations= #, +	flyway.installed-by= #, +	flyway.repeatable-sql-migration-prefix= #, +	flyway.skip-default-callbacks= #, +	flyway.skip-default-resolvers= #, +	flyway.target= #]