[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +				|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		else if (event instanceof ApplicationFailedEvent) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == this.applicationContext) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +				|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		else if (event instanceof ApplicationFailedEvent) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == this.applicationContext) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializerTests.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +		this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +				new SpringApplication(), new String[0], null, new RuntimeException(, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +				|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		else if (event instanceof ApplicationFailedEvent) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == this.applicationContext) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializerTests.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +		this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +				new SpringApplication(), new String[0], null, new RuntimeException(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfigurationTests.java, +import org.springframework.boot.event.ApplicationPreparedEvent;, +		logging.onApplicationEvent(new ApplicationPreparedEvent(new SpringApplication(),, +				new String[0], context));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +				|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		else if (event instanceof ApplicationFailedEvent) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == this.applicationContext) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializerTests.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +		this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +				new SpringApplication(), new String[0], null, new RuntimeException(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfigurationTests.java, +import org.springframework.boot.event.ApplicationPreparedEvent;, +		logging.onApplicationEvent(new ApplicationPreparedEvent(new SpringApplication(),, +				new String[0], context));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import org.springframework.boot.event.ApplicationEnvironmentPreparedEvent;, +import org.springframework.boot.event.ApplicationFailedEvent;, +import org.springframework.boot.event.ApplicationPreparedEvent;, +import org.springframework.boot.event.ApplicationStartedEvent;, +, +			multicaster.multicastEvent(new ApplicationStartedEvent(this, args));, +			multicaster.multicastEvent(new ApplicationEnvironmentPreparedEvent(this,, +					args, environment));, +, +, +			multicaster.multicastEvent(new ApplicationPreparedEvent(this, args, context));, +, +			handleFailure(context, multicaster, ex, args);, +			handleFailure(context, multicaster, ex, args);, +	protected void handleFailure(ConfigurableApplicationContext context,, +			multicaster.multicastEvent(new ApplicationFailedEvent(this, args, context,, +					exception));, +			if (event instanceof ApplicationFailedEvent) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +				|| ApplicationFailedEvent.class.isAssignableFrom(type);, +		else if (event instanceof ApplicationFailedEvent) {, +			if (((ApplicationFailedEvent) event).getApplicationContext() == this.applicationContext) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializerTests.java, +import org.springframework.boot.event.ApplicationFailedEvent;, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +			this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +					new SpringApplication(), new String[0], context, ex));, +		this.initializer.onApplicationEvent(new ApplicationFailedEvent(, +				new SpringApplication(), new String[0], null, new RuntimeException(, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfigurationTests.java, +import org.springframework.boot.event.ApplicationPreparedEvent;, +		logging.onApplicationEvent(new ApplicationPreparedEvent(new SpringApplication(),, +				new String[0], context));, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import org.springframework.boot.event.ApplicationEnvironmentPreparedEvent;, +import org.springframework.boot.event.ApplicationFailedEvent;, +import org.springframework.boot.event.ApplicationPreparedEvent;, +import org.springframework.boot.event.ApplicationStartedEvent;, +, +			multicaster.multicastEvent(new ApplicationStartedEvent(this, args));, +			multicaster.multicastEvent(new ApplicationEnvironmentPreparedEvent(this,, +					args, environment));, +, +, +			multicaster.multicastEvent(new ApplicationPreparedEvent(this, args, context));]