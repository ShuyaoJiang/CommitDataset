[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +		RestTemplate restTemplate = new TestRestTemplate();, +==== TestRestTemplate, +`TestRestTemplate` is a convenience subclass of Spring's `RestTemplate` that is, +(version 4.3.2 or better), and if you have that on your classpath the `TestRestTemplate`, +will respond by configuring the client appropriately., +	RestTemplate template = new TestRestTemplate();, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +		RestTemplate restTemplate = new TestRestTemplate();, +==== TestRestTemplate, +`TestRestTemplate` is a convenience subclass of Spring's `RestTemplate` that is, +(version 4.3.2 or better), and if you have that on your classpath the `TestRestTemplate`, +will respond by configuring the client appropriately., +	RestTemplate template = new TestRestTemplate();, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/src/test/java/sample/actuator/log4j/SampleActuatorApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +		RestTemplate restTemplate = new TestRestTemplate();, +==== TestRestTemplate, +`TestRestTemplate` is a convenience subclass of Spring's `RestTemplate` that is, +(version 4.3.2 or better), and if you have that on your classpath the `TestRestTemplate`, +will respond by configuring the client appropriately., +	RestTemplate template = new TestRestTemplate();, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/src/test/java/sample/actuator/log4j/SampleActuatorApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +		RestTemplate restTemplate = new TestRestTemplate();, +==== TestRestTemplate, +`TestRestTemplate` is a convenience subclass of Spring's `RestTemplate` that is, +(version 4.3.2 or better), and if you have that on your classpath the `TestRestTemplate`, +will respond by configuring the client appropriately., +	RestTemplate template = new TestRestTemplate();, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/src/test/java/sample/actuator/log4j/SampleActuatorApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<String> entity = new TestRestTemplate().exchange(, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<String> entity = new TestRestTemplate().exchange(, +				"http://localhost:8080/error", HttpMethod.GET, new HttpEntity<Void>(, +						headers), String.class);, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +		RestTemplate restTemplate = new TestRestTemplate();, +==== TestRestTemplate, +`TestRestTemplate` is a convenience subclass of Spring's `RestTemplate` that is, +(version 4.3.2 or better), and if you have that on your classpath the `TestRestTemplate`, +will respond by configuring the client appropriately., +	RestTemplate template = new TestRestTemplate();, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/src/test/java/sample/actuator/log4j/SampleActuatorApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<String> entity = new TestRestTemplate().exchange(, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<String> entity = new TestRestTemplate().exchange(, +				"http://localhost:8080/error", HttpMethod.GET, new HttpEntity<Void>(, +						headers), String.class);, +++ b/spring-boot-samples/spring-boot-sample-actuator/src/test/java/sample/actuator/EndpointsPropertiesSampleActuatorApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<Map> entity = new TestRestTemplate("user", "password"), +				.getForEntity("http://localhost:8080/oops", Map.class);, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +		RestTemplate restTemplate = new TestRestTemplate();, +==== TestRestTemplate, +`TestRestTemplate` is a convenience subclass of Spring's `RestTemplate` that is, +(version 4.3.2 or better), and if you have that on your classpath the `TestRestTemplate`, +will respond by configuring the client appropriately., +	RestTemplate template = new TestRestTemplate();, +++ b/spring-boot-samples/spring-boot-sample-actuator-log4j/src/test/java/sample/actuator/log4j/SampleActuatorApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationPortTests.java, +import org.springframework.boot.test.TestRestTemplate;, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(, +++ b/spring-boot-samples/spring-boot-sample-actuator-ui/src/test/java/sample/actuator/ui/SampleActuatorUiApplicationTests.java, +import org.springframework.boot.test.TestRestTemplate;]