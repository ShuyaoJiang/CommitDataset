[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +		Collection<Module> modules = getBeans(this.beanFactory, Module.class);, +		for (ObjectMapper objectMapper : getBeans(this.beanFactory, ObjectMapper.class)) {, +	private static <T> Collection<T> getBeans(ListableBeanFactory beanFactory,, +			Class<T> type) {, +		return BeanFactoryUtils.beansOfTypeIncludingAncestors(beanFactory, type).values();, +			configureModules(builder);, +		private void configureModules(Jackson2ObjectMapperBuilder builder) {, +			Collection<Module> moduleBeans = getBeans(this.applicationContext,, +					Module.class);, +			builder.modulesToInstall(moduleBeans.toArray(new Module[moduleBeans.size()]));, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., +		Collection<Module> modules = getBeans(this.beanFactory, Module.class);, +		for (ObjectMapper objectMapper : getBeans(this.beanFactory, ObjectMapper.class)) {, +	private static <T> Collection<T> getBeans(ListableBeanFactory beanFactory,, +			Class<T> type) {, +		return BeanFactoryUtils.beansOfTypeIncludingAncestors(beanFactory, type).values();, +			configureModules(builder);, +		private void configureModules(Jackson2ObjectMapperBuilder builder) {, +			Collection<Module> moduleBeans = getBeans(this.applicationContext,, +					Module.class);, +			builder.modulesToInstall(moduleBeans.toArray(new Module[moduleBeans.size()]));, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +import java.util.HashSet;, +import java.util.Set;, +import com.fasterxml.jackson.core.ObjectCodec;, +		this.context.register(ModuleConfig.class, MockObjectMapperConfig.class,, +				JacksonAutoConfiguration.class);, +	@Test, +	public void moduleBeansAndWellKnownModulesAreRegisteredWithTheObjectMapperBuilder() {, +		this.context.register(ModuleConfig.class, JacksonAutoConfiguration.class);, +		this.context.refresh();, +		ObjectMapper objectMapper = this.context.getBean(, +				Jackson2ObjectMapperBuilder.class).build();, +		assertThat(this.context.getBean(CustomModule.class).getOwners(),, +				hasItem((ObjectCodec) objectMapper));, +		assertThat(objectMapper.canSerialize(LocalDateTime.class), is(true));, +	@Configuration, +	protected static class MockObjectMapperConfig {, +, +	protected static class ModuleConfig {, +, +		@Bean, +		public CustomModule jacksonModule() {, +			return new CustomModule();, +		}, +	}, +, +	@Configuration, +, +	private static class CustomModule extends SimpleModule {, +, +		private Set<ObjectCodec> owners = new HashSet<ObjectCodec>();, +, +		@Override, +		public void setupModule(SetupContext context) {, +			this.owners.add(context.getOwner());, +		}, +, +		Set<ObjectCodec> getOwners() {, +			return this.owners;, +		}, +, +	}]