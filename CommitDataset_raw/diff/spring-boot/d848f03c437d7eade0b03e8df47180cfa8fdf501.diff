[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +		this.url = url;, +		if (separator + 2 != spec.length()) {, +		String container = spec.substring(0, separator);, +		if (container.indexOf(SEPARATOR) == -1) {, +			this.jarFileUrl = new URL(container);, +		}, +		else {, +			this.jarFileUrl = new URL("jar:" + container);, +		}, +	public URL getJarFileURL() {, +		return this.jarFileUrl;, +	}, +, +	@Override, +	public String getEntryName() {, +		return this.jarEntryName;, +	}, +, +	@Override, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +		this.url = url;, +		if (separator + 2 != spec.length()) {, +		String container = spec.substring(0, separator);, +		if (container.indexOf(SEPARATOR) == -1) {, +			this.jarFileUrl = new URL(container);, +		}, +		else {, +			this.jarFileUrl = new URL("jar:" + container);, +		}, +	public URL getJarFileURL() {, +		return this.jarFileUrl;, +	}, +, +	@Override, +	public String getEntryName() {, +		return this.jarEntryName;, +	}, +, +	@Override, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/jar/JarFileTests.java, +		assertThat(jarURLConnection.getJarFileURL().toString(), equalTo("file:", +		JarURLConnection connection = (JarURLConnection) url.openConnection();, +		assertThat(connection.getURL().toString(), equalTo(spec));, +		assertThat(connection.getJarFileURL().toString(), equalTo("jar:file:", +				+ this.rootJarFile.getPath() + "!/nested.jar"));, +		assertThat(connection.getEntryName(), equalTo("3.dat"));, +	}, +, +	@Test, +	public void createNonNestedUrlFromString() throws Exception {, +		JarFile.registerUrlProtocolHandler();, +		String spec = "jar:file:" + this.rootJarFile.getPath() + "!/2.dat";, +		URL url = new URL(spec);, +		assertThat(url.toString(), equalTo(spec));, +		InputStream inputStream = url.openStream();, +		assertThat(inputStream, notNullValue());, +		assertThat(inputStream.read(), equalTo(2));, +		JarURLConnection connection = (JarURLConnection) url.openConnection();, +		assertThat(connection.getURL().toString(), equalTo(spec));, +		assertThat(connection.getJarFileURL().toString(), equalTo("file:", +				+ this.rootJarFile.getPath()));, +		assertThat(connection.getEntryName(), equalTo("2.dat"));]