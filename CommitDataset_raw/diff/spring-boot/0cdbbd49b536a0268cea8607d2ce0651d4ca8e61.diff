[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +		DataSource result = BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +		DataSource result = BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration.java, +			Object instance = BeanUtils.instantiateClass(dataSourceClass);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +		DataSource result = BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration.java, +			Object instance = BeanUtils.instantiateClass(dataSourceClass);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelectorTests.java, +		configureExclusions(, +				new String[] { GroovyTemplateAutoConfiguration.class.getName() },, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +		DataSource result = BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration.java, +			Object instance = BeanUtils.instantiateClass(dataSourceClass);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelectorTests.java, +		configureExclusions(, +				new String[] { GroovyTemplateAutoConfiguration.class.getName() },, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +			initializers.add(BeanUtils.instantiateClass(initializerClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +		DataSource result = BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration.java, +			Object instance = BeanUtils.instantiateClass(dataSourceClass);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelectorTests.java, +		configureExclusions(, +				new String[] { GroovyTemplateAutoConfiguration.class.getName() },, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +			initializers.add(BeanUtils.instantiateClass(initializerClass));, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/MockServerRestTemplateCustomizer.java, +		return BeanUtils.instantiateClass(this.expectationManager);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +		DataSource result = BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration.java, +			Object instance = BeanUtils.instantiateClass(dataSourceClass);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelectorTests.java, +		configureExclusions(, +				new String[] { GroovyTemplateAutoConfiguration.class.getName() },, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +			initializers.add(BeanUtils.instantiateClass(initializerClass));, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/MockServerRestTemplateCustomizer.java, +		return BeanUtils.instantiateClass(this.expectationManager);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.java, +					(FieldNamingStrategy) BeanUtils.instantiateClass(strategyClass));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.java, +		DataSource result = BeanUtils.instantiateClass(type);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/XADataSourceAutoConfiguration.java, +			Object instance = BeanUtils.instantiateClass(dataSourceClass);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelectorTests.java, +		configureExclusions(, +				new String[] { GroovyTemplateAutoConfiguration.class.getName() },, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +			initializers.add(BeanUtils.instantiateClass(initializerClass));, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/MockServerRestTemplateCustomizer.java, +		return BeanUtils.instantiateClass(this.expectationManager);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java, +		this.target = (T) BeanUtils.instantiateClass(type);, +		Assert.state(this.propertySources != null, "PropertySources should not be null");, +		PropertyValues propertyValues = getPropertySourcesPropertyValues(names,, +				relaxedTargetNames);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cassandra/CassandraAutoConfiguration.java, +		return BeanUtils.instantiateClass(type);]