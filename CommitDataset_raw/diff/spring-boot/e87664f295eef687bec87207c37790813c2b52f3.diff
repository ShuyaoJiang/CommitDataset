[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.eclipse.jetty</groupId>, +			<artifactId>jetty-server</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.eclipse.jetty</groupId>, +			<artifactId>jetty-server</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementChildContextConfiguration.java, +import java.io.File;, +, +import org.eclipse.jetty.server.NCSARequestLog;, +import org.eclipse.jetty.server.RequestLog;, +import org.eclipse.jetty.server.Server;, +import org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory;, +import org.springframework.util.StringUtils;, +	public UndertowAccessLogCustomizer undertowManagementAccessLogCustomizer() {, +	public TomcatAccessLogCustomizer tomcatManagementAccessLogCustomizer() {, +	@Bean, +	@ConditionalOnClass(name = "org.eclipse.jetty.server.Server"), +	public JettyAccessLogCustomizer jettyManagementAccessLogCustomizer() {, +		return new JettyAccessLogCustomizer();, +	}, +, +		private static final String MANAGEMENT_PREFIX = "management_";, +, +			prefix = (prefix != null) ? prefix : "";, +			if (prefix.startsWith(MANAGEMENT_PREFIX)) {, +				return prefix;, +			}, +			return MANAGEMENT_PREFIX + prefix;, +	static class JettyAccessLogCustomizer extends AccessLogCustomizer, +			implements WebServerFactoryCustomizer<JettyServletWebServerFactory> {, +, +		@Override, +		public void customize(JettyServletWebServerFactory factory) {, +			factory.addServerCustomizers(this::customizeServer);, +		}, +, +		private void customizeServer(Server server) {, +			RequestLog requestLog = server.getRequestLog();, +			if (requestLog != null && requestLog instanceof NCSARequestLog) {, +				customizeRequestLog((NCSARequestLog) requestLog);, +			}, +		}, +, +		private void customizeRequestLog(NCSARequestLog requestLog) {, +			String filename = requestLog.getFilename();, +			if (StringUtils.hasLength(filename)) {, +				File file = new File(filename);, +				file = new File(file.getParentFile(), customizePrefix(file.getName()));, +				requestLog.setFilename(file.getPath());, +			}, +		}, +, +	}, +]