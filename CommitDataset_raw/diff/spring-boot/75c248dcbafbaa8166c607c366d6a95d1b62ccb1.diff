[+++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/JavaBeanPropertyDescriptor.java, +		super(ownerElement, factoryMethod, getter, name, type, field, getter, setter);, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/JavaBeanPropertyDescriptor.java, +		super(ownerElement, factoryMethod, getter, name, type, field, getter, setter);, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/LombokPropertyDescriptor.java, +			VariableElement field, String name, TypeMirror type, ExecutableElement getter,, +			ExecutableElement setter) {, +		super(typeElement, factoryMethod, field, name, type, field, getter, setter);, +				|| environment.isDeprecated(getGetter()), +		return deprecated ? environment.resolveItemDeprecation(getGetter()) : null;, +		boolean nonFinalPublicField = !getField().getModifiers().contains(Modifier.FINAL), +		return getSetter() != null || nonFinalPublicField;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/JavaBeanPropertyDescriptor.java, +		super(ownerElement, factoryMethod, getter, name, type, field, getter, setter);, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/LombokPropertyDescriptor.java, +			VariableElement field, String name, TypeMirror type, ExecutableElement getter,, +			ExecutableElement setter) {, +		super(typeElement, factoryMethod, field, name, type, field, getter, setter);, +				|| environment.isDeprecated(getGetter()), +		return deprecated ? environment.resolveItemDeprecation(getGetter()) : null;, +		boolean nonFinalPublicField = !getField().getModifiers().contains(Modifier.FINAL), +		return getSetter() != null || nonFinalPublicField;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/PropertyDescriptor.java, +	private final ExecutableElement setter;, +, +			VariableElement field, ExecutableElement getter, ExecutableElement setter) {, +		this.setter = setter;, +	public ExecutableElement getSetter() {, +		return this.setter;, +	}, +	protected ItemDeprecation resolveItemDeprecation(, +			MetadataGenerationEnvironment environment) {, +		boolean deprecated = environment.isDeprecated(getGetter()), +				|| environment.isDeprecated(getSetter()), +				|| environment.isDeprecated(getFactoryMethod());, +		return deprecated ? environment.resolveItemDeprecation(getGetter()) : null;, +	}, +, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/JavaBeanPropertyDescriptor.java, +		super(ownerElement, factoryMethod, getter, name, type, field, getter, setter);, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/LombokPropertyDescriptor.java, +			VariableElement field, String name, TypeMirror type, ExecutableElement getter,, +			ExecutableElement setter) {, +		super(typeElement, factoryMethod, field, name, type, field, getter, setter);, +				|| environment.isDeprecated(getGetter()), +		return deprecated ? environment.resolveItemDeprecation(getGetter()) : null;, +		boolean nonFinalPublicField = !getField().getModifiers().contains(Modifier.FINAL), +		return getSetter() != null || nonFinalPublicField;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/PropertyDescriptor.java, +	private final ExecutableElement setter;, +, +			VariableElement field, ExecutableElement getter, ExecutableElement setter) {, +		this.setter = setter;, +	public ExecutableElement getSetter() {, +		return this.setter;, +	}, +	protected ItemDeprecation resolveItemDeprecation(, +			MetadataGenerationEnvironment environment) {, +		boolean deprecated = environment.isDeprecated(getGetter()), +				|| environment.isDeprecated(getSetter()), +				|| environment.isDeprecated(getFactoryMethod());, +		return deprecated ? environment.resolveItemDeprecation(getGetter()) : null;, +	}, +, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/PropertyDescriptorResolver.java, +			ExecutableElement setter = members.getPublicSetter(name, returnType);, +					returnType, getter, setter));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/JavaBeanPropertyDescriptor.java, +		super(ownerElement, factoryMethod, getter, name, type, field, getter, setter);, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/LombokPropertyDescriptor.java, +			VariableElement field, String name, TypeMirror type, ExecutableElement getter,, +			ExecutableElement setter) {, +		super(typeElement, factoryMethod, field, name, type, field, getter, setter);, +				|| environment.isDeprecated(getGetter()), +		return deprecated ? environment.resolveItemDeprecation(getGetter()) : null;, +		boolean nonFinalPublicField = !getField().getModifiers().contains(Modifier.FINAL), +		return getSetter() != null || nonFinalPublicField;, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/PropertyDescriptor.java, +	private final ExecutableElement setter;, +, +			VariableElement field, ExecutableElement getter, ExecutableElement setter) {, +		this.setter = setter;, +	public ExecutableElement getSetter() {, +		return this.setter;, +	}, +	protected ItemDeprecation resolveItemDeprecation(, +			MetadataGenerationEnvironment environment) {, +		boolean deprecated = environment.isDeprecated(getGetter()), +				|| environment.isDeprecated(getSetter()), +				|| environment.isDeprecated(getFactoryMethod());, +		return deprecated ? environment.resolveItemDeprecation(getGetter()) : null;, +	}, +, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/PropertyDescriptorResolver.java, +			ExecutableElement setter = members.getPublicSetter(name, returnType);, +					returnType, getter, setter));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/LombokPropertyDescriptorTests.java, +					null, field, "third", field.asType(), getter, null);, +		ExecutableElement setter = getMethod(ownerElement,, +				createAccessorMethodName("set", name));]