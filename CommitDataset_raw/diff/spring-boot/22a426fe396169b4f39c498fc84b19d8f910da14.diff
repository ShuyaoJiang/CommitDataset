[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidator.java, +						.doOnSuccess((fetchedTokenKeys) -> {, +						}).filter((tokenKeys) -> tokenKeys.containsKey(keyId)), +						.switchIfEmpty((Mono.error(new CloudFoundryAuthorizationException(, +								Reason.INVALID_KEY_ID,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidator.java, +						.doOnSuccess((fetchedTokenKeys) -> {, +						}).filter((tokenKeys) -> tokenKeys.containsKey(keyId)), +						.switchIfEmpty((Mono.error(new CloudFoundryAuthorizationException(, +								Reason.INVALID_KEY_ID,, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveDataAutoConfiguration.java, +		return new DefaultBridgedReactiveSession(session);]