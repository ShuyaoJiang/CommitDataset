[+++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/ClassLoaderIntegrationTests.java, +	public CliTester cli = new CliTester("src/test/resources/");, +		String output = this.cli.run("classloader-test-app.groovy",, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/ClassLoaderIntegrationTests.java, +	public CliTester cli = new CliTester("src/test/resources/");, +		String output = this.cli.run("classloader-test-app.groovy",, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import org.junit.Assume;, + * @author Dave Syer, +	private String prefix;, +, +	public CliTester(String prefix) {, +		this.prefix = prefix;, +	}, +, +	public String run(String... args) throws Exception {, +		final String[] sources = getSources(args);, +						command.run(sources);, +	public String test(String... args) throws Exception {, +		final String[] sources = getSources(args);, +						command.run(sources);, +	protected String[] getSources(String... args) {, +		final String[] sources = new String[args.length];, +		for (int i = 0; i < args.length; i++) {, +			String arg = args[i];, +			sources[i] = this.prefix + arg;, +		}, +		return sources;, +	}, +, +	public Statement apply(final Statement base, final Description description) {, +		return new Statement() {, +, +			@Override, +			public void evaluate() throws Throwable {, +				Assume.assumeTrue(, +						"Not running sample integration tests because integration profile not active",, +						System.getProperty("spring.profiles.active", "integration"), +								.contains("integration"));, +				CliTester.this.outputCapture.apply(new RunLauncherStatement(base),, +						description);, +			}, +		};, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/ClassLoaderIntegrationTests.java, +	public CliTester cli = new CliTester("src/test/resources/");, +		String output = this.cli.run("classloader-test-app.groovy",, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import org.junit.Assume;, + * @author Dave Syer, +	private String prefix;, +, +	public CliTester(String prefix) {, +		this.prefix = prefix;, +	}, +, +	public String run(String... args) throws Exception {, +		final String[] sources = getSources(args);, +						command.run(sources);, +	public String test(String... args) throws Exception {, +		final String[] sources = getSources(args);, +						command.run(sources);, +	protected String[] getSources(String... args) {, +		final String[] sources = new String[args.length];, +		for (int i = 0; i < args.length; i++) {, +			String arg = args[i];, +			sources[i] = this.prefix + arg;, +		}, +		return sources;, +	}, +, +	public Statement apply(final Statement base, final Description description) {, +		return new Statement() {, +, +			@Override, +			public void evaluate() throws Throwable {, +				Assume.assumeTrue(, +						"Not running sample integration tests because integration profile not active",, +						System.getProperty("spring.profiles.active", "integration"), +								.contains("integration"));, +				CliTester.this.outputCapture.apply(new RunLauncherStatement(base),, +						description);, +			}, +		};, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/ReproIntegrationTests.java, + * Integration tests to exercise and reproduce specific issues., +	public CliTester cli = new CliTester("src/test/resources/repro-samples/");, +		this.cli.run("grab-ant-builder.groovy");, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/ClassLoaderIntegrationTests.java, +	public CliTester cli = new CliTester("src/test/resources/");, +		String output = this.cli.run("classloader-test-app.groovy",, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import org.junit.Assume;, + * @author Dave Syer, +	private String prefix;, +, +	public CliTester(String prefix) {, +		this.prefix = prefix;, +	}, +, +	public String run(String... args) throws Exception {]