[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngine.java, +	private final List<Dependency> managedDependencies = new ArrayList<Dependency>();, +, +			List<RemoteRepository> remoteRepositories,, +			List<Dependency> managedDependencies) {, +		this.managedDependencies.addAll(managedDependencies);, +, +			collectRequest.setManagedDependencies(this.managedDependencies);, +, +, +, +			this.managedDependencies.addAll(getDependencies(dependencyResult));, +, +	private List<Dependency> getDependencies(DependencyResult dependencyResult) {, +		List<Dependency> dependencies = new ArrayList<Dependency>();, +		for (ArtifactResult artifactResult : dependencyResult.getArtifactResults()) {, +			dependencies.add(new Dependency(artifactResult.getArtifact(),, +					JavaScopes.COMPILE));, +		}, +		return dependencies;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngine.java, +	private final List<Dependency> managedDependencies = new ArrayList<Dependency>();, +, +			List<RemoteRepository> remoteRepositories,, +			List<Dependency> managedDependencies) {, +		this.managedDependencies.addAll(managedDependencies);, +, +			collectRequest.setManagedDependencies(this.managedDependencies);, +, +, +, +			this.managedDependencies.addAll(getDependencies(dependencyResult));, +, +	private List<Dependency> getDependencies(DependencyResult dependencyResult) {, +		List<Dependency> dependencies = new ArrayList<Dependency>();, +		for (ArtifactResult artifactResult : dependencyResult.getArtifactResults()) {, +			dependencies.add(new Dependency(artifactResult.getArtifact(),, +					JavaScopes.COMPILE));, +		}, +		return dependencies;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngineFactory.java, +import org.eclipse.aether.graph.Dependency;, +		List<Dependency> managedDependencies = new PropertiesManagedDependenciesFactory(), +				.getManagedDependencies();, +, +				repositorySystemSession, createRepositories(repositoryConfigurations),, +				managedDependencies);, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngine.java, +	private final List<Dependency> managedDependencies = new ArrayList<Dependency>();, +, +			List<RemoteRepository> remoteRepositories,, +			List<Dependency> managedDependencies) {, +		this.managedDependencies.addAll(managedDependencies);, +, +			collectRequest.setManagedDependencies(this.managedDependencies);, +, +, +, +			this.managedDependencies.addAll(getDependencies(dependencyResult));, +, +	private List<Dependency> getDependencies(DependencyResult dependencyResult) {, +		List<Dependency> dependencies = new ArrayList<Dependency>();, +		for (ArtifactResult artifactResult : dependencyResult.getArtifactResults()) {, +			dependencies.add(new Dependency(artifactResult.getArtifact(),, +					JavaScopes.COMPILE));, +		}, +		return dependencies;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngineFactory.java, +import org.eclipse.aether.graph.Dependency;, +		List<Dependency> managedDependencies = new PropertiesManagedDependenciesFactory(), +				.getManagedDependencies();, +, +				repositorySystemSession, createRepositories(repositoryConfigurations),, +				managedDependencies);, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/ManagedDependenciesFactory.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.cli.compiler.grape;, +, +import java.util.List;]