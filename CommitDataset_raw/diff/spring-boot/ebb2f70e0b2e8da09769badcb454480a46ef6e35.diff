[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, + * @author Brian Clozel, +	private static final Tag URI_NOT_FOUND = Tag.of("uri", "NOT_FOUND");, +, +	private static final Tag URI_REDIRECTION = Tag.of("uri", "REDIRECTION");, +, +, +		if (request != null) {, +			String pattern = getMatchingPattern(request);, +			if (pattern != null) {, +				return Tag.of("uri", pattern);, +			}, +			else if (response != null) {, +					return URI_REDIRECTION;, +					return URI_NOT_FOUND;, +			String pathInfo = getPathInfo(request);, +			return Tag.of("uri", pathInfo.isEmpty() ? "root" : pathInfo);, +		}, +	private static String getMatchingPattern(HttpServletRequest request) {, +		return (String) request, +	}, +, +	private static String getPathInfo(HttpServletRequest request) {, +		String uri = StringUtils.hasText(request.getPathInfo()) ?, +				request.getPathInfo() : "/";, +		return uri.replaceAll("//+", "/"), +				.replaceAll("/$", "");, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java, + * @author Brian Clozel, +	private static final Tag URI_NOT_FOUND = Tag.of("uri", "NOT_FOUND");, +, +	private static final Tag URI_REDIRECTION = Tag.of("uri", "REDIRECTION");, +, +, +		if (request != null) {, +			String pattern = getMatchingPattern(request);, +			if (pattern != null) {, +				return Tag.of("uri", pattern);, +			}, +			else if (response != null) {, +					return URI_REDIRECTION;, +					return URI_NOT_FOUND;, +			String pathInfo = getPathInfo(request);, +			return Tag.of("uri", pathInfo.isEmpty() ? "root" : pathInfo);, +		}, +	private static String getMatchingPattern(HttpServletRequest request) {, +		return (String) request, +	}, +, +	private static String getPathInfo(HttpServletRequest request) {, +		String uri = StringUtils.hasText(request.getPathInfo()) ?, +				request.getPathInfo() : "/";, +		return uri.replaceAll("//+", "/"), +				.replaceAll("/$", "");, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/WebMvcTagsTests.java, + * @author Brian Clozel, +		this.request.setPathInfo("//spring/");, +		assertThat(WebMvcTags.uri(this.request, null).getValue()).isEqualTo("/spring");, +	}, +, +	@Test, +	public void uriTagValueIsBestMatchingPatternWhenAvailable() {, +				"/spring");, +		this.response.setStatus(301);, +		Tag tag = WebMvcTags.uri(this.request, this.response);, +		assertThat(tag.getValue()).isEqualTo("/spring");, +	@Test, +	public void uriTagIsUnknownWhenRequestIsNull() {, +		Tag tag = WebMvcTags.uri(null, null);, +		assertThat(tag.getValue()).isEqualTo("UNKNOWN");, +	}]