[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +				EndpointProvider<WebEndpointOperation> provider,, +				EndpointMediaTypes endpointMediaTypes, Environment environment,, +					provider.getEndpoints(), endpointMediaTypes, getCorsConfiguration(),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +				EndpointProvider<WebEndpointOperation> provider,, +				EndpointMediaTypes endpointMediaTypes, Environment environment,, +					provider.getEndpoints(), endpointMediaTypes, getCorsConfiguration(),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointServletHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes, CorsConfiguration corsConfiguration,, +		super(endpointMapping, webEndpoints, endpointMediaTypes, corsConfiguration);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +				EndpointProvider<WebEndpointOperation> provider,, +				EndpointMediaTypes endpointMediaTypes, Environment environment,, +					provider.getEndpoints(), endpointMediaTypes, getCorsConfiguration(),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointServletHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes, CorsConfiguration corsConfiguration,, +		super(endpointMapping, webEndpoints, endpointMediaTypes, corsConfiguration);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +		public EndpointMediaTypes endpointMediaTypes() {, +			return new EndpointMediaTypes(MEDIA_TYPES, MEDIA_TYPES);, +		}, +, +		@Bean, +					endpointMediaTypes());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +				EndpointProvider<WebEndpointOperation> provider,, +				EndpointMediaTypes endpointMediaTypes, Environment environment,, +					provider.getEndpoints(), endpointMediaTypes, getCorsConfiguration(),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointServletHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes, CorsConfiguration corsConfiguration,, +		super(endpointMapping, webEndpoints, endpointMediaTypes, corsConfiguration);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +		public EndpointMediaTypes endpointMediaTypes() {, +			return new EndpointMediaTypes(MEDIA_TYPES, MEDIA_TYPES);, +		}, +, +		@Bean, +					endpointMediaTypes());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes,, +						provider.getEndpoints(), endpointMediaTypes)));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +				EndpointProvider<WebEndpointOperation> provider,, +				EndpointMediaTypes endpointMediaTypes, Environment environment,, +					provider.getEndpoints(), endpointMediaTypes, getCorsConfiguration(),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointServletHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes, CorsConfiguration corsConfiguration,, +		super(endpointMapping, webEndpoints, endpointMediaTypes, corsConfiguration);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +		public EndpointMediaTypes endpointMediaTypes() {, +			return new EndpointMediaTypes(MEDIA_TYPES, MEDIA_TYPES);, +		}, +, +		@Bean, +					endpointMediaTypes());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes,, +						provider.getEndpoints(), endpointMediaTypes)));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes,, +				provider.getEndpoints(), endpointMediaTypes);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryActuatorAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +				EndpointProvider<WebEndpointOperation> provider,, +				EndpointMediaTypes endpointMediaTypes, Environment environment,, +					provider.getEndpoints(), endpointMediaTypes, getCorsConfiguration(),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointServletHandlerMapping.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes, CorsConfiguration corsConfiguration,, +		super(endpointMapping, webEndpoints, endpointMediaTypes, corsConfiguration);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +		public EndpointMediaTypes endpointMediaTypes() {, +			return new EndpointMediaTypes(MEDIA_TYPES, MEDIA_TYPES);, +		}, +, +		@Bean, +					endpointMediaTypes());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +			EndpointMediaTypes endpointMediaTypes,, +						provider.getEndpoints(), endpointMediaTypes)));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.java, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;]