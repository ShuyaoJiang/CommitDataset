[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/SimpleHealthIndicatorTests.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/SimpleHealthIndicatorTests.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/SpringBootCondition.java, + * Copyright 2012-2014 the original author or authors., +		catch (NoClassDefFoundError ex) {, +							+ "This can happen if you are @ComponentScanning a ", +							+ "springframework package (e.g. if you put a @ComponentScan ", +							+ "in the default package by mistake)", ex);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/SimpleHealthIndicatorTests.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/SpringBootCondition.java, + * Copyright 2012-2014 the original author or authors., +		catch (NoClassDefFoundError ex) {, +							+ "This can happen if you are @ComponentScanning a ", +							+ "springframework package (e.g. if you put a @ComponentScan ", +							+ "in the default package by mistake)", ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +	private boolean testOnBorrow;, +	private boolean testOnReturn;, +	private boolean testWhileIdle;, +	private Integer timeBetweenEvictionRunsMillis;, +	private Integer minEvictableIdleTimeMillis;, +	private Integer maxWaitMillis;, +	public void setMaxWait(int maxWaitMillis) {, +		this.maxWaitMillis = maxWaitMillis;, +	}, +	protected Integer getTimeBetweenEvictionRunsMillis() {, +		return this.timeBetweenEvictionRunsMillis;, +	}, +	protected Integer getMinEvictableIdleTimeMillis() {, +		return this.minEvictableIdleTimeMillis;, +	}, +	protected Integer getMaxWaitMillis() {, +		return this.maxWaitMillis;, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/SimpleHealthIndicatorTests.java, + * Copyright 2012-2014 the original author or authors., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/SpringBootCondition.java, + * Copyright 2012-2014 the original author or authors., +		catch (NoClassDefFoundError ex) {, +							+ "This can happen if you are @ComponentScanning a ", +							+ "springframework package (e.g. if you put a @ComponentScan ", +							+ "in the default package by mistake)", ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/AbstractDataSourceConfiguration.java, +	private boolean testOnBorrow;, +	private boolean testOnReturn;, +	private boolean testWhileIdle;, +	private Integer timeBetweenEvictionRunsMillis;, +	private Integer minEvictableIdleTimeMillis;, +	private Integer maxWaitMillis;, +	public void setMaxWait(int maxWaitMillis) {, +		this.maxWaitMillis = maxWaitMillis;, +	}, +	protected Integer getTimeBetweenEvictionRunsMillis() {, +		return this.timeBetweenEvictionRunsMillis;, +	}, +	protected Integer getMinEvictableIdleTimeMillis() {, +		return this.minEvictableIdleTimeMillis;, +	}, +	protected Integer getMaxWaitMillis() {, +		return this.maxWaitMillis;, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/CommonsDataSourceConfiguration.java, +		this.pool = createAndSetupPool();, +		return this.pool;, +	}, +, +	private BasicDataSource createAndSetupPool() {, +		BasicDataSource pool = new BasicDataSource();, +		pool.setDriverClassName(getDriverClassName());, +		pool.setUrl(getUrl());, +			pool.setUsername(getUsername());, +			pool.setPassword(getPassword());, +		pool.setInitialSize(getInitialSize());, +		pool.setMaxActive(getMaxActive());, +		pool.setMaxIdle(getMaxIdle());, +		pool.setMinIdle(getMinIdle());, +		pool.setTestOnBorrow(isTestOnBorrow());, +		pool.setTestOnReturn(isTestOnReturn());, +		pool.setTestWhileIdle(isTestWhileIdle());, +		pool.setValidationQuery(getValidationQuery());, +		if (getTimeBetweenEvictionRunsMillis() != null) {, +			pool.setTimeBetweenEvictionRunsMillis(getTimeBetweenEvictionRunsMillis());, +		}, +		if (getMinEvictableIdleTimeMillis() != null) {, +			pool.setMinEvictableIdleTimeMillis(getMinEvictableIdleTimeMillis());, +		}, +		if (getMaxWaitMillis() != null) {]