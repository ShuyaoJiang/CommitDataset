[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +import org.springframework.bootstrap.context.annotation.ConditionLogUtils;, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +					this.logger.debug(checking, +							+ "Existing auto database detected: match result true");, +							.debug(checking, +									+ "Existing bean configured database detected: match result true");, +			if (this.logger.isDebugEnabled()) {, +				this.logger, +						.debug(checking, +								+ "Existing bean configured database not detected: match result false");, +			}, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +					this.logger.debug(checking + "Tomcat DataSource pool not found");, +				this.logger.debug(checking, +						+ "Spring JDBC detected (embedded database type is ", +					this.logger.debug(checking + "Driver class " + driverClassName, +							+ " found");, +			if (this.logger.isDebugEnabled()) {, +				this.logger.debug(checking + "Driver class " + driverClassName, +						+ " not found");, +			}, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +							.debug(checking, +									+ "Existing non-embedded database detected: match result false");, +				this.logger.debug(checking, +						+ "Spring JDBC detected (embedded database type is ", +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +import org.springframework.bootstrap.context.annotation.ConditionLogUtils;, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +					this.logger.debug(checking, +							+ "Existing auto database detected: match result true");, +							.debug(checking, +									+ "Existing bean configured database detected: match result true");, +			if (this.logger.isDebugEnabled()) {, +				this.logger, +						.debug(checking, +								+ "Existing bean configured database not detected: match result false");, +			}, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +					this.logger.debug(checking + "Tomcat DataSource pool not found");, +				this.logger.debug(checking, +						+ "Spring JDBC detected (embedded database type is ", +					this.logger.debug(checking + "Driver class " + driverClassName, +							+ " found");, +			if (this.logger.isDebugEnabled()) {, +				this.logger.debug(checking + "Driver class " + driverClassName, +						+ " not found");, +			}, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +							.debug(checking, +									+ "Existing non-embedded database detected: match result false");, +				this.logger.debug(checking, +						+ "Spring JDBC detected (embedded database type is ", +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/annotation/AbstractOnBeanCondition.java, +, +		String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +				this.logger.debug(checking + "Looking for beans with class: ", +						+ beanClasses);, +					this.logger.debug(checking + "Found no beans");, +					this.logger.debug(checking + "Found beans with classes: ", +							+ beanClassesFound);, +				this.logger, +						.debug(checking + "Looking for beans with names: " + beanNames);, +					this.logger.debug(checking + "Found no beans");, +					this.logger.debug(checking + "Found beans with names: ", +							+ beanNamesFound);, +			this.logger.debug(checking + "Match result is: " + result);, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +import org.springframework.bootstrap.context.annotation.ConditionLogUtils;, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +					this.logger.debug(checking, +							+ "Existing auto database detected: match result true");, +							.debug(checking, +									+ "Existing bean configured database detected: match result true");, +			if (this.logger.isDebugEnabled()) {, +				this.logger, +						.debug(checking, +								+ "Existing bean configured database not detected: match result false");, +			}, +, +			String checking = ConditionLogUtils.getPrefix(this.logger, metadata);, +, +					this.logger.debug(checking + "Tomcat DataSource pool not found");, +				this.logger.debug(checking]