[+++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/README.adoc, +requests. If you want to raise an issue, please follow the recommendations below:, +++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/README.adoc, +requests. If you want to raise an issue, please follow the recommendations below:, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/log4j2/Log4J2RestartListener.java, +		Collection<Cancellable> hooks = (Collection<Cancellable>) ReflectionUtils, +		hooks.clear();, +++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/README.adoc, +requests. If you want to raise an issue, please follow the recommendations below:, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/log4j2/Log4J2RestartListener.java, +		Collection<Cancellable> hooks = (Collection<Cancellable>) ReflectionUtils, +		hooks.clear();, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfigurationTests.java, +	public void liveReloadTriggeredOnClassPathChangeWithoutRestart() throws Exception {, +	public void liveReloadNotTriggeredOnClassPathChangeWithRestart() throws Exception {, +++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/README.adoc, +requests. If you want to raise an issue, please follow the recommendations below:, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/log4j2/Log4J2RestartListener.java, +		Collection<Cancellable> hooks = (Collection<Cancellable>) ReflectionUtils, +		hooks.clear();, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfigurationTests.java, +	public void liveReloadTriggeredOnClassPathChangeWithoutRestart() throws Exception {, +	public void liveReloadNotTriggeredOnClassPathChangeWithRestart() throws Exception {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcherTests.java, +		public Environment environment;, +			URL[] urls = this.environment.getProperty("urls", URL[].class);, +++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/README.adoc, +requests. If you want to raise an issue, please follow the recommendations below:, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/log4j2/Log4J2RestartListener.java, +		Collection<Cancellable> hooks = (Collection<Cancellable>) ReflectionUtils, +		hooks.clear();, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfigurationTests.java, +	public void liveReloadTriggeredOnClassPathChangeWithoutRestart() throws Exception {, +	public void liveReloadNotTriggeredOnClassPathChangeWithRestart() throws Exception {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcherTests.java, +		public Environment environment;, +			URL[] urls = this.environment.getProperty("urls", URL[].class);, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/classloader/ClassLoaderFilesTests.java, +	public void serialize() throws Exception {, +++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/README.adoc, +requests. If you want to raise an issue, please follow the recommendations below:, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/log4j2/Log4J2RestartListener.java, +		Collection<Cancellable> hooks = (Collection<Cancellable>) ReflectionUtils, +		hooks.clear();, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfigurationTests.java, +	public void liveReloadTriggeredOnClassPathChangeWithoutRestart() throws Exception {, +	public void liveReloadNotTriggeredOnClassPathChangeWithRestart() throws Exception {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcherTests.java, +		public Environment environment;, +			URL[] urls = this.environment.getProperty("urls", URL[].class);, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/classloader/ClassLoaderFilesTests.java, +	public void serialize() throws Exception {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/client/HttpTunnelConnectionTests.java, +	private ByteArrayOutputStream incomingData;, +		this.incomingData = new ByteArrayOutputStream();, +		this.incomingChannel = Channels.newChannel(this.incomingData);, +		assertThat(this.incomingData.toString(), equalTo("hi=2=3"));, +		assertThat(this.incomingData.toString(), equalTo("hi"));, +++ b/CONTRIBUTING.adoc, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin for maven support. Other IDEs and tools, +http://eclipse.org/m2e/[M2Eclipse] eclipse plugin. If you don't already have m2eclipse, +++ b/README.adoc, +requests. If you want to raise an issue, please follow the recommendations below:, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/log4j2/Log4J2RestartListener.java, +		Collection<Cancellable> hooks = (Collection<Cancellable>) ReflectionUtils, +		hooks.clear();, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfigurationTests.java, +	public void liveReloadTriggeredOnClassPathChangeWithoutRestart() throws Exception {, +	public void liveReloadNotTriggeredOnClassPathChangeWithRestart() throws Exception {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/classpath/ClassPathFileSystemWatcherTests.java, +		public Environment environment;, +			URL[] urls = this.environment.getProperty("urls", URL[].class);, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/classloader/ClassLoaderFilesTests.java, +	public void serialize() throws Exception {, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/tunnel/client/HttpTunnelConnectionTests.java, +	private ByteArrayOutputStream incomingData;, +		this.incomingData = new ByteArrayOutputStream();, +		this.incomingChannel = Channels.newChannel(this.incomingData);, +		assertThat(this.incomingData.toString(), equalTo("hi=2=3"));]