[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., + * @author Stephane Nicoll, +	@ConditionalOnMissingBean, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.java, + * Copyright 2012-2015 the original author or authors., + * @author Stephane Nicoll, +	@ConditionalOnMissingBean, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfigurationTests.java, + * Copyright 2012-2015 the original author or authors., +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.transaction.PlatformTransactionManager;, +import static org.mockito.Mockito.mock;, + * @author Stephane Nicoll, +	@Test, +	public void testExistingTransactionManager() {, +		this.context.register(SwitchTransactionsOn.class,, +				TransactionManagerConfiguration.class,, +				EmbeddedDataSourceConfiguration.class,, +				DataSourceTransactionManagerAutoConfiguration.class);, +		this.context.refresh();, +		assertEquals("No transaction manager should be been created", 1,, +				this.context.getBeansOfType(PlatformTransactionManager.class).size());, +		assertEquals("Wrong transaction manager", this.context.getBean("myTransactionManager"),, +				this.context.getBean(PlatformTransactionManager.class));, +	}, +, +	@Configuration, +	protected static class TransactionManagerConfiguration {, +, +		@Bean, +		public PlatformTransactionManager myTransactionManager() {, +			return mock(PlatformTransactionManager.class);, +		}, +, +	}, +]