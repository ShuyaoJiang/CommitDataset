[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/EndpointId.java, +import java.util.HashSet;, +import java.util.Set;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory.getLog(EndpointId.class);, +, +	private static Set<String> loggedWarnings = new HashSet<>();, +, +	private static final Pattern VALID_PATTERN = Pattern.compile("[a-zA-Z0-9\\.\\-]+");, +, +	private static final Pattern WARNING_PATTERN = Pattern.compile("[\\.\\-]+");, +		Assert.isTrue(VALID_PATTERN.matcher(value).matches(),, +		if (WARNING_PATTERN.matcher(value).find()) {, +			logWarning(value);, +		}, +	static void resetLoggedWarnings() {, +		loggedWarnings.clear();, +	}, +, +	private static void logWarning(String value) {, +		if (logger.isWarnEnabled() && loggedWarnings.add(value)) {, +			logger.warn("Endpoint ID '" + value, +					+ "' contains invalid characters, please migrate to a valid format.");, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/EndpointId.java, +import java.util.HashSet;, +import java.util.Set;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +, +	private static final Log logger = LogFactory.getLog(EndpointId.class);, +, +	private static Set<String> loggedWarnings = new HashSet<>();, +, +	private static final Pattern VALID_PATTERN = Pattern.compile("[a-zA-Z0-9\\.\\-]+");, +, +	private static final Pattern WARNING_PATTERN = Pattern.compile("[\\.\\-]+");, +		Assert.isTrue(VALID_PATTERN.matcher(value).matches(),, +		if (WARNING_PATTERN.matcher(value).find()) {, +			logWarning(value);, +		}, +	static void resetLoggedWarnings() {, +		loggedWarnings.clear();, +	}, +, +	private static void logWarning(String value) {, +		if (logger.isWarnEnabled() && loggedWarnings.add(value)) {, +			logger.warn("Endpoint ID '" + value, +					+ "' contains invalid characters, please migrate to a valid format.");, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/EndpointIdTests.java, +import org.junit.Rule;, +import org.springframework.boot.test.rule.OutputCapture;, +, +	@Rule, +	public OutputCapture output = new OutputCapture();, +, +	public void ofWhenContainsDeprecatedCharsLogsWarning() {, +		EndpointId.resetLoggedWarnings();, +		EndpointId.of("foo-bar");, +		assertThat(this.output.toString()).contains(, +				"Endpoint ID 'foo-bar' contains invalid characters, please migrate to a valid format");, +	}, +, +	@Test]