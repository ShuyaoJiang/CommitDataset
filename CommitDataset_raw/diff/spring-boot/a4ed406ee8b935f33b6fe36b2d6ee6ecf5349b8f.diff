[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +import java.time.Duration;, + * @author Ryon Day, +	private final Redis redis = new Redis();, +, +	public Redis getRedis() {, +		return this.redis;, +	}, +, +	/**, +	 * Redis-specific cache properties. Properties set will be used as the defaults for, +	 * all Redis caches., +	 */, +	public static class Redis {, +, +		/**, +		 * Specifies the TTL (ultimately converted to seconds) for keys written to Redis., +		 * By default, entries do not expire, and a value of {@link Duration#ZERO} disables the TTL., +		 */, +		private Duration ttl = Duration.ZERO;, +, +		/**, +		 * Whether to allow caching of {@literal null} values., +		 */, +		private boolean cacheNullValues = true;, +, +		/**, +		 * Specifies an override for the default Redis key prefix. A value of {@literal null} results, +		 * in usage of the default key prefix., +		 */, +		private String keyPrefix;, +, +		/**, +		 * Whether to use the key prefix when writing to Redis., +		 */, +		private boolean useKeyPrefix = true;, +, +		public Duration getTtl() {, +			return this.ttl;, +		}, +, +		public Redis setTtl(Duration ttl) {, +			this.ttl = ttl;, +			return this;, +		}, +, +		public boolean isCacheNullValues() {, +			return this.cacheNullValues;, +		}, +, +		public Redis setCacheNullValues(boolean cacheNullValues) {, +			this.cacheNullValues = cacheNullValues;, +			return this;, +		}, +, +		public String getKeyPrefix() {, +			return this.keyPrefix;, +		}, +, +		public Redis setKeyPrefix(String keyPrefix) {, +			this.keyPrefix = keyPrefix;, +			return this;, +		}, +, +		public boolean isUseKeyPrefix() {, +			return this.useKeyPrefix;, +		}, +, +		public Redis setUseKeyPrefix(boolean useKeyPrefix) {, +			this.useKeyPrefix = useKeyPrefix;, +			return this;, +		}, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheProperties.java, +import java.time.Duration;, + * @author Ryon Day, +	private final Redis redis = new Redis();, +, +	public Redis getRedis() {, +		return this.redis;, +	}, +, +	/**, +	 * Redis-specific cache properties. Properties set will be used as the defaults for, +	 * all Redis caches., +	 */, +	public static class Redis {, +, +		/**, +		 * Specifies the TTL (ultimately converted to seconds) for keys written to Redis., +		 * By default, entries do not expire, and a value of {@link Duration#ZERO} disables the TTL., +		 */, +		private Duration ttl = Duration.ZERO;, +, +		/**, +		 * Whether to allow caching of {@literal null} values., +		 */, +		private boolean cacheNullValues = true;, +]