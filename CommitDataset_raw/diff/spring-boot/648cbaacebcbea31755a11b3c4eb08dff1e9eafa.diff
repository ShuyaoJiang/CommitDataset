[+++ b/CONTRIBUTING.adoc, +* Install "Spring Java Format"., +* Download the latest https://search.maven.org/search?q=g:io.spring.javaformat%20AND%20a:spring-javaformat-intellij-plugin[IntelliJ IDEA plugin]., +* Select "`Plugins`"., +* Select the wheel and "`Install Plugin from Disk...`"., +* Select the jar file you've downloaded., +* Select `idea/codeStyleConfig.xml` from this repository., +++ b/CONTRIBUTING.adoc, +* Install "Spring Java Format"., +* Download the latest https://search.maven.org/search?q=g:io.spring.javaformat%20AND%20a:spring-javaformat-intellij-plugin[IntelliJ IDEA plugin]., +* Select "`Plugins`"., +* Select the wheel and "`Install Plugin from Disk...`"., +* Select the jar file you've downloaded., +* Select `idea/codeStyleConfig.xml` from this repository., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +import org.glassfish.jersey.servlet.ServletContainer;, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.autoconfigure.jersey.JerseyProperties;, +import org.springframework.boot.autoconfigure.web.servlet.DefaultJerseyApplicationPath;, +import org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.boot.web.servlet.ServletRegistrationBean;, +import org.springframework.context.annotation.Configuration;, + * @author Madhura Bhave, +	@Configuration, +	@ConditionalOnMissingBean(ResourceConfig.class), +	@EnableConfigurationProperties(JerseyProperties.class), +	static class ResourceConfigConfiguration {, +, +		@Bean, +		public ResourceConfig resourceConfig(, +				ObjectProvider<ResourceConfigCustomizer> resourceConfigCustomizers) {, +			ResourceConfig resourceConfig = new ResourceConfig();, +			resourceConfigCustomizers.orderedStream(), +					.forEach((customizer) -> customizer.customize(resourceConfig));, +			return resourceConfig;, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JerseyApplicationPath jerseyApplicationPath(JerseyProperties properties,, +				ResourceConfig config) {, +			return new DefaultJerseyApplicationPath(properties.getApplicationPath(),, +					config);, +		}, +, +		@Bean, +		public ServletRegistrationBean<ServletContainer> jerseyServletRegistration(, +				ObjectProvider<ResourceConfigCustomizer> resourceConfigCustomizers,, +				JerseyApplicationPath jerseyApplicationPath) {, +			return new ServletRegistrationBean<>(, +					new ServletContainer(resourceConfig(resourceConfigCustomizers)),, +					jerseyApplicationPath.getUrlMapping());, +		}, +, +	}, +, +++ b/CONTRIBUTING.adoc, +* Install "Spring Java Format"., +* Download the latest https://search.maven.org/search?q=g:io.spring.javaformat%20AND%20a:spring-javaformat-intellij-plugin[IntelliJ IDEA plugin]., +* Select "`Plugins`"., +* Select the wheel and "`Install Plugin from Disk...`"., +* Select the jar file you've downloaded., +* Select `idea/codeStyleConfig.xml` from this repository., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.java, +import org.glassfish.jersey.servlet.ServletContainer;, +import org.springframework.beans.factory.ObjectProvider;, +import org.springframework.boot.autoconfigure.jersey.JerseyProperties;, +import org.springframework.boot.autoconfigure.web.servlet.DefaultJerseyApplicationPath;, +import org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.boot.web.servlet.ServletRegistrationBean;, +import org.springframework.context.annotation.Configuration;, + * @author Madhura Bhave, +	@Configuration, +	@ConditionalOnMissingBean(ResourceConfig.class), +	@EnableConfigurationProperties(JerseyProperties.class), +	static class ResourceConfigConfiguration {, +, +		@Bean, +		public ResourceConfig resourceConfig(, +				ObjectProvider<ResourceConfigCustomizer> resourceConfigCustomizers) {, +			ResourceConfig resourceConfig = new ResourceConfig();, +			resourceConfigCustomizers.orderedStream(), +					.forEach((customizer) -> customizer.customize(resourceConfig));, +			return resourceConfig;, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public JerseyApplicationPath jerseyApplicationPath(JerseyProperties properties,, +				ResourceConfig config) {, +			return new DefaultJerseyApplicationPath(properties.getApplicationPath(),, +					config);, +		}, +, +		@Bean, +		public ServletRegistrationBean<ServletContainer> jerseyServletRegistration(, +				ObjectProvider<ResourceConfigCustomizer> resourceConfigCustomizers,, +				JerseyApplicationPath jerseyApplicationPath) {]