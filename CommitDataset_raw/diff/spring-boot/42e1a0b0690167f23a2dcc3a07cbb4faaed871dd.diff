[+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, + * Copyright 2012-2015 the original author or authors., +import java.util.Map;, +import javax.sql.DataSource;, +import javax.transaction.Synchronization;, +import javax.transaction.SystemException;, +import javax.transaction.Transaction;, +import javax.transaction.TransactionManager;, +import javax.transaction.UserTransaction;, +, +import org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform;, +import org.springframework.boot.autoconfigure.jta.JtaAutoConfiguration;, +import org.springframework.boot.autoconfigure.jta.JtaProperties;, +	@Test, +	public void testCustomJtaPlatform() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.jpa.properties.hibernate.transaction.jta.platform:", +						+ TestJtaPlatform.class.getName());, +		this.context.register(JtaProperties.class, JtaAutoConfiguration.class);, +		setupTestConfiguration();, +		this.context.refresh();, +		Map<String, Object> jpaPropertyMap = this.context.getBean(, +				LocalContainerEntityManagerFactoryBean.class).getJpaPropertyMap();, +		assertThat((String) jpaPropertyMap.get("hibernate.transaction.jta.platform"),, +				equalTo(TestJtaPlatform.class.getName()));, +	}, +, +	public static class TestJtaPlatform implements JtaPlatform {, +, +		@Override, +		public TransactionManager retrieveTransactionManager() {, +			throw new UnsupportedOperationException();, +		}, +, +		@Override, +		public UserTransaction retrieveUserTransaction() {, +			throw new UnsupportedOperationException();, +		}, +, +		@Override, +		public Object getTransactionIdentifier(Transaction transaction) {, +			throw new UnsupportedOperationException();, +		}, +, +		@Override, +		public boolean canRegisterSynchronization() {, +			throw new UnsupportedOperationException();, +		}, +, +		@Override, +		public void registerSynchronization(Synchronization synchronization) {, +			throw new UnsupportedOperationException();, +		}, +, +		@Override, +		public int getCurrentStatus() throws SystemException {, +			throw new UnsupportedOperationException();, +		}, +, +	}, +]