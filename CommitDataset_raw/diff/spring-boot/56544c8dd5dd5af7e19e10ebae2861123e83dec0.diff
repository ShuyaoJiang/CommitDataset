[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	private static final Log logger = LogFactory.getLog(JpaBaseConfiguration.class);, +			logger.info("Could not determine persistence " + "unit root location from ", +					+ source + " : " + ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	private static final Log logger = LogFactory.getLog(JpaBaseConfiguration.class);, +			logger.info("Could not determine persistence " + "unit root location from ", +					+ source + " : " + ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/AbstractTemplateResolverConfiguration.java, +	private final ThymeleafProperties properties;, +	protected final ThymeleafProperties getProperties() {, +		return this.properties;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	private static final Log logger = LogFactory.getLog(JpaBaseConfiguration.class);, +			logger.info("Could not determine persistence " + "unit root location from ", +					+ source + " : " + ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/AbstractTemplateResolverConfiguration.java, +	private final ThymeleafProperties properties;, +	protected final ThymeleafProperties getProperties() {, +		return this.properties;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +				Method setCheckExistence = ReflectionUtils.findMethod(resolver.getClass(),, +						"setCheckExistence", boolean.class);, +				ReflectionUtils.invokeMethod(setCheckExistence, resolver,, +						getProperties().isCheckTemplate());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	private static final Log logger = LogFactory.getLog(JpaBaseConfiguration.class);, +			logger.info("Could not determine persistence " + "unit root location from ", +					+ source + " : " + ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/AbstractTemplateResolverConfiguration.java, +	private final ThymeleafProperties properties;, +	protected final ThymeleafProperties getProperties() {, +		return this.properties;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +				Method setCheckExistence = ReflectionUtils.findMethod(resolver.getClass(),, +						"setCheckExistence", boolean.class);, +				ReflectionUtils.invokeMethod(setCheckExistence, resolver,, +						getProperties().isCheckTemplate());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +		return this.checkTemplate;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	private static final Log logger = LogFactory.getLog(JpaBaseConfiguration.class);, +			logger.info("Could not determine persistence " + "unit root location from ", +					+ source + " : " + ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/AbstractTemplateResolverConfiguration.java, +	private final ThymeleafProperties properties;, +	protected final ThymeleafProperties getProperties() {, +		return this.properties;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +				Method setCheckExistence = ReflectionUtils.findMethod(resolver.getClass(),, +						"setCheckExistence", boolean.class);, +				ReflectionUtils.invokeMethod(setCheckExistence, resolver,, +						getProperties().isCheckTemplate());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +		return this.checkTemplate;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/MultipartAutoConfiguration.java, +		multipartResolver.setResolveLazily(this.multipartProperties.isResolveLazily());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	private static final Log logger = LogFactory.getLog(JpaBaseConfiguration.class);, +			logger.info("Could not determine persistence " + "unit root location from ", +					+ source + " : " + ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/AbstractTemplateResolverConfiguration.java, +	private final ThymeleafProperties properties;, +	protected final ThymeleafProperties getProperties() {, +		return this.properties;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +				Method setCheckExistence = ReflectionUtils.findMethod(resolver.getClass(),, +						"setCheckExistence", boolean.class);, +				ReflectionUtils.invokeMethod(setCheckExistence, resolver,, +						getProperties().isCheckTemplate());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +		return this.checkTemplate;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/MultipartAutoConfiguration.java, +		multipartResolver.setResolveLazily(this.multipartProperties.isResolveLazily());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/MultipartProperties.java, +		return this.resolveLazily;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +	private static final Log logger = LogFactory.getLog(JpaBaseConfiguration.class);, +			logger.info("Could not determine persistence " + "unit root location from ", +					+ source + " : " + ex);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/AbstractTemplateResolverConfiguration.java, +	private final ThymeleafProperties properties;, +	protected final ThymeleafProperties getProperties() {, +		return this.properties;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +				Method setCheckExistence = ReflectionUtils.findMethod(resolver.getClass(),, +						"setCheckExistence", boolean.class);, +				ReflectionUtils.invokeMethod(setCheckExistence, resolver,]