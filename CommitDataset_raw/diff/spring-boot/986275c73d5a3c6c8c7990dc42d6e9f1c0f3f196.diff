[+++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +, +	# AOP, +	spring.aop.auto=true # Add @EnableAspectJAutoProxy., +	spring.aop.proxy-target-class=false # Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false)., +, +	# ADMIN ({sc-spring-boot-autoconfigure}/admin/SpringApplicationAdminJmxAutoConfiguration.{sc-ext}[SpringApplicationAdminJmxAutoConfiguration]), +	spring.application.admin.enabled=false # Enable admin features for the application., +	spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean., +, +	# AUTO-CONFIGURATION, +	spring.autoconfigure.exclude= # Auto-configuration classes to exclude., +, +	# SPRING CACHE ({sc-spring-boot-autoconfigure}/cache/CacheProperties.{sc-ext}[CacheProperties]), +	spring.cache.cache-names= # Comma-separated list of cache names to create if supported by the underlying cache manager., +	spring.cache.ehcache.config= # The location of the configuration file to use to initialize EhCache., +	spring.cache.guava.spec= # The spec to use to create caches. Check CacheBuilderSpec for more details on the spec format., +	spring.cache.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast., +	spring.cache.infinispan.config= # The location of the configuration file to use to initialize Infinispan., +	spring.cache.jcache.config= # The location of the configuration file to use to initialize the cache manager., +	spring.cache.jcache.provider= # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Only needed if more than one JSR-107 implementation is available on the classpath., +	spring.cache.type= # Cache type, auto-detected according to the environment by default., +, +	# SPRING CONFIG ({sc-spring-boot}/context/config/ConfigFileApplicationListener.{sc-ext}[ConfigFileApplicationListener]), +	spring.config.location= # Config file locations. TODO, +	spring.config.name=application # Config file name., +, +	# HAZELCAST ({sc-spring-boot-autoconfigure}/hazelcast/HazelcastProperties.{sc-ext}[HazelcastProperties]), +	spring.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast., +, +	# JMX, +	spring.jmx.default-domain= # JMX domain name., +	spring.jmx.enabled=true # Expose management beans to the JMX domain., +	spring.jmx.server=mbeanServer # MBeanServer bean name., +, +	# Email ({sc-spring-boot-autoconfigure}/mail/MailProperties.{sc-ext}[MailProperties]), +	spring.mail.default-encoding=UTF-8 # Default MimeMessage encoding., +	spring.mail.host= # SMTP server host. For instance `smtp.example.com`, +	spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings., +	spring.mail.password= # Login password of the SMTP server., +	spring.mail.port= # SMTP server port., +	spring.mail.properties.*= # Additional JavaMail session properties., +	spring.mail.protocol=smtp # Protocol used by the SMTP server., +	spring.mail.test-connection=false # Test that the mail server is available on startup., +	spring.mail.username= # Login user of the SMTP server., +, +	# APPLICATION SETTINGS ({sc-spring-boot}/SpringApplication.{sc-ext}[SpringApplication]), +	spring.main.banner-mode=console # Mode used to display the banner when the application runs., +	spring.main.sources= # Sources (class name, package name or XML resource location) to include in the ApplicationContext., +	spring.main.web-environment= # Run the application in a web environment (auto-detected by default)., +, +	# FILE ENCODING ({sc-spring-boot}/context/FileEncodingApplicationListener.{sc-ext}[FileEncodingApplicationListener]), +	spring.mandatory-file-encoding= # Expected character encoding the application must use., +, +	# INTERNATIONALIZATION ({sc-spring-boot-autoconfigure}/MessageSourceAutoConfiguration.{sc-ext}[MessageSourceAutoConfiguration]), +	spring.messages.basename=messages # Comma-separated list of basenames, each following the ResourceBundle convention., +	spring.messages.cache-seconds=-1 # Loaded resource bundle files cache expiration, in seconds. When set to -1, bundles are cached forever., +	spring.messages.encoding=UTF-8 # Message bundles encoding., +	spring.messages.fallback-to-system-locale=true # Set whether to fall back to the system Locale if no files for a specific Locale have been found., +, +	# OUTPUT, +	spring.output.ansi.enabled=detect # Configure the ANSI output (can be "detect", "always", "never")., +, +	# PID FILE ({sc-spring-boot-actuator}/system/ApplicationPidFileWriter.{sc-ext}[ApplicationPidFileWriter]), +	spring.pid.fail-on-write-error= # Fail if ApplicationPidFileWriter is used but it cannot write the PID file., +	spring.pid.file= # Location of the PID file to write (if ApplicationPidFileWriter is used)., +, +	# PROFILES, +	spring.profiles.active= # Comma-separated list of <<howto-set-active-spring-profiles,active profiles>>., +	spring.profiles.include= # Unconditionally activate the specified comma separated profiles., +, +	# SENDGRID ({sc-spring-boot-autoconfigure}/sendgrid/SendGridAutoConfiguration.{sc-ext}[SendGridAutoConfiguration]), +	spring.sendgrid.username= # SendGrid account username, +	spring.sendgrid.password= # SendGrid account password, +	spring.sendgrid.proxy.host= # SendGrid proxy host, +	spring.sendgrid.proxy.port= # SendGrid proxy port, +, +, +	# ----------------------------------------, +	# WEB PROPERTIES, +	# ----------------------------------------, +, +	# MULTIPART ({sc-spring-boot-autoconfigure}/web/MultipartProperties.{sc-ext}[MultipartProperties]), +	multipart.enabled=true # Enable support of multi-part uploads., +	multipart.file-size-threshold=0 # Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size., +	multipart.location= # Intermediate location of uploaded files., +	multipart.max-file-size=1Mb # Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size., +	multipart.max-request-size=10Mb # Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size., +, +	# SPRING HATEOAS ({sc-spring-boot-autoconfigure}/hateoas/HateoasProperties.{sc-ext}[HateoasProperties]), +	spring.hateoas.use-hal-as-default-json-media-type=true # Specify if application/hal+json responses should be sent to requests that accept application/json., +, +	# HTTP message conversion, +	spring.http.converters.preferred-json-mapper=jackson # Preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath., +, +	# HTTP encoding ({sc-spring-boot-autoconfigure}/web/HttpEncodingProperties.{sc-ext}[HttpEncodingProperties]), +	spring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly., +	spring.http.encoding.enabled=true # Enable http encoding support., +	spring.http.encoding.force=true # Force the encoding to the configured charset on HTTP requests and responses., +]