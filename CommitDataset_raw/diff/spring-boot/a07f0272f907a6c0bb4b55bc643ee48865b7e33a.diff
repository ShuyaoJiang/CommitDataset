[+++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +		initializeEarlyLoggingLevel(environment);, +		cleanLogTempProperty();, +		LoggingSystem system = LoggingSystem.get(classLoader);, +		boolean systemEnvironmentChanged = mapSystemPropertiesFromSpring(environment);, +		if (systemEnvironmentChanged) {, +			// Re-initialize the defaults in case the system Environment changed, +			system.beforeInitialize();, +		}, +		initializeSystem(environment, system);, +		initializeFinalLoggingLevels(environment, system);, +	}, +	private void initializeEarlyLoggingLevel(ConfigurableEnvironment environment) {, +	}, +	private void cleanLogTempProperty() {, +	}, +	private boolean mapSystemPropertiesFromSpring(Environment environment) {, +		boolean changed = false;, +			String springName = mapping.getKey();, +			String systemName = mapping.getValue();, +			if (environment.containsProperty(springName)) {, +				System.setProperty(systemName, environment.getProperty(springName));, +				changed = true;, +		return changed;, +	}, +	private void initializeSystem(ConfigurableEnvironment environment,, +			LoggingSystem system) {, +				this.logger.warn("Logging environment value '" + value, +						+ "' cannot be opened and will be ignored ", +						+ "(using default location instead)");, +	}, +	private void initializeFinalLoggingLevels(ConfigurableEnvironment environment,, +			LoggingSystem system) {]