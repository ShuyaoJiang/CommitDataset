[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.jmx.export.annotation.ManagedResource;, +		@SuppressWarnings("rawtypes"), +		Class<? extends Endpoint> type = endpoint.getClass();, +		if (AnnotationUtils.findAnnotation(type, ManagedResource.class) != null) {, +			// Already managed, +			return;, +		}, +		if (type.isMemberClass(), +				&& AnnotationUtils.findAnnotation(type.getEnclosingClass(),, +						ManagedResource.class) != null) {, +			// Nested class with @ManagedResource in parent, +			return;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.jmx.export.annotation.ManagedResource;, +		@SuppressWarnings("rawtypes"), +		Class<? extends Endpoint> type = endpoint.getClass();, +		if (AnnotationUtils.findAnnotation(type, ManagedResource.class) != null) {, +			// Already managed, +			return;, +		}, +		if (type.isMemberClass(), +				&& AnnotationUtils.findAnnotation(type.getEnclosingClass(),, +						ManagedResource.class) != null) {, +			// Nested class with @ManagedResource in parent, +			return;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/ShutdownEndpointMBean.java, +import org.springframework.jmx.export.annotation.ManagedResource;, +@ManagedResource, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/EndpointMBeanExporter.java, +import org.springframework.core.annotation.AnnotationUtils;, +import org.springframework.jmx.export.annotation.ManagedResource;, +		@SuppressWarnings("rawtypes"), +		Class<? extends Endpoint> type = endpoint.getClass();, +		if (AnnotationUtils.findAnnotation(type, ManagedResource.class) != null) {, +			// Already managed, +			return;, +		}, +		if (type.isMemberClass(), +				&& AnnotationUtils.findAnnotation(type.getEnclosingClass(),, +						ManagedResource.class) != null) {, +			// Nested class with @ManagedResource in parent, +			return;, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/jmx/ShutdownEndpointMBean.java, +import org.springframework.jmx.export.annotation.ManagedResource;, +@ManagedResource, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfigurationTests.java, +import org.springframework.boot.actuate.endpoint.AbstractEndpoint;, +import org.springframework.boot.actuate.endpoint.Endpoint;, +import org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration;, +import org.springframework.context.annotation.Bean;, +import org.springframework.jmx.export.annotation.ManagedResource;, +import org.springframework.stereotype.Component;, +import static org.junit.Assert.assertFalse;, +import static org.junit.Assert.assertTrue;, +	public void testEndpointMBeanExporterIsInstalled() throws Exception {, +				EndpointMBeanExportAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		MBeanExporter mbeanExporter = this.context.getBean(EndpointMBeanExporter.class);, +, +		assertFalse(mbeanExporter.getServer(), +				.queryNames(getObjectName("*", "*,*", this.context), null).isEmpty());, +	}, +, +	@Test, +	public void testEndpointMBeanExporterIsNotInstalledIfManagedResource(), +			throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(TestConfiguration.class, JmxAutoConfiguration.class,, +				ManagedEndpoint.class, EndpointMBeanExportAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertNotNull(this.context.getBean(EndpointMBeanExporter.class));, +, +		MBeanExporter mbeanExporter = this.context.getBean(EndpointMBeanExporter.class);, +, +		assertTrue(mbeanExporter.getServer(), +				.queryNames(getObjectName("*", "*,*", this.context), null).isEmpty());, +	}, +, +	@Test, +	public void testEndpointMBeanExporterIsNotInstalledIfNestedInManagedResource(), +			throws Exception {, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(TestConfiguration.class, JmxAutoConfiguration.class,, +				NestedInManagedEndpoint.class,, +				EndpointMBeanExportAutoConfiguration.class,, +				PropertyPlaceholderAutoConfiguration.class);, +		this.context.refresh();, +		assertNotNull(this.context.getBean(EndpointMBeanExporter.class));, +, +		MBeanExporter mbeanExporter = this.context.getBean(EndpointMBeanExporter.class);, +, +		assertTrue(mbeanExporter.getServer(), +				.queryNames(getObjectName("*", "*,*", this.context), null).isEmpty());]