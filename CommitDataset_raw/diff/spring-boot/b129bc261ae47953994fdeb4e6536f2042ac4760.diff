[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +		private static final String DEFAULT_NAMING_STRATEGY = "org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy";, +		private Class<?> namingStrategy;, +				result.put("hibernate.ejb.naming_strategy", DEFAULT_NAMING_STRATEGY);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +		private static final String DEFAULT_NAMING_STRATEGY = "org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy";, +		private Class<?> namingStrategy;, +				result.put("hibernate.ejb.naming_strategy", DEFAULT_NAMING_STRATEGY);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.verify;, +		load(TestConfiguration.class, "spring.rabbitmq.host:remote-server",, +				"spring.rabbitmq.port:9000", "spring.rabbitmq.username:alice",, +				"spring.rabbitmq.password:secret", "spring.rabbitmq.virtual_host:/vhost");, +		assertEquals(this.context.getBean("testMessageConverter"),, +				rabbitTemplate.getMessageConverter());, +		RabbitMessagingTemplate messagingTemplate = this.context, +				.getBean(RabbitMessagingTemplate.class);, +				.getBean("rabbitListenerContainerFactory",, +						RabbitListenerContainerFactory.class);, +				.getBean("rabbitListenerContainerFactory",, +						SimpleRabbitListenerContainerFactory.class);, +			RabbitMessagingTemplate messagingTemplate = new RabbitMessagingTemplate(, +					rabbitTemplate);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/amqp/RabbitAnnotationDrivenConfiguration.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaProperties.java, +		private static final String DEFAULT_NAMING_STRATEGY = "org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy";, +		private Class<?> namingStrategy;, +				result.put("hibernate.ejb.naming_strategy", DEFAULT_NAMING_STRATEGY);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +import static org.junit.Assert.assertEquals;, +import static org.junit.Assert.assertNotNull;, +import static org.junit.Assert.assertTrue;, +import static org.mockito.Mockito.mock;, +import static org.mockito.Mockito.verify;, +		load(TestConfiguration.class, "spring.rabbitmq.host:remote-server",, +				"spring.rabbitmq.port:9000", "spring.rabbitmq.username:alice",, +				"spring.rabbitmq.password:secret", "spring.rabbitmq.virtual_host:/vhost");, +		assertEquals(this.context.getBean("testMessageConverter"),, +				rabbitTemplate.getMessageConverter());, +		RabbitMessagingTemplate messagingTemplate = this.context, +				.getBean(RabbitMessagingTemplate.class);, +				.getBean("rabbitListenerContainerFactory",, +						RabbitListenerContainerFactory.class);, +				.getBean("rabbitListenerContainerFactory",, +						SimpleRabbitListenerContainerFactory.class);, +			RabbitMessagingTemplate messagingTemplate = new RabbitMessagingTemplate(, +					rabbitTemplate);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/Ssl.java, + * @author Vladimir Tsanev]