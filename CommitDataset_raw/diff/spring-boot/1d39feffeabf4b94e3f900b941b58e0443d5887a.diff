[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * Copyright 2012-2018 the original author or authors., +	private final List<String> endpointIds;, +	AccessLevel(String... endpointIds) {, +		this.endpointIds = Arrays.asList(endpointIds);, +	 * @param endpointId the endpoint ID to check, +	public boolean isAccessAllowed(String endpointId) {, +		return this.endpointIds.isEmpty() || this.endpointIds.contains(endpointId);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * Copyright 2012-2018 the original author or authors., +	private final List<String> endpointIds;, +	AccessLevel(String... endpointIds) {, +		this.endpointIds = Arrays.asList(endpointIds);, +	 * @param endpointId the endpoint ID to check, +	public boolean isAccessAllowed(String endpointId) {, +		return this.endpointIds.isEmpty() || this.endpointIds.contains(endpointId);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +import org.springframework.boot.actuate.endpoint.annotation.DiscovererEndpointFilter;, + * {@link CloudFoundryWebEndpointDiscoverer}., +class CloudFoundryEndpointFilter extends DiscovererEndpointFilter {, +	protected CloudFoundryEndpointFilter() {, +		super(CloudFoundryWebEndpointDiscoverer.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * Copyright 2012-2018 the original author or authors., +	private final List<String> endpointIds;, +	AccessLevel(String... endpointIds) {, +		this.endpointIds = Arrays.asList(endpointIds);, +	 * @param endpointId the endpoint ID to check, +	public boolean isAccessAllowed(String endpointId) {, +		return this.endpointIds.isEmpty() || this.endpointIds.contains(endpointId);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +import org.springframework.boot.actuate.endpoint.annotation.DiscovererEndpointFilter;, + * {@link CloudFoundryWebEndpointDiscoverer}., +class CloudFoundryEndpointFilter extends DiscovererEndpointFilter {, +	protected CloudFoundryEndpointFilter() {, +		super(CloudFoundryWebEndpointDiscoverer.class);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/AccessLevel.java, + * Copyright 2012-2018 the original author or authors., +	private final List<String> endpointIds;, +	AccessLevel(String... endpointIds) {, +		this.endpointIds = Arrays.asList(endpointIds);, +	 * @param endpointId the endpoint ID to check, +	public boolean isAccessAllowed(String endpointId) {, +		return this.endpointIds.isEmpty() || this.endpointIds.contains(endpointId);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryEndpointFilter.java, +import org.springframework.boot.actuate.endpoint.annotation.DiscovererEndpointFilter;, + * {@link CloudFoundryWebEndpointDiscoverer}., +class CloudFoundryEndpointFilter extends DiscovererEndpointFilter {, +	protected CloudFoundryEndpointFilter() {, +		super(CloudFoundryWebEndpointDiscoverer.class);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryWebEndpointDiscoverer.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure.cloudfoundry;, +, +import java.util.Collection;, +, +import org.springframework.boot.actuate.endpoint.EndpointFilter;, +import org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor;, +import org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper;, +import org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes;, +import org.springframework.boot.actuate.endpoint.web.EndpointPathResolver;, +import org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint;, +import org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension;, +import org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer;, +import org.springframework.boot.actuate.health.HealthEndpoint;, +import org.springframework.context.ApplicationContext;, +import org.springframework.core.annotation.AnnotatedElementUtils;, +import org.springframework.core.annotation.AnnotationAttributes;, +, +/**, + * {@link WebEndpointDiscoverer} for Cloud Foundry that uses Cloud Foundry specific, + * extensions for the {@link HealthEndpoint}., + *, + * @author Madhura Bhave, + * @since 2.0.0, + */, +public class CloudFoundryWebEndpointDiscoverer extends WebEndpointDiscoverer {, +, +	/**, +	 * Create a new {@link WebEndpointDiscoverer} instance., +	 * @param applicationContext the source application context, +	 * @param parameterValueMapper the parameter value mapper, +	 * @param endpointMediaTypes the endpoint media types]