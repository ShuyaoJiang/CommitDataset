[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	/**, +	 * Display name of the application., +	 */, +	private String displayName = "application";, +, +	public String getDisplayName() {, +		return this.displayName;, +	}, +, +	public void setDisplayName(String displayName) {, +		this.displayName = displayName;, +	}, +, +		if (getDisplayName() != null) {, +			container.setDisplayName(getDisplayName());, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	/**, +	 * Display name of the application., +	 */, +	private String displayName = "application";, +, +	public String getDisplayName() {, +		return this.displayName;, +	}, +, +	public void setDisplayName(String displayName) {, +		this.displayName = displayName;, +	}, +, +		if (getDisplayName() != null) {, +			container.setDisplayName(getDisplayName());, +		}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +	public void testDefaultDisplayName() throws Exception {, +		ConfigurableEmbeddedServletContainer factory = mock(ConfigurableEmbeddedServletContainer.class);, +		this.properties.customize(factory);, +		verify(factory).setDisplayName("application");, +	}, +, +	@Test, +	public void testCustomizeDisplayName() throws Exception {, +		ConfigurableEmbeddedServletContainer factory = mock(ConfigurableEmbeddedServletContainer.class);, +		this.properties.setDisplayName("TestName");, +		this.properties.customize(factory);, +		verify(factory).setDisplayName("TestName");, +	}, +, +	@Test, +	public void customizeTomcatDisplayName() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.display-name", "MyBootApp");, +		bindProperties(map);, +, +		TomcatEmbeddedServletContainerFactory container = new TomcatEmbeddedServletContainerFactory();, +		this.properties.customize(container);, +, +		assertEquals("MyBootApp", container.getDisplayName());, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	/**, +	 * Display name of the application., +	 */, +	private String displayName = "application";, +, +	public String getDisplayName() {, +		return this.displayName;, +	}, +, +	public void setDisplayName(String displayName) {, +		this.displayName = displayName;, +	}, +, +		if (getDisplayName() != null) {, +			container.setDisplayName(getDisplayName());, +		}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +	public void testDefaultDisplayName() throws Exception {, +		ConfigurableEmbeddedServletContainer factory = mock(ConfigurableEmbeddedServletContainer.class);, +		this.properties.customize(factory);, +		verify(factory).setDisplayName("application");, +	}, +, +	@Test, +	public void testCustomizeDisplayName() throws Exception {, +		ConfigurableEmbeddedServletContainer factory = mock(ConfigurableEmbeddedServletContainer.class);, +		this.properties.setDisplayName("TestName");, +		this.properties.customize(factory);, +		verify(factory).setDisplayName("TestName");, +	}, +, +	@Test, +	public void customizeTomcatDisplayName() throws Exception {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.display-name", "MyBootApp");, +		bindProperties(map);, +]