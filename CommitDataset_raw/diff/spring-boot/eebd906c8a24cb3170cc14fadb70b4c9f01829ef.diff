[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor.java, + * @since 2.1.4, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor.java, + * @since 2.1.4, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor.java, + * @since 2.1.4, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import java.util.Collections;, +				.withPropertyValues("spring.flyway.locations:classpath:db/city"), +									.isEqualTo(0);, +						"spring.liquibase.changeLog:classpath:db/changelog/db.changelog-city.yaml"), +									.isEqualTo(0);, +			this.count = namedParameterJdbcTemplate.queryForObject(, +					"SELECT COUNT(*) from CITY", Collections.emptyMap(), Integer.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor.java, + * @since 2.1.4, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import java.util.Collections;, +				.withPropertyValues("spring.flyway.locations:classpath:db/city"), +									.isEqualTo(0);, +						"spring.liquibase.changeLog:classpath:db/changelog/db.changelog-city.yaml"), +									.isEqualTo(0);, +			this.count = namedParameterJdbcTemplate.queryForObject(, +					"SELECT COUNT(*) from CITY", Collections.emptyMap(), Integer.class);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor.java, + * @since 2.1.4, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import java.util.Collections;, +				.withPropertyValues("spring.flyway.locations:classpath:db/city"), +									.isEqualTo(0);, +						"spring.liquibase.changeLog:classpath:db/changelog/db.changelog-city.yaml"), +									.isEqualTo(0);, +			this.count = namedParameterJdbcTemplate.queryForObject(, +					"SELECT COUNT(*) from CITY", Collections.emptyMap(), Integer.class);, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcOperationsDependsOnPostProcessor.java, + * @since 2.1.4, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfigurationTests.java, + * Copyright 2012-2019 the original author or authors., +import java.util.Collections;, +				.withPropertyValues("spring.flyway.locations:classpath:db/city"), +									.isEqualTo(0);, +						"spring.liquibase.changeLog:classpath:db/changelog/db.changelog-city.yaml"), +									.isEqualTo(0);, +			this.count = namedParameterJdbcTemplate.queryForObject(, +					"SELECT COUNT(*) from CITY", Collections.emptyMap(), Integer.class);, +++ /dev/null, +++ /dev/null, +++ /dev/null]