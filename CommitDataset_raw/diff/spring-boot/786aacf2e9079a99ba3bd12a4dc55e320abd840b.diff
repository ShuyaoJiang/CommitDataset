[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnResourceCondition.java, +			Assert.isTrue(!locations.isEmpty(),, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnResourceCondition.java, +			Assert.isTrue(!locations.isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, +		if (!this.report.getConditionAndOutcomesBySource().isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnResourceCondition.java, +			Assert.isTrue(!locations.isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, +		if (!this.report.getConditionAndOutcomesBySource().isEmpty()) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/core/HintCommand.java, +			else if (!arguments.isEmpty() && (starting.length() > 0)) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnResourceCondition.java, +			Assert.isTrue(!locations.isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, +		if (!this.report.getConditionAndOutcomesBySource().isEmpty()) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/core/HintCommand.java, +			else if (!arguments.isEmpty() && (starting.length() > 0)) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/ProjectGenerationRequest.java, +			else if (types.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnResourceCondition.java, +			Assert.isTrue(!locations.isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, +		if (!this.report.getConditionAndOutcomesBySource().isEmpty()) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/core/HintCommand.java, +			else if (!arguments.isEmpty() && (starting.length() > 0)) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/ProjectGenerationRequest.java, +			else if (types.isEmpty()) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/options/SourceOptions.java, +		Assert.isTrue(!sources.isEmpty(), "Please specify at least one file");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnResourceCondition.java, +			Assert.isTrue(!locations.isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, +		if (!this.report.getConditionAndOutcomesBySource().isEmpty()) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/core/HintCommand.java, +			else if (!arguments.isEmpty() && (starting.length() > 0)) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/init/ProjectGenerationRequest.java, +			else if (types.isEmpty()) {, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/options/SourceOptions.java, +		Assert.isTrue(!sources.isEmpty(), "Please specify at least one file");, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/ExtendedGroovyClassLoader.java, +			Assert.state(!urls.isEmpty(), "Unable to find groovy JAR");, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java, +		if (statusOrder != null && !statusOrder.isEmpty()) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/OrderedHealthAggregator.java, +		if (filteredCandidates.isEmpty()) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/AnyNestedCondition.java, +		return new ConditionOutcome(!memberOutcomes.getMatches().isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnResourceCondition.java, +			Assert.isTrue(!locations.isEmpty(),, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, +		if (!this.report.getConditionAndOutcomesBySource().isEmpty()) {]