[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReport.java, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.LinkedHashSet;, +import java.util.Map;, +import java.util.Set;, +import java.util.SortedMap;, +import java.util.TreeMap;, +import org.springframework.util.Assert;, +import org.springframework.util.ObjectUtils;, +, +, +		Assert.notNull(source, "Source must not be null");, +		Assert.notNull(condition, "Condition must not be null");, +		Assert.notNull(outcome, "Outcome must not be null");, +		private Set<ConditionAndOutcome> outcomes = new LinkedHashSet<ConditionAndOutcome>();, +, +		public boolean equals(Object obj) {, +			if (this == obj) {, +			}, +			if (obj == null || getClass() != obj.getClass()) {, +			ConditionAndOutcome other = (ConditionAndOutcome) obj;, +			return (ObjectUtils.nullSafeEquals(this.condition.getClass(),, +					other.condition.getClass()) && ObjectUtils.nullSafeEquals(, +					this.outcome, other.outcome));, +			return this.condition.getClass().hashCode() * 31 + this.outcome.hashCode();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReport.java, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.LinkedHashSet;, +import java.util.Map;, +import java.util.Set;, +import java.util.SortedMap;, +import java.util.TreeMap;, +import org.springframework.util.Assert;, +import org.springframework.util.ObjectUtils;, +, +, +		Assert.notNull(source, "Source must not be null");, +		Assert.notNull(condition, "Condition must not be null");, +		Assert.notNull(outcome, "Outcome must not be null");, +		private Set<ConditionAndOutcome> outcomes = new LinkedHashSet<ConditionAndOutcome>();, +, +		public boolean equals(Object obj) {, +			if (this == obj) {, +			}, +			if (obj == null || getClass() != obj.getClass()) {, +			ConditionAndOutcome other = (ConditionAndOutcome) obj;, +			return (ObjectUtils.nullSafeEquals(this.condition.getClass(),, +					other.condition.getClass()) && ObjectUtils.nullSafeEquals(, +					this.outcome, other.outcome));, +			return this.condition.getClass().hashCode() * 31 + this.outcome.hashCode();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionOutcome.java, +import org.springframework.util.ObjectUtils;, +, +	@Override, +	public int hashCode() {, +		return ObjectUtils.hashCode(this.match) * 31, +				+ ObjectUtils.nullSafeHashCode(this.message);, +	}, +, +	@Override, +	public boolean equals(Object obj) {, +		if (this == obj) {, +			return true;, +		}, +		if (obj == null) {, +			return false;, +		}, +		if (getClass() == obj.getClass()) {, +			ConditionOutcome other = (ConditionOutcome) obj;, +			return (this.match == other.match && ObjectUtils.nullSafeEquals(this.message,, +					other.message));, +		}, +		return super.equals(obj);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReport.java, +import java.util.Collections;, +import java.util.Iterator;, +import java.util.LinkedHashSet;, +import java.util.Map;, +import java.util.Set;, +import java.util.SortedMap;, +import java.util.TreeMap;, +import org.springframework.util.Assert;, +import org.springframework.util.ObjectUtils;, +, +, +		Assert.notNull(source, "Source must not be null");, +		Assert.notNull(condition, "Condition must not be null");, +		Assert.notNull(outcome, "Outcome must not be null");, +		private Set<ConditionAndOutcome> outcomes = new LinkedHashSet<ConditionAndOutcome>();, +, +		public boolean equals(Object obj) {, +			if (this == obj) {, +			}, +			if (obj == null || getClass() != obj.getClass()) {, +			ConditionAndOutcome other = (ConditionAndOutcome) obj;, +			return (ObjectUtils.nullSafeEquals(this.condition.getClass(),]