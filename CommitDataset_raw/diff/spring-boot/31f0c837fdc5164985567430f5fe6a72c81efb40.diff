[+++ b/spring-boot-samples/spring-boot-sample-data-cassandra/src/test/java/sample/data/cassandra/OrderedCassandraTestExecutionListener.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package sample.data.cassandra;, +, +import org.cassandraunit.spring.CassandraUnitDependencyInjectionTestExecutionListener;, +import org.springframework.core.Ordered;, +, +public class OrderedCassandraTestExecutionListener extends, +		CassandraUnitDependencyInjectionTestExecutionListener {, +, +	@Override, +	public int getOrder() {, +		return Ordered.HIGHEST_PRECEDENCE;, +	}, +, +}, +++ b/spring-boot-samples/spring-boot-sample-data-cassandra/src/test/java/sample/data/cassandra/OrderedCassandraTestExecutionListener.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package sample.data.cassandra;, +, +import org.cassandraunit.spring.CassandraUnitDependencyInjectionTestExecutionListener;, +import org.springframework.core.Ordered;, +, +public class OrderedCassandraTestExecutionListener extends, +		CassandraUnitDependencyInjectionTestExecutionListener {, +, +	@Override, +	public int getOrder() {, +		return Ordered.HIGHEST_PRECEDENCE;, +	}, +, +}, +++ b/spring-boot-samples/spring-boot-sample-data-cassandra/src/test/java/sample/data/cassandra/SampleCassandraApplicationTests.java, +import org.springframework.boot.test.IntegrationTestPropertiesListener;, +@TestExecutionListeners(mergeMode = MergeMode.MERGE_WITH_DEFAULTS, listeners = {, +		IntegrationTestPropertiesListener.class,, +		OrderedCassandraTestExecutionListener.class }), +@IntegrationTest("spring.data.cassandra.port=9142")]