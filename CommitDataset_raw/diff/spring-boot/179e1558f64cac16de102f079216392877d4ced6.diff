[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializerPostProcessor.java, + * @since 1.1.2, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializerPostProcessor.java, + * @since 1.1.2, +, +++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/ClassifierTests.java, +import static org.junit.Assert.assertNotNull;, +, +	private static final String BOOT_VERSION = ManagedDependencies.get(), +			.find("spring-boot").getVersion();, +		this.project = new ProjectCreator().createProject("classifier");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +		this.project = new ProjectCreator().createProject("classifier-extension");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace", "--info"), +				.run();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializerPostProcessor.java, + * @since 1.1.2, +, +++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/ClassifierTests.java, +import static org.junit.Assert.assertNotNull;, +, +	private static final String BOOT_VERSION = ManagedDependencies.get(), +			.find("spring-boot").getVersion();, +		this.project = new ProjectCreator().createProject("classifier");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +		this.project = new ProjectCreator().createProject("classifier-extension");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace", "--info"), +				.run();, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/java/sample/ui/secure/SampleWebSecureApplication.java, +	protected static class AuthenticationSecurity extends, +			GlobalAuthenticationConfigurerAdapter {, +			auth.jdbcAuthentication().dataSource(this.dataSource).withUser("admin"), +					.password("admin").roles("ADMIN", "USER").and().withUser("user"), +					.password("user").roles("USER");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializerPostProcessor.java, + * @since 1.1.2, +, +++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/ClassifierTests.java, +import static org.junit.Assert.assertNotNull;, +, +	private static final String BOOT_VERSION = ManagedDependencies.get(), +			.find("spring-boot").getVersion();, +		this.project = new ProjectCreator().createProject("classifier");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +		this.project = new ProjectCreator().createProject("classifier-extension");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace", "--info"), +				.run();, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/java/sample/ui/secure/SampleWebSecureApplication.java, +	protected static class AuthenticationSecurity extends, +			GlobalAuthenticationConfigurerAdapter {, +			auth.jdbcAuthentication().dataSource(this.dataSource).withUser("admin"), +					.password("admin").roles("ADMIN", "USER").and().withUser("user"), +					.password("user").roles("USER");, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/SpringBootPluginExtension.groovy, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializerPostProcessor.java, + * @since 1.1.2, +, +++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/ClassifierTests.java, +import static org.junit.Assert.assertNotNull;, +, +	private static final String BOOT_VERSION = ManagedDependencies.get(), +			.find("spring-boot").getVersion();, +		this.project = new ProjectCreator().createProject("classifier");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +		this.project = new ProjectCreator().createProject("classifier-extension");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace", "--info"), +				.run();, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/java/sample/ui/secure/SampleWebSecureApplication.java, +	protected static class AuthenticationSecurity extends, +			GlobalAuthenticationConfigurerAdapter {, +			auth.jdbcAuthentication().dataSource(this.dataSource).withUser("admin"), +					.password("admin").roles("ADMIN", "USER").and().withUser("user"), +					.password("user").roles("USER");, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/SpringBootPluginExtension.groovy, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/repackage/RepackagePluginFeatures.java, +				setClassifier(this.task, archive);, +				String classifier = this.task.getClassifier();, +					this.task.getOutputs().file(file);, +					this.task.setOutputFile(file);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceInitializerPostProcessor.java, + * @since 1.1.2, +, +++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/ClassifierTests.java, +import static org.junit.Assert.assertNotNull;, +, +	private static final String BOOT_VERSION = ManagedDependencies.get(), +			.find("spring-boot").getVersion();, +		this.project = new ProjectCreator().createProject("classifier");, +		this.project.newBuild().forTasks("build"), +				.withArguments("-PbootVersion=" + BOOT_VERSION, "--stacktrace").run();, +		this.project = new ProjectCreator().createProject("classifier-extension");]