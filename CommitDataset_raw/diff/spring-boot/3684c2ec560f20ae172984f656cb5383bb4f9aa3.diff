[+++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockitoAopProxyTargetInterceptor.java, +import java.util.List;, +import org.mockito.internal.matchers.LocalizedMatcher;, +import org.mockito.internal.progress.ArgumentMatcherStorage;, +					resetVerificationStarted(mode);, +					resetVerificationStarted(mode);, +		private void resetVerificationStarted(VerificationMode mode) {, +			ArgumentMatcherStorage storage = this.progress.getArgumentMatcherStorage();, +			List<LocalizedMatcher> matchers = storage.pullLocalizedMatchers();, +			this.progress.verificationStarted(mode);, +			for (LocalizedMatcher matcher : matchers) {, +				storage.reportMatcher(matcher);, +			}, +		}, +, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockitoAopProxyTargetInterceptor.java, +import java.util.List;, +import org.mockito.internal.matchers.LocalizedMatcher;, +import org.mockito.internal.progress.ArgumentMatcherStorage;, +					resetVerificationStarted(mode);, +					resetVerificationStarted(mode);, +		private void resetVerificationStarted(VerificationMode mode) {, +			ArgumentMatcherStorage storage = this.progress.getArgumentMatcherStorage();, +			List<LocalizedMatcher> matchers = storage.pullLocalizedMatchers();, +			this.progress.verificationStarted(mode);, +			for (LocalizedMatcher matcher : matchers) {, +				storage.reportMatcher(matcher);, +			}, +		}, +, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockBeanWithAopProxyTests.java, +import static org.mockito.Matchers.anyBoolean;, +import static org.mockito.Matchers.eq;, +		given(this.dateService.getDate(false)).willReturn(1L);, +		Long d1 = this.dateService.getDate(false);, +		given(this.dateService.getDate(false)).willReturn(2L);, +		Long d2 = this.dateService.getDate(false);, +		verify(this.dateService, times(2)).getDate(false);, +		verify(this.dateService, times(2)).getDate(eq(false));, +		verify(this.dateService, times(2)).getDate(anyBoolean());, +		public Long getDate(boolean argument) {, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockitoAopProxyTargetInterceptor.java, +import java.util.List;, +import org.mockito.internal.matchers.LocalizedMatcher;, +import org.mockito.internal.progress.ArgumentMatcherStorage;, +					resetVerificationStarted(mode);, +					resetVerificationStarted(mode);, +		private void resetVerificationStarted(VerificationMode mode) {, +			ArgumentMatcherStorage storage = this.progress.getArgumentMatcherStorage();, +			List<LocalizedMatcher> matchers = storage.pullLocalizedMatchers();, +			this.progress.verificationStarted(mode);, +			for (LocalizedMatcher matcher : matchers) {, +				storage.reportMatcher(matcher);, +			}, +		}, +, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockBeanWithAopProxyTests.java, +import static org.mockito.Matchers.anyBoolean;, +import static org.mockito.Matchers.eq;, +		given(this.dateService.getDate(false)).willReturn(1L);, +		Long d1 = this.dateService.getDate(false);, +		given(this.dateService.getDate(false)).willReturn(2L);, +		Long d2 = this.dateService.getDate(false);, +		verify(this.dateService, times(2)).getDate(false);, +		verify(this.dateService, times(2)).getDate(eq(false));, +		verify(this.dateService, times(2)).getDate(anyBoolean());, +		public Long getDate(boolean argument) {, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/SpyBeanWithAopProxyAndNotProxyTargetAwareTests.java, +import static org.mockito.Matchers.anyBoolean;, +import static org.mockito.Matchers.eq;, +		this.dateService.getDate(false);, +		verify(this.dateService, times(1)).getDate(false);, +		verify(this.dateService, times(1)).getDate(eq(false));, +		verify(this.dateService, times(1)).getDate(anyBoolean());, +		public Long getDate(boolean arg) {, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockitoAopProxyTargetInterceptor.java, +import java.util.List;, +import org.mockito.internal.matchers.LocalizedMatcher;, +import org.mockito.internal.progress.ArgumentMatcherStorage;, +					resetVerificationStarted(mode);, +					resetVerificationStarted(mode);, +		private void resetVerificationStarted(VerificationMode mode) {, +			ArgumentMatcherStorage storage = this.progress.getArgumentMatcherStorage();, +			List<LocalizedMatcher> matchers = storage.pullLocalizedMatchers();, +			this.progress.verificationStarted(mode);, +			for (LocalizedMatcher matcher : matchers) {, +				storage.reportMatcher(matcher);, +			}, +		}, +, +++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockBeanWithAopProxyTests.java, +import static org.mockito.Matchers.anyBoolean;, +import static org.mockito.Matchers.eq;, +		given(this.dateService.getDate(false)).willReturn(1L);, +		Long d1 = this.dateService.getDate(false);, +		given(this.dateService.getDate(false)).willReturn(2L);, +		Long d2 = this.dateService.getDate(false);, +		verify(this.dateService, times(2)).getDate(false);, +		verify(this.dateService, times(2)).getDate(eq(false));, +		verify(this.dateService, times(2)).getDate(anyBoolean());]