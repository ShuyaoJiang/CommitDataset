[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/BackgroundPreinitializer.java, + * time consuming tasks., + * <p>, + * Set the {@value IGNORE_BACKGROUNDPREINITIALIZER_PROPERTY_NAME} system property to, + * {@code true} to disable this mechanism and let such initialization happen in the, + * foreground., +	/**, +	 * System property that instructs Spring Boot how to run pre initialization. When the, +	 * property is set to {@code true}, no pre intialization happens and each item is, +	 * initialized in the foreground as it needs to. When the property is {@code false}, +	 * (default), pre initialization runs in a separate thread in the background., +	 * @since 2.1.0, +	 */, +	public static final String IGNORE_BACKGROUNDPREINITIALIZER_PROPERTY_NAME = "spring.backgroundpreinitializer.ignore";, +, +		if (!Boolean.getBoolean(IGNORE_BACKGROUNDPREINITIALIZER_PROPERTY_NAME), +				&& event instanceof ApplicationStartingEvent, +			performPreinitialization();, +	private void performPreinitialization() {, +			Thread thread = new Thread(new Runnable() {, +			}, "background-preinit");, +			thread.start();, +		}, +		catch (Exception ex) {, +			// This will fail on GAE where creating threads is prohibited. We can safely, +			// continue but startup will be slightly slower as the initialization will now, +			// happen on the main thread., +			preinitializationComplete.countDown();, +		}]