[+++ b/spring-boot-samples/spring-boot-sample-cache/README.adoc, +the application starts a client invokes the service with a random code every 500ms., +You can look at the `/metrics` endpoint to review the cache statistics if your chosen, +NOTE: You can use the JSR-107 annotations with _any_ cache provider; a JSR-107, +compliant cache provider is not necessary., +on simple `ConcurrentHashMap`-based caches. You can try out your favorite caching, +library as explained below., +If you want to configure your cache infrastructure via the standard, you need a, +compliant implementation and the JSR-107 api. You first need to add, +`javax.cache:cache-api` to your project. Then you could try the following:, +TIP: Certain cache providers do not create a default cache on-the-fly if it does not, +exist so you might need to update the sample to create the caches on startup or, +specify the location to the provider-specific file via the, +`spring.cache.jcache.config` property., +default `ehcache.xml` configuration file at the root of the classpath,, +it is automatically used to configure the underlying `CacheManager`., +Note that EhCache 3 uses a different format and doesn't default to `ehcache.xml`, +anymore. Check http://www.ehcache.org/documentation/3.0/xml.html[the documentation], +for more details., +TIP: Run sample cache application using EhCache with, +`$mvn spring-boot:run -Pehcache2`., +, +Both `com.hazelcast:hazelcast` and `com.hazelcast:hazelcast-spring` should be added, +to the project to enable support for Hazelcast.  Since there is a default, +`hazelcast.xml` configuration file at the root of the classpath, it is used to, +automatically configure the underlying `HazelcastInstance`., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Phazelcast`., +, +Infinispan. There is no default location that Infinispan uses to look for a config, +file so if you don't specify anything it will bootstrap on a hardcoded default. You, +can set the `spring.cache.infinispan.config` property to use the provided, +`infinispan.xml` configuration instead., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Pinfinispan`., +, +Add the `java-client` and `couchbase-spring-cache` dependencies and make sure that, +you have setup at least a `spring.couchbase.bootstrap-hosts` property., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Pcouchbase`., +, +Add the `spring-boot-starter-data-redis` and make sure it is configured properly (by, +default, a redis instance with the default settings is expected on your local box)., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Predis`., +, +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Pcaffeine`., +, +Spring Boot does not provide any dependency management for _Guava_ so you'll have to, +add the `com.google.guava:guava` dependency with a version. You can customize how, +caches are created in different ways, see `application.properties` for an example and, +the documentation for more details., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Pguava`., +++ b/spring-boot-samples/spring-boot-sample-cache/README.adoc, +the application starts a client invokes the service with a random code every 500ms., +You can look at the `/metrics` endpoint to review the cache statistics if your chosen, +NOTE: You can use the JSR-107 annotations with _any_ cache provider; a JSR-107, +compliant cache provider is not necessary., +on simple `ConcurrentHashMap`-based caches. You can try out your favorite caching, +library as explained below., +If you want to configure your cache infrastructure via the standard, you need a, +compliant implementation and the JSR-107 api. You first need to add, +`javax.cache:cache-api` to your project. Then you could try the following:, +TIP: Certain cache providers do not create a default cache on-the-fly if it does not, +exist so you might need to update the sample to create the caches on startup or, +specify the location to the provider-specific file via the, +`spring.cache.jcache.config` property., +default `ehcache.xml` configuration file at the root of the classpath,, +it is automatically used to configure the underlying `CacheManager`., +Note that EhCache 3 uses a different format and doesn't default to `ehcache.xml`, +anymore. Check http://www.ehcache.org/documentation/3.0/xml.html[the documentation], +for more details., +TIP: Run sample cache application using EhCache with, +`$mvn spring-boot:run -Pehcache2`., +, +Both `com.hazelcast:hazelcast` and `com.hazelcast:hazelcast-spring` should be added, +to the project to enable support for Hazelcast.  Since there is a default, +`hazelcast.xml` configuration file at the root of the classpath, it is used to, +automatically configure the underlying `HazelcastInstance`., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Phazelcast`., +, +Infinispan. There is no default location that Infinispan uses to look for a config, +file so if you don't specify anything it will bootstrap on a hardcoded default. You, +can set the `spring.cache.infinispan.config` property to use the provided, +`infinispan.xml` configuration instead., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Pinfinispan`., +, +Add the `java-client` and `couchbase-spring-cache` dependencies and make sure that, +you have setup at least a `spring.couchbase.bootstrap-hosts` property., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Pcouchbase`., +, +Add the `spring-boot-starter-data-redis` and make sure it is configured properly (by, +default, a redis instance with the default settings is expected on your local box)., +TIP: Run sample cache application using Hazelcast with, +`$mvn spring-boot:run -Predis`.]