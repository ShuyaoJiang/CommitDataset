[+++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/logger/DevToolsLogFactory.java, +import org.apache.commons.logging.Log;, +, +	private static final Map<Log, Class<?>> logs = new LinkedHashMap<>();, +	 * Get a {@link Log} instance for the specified source that will be automatically, +	 * {@link DeferredLog#switchTo(Class) switched} then the {@link AbstractPageRequest, +	 * context is prepared}., +	public static Log getLog(Class<?> source) {, +			Log log = new DeferredLog();, +				logs.forEach((log, source) -> {, +					if (log instanceof DeferredLog) {, +						((DeferredLog) log).switchTo(source);, +					}, +				});, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/logger/DevToolsLogFactory.java, +import org.apache.commons.logging.Log;, +, +	private static final Map<Log, Class<?>> logs = new LinkedHashMap<>();, +	 * Get a {@link Log} instance for the specified source that will be automatically, +	 * {@link DeferredLog#switchTo(Class) switched} then the {@link AbstractPageRequest, +	 * context is prepared}., +	public static Log getLog(Class<?> source) {, +			Log log = new DeferredLog();, +				logs.forEach((log, source) -> {, +					if (log instanceof DeferredLog) {, +						((DeferredLog) log).switchTo(source);, +					}, +				});, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/DeferredLog.java]