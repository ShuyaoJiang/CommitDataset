[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/newrelic/NewRelicMetricsExportAutoConfiguration.java, +	public NewRelicMeterRegistry newRelicMeterRegistry(NewRelicConfig newRelicConfig,, +		return new NewRelicMeterRegistry(newRelicConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/newrelic/NewRelicMetricsExportAutoConfiguration.java, +	public NewRelicMeterRegistry newRelicMeterRegistry(NewRelicConfig newRelicConfig,, +		return new NewRelicMeterRegistry(newRelicConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig wavefrontConfig,, +		return new WavefrontMeterRegistry(wavefrontConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/newrelic/NewRelicMetricsExportAutoConfiguration.java, +	public NewRelicMeterRegistry newRelicMeterRegistry(NewRelicConfig newRelicConfig,, +		return new NewRelicMeterRegistry(newRelicConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig wavefrontConfig,, +		return new WavefrontMeterRegistry(wavefrontConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphiteMetricsExportAutoConfigurationTests.java, +				.withPropertyValues(, +						"management.metrics.export.graphite.tags-as-prefix=app"), +					GraphiteMeterRegistry registry = context, +							.getBean(GraphiteMeterRegistry.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/newrelic/NewRelicMetricsExportAutoConfiguration.java, +	public NewRelicMeterRegistry newRelicMeterRegistry(NewRelicConfig newRelicConfig,, +		return new NewRelicMeterRegistry(newRelicConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig wavefrontConfig,, +		return new WavefrontMeterRegistry(wavefrontConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphiteMetricsExportAutoConfigurationTests.java, +				.withPropertyValues(, +						"management.metrics.export.graphite.tags-as-prefix=app"), +					GraphiteMeterRegistry registry = context, +							.getBean(GraphiteMeterRegistry.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfigurationTests.java, +			return (key) -> null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/newrelic/NewRelicMetricsExportAutoConfiguration.java, +	public NewRelicMeterRegistry newRelicMeterRegistry(NewRelicConfig newRelicConfig,, +		return new NewRelicMeterRegistry(newRelicConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig wavefrontConfig,, +		return new WavefrontMeterRegistry(wavefrontConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphiteMetricsExportAutoConfigurationTests.java, +				.withPropertyValues(, +						"management.metrics.export.graphite.tags-as-prefix=app"), +					GraphiteMeterRegistry registry = context, +							.getBean(GraphiteMeterRegistry.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfigurationTests.java, +			return (key) -> null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/statsd/StatsdMetricsExportAutoConfigurationTests.java, +			return (key) -> null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/newrelic/NewRelicMetricsExportAutoConfiguration.java, +	public NewRelicMeterRegistry newRelicMeterRegistry(NewRelicConfig newRelicConfig,, +		return new NewRelicMeterRegistry(newRelicConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java, +	public WavefrontMeterRegistry wavefrontMeterRegistry(WavefrontConfig wavefrontConfig,, +		return new WavefrontMeterRegistry(wavefrontConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/graphite/GraphiteMetricsExportAutoConfigurationTests.java, +				.withPropertyValues(, +						"management.metrics.export.graphite.tags-as-prefix=app"), +					GraphiteMeterRegistry registry = context, +							.getBean(GraphiteMeterRegistry.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfigurationTests.java, +			return (key) -> null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/export/statsd/StatsdMetricsExportAutoConfigurationTests.java, +			return (key) -> null;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfigurationTests.java, +				.run((context) -> assertThat(context), +						.hasSingleBean(OrderedRequestContextFilter.class));, +		this.contextRunner.withUserConfiguration(ExistingConfig.class,, +				WebMvcEndpointChildContextConfiguration.class).run((context) -> {, +		this.contextRunner.withUserConfiguration(RequestContextListenerConfig.class,, +				WebMvcEndpointChildContextConfiguration.class).run((context) -> {, +					assertThat(context), +							.doesNotHaveBean(OrderedRequestContextFilter.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/jmx/JmxMetricsExportAutoConfiguration.java, +	public JmxMeterRegistry jmxMeterRegistry(JmxConfig jmxConfig, Clock clock) {, +		return new JmxMeterRegistry(jmxConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/newrelic/NewRelicMetricsExportAutoConfiguration.java, +	public NewRelicMeterRegistry newRelicMeterRegistry(NewRelicConfig newRelicConfig,, +		return new NewRelicMeterRegistry(newRelicConfig, clock);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontMetricsExportAutoConfiguration.java]