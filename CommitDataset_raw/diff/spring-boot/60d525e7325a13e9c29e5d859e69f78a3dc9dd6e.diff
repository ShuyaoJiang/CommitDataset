[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ArrayBinder.java, +		IndexedCollectionSupplier result = new IndexedCollectionSupplier(ArrayList::new);, +		ResolvableType aggregateType = target.getType();, +		bindIndexed(name, elementBinder, aggregateType, elementType, result);, +		if (result.wasSupplied()) {, +			List<Object> list = (List<Object>) result.get();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ArrayBinder.java, +		IndexedCollectionSupplier result = new IndexedCollectionSupplier(ArrayList::new);, +		ResolvableType aggregateType = target.getType();, +		bindIndexed(name, elementBinder, aggregateType, elementType, result);, +		if (result.wasSupplied()) {, +			List<Object> list = (List<Object>) result.get();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/CollectionBinder.java, +		ResolvableType elementType = target.getType().asCollection().getGeneric();, +		IndexedCollectionSupplier result = new IndexedCollectionSupplier(, +				() -> CollectionFactory.createCollection(collectionType, 0));, +		bindIndexed(name, elementBinder, aggregateType, elementType, result);, +		if (result.wasSupplied()) {, +			return result.get();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ArrayBinder.java, +		IndexedCollectionSupplier result = new IndexedCollectionSupplier(ArrayList::new);, +		ResolvableType aggregateType = target.getType();, +		bindIndexed(name, elementBinder, aggregateType, elementType, result);, +		if (result.wasSupplied()) {, +			List<Object> list = (List<Object>) result.get();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/CollectionBinder.java, +		ResolvableType elementType = target.getType().asCollection().getGeneric();, +		IndexedCollectionSupplier result = new IndexedCollectionSupplier(, +				() -> CollectionFactory.createCollection(collectionType, 0));, +		bindIndexed(name, elementBinder, aggregateType, elementType, result);, +		if (result.wasSupplied()) {, +			return result.get();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/IndexedElementsBinder.java, +	/**, +	 * Bind indexed elements to the supplied collection., +	 * @param name The name of the property to bind, +	 * @param elementBinder the binder to use for elements, +	 * @param aggregateType the aggregate type, may be a collection or an array, +	 * @param elementType the element type, +	 * @param result the destination for results, +	 */, +			AggregateElementBinder elementBinder, ResolvableType aggregateType,, +			ResolvableType elementType, IndexedCollectionSupplier result) {, +			bindIndexed(source, name, elementBinder, result, aggregateType, elementType);, +			if (result.wasSupplied() && result.get() != null) {, +	 * {@link AggregateBinder.AggregateSupplier AggregateSupplier} for an indexed]