[+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +	public void testDefaultConnectionFactoryConfiguration() {, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.run((context) -> {, +					RabbitProperties properties = new RabbitProperties();, +					com.rabbitmq.client.ConnectionFactory rabbitConnectionFactory = getTargetConnectionFactory(, +							context);, +					assertThat(rabbitConnectionFactory.getUsername()), +							.isEqualTo(properties.getUsername());, +					assertThat(rabbitConnectionFactory.getPassword()), +							.isEqualTo(properties.getPassword());, +				});, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/amqp/RabbitAutoConfigurationTests.java, +	public void testDefaultConnectionFactoryConfiguration() {, +		this.contextRunner.withUserConfiguration(TestConfiguration.class), +				.run((context) -> {, +					RabbitProperties properties = new RabbitProperties();, +					com.rabbitmq.client.ConnectionFactory rabbitConnectionFactory = getTargetConnectionFactory(, +							context);, +					assertThat(rabbitConnectionFactory.getUsername()), +							.isEqualTo(properties.getUsername());, +					assertThat(rabbitConnectionFactory.getPassword()), +							.isEqualTo(properties.getPassword());, +				});, +	}, +, +	@Test, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.rabbitmq.password=guest # Login to authenticate against the broker., +	spring.rabbitmq.username=guest # Login user to authenticate to the broker.]