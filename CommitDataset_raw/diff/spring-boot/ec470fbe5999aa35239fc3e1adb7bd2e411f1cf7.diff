[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +			callRunners(context, applicationArguments);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +			callRunners(context, applicationArguments);, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +import org.mockito.ArgumentMatchers;, +import org.mockito.InOrder;, +import org.mockito.Mockito;, +	@SuppressWarnings("unchecked"), +	public void runnersAreCalledAfterApplicationReadyEventIsPublished() throws Exception {, +		SpringApplication application = new SpringApplication(, +				MockRunnerConfiguration.class);, +		application.setWebApplicationType(WebApplicationType.NONE);, +		ApplicationListener<ApplicationReadyEvent> eventListener = mock(, +				ApplicationListener.class);, +		application.addListeners(eventListener);, +		this.context = application.run();, +		ApplicationRunner applicationRunner = this.context, +				.getBean(ApplicationRunner.class);, +		CommandLineRunner commandLineRunner = this.context, +				.getBean(CommandLineRunner.class);, +		InOrder applicationRunnerOrder = Mockito.inOrder(eventListener,, +				applicationRunner);, +		applicationRunnerOrder.verify(eventListener), +				.onApplicationEvent(ArgumentMatchers.any(ApplicationReadyEvent.class));, +		applicationRunnerOrder.verify(applicationRunner), +				.run(ArgumentMatchers.any(ApplicationArguments.class));, +		InOrder commandLineRunnerOrder = Mockito.inOrder(eventListener,, +				commandLineRunner);, +		commandLineRunnerOrder.verify(eventListener), +				.onApplicationEvent(ArgumentMatchers.any(ApplicationReadyEvent.class));, +		commandLineRunnerOrder.verify(commandLineRunner).run();, +	}, +, +	@Test, +	@Configuration, +	static class MockRunnerConfiguration {, +, +		@Bean, +		public CommandLineRunner commandLineRunner() {, +			return mock(CommandLineRunner.class);, +		}, +, +		@Bean, +		public ApplicationRunner applicationRunner() {, +			return mock(ApplicationRunner.class);, +		}, +, +	}, +]