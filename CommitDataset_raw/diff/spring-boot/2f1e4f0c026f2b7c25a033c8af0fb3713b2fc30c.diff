[+++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +=== /auditevents, +This endpoint provides information about audit events registered by the application., +Audit events can be filtered using the `after`, `principal` and `type` parameters as, +defined by `AuditEventRepository`., +, +Example cURL request with `after` parameter:, +include::{generated}/auditevents/curl-request.adoc[], +, +Example HTTP request with `after` parameter:, +include::{generated}/auditevents/http-request.adoc[], +, +Example HTTP response:, +include::{generated}/auditevents/http-response.adoc[], +, +Example cURL request with `principal` and `after` parameters:, +include::{generated}/auditevents/filter-by-principal/curl-request.adoc[], +, +Example HTTP request with `principal` and `after` parameters:, +include::{generated}/auditevents/filter-by-principal/http-request.adoc[], +, +Example cURL request with `principal`, `after` and `type` parameters:, +include::{generated}/auditevents/filter-by-principal-and-type/curl-request.adoc[], +, +Example HTTP request with `principal`, `after` and `type` parameters:, +include::{generated}/auditevents/filter-by-principal-and-type/http-request.adoc[], +, +, +, +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +=== /auditevents, +This endpoint provides information about audit events registered by the application., +Audit events can be filtered using the `after`, `principal` and `type` parameters as, +defined by `AuditEventRepository`., +, +Example cURL request with `after` parameter:, +include::{generated}/auditevents/curl-request.adoc[], +, +Example HTTP request with `after` parameter:, +include::{generated}/auditevents/http-request.adoc[], +, +Example HTTP response:, +include::{generated}/auditevents/http-response.adoc[], +, +Example cURL request with `principal` and `after` parameters:, +include::{generated}/auditevents/filter-by-principal/curl-request.adoc[], +, +Example HTTP request with `principal` and `after` parameters:, +include::{generated}/auditevents/filter-by-principal/http-request.adoc[], +, +Example cURL request with `principal`, `after` and `type` parameters:, +include::{generated}/auditevents/filter-by-principal-and-type/curl-request.adoc[], +, +Example HTTP request with `principal`, `after` and `type` parameters:, +include::{generated}/auditevents/filter-by-principal-and-type/http-request.adoc[], +, +, +, +++ b/spring-boot-actuator-docs/src/restdoc/java/org/springframework/boot/actuate/hypermedia/EndpointDocumentation.java, +			new HashSet<String>(Arrays.asList("/docs", "/logfile", "/heapdump",, +					"/auditevents")));, +	public void auditEvents() throws Exception {, +		this.mockMvc.perform(get("/auditevents"), +						.param("after", "2016-11-01T10:00:00+0000"), +						.accept(MediaType.APPLICATION_JSON)), +				.andExpect(status().isOk()).andDo(document("auditevents"));, +	}, +, +	@Test, +	public void auditEventsByPrincipal() throws Exception {, +		this.mockMvc.perform(get("/auditevents").param("principal", "admin"), +						.param("after", "2016-11-01T10:00:00+0000"), +						.accept(MediaType.APPLICATION_JSON)), +				.andExpect(status().isOk()), +				.andDo(document("auditevents/filter-by-principal"));, +	}, +, +	@Test, +	public void auditEventsByPrincipalAndType() throws Exception {, +		this.mockMvc.perform(get("/auditevents").param("principal", "admin"), +						.param("after", "2016-11-01T10:00:00+0000"), +						.param("type", "AUTHENTICATION_SUCCESS"), +						.accept(MediaType.APPLICATION_JSON)), +				.andExpect(status().isOk()), +				.andDo(document("auditevents/filter-by-principal-and-type"));, +	}, +, +	@Test, +++ b/spring-boot-actuator-docs/src/main/asciidoc/index.adoc, +=== /auditevents, +This endpoint provides information about audit events registered by the application., +Audit events can be filtered using the `after`, `principal` and `type` parameters as, +defined by `AuditEventRepository`., +, +Example cURL request with `after` parameter:, +include::{generated}/auditevents/curl-request.adoc[], +, +Example HTTP request with `after` parameter:, +include::{generated}/auditevents/http-request.adoc[], +]