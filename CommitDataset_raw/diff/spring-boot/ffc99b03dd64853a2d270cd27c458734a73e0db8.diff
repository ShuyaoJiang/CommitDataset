[+++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/dsl/SpringBootExtension.java, + * Copyright 2012-2018 the original author or authors., +			bootBuildInfo.getConventionMapping().map("destinationDir",, +					() -> new File(determineMainSourceSetResourcesOutputDir(),, +							"META-INF"));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/dsl/SpringBootExtension.java, + * Copyright 2012-2018 the original author or authors., +			bootBuildInfo.getConventionMapping().map("destinationDir",, +					() -> new File(determineMainSourceSetResourcesOutputDir(),, +							"META-INF"));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/ApplicationPluginAction.java, + * Copyright 2012-2018 the original author or authors., +		bootStartScripts.getConventionMapping().map("outputDir",, +				() -> new File(project.getBuildDir(), "bootScripts"));, +		bootStartScripts.getConventionMapping().map("applicationName",, +				() -> applicationConvention.getApplicationName());, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/dsl/SpringBootExtension.java, + * Copyright 2012-2018 the original author or authors., +			bootBuildInfo.getConventionMapping().map("destinationDir",, +					() -> new File(determineMainSourceSetResourcesOutputDir(),, +							"META-INF"));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/ApplicationPluginAction.java, + * Copyright 2012-2018 the original author or authors., +		bootStartScripts.getConventionMapping().map("outputDir",, +				() -> new File(project.getBuildDir(), "bootScripts"));, +		bootStartScripts.getConventionMapping().map("applicationName",, +				() -> applicationConvention.getApplicationName());, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/application/CreateBootStartScripts.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/dsl/SpringBootExtension.java, + * Copyright 2012-2018 the original author or authors., +			bootBuildInfo.getConventionMapping().map("destinationDir",, +					() -> new File(determineMainSourceSetResourcesOutputDir(),, +							"META-INF"));, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/plugin/ApplicationPluginAction.java, + * Copyright 2012-2018 the original author or authors., +		bootStartScripts.getConventionMapping().map("outputDir",, +				() -> new File(project.getBuildDir(), "bootScripts"));, +		bootStartScripts.getConventionMapping().map("applicationName",, +				() -> applicationConvention.getApplicationName());, +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/application/CreateBootStartScripts.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/buildinfo/BuildInfo.java, + * Copyright 2012-2018 the original author or authors., +	private File destinationDir;, +		return this.destinationDir != null ? this.destinationDir, +		this.destinationDir = destinationDir;]