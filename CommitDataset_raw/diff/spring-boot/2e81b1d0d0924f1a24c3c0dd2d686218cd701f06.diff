[+++ b/spring-boot-cli/src/test/java/cli/command/CustomCompilerAutoConfiguration.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package cli.command;, +, +import groovy.lang.GroovyClassLoader;, +, +import org.codehaus.groovy.ast.ClassNode;, +import org.codehaus.groovy.classgen.GeneratorContext;, +import org.codehaus.groovy.control.CompilationFailedException;, +import org.codehaus.groovy.control.SourceUnit;, +import org.springframework.boot.cli.compiler.CompilerAutoConfiguration;, +import org.springframework.boot.cli.compiler.GroovyCompilerConfiguration;, +, +/**, + * @author Andy Wilkinson, + */, +public class CustomCompilerAutoConfiguration extends CompilerAutoConfiguration {, +, +	@Override, +	public void apply(GroovyClassLoader loader,, +			GroovyCompilerConfiguration configuration, GeneratorContext generatorContext,, +			SourceUnit source, ClassNode classNode) throws CompilationFailedException {, +		System.out.println("Customising compiler configuration");, +	}, +, +}, +++ b/spring-boot-cli/src/test/java/cli/command/CustomCompilerAutoConfiguration.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package cli.command;, +, +import groovy.lang.GroovyClassLoader;, +, +import org.codehaus.groovy.ast.ClassNode;, +import org.codehaus.groovy.classgen.GeneratorContext;, +import org.codehaus.groovy.control.CompilationFailedException;, +import org.codehaus.groovy.control.SourceUnit;, +import org.springframework.boot.cli.compiler.CompilerAutoConfiguration;, +import org.springframework.boot.cli.compiler.GroovyCompilerConfiguration;, +, +/**, + * @author Andy Wilkinson, + */, +public class CustomCompilerAutoConfiguration extends CompilerAutoConfiguration {, +, +	@Override, +	public void apply(GroovyClassLoader loader,, +			GroovyCompilerConfiguration configuration, GeneratorContext generatorContext,, +			SourceUnit source, ClassNode classNode) throws CompilationFailedException {, +		System.out.println("Customising compiler configuration");, +	}, +, +}, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/InitCommandTests.java, +import java.util.ServiceLoader;, +, +import org.springframework.boot.cli.compiler.CompilerAutoConfiguration;, +, +import cli.command.CustomCompilerAutoConfiguration;, +, +		Iterable<CompilerAutoConfiguration> autoConfigurations = ServiceLoader.load(, +				CompilerAutoConfiguration.class, Thread.currentThread(), +						.getContextClassLoader());, +, +		boolean foundCustomConfiguration = false;, +, +		for (CompilerAutoConfiguration autoConfiguration : autoConfigurations) {, +			if (CustomCompilerAutoConfiguration.class.getName().equals(, +					autoConfiguration.getClass().getName())) {, +				foundCustomConfiguration = true;, +				break;]