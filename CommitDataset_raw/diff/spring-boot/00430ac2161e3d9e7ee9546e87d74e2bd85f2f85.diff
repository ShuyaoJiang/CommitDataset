[+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.springframework.boot.context.properties.source.UnboundElementsSourceFilter;, +			UnboundElementsSourceFilter filter = new UnboundElementsSourceFilter();, +			handler = new NoUnboundElementsBindHandler(handler, filter);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.springframework.boot.context.properties.source.UnboundElementsSourceFilter;, +			UnboundElementsSourceFilter filter = new UnboundElementsSourceFilter();, +			handler = new NoUnboundElementsBindHandler(handler, filter);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandler.java, +import java.util.function.Function;, +	private final Function<ConfigurationPropertySource, Boolean> filter;, +, +		this(BindHandler.DEFAULT, (configurationPropertySource) -> true);, +		this(parent, (configurationPropertySource) -> true);, +	}, +, +	public NoUnboundElementsBindHandler(BindHandler parent, Function<ConfigurationPropertySource, Boolean> filter) {, +		this.filter = filter;, +			if (this.filter.apply(source)) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.springframework.boot.context.properties.source.UnboundElementsSourceFilter;, +			UnboundElementsSourceFilter filter = new UnboundElementsSourceFilter();, +			handler = new NoUnboundElementsBindHandler(handler, filter);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandler.java, +import java.util.function.Function;, +	private final Function<ConfigurationPropertySource, Boolean> filter;, +, +		this(BindHandler.DEFAULT, (configurationPropertySource) -> true);, +		this(parent, (configurationPropertySource) -> true);, +	}, +, +	public NoUnboundElementsBindHandler(BindHandler parent, Function<ConfigurationPropertySource, Boolean> filter) {, +		this.filter = filter;, +			if (this.filter.apply(source)) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySource.java, +	@Override, +	public Object getUnderlyingSource() {, +		return this.source.getUnderlyingSource();, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.springframework.boot.context.properties.source.UnboundElementsSourceFilter;, +			UnboundElementsSourceFilter filter = new UnboundElementsSourceFilter();, +			handler = new NoUnboundElementsBindHandler(handler, filter);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandler.java, +import java.util.function.Function;, +	private final Function<ConfigurationPropertySource, Boolean> filter;, +, +		this(BindHandler.DEFAULT, (configurationPropertySource) -> true);, +		this(parent, (configurationPropertySource) -> true);, +	}, +, +	public NoUnboundElementsBindHandler(BindHandler parent, Function<ConfigurationPropertySource, Boolean> filter) {, +		this.filter = filter;, +			if (this.filter.apply(source)) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySource.java, +	@Override, +	public Object getUnderlyingSource() {, +		return this.source.getUnderlyingSource();, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +	/**, +	 * Return the underlying {@PropertySource}., +	 * @return the underlying property source., +	 */, +	Object getUnderlyingSource();, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java, +import org.springframework.boot.context.properties.source.UnboundElementsSourceFilter;, +			UnboundElementsSourceFilter filter = new UnboundElementsSourceFilter();, +			handler = new NoUnboundElementsBindHandler(handler, filter);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandler.java, +import java.util.function.Function;, +	private final Function<ConfigurationPropertySource, Boolean> filter;, +, +		this(BindHandler.DEFAULT, (configurationPropertySource) -> true);, +		this(parent, (configurationPropertySource) -> true);, +	}, +, +	public NoUnboundElementsBindHandler(BindHandler parent, Function<ConfigurationPropertySource, Boolean> filter) {, +		this.filter = filter;, +			if (this.filter.apply(source)) {, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/AliasedConfigurationPropertySource.java, +	@Override, +	public Object getUnderlyingSource() {, +		return this.source.getUnderlyingSource();, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java, +	/**, +	 * Return the underlying {@PropertySource}., +	 * @return the underlying property source., +	 */, +	Object getUnderlyingSource();, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/FilteredConfigurationPropertiesSource.java, +	@Override, +	public Object getUnderlyingSource() {, +		return this.source.getUnderlyingSource();]