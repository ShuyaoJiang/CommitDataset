[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +import com.fasterxml.jackson.annotation.JsonInclude.Include;, +		mapper.setSerializationInclusion(Include.NON_NULL);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +import com.fasterxml.jackson.annotation.JsonInclude.Include;, +		mapper.setSerializationInclusion(Include.NON_NULL);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointTests.java, +, +	}, +, +	@Test, +	@SuppressWarnings("unchecked"), +	public void entriesWithNullValuesAreNotIncluded() {, +		ConfigurationPropertiesReportEndpoint report = getEndpointBean();, +		Map<String, Object> properties = report.invoke();, +		Map<String, Object> nestedProperties = (Map<String, Object>) properties, +				.get("testProperties");, +		assertThat((Map<String, Object>) nestedProperties.get("properties")), +				.doesNotContainKey("nullValue");, +		private String nullValue = null;, +, +		public String getNullValue() {, +			return this.nullValue;, +		}, +, +		public void setNullValue(String nullValue) {, +			this.nullValue = nullValue;, +		}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +import com.fasterxml.jackson.annotation.JsonInclude.Include;, +		mapper.setSerializationInclusion(Include.NON_NULL);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointTests.java, +, +	}, +, +	@Test, +	@SuppressWarnings("unchecked"), +	public void entriesWithNullValuesAreNotIncluded() {, +		ConfigurationPropertiesReportEndpoint report = getEndpointBean();, +		Map<String, Object> properties = report.invoke();, +		Map<String, Object> nestedProperties = (Map<String, Object>) properties, +				.get("testProperties");, +		assertThat((Map<String, Object>) nestedProperties.get("properties")), +				.doesNotContainKey("nullValue");, +		private String nullValue = null;, +, +		public String getNullValue() {, +			return this.nullValue;, +		}, +, +		public void setNullValue(String nullValue) {, +			this.nullValue = nullValue;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +import com.fasterxml.jackson.databind.AnnotationIntrospector;, +import com.fasterxml.jackson.databind.DeserializationConfig;, +import org.springframework.test.util.ReflectionTestUtils;, +		DeserializationConfig deserializationConfig = this.context, +				.getBean(ObjectMapper.class).getDeserializationConfig();, +		AnnotationIntrospector annotationIntrospector = deserializationConfig, +				.getAnnotationIntrospector().allIntrospectors().iterator().next();, +		assertThat(ReflectionTestUtils.getField(annotationIntrospector, "creatorBinding")), +				.isEqualTo(expectedMode);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java, +import com.fasterxml.jackson.annotation.JsonInclude.Include;, +		mapper.setSerializationInclusion(Include.NON_NULL);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointTests.java, +, +	}, +, +	@Test, +	@SuppressWarnings("unchecked"), +	public void entriesWithNullValuesAreNotIncluded() {, +		ConfigurationPropertiesReportEndpoint report = getEndpointBean();, +		Map<String, Object> properties = report.invoke();, +		Map<String, Object> nestedProperties = (Map<String, Object>) properties, +				.get("testProperties");, +		assertThat((Map<String, Object>) nestedProperties.get("properties")), +				.doesNotContainKey("nullValue");, +		private String nullValue = null;, +, +		public String getNullValue() {, +			return this.nullValue;, +		}, +, +		public void setNullValue(String nullValue) {, +			this.nullValue = nullValue;, +		}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +import com.fasterxml.jackson.databind.AnnotationIntrospector;, +import com.fasterxml.jackson.databind.DeserializationConfig;, +import org.springframework.test.util.ReflectionTestUtils;, +		DeserializationConfig deserializationConfig = this.context, +				.getBean(ObjectMapper.class).getDeserializationConfig();, +		AnnotationIntrospector annotationIntrospector = deserializationConfig, +				.getAnnotationIntrospector().allIntrospectors().iterator().next();, +		assertThat(ReflectionTestUtils.getField(annotationIntrospector, "creatorBinding"))]