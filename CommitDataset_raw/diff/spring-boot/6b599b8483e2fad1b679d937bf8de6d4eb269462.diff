[+++ b/spring-boot-actuator/pom.xml, +		<dependency>, +			<groupId>org.crashub</groupId>, +			<artifactId>crash.embed.spring</artifactId>, +			<optional>true</optional>, +		</dependency>, +++ b/spring-boot-actuator/pom.xml, +		<dependency>, +			<groupId>org.crashub</groupId>, +			<artifactId>crash.embed.spring</artifactId>, +			<optional>true</optional>, +		</dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +/*, + * Copyright 2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure;, +, +import java.io.IOException;, +import java.io.InputStream;, +import java.net.URISyntaxException;, +import java.util.ArrayList;, +import java.util.Arrays;, +import java.util.Collection;, +import java.util.Collections;, +import java.util.HashMap;, +import java.util.Iterator;, +import java.util.List;, +import java.util.Map;, +import java.util.Properties;, +import java.util.Set;, +, +import javax.annotation.PostConstruct;, +import javax.annotation.PreDestroy;, +, +import org.crsh.auth.AuthenticationPlugin;, +import org.crsh.plugin.CRaSHPlugin;, +import org.crsh.plugin.PluginContext;, +import org.crsh.plugin.PluginDiscovery;, +import org.crsh.plugin.PluginLifeCycle;, +import org.crsh.plugin.PropertyDescriptor;, +import org.crsh.plugin.ServiceLoaderDiscovery;, +import org.crsh.vfs.FS;, +import org.crsh.vfs.spi.AbstractFSDriver;, +import org.springframework.beans.factory.ListableBeanFactory;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.actuate.properties.CrshProperties;, +import org.springframework.boot.actuate.properties.CrshProperties.AuthenticationProperties;, +import org.springframework.boot.actuate.properties.CrshProperties.JaasAuthenticationProperties;, +import org.springframework.boot.actuate.properties.CrshProperties.KeyAuthenticationProperties;, +import org.springframework.boot.actuate.properties.CrshProperties.SimpleAuthenticationProperties;, +import org.springframework.boot.actuate.properties.CrshProperties.SpringAuthenticationProperties;, +import org.springframework.boot.autoconfigure.AutoConfigureAfter;, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.core.SpringVersion;, +import org.springframework.core.io.Resource;, +import org.springframework.core.io.support.ResourcePatternResolver;, +import org.springframework.security.access.AccessDecisionManager;, +import org.springframework.security.access.AccessDeniedException;, +import org.springframework.security.access.SecurityConfig;, +import org.springframework.security.authentication.AuthenticationManager;, +import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;, +import org.springframework.security.core.Authentication;, +import org.springframework.security.core.AuthenticationException;, +import org.springframework.util.Assert;, +import org.springframework.util.ClassUtils;, +import org.springframework.util.StringUtils;, +, +/**, + * {@link EnableAutoConfiguration Auto-configuration} for embedding an extensible shell into a Spring, + * Boot enabled application. By default a SSH daemon is started on port 2000 with a default username, + * <code>user</code> and password (default password is logged during application startup)., + * , + * <p>, + * This configuration will auto detect the existence of a Spring Security {@link AuthenticationManager}, + * and will delegate authentication requests for shell access to this detected instance., + * , + * <p>, + * To add customizations to the shell simply define beans of type {@link CRaSHPlugin} in the, + * application context. Those beans will get auto detected during startup and registered with the]