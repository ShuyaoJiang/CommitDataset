[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.data.rest.core.config.RepositoryRestConfiguration;, + * Once in effect, the auto-configuration allows to configure any property, + * of {@link RepositoryRestConfiguration} using the {@code spring.data.rest}, + * prefix., + * @author Stephane Nicoll, +@Import(RepositoryRestMvcAutoConfiguration.RepositoryRestMvcBootConfiguration.class), +, +	@Configuration, +	static class RepositoryRestMvcBootConfiguration extends RepositoryRestMvcConfiguration {, +, +		@Override, +		@Bean, +		@ConfigurationProperties(prefix = "spring.data.rest"), +		public RepositoryRestConfiguration config() {, +			return super.config();, +		}, +	}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.data.rest.core.config.RepositoryRestConfiguration;, + * Once in effect, the auto-configuration allows to configure any property, + * of {@link RepositoryRestConfiguration} using the {@code spring.data.rest}, + * prefix., + * @author Stephane Nicoll, +@Import(RepositoryRestMvcAutoConfiguration.RepositoryRestMvcBootConfiguration.class), +, +	@Configuration, +	static class RepositoryRestMvcBootConfiguration extends RepositoryRestMvcConfiguration {, +, +		@Override, +		@Bean, +		@ConfigurationProperties(prefix = "spring.data.rest"), +		public RepositoryRestConfiguration config() {, +			return super.config();, +		}, +	}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfigurationTests.java, +import java.net.URI;, +, +import org.junit.After;, +, +import org.springframework.boot.test.EnvironmentTestUtils;, +import org.springframework.context.annotation.Import;, +import org.springframework.data.rest.core.config.RepositoryRestConfiguration;, +import static org.junit.Assert.*;, +	@After, +	public void tearDown() {, +		if (this.context != null) {, +			this.context.close();, +		}, +	}, +, +		load(TestConfiguration.class);, +		assertNotNull(this.context.getBean(RepositoryRestMvcConfiguration.class));, +	}, +, +	@Test, +	public void testWithCustomBaseUri() throws Exception {, +		load(TestConfiguration.class, "spring.data.rest.baseUri:foo");, +		assertNotNull(this.context.getBean(RepositoryRestMvcConfiguration.class));, +		RepositoryRestConfiguration bean = this.context.getBean(RepositoryRestConfiguration.class);, +		assertEquals("Custom baseURI not set", URI.create("foo"), bean.getBaseUri());, +	}, +, +	@Test, +	public void backOffWithCustomConfiguration() {, +		load(TestConfigurationWithRestMvcConfig.class, "spring.data.rest.baseUri:foo");, +		assertNotNull(this.context.getBean(RepositoryRestMvcConfiguration.class));, +		RepositoryRestConfiguration bean = this.context.getBean(RepositoryRestConfiguration.class);, +		assertEquals("Custom base URI should not have been set", URI.create(""), bean.getBaseUri());, +, +	}, +, +	private void load(Class<?> config,, +			String... environment) {, +		AnnotationConfigWebApplicationContext applicationContext = new AnnotationConfigWebApplicationContext();, +		applicationContext.setServletContext(new MockServletContext());, +		applicationContext.register(config,, +		EnvironmentTestUtils.addEnvironment(applicationContext, environment);, +		applicationContext.refresh();, +		this.context = applicationContext;, +, +	@Import({TestConfiguration.class, RepositoryRestMvcConfiguration.class}), +	protected static class TestConfigurationWithRestMvcConfig {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/rest/RepositoryRestMvcAutoConfiguration.java, +import org.springframework.boot.context.properties.ConfigurationProperties;, +import org.springframework.context.annotation.Bean;, +import org.springframework.data.rest.core.config.RepositoryRestConfiguration;, + * Once in effect, the auto-configuration allows to configure any property, + * of {@link RepositoryRestConfiguration} using the {@code spring.data.rest}, + * prefix., + * @author Stephane Nicoll, +@Import(RepositoryRestMvcAutoConfiguration.RepositoryRestMvcBootConfiguration.class)]