[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		EndpointHandlerMapping mapping = new EndpointHandlerMapping(mvcEndpoints(), +				.getEndpoints());, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +					.getMapping());, +			((ConfigurableApplicationContext) this.applicationContext), +					.addApplicationListener(new ApplicationListener<ContextClosedEvent>() {, +		}, +		catch (RuntimeException ex) {, +			}, +			else {, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +				managementServerProperties = beanFactory, +						.getBean(ManagementServerProperties.class);, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		EndpointHandlerMapping mapping = new EndpointHandlerMapping(mvcEndpoints(), +				.getEndpoints());, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +					.getMapping());, +			((ConfigurableApplicationContext) this.applicationContext), +					.addApplicationListener(new ApplicationListener<ContextClosedEvent>() {, +		}, +		catch (RuntimeException ex) {, +			}, +			else {, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +				managementServerProperties = beanFactory, +						.getBean(ManagementServerProperties.class);, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthMvcEndpointProperties.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		EndpointHandlerMapping mapping = new EndpointHandlerMapping(mvcEndpoints(), +				.getEndpoints());, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +					.getMapping());, +			((ConfigurableApplicationContext) this.applicationContext), +					.addApplicationListener(new ApplicationListener<ContextClosedEvent>() {, +		}, +		catch (RuntimeException ex) {, +			}, +			else {, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +				managementServerProperties = beanFactory, +						.getBean(ManagementServerProperties.class);, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthMvcEndpointProperties.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		}, +		else {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		EndpointHandlerMapping mapping = new EndpointHandlerMapping(mvcEndpoints(), +				.getEndpoints());, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +					.getMapping());, +			((ConfigurableApplicationContext) this.applicationContext), +					.addApplicationListener(new ApplicationListener<ContextClosedEvent>() {, +		}, +		catch (RuntimeException ex) {, +			}, +			else {, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +				managementServerProperties = beanFactory, +						.getBean(ManagementServerProperties.class);, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthMvcEndpointProperties.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		}, +		else {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeHealthIndicator.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +		EndpointHandlerMapping mapping = new EndpointHandlerMapping(mvcEndpoints(), +				.getEndpoints());, +			healthMvcEndpoint.setStatusMapping(this.healthMvcEndpointProperties, +					.getMapping());, +			((ConfigurableApplicationContext) this.applicationContext), +					.addApplicationListener(new ApplicationListener<ContextClosedEvent>() {, +		}, +		catch (RuntimeException ex) {, +			}, +			else {, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +				managementServerProperties = beanFactory, +						.getBean(ManagementServerProperties.class);, +			}, +			catch (NoSuchBeanDefinitionException ex) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthMvcEndpointProperties.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +		}, +		else {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeHealthIndicator.java]