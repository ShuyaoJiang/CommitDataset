[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +@ConfigurationProperties(prefix = "flyway", ignoreUnknownFields = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +@ConfigurationProperties(prefix = "flyway", ignoreUnknownFields = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +@ConfigurationProperties(prefix = "liquibase", ignoreUnknownFields = false), +		return this.changeLog;, +		return this.checkChangeLogLocation;, +		return this.contexts;, +		return this.defaultSchema;, +		return this.dropFirst;, +		return this.shouldRun;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +@ConfigurationProperties(prefix = "flyway", ignoreUnknownFields = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +@ConfigurationProperties(prefix = "liquibase", ignoreUnknownFields = false), +		return this.changeLog;, +		return this.checkChangeLogLocation;, +		return this.contexts;, +		return this.defaultSchema;, +		return this.dropFirst;, +		return this.shouldRun;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfigurationTests.java, +				"flyway.locations:classpath:db/changelog");, +		EnvironmentTestUtils.addEnvironment(this.context, "flyway.schemas:public");, +		EnvironmentTestUtils.addEnvironment(this.context, "flyway.locations:no-such-dir");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +@ConfigurationProperties(prefix = "flyway", ignoreUnknownFields = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +@ConfigurationProperties(prefix = "liquibase", ignoreUnknownFields = false), +		return this.changeLog;, +		return this.checkChangeLogLocation;, +		return this.contexts;, +		return this.defaultSchema;, +		return this.dropFirst;, +		return this.shouldRun;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfigurationTests.java, +				"flyway.locations:classpath:db/changelog");, +		EnvironmentTestUtils.addEnvironment(this.context, "flyway.schemas:public");, +		EnvironmentTestUtils.addEnvironment(this.context, "flyway.locations:no-such-dir");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +		assertEquals("classpath:/db/changelog/db.changelog-master.yaml",, +				liquibase.getChangeLog());, +				"liquibase.change-log:classpath:/db/changelog/db.changelog-override.xml");, +		assertEquals("classpath:/db/changelog/db.changelog-override.xml",, +				liquibase.getChangeLog());, +				"liquibase.contexts:test, production");, +				"liquibase.default-schema:public");, +		EnvironmentTestUtils.addEnvironment(this.context, "liquibase.drop-first:true");, +				"liquibase.change-log:classpath:/no-such-changelog.yaml");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +@ConfigurationProperties(prefix = "flyway", ignoreUnknownFields = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +@ConfigurationProperties(prefix = "liquibase", ignoreUnknownFields = false), +		return this.changeLog;, +		return this.checkChangeLogLocation;, +		return this.contexts;, +		return this.defaultSchema;, +		return this.dropFirst;, +		return this.shouldRun;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfigurationTests.java, +				"flyway.locations:classpath:db/changelog");, +		EnvironmentTestUtils.addEnvironment(this.context, "flyway.schemas:public");, +		EnvironmentTestUtils.addEnvironment(this.context, "flyway.locations:no-such-dir");, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +		assertEquals("classpath:/db/changelog/db.changelog-master.yaml",, +				liquibase.getChangeLog());, +				"liquibase.change-log:classpath:/db/changelog/db.changelog-override.xml");, +		assertEquals("classpath:/db/changelog/db.changelog-override.xml",, +				liquibase.getChangeLog());, +				"liquibase.contexts:test, production");, +				"liquibase.default-schema:public");, +		EnvironmentTestUtils.addEnvironment(this.context, "liquibase.drop-first:true");, +				"liquibase.change-log:classpath:/no-such-changelog.yaml");, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# FLYWAY ({sc-spring-boot-autoconfigure}/flyway/FlywayProperties.{sc-ext}[FlywayProperties]), +	flyway.change-log=classpath:/db/changelog/db.changelog-master.yaml, +	flyway.contexts= # runtime contexts to use, +	flyway.default-schema= # default database schema to use, +	flyway.drop-first=false, +	flyway.should-run=true, +, +	liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml, +	liquibase.contexts= # runtime contexts to use, +	liquibase.default-schema= # default database schema to use, +	liquibase.drop-first=false, +	liquibase.should-run=true, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +@ConfigurationProperties(prefix = "flyway", ignoreUnknownFields = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseProperties.java, +@ConfigurationProperties(prefix = "liquibase", ignoreUnknownFields = false), +		return this.changeLog;, +		return this.checkChangeLogLocation;, +		return this.contexts;, +		return this.defaultSchema;, +		return this.dropFirst;, +		return this.shouldRun;, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfigurationTests.java, +				"flyway.locations:classpath:db/changelog");, +		EnvironmentTestUtils.addEnvironment(this.context, "flyway.schemas:public");]