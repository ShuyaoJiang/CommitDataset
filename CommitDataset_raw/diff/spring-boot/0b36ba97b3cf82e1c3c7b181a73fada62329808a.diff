[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	/**, +	 * ServletContext parameters., +	 */, +	private final Map<String, String> contextParameters = new HashMap<String, String>();, +	private Session session = new Session();, +, +	@NestedConfigurationProperty, +	private Ssl ssl;, +	private final Tomcat tomcat = new Tomcat();, +, +	private final Undertow undertow = new Undertow();, +	public String getServletMapping() {, +		if (this.servletPath.equals("") || this.servletPath.equals("/")) {, +			return "/";, +		}, +		if (this.servletPath.contains("*")) {, +			return this.servletPath;, +		}, +		if (this.servletPath.endsWith("/")) {, +			return this.servletPath + "*";, +		}, +		return this.servletPath + "/*";, +	}, +, +	public String getPath(String path) {, +		String prefix = getServletPrefix();, +		if (!path.startsWith("/")) {, +			path = "/" + path;, +		}, +		return prefix + path;, +	}, +, +	public String getServletPrefix() {, +		String result = this.servletPath;, +		if (result.contains("*")) {, +			result = result.substring(0, result.indexOf("*"));, +		}, +		if (result.endsWith("/")) {, +			result = result.substring(0, result.length() - 1);, +		}, +		return result;, +	}, +, +	public void setLoader(String value) {, +		// no op to support Tomcat running as a traditional container (not embedded), +, +	public Integer getPort() {, +		return this.port;, +	}, +, +	public void setPort(Integer port) {, +		this.port = port;, +	}, +, +	public InetAddress getAddress() {, +		return this.address;, +	}, +, +	public void setAddress(InetAddress address) {, +		this.address = address;, +	}, +, +	public String getContextPath() {, +		return this.contextPath;, +	}, +, +	public void setContextPath(String contextPath) {, +		this.contextPath = cleanContextPath(contextPath);, +	}, +, +	private String cleanContextPath(String contextPath) {, +		if (StringUtils.hasText(contextPath) && contextPath.endsWith("/")) {, +			return contextPath.substring(0, contextPath.length() - 1);, +		}, +		return contextPath;, +	}, +, +	public String getDisplayName() {, +		return this.displayName;, +	}, +, +	public void setDisplayName(String displayName) {, +		this.displayName = displayName;, +	}, +, +	public String getServletPath() {, +		return this.servletPath;, +	}, +, +	public void setServletPath(String servletPath) {, +		this.servletPath = servletPath;, +	}, +, +	public Map<String, String> getContextParameters() {, +		return this.contextParameters;, +	}, +, +	/**, +	 * Get the session timeout.]