[+++ b/pom.xml, +				<groupId>com.h2database</groupId>, +				<artifactId>h2</artifactId>, +				<version>1.3.171</version>, +			</dependency>, +			<dependency>, +++ b/pom.xml, +				<groupId>com.h2database</groupId>, +				<artifactId>h2</artifactId>, +				<version>1.3.171</version>, +			</dependency>, +			<dependency>, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/ActuatorAutoConfiguration.java, +@Import({ ActuatorWebConfiguration.class, MetricRepositoryConfiguration.class,, +		ErrorConfiguration.class, TraceFilterConfiguration.class,, +++ b/pom.xml, +				<groupId>com.h2database</groupId>, +				<artifactId>h2</artifactId>, +				<version>1.3.171</version>, +			</dependency>, +			<dependency>, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/ActuatorAutoConfiguration.java, +@Import({ ActuatorWebConfiguration.class, MetricRepositoryConfiguration.class,, +		ErrorConfiguration.class, TraceFilterConfiguration.class,, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/ConditionalOnManagementContext.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.bootstrap.actuate.autoconfigure;, +, +import java.lang.annotation.ElementType;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +, +import org.springframework.context.annotation.Conditional;, +, +/**, + * A bean with this annotation will only be instantiated in the management context,, + * whether that is the current context or a child context. Using this feature makes it, + * easy to have a single set of configuration beans for both contexts and be able to, + * switch the management features to a child context externally. Very useful if (for, + * instance) you want management endpoints but open, or differently secured public facing, + * endpoints., + * , + * @author Dave Syer, + * , + */, +@Conditional(OnManagementContextCondition.class), +@Retention(RetentionPolicy.RUNTIME), +@Target({ ElementType.TYPE, ElementType.METHOD }), +public @interface ConditionalOnManagementContext {, +, +}, +++ b/pom.xml, +				<groupId>com.h2database</groupId>, +				<artifactId>h2</artifactId>, +				<version>1.3.171</version>, +			</dependency>, +			<dependency>, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/ActuatorAutoConfiguration.java, +@Import({ ActuatorWebConfiguration.class, MetricRepositoryConfiguration.class,, +		ErrorConfiguration.class, TraceFilterConfiguration.class,, +++ b/spring-bootstrap-actuator/src/main/java/org/springframework/bootstrap/actuate/autoconfigure/ConditionalOnManagementContext.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +package org.springframework.bootstrap.actuate.autoconfigure;, +, +import java.lang.annotation.ElementType;, +import java.lang.annotation.Retention;, +import java.lang.annotation.RetentionPolicy;, +import java.lang.annotation.Target;, +, +import org.springframework.context.annotation.Conditional;, +]