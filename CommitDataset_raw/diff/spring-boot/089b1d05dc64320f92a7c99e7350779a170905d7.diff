[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/AbstractMetricExporter.java, +	private Date latestTimestamp = new Date(0L);, +, +	private boolean sendLatest = true;, +, +	/**, +	 * Send only the data that changed since the last export., +	 *, +	 * @param sendLatest the flag to set, +	 */, +	public void setSendLatest(boolean sendLatest) {, +		this.sendLatest = sendLatest;, +	}, +, +		long latestTimestamp = 0;, +			latestTimestamp = System.currentTimeMillis();, +					if (!this.ignoreTimestamps && this.sendLatest, +							&& this.latestTimestamp.after(timestamp)) {, +						continue;, +					}, +				this.latestTimestamp = new Date(latestTimestamp);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/AbstractMetricExporter.java, +	private Date latestTimestamp = new Date(0L);, +, +	private boolean sendLatest = true;, +, +	/**, +	 * Send only the data that changed since the last export., +	 *, +	 * @param sendLatest the flag to set, +	 */, +	public void setSendLatest(boolean sendLatest) {, +		this.sendLatest = sendLatest;, +	}, +, +		long latestTimestamp = 0;, +			latestTimestamp = System.currentTimeMillis();, +					if (!this.ignoreTimestamps && this.sendLatest, +							&& this.latestTimestamp.after(timestamp)) {, +						continue;, +					}, +				this.latestTimestamp = new Date(latestTimestamp);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricCopyExporter.java, +		if ((this.includes == null || this.includes.length == 0), +				&& (this.excludes == null || this.excludes.length == 0)) {]