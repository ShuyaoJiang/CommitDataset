[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/CompilerOptionHandler.java, + * @author Dave Syer, +	private OptionSpec<Boolean> autoconfigureOption;, +, +		this.autoconfigureOption = option("autoconfigure",, +				"Add autoconfigure compiler transformations").withOptionalArg(), +				.ofType(Boolean.class).defaultsTo(true);, +	public OptionSpec<Boolean> getAutoconfigureOption() {, +		return this.autoconfigureOption;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/CompilerOptionHandler.java, + * @author Dave Syer, +	private OptionSpec<Boolean> autoconfigureOption;, +, +		this.autoconfigureOption = option("autoconfigure",, +				"Add autoconfigure compiler transformations").withOptionalArg(), +				.ofType(Boolean.class).defaultsTo(true);, +	public OptionSpec<Boolean> getAutoconfigureOption() {, +		return this.autoconfigureOption;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/GrabCommand.java, +			if (!new File(System.getProperty("grape.root")).equals(getM2HomeDirectory())) {, +				GrabCommand.addDefaultCacheAsRespository(repositoryConfiguration);, +			}, +	}, +, +	/**, +	 * Add the default local M2 cache directory as a remote repository. Only do this if, +	 * the local cache location has been changed from the default., +	 * , +	 * @param repositoryConfiguration, +	 */, +	public static void addDefaultCacheAsRespository(, +			List<RepositoryConfiguration> repositoryConfiguration) {, +		repositoryConfiguration.add(0, new RepositoryConfiguration("local", new File(, +				getM2HomeDirectory(), "repository").toURI(), true));, +	}, +, +	private static File getM2HomeDirectory() {, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/CompilerOptionHandler.java, + * @author Dave Syer, +	private OptionSpec<Boolean> autoconfigureOption;, +, +		this.autoconfigureOption = option("autoconfigure",, +				"Add autoconfigure compiler transformations").withOptionalArg(), +				.ofType(Boolean.class).defaultsTo(true);, +	public OptionSpec<Boolean> getAutoconfigureOption() {, +		return this.autoconfigureOption;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/GrabCommand.java, +			if (!new File(System.getProperty("grape.root")).equals(getM2HomeDirectory())) {, +				GrabCommand.addDefaultCacheAsRespository(repositoryConfiguration);, +			}, +	}, +, +	/**, +	 * Add the default local M2 cache directory as a remote repository. Only do this if, +	 * the local cache location has been changed from the default., +	 * , +	 * @param repositoryConfiguration, +	 */, +	public static void addDefaultCacheAsRespository(, +			List<RepositoryConfiguration> repositoryConfiguration) {, +		repositoryConfiguration.add(0, new RepositoryConfiguration("local", new File(, +				getM2HomeDirectory(), "repository").toURI(), true));, +	}, +, +	private static File getM2HomeDirectory() {, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/RunCommand.java, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/CompilerOptionHandler.java, + * @author Dave Syer, +	private OptionSpec<Boolean> autoconfigureOption;, +, +		this.autoconfigureOption = option("autoconfigure",, +				"Add autoconfigure compiler transformations").withOptionalArg(), +				.ofType(Boolean.class).defaultsTo(true);, +	public OptionSpec<Boolean> getAutoconfigureOption() {, +		return this.autoconfigureOption;, +	}, +, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/command/GrabCommand.java, +			if (!new File(System.getProperty("grape.root")).equals(getM2HomeDirectory())) {, +				GrabCommand.addDefaultCacheAsRespository(repositoryConfiguration);, +			}, +	}, +, +	/**, +	 * Add the default local M2 cache directory as a remote repository. Only do this if, +	 * the local cache location has been changed from the default., +	 * , +	 * @param repositoryConfiguration, +	 */, +	public static void addDefaultCacheAsRespository(, +			List<RepositoryConfiguration> repositoryConfiguration) {, +		repositoryConfiguration.add(0, new RepositoryConfiguration("local", new File(]