[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.java, +import org.springframework.core.env.Environment;, +, +			Environment environment = context.getEnvironment();, +			String config = environment.resolvePlaceholders("${logging.file:}");, +			config = environment.resolvePlaceholders("${logging.path:}");, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.java, +import org.springframework.core.env.Environment;, +, +			Environment environment = context.getEnvironment();, +			String config = environment.resolvePlaceholders("${logging.file:}");, +			config = environment.resolvePlaceholders("${logging.path:}");, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +	 * Time to live for cached result. This is particularly useful to cache the result of, +	 * this endpoint to prevent a DOS attack if it is accessed anonymously., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.java, +import org.springframework.core.env.Environment;, +, +			Environment environment = context.getEnvironment();, +			String config = environment.resolvePlaceholders("${logging.file:}");, +			config = environment.resolvePlaceholders("${logging.path:}");, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +	 * Time to live for cached result. This is particularly useful to cache the result of, +	 * this endpoint to prevent a DOS attack if it is accessed anonymously., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricExportProperties.java, +	public void setRedis(Redis redis) {, +		this.redis = redis;, +	}, +, +	public static class Aggregate {, +, +		/**, +		 * Prefix for global repository if active. Should be unique for this JVM, but most, +		 * useful if it also has the form "a.b" where "a" is unique to this logical, +		 * process (this application) and "b" is unique to this physical process. If you, +		 * set spring.application.name elsewhere, then the default will be in the right, +		 * form., +		 */, +		private String prefix = "";, +, +		/**, +		 * Pattern that tells the aggregator what to do with the keys from the source, +		 * repository. The keys in the source repository are assumed to be period, +		 * separated, and the pattern is in the same format, e.g. "d.d.k.d". Here "d", +		 * means "discard" and "k" means "keep" the key segment in the corresponding, +		 * position in the source., +		 */, +		private String keyPattern = "";, +, +		public String getPrefix() {, +			return this.prefix;, +		}, +, +		public void setPrefix(String prefix) {, +			this.prefix = prefix;, +		}, +, +		public String getKeyPattern() {, +			return this.keyPattern;, +		}, +, +		public void setKeyPattern(String keyPattern) {, +			this.keyPattern = keyPattern;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.java, +import org.springframework.core.env.Environment;, +, +			Environment environment = context.getEnvironment();, +			String config = environment.resolvePlaceholders("${logging.file:}");, +			config = environment.resolvePlaceholders("${logging.path:}");, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/HealthEndpoint.java, +	 * Time to live for cached result. This is particularly useful to cache the result of, +	 * this endpoint to prevent a DOS attack if it is accessed anonymously., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricExportProperties.java, +	public void setRedis(Redis redis) {, +		this.redis = redis;, +	}, +, +	public static class Aggregate {, +, +		/**, +		 * Prefix for global repository if active. Should be unique for this JVM, but most, +		 * useful if it also has the form "a.b" where "a" is unique to this logical, +		 * process (this application) and "b" is unique to this physical process. If you, +		 * set spring.application.name elsewhere, then the default will be in the right, +		 * form., +		 */, +		private String prefix = "";, +, +		/**, +		 * Pattern that tells the aggregator what to do with the keys from the source, +		 * repository. The keys in the source repository are assumed to be period, +		 * separated, and the pattern is in the same format, e.g. "d.d.k.d". Here "d"]