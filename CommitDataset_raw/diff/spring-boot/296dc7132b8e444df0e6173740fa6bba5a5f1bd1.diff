[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +helper fields on the test class can be `@Autowired` when using `@JsonTest`., +	import org.springframework.beans.factory.annotation.*;, +		@Autowired, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +helper fields on the test class can be `@Autowired` when using `@JsonTest`., +	import org.springframework.beans.factory.annotation.*;, +		@Autowired, +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/service/VehicleDetailsJsonTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +helper fields on the test class can be `@Autowired` when using `@JsonTest`., +	import org.springframework.beans.factory.annotation.*;, +		@Autowired, +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/service/VehicleDetailsJsonTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/AutoConfigureJsonTesters.java, +import org.springframework.boot.autoconfigure.ImportAutoConfiguration;, +import org.springframework.boot.test.autoconfigure.properties.PropertyMapping;, +@ImportAutoConfiguration, +@PropertyMapping("spring.test.jsontesters"), +	 * If {@link BasicJsonTester}, {@link JacksonTester} and {@link GsonTester} beans, +	 * should be registered. Defaults to {@code true}, +	 * @return if tester support is enabled, +	boolean enabled() default true;, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +helper fields on the test class can be `@Autowired` when using `@JsonTest`., +	import org.springframework.beans.factory.annotation.*;, +		@Autowired, +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/service/VehicleDetailsJsonTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/AutoConfigureJsonTesters.java, +import org.springframework.boot.autoconfigure.ImportAutoConfiguration;, +import org.springframework.boot.test.autoconfigure.properties.PropertyMapping;, +@ImportAutoConfiguration, +@PropertyMapping("spring.test.jsontesters"), +	 * If {@link BasicJsonTester}, {@link JacksonTester} and {@link GsonTester} beans, +	 * should be registered. Defaults to {@code true}, +	 * @return if tester support is enabled, +	boolean enabled() default true;, +++ /dev/null, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +helper fields on the test class can be `@Autowired` when using `@JsonTest`., +	import org.springframework.beans.factory.annotation.*;, +		@Autowired, +++ b/spring-boot-samples/spring-boot-sample-test/src/test/java/sample/test/service/VehicleDetailsJsonTests.java, +import org.springframework.beans.factory.annotation.Autowired;, +	@Autowired, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/AutoConfigureJsonTesters.java, +import org.springframework.boot.autoconfigure.ImportAutoConfiguration;, +import org.springframework.boot.test.autoconfigure.properties.PropertyMapping;, +@ImportAutoConfiguration, +@PropertyMapping("spring.test.jsontesters"), +	 * If {@link BasicJsonTester}, {@link JacksonTester} and {@link GsonTester} beans, +	 * should be registered. Defaults to {@code true}, +	 * @return if tester support is enabled, +	boolean enabled() default true;, +++ /dev/null, +++ b/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/json/JsonTestersAutoConfiguration.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test.autoconfigure.json;, +, +import java.lang.reflect.Constructor;, +import java.lang.reflect.Field;, +, +import com.fasterxml.jackson.databind.ObjectMapper;, +import com.google.gson.Gson;, +, +import org.springframework.beans.BeanUtils;, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.FactoryBean;, +import org.springframework.beans.factory.config.BeanPostProcessor;, +import org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +import org.springframework.boot.test.json.AbstractJsonMarshalTester;, +import org.springframework.boot.test.json.BasicJsonTester;, +import org.springframework.boot.test.json.GsonTester;, +import org.springframework.boot.test.json.JacksonTester;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;]