[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	JarFileType getType() {, +		return this.type;, +	}, +, +	/**, +	 * The type of a {@link JarFile}., +	 */, +	enum JarFileType {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	JarFileType getType() {, +		return this.type;, +	}, +, +	/**, +	 * The type of a {@link JarFile}., +	 */, +	enum JarFileType {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +import org.springframework.boot.loader.data.RandomAccessData.ResourceAccess;, +, +		if (this.jarEntryName.isEmpty(), +				&& this.jarFile.getType() == JarFile.JarFileType.DIRECT) {, +		InputStream inputStream = (this.jarEntryName.isEmpty(), +				? this.jarFile.getData().getInputStream(ResourceAccess.ONCE), +				: this.jarFile.getInputStream(this.jarEntry));, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java, +	JarFileType getType() {, +		return this.type;, +	}, +, +	/**, +	 * The type of a {@link JarFile}., +	 */, +	enum JarFileType {, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarURLConnection.java, +import org.springframework.boot.loader.data.RandomAccessData.ResourceAccess;, +, +		if (this.jarEntryName.isEmpty(), +				&& this.jarFile.getType() == JarFile.JarFileType.DIRECT) {, +		InputStream inputStream = (this.jarEntryName.isEmpty(), +				? this.jarFile.getData().getInputStream(ResourceAccess.ONCE), +				: this.jarFile.getInputStream(this.jarEntry));, +++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/jar/JarFileTests.java, +import java.util.jar.JarInputStream;, +, +		assertThat(conn.getInputStream()).isNotNull();, +		JarInputStream jarInputStream = new JarInputStream(conn.getInputStream());, +		assertThat(jarInputStream.getNextJarEntry().getName()).isEqualTo("3.dat");, +		assertThat(jarInputStream.getNextJarEntry().getName()).isEqualTo("4.dat");, +		assertThat(jarInputStream.getNextJarEntry().getName()).isEqualTo("\u00E4.dat");, +		jarInputStream.close();]