[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyCompiler.java, +			builder.setProxy(AetherGrapeEngine.defaultProxy(repositoryConfiguration, +					.getUri().getScheme()));, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GroovyCompiler.java, +			builder.setProxy(AetherGrapeEngine.defaultProxy(repositoryConfiguration, +					.getUri().getScheme()));, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngine.java, +import org.eclipse.aether.repository.Proxy;, +	public static Proxy defaultProxy(String protocol) {, +		// TODO: proxy authentication, +		if ("http".equals(protocol) || "dav".equals(protocol)) {, +			String proxyHost = System.getProperty("http.proxyHost");, +			if (proxyHost != null) {, +				// Use defaults from normal JVM proxy handler, +				return new Proxy("http", proxyHost, new Integer(System.getProperty(, +						"http.proxyPort", "80")));, +			}, +		}, +		else if ("https".equals(protocol) || "davs".equals(protocol)) {, +			String secureProxyHost = System.getProperty("https.proxyHost");, +			if (secureProxyHost != null) {, +				return new Proxy("https", secureProxyHost, new Integer(, +						System.getProperty("https.proxyPort", "443")));, +			}, +		}, +		else if ("ftp".equals(protocol)) {, +			String secureProxyHost = System.getProperty("ftp.proxyHost");, +			if (secureProxyHost != null) {, +				return new Proxy("ftp", secureProxyHost, new Integer(System.getProperty(, +						"ftp.proxyPort", "443")));, +			}, +		}, +		return null;, +	}, +, +		RemoteRepository.Builder builder = new RemoteRepository.Builder(name, "default",, +				root);, +		String protocol = root.contains(":") ? root.substring(0, root.indexOf(":")), +				: "none";, +		builder.setProxy(AetherGrapeEngine.defaultProxy(protocol));, +		this.repositories.add(builder.build());]