[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +		@Order(Ordered.LOWEST_PRECEDENCE - 4), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +		@Order(Ordered.LOWEST_PRECEDENCE - 4), +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfigurationTests.java, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, +import org.springframework.security.config.annotation.web.WebSecurityConfigurer;, +import org.springframework.security.config.annotation.web.builders.WebSecurity;, +		assertNotNull(this.context.getBean(AuthenticationManagerBuilder.class));, +				ManagementSecurityAutoConfiguration.class, UserDetailsExposed.class,, +		this.context.refresh();, +	@Configuration, +	protected static class UserDetailsExposed implements, +			WebSecurityConfigurer<WebSecurity> {, +, +		@Override, +		public void init(WebSecurity builder) throws Exception {, +		}, +, +		@Override, +		public void configure(WebSecurity builder) throws Exception {, +		}, +, +		@Bean, +		public AuthenticationManager authenticationManager(, +				AuthenticationManagerBuilder builder) throws Exception {, +			return builder.getOrBuild();, +		}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +		@Order(Ordered.LOWEST_PRECEDENCE - 4), +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfigurationTests.java, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, +import org.springframework.security.config.annotation.web.WebSecurityConfigurer;, +import org.springframework.security.config.annotation.web.builders.WebSecurity;, +		assertNotNull(this.context.getBean(AuthenticationManagerBuilder.class));, +				ManagementSecurityAutoConfiguration.class, UserDetailsExposed.class,, +		this.context.refresh();, +	@Configuration, +	protected static class UserDetailsExposed implements, +			WebSecurityConfigurer<WebSecurity> {, +, +		@Override, +		public void init(WebSecurity builder) throws Exception {, +		}, +, +		@Override, +		public void configure(WebSecurity builder) throws Exception {, +		}, +, +		@Bean, +		public AuthenticationManager authenticationManager(, +				AuthenticationManagerBuilder builder) throws Exception {, +			return builder.getOrBuild();, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/AuthenticationManagerConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;, +import org.springframework.core.Ordered;, +import org.springframework.core.annotation.Order;, +import org.springframework.security.config.annotation.web.WebSecurityConfigurer;, +import org.springframework.security.config.annotation.web.builders.WebSecurity;, +@ConditionalOnWebApplication, +@Order(Ordered.LOWEST_PRECEDENCE - 3), +public class AuthenticationManagerConfiguration implements, +		WebSecurityConfigurer<WebSecurity> {, +	@Override, +	public void init(WebSecurity builder) throws Exception {, +	@Override, +	public void configure(WebSecurity builder) throws Exception {, +	}, +	@Autowired, +	public void authentication(AuthenticationManagerBuilder builder) throws Exception {, +		SecurityAutoConfiguration.authentication(builder, this.security);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +		@Order(Ordered.LOWEST_PRECEDENCE - 4), +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfigurationTests.java, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, +import org.springframework.security.config.annotation.web.WebSecurityConfigurer;, +import org.springframework.security.config.annotation.web.builders.WebSecurity;, +		assertNotNull(this.context.getBean(AuthenticationManagerBuilder.class));, +				ManagementSecurityAutoConfiguration.class, UserDetailsExposed.class,, +		this.context.refresh();, +	@Configuration, +	protected static class UserDetailsExposed implements, +			WebSecurityConfigurer<WebSecurity> {, +, +		@Override, +		public void init(WebSecurity builder) throws Exception {, +		}, +, +		@Override, +		public void configure(WebSecurity builder) throws Exception {, +		}, +, +		@Bean, +		public AuthenticationManager authenticationManager(, +				AuthenticationManagerBuilder builder) throws Exception {, +			return builder.getOrBuild();, +		}]