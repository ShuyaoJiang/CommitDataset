[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java, +import org.apache.catalina.LifecycleListener;, +import org.apache.catalina.core.AprLifecycleListener;, +	private List<LifecycleListener> contextLifecycleListeners = Arrays.asList(new AprLifecycleListener());, +, +		for (LifecycleListener lifecycleListener : this.contextLifecycleListeners) {, +			context.addLifecycleListener(lifecycleListener);, +		}, +	 * Set {@link LifecycleListener}s that should be applied to the Tomcat {@link Context}, +	 * . Calling this method will replace any existing listeners., +	 * @param contextLifecycleListeners the listeners to set, +	 */, +	public void setContextLifecycleListeners(, +			Collection<? extends LifecycleListener> contextLifecycleListeners) {, +		Assert.notNull(contextLifecycleListeners,, +				"ContextLifecycleListeners must not be null");, +		this.contextLifecycleListeners = new ArrayList<>(contextLifecycleListeners);, +	}, +, +	/**, +	 * Returns a mutable collection of the {@link LifecycleListener}s that will be applied, +	 * to the Tomcat {@link Context} ., +	 * @return the context lifecycle listeners that will be applied, +	 */, +	public Collection<LifecycleListener> getContextLifecycleListeners() {, +		return this.contextLifecycleListeners;, +	}, +, +	/**, +	 * Add {@link LifecycleListener}s that should be added to the Tomcat {@link Context}., +	 * @param contextLifecycleListeners the listeners to add, +	 */, +	public void addContextLifecycleListeners(, +			LifecycleListener... contextLifecycleListeners) {, +		Assert.notNull(contextLifecycleListeners,, +				"ContextLifecycleListeners must not be null");, +		this.contextLifecycleListeners.addAll(Arrays.asList(contextLifecycleListeners));, +	}, +, +, +	/**, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java, +import org.apache.catalina.LifecycleListener;, +import org.apache.catalina.core.AprLifecycleListener;, +	private List<LifecycleListener> contextLifecycleListeners = Arrays.asList(new AprLifecycleListener());, +, +		for (LifecycleListener lifecycleListener : this.contextLifecycleListeners) {, +			context.addLifecycleListener(lifecycleListener);, +		}, +	 * Set {@link LifecycleListener}s that should be applied to the Tomcat {@link Context}, +	 * . Calling this method will replace any existing listeners., +	 * @param contextLifecycleListeners the listeners to set, +	 */, +	public void setContextLifecycleListeners(, +			Collection<? extends LifecycleListener> contextLifecycleListeners) {, +		Assert.notNull(contextLifecycleListeners,, +				"ContextLifecycleListeners must not be null");, +		this.contextLifecycleListeners = new ArrayList<>(contextLifecycleListeners);, +	}, +, +	/**, +	 * Returns a mutable collection of the {@link LifecycleListener}s that will be applied, +	 * to the Tomcat {@link Context} ., +	 * @return the context lifecycle listeners that will be applied, +	 */, +	public Collection<LifecycleListener> getContextLifecycleListeners() {, +		return this.contextLifecycleListeners;, +	}, +, +	/**, +	 * Add {@link LifecycleListener}s that should be added to the Tomcat {@link Context}., +	 * @param contextLifecycleListeners the listeners to add, +	 */, +	public void addContextLifecycleListeners(, +			LifecycleListener... contextLifecycleListeners) {, +		Assert.notNull(contextLifecycleListeners,, +				"ContextLifecycleListeners must not be null");, +		this.contextLifecycleListeners.addAll(Arrays.asList(contextLifecycleListeners));, +	}, +, +, +	/**, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java, +import org.apache.catalina.core.AprLifecycleListener;, +	private List<LifecycleListener> contextLifecycleListeners = Arrays.asList(new AprLifecycleListener());, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java, +import org.apache.catalina.LifecycleListener;, +import org.apache.catalina.core.AprLifecycleListener;, +	private List<LifecycleListener> contextLifecycleListeners = Arrays.asList(new AprLifecycleListener());, +, +		for (LifecycleListener lifecycleListener : this.contextLifecycleListeners) {, +			context.addLifecycleListener(lifecycleListener);, +		}, +	 * Set {@link LifecycleListener}s that should be applied to the Tomcat {@link Context}, +	 * . Calling this method will replace any existing listeners., +	 * @param contextLifecycleListeners the listeners to set, +	 */, +	public void setContextLifecycleListeners(, +			Collection<? extends LifecycleListener> contextLifecycleListeners) {, +		Assert.notNull(contextLifecycleListeners,]