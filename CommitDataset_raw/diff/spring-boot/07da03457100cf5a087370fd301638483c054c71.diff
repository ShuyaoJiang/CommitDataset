[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;, +import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration;, +import org.springframework.transaction.annotation.EnableTransactionManagement;, +	@ConditionalOnMissingClass(AbstractTransactionManagementConfiguration.class), +	@Configuration, +	@EnableTransactionManagement, +	protected static class TransactionManagementConfiguration {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;, +import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration;, +import org.springframework.transaction.annotation.EnableTransactionManagement;, +	@ConditionalOnMissingClass(AbstractTransactionManagementConfiguration.class), +	@Configuration, +	@EnableTransactionManagement, +	protected static class TransactionManagementConfiguration {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;, +import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration;, +import org.springframework.transaction.annotation.EnableTransactionManagement;, +	@ConditionalOnMissingClass(AbstractTransactionManagementConfiguration.class), +	@Configuration, +	@EnableTransactionManagement, +	protected static class TransactionManagementConfiguration {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;, +import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration;, +import org.springframework.transaction.annotation.EnableTransactionManagement;, +	@ConditionalOnMissingClass(AbstractTransactionManagementConfiguration.class), +	@Configuration, +	@EnableTransactionManagement, +	protected static class TransactionManagementConfiguration {, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfigurationTests.java, +import org.springframework.transaction.annotation.EnableTransactionManagement;, +	@Test, +	public void testManualConfiguration() throws Exception {, +		this.context.register(SwitchTransactionsOn.class,, +				EmbeddedDataSourceConfiguration.class,, +				DataSourceTransactionManagerAutoConfiguration.class);, +		this.context.refresh();, +		assertNotNull(this.context.getBean(DataSource.class));, +		assertNotNull(this.context.getBean(DataSourceTransactionManager.class));, +	}, +, +	@EnableTransactionManagement, +	protected static class SwitchTransactionsOn {, +, +	}, +]