[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2WebSecurityConfiguration.java, +	@ConditionalOnMissingBean(WebSecurityConfigurerAdapter.class), +	static class OAuth2WebSecurityConfigurerAdapter, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2WebSecurityConfiguration.java, +	@ConditionalOnMissingBean(WebSecurityConfigurerAdapter.class), +	static class OAuth2WebSecurityConfigurerAdapter, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2WebSecurityConfigurationTests.java, +	public void securityConfigurerBacksOffWhenOtherWebSecurityAdapterPresent(), +			throws Exception {, +		this.contextRunner, +				.withUserConfiguration(TestWebSecurityConfigurerConfig.class,, +						OAuth2WebSecurityConfiguration.class), +				.run((context) -> {, +					assertThat(getAuthCodeFilters(context)).isEmpty();, +					assertThat(context).getBean(OAuth2AuthorizedClientService.class).isNotNull();, +				});, +	}, +, +	@Test]