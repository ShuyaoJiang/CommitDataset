[+++ b/spring-boot-actuator-autoconfigure/pom.xml, +			<artifactId>micrometer-registry-atlas</artifactId>, +			<artifactId>micrometer-registry-datadog</artifactId>, +			<artifactId>micrometer-registry-ganglia</artifactId>, +			<artifactId>micrometer-registry-graphite</artifactId>, +			<artifactId>micrometer-registry-influx</artifactId>, +			<artifactId>micrometer-registry-jmx</artifactId>, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator-autoconfigure/pom.xml, +			<artifactId>micrometer-registry-atlas</artifactId>, +			<artifactId>micrometer-registry-datadog</artifactId>, +			<artifactId>micrometer-registry-ganglia</artifactId>, +			<artifactId>micrometer-registry-graphite</artifactId>, +			<artifactId>micrometer-registry-influx</artifactId>, +			<artifactId>micrometer-registry-jmx</artifactId>, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/pom.xml, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator-autoconfigure/pom.xml, +			<artifactId>micrometer-registry-atlas</artifactId>, +			<artifactId>micrometer-registry-datadog</artifactId>, +			<artifactId>micrometer-registry-ganglia</artifactId>, +			<artifactId>micrometer-registry-graphite</artifactId>, +			<artifactId>micrometer-registry-influx</artifactId>, +			<artifactId>micrometer-registry-jmx</artifactId>, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/pom.xml, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/MetricsEndpoint.java, +import io.micrometer.core.instrument.NamingConvention;, +		return HierarchicalNameMapper.DEFAULT.toHierarchicalName(meter.getId(),, +				NamingConvention.camelCase);, +++ b/spring-boot-actuator-autoconfigure/pom.xml, +			<artifactId>micrometer-registry-atlas</artifactId>, +			<artifactId>micrometer-registry-datadog</artifactId>, +			<artifactId>micrometer-registry-ganglia</artifactId>, +			<artifactId>micrometer-registry-graphite</artifactId>, +			<artifactId>micrometer-registry-influx</artifactId>, +			<artifactId>micrometer-registry-jmx</artifactId>, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/pom.xml, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/MetricsEndpoint.java, +import io.micrometer.core.instrument.NamingConvention;, +		return HierarchicalNameMapper.DEFAULT.toHierarchicalName(meter.getId(),, +				NamingConvention.camelCase);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/MetricsEndpointWebIntegrationTests.java, +				.jsonPath("['jvmMemoryUsed.area.nonheap.id.Compressed_Class_Space']"), +				.exists().jsonPath("['jvmMemoryUsed.area.heap.id.PS_Old_Gen']");, +++ b/spring-boot-actuator-autoconfigure/pom.xml, +			<artifactId>micrometer-registry-atlas</artifactId>, +			<artifactId>micrometer-registry-datadog</artifactId>, +			<artifactId>micrometer-registry-ganglia</artifactId>, +			<artifactId>micrometer-registry-graphite</artifactId>, +			<artifactId>micrometer-registry-influx</artifactId>, +			<artifactId>micrometer-registry-jmx</artifactId>, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/pom.xml, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/MetricsEndpoint.java, +import io.micrometer.core.instrument.NamingConvention;, +		return HierarchicalNameMapper.DEFAULT.toHierarchicalName(meter.getId(),, +				NamingConvention.camelCase);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/MetricsEndpointWebIntegrationTests.java, +				.jsonPath("['jvmMemoryUsed.area.nonheap.id.Compressed_Class_Space']"), +				.exists().jsonPath("['jvmMemoryUsed.area.heap.id.PS_Old_Gen']");, +++ b/spring-boot-dependencies/pom.xml, +		<micrometer.version>1.0.0-rc.1</micrometer.version>, +				<artifactId>micrometer-registry-atlas</artifactId>, +				<artifactId>micrometer-registry-datadog</artifactId>, +				<artifactId>micrometer-registry-influx</artifactId>, +				<artifactId>micrometer-registry-ganglia</artifactId>, +				<artifactId>micrometer-registry-graphite</artifactId>, +				<artifactId>micrometer-registry-jmx</artifactId>, +				<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator-autoconfigure/pom.xml, +			<artifactId>micrometer-registry-atlas</artifactId>, +			<artifactId>micrometer-registry-datadog</artifactId>, +			<artifactId>micrometer-registry-ganglia</artifactId>, +			<artifactId>micrometer-registry-graphite</artifactId>, +			<artifactId>micrometer-registry-influx</artifactId>, +			<artifactId>micrometer-registry-jmx</artifactId>, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/pom.xml, +			<artifactId>micrometer-registry-prometheus</artifactId>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/MetricsEndpoint.java, +import io.micrometer.core.instrument.NamingConvention;, +		return HierarchicalNameMapper.DEFAULT.toHierarchicalName(meter.getId(),, +				NamingConvention.camelCase);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/MetricsEndpointWebIntegrationTests.java, +				.jsonPath("['jvmMemoryUsed.area.nonheap.id.Compressed_Class_Space']"), +				.exists().jsonPath("['jvmMemoryUsed.area.heap.id.PS_Old_Gen']");, +++ b/spring-boot-dependencies/pom.xml, +		<micrometer.version>1.0.0-rc.1</micrometer.version>, +				<artifactId>micrometer-registry-atlas</artifactId>, +				<artifactId>micrometer-registry-datadog</artifactId>, +				<artifactId>micrometer-registry-influx</artifactId>, +				<artifactId>micrometer-registry-ganglia</artifactId>, +				<artifactId>micrometer-registry-graphite</artifactId>, +				<artifactId>micrometer-registry-jmx</artifactId>]