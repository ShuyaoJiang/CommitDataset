[+++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		class InitializerListener implements ApplicationListener<ContextRefreshedEvent> {, +		application.setListeners(Arrays.asList(new InitializerListener()));, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		class InitializerListener implements ApplicationListener<ContextRefreshedEvent> {, +		application.setListeners(Arrays.asList(new InitializerListener()));, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		class InitializerListener implements ApplicationListener<ContextRefreshedEvent> {, +		application.setListeners(Arrays.asList(new InitializerListener()));, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingDataSourceBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		class InitializerListener implements ApplicationListener<ContextRefreshedEvent> {, +		application.setListeners(Arrays.asList(new InitializerListener()));, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingDataSourceBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/AbstractLoggingSystemTests.java, +	public void configureTempDir() throws IOException {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		class InitializerListener implements ApplicationListener<ContextRefreshedEvent> {, +		application.setListeners(Arrays.asList(new InitializerListener()));, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingDataSourceBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/AbstractLoggingSystemTests.java, +	public void configureTempDir() throws IOException {, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/logback/LevelRemappingAppenderTests.java, +	public void defaultRemapsInfo() throws Exception {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		class InitializerListener implements ApplicationListener<ContextRefreshedEvent> {, +		application.setListeners(Arrays.asList(new InitializerListener()));, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingDataSourceBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/AbstractLoggingSystemTests.java, +	public void configureTempDir() throws IOException {, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/logback/LevelRemappingAppenderTests.java, +	public void defaultRemapsInfo() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/redis/RedisTestServer.java, +			logger.error("No Redis server available", ex);, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/server/HttpTunnelServer.java, +		 * Start asynchronous support or if unavailable return {@code null} to cause, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		class InitializerListener implements ApplicationListener<ContextRefreshedEvent> {, +		application.setListeners(Arrays.asList(new InitializerListener()));, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/jta/bitronix/PoolingDataSourceBeanTests.java, +	public void sensibleDefaults() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/AbstractLoggingSystemTests.java, +	public void configureTempDir() throws IOException {, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/logback/LevelRemappingAppenderTests.java, +	public void defaultRemapsInfo() throws Exception {, +++ b/spring-boot/src/test/java/org/springframework/boot/redis/RedisTestServer.java, +			logger.error("No Redis server available", ex);, +++ b/spring-boot/src/test/java/org/springframework/boot/test/TestRestTemplateTests.java, +		// The Apache client is on the classpath so we get the fully-fledged factory]