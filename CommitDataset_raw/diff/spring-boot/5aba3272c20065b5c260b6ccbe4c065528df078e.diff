[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngine.java, +	public void addResolver(Map<String, Object> args) {, +		String name = (String) args.get("name");, +		String root = (String) args.get("root");, +, +		addRemoteRepository(this.repositories, name, root);, +	}, +, +	@Override, +++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngine.java, +	public void addResolver(Map<String, Object> args) {, +		String name = (String) args.get("name");, +		String root = (String) args.get("root");, +, +		addRemoteRepository(this.repositories, name, root);, +	}, +, +	@Override, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngineTests.java, +	@Test, +	public void resolutionWithCustomResolver() {, +		Map<String, Object> args = new HashMap<String, Object>();, +		this.grapeEngine.addResolver(createResolver("restlet.org",, +				"http://maven.restlet.org"));, +		this.grapeEngine.grab(args,, +				createDependency("org.restlet", "org.restlet", "1.1.6"));, +		assertEquals(1, this.groovyClassLoader.getURLs().length);, +	}, +, +, +	private Map<String, Object> createResolver(String name, String url) {, +		Map<String, Object> resolver = new HashMap<String, Object>();, +		resolver.put("name", name);, +		resolver.put("root", url);, +		return resolver;, +	}]