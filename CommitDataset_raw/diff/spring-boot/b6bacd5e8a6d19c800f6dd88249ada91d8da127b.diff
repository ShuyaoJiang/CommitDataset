[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +import org.springframework.util.StringUtils;, +		if ((!StringUtils.isEmpty(message) || errorAttributes.get("message") == null), +			errorAttributes.put("message",, +					StringUtils.isEmpty(message) ? "No message available" : message);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +import org.springframework.util.StringUtils;, +		if ((!StringUtils.isEmpty(message) || errorAttributes.get("message") == null), +			errorAttributes.put("message",, +					StringUtils.isEmpty(message) ? "No message available" : message);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerIntegrationTests.java, +		String body = entity.getBody().toString();, +		assertThat(body, endsWith("status=500, " + "error=Internal Server Error, ", +				+ "exception=java.lang.IllegalStateException, " + "message=Expected!, ", +				+ "path=/}"));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +import org.springframework.util.StringUtils;, +		if ((!StringUtils.isEmpty(message) || errorAttributes.get("message") == null), +			errorAttributes.put("message",, +					StringUtils.isEmpty(message) ? "No message available" : message);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerIntegrationTests.java, +		String body = entity.getBody().toString();, +		assertThat(body, endsWith("status=500, " + "error=Internal Server Error, ", +				+ "exception=java.lang.IllegalStateException, " + "message=Expected!, ", +				+ "path=/}"));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerMockMvcTests.java, +	@Import({ EmbeddedServletContainerAutoConfiguration.EmbeddedTomcat.class,, +			EmbeddedServletContainerAutoConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +import org.springframework.util.StringUtils;, +		if ((!StringUtils.isEmpty(message) || errorAttributes.get("message") == null), +			errorAttributes.put("message",, +					StringUtils.isEmpty(message) ? "No message available" : message);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerIntegrationTests.java, +		String body = entity.getBody().toString();, +		assertThat(body, endsWith("status=500, " + "error=Internal Server Error, ", +				+ "exception=java.lang.IllegalStateException, " + "message=Expected!, ", +				+ "path=/}"));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerMockMvcTests.java, +	@Import({ EmbeddedServletContainerAutoConfiguration.EmbeddedTomcat.class,, +			EmbeddedServletContainerAutoConfiguration.class,, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import java.lang.reflect.Field;, +import java.net.URL;, +		clearUrlHandler();, +	/**, +	 * The TomcatURLStreamHandlerFactory fails if the factory is already set, use, +	 * reflection to reset it., +	 */, +	private void clearUrlHandler() {, +		try {, +			Field field = URL.class.getDeclaredField("factory");, +			field.setAccessible(true);, +			field.set(null, null);, +		}, +		catch (Exception ex) {, +			throw new IllegalStateException(ex);, +		}, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +import org.springframework.util.StringUtils;, +		if ((!StringUtils.isEmpty(message) || errorAttributes.get("message") == null), +			errorAttributes.put("message",, +					StringUtils.isEmpty(message) ? "No message available" : message);, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerIntegrationTests.java, +		String body = entity.getBody().toString();, +		assertThat(body, endsWith("status=500, " + "error=Internal Server Error, ", +				+ "exception=java.lang.IllegalStateException, " + "message=Expected!, ", +				+ "path=/}"));, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerMockMvcTests.java, +	@Import({ EmbeddedServletContainerAutoConfiguration.EmbeddedTomcat.class,, +			EmbeddedServletContainerAutoConfiguration.class,, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/CliTester.java, +import java.lang.reflect.Field;, +import java.net.URL;, +		clearUrlHandler();, +	/**, +	 * The TomcatURLStreamHandlerFactory fails if the factory is already set, use, +	 * reflection to reset it., +	 */, +	private void clearUrlHandler() {, +		try {, +			Field field = URL.class.getDeclaredField("factory");, +			field.setAccessible(true);, +			field.set(null, null);, +		}, +		catch (Exception ex) {, +			throw new IllegalStateException(ex);, +		}, +	}, +, +++ b/spring-boot-dependencies/pom.xml, +		<jetty.version>9.2.4.v20141103</jetty.version>, +		<servlet-api.version>3.1.0</servlet-api.version>, +		<tomcat.version>8.0.14</tomcat.version>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +import org.springframework.util.StringUtils;, +		if ((!StringUtils.isEmpty(message) || errorAttributes.get("message") == null), +			errorAttributes.put("message",]