[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/opentsdb/OpenTsdbGaugeWriter.java, +	 * Creates a new {@code OpenTsdbGaugeWriter} with the default connect (10 seconds) and, +	 * read (30 seconds) timeouts., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/opentsdb/OpenTsdbGaugeWriter.java, +	 * Creates a new {@code OpenTsdbGaugeWriter} with the default connect (10 seconds) and, +	 * read (30 seconds) timeouts., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +	private static final Log logger = LogFactory, +			.getLog(JobLauncherCommandLineRunner.class);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/opentsdb/OpenTsdbGaugeWriter.java, +	 * Creates a new {@code OpenTsdbGaugeWriter} with the default connect (10 seconds) and, +	 * read (30 seconds) timeouts., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +	private static final Log logger = LogFactory, +			.getLog(JobLauncherCommandLineRunner.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(ElasticsearchAutoConfiguration.class);, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/opentsdb/OpenTsdbGaugeWriter.java, +	 * Creates a new {@code OpenTsdbGaugeWriter} with the default connect (10 seconds) and, +	 * read (30 seconds) timeouts., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +	private static final Log logger = LogFactory, +			.getLog(JobLauncherCommandLineRunner.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(ElasticsearchAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(DataSourceAutoConfiguration.class);, +					.url(this.properties.determineUrl()), +					.username(this.properties.determineUsername()), +	 * If a pooled {@link DataSource} is available, it will always be preferred to an, +	 * {@code EmbeddedDatabase}., +				return ConditionOutcome.noMatch("supported DataSource class found");, +			if (anyMatches(context, metadata, this.pooledCondition,, +					this.embeddedCondition)) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/opentsdb/OpenTsdbGaugeWriter.java, +	 * Creates a new {@code OpenTsdbGaugeWriter} with the default connect (10 seconds) and, +	 * read (30 seconds) timeouts., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +	private static final Log logger = LogFactory, +			.getLog(JobLauncherCommandLineRunner.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(ElasticsearchAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(DataSourceAutoConfiguration.class);, +					.url(this.properties.determineUrl()), +					.username(this.properties.determineUsername()), +	 * If a pooled {@link DataSource} is available, it will always be preferred to an, +	 * {@code EmbeddedDatabase}., +				return ConditionOutcome.noMatch("supported DataSource class found");, +			if (anyMatches(context, metadata, this.pooledCondition,, +					this.embeddedCondition)) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/opentsdb/OpenTsdbGaugeWriter.java, +	 * Creates a new {@code OpenTsdbGaugeWriter} with the default connect (10 seconds) and, +	 * read (30 seconds) timeouts., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +	private static final Log logger = LogFactory, +			.getLog(JobLauncherCommandLineRunner.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(ElasticsearchAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(DataSourceAutoConfiguration.class);, +					.url(this.properties.determineUrl()), +					.username(this.properties.determineUsername()), +	 * If a pooled {@link DataSource} is available, it will always be preferred to an, +	 * {@code EmbeddedDatabase}., +				return ConditionOutcome.noMatch("supported DataSource class found");, +			if (anyMatches(context, metadata, this.pooledCondition,, +					this.embeddedCondition)) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java, +		message.append(conditionAndOutcomes.isFullMatch() ? " matched" : " did not match"), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/opentsdb/OpenTsdbGaugeWriter.java, +	 * Creates a new {@code OpenTsdbGaugeWriter} with the default connect (10 seconds) and, +	 * read (30 seconds) timeouts., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java, +	private static final Log logger = LogFactory, +			.getLog(JobLauncherCommandLineRunner.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(ElasticsearchAutoConfiguration.class);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +	private static final Log logger = LogFactory, +			.getLog(DataSourceAutoConfiguration.class);, +					.url(this.properties.determineUrl()), +					.username(this.properties.determineUsername()), +	 * If a pooled {@link DataSource} is available, it will always be preferred to an, +	 * {@code EmbeddedDatabase}., +				return ConditionOutcome.noMatch("supported DataSource class found");, +			if (anyMatches(context, metadata, this.pooledCondition,, +					this.embeddedCondition)) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/logging/AutoConfigurationReportLoggingInitializer.java]