[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jdbc;, +, +import javax.sql.DataSource;, +, +import org.springframework.boot.autoconfigure.AutoConfigureAfter;, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.jdbc.core.JdbcOperations;, +import org.springframework.jdbc.core.JdbcTemplate;, +import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;, +import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;, +, +/**, + * {@link EnableAutoConfiguration Auto-configuration} for {@link JdbcTemplate} and, + * {@link NamedParameterJdbcTemplate}., + *, + * @author Dave Syer, + * @author Phillip Webb, + * @author Stephane Nicoll, + * @author Kazuki Shimizu, + * @since 1.4.0, + */, +@Configuration, +@ConditionalOnClass(DataSource.class), +@ConditionalOnSingleCandidate(DataSource.class), +@AutoConfigureAfter(DataSourceAutoConfiguration.class), +public class JdbcTemplateAutoConfiguration {, +, +	private final DataSource dataSource;, +, +	public JdbcTemplateAutoConfiguration(DataSource dataSource) {, +		this.dataSource = dataSource;, +	}, +, +	@Bean, +	@ConditionalOnMissingBean(JdbcOperations.class), +	public JdbcTemplate jdbcTemplate() {, +		return new JdbcTemplate(this.dataSource);, +	}, +, +	@Bean, +	@ConditionalOnMissingBean(NamedParameterJdbcOperations.class), +	public NamedParameterJdbcTemplate namedParameterJdbcTemplate() {, +		return new NamedParameterJdbcTemplate(this.dataSource);, +	}, +, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jdbc;, +, +import javax.sql.DataSource;, +, +import org.springframework.boot.autoconfigure.AutoConfigureAfter;, +import org.springframework.boot.autoconfigure.EnableAutoConfiguration;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.jdbc.core.JdbcOperations;]