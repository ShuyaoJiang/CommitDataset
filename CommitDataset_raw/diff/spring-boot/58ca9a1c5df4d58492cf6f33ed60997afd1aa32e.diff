[+++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +group = 'org.springframework.boot', +version = springBootVersion, +, +, +springBoot {, +	buildInfo(), +}, +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +group = 'org.springframework.boot', +version = springBootVersion, +, +, +springBoot {, +	buildInfo(), +}, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/SpringBootPlugin.java, +		project.getExtensions().create("springBoot", SpringBootPluginExtension.class,, +				project);, +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +group = 'org.springframework.boot', +version = springBootVersion, +, +, +springBoot {, +	buildInfo(), +}, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/SpringBootPlugin.java, +		project.getExtensions().create("springBoot", SpringBootPluginExtension.class,, +				project);, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/SpringBootPluginExtension.java, + * Copyright 2012-2016 the original author or authors., +import groovy.lang.Closure;, +import org.gradle.api.Project;, +import org.gradle.api.plugins.JavaPlugin;, +, +import org.springframework.boot.gradle.buildinfo.BuildInfo;, + * @author Andy Wilkinson, +	private final Project project;, +, +	public SpringBootPluginExtension(Project project) {, +		this.project = project;, +	}, +, +	public void buildInfo() {, +		this.buildInfo(null);, +	}, +, +	public void buildInfo(Closure<?> taskConfigurer) {, +		BuildInfo buildInfo = this.project.getTasks().create("buildInfo",, +				BuildInfo.class);, +		this.project.getTasks().getByName(JavaPlugin.CLASSES_TASK_NAME), +				.dependsOn(buildInfo);, +		if (taskConfigurer != null) {, +			taskConfigurer.setDelegate(buildInfo);, +			taskConfigurer.call();, +		}, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +group = 'org.springframework.boot', +version = springBootVersion, +, +, +springBoot {, +	buildInfo(), +}, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/SpringBootPlugin.java, +		project.getExtensions().create("springBoot", SpringBootPluginExtension.class,, +				project);, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/SpringBootPluginExtension.java, + * Copyright 2012-2016 the original author or authors., +import groovy.lang.Closure;, +import org.gradle.api.Project;, +import org.gradle.api.plugins.JavaPlugin;, +, +import org.springframework.boot.gradle.buildinfo.BuildInfo;, + * @author Andy Wilkinson, +	private final Project project;, +, +	public SpringBootPluginExtension(Project project) {, +		this.project = project;, +	}, +, +	public void buildInfo() {, +		this.buildInfo(null);, +	}, +, +	public void buildInfo(Closure<?> taskConfigurer) {, +		BuildInfo buildInfo = this.project.getTasks().create("buildInfo",, +				BuildInfo.class);, +		this.project.getTasks().getByName(JavaPlugin.CLASSES_TASK_NAME), +				.dependsOn(buildInfo);, +		if (taskConfigurer != null) {, +			taskConfigurer.setDelegate(buildInfo);, +			taskConfigurer.call();, +		}, +	}, +, +++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/buildinfo/BuildInfo.java]