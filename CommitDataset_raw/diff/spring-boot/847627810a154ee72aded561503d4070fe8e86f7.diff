[+++ b/pom.xml, +	<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-autoconfigure/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/pom.xml, +	<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-autoconfigure/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties(BatchProperties.class), +	@Autowired, +	private BatchProperties properties;, +		String jobNames = this.properties.getJob().getNames();, +		if (StringUtils.hasText(jobNames)) {, +			runner.setJobNames(jobNames);, +++ b/pom.xml, +	<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-autoconfigure/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties(BatchProperties.class), +	@Autowired, +	private BatchProperties properties;, +		String jobNames = this.properties.getJob().getNames();, +		if (StringUtils.hasText(jobNames)) {, +			runner.setJobNames(jobNames);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +public class BatchDatabaseInitializer {, +, +	@Autowired, +	private BatchProperties properties;, +		if (this.properties.getInitializer().isEnabled()) {, +			String schemaLocation = this.properties.getSchema();, +++ b/pom.xml, +	<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-actuator/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-autoconfigure/pom.xml, +		<version>1.2.0.BUILD-SNAPSHOT</version>, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, +@EnableConfigurationProperties(BatchProperties.class), +	@Autowired, +	private BatchProperties properties;, +		String jobNames = this.properties.getJob().getNames();, +		if (StringUtils.hasText(jobNames)) {, +			runner.setJobNames(jobNames);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchDatabaseInitializer.java, +public class BatchDatabaseInitializer {, +, +	@Autowired, +	private BatchProperties properties;, +		if (this.properties.getInitializer().isEnabled()) {, +			String schemaLocation = this.properties.getSchema();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchProperties.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.batch;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +, +/**, + * Configuration properties for Spring Batch., + *, + * @author Stephane Nicoll, + * @since 1.2.0, + */, +@ConfigurationProperties("spring.batch"), +public class BatchProperties {, +, +	private static final String DEFAULT_SCHEMA_LOCATION = "classpath:org/springframework/", +			+ "batch/core/schema-@@platform@@.sql";]