[+++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		List<T> instances = createSpringFactoriesInstances(type, parameterTypes,, +				classLoader, args, names);, +		AnnotationAwareOrderComparator.sort(instances);, +		return instances;, +	}, +	@SuppressWarnings("unchecked"), +	private <T> List<T> createSpringFactoriesInstances(Class<T> type,, +			Class<?>[] parameterTypes, ClassLoader classLoader, Object[] args,, +			Set<String> names) {, +		List<T> instances = new ArrayList<T>(names.size());, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		List<T> instances = createSpringFactoriesInstances(type, parameterTypes,, +				classLoader, args, names);, +		AnnotationAwareOrderComparator.sort(instances);, +		return instances;, +	}, +	@SuppressWarnings("unchecked"), +	private <T> List<T> createSpringFactoriesInstances(Class<T> type,, +			Class<?>[] parameterTypes, ClassLoader classLoader, Object[] args,, +			Set<String> names) {, +		List<T> instances = new ArrayList<T>(names.size());, +++ b/spring-boot/src/main/java/org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		List<T> instances = createSpringFactoriesInstances(type, parameterTypes,, +				classLoader, args, names);, +		AnnotationAwareOrderComparator.sort(instances);, +		return instances;, +	}, +	@SuppressWarnings("unchecked"), +	private <T> List<T> createSpringFactoriesInstances(Class<T> type,, +			Class<?>[] parameterTypes, ClassLoader classLoader, Object[] args,, +			Set<String> names) {, +		List<T> instances = new ArrayList<T>(names.size());, +++ b/spring-boot/src/main/java/org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedConversionService.java, +, +, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		List<T> instances = createSpringFactoriesInstances(type, parameterTypes,, +				classLoader, args, names);, +		AnnotationAwareOrderComparator.sort(instances);, +		return instances;, +	}, +	@SuppressWarnings("unchecked"), +	private <T> List<T> createSpringFactoriesInstances(Class<T> type,, +			Class<?>[] parameterTypes, ClassLoader classLoader, Object[] args,, +			Set<String> names) {, +		List<T> instances = new ArrayList<T>(names.size());, +++ b/spring-boot/src/main/java/org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedConversionService.java, +, +, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedDataBinder.java, +, +, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		List<T> instances = createSpringFactoriesInstances(type, parameterTypes,, +				classLoader, args, names);, +		AnnotationAwareOrderComparator.sort(instances);, +		return instances;, +	}, +	@SuppressWarnings("unchecked"), +	private <T> List<T> createSpringFactoriesInstances(Class<T> type,, +			Class<?>[] parameterTypes, ClassLoader classLoader, Object[] args,, +			Set<String> names) {, +		List<T> instances = new ArrayList<T>(names.size());, +++ b/spring-boot/src/main/java/org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedConversionService.java, +, +, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedDataBinder.java, +, +, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/YamlJavaBeanPropertyConstructor.java]