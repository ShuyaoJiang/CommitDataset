[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration.java, +import org.jooq.ExecutorProvider;, +		private final ExecutorProvider executorProvider;, +, +				ObjectProvider<TransactionListenerProvider[]> transactionListenerProviders,, +				ObjectProvider<ExecutorProvider> executorProvider) {, +			this.executorProvider = executorProvider.getIfAvailable();, +			if (this.executorProvider != null) {, +				configuration.set(this.executorProvider);, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfiguration.java, +import org.jooq.ExecutorProvider;, +		private final ExecutorProvider executorProvider;, +, +				ObjectProvider<TransactionListenerProvider[]> transactionListenerProviders,, +				ObjectProvider<ExecutorProvider> executorProvider) {, +			this.executorProvider = executorProvider.getIfAvailable();, +			if (this.executorProvider != null) {, +				configuration.set(this.executorProvider);, +			}, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfigurationTests.java, +import java.util.concurrent.Executor;, +import org.jooq.ExecutorProvider;, +				TestTransactionListenerProvider.class, TestExecutorProvider.class).run((context) -> {, +					assertThat(dsl.configuration().executorProvider().getClass()), +							.isEqualTo(TestExecutorProvider.class);, +	protected static class TestExecutorProvider implements ExecutorProvider {, +, +		@Override, +		public Executor provide() {, +			return null;, +		}, +, +	}, +]