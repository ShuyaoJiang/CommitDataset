[+++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +[[boot-features-testing-spring-boot-applications-testing-autoconfigured-neo4j-test]], +==== Auto-configured Data Neo4j tests, +`@DataNeo4jTest` can be used if you want to test Neo4j applications. By default, it will, +use an in-memory embedded Neo4j (if the embedded driver is  available), scan for, +`@NodeEntity` classes and configure Spring Data Neo4j repositories. Regular `@Component`, +beans will not be loaded into the `ApplicationContext`:, +, +[source,java,indent=0], +----, +	import org.junit.runner.RunWith;, +	import org.springframework.beans.factory.annotation.Autowired;, +	import org.springframework.boot.test.autoconfigure.data.neo4j.DataNeo4jTest;, +	import org.springframework.test.context.junit4.SpringRunner;, +, +	@RunWith(SpringRunner.class), +	@DataNeo4jTest, +	public class ExampleDataNeo4jTests {, +, +		@Autowired, +		private YourRepository repository;, +, +		//, +	}, +----, +, +Data Neo4j tests are transactional and rollback at the end of each test by default,, +see the {spring-reference}#testcontext-tx-enabling-transactions[relevant section] in the, +Spring Reference Documentation for more details. If that's not what you want, you can, +disable transaction management for a test or for the whole class as follows:, +, +[source,java,indent=0], +----, +	import org.junit.Test;, +	import org.junit.runner.RunWith;, +	import org.springframework.boot.test.autoconfigure.data.neo4j.DataNeo4jTest;, +	import org.springframework.test.context.junit4.SpringRunner;, +	import org.springframework.transaction.annotation.Propagation;, +	import org.springframework.transaction.annotation.Transactional;, +, +	@RunWith(SpringRunner.class), +	@DataNeo4jTest, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +	public class ExampleNonTransactionalTests {, +, +	}, +----, +, +, +A list of the auto-configuration that is enabled by `@DataNeo4jTest` can be, +<<appendix-test-auto-configuration#test-auto-configuration,found in the appendix>>., +, +, +, +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +[[boot-features-testing-spring-boot-applications-testing-autoconfigured-neo4j-test]], +==== Auto-configured Data Neo4j tests, +`@DataNeo4jTest` can be used if you want to test Neo4j applications. By default, it will, +use an in-memory embedded Neo4j (if the embedded driver is  available), scan for, +`@NodeEntity` classes and configure Spring Data Neo4j repositories. Regular `@Component`, +beans will not be loaded into the `ApplicationContext`:, +, +[source,java,indent=0], +----, +	import org.junit.runner.RunWith;, +	import org.springframework.beans.factory.annotation.Autowired;, +	import org.springframework.boot.test.autoconfigure.data.neo4j.DataNeo4jTest;, +	import org.springframework.test.context.junit4.SpringRunner;, +, +	@RunWith(SpringRunner.class), +	@DataNeo4jTest, +	public class ExampleDataNeo4jTests {, +, +		@Autowired, +		private YourRepository repository;, +, +		//, +	}, +----, +, +Data Neo4j tests are transactional and rollback at the end of each test by default,, +see the {spring-reference}#testcontext-tx-enabling-transactions[relevant section] in the, +Spring Reference Documentation for more details. If that's not what you want, you can, +disable transaction management for a test or for the whole class as follows:, +, +[source,java,indent=0], +----, +	import org.junit.Test;, +	import org.junit.runner.RunWith;, +	import org.springframework.boot.test.autoconfigure.data.neo4j.DataNeo4jTest;, +	import org.springframework.test.context.junit4.SpringRunner;, +	import org.springframework.transaction.annotation.Propagation;, +	import org.springframework.transaction.annotation.Transactional;, +, +	@RunWith(SpringRunner.class), +	@DataNeo4jTest, +	@Transactional(propagation = Propagation.NOT_SUPPORTED), +	public class ExampleNonTransactionalTests {, +, +	}]