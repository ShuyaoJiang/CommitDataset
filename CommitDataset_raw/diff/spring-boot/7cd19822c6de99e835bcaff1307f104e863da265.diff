[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.springframework.kafka</groupId>, +			<artifactId>spring-kafka</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.springframework.kafka</groupId>, +			<artifactId>spring-kafka</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +@ConditionalOnClass(KafkaAdmin.class), +@ConditionalOnBean(KafkaAdmin.class), +public class KafkaHealthIndicatorAutoConfiguration extends, +	KafkaHealthIndicatorAutoConfiguration(Map<String, KafkaAdmin> admins,, +		return new KafkaHealthIndicator(source, responseTimeout.toMillis());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.springframework.kafka</groupId>, +			<artifactId>spring-kafka</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +@ConditionalOnClass(KafkaAdmin.class), +@ConditionalOnBean(KafkaAdmin.class), +public class KafkaHealthIndicatorAutoConfiguration extends, +	KafkaHealthIndicatorAutoConfiguration(Map<String, KafkaAdmin> admins,, +		return new KafkaHealthIndicator(source, responseTimeout.toMillis());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorProperties.java, + * @since 2.0.0, +	private Duration responseTimeout = Duration.ofMillis(1000);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.springframework.kafka</groupId>, +			<artifactId>spring-kafka</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +@ConditionalOnClass(KafkaAdmin.class), +@ConditionalOnBean(KafkaAdmin.class), +public class KafkaHealthIndicatorAutoConfiguration extends, +	KafkaHealthIndicatorAutoConfiguration(Map<String, KafkaAdmin> admins,, +		return new KafkaHealthIndicator(source, responseTimeout.toMillis());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorProperties.java, + * @since 2.0.0, +	private Duration responseTimeout = Duration.ofMillis(1000);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/package-info.java, + * Auto-configuration for actuator Apache Kafka support., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.springframework.kafka</groupId>, +			<artifactId>spring-kafka</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +@ConditionalOnClass(KafkaAdmin.class), +@ConditionalOnBean(KafkaAdmin.class), +public class KafkaHealthIndicatorAutoConfiguration extends, +	KafkaHealthIndicatorAutoConfiguration(Map<String, KafkaAdmin> admins,, +		return new KafkaHealthIndicator(source, responseTimeout.toMillis());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorProperties.java, + * @since 2.0.0, +	private Duration responseTimeout = Duration.ofMillis(1000);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/package-info.java, + * Auto-configuration for actuator Apache Kafka support., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.health.kafka.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable Kafka health check.",, +      "defaultValue": true, +    },, +    {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/pom.xml, +			<groupId>org.springframework.kafka</groupId>, +			<artifactId>spring-kafka</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +@ConditionalOnClass(KafkaAdmin.class), +@ConditionalOnBean(KafkaAdmin.class), +public class KafkaHealthIndicatorAutoConfiguration extends, +	KafkaHealthIndicatorAutoConfiguration(Map<String, KafkaAdmin> admins,, +		return new KafkaHealthIndicator(source, responseTimeout.toMillis());, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/KafkaHealthIndicatorProperties.java, + * @since 2.0.0, +	private Duration responseTimeout = Duration.ofMillis(1000);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/kafka/package-info.java, + * Auto-configuration for actuator Apache Kafka support., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +      "name": "management.health.kafka.enabled",, +      "type": "java.lang.Boolean",, +      "description": "Whether to enable Kafka health check.",]