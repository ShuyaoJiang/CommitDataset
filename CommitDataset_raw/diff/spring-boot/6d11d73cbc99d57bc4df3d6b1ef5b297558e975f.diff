[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			// In case no shell.auth.type property is provided fall back to Spring Security, +			// In case shell.auth.type is set to spring and roles are configured using, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			// In case no shell.auth.type property is provided fall back to Spring Security, +			// In case shell.auth.type is set to spring and roles are configured using, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +	private final Auth auth = new Auth();, +	public Auth getAuth() {, +		getAuth().validateCrshShellConfig(properties);, +	public static class Auth {, +, +		/**, +		 * Authentication type. Auto-detected according to the environment (i.e. if Spring, +		 * Security is available, "spring" is used by default)., +		 */, +		private String type = "simple";, +, +		private boolean defaultAuth = true;, +, +		public String getType() {, +			return this.type;, +		}, +, +		public void setType(String type) {, +			Assert.hasLength(type, "Auth type must not be empty");, +			this.type = type;, +			this.defaultAuth = false;, +		}, +, +		/**, +		 * Basic validation of applied CRaSH shell configuration., +		 * @param properties the properties to validate, +		 */, +		protected void validateCrshShellConfig(Properties properties) {, +			String finalAuth = properties.getProperty("crash.auth");, +			if (!this.defaultAuth && !this.type.equals(finalAuth)) {, +				logger.warn(String.format(, +						"Shell authentication fell back to method '%s' opposed to ", +								+ "configured method '%s'. Please check your classpath.",, +						finalAuth, this.type));, +			}, +			// Make sure we keep track of final authentication method, +			this.type = finalAuth;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			// In case no shell.auth.type property is provided fall back to Spring Security, +			// In case shell.auth.type is set to spring and roles are configured using, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +	private final Auth auth = new Auth();, +	public Auth getAuth() {, +		getAuth().validateCrshShellConfig(properties);, +	public static class Auth {, +, +		/**, +		 * Authentication type. Auto-detected according to the environment (i.e. if Spring, +		 * Security is available, "spring" is used by default)., +		 */, +		private String type = "simple";, +, +		private boolean defaultAuth = true;, +, +		public String getType() {, +			return this.type;, +		}, +, +		public void setType(String type) {, +			Assert.hasLength(type, "Auth type must not be empty");, +			this.type = type;, +			this.defaultAuth = false;, +		}, +, +		/**, +		 * Basic validation of applied CRaSH shell configuration., +		 * @param properties the properties to validate, +		 */, +		protected void validateCrshShellConfig(Properties properties) {, +			String finalAuth = properties.getProperty("crash.auth");, +			if (!this.defaultAuth && !this.type.equals(finalAuth)) {, +				logger.warn(String.format(, +						"Shell authentication fell back to method '%s' opposed to ", +								+ "configured method '%s'. Please check your classpath.",, +						finalAuth, this.type));, +			}, +			// Make sure we keep track of final authentication method, +			this.type = finalAuth;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "shell.auth.type",, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +			// In case no shell.auth.type property is provided fall back to Spring Security, +			// In case shell.auth.type is set to spring and roles are configured using, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ShellProperties.java, +	private final Auth auth = new Auth();]