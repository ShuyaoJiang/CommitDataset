[+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfigurationTests.java, +import org.springframework.jdbc.core.JdbcTemplate;, +	public void overrideLiquibaseInfrastructure() {, +		this.contextRunner.withUserConfiguration(EmbeddedDataSourceConfiguration.class), +				.withPropertyValues("spring.liquibase.liquibase-schema:public",, +						"spring.liquibase.liquibase-tablespace:infra",, +						"spring.liquibase.database-change-log-table:LIQUI_LOG",, +						"spring.liquibase.database-change-log-lock-table:LIQUI_LOCK"), +				.run((context) -> {, +					SpringLiquibase liquibase = context.getBean(SpringLiquibase.class);, +					assertThat(liquibase.getLiquibaseSchema()).isEqualTo("public");, +					assertThat(liquibase.getLiquibaseTablespace()).isEqualTo("infra");, +					assertThat(liquibase.getDatabaseChangeLogTable()), +							.isEqualTo("LIQUI_LOG");, +					assertThat(liquibase.getDatabaseChangeLogLockTable()), +							.isEqualTo("LIQUI_LOCK");, +					JdbcTemplate jdbcTemplate = new JdbcTemplate(, +							context.getBean(DataSource.class));, +					assertThat(jdbcTemplate.queryForObject(, +							"SELECT COUNT(*) FROM public.LIQUI_LOG", Integer.class)), +									.isEqualTo(1);, +					assertThat(jdbcTemplate.queryForObject(, +							"SELECT COUNT(*) FROM public.LIQUI_LOCK", Integer.class)), +									.isEqualTo(1);, +				});, +	}, +, +	@Test]