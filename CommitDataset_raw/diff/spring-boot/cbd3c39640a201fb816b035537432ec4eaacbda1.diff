[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import java.nio.charset.Charset;, +import org.springframework.http.converter.StringHttpMessageConverter;, + * @author Stephane Nicoll, +	private static final Charset UTF_8 = Charset.forName("UTF-8");, +, +	@Configuration, +	@ConditionalOnClass(StringHttpMessageConverter.class), +	protected static class StringHttpMessageConverterConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public StringHttpMessageConverter stringHttpMessageConverter() {, +			return new StringHttpMessageConverter(UTF_8);, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import java.nio.charset.Charset;, +import org.springframework.http.converter.StringHttpMessageConverter;, + * @author Stephane Nicoll, +	private static final Charset UTF_8 = Charset.forName("UTF-8");, +, +	@Configuration, +	@ConditionalOnClass(StringHttpMessageConverter.class), +	protected static class StringHttpMessageConverterConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public StringHttpMessageConverter stringHttpMessageConverter() {, +			return new StringHttpMessageConverter(UTF_8);, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfigurationTests.java, +import org.springframework.http.converter.StringHttpMessageConverter;, +	private AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +	@Test, +	public void defaultStringConverter() throws Exception {, +		this.context.register(HttpMessageConvertersAutoConfiguration.class);, +		this.context.refresh();, +		assertConverterBeanExists(StringHttpMessageConverter.class,, +				"stringHttpMessageConverter");, +		assertConverterBeanRegisteredWithHttpMessageConverters(StringHttpMessageConverter.class);, +	}, +, +	@Test, +	public void customStringConverter() throws Exception {, +		this.context.register(StringConverterConfig.class,, +				HttpMessageConvertersAutoConfiguration.class);, +		this.context.refresh();, +		assertConverterBeanExists(StringHttpMessageConverter.class,, +				"customStringMessageConverter");, +, +		assertConverterBeanRegisteredWithHttpMessageConverters(StringHttpMessageConverter.class);, +	}, +, +	@Configuration, +	protected static class StringConverterConfig {, +, +		@Bean, +		public StringHttpMessageConverter customStringMessageConverter() {, +			return new StringHttpMessageConverter();, +		}, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfiguration.java, +import java.nio.charset.Charset;, +import org.springframework.http.converter.StringHttpMessageConverter;, + * @author Stephane Nicoll, +	private static final Charset UTF_8 = Charset.forName("UTF-8");, +, +	@Configuration, +	@ConditionalOnClass(StringHttpMessageConverter.class), +	protected static class StringHttpMessageConverterConfiguration {, +, +		@Bean, +		@ConditionalOnMissingBean, +		public StringHttpMessageConverter stringHttpMessageConverter() {, +			return new StringHttpMessageConverter(UTF_8);, +		}, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/HttpMessageConvertersAutoConfigurationTests.java, +import org.springframework.http.converter.StringHttpMessageConverter;, +	private AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext();, +	@Test, +	public void defaultStringConverter() throws Exception {, +		this.context.register(HttpMessageConvertersAutoConfiguration.class);, +		this.context.refresh();, +		assertConverterBeanExists(StringHttpMessageConverter.class,, +				"stringHttpMessageConverter");, +		assertConverterBeanRegisteredWithHttpMessageConverters(StringHttpMessageConverter.class);, +	}, +, +	@Test, +	public void customStringConverter() throws Exception {]