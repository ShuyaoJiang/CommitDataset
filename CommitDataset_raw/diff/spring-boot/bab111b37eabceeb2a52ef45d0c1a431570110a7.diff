[+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java, +			char ch2 = Character.toLowerCase(e2.charAt(i, i2++));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java, +			char ch2 = Character.toLowerCase(e2.charAt(i, i2++));, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/ConfigurationPropertyNameTests.java, +	public void equalsWhenStartsWithOfAdaptedName() {, +		// gh-15152, +		ConfigurationPropertyName n1 = ConfigurationPropertyName, +				.adapt("example.mymap.ALPHA", '.');, +		ConfigurationPropertyName n2 = ConfigurationPropertyName, +				.adapt("example.mymap.ALPHA_BRAVO", '.');, +		assertThat(n1).isNotEqualTo(n2);, +	}, +, +	@Test, +	public void equalsWhenStartsWithOfAdaptedNameOfIllegalChars() {, +		// gh-15152, +		ConfigurationPropertyName n1 = ConfigurationPropertyName, +				.adapt("example.mymap.ALPH!", '.');, +		ConfigurationPropertyName n2 = ConfigurationPropertyName, +				.adapt("example.mymap.ALPHA!BRAVO", '.');, +		assertThat(n1).isNotEqualTo(n2);, +	}, +, +	@Test]