[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.aop.auto", match = "true", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "false", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.aop.auto", match = "true", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "false", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(value = "spring.batch.job.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.aop.auto", match = "true", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "false", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(value = "spring.batch.job.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.elasticsearch.repositories.enabled",, +		match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.aop.auto", match = "true", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "false", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(value = "spring.batch.job.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.elasticsearch.repositories.enabled",, +		match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.jpa.repositories.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.aop.auto", match = "true", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "false", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(value = "spring.batch.job.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.elasticsearch.repositories.enabled",, +		match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.jpa.repositories.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.mongo.repositories.enabled", match="true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.aop.auto", match = "true", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "false", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(value = "spring.batch.job.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.elasticsearch.repositories.enabled",, +		match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.jpa.repositories.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.mongo.repositories.enabled", match="true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value= "spring.data.solr.repositories.enabled", match="true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.aop.auto", match = "true", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "false", defaultMatch = true), +	@ConditionalOnProperty(value = "spring.aop.proxyTargetClass", match = "true", defaultMatch = false), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(value = "spring.batch.job.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.elasticsearch.repositories.enabled",, +		match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/jpa/JpaRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.jpa.repositories.enabled", match = "true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value = "spring.data.mongo.repositories.enabled", match="true", defaultMatch = true), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/solr/SolrRepositoriesAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +@ConditionalOnProperty(value= "spring.data.solr.repositories.enabled", match="true", defaultMatch = true)]