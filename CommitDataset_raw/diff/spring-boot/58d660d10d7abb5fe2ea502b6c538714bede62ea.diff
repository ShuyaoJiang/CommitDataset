[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(prefix = "spring.dao.exceptiontranslation", name = "enabled", matchIfMissing = true), +		PersistenceExceptionTranslationPostProcessor postProcessor = new PersistenceExceptionTranslationPostProcessor();, +		postProcessor.setProxyTargetClass(true);, +		return postProcessor;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(prefix = "spring.dao.exceptiontranslation", name = "enabled", matchIfMissing = true), +		PersistenceExceptionTranslationPostProcessor postProcessor = new PersistenceExceptionTranslationPostProcessor();, +		postProcessor.setProxyTargetClass(true);, +		return postProcessor;, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "spring.dao.exceptiontranslation.enabled",, +    "dataType": "java.lang.Boolean",, +    "description": "Enables the PersistenceExceptionTranslationPostProcessor.",, +    "defaultValue": true, +  },, +  {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(prefix = "spring.dao.exceptiontranslation", name = "enabled", matchIfMissing = true), +		PersistenceExceptionTranslationPostProcessor postProcessor = new PersistenceExceptionTranslationPostProcessor();, +		postProcessor.setProxyTargetClass(true);, +		return postProcessor;, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "spring.dao.exceptiontranslation.enabled",, +    "dataType": "java.lang.Boolean",, +    "description": "Enables the PersistenceExceptionTranslationPostProcessor.",, +    "defaultValue": true, +  },, +  {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfigurationTests.java, +import org.springframework.boot.test.EnvironmentTestUtils;, +import static org.hamcrest.Matchers.empty;, +		assertThat(beans.values().iterator().next().isProxyTargetClass(), equalTo(true));, +	}, +, +	@Test, +	public void exceptionTranslationPostProcessorBeanIsDisabled() {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.dao.exceptiontranslation.enabled=false");, +		this.context.register(PersistenceExceptionTranslationAutoConfiguration.class);, +		this.context.refresh();, +		Map<String, PersistenceExceptionTranslationPostProcessor> beans = this.context, +				.getBeansOfType(PersistenceExceptionTranslationPostProcessor.class);, +		assertThat(beans.entrySet(), empty());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(prefix = "spring.dao.exceptiontranslation", name = "enabled", matchIfMissing = true), +		PersistenceExceptionTranslationPostProcessor postProcessor = new PersistenceExceptionTranslationPostProcessor();, +		postProcessor.setProxyTargetClass(true);, +		return postProcessor;, +++ b/spring-boot-autoconfigure/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "name": "spring.dao.exceptiontranslation.enabled",, +    "dataType": "java.lang.Boolean",, +    "description": "Enables the PersistenceExceptionTranslationPostProcessor.",, +    "defaultValue": true, +  },, +  {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfigurationTests.java, +import org.springframework.boot.test.EnvironmentTestUtils;, +import static org.hamcrest.Matchers.empty;, +		assertThat(beans.values().iterator().next().isProxyTargetClass(), equalTo(true));, +	}, +, +	@Test, +	public void exceptionTranslationPostProcessorBeanIsDisabled() {, +		this.context = new AnnotationConfigApplicationContext();, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.dao.exceptiontranslation.enabled=false");, +		this.context.register(PersistenceExceptionTranslationAutoConfiguration.class);, +		this.context.refresh();, +		Map<String, PersistenceExceptionTranslationPostProcessor> beans = this.context, +				.getBeansOfType(PersistenceExceptionTranslationPostProcessor.class);, +		assertThat(beans.entrySet(), empty());, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# DATASOURCE ({sc-spring-boot-autoconfigure}/dao/PersistenceExceptionTranslationAutoConfiguration.{sc-ext}[PersistenceExceptionTranslationAutoConfiguration], +	spring.dao.exceptiontranslation.enabled=true, +]