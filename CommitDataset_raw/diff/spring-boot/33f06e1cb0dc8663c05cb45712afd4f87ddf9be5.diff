[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.beans.factory.annotation.Value;, +@EnableConfigurationProperties, +	@Configuration, +	protected static class MetricExportPropertiesConfiguration {, +		@Value("spring.metrics.${random.value:0000}.${spring.application.name:application}"), +		private String prefix = "spring.metrics";, +, +		@Bean(name = "spring.metrics.export.CONFIGURATION_PROPERTIES"), +		@ConditionalOnMissingBean, +		public MetricExportProperties metricExportProperties() {, +			MetricExportProperties export = new MetricExportProperties();, +			export.getRedis().setPrefix(prefix);, +			return export;, +		}, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.beans.factory.annotation.Value;, +@EnableConfigurationProperties, +	@Configuration, +	protected static class MetricExportPropertiesConfiguration {, +		@Value("spring.metrics.${random.value:0000}.${spring.application.name:application}"), +		private String prefix = "spring.metrics";, +, +		@Bean(name = "spring.metrics.export.CONFIGURATION_PROPERTIES"), +		@ConditionalOnMissingBean, +		public MetricExportProperties metricExportProperties() {, +			MetricExportProperties export = new MetricExportProperties();, +			export.getRedis().setPrefix(prefix);, +			return export;, +		}, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.beans.factory.annotation.Value;, +@EnableConfigurationProperties, +	@Configuration, +	protected static class MetricExportPropertiesConfiguration {, +		@Value("spring.metrics.${random.value:0000}.${spring.application.name:application}"), +		private String prefix = "spring.metrics";, +, +		@Bean(name = "spring.metrics.export.CONFIGURATION_PROPERTIES"), +		@ConditionalOnMissingBean, +		public MetricExportProperties metricExportProperties() {, +			MetricExportProperties export = new MetricExportProperties();, +			export.getRedis().setPrefix(prefix);, +			return export;, +		}, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricExportProperties.java, +					// (the aggregator strips a further 2 by default)., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfiguration.java, +import org.springframework.beans.factory.annotation.Value;, +@EnableConfigurationProperties, +	@Configuration, +	protected static class MetricExportPropertiesConfiguration {, +		@Value("spring.metrics.${random.value:0000}.${spring.application.name:application}"), +		private String prefix = "spring.metrics";, +, +		@Bean(name = "spring.metrics.export.CONFIGURATION_PROPERTIES"), +		@ConditionalOnMissingBean, +		public MetricExportProperties metricExportProperties() {, +			MetricExportProperties export = new MetricExportProperties();, +			export.getRedis().setPrefix(prefix);, +			return export;, +		}, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/export/MetricExportProperties.java, +					// (the aggregator strips a further 2 by default)., +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/repository/redis/RedisMetricRepository.java]