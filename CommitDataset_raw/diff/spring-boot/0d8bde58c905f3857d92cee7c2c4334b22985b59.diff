[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +import java.util.Collections;, +import java.util.LinkedHashMap;, +import java.util.Map;, +, +import org.springframework.util.ClassUtils;, +	private static final Map<String, String> CLASS_BASED_BROKER_URLS;, +	static {, +		Map<String, String> map = new LinkedHashMap<String, String>();, +		map.put("org.apache.activemq.transport.mqtt.MQTTTransport",, +				"mqtt://localhost:1883");, +		CLASS_BASED_BROKER_URLS = Collections.unmodifiableMap(map);, +	}, +, +		if (this.properties.isAutodetectConnectionUrl()) {, +			for (Map.Entry<String, String> entry : CLASS_BASED_BROKER_URLS.entrySet()) {, +				if (ClassUtils.isPresent(entry.getKey(), null)) {, +					return entry.getValue();, +				}, +			}, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +import java.util.Collections;, +import java.util.LinkedHashMap;, +import java.util.Map;, +, +import org.springframework.util.ClassUtils;, +	private static final Map<String, String> CLASS_BASED_BROKER_URLS;, +	static {, +		Map<String, String> map = new LinkedHashMap<String, String>();, +		map.put("org.apache.activemq.transport.mqtt.MQTTTransport",, +				"mqtt://localhost:1883");, +		CLASS_BASED_BROKER_URLS = Collections.unmodifiableMap(map);, +	}, +, +		if (this.properties.isAutodetectConnectionUrl()) {, +			for (Map.Entry<String, String> entry : CLASS_BASED_BROKER_URLS.entrySet()) {, +				if (ClassUtils.isPresent(entry.getKey(), null)) {, +					return entry.getValue();, +				}, +			}, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties.java, +	private boolean autodetectConnectionUrl = true;, +, +	public boolean isAutodetectConnectionUrl() {, +		return this.autodetectConnectionUrl;, +	}, +, +	public void setAutodetectConnectionUrl(boolean autodetectConnectionUrl) {, +		this.autodetectConnectionUrl = autodetectConnectionUrl;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQConnectionFactoryFactory.java, +import java.util.Collections;, +import java.util.LinkedHashMap;, +import java.util.Map;, +, +import org.springframework.util.ClassUtils;, +	private static final Map<String, String> CLASS_BASED_BROKER_URLS;, +	static {, +		Map<String, String> map = new LinkedHashMap<String, String>();, +		map.put("org.apache.activemq.transport.mqtt.MQTTTransport",, +				"mqtt://localhost:1883");, +		CLASS_BASED_BROKER_URLS = Collections.unmodifiableMap(map);, +	}, +, +		if (this.properties.isAutodetectConnectionUrl()) {, +			for (Map.Entry<String, String> entry : CLASS_BASED_BROKER_URLS.entrySet()) {, +				if (ClassUtils.isPresent(entry.getKey(), null)) {, +					return entry.getValue();, +				}, +			}, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQProperties.java, +	private boolean autodetectConnectionUrl = true;, +, +	public boolean isAutodetectConnectionUrl() {, +		return this.autodetectConnectionUrl;, +	}, +, +	public void setAutodetectConnectionUrl(boolean autodetectConnectionUrl) {, +		this.autodetectConnectionUrl = autodetectConnectionUrl;, +	}, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	spring.activemq.autodetect-connection-url=true # attempt to guess URL based on classpath]