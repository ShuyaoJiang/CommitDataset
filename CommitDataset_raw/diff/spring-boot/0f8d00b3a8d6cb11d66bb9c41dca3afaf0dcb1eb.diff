[+++ b/spring-boot/src/main/java/org/springframework/boot/test/IntegrationTest.java, + * require an application to startup "fully leaded" and listening on its normal ports)., +++ b/spring-boot/src/main/java/org/springframework/boot/test/IntegrationTest.java, + * require an application to startup "fully leaded" and listening on its normal ports)., +++ b/spring-boot/src/main/java/org/springframework/boot/test/SpringApplicationContextLoader.java, + * normally startup using {@link SpringApplication}). Normally never starts an embedded, + * web server, but detects the {@link WebAppConfiguration @WebAppConfiguration} annotation, + * on the test class and only creates a web application context if it is present. Non-web, + * features, like a repository layer, can be tested cleanly by simply <em>not</em> marking, + * the test class <code>@WebAppConfiguration</code>., + * <p>, + * If you <em>want</em> to start a web server, mark the test class as, + * <code>@WebAppConfiguration @IntegrationTest</code>. This is useful for testing HTTP, + * endpoints using {@link RestTemplates} (for instance), especially since you can, + * <code>@Autowired</code> application context components into your test case to see the, + * internal effects of HTTP requests directly.]