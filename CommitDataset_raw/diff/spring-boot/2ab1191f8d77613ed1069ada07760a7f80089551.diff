[+++ b/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/GenericReactiveWebApplicationContext.java, +import java.io.FileNotFoundException;, +import java.io.IOException;, +import java.io.InputStream;, +, +import org.springframework.core.io.AbstractResource;, +import org.springframework.core.io.Resource;, + * @author Brian Clozel, +	private final NonExistentResource nonExistentResource = new NonExistentResource();, +, +	@Override, +	protected Resource getResourceByPath(String path) {, +		// No ServletContext is available, +		if (path.startsWith("/")) {, +			return this.nonExistentResource;, +		}, +		else {, +			return super.getResourceByPath(path);, +		}, +	}, +, +	/**, +	 * Resource implementation that replaces the, +	 * {@link org.springframework.web.context.support.ServletContextResource}, +	 * in a reactive web application., +	 *, +	 * <p>{@link #exists()} always returns null in order to avoid exposing, +	 * the whole classpath in a non-servlet environment., +	 */, +	class NonExistentResource extends AbstractResource {, +, +		@Override, +		public boolean exists() {, +			return false;, +		}, +, +		@Override, +		public Resource createRelative(String relativePath) throws IOException {, +			return this;, +		}, +, +		@Override, +		public String getDescription() {, +			return "NonExistentResource";, +		}, +, +		@Override, +		public InputStream getInputStream() throws IOException {, +			throw new FileNotFoundException(this.getDescription() + " cannot be opened because it does not exist");, +		}, +	}, +++ b/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/GenericReactiveWebApplicationContext.java, +import java.io.FileNotFoundException;, +import java.io.IOException;, +import java.io.InputStream;, +, +import org.springframework.core.io.AbstractResource;, +import org.springframework.core.io.Resource;, + * @author Brian Clozel, +	private final NonExistentResource nonExistentResource = new NonExistentResource();, +, +	@Override, +	protected Resource getResourceByPath(String path) {, +		// No ServletContext is available, +		if (path.startsWith("/")) {, +			return this.nonExistentResource;, +		}, +		else {, +			return super.getResourceByPath(path);, +		}, +	}, +, +	/**, +	 * Resource implementation that replaces the, +	 * {@link org.springframework.web.context.support.ServletContextResource}, +	 * in a reactive web application., +	 *, +	 * <p>{@link #exists()} always returns null in order to avoid exposing, +	 * the whole classpath in a non-servlet environment., +	 */, +	class NonExistentResource extends AbstractResource {, +, +		@Override, +		public boolean exists() {, +			return false;, +		}, +, +		@Override, +		public Resource createRelative(String relativePath) throws IOException {, +			return this;, +		}, +, +		@Override, +		public String getDescription() {, +			return "NonExistentResource";, +		}, +, +		@Override, +		public InputStream getInputStream() throws IOException {, +			throw new FileNotFoundException(this.getDescription() + " cannot be opened because it does not exist");]