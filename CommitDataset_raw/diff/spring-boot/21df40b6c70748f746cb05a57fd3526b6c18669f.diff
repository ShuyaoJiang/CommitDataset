[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * @author Nishant Raut, +				RestTemplateExchangeTags.clientName(request),, +				RestTemplateExchangeTags.outcome(response));, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * @author Nishant Raut, +				RestTemplateExchangeTags.clientName(request),, +				RestTemplateExchangeTags.outcome(response));, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, +import org.springframework.http.HttpStatus;, + * @author Nishant Raut, +	private static final Tag OUTCOME_UNKNOWN = Tag.of("outcome", "UNKNOWN");, +, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_SUCCESS = Tag.of("outcome", "SUCCESS");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +	private static final Tag OUTCOME_CLIENT_ERROR = Tag.of("outcome", "CLIENT_ERROR");, +, +	private static final Tag OUTCOME_SERVER_ERROR = Tag.of("outcome", "SERVER_ERROR");, +, +	/**, +	 * Creates a {@code outcome} {@code Tag} derived from the, +	 * {@link ClientHttpResponse#getStatusCode() status} of the given {@code response}., +	 * @param response the response, +	 * @return the outcome tag, +	 * @since 2.2.0, +	 */, +	public static Tag outcome(ClientHttpResponse response) {, +		if (response != null) {, +			HttpStatus status = extractStatus(response);, +			if (status != null) {, +				if (status.is1xxInformational()) {, +					return OUTCOME_INFORMATIONAL;, +				}, +				if (status.is2xxSuccessful()) {, +					return OUTCOME_SUCCESS;, +				}, +				if (status.is3xxRedirection()) {, +					return OUTCOME_REDIRECTION;, +				}, +				if (status.is4xxClientError()) {, +					return OUTCOME_CLIENT_ERROR;, +				}, +			}, +			return OUTCOME_SERVER_ERROR;, +		}, +		return OUTCOME_UNKNOWN;, +	}, +, +	private static HttpStatus extractStatus(ClientHttpResponse response) {, +, +		try {, +			return response.getStatusCode();, +		}, +		catch (IOException ex) {, +			return null;, +		}, +, +	}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/DefaultRestTemplateExchangeTagsProvider.java, + * @author Nishant Raut, +				RestTemplateExchangeTags.clientName(request),, +				RestTemplateExchangeTags.outcome(response));, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTags.java, +import org.springframework.http.HttpStatus;, + * @author Nishant Raut, +	private static final Tag OUTCOME_UNKNOWN = Tag.of("outcome", "UNKNOWN");, +, +	private static final Tag OUTCOME_INFORMATIONAL = Tag.of("outcome", "INFORMATIONAL");, +, +	private static final Tag OUTCOME_SUCCESS = Tag.of("outcome", "SUCCESS");, +, +	private static final Tag OUTCOME_REDIRECTION = Tag.of("outcome", "REDIRECTION");, +, +	private static final Tag OUTCOME_CLIENT_ERROR = Tag.of("outcome", "CLIENT_ERROR");, +, +	private static final Tag OUTCOME_SERVER_ERROR = Tag.of("outcome", "SERVER_ERROR");, +, +	/**, +	 * Creates a {@code outcome} {@code Tag} derived from the, +	 * {@link ClientHttpResponse#getStatusCode() status} of the given {@code response}., +	 * @param response the response, +	 * @return the outcome tag, +	 * @since 2.2.0, +	 */, +	public static Tag outcome(ClientHttpResponse response) {, +		if (response != null) {, +			HttpStatus status = extractStatus(response);, +			if (status != null) {, +				if (status.is1xxInformational()) {, +					return OUTCOME_INFORMATIONAL;, +				}, +				if (status.is2xxSuccessful()) {, +					return OUTCOME_SUCCESS;, +				}, +				if (status.is3xxRedirection()) {]