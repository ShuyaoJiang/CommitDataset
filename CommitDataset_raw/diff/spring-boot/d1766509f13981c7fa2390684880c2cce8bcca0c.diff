[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		private String redirectUriTemplate;, +		public String getRedirectUriTemplate() {, +			return this.redirectUriTemplate;, +		public void setRedirectUriTemplate(String redirectUriTemplate) {, +			this.redirectUriTemplate = redirectUriTemplate;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		private String redirectUriTemplate;, +		public String getRedirectUriTemplate() {, +			return this.redirectUriTemplate;, +		public void setRedirectUriTemplate(String redirectUriTemplate) {, +			this.redirectUriTemplate = redirectUriTemplate;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +		copyIfNotNull(properties::getRedirectUriTemplate, builder::redirectUriTemplate);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		private String redirectUriTemplate;, +		public String getRedirectUriTemplate() {, +			return this.redirectUriTemplate;, +		public void setRedirectUriTemplate(String redirectUriTemplate) {, +			this.redirectUriTemplate = redirectUriTemplate;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +		copyIfNotNull(properties::getRedirectUriTemplate, builder::redirectUriTemplate);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java, + * @author Madhura Bhave, +		registration.setRedirectUriTemplate("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo(, +				"{baseUrl}/login/oauth2/code/{registrationId}");, +		registration.setRedirectUriTemplate("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("{baseUrl}/login/oauth2/code/{registrationId}");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		private String redirectUriTemplate;, +		public String getRedirectUriTemplate() {, +			return this.redirectUriTemplate;, +		public void setRedirectUriTemplate(String redirectUriTemplate) {, +			this.redirectUriTemplate = redirectUriTemplate;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +		copyIfNotNull(properties::getRedirectUriTemplate, builder::redirectUriTemplate);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java, + * @author Madhura Bhave, +		registration.setRedirectUriTemplate("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo(, +				"{baseUrl}/login/oauth2/code/{registrationId}");, +		registration.setRedirectUriTemplate("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("{baseUrl}/login/oauth2/code/{registrationId}");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2WebSecurityConfigurationTests.java, +		result = result && ObjectUtils.nullSafeEquals(reg1.getRedirectUriTemplate(),, +				reg2.getRedirectUriTemplate());, +					.redirectUriTemplate("http://redirect-uri.com"), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientProperties.java, +		private String redirectUriTemplate;, +		public String getRedirectUriTemplate() {, +			return this.redirectUriTemplate;, +		public void setRedirectUriTemplate(String redirectUriTemplate) {, +			this.redirectUriTemplate = redirectUriTemplate;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapter.java, +		copyIfNotNull(properties::getRedirectUriTemplate, builder::redirectUriTemplate);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java, + * @author Madhura Bhave, +		registration.setRedirectUriTemplate("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo(, +				"{baseUrl}/login/oauth2/code/{registrationId}");, +		registration.setRedirectUriTemplate("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("http://example.com/redirect");, +		assertThat(adapted.getRedirectUriTemplate()).isEqualTo("{baseUrl}/login/oauth2/code/{registrationId}");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2WebSecurityConfigurationTests.java, +		result = result && ObjectUtils.nullSafeEquals(reg1.getRedirectUriTemplate(),, +				reg2.getRedirectUriTemplate());, +					.redirectUriTemplate("http://redirect-uri.com"), +++ b/spring-boot-project/spring-boot-dependencies/pom.xml, +		<spring-security.version>5.0.0.BUILD-SNAPSHOT</spring-security.version>]