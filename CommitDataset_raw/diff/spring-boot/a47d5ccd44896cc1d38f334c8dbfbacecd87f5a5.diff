[+++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	private static final String DEFAULT_SEARCH_LOCATIONS = "file:./config/,file:./,", +			+ "classpath:/config/,classpath:/";, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	private static final String DEFAULT_SEARCH_LOCATIONS = "file:./config/,file:./,", +			+ "classpath:/config/,classpath:/";, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +	public void moreSpecificLocationTakesPrecedenceOverRoot() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.environment,, +				"spring.config.name:specific");, +		this.initializer.onApplicationEvent(this.event);, +		String property = this.environment.getProperty("my.property");, +		assertThat(property, equalTo("specific"));, +	}, +, +	@Test, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	private static final String DEFAULT_SEARCH_LOCATIONS = "file:./config/,file:./,", +			+ "classpath:/config/,classpath:/";, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +	public void moreSpecificLocationTakesPrecedenceOverRoot() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.environment,, +				"spring.config.name:specific");, +		this.initializer.onApplicationEvent(this.event);, +		String property = this.environment.getProperty("my.property");, +		assertThat(property, equalTo("specific"));, +	}, +, +	@Test, +++ b/spring-boot/src/test/resources/config/specific.properties, +my.property=specific, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	private static final String DEFAULT_SEARCH_LOCATIONS = "file:./config/,file:./,", +			+ "classpath:/config/,classpath:/";, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +	public void moreSpecificLocationTakesPrecedenceOverRoot() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.environment,, +				"spring.config.name:specific");, +		this.initializer.onApplicationEvent(this.event);, +		String property = this.environment.getProperty("my.property");, +		assertThat(property, equalTo("specific"));, +	}, +, +	@Test, +++ b/spring-boot/src/test/resources/config/specific.properties, +my.property=specific, +++ b/spring-boot/src/test/resources/specific.properties, +my.property=root]