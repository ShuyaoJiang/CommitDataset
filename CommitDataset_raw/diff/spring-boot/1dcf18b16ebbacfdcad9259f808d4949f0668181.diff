[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getSerializationInclusion() != null) {, +				builder.serializationInclusion(this.jacksonProperties, +						.getSerializationInclusion());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getSerializationInclusion() != null) {, +				builder.serializationInclusion(this.jacksonProperties, +						.getSerializationInclusion());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +import com.fasterxml.jackson.annotation.JsonInclude;, +	 * "date-format" will be used as a fallback if it is configured with a format string., +	/**, +	 * Controls the inclusion of properties during serialization. Configured with one of, +	 * the values in Jackson's JsonInclude.Include enumeration., +	 */, +	private JsonInclude.Include serializationInclusion;, +, +	public JsonInclude.Include getSerializationInclusion() {, +		return this.serializationInclusion;, +	}, +, +	public void setSerializationInclusion(JsonInclude.Include serializationInclusion) {, +		this.serializationInclusion = serializationInclusion;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getSerializationInclusion() != null) {, +				builder.serializationInclusion(this.jacksonProperties, +						.getSerializationInclusion());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +import com.fasterxml.jackson.annotation.JsonInclude;, +	 * "date-format" will be used as a fallback if it is configured with a format string., +	/**, +	 * Controls the inclusion of properties during serialization. Configured with one of, +	 * the values in Jackson's JsonInclude.Include enumeration., +	 */, +	private JsonInclude.Include serializationInclusion;, +, +	public JsonInclude.Include getSerializationInclusion() {, +		return this.serializationInclusion;, +	}, +, +	public void setSerializationInclusion(JsonInclude.Include serializationInclusion) {, +		this.serializationInclusion = serializationInclusion;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +import com.fasterxml.jackson.annotation.JsonInclude;, +	@Test, +	public void defaultSerializationInclusion() {, +		this.context.register(JacksonAutoConfiguration.class);, +		this.context.refresh();, +		ObjectMapper objectMapper = this.context.getBean(, +				Jackson2ObjectMapperBuilder.class).build();, +		assertThat(objectMapper.getSerializationConfig().getSerializationInclusion(),, +				is(JsonInclude.Include.ALWAYS));, +	}, +, +	@Test, +	public void customSerializationInclusion() {, +		this.context.register(JacksonAutoConfiguration.class);, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"spring.jackson.serialization-inclusion:non_null");, +		this.context.refresh();, +		ObjectMapper objectMapper = this.context.getBean(, +				Jackson2ObjectMapperBuilder.class).build();, +		assertThat(objectMapper.getSerializationConfig().getSerializationInclusion(),, +				is(JsonInclude.Include.NON_NULL));, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +			if (this.jacksonProperties.getSerializationInclusion() != null) {, +				builder.serializationInclusion(this.jacksonProperties, +						.getSerializationInclusion());, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonProperties.java, +import com.fasterxml.jackson.annotation.JsonInclude;, +	 * "date-format" will be used as a fallback if it is configured with a format string., +	/**, +	 * Controls the inclusion of properties during serialization. Configured with one of, +	 * the values in Jackson's JsonInclude.Include enumeration., +	 */, +	private JsonInclude.Include serializationInclusion;, +, +	public JsonInclude.Include getSerializationInclusion() {, +		return this.serializationInclusion;, +	}, +, +	public void setSerializationInclusion(JsonInclude.Include serializationInclusion) {, +		this.serializationInclusion = serializationInclusion;, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfigurationTests.java, +import com.fasterxml.jackson.annotation.JsonInclude;, +	@Test, +	public void defaultSerializationInclusion() {, +		this.context.register(JacksonAutoConfiguration.class);]