[+++ b/spring-boot-dependencies/pom.xml, +		<spring.version>4.1.5.BUILD-SNAPSHOT</spring.version>, +++ b/spring-boot-dependencies/pom.xml, +		<spring.version>4.1.5.BUILD-SNAPSHOT</spring.version>, +++ b/spring-boot/src/main/java/org/springframework/boot/env/YamlPropertySourceLoader.java, + * Copyright 2012-2015 the original author or authors., +import java.util.regex.Pattern;, +import org.yaml.snakeyaml.DumperOptions;, +import org.yaml.snakeyaml.Yaml;, +import org.yaml.snakeyaml.nodes.Tag;, +import org.yaml.snakeyaml.representer.Representer;, +import org.yaml.snakeyaml.resolver.Resolver;, + * @author Andy Wilkinson, +		@Override, +		protected Yaml createYaml() {, +			return new Yaml(new StrictMapAppenderConstructor(), new Representer(),, +					new DumperOptions(), new Resolver() {, +						@Override, +						public void addImplicitResolver(Tag tag, Pattern regexp,, +								String first) {, +							if (tag == Tag.TIMESTAMP) {, +								return;, +							}, +							super.addImplicitResolver(tag, regexp, first);, +						}, +					});, +		}, +, +++ b/spring-boot-dependencies/pom.xml, +		<spring.version>4.1.5.BUILD-SNAPSHOT</spring.version>, +++ b/spring-boot/src/main/java/org/springframework/boot/env/YamlPropertySourceLoader.java, + * Copyright 2012-2015 the original author or authors., +import java.util.regex.Pattern;, +import org.yaml.snakeyaml.DumperOptions;, +import org.yaml.snakeyaml.Yaml;, +import org.yaml.snakeyaml.nodes.Tag;, +import org.yaml.snakeyaml.representer.Representer;, +import org.yaml.snakeyaml.resolver.Resolver;, + * @author Andy Wilkinson, +		@Override, +		protected Yaml createYaml() {, +			return new Yaml(new StrictMapAppenderConstructor(), new Representer(),, +					new DumperOptions(), new Resolver() {, +						@Override, +						public void addImplicitResolver(Tag tag, Pattern regexp,, +								String first) {, +							if (tag == Tag.TIMESTAMP) {, +								return;, +							}, +							super.addImplicitResolver(tag, regexp, first);, +						}, +					});, +		}, +, +++ b/spring-boot/src/test/java/org/springframework/boot/env/YamlPropertySourceLoaderTests.java, + * Copyright 2012-2015 the original author or authors., + * @author Andy Wilkinson, +	@Test, +	public void timestampLikeItemsDoNotBecomeDates() throws Exception {, +		ByteArrayResource resource = new ByteArrayResource("foo: 2015-01-28".getBytes());, +		PropertySource<?> source = this.loader.load("resource", resource, null);, +		assertNotNull(source);, +		assertEquals("2015-01-28", source.getProperty("foo"));, +	}, +]