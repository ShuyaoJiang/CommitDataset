[+++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/test/spock/SpockTestRestTemplateExample.java, +					: new TestRestTemplate(builder);, +++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/test/spock/SpockTestRestTemplateExample.java, +					: new TestRestTemplate(builder);, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +		this(restTemplateBuilder, null, null);, +		this(new RestTemplateBuilder(), username, password, httpClientOptions);, +	/**, +	 * Create a new {@link TestRestTemplate} instance with the specified credentials., +	 * @param restTemplateBuilder builder used to configure underlying, +	 * {@link RestTemplate}, +	 * @param username the username to use (or {@code null}), +	 * @param password the password (or {@code null}), +	 * @param httpClientOptions client options to use if the Apache HTTP Client is used, +	 * @since 2.0.0, +	 */, +	public TestRestTemplate(RestTemplateBuilder restTemplateBuilder, String username, String password,, +			HttpClientOption... httpClientOptions) {, +		this(buildRestTemplate(restTemplateBuilder), username, password, httpClientOptions);, +	private TestRestTemplate(RestTemplate restTemplate, String username, String password,, +++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/test/spock/SpockTestRestTemplateExample.java, +					: new TestRestTemplate(builder);, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +		this(restTemplateBuilder, null, null);, +		this(new RestTemplateBuilder(), username, password, httpClientOptions);, +	/**, +	 * Create a new {@link TestRestTemplate} instance with the specified credentials., +	 * @param restTemplateBuilder builder used to configure underlying, +	 * {@link RestTemplate}, +	 * @param username the username to use (or {@code null}), +	 * @param password the password (or {@code null}), +	 * @param httpClientOptions client options to use if the Apache HTTP Client is used, +	 * @since 2.0.0, +	 */, +	public TestRestTemplate(RestTemplateBuilder restTemplateBuilder, String username, String password,, +			HttpClientOption... httpClientOptions) {, +		this(buildRestTemplate(restTemplateBuilder), username, password, httpClientOptions);, +	private TestRestTemplate(RestTemplate restTemplate, String username, String password,, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplateTestContextCustomizer.java, +			TestRestTemplate template = new TestRestTemplate(builder, null, null,, +++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/test/spock/SpockTestRestTemplateExample.java, +					: new TestRestTemplate(builder);, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +		this(restTemplateBuilder, null, null);, +		this(new RestTemplateBuilder(), username, password, httpClientOptions);, +	/**, +	 * Create a new {@link TestRestTemplate} instance with the specified credentials., +	 * @param restTemplateBuilder builder used to configure underlying, +	 * {@link RestTemplate}, +	 * @param username the username to use (or {@code null}), +	 * @param password the password (or {@code null}), +	 * @param httpClientOptions client options to use if the Apache HTTP Client is used, +	 * @since 2.0.0, +	 */, +	public TestRestTemplate(RestTemplateBuilder restTemplateBuilder, String username, String password,, +			HttpClientOption... httpClientOptions) {, +		this(buildRestTemplate(restTemplateBuilder), username, password, httpClientOptions);, +	private TestRestTemplate(RestTemplate restTemplate, String username, String password,, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplateTestContextCustomizer.java, +			TestRestTemplate template = new TestRestTemplate(builder, null, null,, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/TestRestTemplateTests.java, +		RestTemplateBuilder delegate = new RestTemplateBuilder().rootUri(rootUri);, +		RestTemplateBuilder builder = mock(RestTemplateBuilder.class);, +		given(builder.build()).willReturn(delegate);, +		final TestRestTemplate restTemplate = new TestRestTemplate(builder);, +		TestRestTemplate template = new TestRestTemplate();, +		template.getRestTemplate().setRequestFactory(requestFactory);, +++ b/spring-boot-project/spring-boot-docs/src/main/java/org/springframework/boot/docs/test/spock/SpockTestRestTemplateExample.java, +					: new TestRestTemplate(builder);, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +		this(restTemplateBuilder, null, null);, +		this(new RestTemplateBuilder(), username, password, httpClientOptions);, +	/**, +	 * Create a new {@link TestRestTemplate} instance with the specified credentials., +	 * @param restTemplateBuilder builder used to configure underlying, +	 * {@link RestTemplate}, +	 * @param username the username to use (or {@code null}), +	 * @param password the password (or {@code null}), +	 * @param httpClientOptions client options to use if the Apache HTTP Client is used, +	 * @since 2.0.0, +	 */, +	public TestRestTemplate(RestTemplateBuilder restTemplateBuilder, String username, String password,, +			HttpClientOption... httpClientOptions) {, +		this(buildRestTemplate(restTemplateBuilder), username, password, httpClientOptions);, +	private TestRestTemplate(RestTemplate restTemplate, String username, String password,, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplateTestContextCustomizer.java, +			TestRestTemplate template = new TestRestTemplate(builder, null, null,, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/TestRestTemplateTests.java, +		RestTemplateBuilder delegate = new RestTemplateBuilder().rootUri(rootUri);, +		RestTemplateBuilder builder = mock(RestTemplateBuilder.class);, +		given(builder.build()).willReturn(delegate);, +		final TestRestTemplate restTemplate = new TestRestTemplate(builder);, +		TestRestTemplate template = new TestRestTemplate();, +		template.getRestTemplate().setRequestFactory(requestFactory);, +++ b/spring-boot-samples/spring-boot-sample-actuator-custom-security/src/test/java/sample/actuator/customsecurity/CorsSampleActuatorApplicationTests.java, +import org.springframework.boot.web.client.RestTemplateBuilder;, +		RestTemplateBuilder builder = new RestTemplateBuilder();, +		builder = builder.uriTemplateHandler(handler);, +		this.testRestTemplate = new TestRestTemplate(builder);]