[+++ b/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/MavenSettings.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.cli.compiler;, +, +import java.io.File;, +import java.io.PrintWriter;, +import java.io.StringWriter;, +import java.util.ArrayList;, +import java.util.Collections;, +import java.util.List;, +import java.util.Map;, +, +import org.apache.maven.model.ActivationFile;, +import org.apache.maven.model.ActivationOS;, +import org.apache.maven.model.ActivationProperty;, +import org.apache.maven.model.building.ModelProblemCollector;, +import org.apache.maven.model.building.ModelProblemCollectorRequest;, +import org.apache.maven.model.profile.DefaultProfileSelector;, +import org.apache.maven.model.profile.ProfileActivationContext;, +import org.apache.maven.model.profile.activation.FileProfileActivator;, +import org.apache.maven.model.profile.activation.JdkVersionProfileActivator;, +import org.apache.maven.model.profile.activation.OperatingSystemProfileActivator;, +import org.apache.maven.model.profile.activation.PropertyProfileActivator;, +import org.apache.maven.settings.Activation;, +import org.apache.maven.settings.Mirror;, +import org.apache.maven.settings.Profile;, +import org.apache.maven.settings.Proxy;, +import org.apache.maven.settings.Server;, +import org.apache.maven.settings.Settings;, +import org.apache.maven.settings.crypto.SettingsDecryptionResult;, +import org.eclipse.aether.repository.Authentication;, +import org.eclipse.aether.repository.AuthenticationSelector;, +import org.eclipse.aether.repository.MirrorSelector;, +import org.eclipse.aether.repository.ProxySelector;, +import org.eclipse.aether.util.repository.AuthenticationBuilder;, +import org.eclipse.aether.util.repository.ConservativeAuthenticationSelector;, +import org.eclipse.aether.util.repository.DefaultAuthenticationSelector;, +import org.eclipse.aether.util.repository.DefaultMirrorSelector;, +import org.eclipse.aether.util.repository.DefaultProxySelector;, +, +/**, + * An encapsulation of settings read from a user's Maven settings.xml., + *, + * @author Andy Wilkinson, + * @since 1.3.0, + * @see MavenSettingsReader, + */, +public class MavenSettings {, +, +	private final boolean offline;, +, +	private final MirrorSelector mirrorSelector;, +, +	private final AuthenticationSelector authenticationSelector;, +, +	private final ProxySelector proxySelector;, +, +	private final String localRepository;, +, +	private final List<Profile> activeProfiles;, +, +	/**, +	 * @param settings, +	 * @param decryptedSettings, +	 */, +	public MavenSettings(Settings settings, SettingsDecryptionResult decryptedSettings) {, +		this.offline = settings.isOffline();, +		this.mirrorSelector = createMirrorSelector(settings);, +		this.authenticationSelector = createAuthenticationSelector(decryptedSettings);, +		this.proxySelector = createProxySelector(decryptedSettings);, +		this.localRepository = settings.getLocalRepository();, +		this.activeProfiles = determineActiveProfiles(settings);, +	}, +, +	private MirrorSelector createMirrorSelector(Settings settings) {, +		DefaultMirrorSelector selector = new DefaultMirrorSelector();, +		for (Mirror mirror : settings.getMirrors()) {, +			selector.add(mirror.getId(), mirror.getUrl(), mirror.getLayout(), false,, +					mirror.getMirrorOf(), mirror.getMirrorOfLayouts());, +		}, +		return selector;, +	}, +, +	private AuthenticationSelector createAuthenticationSelector(, +			SettingsDecryptionResult decryptedSettings) {]