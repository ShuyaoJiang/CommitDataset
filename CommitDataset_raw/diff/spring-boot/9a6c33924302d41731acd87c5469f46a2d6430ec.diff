[+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.junit.Before;, +import org.testcontainers.containers.GenericContainer;, +import org.springframework.boot.testsupport.testcontainers.TestContainers;, +	public static DockerTestContainer<GenericContainer<?>> cassandra = new DockerTestContainer<>(, +			TestContainers::cassandra);, +	@Before, +	public void setUp() {, +		this.context = new AnnotationConfigApplicationContext();, +		TestPropertyValues, +				.of("spring.data.cassandra.port=" + cassandra.getMappedPort(9042)), +				.applyTo(this.context.getEnvironment());, +	}, +, +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort(9042)), +				.addContactPoint("localhost").build();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.junit.Before;, +import org.testcontainers.containers.GenericContainer;, +import org.springframework.boot.testsupport.testcontainers.TestContainers;, +	public static DockerTestContainer<GenericContainer<?>> cassandra = new DockerTestContainer<>(, +			TestContainers::cassandra);, +	@Before, +	public void setUp() {, +		this.context = new AnnotationConfigApplicationContext();, +		TestPropertyValues, +				.of("spring.data.cassandra.port=" + cassandra.getMappedPort(9042)), +				.applyTo(this.context.getEnvironment());, +	}, +, +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort(9042)), +				.addContactPoint("localhost").build();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.junit.Before;, +import org.springframework.boot.test.util.TestPropertyValues;, +			TestContainers::redis);, +	@Before, +	public void setUp() {, +		TestPropertyValues, +				.of("spring.redis.port=" + redis.getMappedPort(6379)), +				.applyTo(this.context.getEnvironment());, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.junit.Before;, +import org.testcontainers.containers.GenericContainer;, +import org.springframework.boot.testsupport.testcontainers.TestContainers;, +	public static DockerTestContainer<GenericContainer<?>> cassandra = new DockerTestContainer<>(, +			TestContainers::cassandra);, +	@Before, +	public void setUp() {, +		this.context = new AnnotationConfigApplicationContext();, +		TestPropertyValues, +				.of("spring.data.cassandra.port=" + cassandra.getMappedPort(9042)), +				.applyTo(this.context.getEnvironment());, +	}, +, +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort(9042)), +				.addContactPoint("localhost").build();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.junit.Before;, +import org.springframework.boot.test.util.TestPropertyValues;, +			TestContainers::redis);, +	@Before, +	public void setUp() {, +		TestPropertyValues, +				.of("spring.redis.port=" + redis.getMappedPort(6379)), +				.applyTo(this.context.getEnvironment());, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/ReactiveSessionAutoConfigurationRedisTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfigurationIntegrationTests.java, +import org.junit.Before;, +import org.testcontainers.containers.GenericContainer;, +import org.springframework.boot.testsupport.testcontainers.TestContainers;, +	public static DockerTestContainer<GenericContainer<?>> cassandra = new DockerTestContainer<>(, +			TestContainers::cassandra);, +	@Before, +	public void setUp() {, +		this.context = new AnnotationConfigApplicationContext();, +		TestPropertyValues, +				.of("spring.data.cassandra.port=" + cassandra.getMappedPort(9042)), +				.applyTo(this.context.getEnvironment());, +	}, +, +		Cluster cluster = Cluster.builder().withPort(cassandra.getMappedPort(9042)), +				.addContactPoint("localhost").build();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfigurationTests.java, +import org.junit.Before;, +import org.springframework.boot.test.util.TestPropertyValues;, +			TestContainers::redis);, +	@Before, +	public void setUp() {, +		TestPropertyValues, +				.of("spring.redis.port=" + redis.getMappedPort(6379)), +				.applyTo(this.context.getEnvironment());, +	}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/ReactiveSessionAutoConfigurationRedisTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationRedisTests.java]