[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/GaugeWriter.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/GaugeWriter.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/MetricWriter.java, + * @see GaugeWriter, + * @see CounterWriter, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/GaugeWriter.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/MetricWriter.java, + * @see GaugeWriter, + * @see CounterWriter, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +			onAuthenticationSuccessEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationSuccessEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/GaugeWriter.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/MetricWriter.java, + * @see GaugeWriter, + * @see CounterWriter, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +			onAuthenticationSuccessEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationSuccessEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/GaugeWriter.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/MetricWriter.java, + * @see GaugeWriter, + * @see CounterWriter, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +			onAuthenticationSuccessEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationSuccessEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties.java, + * @since 1.3.0, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration.java, +			builder.autoApprove(, +					this.details.getAutoApproveScopes().toArray(new String[0]));, +			builder.accessTokenValiditySeconds(, +					this.details.getAccessTokenValiditySeconds());, +			builder.refreshTokenValiditySeconds(, +					this.details.getRefreshTokenValiditySeconds());, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/GaugeWriter.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/MetricWriter.java, + * @see GaugeWriter, + * @see CounterWriter, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +			onAuthenticationSuccessEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationSuccessEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties.java, + * @since 1.3.0, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/authserver/OAuth2AuthorizationServerConfiguration.java, +			builder.autoApprove(, +					this.details.getAutoApproveScopes().toArray(new String[0]));, +			builder.accessTokenValiditySeconds(, +					this.details.getAccessTokenValiditySeconds());, +			builder.refreshTokenValiditySeconds(, +					this.details.getRefreshTokenValiditySeconds());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerConfiguration.java, +			if (hasOAuthClientId(environment)) {, +		private boolean hasOAuthClientId(Environment environment) {, +			RelaxedPropertyResolver resolver = new RelaxedPropertyResolver(environment,, +					"security.oauth2.client.");, +			return StringUtils.hasLength(resolver.getProperty("client-id", ""));, +		}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/CounterWriter.java, + * @since 1.3.0, +	 * implementations may not be able to fulfill the contract, in which case they should, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/GaugeWriter.java, + * @since 1.3.0, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/writer/MetricWriter.java, + * @see GaugeWriter, + * @see CounterWriter, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/security/AuthenticationAuditListener.java, +			onAuthenticationSuccessEvent((AuthenticationSuccessEvent) event);, +	private void onAuthenticationSuccessEvent(AuthenticationSuccessEvent event) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/oauth2/authserver/AuthorizationServerProperties.java]