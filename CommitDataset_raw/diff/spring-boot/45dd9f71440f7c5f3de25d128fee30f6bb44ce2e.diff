[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpointTests.java, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(, +				get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000"), +				.andExpect(status().isOk()).andExpect(header().string("Content-Type",, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isNotFound());, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T13:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(get("/application/auditevents").param("principal", "user"), +				.param("after", "2016-11-01T10:00:00+0000")), +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpointTests.java, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(, +				get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000"), +				.andExpect(status().isOk()).andExpect(header().string("Content-Type",, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isNotFound());, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T13:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(get("/application/auditevents").param("principal", "user"), +				.param("after", "2016-11-01T10:00:00+0000")), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraDataAutoConfiguration.java, +			ReactiveSession reactiveCassandraSession, CassandraConverter converter) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpointTests.java, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(, +				get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000"), +				.andExpect(status().isOk()).andExpect(header().string("Content-Type",, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isNotFound());, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T13:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(get("/application/auditevents").param("principal", "user"), +				.param("after", "2016-11-01T10:00:00+0000")), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraDataAutoConfiguration.java, +			ReactiveSession reactiveCassandraSession, CassandraConverter converter) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraRepositoriesAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Spring Data's Cassandra Reactive, + * Repositories., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpointTests.java, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(, +				get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000"), +				.andExpect(status().isOk()).andExpect(header().string("Content-Type",, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isNotFound());, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T13:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(get("/application/auditevents").param("principal", "user"), +				.param("after", "2016-11-01T10:00:00+0000")), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraDataAutoConfiguration.java, +			ReactiveSession reactiveCassandraSession, CassandraConverter converter) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraRepositoriesAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Spring Data's Cassandra Reactive, + * Repositories., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +	 * Include the "exception" attribute., +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpointTests.java, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(, +				get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000"), +				.andExpect(status().isOk()).andExpect(header().string("Content-Type",, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isNotFound());, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T13:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(get("/application/auditevents").param("principal", "user"), +				.param("after", "2016-11-01T10:00:00+0000")), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraDataAutoConfiguration.java, +			ReactiveSession reactiveCassandraSession, CassandraConverter converter) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraRepositoriesAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Spring Data's Cassandra Reactive, + * Repositories., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java, +	 * Include the "exception" attribute., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/AuditEventsMvcEndpointTests.java, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(, +				get("/application/auditevents").param("after", "2016-11-01T10:00:00+0000"), +				.andExpect(status().isOk()).andExpect(header().string("Content-Type",, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T10:00:00+0000")).andExpect(status().isNotFound());, +		this.mvc.perform(get("/application/auditevents").param("after",, +				"2016-11-01T13:00:00+0000")).andExpect(status().isOk()), +		this.mvc.perform(get("/application/auditevents").param("principal", "user"), +				.param("after", "2016-11-01T10:00:00+0000")), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraDataAutoConfiguration.java, +			ReactiveSession reactiveCassandraSession, CassandraConverter converter) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/cassandra/ReactiveCassandraRepositoriesAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Spring Data's Cassandra Reactive, + * Repositories., +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ErrorProperties.java]