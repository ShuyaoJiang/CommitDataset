[+++ b/spring-boot-dependencies/pom.xml, +		<maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>, +++ b/spring-boot-dependencies/pom.xml, +		<maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/HateoasObjenesisCacheDisabler.java, +import org.springframework.beans.factory.InitializingBean;, +class HateoasObjenesisCacheDisabler implements InitializingBean {, +	@Override, +	public void afterPropertiesSet() {, +		disableCaching();, +	}, +, +	private void disableCaching() {, +	private void doDisableCaching() {, +++ b/spring-boot-dependencies/pom.xml, +		<maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/HateoasObjenesisCacheDisabler.java, +import org.springframework.beans.factory.InitializingBean;, +class HateoasObjenesisCacheDisabler implements InitializingBean {, +	@Override, +	public void afterPropertiesSet() {, +		disableCaching();, +	}, +, +	private void disableCaching() {, +	private void doDisableCaching() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/OptionalLiveReloadServer.java, + * Copyright 2012-2017 the original author or authors., +import org.springframework.beans.factory.InitializingBean;, +public class OptionalLiveReloadServer implements InitializingBean {, +	@Override, +	public void afterPropertiesSet() throws Exception {, +		startServer();, +	}, +, +	void startServer() throws Exception {, +++ b/spring-boot-dependencies/pom.xml, +		<maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/HateoasObjenesisCacheDisabler.java, +import org.springframework.beans.factory.InitializingBean;, +class HateoasObjenesisCacheDisabler implements InitializingBean {, +	@Override, +	public void afterPropertiesSet() {, +		disableCaching();, +	}, +, +	private void disableCaching() {, +	private void doDisableCaching() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/OptionalLiveReloadServer.java, + * Copyright 2012-2017 the original author or authors., +import org.springframework.beans.factory.InitializingBean;, +public class OptionalLiveReloadServer implements InitializingBean {, +	@Override, +	public void afterPropertiesSet() throws Exception {, +		startServer();, +	}, +, +	void startServer() throws Exception {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/remote/client/RemoteClientConfiguration.java, +import org.springframework.beans.factory.InitializingBean;, +public class RemoteClientConfiguration implements InitializingBean {, +	public void afterPropertiesSet() {, +		logWarnings();, +	}, +, +++ b/spring-boot-dependencies/pom.xml, +		<maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/HateoasObjenesisCacheDisabler.java, +import org.springframework.beans.factory.InitializingBean;, +class HateoasObjenesisCacheDisabler implements InitializingBean {, +	@Override, +	public void afterPropertiesSet() {, +		disableCaching();, +	}, +, +	private void disableCaching() {, +	private void doDisableCaching() {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/OptionalLiveReloadServer.java, + * Copyright 2012-2017 the original author or authors., +import org.springframework.beans.factory.InitializingBean;, +public class OptionalLiveReloadServer implements InitializingBean {, +	@Override, +	public void afterPropertiesSet() throws Exception {, +		startServer();, +	}, +, +	void startServer() throws Exception {, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/remote/client/RemoteClientConfiguration.java, +import org.springframework.beans.factory.InitializingBean;, +public class RemoteClientConfiguration implements InitializingBean {, +	public void afterPropertiesSet() {, +		logWarnings();, +	}, +, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/autoconfigure/HateoasObjenesisCacheDisablerTests.java, +		new HateoasObjenesisCacheDisabler().afterPropertiesSet();]