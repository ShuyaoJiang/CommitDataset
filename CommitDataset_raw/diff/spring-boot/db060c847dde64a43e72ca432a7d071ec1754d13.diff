[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(prefix = "spring.quartz", name = "job-store-type", havingValue = "jdbc"), +		public static InitializerSchedulerDependencyPostProcessor initializerSchedulerDependencyPostProcessor() {, +			return new InitializerSchedulerDependencyPostProcessor();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public QuartzDatabaseInitializer quartzDatabaseInitializer(DataSource dataSource,, +				ResourceLoader resourceLoader, QuartzProperties properties) {, +			return new QuartzDatabaseInitializer(dataSource, resourceLoader, properties);, +		}, +, +		@Bean, +		public SchedulerFactoryBeanCustomizer dataSourceCustomizer(DataSource dataSource,, +				PlatformTransactionManager txManager = transactionManager.getIfUnique();, +		private static class InitializerSchedulerDependencyPostProcessor, +				extends SchedulerDependsOnPostProcessor {, +, +			InitializerSchedulerDependencyPostProcessor() {, +				super("quartzDatabaseInitializer");, +			}, +, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(prefix = "spring.quartz", name = "job-store-type", havingValue = "jdbc"), +		public static InitializerSchedulerDependencyPostProcessor initializerSchedulerDependencyPostProcessor() {, +			return new InitializerSchedulerDependencyPostProcessor();, +		}, +, +		@Bean, +		@ConditionalOnMissingBean, +		public QuartzDatabaseInitializer quartzDatabaseInitializer(DataSource dataSource,, +				ResourceLoader resourceLoader, QuartzProperties properties) {, +			return new QuartzDatabaseInitializer(dataSource, resourceLoader, properties);, +		}, +, +		@Bean, +		public SchedulerFactoryBeanCustomizer dataSourceCustomizer(DataSource dataSource,, +				PlatformTransactionManager txManager = transactionManager.getIfUnique();, +		private static class InitializerSchedulerDependencyPostProcessor, +				extends SchedulerDependsOnPostProcessor {, +, +			InitializerSchedulerDependencyPostProcessor() {, +				super("quartzDatabaseInitializer");, +			}, +, +		}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/SchedulerDependsOnPostProcessor.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.quartz;, +, +import org.quartz.Scheduler;, +, +import org.springframework.beans.factory.config.BeanDefinition;, +import org.springframework.beans.factory.config.BeanFactoryPostProcessor;, +import org.springframework.boot.autoconfigure.AbstractDependsOnBeanFactoryPostProcessor;, +import org.springframework.scheduling.quartz.SchedulerFactoryBean;, +, +/**, + * {@link BeanFactoryPostProcessor} that can be used to dynamically declare that all, + * {@link Scheduler} beans should "depend on" one or more specific beans., + *, + * @author Vedran Pavic, + * @since 2.0.0, + * @see BeanDefinition#setDependsOn(String[]), + */, +public class SchedulerDependsOnPostProcessor, +		extends AbstractDependsOnBeanFactoryPostProcessor {, +, +	public SchedulerDependsOnPostProcessor(String... dependsOn) {, +		super(Scheduler.class, SchedulerFactoryBean.class, dependsOn);, +	}, +, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/quartz/QuartzAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;, +	@ConditionalOnProperty(prefix = "spring.quartz", name = "job-store-type", havingValue = "jdbc"), +		public static InitializerSchedulerDependencyPostProcessor initializerSchedulerDependencyPostProcessor() {, +			return new InitializerSchedulerDependencyPostProcessor();, +		}]