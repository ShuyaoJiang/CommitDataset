[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.java, +import org.hibernate.cfg.AvailableSettings;, +, +import org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy;, +import org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy;, +			result.put(AvailableSettings.HBM2DDL_AUTO, ddlAuto);, +			result.remove(AvailableSettings.HBM2DDL_AUTO);, +			result.put(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,, +		else if (!result.containsKey(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS)) {, +			result.put(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +		String ddlAuto = existing.get(AvailableSettings.HBM2DDL_AUTO);, +			applyNamingStrategy(properties, AvailableSettings.IMPLICIT_NAMING_STRATEGY,, +					this.implicitStrategy, SpringImplicitNamingStrategy.class.getName());, +			applyNamingStrategy(properties, AvailableSettings.PHYSICAL_NAMING_STRATEGY,, +					this.physicalStrategy, SpringPhysicalNamingStrategy.class.getName());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.java, +import org.hibernate.cfg.AvailableSettings;, +, +import org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy;, +import org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy;, +			result.put(AvailableSettings.HBM2DDL_AUTO, ddlAuto);, +			result.remove(AvailableSettings.HBM2DDL_AUTO);, +			result.put(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS,, +		else if (!result.containsKey(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS)) {, +			result.put(AvailableSettings.USE_NEW_ID_GENERATOR_MAPPINGS, "true");, +		String ddlAuto = existing.get(AvailableSettings.HBM2DDL_AUTO);, +			applyNamingStrategy(properties, AvailableSettings.IMPLICIT_NAMING_STRATEGY,, +					this.implicitStrategy, SpringImplicitNamingStrategy.class.getName());, +			applyNamingStrategy(properties, AvailableSettings.PHYSICAL_NAMING_STRATEGY,, +					this.physicalStrategy, SpringPhysicalNamingStrategy.class.getName());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernatePropertiesTests.java, +					AvailableSettings.PHYSICAL_NAMING_STRATEGY,, +					AvailableSettings.IMPLICIT_NAMING_STRATEGY,, +							entry(AvailableSettings.IMPLICIT_NAMING_STRATEGY,, +							entry(AvailableSettings.PHYSICAL_NAMING_STRATEGY,, +							entry(AvailableSettings.IMPLICIT_NAMING_STRATEGY,, +							entry(AvailableSettings.PHYSICAL_NAMING_STRATEGY,, +			assertThat(hibernateProperties).containsEntry(AvailableSettings.HBM2DDL_AUTO,]