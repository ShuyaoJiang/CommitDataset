[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.util.unit.DataSize;, +		 * Maximum amount of request body to swallow., +		private DataSize maxSwallowSize = DataSize.ofMegaBytes(2);, +		public DataSize getMaxSwallowSize() {, +		public void setMaxSwallowSize(DataSize maxSwallowSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.util.unit.DataSize;, +		 * Maximum amount of request body to swallow., +		private DataSize maxSwallowSize = DataSize.ofMegaBytes(2);, +		public DataSize getMaxSwallowSize() {, +		public void setMaxSwallowSize(DataSize maxSwallowSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +import org.springframework.util.unit.DataSize;, +		propertyMapper.from(tomcatProperties::getMaxSwallowSize).whenNonNull(), +				.asInt(DataSize::toBytes), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.util.unit.DataSize;, +		 * Maximum amount of request body to swallow., +		private DataSize maxSwallowSize = DataSize.ofMegaBytes(2);, +		public DataSize getMaxSwallowSize() {, +		public void setMaxSwallowSize(DataSize maxSwallowSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +import org.springframework.util.unit.DataSize;, +		propertyMapper.from(tomcatProperties::getMaxSwallowSize).whenNonNull(), +				.asInt(DataSize::toBytes), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +import org.springframework.util.unit.DataSize;, +					.getProtocolHandler()).getMaxSwallowSize()), +							.isEqualTo(this.serverProperties.getTomcat(), +									.getMaxSwallowSize().toBytes());, +		bind("server.tomcat.max-swallow-size=10MB");, +						.isEqualTo(DataSize.ofMegaBytes(10).toBytes()));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.util.unit.DataSize;, +		 * Maximum amount of request body to swallow., +		private DataSize maxSwallowSize = DataSize.ofMegaBytes(2);, +		public DataSize getMaxSwallowSize() {, +		public void setMaxSwallowSize(DataSize maxSwallowSize) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizer.java, +import org.springframework.util.unit.DataSize;, +		propertyMapper.from(tomcatProperties::getMaxSwallowSize).whenNonNull(), +				.asInt(DataSize::toBytes), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/embedded/TomcatWebServerFactoryCustomizerTests.java, +import org.springframework.util.unit.DataSize;, +					.getProtocolHandler()).getMaxSwallowSize()), +							.isEqualTo(this.serverProperties.getTomcat(), +									.getMaxSwallowSize().toBytes());, +		bind("server.tomcat.max-swallow-size=10MB");, +						.isEqualTo(DataSize.ofMegaBytes(10).toBytes()));, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	server.tomcat.max-swallow-size=2MB # Maximum amount of request body to swallow.]