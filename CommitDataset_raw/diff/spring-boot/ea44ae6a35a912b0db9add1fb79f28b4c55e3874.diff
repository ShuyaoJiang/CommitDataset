[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * @deprecated as of 1.4 in favor of, +		 * {@link ServerProperties#getMaxHttpHeaderSize()}, +		@DeprecatedConfigurationProperty(replacement = "server.max-http-header-size"), +		 * @deprecated as of 1.4 in favor of, +		 * {@link ServerProperties#setMaxHttpHeaderSize(int)}, +			int maxHttpHeaderSize = (serverProperties.getMaxHttpHeaderSize() > 0, +					? serverProperties.getMaxHttpHeaderSize() : this.maxHttpHeaderSize);, +			if (maxHttpHeaderSize > 0) {, +				customizeMaxHttpHeaderSize(factory, maxHttpHeaderSize);, +				TomcatEmbeddedServletContainerFactory factory,, +				final int maxHttpHeaderSize) {, +				TomcatEmbeddedServletContainerFactory factory,, +				final int maxHttpPostSize) {, +, +, +				customizeMaxHttpHeaderSize(factory,, +						serverProperties.getMaxHttpHeaderSize());, +				JettyEmbeddedServletContainerFactory factory,, +				final int maxHttpHeaderSize) {, +, +					for (org.eclipse.jetty.server.Connector connector : server, +							.getConnectors()) {, +						for (ConnectionFactory connectionFactory : connector, +								.getConnectionFactories()) {, +								customize(, +										(HttpConfiguration.ConnectionFactory) connectionFactory);, +, +, +				private void customize(HttpConfiguration.ConnectionFactory factory) {, +					HttpConfiguration configuration = factory.getHttpConfiguration();, +					configuration.setRequestHeaderSize(maxHttpHeaderSize);, +					configuration.setResponseHeaderSize(maxHttpHeaderSize);, +				}, +, +							((ContextHandler) handler), +									.setMaxFormContentSize(maxHttpPostSize);, +				customizeMaxHttpHeaderSize(factory,, +						serverProperties.getMaxHttpHeaderSize());, +				UndertowEmbeddedServletContainerFactory factory,, +				final int maxHttpHeaderSize) {, +, +					builder.setServerOption(UndertowOptions.MAX_HEADER_SIZE,, +							maxHttpHeaderSize);, +, +				UndertowEmbeddedServletContainerFactory factory,, +				final int maxHttpPostSize) {, +, +					builder.setServerOption(UndertowOptions.MAX_ENTITY_SIZE,, +							(long) maxHttpPostSize);, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +		 * @deprecated as of 1.4 in favor of, +		 * {@link ServerProperties#getMaxHttpHeaderSize()}, +		@DeprecatedConfigurationProperty(replacement = "server.max-http-header-size"), +		 * @deprecated as of 1.4 in favor of, +		 * {@link ServerProperties#setMaxHttpHeaderSize(int)}, +			int maxHttpHeaderSize = (serverProperties.getMaxHttpHeaderSize() > 0, +					? serverProperties.getMaxHttpHeaderSize() : this.maxHttpHeaderSize);, +			if (maxHttpHeaderSize > 0) {, +				customizeMaxHttpHeaderSize(factory, maxHttpHeaderSize);, +				TomcatEmbeddedServletContainerFactory factory,, +				final int maxHttpHeaderSize) {, +				TomcatEmbeddedServletContainerFactory factory,, +				final int maxHttpPostSize) {, +, +, +				customizeMaxHttpHeaderSize(factory,, +						serverProperties.getMaxHttpHeaderSize());, +				JettyEmbeddedServletContainerFactory factory,, +				final int maxHttpHeaderSize) {, +, +					for (org.eclipse.jetty.server.Connector connector : server, +							.getConnectors()) {, +						for (ConnectionFactory connectionFactory : connector, +								.getConnectionFactories()) {, +								customize(, +										(HttpConfiguration.ConnectionFactory) connectionFactory);, +, +, +				private void customize(HttpConfiguration.ConnectionFactory factory) {, +					HttpConfiguration configuration = factory.getHttpConfiguration();, +					configuration.setRequestHeaderSize(maxHttpHeaderSize);, +					configuration.setResponseHeaderSize(maxHttpHeaderSize);, +				}, +, +							((ContextHandler) handler), +									.setMaxFormContentSize(maxHttpPostSize);, +				customizeMaxHttpHeaderSize(factory,, +						serverProperties.getMaxHttpHeaderSize());, +				UndertowEmbeddedServletContainerFactory factory,, +				final int maxHttpHeaderSize) {, +, +					builder.setServerOption(UndertowOptions.MAX_HEADER_SIZE,, +							maxHttpHeaderSize);, +, +				UndertowEmbeddedServletContainerFactory factory,, +				final int maxHttpPostSize) {, +, +					builder.setServerOption(UndertowOptions.MAX_ENTITY_SIZE,]