[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			engine.setRenderHiddenMarkersBeforeCheckboxes(, +					this.properties.isRenderHiddenMarkersBeforeCheckboxes());, +				resolver.setProducePartialOutputWhileProcessing(this.properties, +						.getServlet().isProducePartialOutputWhileProcessing());, +			engine.setRenderHiddenMarkersBeforeCheckboxes(, +					this.properties.isRenderHiddenMarkersBeforeCheckboxes());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			engine.setRenderHiddenMarkersBeforeCheckboxes(, +					this.properties.isRenderHiddenMarkersBeforeCheckboxes());, +				resolver.setProducePartialOutputWhileProcessing(this.properties, +						.getServlet().isProducePartialOutputWhileProcessing());, +			engine.setRenderHiddenMarkersBeforeCheckboxes(, +					this.properties.isRenderHiddenMarkersBeforeCheckboxes());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +	 * Whether hidden form inputs acting as markers for checkboxes (which are omitted from, +	 * form submission when unchecked) should be rendered before or after the rendered, +	 * checkbox element itself for better integration with some CSS frameworks. Default is, +	 * "false" (hiddens will be rendered after checkboxes)., +	 */, +	private boolean renderHiddenMarkersBeforeCheckboxes;, +, +	/**, +	public boolean isRenderHiddenMarkersBeforeCheckboxes() {, +		return renderHiddenMarkersBeforeCheckboxes;, +	}, +, +	public void setRenderHiddenMarkersBeforeCheckboxes(, +			boolean renderHiddenMarkersBeforeCheckboxes) {, +		this.renderHiddenMarkersBeforeCheckboxes = renderHiddenMarkersBeforeCheckboxes;, +	}, +, +		/**, +		 * Whether Thymeleaf should start sending partial output to the server's output, +		 * buffers as soon as it becomes available (default), or instead wait until, +		 * template processing is finished, keeping all rendered results in memory until, +		 * that moment and sending them to the server's output buffers in a single call., +		 */, +		private boolean producePartialOutputWhileProcessing = true;, +, +		public boolean isProducePartialOutputWhileProcessing() {, +			return producePartialOutputWhileProcessing;, +		}, +, +		public void setProducePartialOutputWhileProcessing(, +				boolean producePartialOutputWhileProcessing) {, +			this.producePartialOutputWhileProcessing = producePartialOutputWhileProcessing;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +			engine.setRenderHiddenMarkersBeforeCheckboxes(, +					this.properties.isRenderHiddenMarkersBeforeCheckboxes());, +				resolver.setProducePartialOutputWhileProcessing(this.properties, +						.getServlet().isProducePartialOutputWhileProcessing());, +			engine.setRenderHiddenMarkersBeforeCheckboxes(, +					this.properties.isRenderHiddenMarkersBeforeCheckboxes());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafProperties.java, +	 * Whether hidden form inputs acting as markers for checkboxes (which are omitted from, +	 * form submission when unchecked) should be rendered before or after the rendered, +	 * checkbox element itself for better integration with some CSS frameworks. Default is, +	 * "false" (hiddens will be rendered after checkboxes)., +	 */, +	private boolean renderHiddenMarkersBeforeCheckboxes;, +, +	/**, +	public boolean isRenderHiddenMarkersBeforeCheckboxes() {, +		return renderHiddenMarkersBeforeCheckboxes;, +	}, +, +	public void setRenderHiddenMarkersBeforeCheckboxes(, +			boolean renderHiddenMarkersBeforeCheckboxes) {, +		this.renderHiddenMarkersBeforeCheckboxes = renderHiddenMarkersBeforeCheckboxes;, +	}, +, +		/**, +		 * Whether Thymeleaf should start sending partial output to the server's output, +		 * buffers as soon as it becomes available (default), or instead wait until, +		 * template processing is finished, keeping all rendered results in memory until, +		 * that moment and sending them to the server's output buffers in a single call., +		 */, +		private boolean producePartialOutputWhileProcessing = true;, +, +		public boolean isProducePartialOutputWhileProcessing() {, +			return producePartialOutputWhileProcessing;, +		}, +, +		public void setProducePartialOutputWhileProcessing(, +				boolean producePartialOutputWhileProcessing) {, +			this.producePartialOutputWhileProcessing = producePartialOutputWhileProcessing;, +		}, +, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafReactiveAutoConfigurationTests.java, +	public void overrideRenderHiddenMarkersBeforeCheckboxes() {, +		load(BaseConfiguration.class,, +				"spring.thymeleaf.render-hidden-markers-before-checkboxes:true");, +		assertThat(this.context.getBean(SpringWebFluxTemplateEngine.class), +				.getRenderHiddenMarkersBeforeCheckboxes()).isTrue();, +	}, +, +	@Test]