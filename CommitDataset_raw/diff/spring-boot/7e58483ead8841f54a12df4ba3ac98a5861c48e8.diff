[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/AbstractEndpointTests.java, +import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;, +import com.fasterxml.jackson.databind.ObjectMapper;, +, +	protected final Class<?> configClass;, +		this.context.register(JacksonAutoConfiguration.class, this.configClass);, +	@Test, +	public void serialize() throws Exception {, +		Object result = getEndpointBean().invoke();, +		if (result != null) {, +			this.context.getBean(ObjectMapper.class).writeValue(System.out, result);, +		}, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/AbstractEndpointTests.java, +import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;, +import com.fasterxml.jackson.databind.ObjectMapper;, +, +	protected final Class<?> configClass;, +		this.context.register(JacksonAutoConfiguration.class, this.configClass);, +	@Test, +	public void serialize() throws Exception {, +		Object result = getEndpointBean().invoke();, +		if (result != null) {, +			this.context.getBean(ObjectMapper.class).writeValue(System.out, result);, +		}, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/AutoConfigurationReportEndpointTests.java, +import org.springframework.context.annotation.AnnotationConfigApplicationContext;, +		this.context = new AnnotationConfigApplicationContext();, +		this.context.register(this.configClass);, +		this.context.refresh();]