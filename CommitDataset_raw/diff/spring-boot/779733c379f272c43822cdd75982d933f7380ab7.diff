[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties.java, +import org.neo4j.ogm.config.AutoIndexMode;, + * @author Aurélien Leboulanger, +	/**, +	 * Index generation behaviour. {@link AutoIndexMode#NONE} by default., +	 */, +	private AutoIndexMode autoIndex = AutoIndexMode.NONE;, +, +	public AutoIndexMode getAutoIndex() {, +		return this.autoIndex;, +	}, +, +	public void setAutoIndex(AutoIndexMode autoIndex) {, +		this.autoIndex = autoIndex;, +	}, +, +, +		builder.autoIndex(this.getAutoIndex().name());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties.java, +import org.neo4j.ogm.config.AutoIndexMode;, + * @author Aurélien Leboulanger, +	/**, +	 * Index generation behaviour. {@link AutoIndexMode#NONE} by default., +	 */, +	private AutoIndexMode autoIndex = AutoIndexMode.NONE;, +, +	public AutoIndexMode getAutoIndex() {, +		return this.autoIndex;, +	}, +, +	public void setAutoIndex(AutoIndexMode autoIndex) {, +		this.autoIndex = autoIndex;, +	}, +, +, +		builder.autoIndex(this.getAutoIndex().name());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfigurationTests.java, +import org.neo4j.ogm.config.AutoIndexMode;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, + * @author Aurélien Leboulanger, +	@Test, +	public void autoIndexConfiguration() {, +		load(CustomConfigurationFactory.class);, +		assertThat(this.context.getBean(org.neo4j.ogm.config.Configuration.class), +				.getAutoIndex()).isEqualTo(AutoIndexMode.NONE);, +, +		load(CustomConfigurationFactory.class, "spring.data.neo4j.auto-index=assert");, +		assertThat(this.context.getBean(org.neo4j.ogm.config.Configuration.class), +				.getAutoIndex()).isEqualTo(AutoIndexMode.ASSERT);, +, +		load(CustomConfigurationFactory.class, "spring.data.neo4j.auto-index=dump");, +		assertThat(this.context.getBean(org.neo4j.ogm.config.Configuration.class), +				.getAutoIndex()).isEqualTo(AutoIndexMode.DUMP);, +, +		load(CustomConfigurationFactory.class, "spring.data.neo4j.auto-index=validate");, +		assertThat(this.context.getBean(org.neo4j.ogm.config.Configuration.class), +				.getAutoIndex()).isEqualTo(AutoIndexMode.VALIDATE);, +	}, +, +	@EnableConfigurationProperties(Neo4jProperties.class), +	static class CustomConfigurationFactory {, +, +		@Bean, +		public org.neo4j.ogm.config.Configuration configuration(Neo4jProperties properties) {, +			return properties.createConfiguration();, +		}, +, +		@Bean, +		public SessionFactory customSessionFactory() {, +			return mock(SessionFactory.class);, +		}, +	}, +, +	@Configuration, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jProperties.java, +import org.neo4j.ogm.config.AutoIndexMode;, + * @author Aurélien Leboulanger, +	/**, +	 * Index generation behaviour. {@link AutoIndexMode#NONE} by default., +	 */, +	private AutoIndexMode autoIndex = AutoIndexMode.NONE;, +, +	public AutoIndexMode getAutoIndex() {, +		return this.autoIndex;, +	}, +, +	public void setAutoIndex(AutoIndexMode autoIndex) {, +		this.autoIndex = autoIndex;, +	}, +, +, +		builder.autoIndex(this.getAutoIndex().name());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jDataAutoConfigurationTests.java, +import org.neo4j.ogm.config.AutoIndexMode;, +import org.springframework.boot.context.properties.EnableConfigurationProperties;, + * @author Aurélien Leboulanger, +	@Test, +	public void autoIndexConfiguration() {, +		load(CustomConfigurationFactory.class);, +		assertThat(this.context.getBean(org.neo4j.ogm.config.Configuration.class)]