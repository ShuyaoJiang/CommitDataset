[+++ b/spring-boot-devtools/pom.xml, +			<groupId>org.springframework.security</groupId>, +			<artifactId>spring-security-config</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.security</groupId>, +			<artifactId>spring-security-web</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-devtools/pom.xml, +			<groupId>org.springframework.security</groupId>, +			<artifactId>spring-security-config</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.security</groupId>, +			<artifactId>spring-security-web</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/RemoteDevToolsAutoConfiguration.java, +import org.springframework.boot.autoconfigure.security.SecurityProperties;, +import org.springframework.core.annotation.Order;, +import org.springframework.security.config.annotation.web.builders.HttpSecurity;, +import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;, + * @author Andy Wilkinson, +	@Configuration, +	@ConditionalOnClass(WebSecurityConfigurerAdapter.class), +	static class RemoteDevToolsSecurityConfiguration {, +, +		@Bean, +		public RemoteRestartWebSecurityConfigurer remoteRestartWebSecurityConfigurer() {, +			return new RemoteRestartWebSecurityConfigurer();, +		}, +, +		@Order(SecurityProperties.IGNORED_ORDER + 2), +		static class RemoteRestartWebSecurityConfigurer extends, +				WebSecurityConfigurerAdapter {, +, +			@Autowired, +			private DevToolsProperties properties;, +, +			@Override, +			public void configure(HttpSecurity http) throws Exception {, +				http.antMatcher(this.properties.getRemote().getContextPath() + "/**");, +				http.csrf().disable();, +			}, +, +		}, +, +	}, +]