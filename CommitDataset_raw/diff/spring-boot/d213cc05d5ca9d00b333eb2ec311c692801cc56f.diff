[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		return this.chain;, +		 * Enable the Spring Resource Handling chain. Disabled by default unless at least, +		 * one strategy has been enabled., +			return this.enabled;, +			return this.cache;, +			return this.strategy;, +			return this.html5AppCache;, +, +			return this.fixed;, +			return this.content;, +, +			return this.enabled;, +			return this.paths;, +, +			return this.enabled;, +			return this.paths;, +			return this.version;, +, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		return this.chain;, +		 * Enable the Spring Resource Handling chain. Disabled by default unless at least, +		 * one strategy has been enabled., +			return this.enabled;, +			return this.cache;, +			return this.strategy;, +			return this.html5AppCache;, +, +			return this.fixed;, +			return this.content;, +, +			return this.enabled;, +			return this.paths;, +, +			return this.enabled;, +			return this.paths;, +			return this.version;, +, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ResourceProperties.Strategy;, +import org.springframework.web.servlet.resource.ResourceResolver;, +				registerResourceChain(registry.addResourceHandler("/webjars/**"), +						.setCachePeriod(cachePeriod));, +				registerResourceChain(registry.addResourceHandler("/**"), +						.setCachePeriod(cachePeriod));, +			ResourceProperties.Chain properties = this.resourceProperties.getChain();, +			if (Boolean.TRUE.equals(properties.getEnabled()), +					|| properties.getStrategy().getFixed().isEnabled(), +					|| properties.getStrategy().getContent().isEnabled()) {, +				configureResourceChain(properties,, +						registration.resourceChain(properties.isCache()));, +, +		private void configureResourceChain(ResourceProperties.Chain properties,, +				ResourceChainRegistration chain) {, +			Strategy strategy = properties.getStrategy();, +			if (strategy.getFixed().isEnabled() || strategy.getContent().isEnabled()) {, +				chain.addResolver(getVersionResourceResolver(strategy));, +			if (properties.isHtml5AppCache()) {, +, +		private ResourceResolver getVersionResourceResolver(, +				ResourceProperties.Strategy properties) {, +			VersionResourceResolver resolver = new VersionResourceResolver();, +			if (properties.getFixed().isEnabled()) {, +				String version = properties.getFixed().getVersion();, +				String[] paths = properties.getFixed().getPaths();, +				resolver.addFixedVersionStrategy(version, paths);, +			}, +			if (properties.getContent().isEnabled()) {, +				String[] paths = properties.getContent().getPaths();, +				resolver.addContentVersionStrategy(paths);, +			}, +			return resolver;, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ResourceProperties.java, +		return this.chain;, +		 * Enable the Spring Resource Handling chain. Disabled by default unless at least, +		 * one strategy has been enabled., +			return this.enabled;, +			return this.cache;, +			return this.strategy;, +			return this.html5AppCache;, +, +			return this.fixed;, +			return this.content;, +, +			return this.enabled;, +			return this.paths;, +, +			return this.enabled;, +			return this.paths;, +			return this.version;, +, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.boot.autoconfigure.web.ResourceProperties.Strategy;, +import org.springframework.web.servlet.resource.ResourceResolver;, +				registerResourceChain(registry.addResourceHandler("/webjars/**"), +						.setCachePeriod(cachePeriod));, +				registerResourceChain(registry.addResourceHandler("/**")]