[+++ b/spring-boot-samples/spring-boot-sample-kafka/src/main/java/sample/kafka/Consumer.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +, +	private final List<SampleMessage> messages = new CopyOnWriteArrayList<>();, +, +		this.messages.add(message);, +	List<SampleMessage> getMessages() {, +		return this.messages;, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-kafka/src/main/java/sample/kafka/Consumer.java, +import java.util.List;, +import java.util.concurrent.CopyOnWriteArrayList;, +, +	private final List<SampleMessage> messages = new CopyOnWriteArrayList<>();, +, +		this.messages.add(message);, +	List<SampleMessage> getMessages() {, +		return this.messages;, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-kafka/src/test/java/sample/kafka/SampleKafkaApplicationTests.java, +import java.util.List;, +import org.junit.jupiter.api.Test;, +, +import org.springframework.beans.factory.annotation.Autowired;, +	public void testVanillaExchange(@Autowired Consumer consumer) throws Exception {, +		List<SampleMessage> messages = consumer.getMessages();, +		while (messages.size() != 1 && System.currentTimeMillis() < end) {, +		assertThat(messages).hasSize(1);, +		assertThat(messages.get(0).getMessage()).isEqualTo("A simple test message");]