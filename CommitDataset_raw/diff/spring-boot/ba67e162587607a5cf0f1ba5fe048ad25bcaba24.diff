[+++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/ExpressionTree.java, +	private final Method arrayValueMethod = findMethod(this.newArrayTreeType,, +			"getInitializers");, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/ExpressionTree.java, +	private final Method arrayValueMethod = findMethod(this.newArrayTreeType,, +			"getInitializers");, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/JavaCompilerFieldValuesParser.java, +		private Object getValue(ExpressionTree expression, Object defaultValue), +				throws Exception {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/ExpressionTree.java, +	private final Method arrayValueMethod = findMethod(this.newArrayTreeType,, +			"getInitializers");, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/JavaCompilerFieldValuesParser.java, +		private Object getValue(ExpressionTree expression, Object defaultValue), +				throws Exception {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/fieldvalues/AbstractFieldValuesProcessorTests.java, +		assertThat(values.get("stringArray"),, +				equalToObject(new Object[] { "FOO", "BAR" }));, +		assertThat(values.get("stringArrayConst"), equalToObject(new Object[] { "OK",, +				"KO" }));, +		assertThat(values.get("stringArrayConstElements"),, +				equalToObject(new Object[] { "c" }));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/ExpressionTree.java, +	private final Method arrayValueMethod = findMethod(this.newArrayTreeType,, +			"getInitializers");, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/JavaCompilerFieldValuesParser.java, +		private Object getValue(ExpressionTree expression, Object defaultValue), +				throws Exception {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/fieldvalues/AbstractFieldValuesProcessorTests.java, +		assertThat(values.get("stringArray"),, +				equalToObject(new Object[] { "FOO", "BAR" }));, +		assertThat(values.get("stringArrayConst"), equalToObject(new Object[] { "OK",, +				"KO" }));, +		assertThat(values.get("stringArrayConstElements"),, +				equalToObject(new Object[] { "c" }));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshallerTests.java, +		metadata.add(ItemMetadata.newProperty("e", null, null, null, null, null,, +				new String[] { "y", "n" }, false));, +		metadata.add(ItemMetadata.newProperty("f", null, null, null, null, null,, +				new Boolean[] { true, false }, false));, +						.withDescription("desc").withDefaultValue(is("x")), +						.withDeprecated());, +		assertThat(read,, +				containsProperty("e").withDefaultValue(is(new String[] { "y", "n" })));, +		assertThat(read,, +				containsProperty("f").withDefaultValue(is(new boolean[] { true, false })));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/ExpressionTree.java, +	private final Method arrayValueMethod = findMethod(this.newArrayTreeType,, +			"getInitializers");, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/fieldvalues/javac/JavaCompilerFieldValuesParser.java, +		private Object getValue(ExpressionTree expression, Object defaultValue), +				throws Exception {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/fieldvalues/AbstractFieldValuesProcessorTests.java, +		assertThat(values.get("stringArray"),, +				equalToObject(new Object[] { "FOO", "BAR" }));, +		assertThat(values.get("stringArrayConst"), equalToObject(new Object[] { "OK",, +				"KO" }));, +		assertThat(values.get("stringArrayConstElements"),, +				equalToObject(new Object[] { "c" }));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshallerTests.java, +		metadata.add(ItemMetadata.newProperty("e", null, null, null, null, null,, +				new String[] { "y", "n" }, false));, +		metadata.add(ItemMetadata.newProperty("f", null, null, null, null, null,, +				new Boolean[] { true, false }, false));, +						.withDescription("desc").withDefaultValue(is("x")), +						.withDeprecated());, +		assertThat(read,, +				containsProperty("e").withDefaultValue(is(new String[] { "y", "n" })));, +		assertThat(read,, +				containsProperty("f").withDefaultValue(is(new boolean[] { true, false })));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationsample/fieldvalues/FieldValues.java]