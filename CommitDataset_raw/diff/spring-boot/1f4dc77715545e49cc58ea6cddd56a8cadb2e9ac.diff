[+++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FileSystemWatcher.java, +		Assert.isTrue(folder.isDirectory(), "Folder '" + folder + "' must exist and must", +				+ " be a directory");, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/filewatch/FileSystemWatcher.java, +		Assert.isTrue(folder.isDirectory(), "Folder '" + folder + "' must exist and must", +				+ " be a directory");, +++ b/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/filewatch/FileSystemWatcherTests.java, +import static org.hamcrest.Matchers.is;, +	public void sourceFolderMustExist() throws Exception {, +		File folder = new File("does/not/exist");, +		assertThat(folder.exists(), is(false));, +		this.thrown.expect(IllegalArgumentException.class);, +		this.thrown, +				.expectMessage("Folder 'does/not/exist' must exist and must be a directory");, +		this.watcher.addSourceFolder(folder);, +	}, +, +	@Test, +	public void sourceFolderMustBeADirectory() throws Exception {, +		File folder = new File("pom.xml");, +		assertThat(folder.isFile(), is(true));, +		this.thrown.expect(IllegalArgumentException.class);, +		this.thrown.expectMessage("Folder 'pom.xml' must exist and must be a directory");, +		this.watcher.addSourceFolder(new File("pom.xml"));, +	}, +, +	@Test]