[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoClientSettingsBuilderCustomizer.java, + * Copyright 2012-2018 the original author or authors., +import com.mongodb.MongoClientSettings.Builder;, + * {@link com.mongodb.MongoClientSettings} via a {@link Builder, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoClientSettingsBuilderCustomizer.java, + * Copyright 2012-2018 the original author or authors., +import com.mongodb.MongoClientSettings.Builder;, + * {@link com.mongodb.MongoClientSettings} via a {@link Builder, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration.java, +import com.mongodb.MongoClientSettings;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoClientSettingsBuilderCustomizer.java, + * Copyright 2012-2018 the original author or authors., +import com.mongodb.MongoClientSettings.Builder;, + * {@link com.mongodb.MongoClientSettings} via a {@link Builder, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration.java, +import com.mongodb.MongoClientSettings;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactory.java, +import com.mongodb.MongoClientSettings;, +import com.mongodb.MongoClientSettings.Builder;, +		builder.applyToClusterSettings(cluster -> cluster, +				.hosts(Collections.singletonList(new ServerAddress(host, port))));, +		builder.applyToClusterSettings(, +				cluster -> cluster.hosts(Collections.singletonList(serverAddress)));, +		return builder(settings).applyConnectionString(connection);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoClientSettingsBuilderCustomizer.java, + * Copyright 2012-2018 the original author or authors., +import com.mongodb.MongoClientSettings.Builder;, + * {@link com.mongodb.MongoClientSettings} via a {@link Builder, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration.java, +import com.mongodb.MongoClientSettings;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactory.java, +import com.mongodb.MongoClientSettings;, +import com.mongodb.MongoClientSettings.Builder;, +		builder.applyToClusterSettings(cluster -> cluster, +				.hosts(Collections.singletonList(new ServerAddress(host, port))));, +		builder.applyToClusterSettings(, +				cluster -> cluster.hosts(Collections.singletonList(serverAddress)));, +		return builder(settings).applyConnectionString(connection);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfigurationTests.java, +import com.mongodb.MongoClientSettings;, +					com.mongodb.async.client.MongoClientSettings settings = mongo, +							.getSettings();, +					.applyToSocketSettings(, +							socket -> socket.readTimeout(300, TimeUnit.SECONDS)), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoClientSettingsBuilderCustomizer.java, + * Copyright 2012-2018 the original author or authors., +import com.mongodb.MongoClientSettings.Builder;, + * {@link com.mongodb.MongoClientSettings} via a {@link Builder, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration.java, +import com.mongodb.MongoClientSettings;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactory.java, +import com.mongodb.MongoClientSettings;, +import com.mongodb.MongoClientSettings.Builder;, +		builder.applyToClusterSettings(cluster -> cluster, +				.hosts(Collections.singletonList(new ServerAddress(host, port))));, +		builder.applyToClusterSettings(, +				cluster -> cluster.hosts(Collections.singletonList(serverAddress)));, +		return builder(settings).applyConnectionString(connection);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfigurationTests.java, +import com.mongodb.MongoClientSettings;, +					com.mongodb.async.client.MongoClientSettings settings = mongo, +							.getSettings();, +					.applyToSocketSettings(, +							socket -> socket.readTimeout(300, TimeUnit.SECONDS)), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactoryTests.java, +import com.mongodb.MongoClientSettings;, +		com.mongodb.async.client.MongoClientSettings settings = client.getSettings();, +		com.mongodb.async.client.MongoClientSettings settings = client.getSettings();]