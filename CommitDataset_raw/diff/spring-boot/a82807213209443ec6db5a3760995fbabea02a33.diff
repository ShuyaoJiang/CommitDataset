[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java, +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(CachesEndpoint.class));, +				.withBean(CacheManager.class, () -> mock(CacheManager.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java, +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(CachesEndpoint.class));, +				.withBean(CacheManager.class, () -> mock(CacheManager.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(ReactiveCassandraOperations.class,, +					() -> mock(ReactiveCassandraOperations.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java, +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(CachesEndpoint.class));, +				.withBean(CacheManager.class, () -> mock(CacheManager.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(ReactiveCassandraOperations.class,, +					() -> mock(ReactiveCassandraOperations.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java, +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(CachesEndpoint.class));, +				.withBean(CacheManager.class, () -> mock(CacheManager.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(ReactiveCassandraOperations.class,, +					() -> mock(ReactiveCassandraOperations.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +				.withBean(TestEndpoint.class, TestEndpoint::new).run((context) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java, +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(CachesEndpoint.class));, +				.withBean(CacheManager.class, () -> mock(CacheManager.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(ReactiveCassandraOperations.class,, +					() -> mock(ReactiveCassandraOperations.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +				.withBean(TestEndpoint.class, TestEndpoint::new).run((context) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/couchbase/CouchbaseHealthIndicatorAutoConfigurationTests.java, +			.withBean(Cluster.class, () -> mock(Cluster.class)).withConfiguration(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java, +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(CachesEndpoint.class));, +				.withBean(CacheManager.class, () -> mock(CacheManager.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(ReactiveCassandraOperations.class,, +					() -> mock(ReactiveCassandraOperations.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +				.withBean(TestEndpoint.class, TestEndpoint::new).run((context) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/couchbase/CouchbaseHealthIndicatorAutoConfigurationTests.java, +			.withBean(Cluster.class, () -> mock(Cluster.class)).withConfiguration(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/couchbase/CouchbaseReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(Cluster.class, () -> mock(Cluster.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java, +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +		this.contextRunner.withBean(CacheManager.class, () -> mock(CacheManager.class)), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(CachesEndpoint.class));, +				.withBean(CacheManager.class, () -> mock(CacheManager.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cassandra/CassandraReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(ReactiveCassandraOperations.class,, +					() -> mock(ReactiveCassandraOperations.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfigurationTests.java, +		this.contextRunner.withBean(TestEndpoint.class, TestEndpoint::new), +				.withBean(TestEndpoint.class, TestEndpoint::new).run((context) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/couchbase/CouchbaseHealthIndicatorAutoConfigurationTests.java, +			.withBean(Cluster.class, () -> mock(Cluster.class)).withConfiguration(, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/couchbase/CouchbaseReactiveHealthIndicatorAutoConfigurationTests.java, +			.withBean(Cluster.class, () -> mock(Cluster.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/elasticsearch/ElasticsearchHealthIndicatorAutoConfigurationTests.java, +		this.contextRunner.withBean(JestClient.class, () -> mock(JestClient.class)), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfigurationTests.java]