[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/MongoHealthIndicatorTests.java, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/MongoHealthIndicatorTests.java, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/MongoHealthIndicatorTests.java, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +, +, +++ b/spring-boot-samples/spring-boot-sample-tomcat-ssl/src/main/java/sample/tomcat/SampleTomcatSslApplication.java, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/MongoHealthIndicatorTests.java, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +, +, +++ b/spring-boot-samples/spring-boot-sample-tomcat-ssl/src/main/java/sample/tomcat/SampleTomcatSslApplication.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer.java, +	@Override, +	public void setJspServletClassName(String jspServletClassName) {, +		this.jspServletClassName = jspServletClassName;, +	}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/MongoHealthIndicatorTests.java, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +, +, +++ b/spring-boot-samples/spring-boot-sample-tomcat-ssl/src/main/java/sample/tomcat/SampleTomcatSslApplication.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer.java, +	@Override, +	public void setJspServletClassName(String jspServletClassName) {, +		this.jspServletClassName = jspServletClassName;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +import java.net.URL;, +			configureSsl(sslContextFactory, getSsl());, +	/**, +	 * Configure the SSL connection., +	 * @param factory the Jetty {@link SslContextFactory}., +	 * @param ssl the ssl details., +	 */, +	protected void configureSsl(SslContextFactory factory, Ssl ssl) {, +		factory.setProtocol(ssl.getProtocol());, +		configureSslClientAuth(factory, ssl);, +		configureSslPasswords(factory, ssl);, +		factory.setCertAlias(ssl.getKeyAlias());, +		configureSslKeyStore(factory, ssl);, +		if (ssl.getCiphers() != null) {, +			factory.setIncludeCipherSuites(ssl.getCiphers());, +		}, +		configureSslTrustStore(factory, ssl);, +	}, +, +	private void configureSslClientAuth(SslContextFactory factory, Ssl ssl) {, +			factory.setNeedClientAuth(true);, +			factory.setWantClientAuth(true);, +			factory.setWantClientAuth(true);, +	}, +, +	private void configureSslPasswords(SslContextFactory factory, Ssl ssl) {, +			factory.setKeyStorePassword(ssl.getKeyStorePassword());, +			factory.setKeyManagerPassword(ssl.getKeyPassword());, +	}, +, +	private void configureSslKeyStore(SslContextFactory factory, Ssl ssl) {, +			URL url = ResourceUtils.getURL(ssl.getKeyStore());, +			factory.setKeyStoreResource(Resource.newResource(url));, +		catch (IOException ex) {, +					+ ssl.getKeyStore() + "'", ex);, +		}, +	private void configureSslTrustStore(SslContextFactory factory, Ssl ssl) {, +			factory.setTrustStorePassword(ssl.getTrustStorePassword());, +				URL url = ResourceUtils.getURL(ssl.getTrustStore());, +				factory.setTrustStoreResource(Resource.newResource(url));, +			catch (IOException ex) {, +						"Could not find trust store '" + ssl.getTrustStore() + "'", ex);, +					Resource resource = Resource.newResource("jar:" + root.toURI() + "!");, +					handler.setBaseResource(resource);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/MongoHealthIndicatorTests.java, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +, +, +++ b/spring-boot-samples/spring-boot-sample-tomcat-ssl/src/main/java/sample/tomcat/SampleTomcatSslApplication.java, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer.java, +	@Override, +	public void setJspServletClassName(String jspServletClassName) {, +		this.jspServletClassName = jspServletClassName;, +	}, +, +++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java, +import java.net.URL;, +			configureSsl(sslContextFactory, getSsl());, +	/**, +	 * Configure the SSL connection., +	 * @param factory the Jetty {@link SslContextFactory}., +	 * @param ssl the ssl details., +	 */]