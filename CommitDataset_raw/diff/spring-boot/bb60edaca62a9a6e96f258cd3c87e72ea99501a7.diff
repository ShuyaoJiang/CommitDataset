[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnEnabledEndpoint.java, + * public class MyEndpointWebExtension {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnEnabledEndpoint.java, + * public class MyEndpointWebExtension {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebClientMetricsAutoConfigurationTests.java, +						.containsKey("customTagsProvider"));, +		public WebClientExchangeTagsProvider customTagsProvider() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnEnabledEndpoint.java, + * public class MyEndpointWebExtension {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebClientMetricsAutoConfigurationTests.java, +						.containsKey("customTagsProvider"));, +		public WebClientExchangeTagsProvider customTagsProvider() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +					Map<PropertyAccessor, JsonAutoDetect.Visibility> visibilities) {, +				visibilities.forEach(builder::visibility);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnEnabledEndpoint.java, + * public class MyEndpointWebExtension {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebClientMetricsAutoConfigurationTests.java, +						.containsKey("customTagsProvider"));, +		public WebClientExchangeTagsProvider customTagsProvider() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +					Map<PropertyAccessor, JsonAutoDetect.Visibility> visibilities) {, +				visibilities.forEach(builder::visibility);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.java, +	 * @param jpaProperties standard JPA properties, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnEnabledEndpoint.java, + * public class MyEndpointWebExtension {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebClientMetricsAutoConfigurationTests.java, +						.containsKey("customTagsProvider"));, +		public WebClientExchangeTagsProvider customTagsProvider() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.java, +					Map<PropertyAccessor, JsonAutoDetect.Visibility> visibilities) {, +				visibilities.forEach(builder::visibility);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateProperties.java, +	 * @param jpaProperties standard JPA properties, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +Common tags are generally used for dimensional drill-down on the operating environment like, +host, instance, region, stack, etc. Commons tags are applied to all meters and can be, +The example above adds `region` and `stack` tags to all meters with a value of]