[+++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/AetherGrapeEngineTests.java, +import java.util.ArrayList;, +	private final RepositoryConfiguration springMilestones = new RepositoryConfiguration(, +			"spring-milestones", URI.create("https://repo.spring.io/milestone"), false);, +	private AetherGrapeEngine createGrapeEngine(, +			RepositoryConfiguration... additionalRepositories) {, +		List<RepositoryConfiguration> repositoryConfigurations = new ArrayList<RepositoryConfiguration>();, +		repositoryConfigurations.add(new RepositoryConfiguration("central", URI, +				.create("http://repo1.maven.org/maven2"), false));, +		repositoryConfigurations.addAll(Arrays.asList(additionalRepositories));, +		return AetherGrapeEngineFactory.create(this.groovyClassLoader,, +				repositoryConfigurations, new DependencyResolutionContext());, +		createGrapeEngine(this.springMilestones).grab(args,, +				assertEquals(1, repositories.size());, +				assertEquals(1, repositories.size());, +		createGrapeEngine(this.springMilestones).grab(args,, +		createGrapeEngine().grab(, +		createGrapeEngine(this.springMilestones).grab(args,, +		AetherGrapeEngine grapeEngine = this.createGrapeEngine();, +		grapeEngine, +				.addResolver(createResolver("restlet.org", "http://maven.restlet.org"));, +		grapeEngine.grab(args, createDependency("org.restlet", "org.restlet", "1.1.6"));, +		createGrapeEngine().grab(Collections.emptyMap(), dependency);, +		createGrapeEngine().grab(args, dependency);, +		createGrapeEngine().grab(args, dependency);, +		createGrapeEngine().grab(args, dependency);]