[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			webClient.get().uri("https://example.org/projects/" + i).exchange(), +		webClient.get().uri("https://example.org/projects/{project}", "spring-boot"), +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			webClient.get().uri("https://example.org/projects/" + i).exchange(), +		webClient.get().uri("https://example.org/projects/{project}", "spring-boot"), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProviderTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			webClient.get().uri("https://example.org/projects/" + i).exchange(), +		webClient.get().uri("https://example.org/projects/{project}", "spring-boot"), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProviderTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/MetricsWebClientFilterFunctionTests.java, +				URI.create("https://example.com/projects/spring-boot")).build();, +						URI.create("https://example.com/projects/spring-boot")), +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			webClient.get().uri("https://example.org/projects/" + i).exchange(), +		webClient.get().uri("https://example.org/projects/{project}", "spring-boot"), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProviderTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/MetricsWebClientFilterFunctionTests.java, +				URI.create("https://example.com/projects/spring-boot")).build();, +						URI.create("https://example.com/projects/spring-boot")), +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTagsTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +						URI.create("https://example.org/projects/spring-boot")), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			webClient.get().uri("https://example.org/projects/" + i).exchange(), +		webClient.get().uri("https://example.org/projects/{project}", "spring-boot"), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProviderTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/MetricsWebClientFilterFunctionTests.java, +				URI.create("https://example.com/projects/spring-boot")).build();, +						URI.create("https://example.com/projects/spring-boot")), +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTagsTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +						URI.create("https://example.org/projects/spring-boot")), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java, +				.isEqualTo("https://example.com/redirect");, +				.isEqualTo("https://example.com/auth");, +		assertThat(providerDetails.getTokenUri()).isEqualTo("https://example.com/token");, +		assertThat(providerDetails.getJwkSetUri()).isEqualTo("https://example.com/jwk");, +		assertThat(userInfoEndpoint.getUri()).isEqualTo("https://example.com/info");, +		provider.setAuthorizationUri("https://example.com/auth");, +		provider.setTokenUri("https://example.com/token");, +		provider.setUserInfoUri("https://example.com/info");, +		provider.setJwkSetUri("https://example.com/jwk");, +		registration.setRedirectUri("https://example.com/redirect");, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			webClient.get().uri("https://example.org/projects/" + i).exchange(), +		webClient.get().uri("https://example.org/projects/{project}", "spring-boot"), +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/DefaultWebClientExchangeTagsProviderTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/MetricsWebClientFilterFunctionTests.java, +				URI.create("https://example.com/projects/spring-boot")).build();, +						URI.create("https://example.com/projects/spring-boot")), +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +				URI.create("https://example.com/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTagsTests.java, +						URI.create("https://example.org/projects/spring-boot")), +						"https://example.org/projects/{project}"), +						URI.create("https://example.org/projects/spring-boot")), +				URI.create("https://example.org/projects/spring-boot")).build();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java, +				.isEqualTo("https://example.com/redirect");, +				.isEqualTo("https://example.com/auth");, +		assertThat(providerDetails.getTokenUri()).isEqualTo("https://example.com/token");, +		assertThat(providerDetails.getJwkSetUri()).isEqualTo("https://example.com/jwk");, +		assertThat(userInfoEndpoint.getUri()).isEqualTo("https://example.com/info");, +		provider.setAuthorizationUri("https://example.com/auth");, +		provider.setTokenUri("https://example.com/token");, +		provider.setUserInfoUri("https://example.com/info");, +		provider.setJwkSetUri("https://example.com/jwk");, +		registration.setRedirectUri("https://example.com/redirect");, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/reactive/ReactiveOAuth2ClientAutoConfigurationTests.java]