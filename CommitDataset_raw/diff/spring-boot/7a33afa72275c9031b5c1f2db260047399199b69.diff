[+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import java.nio.charset.Charset;, +import org.springframework.util.StreamUtils;, +				printBanner(environment);, +	 * Print a custom banner message to the console, optionally extracting its location or, +	 * content from the Environment (banner.location and banner.charset). The defaults are, +	 * banner.location=classpath:banner.txt, banner.charest=UTF-8. If the banner file does, +	 * not exist or cannot be printed, a simple default is created., +	 * , +	 * @see #setShowBanner(boolean), +	 * @see #printBanner(), +	 */, +	protected void printBanner(Environment environment) {, +		String location = environment.getProperty("banner.location", "banner.txt");, +		ResourceLoader resourceLoader = this.resourceLoader != null ? this.resourceLoader, +				: new DefaultResourceLoader(getClassLoader());, +		Resource resource = resourceLoader.getResource(location);, +		if (resource.exists()) {, +			try {, +				System.out.println(StreamUtils.copyToString(, +						resource.getInputStream(),, +						environment.getProperty("banner.charset", Charset.class,, +								Charset.forName("UTF-8"))));, +				return;, +			}, +			catch (Exception e) {, +				System.out.println("Banner not printable: " + resource + " (", +						+ e.getClass() + ": '" + e.getMessage() + "')");, +			}, +		}, +		printBanner();, +	}, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import java.nio.charset.Charset;, +import org.springframework.util.StreamUtils;, +				printBanner(environment);, +	 * Print a custom banner message to the console, optionally extracting its location or, +	 * content from the Environment (banner.location and banner.charset). The defaults are, +	 * banner.location=classpath:banner.txt, banner.charest=UTF-8. If the banner file does, +	 * not exist or cannot be printed, a simple default is created., +	 * , +	 * @see #setShowBanner(boolean), +	 * @see #printBanner(), +	 */, +	protected void printBanner(Environment environment) {, +		String location = environment.getProperty("banner.location", "banner.txt");, +		ResourceLoader resourceLoader = this.resourceLoader != null ? this.resourceLoader, +				: new DefaultResourceLoader(getClassLoader());, +		Resource resource = resourceLoader.getResource(location);, +		if (resource.exists()) {, +			try {, +				System.out.println(StreamUtils.copyToString(, +						resource.getInputStream(),, +						environment.getProperty("banner.charset", Charset.class,, +								Charset.forName("UTF-8"))));, +				return;, +			}, +			catch (Exception e) {, +				System.out.println("Banner not printable: " + resource + " (", +						+ e.getClass() + ": '" + e.getMessage() + "')");, +			}, +		}, +		printBanner();, +	}, +, +	/**, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		application.run("--banner.location=classpath:test-banner.txt");, +		verify(application, never()).printBanner();, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +import java.nio.charset.Charset;, +import org.springframework.util.StreamUtils;, +				printBanner(environment);, +	 * Print a custom banner message to the console, optionally extracting its location or, +	 * content from the Environment (banner.location and banner.charset). The defaults are, +	 * banner.location=classpath:banner.txt, banner.charest=UTF-8. If the banner file does, +	 * not exist or cannot be printed, a simple default is created., +	 * , +	 * @see #setShowBanner(boolean), +	 * @see #printBanner(), +	 */, +	protected void printBanner(Environment environment) {, +		String location = environment.getProperty("banner.location", "banner.txt");, +		ResourceLoader resourceLoader = this.resourceLoader != null ? this.resourceLoader, +				: new DefaultResourceLoader(getClassLoader());, +		Resource resource = resourceLoader.getResource(location);, +		if (resource.exists()) {, +			try {, +				System.out.println(StreamUtils.copyToString(, +						resource.getInputStream(),, +						environment.getProperty("banner.charset", Charset.class,, +								Charset.forName("UTF-8"))));, +				return;, +			}, +			catch (Exception e) {, +				System.out.println("Banner not printable: " + resource + " (", +						+ e.getClass() + ": '" + e.getMessage() + "')");, +			}]