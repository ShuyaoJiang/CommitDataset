[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, +			Neo4jAutoConfiguration.class,, +			Neo4jAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, +			Neo4jAutoConfiguration.class,, +			Neo4jAutoConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +		MongoRepositoryConfigurationExtension.class }), +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, +			Neo4jAutoConfiguration.class,, +			Neo4jAutoConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +		MongoRepositoryConfigurationExtension.class }), +++ /dev/null, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, +			Neo4jAutoConfiguration.class,, +			Neo4jAutoConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +		MongoRepositoryConfigurationExtension.class }), +++ /dev/null, +++ /dev/null, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, +			Neo4jAutoConfiguration.class,, +			Neo4jAutoConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +		MongoRepositoryConfigurationExtension.class }), +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, + * @since 1.4.0, +@Import(Neo4jRepositoriesAutoConfigureRegistrar.class), +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, +			Neo4jAutoConfiguration.class,, +			Neo4jAutoConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +		MongoRepositoryConfigurationExtension.class }), +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, + * @since 1.4.0, +@Import(Neo4jRepositoriesAutoConfigureRegistrar.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfigureRegistrar.java, + * Copyright 2012-2016 the original author or authors., + * @author Michael Hunger, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, +			Neo4jAutoConfiguration.class,, +			Neo4jAutoConfiguration.class,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.java, +@ConditionalOnMissingBean({ MongoRepositoryFactoryBean.class,, +		MongoRepositoryConfigurationExtension.class }), +++ /dev/null, +++ /dev/null, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfiguration.java, + * Copyright 2012-2016 the original author or authors., +import org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration;, + * @since 1.4.0, +@Import(Neo4jRepositoriesAutoConfigureRegistrar.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/Neo4jRepositoriesAutoConfigureRegistrar.java, + * Copyright 2012-2016 the original author or authors., + * @author Michael Hunger, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/neo4j/Neo4jAutoConfiguration.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.neo4j;, +, +import java.util.List;, +, +import org.neo4j.ogm.session.Neo4jSession;, +import org.neo4j.ogm.session.Session;, +import org.neo4j.ogm.session.SessionFactory;]