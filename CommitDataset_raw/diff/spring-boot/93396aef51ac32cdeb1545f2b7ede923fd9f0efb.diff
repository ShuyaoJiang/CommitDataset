[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +				.setConnectTimeout(5000).setReadTimeout(2000).build()).build();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +				.setConnectTimeout(5000).setReadTimeout(2000).build()).build();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java, +	 * Sets the connection timeout in milliseconds on the underlying, +	 * @param connectTimeout the connection timeout in milliseconds, +	 * {@link RequestFactoryCustomizer} to set the connection timeout., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +				.setConnectTimeout(5000).setReadTimeout(2000).build()).build();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java, +	 * Sets the connection timeout in milliseconds on the underlying, +	 * @param connectTimeout the connection timeout in milliseconds, +	 * {@link RequestFactoryCustomizer} to set the connection timeout., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder.java, +	private Integer connectTimeout;, +	 * @param connectTimeout the connection timeout in milliseconds, +	public HttpWebServiceMessageSenderBuilder setConnectTimeout(int connectTimeout) {, +		this.connectTimeout = connectTimeout;, +		if (this.connectTimeout != null) {, +			new TimeoutRequestFactoryCustomizer(this.connectTimeout, "setConnectTimeout"), +					.customize(requestFactory);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +				.setConnectTimeout(5000).setReadTimeout(2000).build()).build();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java, +	 * Sets the connection timeout in milliseconds on the underlying, +	 * @param connectTimeout the connection timeout in milliseconds, +	 * {@link RequestFactoryCustomizer} to set the connection timeout., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder.java, +	private Integer connectTimeout;, +	 * @param connectTimeout the connection timeout in milliseconds, +	public HttpWebServiceMessageSenderBuilder setConnectTimeout(int connectTimeout) {, +		this.connectTimeout = connectTimeout;, +		if (this.connectTimeout != null) {, +			new TimeoutRequestFactoryCustomizer(this.connectTimeout, "setConnectTimeout"), +					.customize(requestFactory);, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilderOkHttp3IntegrationTests.java, +		WebServiceMessageSender messageSender = this.builder.setConnectTimeout(5000), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +				.setConnectTimeout(5000).setReadTimeout(2000).build()).build();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java, +	 * Sets the connection timeout in milliseconds on the underlying, +	 * @param connectTimeout the connection timeout in milliseconds, +	 * {@link RequestFactoryCustomizer} to set the connection timeout., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder.java, +	private Integer connectTimeout;, +	 * @param connectTimeout the connection timeout in milliseconds, +	public HttpWebServiceMessageSenderBuilder setConnectTimeout(int connectTimeout) {, +		this.connectTimeout = connectTimeout;, +		if (this.connectTimeout != null) {, +			new TimeoutRequestFactoryCustomizer(this.connectTimeout, "setConnectTimeout"), +					.customize(requestFactory);, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilderOkHttp3IntegrationTests.java, +		WebServiceMessageSender messageSender = this.builder.setConnectTimeout(5000), +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilderSimpleIntegrationTests.java, +		WebServiceMessageSender messageSender = this.builder.setConnectTimeout(5000), +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +				.setConnectTimeout(5000).setReadTimeout(2000).build()).build();, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java, +	 * Sets the connection timeout in milliseconds on the underlying, +	 * @param connectTimeout the connection timeout in milliseconds, +	 * {@link RequestFactoryCustomizer} to set the connection timeout., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder.java, +	private Integer connectTimeout;, +	 * @param connectTimeout the connection timeout in milliseconds, +	public HttpWebServiceMessageSenderBuilder setConnectTimeout(int connectTimeout) {, +		this.connectTimeout = connectTimeout;, +		if (this.connectTimeout != null) {, +			new TimeoutRequestFactoryCustomizer(this.connectTimeout, "setConnectTimeout"), +					.customize(requestFactory);, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilderOkHttp3IntegrationTests.java, +		WebServiceMessageSender messageSender = this.builder.setConnectTimeout(5000), +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilderSimpleIntegrationTests.java, +		WebServiceMessageSender messageSender = this.builder.setConnectTimeout(5000), +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilderTests.java, +						.setConnectTimeout(5000).setReadTimeout(2000));, +	public void buildUsesHttpComponentsByDefault() {, +				new HttpWebServiceMessageSenderBuilder().setConnectTimeout(5000)]