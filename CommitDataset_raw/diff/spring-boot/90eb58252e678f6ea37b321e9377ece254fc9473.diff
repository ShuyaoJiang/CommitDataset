[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java, +import java.net.URI;, +import java.net.URISyntaxException;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, + * @author Marco Aust, +	private static final Log logger = LogFactory.getLog(RedisAutoConfiguration.class);, +, +			if (StringUtils.hasText(this.properties.getUrl())) {, +				if (this.properties.getUrl().startsWith("rediss://")) {, +					factory.setUseSsl(true);, +				}, +				try {, +					URI redisURI = new URI(this.properties.getUrl());, +					factory.setHostName(redisURI.getHost());, +					factory.setPort(redisURI.getPort());, +					if (redisURI.getUserInfo() != null) {, +						factory.setPassword(redisURI.getUserInfo().split(":", 2)[1]);, +					}, +				}, +				catch (URISyntaxException e) {, +					logger.error("Incorrect spring.redis.url", e);, +				}, +			}, +			else {, +			}, +			if (this.properties.isSsl()) {, +				factory.setUseSsl(true);, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java, +import java.net.URI;, +import java.net.URISyntaxException;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, + * @author Marco Aust, +	private static final Log logger = LogFactory.getLog(RedisAutoConfiguration.class);, +, +			if (StringUtils.hasText(this.properties.getUrl())) {, +				if (this.properties.getUrl().startsWith("rediss://")) {, +					factory.setUseSsl(true);, +				}, +				try {, +					URI redisURI = new URI(this.properties.getUrl());, +					factory.setHostName(redisURI.getHost());, +					factory.setPort(redisURI.getPort());, +					if (redisURI.getUserInfo() != null) {, +						factory.setPassword(redisURI.getUserInfo().split(":", 2)[1]);, +					}, +				}, +				catch (URISyntaxException e) {, +					logger.error("Incorrect spring.redis.url", e);, +				}, +			}, +			else {, +			}, +			if (this.properties.isSsl()) {, +				factory.setUseSsl(true);, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisProperties.java, + * @author Marco Aust, +	 * Redis url, which will overrule host, port and password if set., +	 */, +	private String url;, +, +	/**, +	 * Enable SSL., +	 */, +	private boolean ssl;, +, +	/**, +	public String getUrl() {, +		return this.url;, +	}, +, +	public void setUrl(String url) {, +		this.url = url;, +	}, +, +	public boolean isSsl() {, +		return this.ssl;, +	}, +, +	public void setSsl(boolean ssl) {, +		this.ssl = ssl;, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java, +import java.net.URI;, +import java.net.URISyntaxException;, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, + * @author Marco Aust, +	private static final Log logger = LogFactory.getLog(RedisAutoConfiguration.class);, +, +			if (StringUtils.hasText(this.properties.getUrl())) {, +				if (this.properties.getUrl().startsWith("rediss://")) {, +					factory.setUseSsl(true);, +				}, +				try {, +					URI redisURI = new URI(this.properties.getUrl());]