[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +If you define a `@Configuration` with a `WebSecurityConfigurerAdapter` in your application,, +it switches off the default webapp security settings in Spring Boot., +If you provide a `@Bean` of type `AuthenticationManager`, `AuthenticationProvider`, +or `UserDetailsService`, the default `@Bean` for `InMemoryUserDetailsManager` is not, +The easiest way to add user accounts is to provide your own `UserDetailsService` bean., +To configure Spring Security to require a secure channel for all (or some), +requests, consider adding your own `WebSecurityConfigurerAdapter` that adds the following, +`HttpSecurity` configuration:, +[source,java,indent=0,subs="verbatim,quotes,attributes"], +----, +	@Configuration, +	public class SslWebSecurityConfigurerAdapter extends WebSecurityConfigurerAdapter {, +, +		@Override, +		protected void configure(HttpSecurity http) throws Exception {, +			// Customize the application security, +			http.requiresChannel().anyRequest().requiresSecure();, +		}, +, +	}, +----]