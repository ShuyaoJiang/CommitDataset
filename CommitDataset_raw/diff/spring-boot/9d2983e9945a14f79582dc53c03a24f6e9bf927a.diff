[+++ b/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextCloserApplicationListener.java, +import java.lang.ref.WeakReference;, +, + * Listener that closes the application context if its parent is closed. It listens for refresh events and grabs the, + * current context from there, and then listens for closed events and propagates it down the hierarchy., +public class ParentContextCloserApplicationListener implements ApplicationListener<ParentContextAvailableEvent>,, +		Ordered {, +	public final void onApplicationEvent(ParentContextAvailableEvent event) {, +			ConfigurableApplicationContext parent = (ConfigurableApplicationContext) child.getParent();, +			parent.addApplicationListener(createContextCloserListener(child));, +	/**, +	 * Subclasses may override to create their own subclass of ContextCloserListener. This still enforces the use of a, +	 * weak reference., +	 */, +	protected ContextCloserListener createContextCloserListener(ConfigurableApplicationContext child) {, +		return new ContextCloserListener(child);, +	}, +	protected static class ContextCloserListener implements ApplicationListener<ContextClosedEvent> {, +, +		private WeakReference<ConfigurableApplicationContext> contextRef;, +			this.contextRef = new WeakReference<ConfigurableApplicationContext>(context);, +			ConfigurableApplicationContext context = contextRef.get();, +			if (context != null && event.getApplicationContext() == context.getParent() && context.isActive()) {, +				context.close();]