[+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/Launcher.java, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/Launcher.java, +++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/PropertiesLauncher.java, + * Copyright 2012-2015 the original author or authors., +	private static final String DEBUG = "loader.debug";, +			log("Found: " + config);, +				log("Adding resolved properties to System properties");, +			log("Not found: " + config);, +		log("Trying classpath: " + config);, +		log("Trying file: " + config);, +		log("Nested archive paths: " + this.paths);, +			log("Using custom class loader: " + customLoaderClassName);, +			log("Property '" + propertyKey + "' from environment: " + value);, +			log("Property '" + propertyKey + "' from properties: " + value);, +				log("Property '" + manifestKey + "' from home directory manifest: ", +						+ value);, +				log("Property '" + manifestKey + "' from archive manifest: " + value);, +			log("Adding classpath entries from " + file);, +			log("Adding classpath entries from archive " + archive.getUrl() + root);, +			log("Adding classpath entries from nested " + nested.getUrl() + root);, +	private void log(String message) {, +		if (Boolean.getBoolean(DEBUG)) {, +			// We shouldn't use java.util.logging because of classpath issues so we, +			// just sysout log messages when "loader.debug" is true, +			System.out.println(message);, +		}, +	}, +]