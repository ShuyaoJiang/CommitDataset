[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +import org.springframework.http.HttpMethod;, + * <p>, + * {@link Endpoint}s that support other {@link HttpMethod}s than {@link HttpMethod#GET}, + * should override {@link #methods()} and provide a list of supported methods., + * @author Christian Dupuis, +	protected static final HttpMethod[] NO_HTTP_METHOD = new HttpMethod[0];, +, +	protected static final HttpMethod[] GET_HTTP_METHOD = new HttpMethod[] { HttpMethod.GET };, +, +	protected static final HttpMethod[] POST_HTTP_METHOD = new HttpMethod[] { HttpMethod.POST };, +, +	public MediaType[] produces() {, +	@Override, +	public HttpMethod[] methods() {, +		return GET_HTTP_METHOD;, +	}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +import org.springframework.http.HttpMethod;, + * <p>, + * {@link Endpoint}s that support other {@link HttpMethod}s than {@link HttpMethod#GET}, + * should override {@link #methods()} and provide a list of supported methods., + * @author Christian Dupuis, +	protected static final HttpMethod[] NO_HTTP_METHOD = new HttpMethod[0];, +, +	protected static final HttpMethod[] GET_HTTP_METHOD = new HttpMethod[] { HttpMethod.GET };, +, +	protected static final HttpMethod[] POST_HTTP_METHOD = new HttpMethod[] { HttpMethod.POST };, +, +	public MediaType[] produces() {, +	@Override, +	public HttpMethod[] methods() {, +		return GET_HTTP_METHOD;, +	}, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +import org.springframework.http.HttpMethod;, + * <p>, + * {@link Endpoint}s that support other {@link HttpMethod}s than {@link HttpMethod#GET}, + * should override {@link #methods()} and provide a list of supported methods., + * @author Christian Dupuis, +	protected static final HttpMethod[] NO_HTTP_METHOD = new HttpMethod[0];, +, +	protected static final HttpMethod[] GET_HTTP_METHOD = new HttpMethod[] { HttpMethod.GET };, +, +	protected static final HttpMethod[] POST_HTTP_METHOD = new HttpMethod[] { HttpMethod.POST };, +, +	public MediaType[] produces() {, +	@Override, +	public HttpMethod[] methods() {, +		return GET_HTTP_METHOD;, +	}, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/BeansEndpoint.java, +	public MediaType[] produces() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +import org.springframework.http.HttpMethod;, + * <p>, + * {@link Endpoint}s that support other {@link HttpMethod}s than {@link HttpMethod#GET}, + * should override {@link #methods()} and provide a list of supported methods., + * @author Christian Dupuis, +	protected static final HttpMethod[] NO_HTTP_METHOD = new HttpMethod[0];, +, +	protected static final HttpMethod[] GET_HTTP_METHOD = new HttpMethod[] { HttpMethod.GET };, +, +	protected static final HttpMethod[] POST_HTTP_METHOD = new HttpMethod[] { HttpMethod.POST };, +, +	public MediaType[] produces() {, +	@Override, +	public HttpMethod[] methods() {, +		return GET_HTTP_METHOD;, +	}, +++ /dev/null, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/BeansEndpoint.java, +	public MediaType[] produces() {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/Endpoint.java, +import org.springframework.http.HttpMethod;, + * @author Christian Dupuis, +	MediaType[] produces();, +, +	/**, +	 * Returns the {@link HttpMethod}s that this endpoint supports., +	 */, +	HttpMethod[] methods();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AbstractEndpoint.java, +import org.springframework.http.HttpMethod;, + * <p>, + * {@link Endpoint}s that support other {@link HttpMethod}s than {@link HttpMethod#GET}, + * should override {@link #methods()} and provide a list of supported methods., + * @author Christian Dupuis, +	protected static final HttpMethod[] NO_HTTP_METHOD = new HttpMethod[0];, +, +	protected static final HttpMethod[] GET_HTTP_METHOD = new HttpMethod[] { HttpMethod.GET };, +, +	protected static final HttpMethod[] POST_HTTP_METHOD = new HttpMethod[] { HttpMethod.POST };, +, +	public MediaType[] produces() {, +	@Override, +	public HttpMethod[] methods() {, +		return GET_HTTP_METHOD;]