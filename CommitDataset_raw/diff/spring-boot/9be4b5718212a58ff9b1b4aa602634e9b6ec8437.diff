[+++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	/**, +	 * Name of the application configuration {@link PropertySource}., +	 */, +	public static final String APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME = "applicationConfigurationProperties";, +, +, +			super(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME, sources);, +			String name = APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME;, +					.get(name);, +				propertySources.remove(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	/**, +	 * Name of the application configuration {@link PropertySource}., +	 */, +	public static final String APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME = "applicationConfigurationProperties";, +, +, +			super(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME, sources);, +			String name = APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME;, +					.get(name);, +				propertySources.remove(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/RandomValuePropertySource.java, +	/**, +	 * Name of the random {@link PropertySource}., +	 */, +	public static final String RANDOM_PROPERTY_SOURCE_NAME = "random";, +, +	public RandomValuePropertySource() {, +		this(RANDOM_PROPERTY_SOURCE_NAME);, +	}, +, +				new RandomValuePropertySource(RANDOM_PROPERTY_SOURCE_NAME));, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	/**, +	 * Name of the application configuration {@link PropertySource}., +	 */, +	public static final String APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME = "applicationConfigurationProperties";, +, +, +			super(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME, sources);, +			String name = APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME;, +					.get(name);, +				propertySources.remove(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/RandomValuePropertySource.java, +	/**, +	 * Name of the random {@link PropertySource}., +	 */, +	public static final String RANDOM_PROPERTY_SOURCE_NAME = "random";, +, +	public RandomValuePropertySource() {, +		this(RANDOM_PROPERTY_SOURCE_NAME);, +	}, +, +				new RandomValuePropertySource(RANDOM_PROPERTY_SOURCE_NAME));, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/PropertiesConfigurationFactoryTests.java, + * Copyright 2012-2015 the original author or authors., +		propertySources.addLast(new RandomValuePropertySource());, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	/**, +	 * Name of the application configuration {@link PropertySource}., +	 */, +	public static final String APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME = "applicationConfigurationProperties";, +, +, +			super(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME, sources);, +			String name = APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME;, +					.get(name);, +				propertySources.remove(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/RandomValuePropertySource.java, +	/**, +	 * Name of the random {@link PropertySource}., +	 */, +	public static final String RANDOM_PROPERTY_SOURCE_NAME = "random";, +, +	public RandomValuePropertySource() {, +		this(RANDOM_PROPERTY_SOURCE_NAME);, +	}, +, +				new RandomValuePropertySource(RANDOM_PROPERTY_SOURCE_NAME));, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/PropertiesConfigurationFactoryTests.java, + * Copyright 2012-2015 the original author or authors., +		propertySources.addLast(new RandomValuePropertySource());, +++ b/spring-boot/src/test/java/org/springframework/boot/context/config/ConfigFileApplicationListenerTests.java, +				.getPropertySources(), +				.get(ConfigFileApplicationListener.APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java, +	/**, +	 * Name of the application configuration {@link PropertySource}., +	 */, +	public static final String APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME = "applicationConfigurationProperties";, +, +, +			super(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME, sources);, +			String name = APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME;, +					.get(name);, +				propertySources.remove(APPLICATION_CONFIGURATION_PROPERTY_SOURCE_NAME);, +++ b/spring-boot/src/main/java/org/springframework/boot/context/config/RandomValuePropertySource.java, +	/**, +	 * Name of the random {@link PropertySource}.]