[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;, + * @author Dominic Gunn, +		private final DataSourceProperties dataSourceProperties;, +, +				DataSourceProperties dataSourceProperties, ResourceLoader resourceLoader,, +				ObjectProvider<DataSource> dataSource,, +			this.dataSourceProperties = dataSourceProperties;, +				String url = this.properties.getUrl() == null, +						? this.dataSourceProperties.getUrl(), +						: this.properties.getUrl();, +, +				String user = this.properties.getUser() == null, +						? this.dataSourceProperties.getUsername(), +						: this.properties.getUser();, +, +				String password = this.properties.getPassword() == null, +						? this.dataSourceProperties.getPassword(), +						: this.properties.getPassword();, +, +				flyway.setDataSource(url, user, password,, +				Assert.state(exists, () -> "Cannot find migrations location in: ", +						+ Arrays.asList(locations), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;, + * @author Dominic Gunn, +		private final DataSourceProperties dataSourceProperties;, +, +				DataSourceProperties dataSourceProperties, ResourceLoader resourceLoader,, +				ObjectProvider<DataSource> dataSource,, +			this.dataSourceProperties = dataSourceProperties;, +				String url = this.properties.getUrl() == null, +						? this.dataSourceProperties.getUrl(), +						: this.properties.getUrl();, +, +				String user = this.properties.getUser() == null, +						? this.dataSourceProperties.getUsername(), +						: this.properties.getUser();, +, +				String password = this.properties.getPassword() == null, +						? this.dataSourceProperties.getPassword(), +						: this.properties.getPassword();, +, +				flyway.setDataSource(url, user, password,, +				Assert.state(exists, () -> "Cannot find migrations location in: ", +						+ Arrays.asList(locations), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +		return this.url != null || this.user != null;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;, + * @author Dominic Gunn, +		private final DataSourceProperties dataSourceProperties;, +, +				DataSourceProperties dataSourceProperties, ResourceLoader resourceLoader,, +				ObjectProvider<DataSource> dataSource,, +			this.dataSourceProperties = dataSourceProperties;, +				String url = this.properties.getUrl() == null, +						? this.dataSourceProperties.getUrl(), +						: this.properties.getUrl();, +, +				String user = this.properties.getUser() == null, +						? this.dataSourceProperties.getUsername(), +						: this.properties.getUser();, +, +				String password = this.properties.getPassword() == null, +						? this.dataSourceProperties.getPassword(), +						: this.properties.getPassword();, +, +				flyway.setDataSource(url, user, password,, +				Assert.state(exists, () -> "Cannot find migrations location in: ", +						+ Arrays.asList(locations), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayProperties.java, +		return this.url != null || this.user != null;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration.java, +import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;, + * @author Dominic Gunn, +		private final DataSourceProperties dataSourceProperties;, +, +				DataSourceProperties dataSourceProperties, ResourceLoader resourceLoader,, +				ObjectProvider<DataSource> dataSource,, +			this.dataSourceProperties = dataSourceProperties;, +			if (this.properties.getUrl() == null && this.properties.getUser() == null) {, +			String url = this.properties.getUrl() == null, +					? this.dataSourceProperties.getUrl(), +					: this.properties.getUrl();, +, +			String user = this.properties.getUser() == null, +					? this.dataSourceProperties.getUsername(), +					: this.properties.getUser();, +, +			String password = this.properties.getPassword() == null, +					? this.dataSourceProperties.getPassword(), +					: this.properties.getPassword();, +, +			return DataSourceBuilder.create().url(url).username(user).password(password), +					.build();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;, + * @author Dominic Gunn, +		private final DataSourceProperties dataSourceProperties;]