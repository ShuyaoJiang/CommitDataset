[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/PrefixMetricGroupExporterTests.java, +		assertThat(this.writer.findAll("counter.foo").iterator().next().getValue()), +				.isEqualTo(2L);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/PrefixMetricGroupExporterTests.java, +		assertThat(this.writer.findAll("counter.foo").iterator().next().getValue()), +				.isEqualTo(2L);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +				"No auto configuration classes found in META-INF/spring.factories. If you", +						+ "are using a custom packaging, make sure that file is correct.");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/PrefixMetricGroupExporterTests.java, +		assertThat(this.writer.findAll("counter.foo").iterator().next().getValue()), +				.isEqualTo(2L);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +				"No auto configuration classes found in META-INF/spring.factories. If you", +						+ "are using a custom packaging, make sure that file is correct.");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnBeanCondition.java, +					.append(" found a primary candidate amongst the following "), +					.append(matching);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/PrefixMetricGroupExporterTests.java, +		assertThat(this.writer.findAll("counter.foo").iterator().next().getValue()), +				.isEqualTo(2L);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +				"No auto configuration classes found in META-INF/spring.factories. If you", +						+ "are using a custom packaging, make sure that file is correct.");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnBeanCondition.java, +					.append(" found a primary candidate amongst the following "), +					.append(matching);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnClassCondition.java, +					.append(StringUtils.collectionToCommaDelimitedString(, +							getMatchingClasses(onMissingClasses, MatchType.MISSING,, +									context)));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/PrefixMetricGroupExporterTests.java, +		assertThat(this.writer.findAll("counter.foo").iterator().next().getValue()), +				.isEqualTo(2L);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +				"No auto configuration classes found in META-INF/spring.factories. If you", +						+ "are using a custom packaging, make sure that file is correct.");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnBeanCondition.java, +					.append(" found a primary candidate amongst the following "), +					.append(matching);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnClassCondition.java, +					.append(StringUtils.collectionToCommaDelimitedString(, +							getMatchingClasses(onMissingClasses, MatchType.MISSING,, +									context)));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnPropertyCondition.java, +			message.append("missing required properties "), +					.append(expandNames(prefix, missingProperties)).append(" ");, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/PrefixMetricGroupExporterTests.java, +		assertThat(this.writer.findAll("counter.foo").iterator().next().getValue()), +				.isEqualTo(2L);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +				"No auto configuration classes found in META-INF/spring.factories. If you", +						+ "are using a custom packaging, make sure that file is correct.");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnBeanCondition.java, +					.append(" found a primary candidate amongst the following "), +					.append(matching);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnClassCondition.java, +					.append(StringUtils.collectionToCommaDelimitedString(, +							getMatchingClasses(onMissingClasses, MatchType.MISSING,, +									context)));, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnPropertyCondition.java, +			message.append("missing required properties "), +					.append(expandNames(prefix, missingProperties)).append(" ");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/neo4j/package-info.java, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/SpringApplicationHierarchyTests.java, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +			Neo4jAutoConfiguration.class, RedisAutoConfiguration.class,, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/export/PrefixMetricGroupExporterTests.java, +		assertThat(this.writer.findAll("counter.foo").iterator().next().getValue()), +				.isEqualTo(2L);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/EnableAutoConfigurationImportSelector.java, +				"No auto configuration classes found in META-INF/spring.factories. If you", +						+ "are using a custom packaging, make sure that file is correct.");, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnBeanCondition.java, +					.append(" found a primary candidate amongst the following "), +					.append(matching);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnClassCondition.java, +					.append(StringUtils.collectionToCommaDelimitedString(, +							getMatchingClasses(onMissingClasses, MatchType.MISSING,]