[+++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessor.java, +import javax.lang.model.element.ElementKind;, +				if ((this.typeUtils.isEnclosedIn(returnType, element) && returnType.getKind() != ElementKind.ENUM), +						|| isNested) {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessor.java, +import javax.lang.model.element.ElementKind;, +				if ((this.typeUtils.isEnclosedIn(returnType, element) && returnType.getKind() != ElementKind.ENUM), +						|| isNested) {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessorTests.java, +		assertThat(metadata, containsProperty("config.fourth").ofType(InnerClassProperties.Fourth.class));, +		assertThat(metadata, not(containsGroup("config.fourth")));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessor.java, +import javax.lang.model.element.ElementKind;, +				if ((this.typeUtils.isEnclosedIn(returnType, element) && returnType.getKind() != ElementKind.ENUM), +						|| isNested) {, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessorTests.java, +		assertThat(metadata, containsProperty("config.fourth").ofType(InnerClassProperties.Fourth.class));, +		assertThat(metadata, not(containsGroup("config.fourth")));, +++ b/spring-boot-tools/spring-boot-configuration-processor/src/test/java/org/springframework/boot/configurationsample/specific/InnerClassProperties.java, +	private Fourth fourth;, +, +	public Fourth getFourth() {, +		return fourth;, +	}, +, +	public void setFourth(Fourth fourth) {, +		this.fourth = fourth;, +	}, +, +	public static enum Fourth {, +		YES,, +		NO, +	}, +]