[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, +import static org.mockito.ArgumentMatchers.any;, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, +import static org.mockito.ArgumentMatchers.any;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, +import static org.mockito.ArgumentMatchers.argThat;, +import static org.mockito.ArgumentMatchers.isA;, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, +import static org.mockito.ArgumentMatchers.any;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, +import static org.mockito.ArgumentMatchers.argThat;, +import static org.mockito.ArgumentMatchers.isA;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, +import static org.mockito.ArgumentMatchers.any;, +import static org.mockito.ArgumentMatchers.eq;, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, +import static org.mockito.ArgumentMatchers.any;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, +import static org.mockito.ArgumentMatchers.argThat;, +import static org.mockito.ArgumentMatchers.isA;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, +import static org.mockito.ArgumentMatchers.any;, +import static org.mockito.ArgumentMatchers.eq;, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/SpringBootMockUtil.java, +		private final MockUtil mockUtil = BeanUtils.instantiateClass(MockUtil.class);, +		private static final MockingProgress mockingProgress = createThreadSafeMockingProgress();, +		private final Method reportMatcherMethod = ReflectionUtils, +				.findMethod(ArgumentMatcherStorage.class, "reportMatcher", Matcher.class);, +		private static final Constructor<MockAwareVerificationMode> mockAwareVerificationModeConstructor = getMockAwareVerificationModeConstructor();, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, +import static org.mockito.ArgumentMatchers.any;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, +import static org.mockito.ArgumentMatchers.argThat;, +import static org.mockito.ArgumentMatchers.isA;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, +import static org.mockito.ArgumentMatchers.any;, +import static org.mockito.ArgumentMatchers.eq;, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/SpringBootMockUtil.java, +		private final MockUtil mockUtil = BeanUtils.instantiateClass(MockUtil.class);, +		private static final MockingProgress mockingProgress = createThreadSafeMockingProgress();, +		private final Method reportMatcherMethod = ReflectionUtils, +				.findMethod(ArgumentMatcherStorage.class, "reportMatcher", Matcher.class);, +		private static final Constructor<MockAwareVerificationMode> mockAwareVerificationModeConstructor = getMockAwareVerificationModeConstructor();, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		ArgumentCaptor<RuntimeException> exceptionCaptor = ArgumentCaptor, +				.forClass(RuntimeException.class);, +		verify(handler).registerLoggedException(exceptionCaptor.capture());, +		assertThat(exceptionCaptor.getValue()), +				.hasCauseInstanceOf(RefreshFailureException.class);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, +import static org.mockito.ArgumentMatchers.any;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, +import static org.mockito.ArgumentMatchers.argThat;, +import static org.mockito.ArgumentMatchers.isA;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, +import static org.mockito.ArgumentMatchers.any;, +import static org.mockito.ArgumentMatchers.eq;, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/SpringBootMockUtil.java, +		private final MockUtil mockUtil = BeanUtils.instantiateClass(MockUtil.class);, +		private static final MockingProgress mockingProgress = createThreadSafeMockingProgress();, +		private final Method reportMatcherMethod = ReflectionUtils, +				.findMethod(ArgumentMatcherStorage.class, "reportMatcher", Matcher.class);, +		private static final Constructor<MockAwareVerificationMode> mockAwareVerificationModeConstructor = getMockAwareVerificationModeConstructor();, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		ArgumentCaptor<RuntimeException> exceptionCaptor = ArgumentCaptor, +				.forClass(RuntimeException.class);, +		verify(handler).registerLoggedException(exceptionCaptor.capture());, +		assertThat(exceptionCaptor.getValue()), +				.hasCauseInstanceOf(RefreshFailureException.class);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/MockEmbeddedServletContainerFactory.java, +import static org.mockito.ArgumentMatchers.anyString;, +								initParameters.put(invocation.getArgument(0),, +								return initParameters.get(invocation.getArgument(0));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, +import static org.mockito.ArgumentMatchers.any;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, +import static org.mockito.ArgumentMatchers.argThat;, +import static org.mockito.ArgumentMatchers.isA;, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, +import static org.mockito.ArgumentMatchers.any;, +import static org.mockito.ArgumentMatchers.eq;, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/SpringBootMockUtil.java, +		private final MockUtil mockUtil = BeanUtils.instantiateClass(MockUtil.class);, +		private static final MockingProgress mockingProgress = createThreadSafeMockingProgress();, +		private final Method reportMatcherMethod = ReflectionUtils, +				.findMethod(ArgumentMatcherStorage.class, "reportMatcher", Matcher.class);, +		private static final Constructor<MockAwareVerificationMode> mockAwareVerificationModeConstructor = getMockAwareVerificationModeConstructor();, +++ b/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		ArgumentCaptor<RuntimeException> exceptionCaptor = ArgumentCaptor, +				.forClass(RuntimeException.class);, +		verify(handler).registerLoggedException(exceptionCaptor.capture());, +		assertThat(exceptionCaptor.getValue()), +				.hasCauseInstanceOf(RefreshFailureException.class);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/MockEmbeddedServletContainerFactory.java, +import static org.mockito.ArgumentMatchers.anyString;, +								initParameters.put(invocation.getArgument(0),, +								return initParameters.get(invocation.getArgument(0));, +++ b/spring-boot/src/test/java/org/springframework/boot/web/client/RootUriTemplateHandlerTests.java, +import static org.mockito.ArgumentMatchers.anyString;, +		given(this.delegate.expand(anyString(), (Object[]) any())).willReturn(this.uri);]