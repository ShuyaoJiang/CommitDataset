[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +	@Order(SecurityProperties.IGNORED_ORDER + 1), +	@Order(ManagementServerProperties.BASIC_AUTH_ORDER), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +	@Order(SecurityProperties.IGNORED_ORDER + 1), +	@Order(ManagementServerProperties.BASIC_AUTH_ORDER), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import org.springframework.boot.autoconfigure.security.SecurityProperties;, +	/**, +	 * Order applied to the WebSecurityConfigurerAdapter that is used to configure basic, +	 * authentication for management endpoints. If you want to add your own authentication, +	 * for all or some of those endpoints the best thing to do is add your own, +	 * WebSecurityConfigurerAdapter with lower order., +	 */, +	public static final int BASIC_AUTH_ORDER = SecurityProperties.BASIC_AUTH_ORDER - 5;, +, +	/**, +	 * Order after the basic authentication access control provided automatically for the, +	 * management endpoints. This is a useful place to put user-defined access rules if, +	 * you want to override the default access rules., +	 */, +	public static final int ACCESS_OVERRIDE_ORDER = ManagementServerProperties.BASIC_AUTH_ORDER - 1;, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +	@Order(SecurityProperties.IGNORED_ORDER + 1), +	@Order(ManagementServerProperties.BASIC_AUTH_ORDER), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import org.springframework.boot.autoconfigure.security.SecurityProperties;, +	/**, +	 * Order applied to the WebSecurityConfigurerAdapter that is used to configure basic, +	 * authentication for management endpoints. If you want to add your own authentication, +	 * for all or some of those endpoints the best thing to do is add your own, +	 * WebSecurityConfigurerAdapter with lower order., +	 */, +	public static final int BASIC_AUTH_ORDER = SecurityProperties.BASIC_AUTH_ORDER - 5;, +, +	/**, +	 * Order after the basic authentication access control provided automatically for the, +	 * management endpoints. This is a useful place to put user-defined access rules if, +	 * you want to override the default access rules., +	 */, +	public static final int ACCESS_OVERRIDE_ORDER = ManagementServerProperties.BASIC_AUTH_ORDER - 1;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +import org.springframework.core.Ordered;, +	/**, +	 * Order before the basic authentication access control provided by Boot. This is a, +	 * useful place to put user-defined access rules if you want to override the default, +	 * access rules., +	 */, +	public static final int ACCESS_OVERRIDE_ORDER = SecurityProperties.BASIC_AUTH_ORDER - 1;, +, +	/**, +	 * Order applied to the WebSecurityConfigurerAdapter that is used to configure basic, +	 * authentication for application endpoints. If you want to add your own, +	 * authentication for all or some of those endpoints the best thing to do is add your, +	 * own WebSecurityConfigurerAdapter with lower order., +	 */, +	public static final int BASIC_AUTH_ORDER = Ordered.LOWEST_PRECEDENCE - 5;, +, +	/**, +	 * Order applied to the WebSecurityConfigurer that ignores standard static resource, +	 * paths., +	 */, +	public static final int IGNORED_ORDER = Ordered.HIGHEST_PRECEDENCE;, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementSecurityAutoConfiguration.java, +	@Order(SecurityProperties.IGNORED_ORDER + 1), +	@Order(ManagementServerProperties.BASIC_AUTH_ORDER), +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementServerProperties.java, +import org.springframework.boot.autoconfigure.security.SecurityProperties;, +	/**, +	 * Order applied to the WebSecurityConfigurerAdapter that is used to configure basic, +	 * authentication for management endpoints. If you want to add your own authentication, +	 * for all or some of those endpoints the best thing to do is add your own, +	 * WebSecurityConfigurerAdapter with lower order., +	 */, +	public static final int BASIC_AUTH_ORDER = SecurityProperties.BASIC_AUTH_ORDER - 5;, +, +	/**, +	 * Order after the basic authentication access control provided automatically for the, +	 * management endpoints. This is a useful place to put user-defined access rules if, +	 * you want to override the default access rules., +	 */, +	public static final int ACCESS_OVERRIDE_ORDER = ManagementServerProperties.BASIC_AUTH_ORDER - 1;, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityProperties.java, +import org.springframework.core.Ordered;, +	/**, +	 * Order before the basic authentication access control provided by Boot. This is a, +	 * useful place to put user-defined access rules if you want to override the default, +	 * access rules., +	 */, +	public static final int ACCESS_OVERRIDE_ORDER = SecurityProperties.BASIC_AUTH_ORDER - 1;, +, +	/**, +	 * Order applied to the WebSecurityConfigurerAdapter that is used to configure basic, +	 * authentication for application endpoints. If you want to add your own, +	 * authentication for all or some of those endpoints the best thing to do is add your, +	 * own WebSecurityConfigurerAdapter with lower order.]