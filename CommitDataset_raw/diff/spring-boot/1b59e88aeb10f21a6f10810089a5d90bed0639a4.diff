[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +, +, +For reactive applications, such as those using Spring WebFlux, ReactiveHealthIndicators, +provide a non-blocking contract for getting application health. Similar to a traditional, +`HealthIndicator`, health information is collected from all, +{sc-spring-boot-actuator}/health/ReactiveHealthIndicator.{sc-ext}[`ReactiveHealthIndicator`], +beans defined in your `ApplicationContext`. Regular HealthIndicators that do not check, +against a reactive API are included and executed on the elastic scheduler., +To provide custom health information from a reactive API, you can register Spring beans, +that implement the, +TIP: To handle the error automatically, consider extending from, +`AbstractReactiveHealthIndicator`., +, +, +]