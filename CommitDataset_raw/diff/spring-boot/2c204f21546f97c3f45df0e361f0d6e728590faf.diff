[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}., + * The {@link #getOrder()} value needs to be before, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}., + * The {@link #getOrder()} value needs to be before, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +	private final RemoteDevToolsProperties remote = new RemoteDevToolsProperties();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}., + * The {@link #getOrder()} value needs to be before, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +	private final RemoteDevToolsProperties remote = new RemoteDevToolsProperties();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.dateformat= # Appender pattern for log dateformat (default yyyy-MM-dd HH:mm:ss.SSS). Only supported with the default logback setup., +	server.http2.enabled=false # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}., + * The {@link #getOrder()} value needs to be before, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +	private final RemoteDevToolsProperties remote = new RemoteDevToolsProperties();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.dateformat= # Appender pattern for log dateformat (default yyyy-MM-dd HH:mm:ss.SSS). Only supported with the default logback setup., +	server.http2.enabled=false # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +must <<howto-configure-ssl, configure SSL first>>., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}., + * The {@link #getOrder()} value needs to be before, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +	private final RemoteDevToolsProperties remote = new RemoteDevToolsProperties();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.dateformat= # Appender pattern for log dateformat (default yyyy-MM-dd HH:mm:ss.SSS). Only supported with the default logback setup., +	server.http2.enabled=false # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +must <<howto-configure-ssl, configure SSL first>>., +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}., + * The {@link #getOrder()} value needs to be before, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +	private final RemoteDevToolsProperties remote = new RemoteDevToolsProperties();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.dateformat= # Appender pattern for log dateformat (default yyyy-MM-dd HH:mm:ss.SSS). Only supported with the default logback setup., +	server.http2.enabled=false # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +must <<howto-configure-ssl, configure SSL first>>., +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/util/SystemPropertyUtils.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}., + * The {@link #getOrder()} value needs to be before, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/DevToolsProperties.java, +	private final RemoteDevToolsProperties remote = new RemoteDevToolsProperties();, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.dateformat= # Appender pattern for log dateformat (default yyyy-MM-dd HH:mm:ss.SSS). Only supported with the default logback setup., +	server.http2.enabled=false # Whether to enable HTTP/2 support, if the current environment supports it., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/howto.adoc, +must <<howto-configure-ssl, configure SSL first>>., +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/context/SpringBootContextLoader.java, +++ b/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/util/SystemPropertyUtils.java, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +	private final ErrorProperties error = new ErrorProperties();, +	private final Compression compression = new Compression();, +	private final Http2 http2 = new Http2();, +++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/GenericBomAstTransformation.java, + * {@code META-INF/services/org.springframework.boot.cli.compiler.SpringBootAstTransformation}.]