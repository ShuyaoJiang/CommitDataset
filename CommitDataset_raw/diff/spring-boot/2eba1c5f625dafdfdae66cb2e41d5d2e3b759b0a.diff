[+++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +		Assert.state(launchScript.exists() && launchScript.isFile(), () ->, +				"Could not find CLI launch script " + launchScript.getAbsolutePath());, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +		Assert.state(launchScript.exists() && launchScript.isFile(), () ->, +				"Could not find CLI launch script " + launchScript.getAbsolutePath());, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/DefinitionsParser.java, +		Assert.state(isNewDefinition, () ->, +				"Duplicate " + type + " definition " + definition);, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +		Assert.state(launchScript.exists() && launchScript.isFile(), () ->, +				"Could not find CLI launch script " + launchScript.getAbsolutePath());, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/DefinitionsParser.java, +		Assert.state(isNewDefinition, () ->, +				"Duplicate " + type + " definition " + definition);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ApplicationTemp.java, +		Assert.state(file.isDirectory(), () -> "Temp location " + file, +				+ " is not a directory");, +++ b/spring-boot-project/spring-boot-cli/src/it/java/org/springframework/boot/cli/infrastructure/CommandLineInvoker.java, +		Assert.state(launchScript.exists() && launchScript.isFile(), () ->, +				"Could not find CLI launch script " + launchScript.getAbsolutePath());, +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/DefinitionsParser.java, +		Assert.state(isNewDefinition, () ->, +				"Duplicate " + type + " definition " + definition);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ApplicationTemp.java, +		Assert.state(file.isDirectory(), () -> "Temp location " + file, +				+ " is not a directory");, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java, +							Assert.state(connector.isStopped(), () -> "Connector ", +									+ connector + " has been started prematurely");]