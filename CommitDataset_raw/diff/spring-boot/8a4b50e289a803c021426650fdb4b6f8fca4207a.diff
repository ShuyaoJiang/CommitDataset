[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java, +import java.util.Collections;, +			List<Entry<String, Servlet>> servletBeans = getOrderedBeansOfType(Servlet.class);, +	private <T> List<Entry<String, T>> getOrderedBeansOfType(Class<T> type) {, +		List<Entry<String, T>> beans = new ArrayList<Entry<String, T>>();, +		Comparator<Entry<String, T>> comparator = new Comparator<Entry<String, T>>() {, +				return AnnotationAwareOrderComparator.INSTANCE.compare(o1.getValue(),, +						o2.getValue());, +		};, +		Collections.sort(beans, comparator);, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java, +import java.util.Collections;, +			List<Entry<String, Servlet>> servletBeans = getOrderedBeansOfType(Servlet.class);, +	private <T> List<Entry<String, T>> getOrderedBeansOfType(Class<T> type) {, +		List<Entry<String, T>> beans = new ArrayList<Entry<String, T>>();, +		Comparator<Entry<String, T>> comparator = new Comparator<Entry<String, T>>() {, +				return AnnotationAwareOrderComparator.INSTANCE.compare(o1.getValue(),, +						o2.getValue());, +		};, +		Collections.sort(beans, comparator);, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContextTests.java, +	public void unorderedServletContextInitializerBeans() throws Exception {, +		addEmbeddedServletContainerFactoryBean();, +		ServletContextInitializer initializer1 = mock(ServletContextInitializer.class);, +		ServletContextInitializer initializer2 = mock(ServletContextInitializer.class);, +		this.context.registerBeanDefinition("initializerBean2",, +				beanDefinition(initializer2));, +		this.context.registerBeanDefinition("initializerBean1",, +				beanDefinition(initializer1));, +		this.context.refresh();, +		ServletContext servletContext = getEmbeddedServletContainerFactory(), +				.getServletContext();, +		verify(initializer1).onStartup(servletContext);, +		verify(initializer2).onStartup(servletContext);, +	}, +, +	@Test]