[+++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/TypeUtils.java, +		this.collectionType = getDeclaredType(types, Collection.class, 1);, +		this.mapType = getDeclaredType(types, Map.class, 2);, +	}, +, +	private TypeMirror getDeclaredType(Types types, Class<?> typeClass,, +			int numberOfTypeArgs) {, +		TypeMirror[] typeArgs = new TypeMirror[numberOfTypeArgs];, +		for (int i = 0; i < typeArgs.length; i++) {, +			typeArgs[i] = types.getWildcardType(null, null);, +		}, +		TypeElement typeElement = this.env.getElementUtils(), +				.getTypeElement(typeClass.getName());, +		try {, +			return types.getDeclaredType(typeElement, typeArgs);, +		}, +		catch (IllegalArgumentException ex) {, +			// Try again without generics for older Java versions, +			return types.getDeclaredType(typeElement);, +		}]