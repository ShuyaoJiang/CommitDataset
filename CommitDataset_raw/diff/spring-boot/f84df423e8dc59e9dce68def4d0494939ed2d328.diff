[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/SecurityAutoConfiguration.java, +import javax.servlet.Filter;, +, +import org.springframework.security.config.annotation.SecurityConfigurer;, +	@Bean, +	@ConditionalOnMissingBean({ IgnoredPathsWebSecurityConfigurerAdapter.class }), +	public SecurityConfigurer<Filter, WebSecurity> ignoredPathsWebSecurityConfigurerAdapter() {, +		return new IgnoredPathsWebSecurityConfigurerAdapter();, +	}, +, +	// Get the ignored paths in early, +	@Order(Ordered.HIGHEST_PRECEDENCE), +	private static class IgnoredPathsWebSecurityConfigurerAdapter implements, +			SecurityConfigurer<Filter, WebSecurity> {, +, +		private static List<String> DEFAULT_IGNORED = Arrays.asList("/css/**", "/js/**",, +				"/images/**", "/**/favicon.ico");, +, +		@Autowired(required = false), +		private ErrorController errorController;, +, +		@Autowired(required = false), +		private EndpointHandlerMapping endpointHandlerMapping;, +, +		@Autowired, +		private SecurityProperties security;, +, +		@Override, +		public void configure(WebSecurity builder) throws Exception {, +		}, +, +		@Override, +		public void init(WebSecurity builder) throws Exception {, +			IgnoredRequestConfigurer ignoring = builder.ignoring();, +			ignoring.antMatchers(getEndpointPaths(this.endpointHandlerMapping, false));, +			List<String> ignored = new ArrayList<String>(this.security.getIgnored());, +			if (!this.security.getManagement().isEnabled()) {, +				ignored.addAll(Arrays.asList(getEndpointPaths(, +						this.endpointHandlerMapping, true)));, +			}, +			if (ignored.isEmpty()) {, +				ignored.addAll(DEFAULT_IGNORED);, +			}, +			else if (ignored.contains("none")) {, +				ignored.remove("none");, +			}, +			if (this.errorController != null) {, +				ignored.add(this.errorController.getErrorPath());, +			}, +			ignoring.antMatchers(ignored.toArray(new String[0]));, +		}, +, +	}, +]