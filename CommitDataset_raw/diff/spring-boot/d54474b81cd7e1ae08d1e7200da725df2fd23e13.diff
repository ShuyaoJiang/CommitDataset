[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver;, + * @author Stephane Nicoll, +			if (this.mvcProperties.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) {, +			else {, +				AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver();, +				localeResolver.setDefaultLocale(this.mvcProperties.getLocale());, +				return localeResolver;, +			}, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver;, + * @author Stephane Nicoll, +			if (this.mvcProperties.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) {, +			else {, +				AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver();, +				localeResolver.setDefaultLocale(this.mvcProperties.getLocale());, +				return localeResolver;, +			}, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	 * Locale to use. By default, this locale is overridden by the "Accept-Language" header., +	 * Define how the locale should be resolved., +	 */, +	private LocaleResolver localeResolver = LocaleResolver.ACCEPT_HEADER;, +, +	/**, +	public LocaleResolver getLocaleResolver() {, +		return this.localeResolver;, +	}, +, +	public void setLocaleResolver(LocaleResolver localeResolver) {, +		this.localeResolver = localeResolver;, +	}, +, +	public enum LocaleResolver {, +, +		/**, +		 * Always use the configured locale., +		 */, +		FIXED,, +, +		/**, +		 * Use the "Accept-Language" header or the configured locale if the header, +		 * is not set., +		 */, +		ACCEPT_HEADER, +, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration.java, +import org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver;, + * @author Stephane Nicoll, +			if (this.mvcProperties.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) {, +			else {, +				AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver();, +				localeResolver.setDefaultLocale(this.mvcProperties.getLocale());, +				return localeResolver;, +			}, +		}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/WebMvcProperties.java, +	 * Locale to use. By default, this locale is overridden by the "Accept-Language" header., +	 * Define how the locale should be resolved., +	 */, +	private LocaleResolver localeResolver = LocaleResolver.ACCEPT_HEADER;, +, +	/**, +	public LocaleResolver getLocaleResolver() {, +		return this.localeResolver;, +	}, +, +	public void setLocaleResolver(LocaleResolver localeResolver) {, +		this.localeResolver = localeResolver;, +	}, +, +	public enum LocaleResolver {, +, +		/**, +		 * Always use the configured locale., +		 */, +		FIXED,, +, +		/**, +		 * Use the "Accept-Language" header or the configured locale if the header, +		 * is not set., +		 */, +		ACCEPT_HEADER, +, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/WebMvcAutoConfigurationTests.java, +import org.springframework.http.HttpHeaders;, +import org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver;, +		load(AllResources.class, "spring.mvc.locale:en_UK",, +				"spring.mvc.locale-resolver=fixed");, +		// mock request and set user preferred locale, +		MockHttpServletRequest request = new MockHttpServletRequest();, +		request.addPreferredLocale(StringUtils.parseLocaleString("nl_NL"));, +		request.addHeader(HttpHeaders.ACCEPT_LANGUAGE, "nl_NL");, +		LocaleResolver localeResolver = this.context.getBean(LocaleResolver.class);]