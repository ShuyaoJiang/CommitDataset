[+++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/ConfigurationMetadataAnnotationProcessor.java, +import java.io.File;, +import java.io.FileInputStream;, +import java.io.FileNotFoundException;, +import java.io.IOException;, +	private static final String RESOURCES_FOLDER = "resources";, +, +	private static final String CLASSES_FOLDER = "classes";, +, +		metadata = mergeAdditionalMetadata(metadata);, +	private ConfigurationMetadata mergeAdditionalMetadata(ConfigurationMetadata metadata) {, +			InputStream inputStream = getAdditionalMetadata();, +		catch (FileNotFoundException ex) {, +			// No additional metadata, +			return metadata;, +		}, +	private InputStream getAdditionalMetadata() throws IOException {, +		// Most build systems will have copied the file to the class output location, +		FileObject fileObject = this.processingEnv.getFiler().createResource(, +				StandardLocation.CLASS_OUTPUT, "",, +				"META-INF/additional-spring-configuration-metadata.json");, +		File file = new File(fileObject.toUri());, +		if (!file.exists()) {, +			// Gradle keeps things separate, +			String path = file.getPath();, +			int index = path.lastIndexOf(CLASSES_FOLDER);, +			path = path.substring(0, index) + RESOURCES_FOLDER, +					+ path.substring(index + CLASSES_FOLDER.length());, +			file = new File(path);, +		}, +		return (file.exists() ? new FileInputStream(file) : fileObject.toUri().toURL(), +				.openStream());, +	}, +]