[+++ b/spring-boot-docs/src/main/asciidoc/appendix-configuration-metadata.adoc, +[appendix], +[[configuration-metadata]], +== Configuration meta-data, +Spring Boot jars are shipped with meta-data files that provide details of all supported, +configuration properties. The files are designed to allow IDE developers to offer, +contextual help and "`code completion`" as users are working with `application.properies`, +or `application.yml` files., +, +The majority of the meta-data file is generated automatically at compile time by, +processing all items annotated with `@ConfigurationProperties`., +, +, +, +[[configuration-metadata-format]], +=== Meta-data format, +Configuration meta-data files are located inside jars under, +`META-INF/spring-configuration-metadata.json` They use a simple JSON format with items, +categorized under either "`groups`" or "`properties`":, +, +[source,json,indent=0], +----, +	{"groups": [, +		{, +			"name": "server",, +			"type": "org.springframework.boot.autoconfigure.web.ServerProperties",, +			"sourceType": "org.springframework.boot.autoconfigure.web.ServerProperties", +		}, +		..., +	],"properties": [, +		{, +			"name": "server.port",, +			"type": "java.lang.Integer",, +			"sourceType": "org.springframework.boot.autoconfigure.web.ServerProperties", +		},, +		{, +			"name": "server.servlet-path",, +			"type": "java.lang.String",, +			"sourceType": "org.springframework.boot.autoconfigure.web.ServerProperties", +			"defaultValue": "/", +		}, +		..., +	]}, +----, +, +Each "`property`" is a configuration item that the user specifies with a given value., +For example `server.port` and `server.servlet-path` might be specified in, +`application.properties` as follows:, +, +[source,properties,indent=0], +----, +	server.port=9090, +	server.servlet-path=/home, +----, +, +The "`groups`" are higher level items that don't themselves specify a value, but instead, +provide a contextual grouping for properties. For example the `server.port` and, +`server.servlet-path` properties are part of the `server` group., +, +NOTE: It is not required that every "`property`" has a "`group`", some properties might, +just exist in their own right., +, +, +, +[[configuration-metadata-group-attributes]], +==== Group Attributes, +The JSON object contained in the `groups` array can contain the following attributes:, +, +[cols="1,1,4"], +|===, +|Name | Type |Purpose, +, +|`name`, +| String, +| The full name of the group. This attribute is mandatory., +, +|`type`, +| String, +| The class name of the data type of the group. For example, if the group was based, +  on a class annotated with `@ConfigurationProperties` the attribute would contain the, +  fully qualified name of that class. If it was based on a `@Bean` method, it would be, +  the return type of that method. The attribute may be omitted if the type is not known., +, +|`description`, +| String, +| A short description of the group that can be displayed to users. May be omitted if no, +  description is available., +, +|`sourceType`, +| String, +| The class name of the source that contributed this group. For example, if the group, +  was based on a `@Bean` method annotated with `@ConfigurationProperties` this attribute, +  would contain the fully qualified name of the `@Configuration` class containing the, +  method. The attribute may be omitted if the source type is not known., +, +|`sourceMethod`, +| String, +| The full name of the method (include parenthesis and argument types) that contributed, +  this group. For example, the name of a `@ConfigurationProperties` annotated `@Bean`, +  method.  May be omitted if the source method is not known.]