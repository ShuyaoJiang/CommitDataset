[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +	 * Get the name of an {@link EntityManagerFactory} based on its {@code beanName}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +	 * Get the name of an {@link EntityManagerFactory} based on its {@code beanName}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/package-info.java, + * Auto-configuration for JPA metrics., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +	 * Get the name of an {@link EntityManagerFactory} based on its {@code beanName}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/package-info.java, + * Auto-configuration for JPA metrics., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfigurationTests.java, +					// ensure EntityManagerFactory is not a Hibernate SessionFactory, +			return new EntityManagerFactoryBuilder(new HibernateJpaVendorAdapter(),, +					jpaProperties, null).dataSource(ds).packages(PACKAGE_CLASSES).build();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +	 * Get the name of an {@link EntityManagerFactory} based on its {@code beanName}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/package-info.java, + * Auto-configuration for JPA metrics., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfigurationTests.java, +					// ensure EntityManagerFactory is not a Hibernate SessionFactory, +			return new EntityManagerFactoryBuilder(new HibernateJpaVendorAdapter(),, +					jpaProperties, null).dataSource(ds).packages(PACKAGE_CLASSES).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthWebEndpointResponseMapperTests.java, +	private Set<String> authorizedRoles = Collections.singleton("ACTUATOR");, +				this.authorizedRoles);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +	 * Get the name of an {@link EntityManagerFactory} based on its {@code beanName}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/package-info.java, + * Auto-configuration for JPA metrics., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfigurationTests.java, +					// ensure EntityManagerFactory is not a Hibernate SessionFactory, +			return new EntityManagerFactoryBuilder(new HibernateJpaVendorAdapter(),, +					jpaProperties, null).dataSource(ds).packages(PACKAGE_CLASSES).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthWebEndpointResponseMapperTests.java, +	private Set<String> authorizedRoles = Collections.singleton("ACTUATOR");, +				this.authorizedRoles);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration.java, +	 * Get the name of an {@link EntityManagerFactory} based on its {@code beanName}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/package-info.java, + * Auto-configuration for JPA metrics., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfigurationTests.java, +					// ensure EntityManagerFactory is not a Hibernate SessionFactory, +			return new EntityManagerFactoryBuilder(new HibernateJpaVendorAdapter(),, +					jpaProperties, null).dataSource(ds).packages(PACKAGE_CLASSES).build();, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/HealthWebEndpointResponseMapperTests.java, +	private Set<String> authorizedRoles = Collections.singleton("ACTUATOR");, +				this.authorizedRoles);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +++ b/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractRunMojo.java, +	 * @return an {@link EnvVariables} defining the environment variables]