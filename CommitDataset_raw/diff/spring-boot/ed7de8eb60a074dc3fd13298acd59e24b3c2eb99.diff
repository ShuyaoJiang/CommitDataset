[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			valve.setRotatable(this.accesslog.isRotate());, +			 * Enable access log rotation., +			 */, +			private boolean rotate = true;, +, +			/**, +			public boolean isRotate() {, +				return this.rotate;, +			}, +, +			public void setRotate(boolean rotate) {, +				this.rotate = rotate;, +			}, +, +			factory.setAccessLogDirectory(this.accesslog.dir);, +			factory.setAccessLogPattern(this.accesslog.pattern);, +			factory.setAccessLogPrefix(this.accesslog.prefix);, +			factory.setAccessLogSuffix(this.accesslog.suffix);, +			factory.setAccessLogRotate(this.accesslog.rotate);, +			/**, +			 * Enable access log rotation., +			 */, +			private boolean rotate = true;, +, +			public boolean isRotate() {, +				return this.rotate;, +			}, +, +			public void setRotate(boolean rotate) {, +				this.rotate = rotate;, +			}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			valve.setRotatable(this.accesslog.isRotate());, +			 * Enable access log rotation., +			 */, +			private boolean rotate = true;, +, +			/**, +			public boolean isRotate() {, +				return this.rotate;, +			}, +, +			public void setRotate(boolean rotate) {, +				this.rotate = rotate;, +			}, +, +			factory.setAccessLogDirectory(this.accesslog.dir);, +			factory.setAccessLogPattern(this.accesslog.pattern);, +			factory.setAccessLogPrefix(this.accesslog.prefix);, +			factory.setAccessLogSuffix(this.accesslog.suffix);, +			factory.setAccessLogRotate(this.accesslog.rotate);, +			/**, +			 * Enable access log rotation., +			 */, +			private boolean rotate = true;, +, +			public boolean isRotate() {, +				return this.rotate;, +			}, +, +			public void setRotate(boolean rotate) {, +				this.rotate = rotate;, +			}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +		map.put("server.tomcat.accesslog.rotate", "false");, +		assertThat(tomcat.getAccesslog().isRotate()).isFalse();, +	public void customizeUndertowAccessLog() {, +		Map<String, String> map = new HashMap<String, String>();, +		map.put("server.undertow.accesslog.enabled", "true");, +		map.put("server.undertow.accesslog.pattern", "foo");, +		map.put("server.undertow.accesslog.prefix", "test_log");, +		map.put("server.undertow.accesslog.suffix", "txt");, +		map.put("server.undertow.accesslog.dir", "test-logs");, +		map.put("server.undertow.accesslog.rotate", "false");, +		bindProperties(map);, +, +		UndertowEmbeddedServletContainerFactory container = spy(, +				new UndertowEmbeddedServletContainerFactory());, +		this.properties.getUndertow().customizeUndertow(this.properties, container);, +		verify(container).setAccessLogEnabled(true);, +		verify(container).setAccessLogPattern("foo");, +		verify(container).setAccessLogPrefix("test_log");, +		verify(container).setAccessLogSuffix("txt");, +		verify(container).setAccessLogDirectory(new File("test-logs"));, +		verify(container).setAccessLogRotate(false);, +	}, +, +	@Test, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +			valve.setRotatable(this.accesslog.isRotate());, +			 * Enable access log rotation., +			 */, +			private boolean rotate = true;, +, +			/**, +			public boolean isRotate() {, +				return this.rotate;, +			}, +]