[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.beans.factory.support.BeanDefinitionBuilder;, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +import org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;, +import org.springframework.boot.actuate.endpoint.EnvironmentEndpoint;, +import org.springframework.boot.actuate.endpoint.MetricsEndpoint;, +import org.springframework.boot.actuate.endpoint.ShutdownEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.GenericMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint;, +import org.springframework.stereotype.Component;, +	@Component, +	protected static class GenericEndpointPostProcessor implements, +			BeanDefinitionRegistryPostProcessor {, +, +		private BeanDefinitionRegistry registry;, +, +		private Map<Class<? extends Endpoint<?>>, Class<?>> endpointTypes = new HashMap<Class<? extends Endpoint<?>>, Class<?>>();, +, +		public GenericEndpointPostProcessor() {, +			this.endpointTypes.put(EnvironmentEndpoint.class,, +					EnvironmentMvcEndpoint.class);, +			this.endpointTypes.put(MetricsEndpoint.class, MetricsMvcEndpoint.class);, +			this.endpointTypes.put(ShutdownEndpoint.class, ShutdownMvcEndpoint.class);, +		}, +, +		@Override, +		public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory), +				throws BeansException {, +			for (String name : beanFactory.getBeanNamesForType(Endpoint.class)) {, +				Class<?> type = getTypeForEndpoint(beanFactory.getType(name));, +				BeanDefinitionBuilder bean = BeanDefinitionBuilder, +						.genericBeanDefinition(type);, +				bean.addConstructorArgReference(name);, +				this.registry.registerBeanDefinition("mvc." + name,, +						bean.getBeanDefinition());, +			}, +		}, +, +		protected Class<?> getTypeForEndpoint(Class<?> endpoint) {, +			Class<?> type = GenericMvcEndpoint.class;, +			if (this.endpointTypes.containsKey(endpoint)) {, +				type = this.endpointTypes.get(endpoint);, +			}, +			return type;, +		}, +, +		@Override, +		public void postProcessBeanDefinitionRegistry(BeanDefinitionRegistry registry), +				throws BeansException {, +			this.registry = registry;, +		}, +, +	}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.java, +import java.util.HashMap;, +import java.util.Map;, +import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;, +import org.springframework.beans.factory.support.BeanDefinitionBuilder;, +import org.springframework.beans.factory.support.BeanDefinitionRegistry;, +import org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;, +import org.springframework.boot.actuate.endpoint.EnvironmentEndpoint;, +import org.springframework.boot.actuate.endpoint.MetricsEndpoint;, +import org.springframework.boot.actuate.endpoint.ShutdownEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.GenericMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint;, +import org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint;, +import org.springframework.stereotype.Component;, +	@Component, +	protected static class GenericEndpointPostProcessor implements, +			BeanDefinitionRegistryPostProcessor {, +, +		private BeanDefinitionRegistry registry;, +, +		private Map<Class<? extends Endpoint<?>>, Class<?>> endpointTypes = new HashMap<Class<? extends Endpoint<?>>, Class<?>>();, +, +		public GenericEndpointPostProcessor() {, +			this.endpointTypes.put(EnvironmentEndpoint.class,, +					EnvironmentMvcEndpoint.class);, +			this.endpointTypes.put(MetricsEndpoint.class, MetricsMvcEndpoint.class);, +			this.endpointTypes.put(ShutdownEndpoint.class, ShutdownMvcEndpoint.class);, +		}, +, +		@Override, +		public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory), +				throws BeansException {, +			for (String name : beanFactory.getBeanNamesForType(Endpoint.class)) {, +				Class<?> type = getTypeForEndpoint(beanFactory.getType(name));, +				BeanDefinitionBuilder bean = BeanDefinitionBuilder, +						.genericBeanDefinition(type);, +				bean.addConstructorArgReference(name);, +				this.registry.registerBeanDefinition("mvc." + name,, +						bean.getBeanDefinition());, +			}]