[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/DefaultEndpointPathProvider.java, +	private final String basePath;, +			WebEndpointProperties webEndpointProperties) {, +		this.basePath = webEndpointProperties.getBasePath();, +		return this.basePath + "/" + endpointInfo.getId();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/DefaultEndpointPathProvider.java, +	private final String basePath;, +			WebEndpointProperties webEndpointProperties) {, +		this.basePath = webEndpointProperties.getBasePath();, +		return this.basePath + "/" + endpointInfo.getId();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure.endpoint.web;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +, +/**, + * Configuration properties for web management endpoints., + *, + * @author Madhura Bhave, + * @since 2.0.0, + */, +@ConfigurationProperties(prefix = "management.endpoints.web"), +public class WebEndpointProperties {, +, +	/**, +	 * The base-path for the web endpoints. Relative to `server.context-path` or, +	 * `management.server.context-path`, if `management.server.port` is different., +	 */, +	private String basePath = "/application";, +, +	public String getBasePath() {, +		return this.basePath;, +	}, +, +	public void setBasePath(String basePath) {, +			this.basePath = basePath;, +	}, +, +}, +, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/DefaultEndpointPathProvider.java, +	private final String basePath;, +			WebEndpointProperties webEndpointProperties) {, +		this.basePath = webEndpointProperties.getBasePath();, +		return this.basePath + "/" + endpointInfo.getId();, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.java, +/*, + * Copyright 2012-2017 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure.endpoint.web;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +, +/**, + * Configuration properties for web management endpoints., + *, + * @author Madhura Bhave, + * @since 2.0.0, + */, +@ConfigurationProperties(prefix = "management.endpoints.web"), +public class WebEndpointProperties {, +, +	/**, +	 * The base-path for the web endpoints. Relative to `server.context-path` or, +	 * `management.server.context-path`, if `management.server.port` is different., +	 */, +	private String basePath = "/application";, +, +	public String getBasePath() {, +		return this.basePath;]