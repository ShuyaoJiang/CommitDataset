[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +	@Autowired, +	private JmsProperties properties;, +, +		factory.setPubSubDomain(properties.isPubSubDomain());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +	@Autowired, +	private JmsProperties properties;, +, +		factory.setPubSubDomain(properties.isPubSubDomain());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsAutoConfigurationTests.java, +import org.springframework.jms.config.JmsListenerEndpoint;, +import org.springframework.jms.listener.DefaultMessageListenerContainer;, +import static org.mockito.Mockito.mock;, +	public void testPubSubDomainActive() {, +		load(TestConfiguration.class, "spring.jms.pubSubDomain:true");, +		JmsTemplate jmsTemplate = this.context.getBean(JmsTemplate.class);, +		DefaultMessageListenerContainer defaultMessageListenerContainer = this.context, +				.getBean(DefaultJmsListenerContainerFactory.class), +				.createListenerContainer(mock(JmsListenerEndpoint.class));, +		assertTrue(jmsTemplate.isPubSubDomain());, +		assertTrue(defaultMessageListenerContainer.isPubSubDomain());, +	}, +, +	@Test]