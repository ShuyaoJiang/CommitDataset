[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, + * Copyright 2012-2017 the original author or authors., +						.handleMessage(invocation.getArgument(0));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, + * Copyright 2012-2017 the original author or authors., +						.handleMessage(invocation.getArgument(0));, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, + * Copyright 2012-2017 the original author or authors., +	private ArgumentMatcher<HttpGet> getForMetadata(boolean serviceCapabilities) {, +	private ArgumentMatcher<HttpGet> getForNonMetadata() {, +	private static class HasAcceptHeader implements ArgumentMatcher<HttpGet> {, +		public boolean matches(HttpGet get) {, +			if (get == null) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, + * Copyright 2012-2017 the original author or authors., +						.handleMessage(invocation.getArgument(0));, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, + * Copyright 2012-2017 the original author or authors., +	private ArgumentMatcher<HttpGet> getForMetadata(boolean serviceCapabilities) {, +	private ArgumentMatcher<HttpGet> getForNonMetadata() {, +	private static class HasAcceptHeader implements ArgumentMatcher<HttpGet> {, +		public boolean matches(HttpGet get) {, +			if (get == null) {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/GrapeRootRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +			LocalRepository localRepository = invocation.getArgument(1);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, + * Copyright 2012-2017 the original author or authors., +						.handleMessage(invocation.getArgument(0));, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, + * Copyright 2012-2017 the original author or authors., +	private ArgumentMatcher<HttpGet> getForMetadata(boolean serviceCapabilities) {, +	private ArgumentMatcher<HttpGet> getForNonMetadata() {, +	private static class HasAcceptHeader implements ArgumentMatcher<HttpGet> {, +		public boolean matches(HttpGet get) {, +			if (get == null) {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/GrapeRootRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +			LocalRepository localRepository = invocation.getArgument(1);, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, + * Copyright 2012-2017 the original author or authors., +						.handleMessage(invocation.getArgument(0));, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, + * Copyright 2012-2017 the original author or authors., +	private ArgumentMatcher<HttpGet> getForMetadata(boolean serviceCapabilities) {, +	private ArgumentMatcher<HttpGet> getForNonMetadata() {, +	private static class HasAcceptHeader implements ArgumentMatcher<HttpGet> {, +		public boolean matches(HttpGet get) {, +			if (get == null) {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/GrapeRootRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +			LocalRepository localRepository = invocation.getArgument(1);, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +++ b/spring-boot-dependencies/pom.xml, +		<mockito.version>2.5.4</mockito.version>, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, + * Copyright 2012-2017 the original author or authors., +						.handleMessage(invocation.getArgument(0));, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, + * Copyright 2012-2017 the original author or authors., +	private ArgumentMatcher<HttpGet> getForMetadata(boolean serviceCapabilities) {, +	private ArgumentMatcher<HttpGet> getForNonMetadata() {, +	private static class HasAcceptHeader implements ArgumentMatcher<HttpGet> {, +		public boolean matches(HttpGet get) {, +			if (get == null) {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/GrapeRootRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +			LocalRepository localRepository = invocation.getArgument(1);, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +++ b/spring-boot-dependencies/pom.xml, +		<mockito.version>2.5.4</mockito.version>, +++ b/spring-boot-parent/pom.xml, +				<version>1.6.0</version>, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/writer/MessageChannelMetricWriterTests.java, + * Copyright 2012-2017 the original author or authors., +						.handleMessage(invocation.getArgument(0));, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java, + * Copyright 2012-2017 the original author or authors., +	private ArgumentMatcher<HttpGet> getForMetadata(boolean serviceCapabilities) {, +	private ArgumentMatcher<HttpGet> getForNonMetadata() {, +	private static class HasAcceptHeader implements ArgumentMatcher<HttpGet> {, +		public boolean matches(HttpGet get) {, +			if (get == null) {, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/GrapeRootRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors., +										.getArgument(1);, +			LocalRepository localRepository = invocation.getArgument(1);, +++ b/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/grape/SettingsXmlRepositorySystemSessionAutoConfigurationTests.java, + * Copyright 2012-2017 the original author or authors.]