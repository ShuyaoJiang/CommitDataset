[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +							this.jdbcTemplate.queryForObject(query, Object.class));, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/SimpleHealthIndicator.java, +							this.jdbcTemplate.queryForObject(query, Object.class));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/health/SimpleHealthIndicatorTests.java, +import org.springframework.jdbc.core.JdbcTemplate;, +import static org.junit.Assert.assertEquals;, +	public void customQuery() {, +		this.indicator.setDataSource(this.dataSource);, +		new JdbcTemplate(this.dataSource), +				.execute("CREATE TABLE FOO (id INTEGER IDENTITY PRIMARY KEY)");, +		this.indicator.setQuery("SELECT COUNT(*) from FOO");, +		Map<String, Object> health = this.indicator.health();, +		System.err.println(health);, +		assertNotNull(health.get("database"));, +		assertEquals("ok", health.get("status"));, +		assertNotNull(health.get("hello"));, +	}, +, +	@Test, +	public void error() {, +		this.indicator.setDataSource(this.dataSource);, +		this.indicator.setQuery("SELECT COUNT(*) from BAR");, +		Map<String, Object> health = this.indicator.health();, +		assertNotNull(health.get("database"));, +		assertEquals("error", health.get("status"));, +	}, +, +	@Test]