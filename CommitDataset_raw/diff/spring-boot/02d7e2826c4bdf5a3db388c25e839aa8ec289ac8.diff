[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +import org.springframework.util.ObjectUtils;, +				if (!ObjectUtils.isEmpty(paths)) {, +		}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +import org.springframework.util.ObjectUtils;, +				if (!ObjectUtils.isEmpty(paths)) {, +		}, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java, +		assertEquals(2,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +import org.springframework.util.ObjectUtils;, +				if (!ObjectUtils.isEmpty(paths)) {, +		}, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java, +		assertEquals(2,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +import org.springframework.util.ObjectUtils;, +			if (!ObjectUtils.isEmpty(paths)) {, +				builder.ignoring().antMatchers(paths);, +			}, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfiguration.java, +import org.springframework.util.ObjectUtils;, +				if (!ObjectUtils.isEmpty(paths)) {, +		}, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java, +		assertEquals(2,, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SpringBootWebSecurityConfiguration.java, +import org.springframework.util.ObjectUtils;, +			if (!ObjectUtils.isEmpty(paths)) {, +				builder.ignoring().antMatchers(paths);, +			}, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/SecurityAutoConfigurationTests.java, +		// 4 for static resources and one for the rest, +		assertEquals(5,, +				this.context.getBean(FilterChainProxy.class).getFilterChains().size());, +		assertEquals(1,]