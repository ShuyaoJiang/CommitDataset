[+++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.exception-conversion-word=%wEx # conversion word used when logging exceptions, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.exception-conversion-word=%wEx # conversion word used when logging exceptions, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +		ConfigurableListableBeanFactory beanFactory = event.getApplicationContext(), +				.getBeanFactory();, +		return resolver.getProperty("exception-conversion-word", "%wEx");, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.exception-conversion-word=%wEx # conversion word used when logging exceptions, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +		ConfigurableListableBeanFactory beanFactory = event.getApplicationContext(), +				.getBeanFactory();, +		return resolver.getProperty("exception-conversion-word", "%wEx");, +++ b/spring-boot/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "defaultValue": "%wEx",, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.exception-conversion-word=%wEx # conversion word used when logging exceptions, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/LoggingApplicationListener.java, +		ConfigurableListableBeanFactory beanFactory = event.getApplicationContext(), +				.getBeanFactory();, +		return resolver.getProperty("exception-conversion-word", "%wEx");, +++ b/spring-boot/src/main/resources/META-INF/additional-spring-configuration-metadata.json, +    "defaultValue": "%wEx",, +++ b/spring-boot/src/test/java/org/springframework/boot/logging/LoggingApplicationListenerTests.java, +	public void defaultExceptionConversionWord() throws Exception {, +		this.outputCapture.expect(, +				not(containsString("Wrapped by: java.lang.RuntimeException: Wrapper")));, +		this.logger.info("Hello world",, +				new RuntimeException("Wrapper", new RuntimeException("Expected")));, +	}, +, +	@Test, +	public void overrideExceptionConversionWord() throws Exception {, +		EnvironmentTestUtils.addEnvironment(this.context,, +				"logging.exceptionConversionWord:%rEx");, +		this.initializer.initialize(this.context.getEnvironment(),, +				this.context.getClassLoader());, +		this.outputCapture.expect(containsString("Hello world"));, +		this.outputCapture.expect(, +				containsString("Wrapped by: java.lang.RuntimeException: Wrapper"));, +		this.logger.info("Hello world",, +				new RuntimeException("Wrapper", new RuntimeException("Expected")));]