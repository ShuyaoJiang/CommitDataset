[+++ b/spring-boot-test/pom.xml, +			<groupId>com.fasterxml.jackson.core</groupId>, +			<artifactId>jackson-databind</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>com.google.code.gson</groupId>, +			<artifactId>gson</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.skyscreamer</groupId>, +			<artifactId>jsonassert</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +		<dependency>, +			<groupId>com.jayway.jsonpath</groupId>, +			<artifactId>json-path</artifactId>, +		</dependency>, +++ b/spring-boot-test/pom.xml, +			<groupId>com.fasterxml.jackson.core</groupId>, +			<artifactId>jackson-databind</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>com.google.code.gson</groupId>, +			<artifactId>gson</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.skyscreamer</groupId>, +			<artifactId>jsonassert</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +		<dependency>, +			<groupId>com.jayway.jsonpath</groupId>, +			<artifactId>json-path</artifactId>, +		</dependency>, +++ b/spring-boot-test/src/main/java/org/springframework/boot/test/json/AbstractJsonMarshalTester.java, +/*, + * Copyright 2012-2016 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.test.json;, +, +import java.io.BufferedReader;, +import java.io.Closeable;, +import java.io.File;, +import java.io.IOException;, +import java.io.InputStream;, +import java.io.InputStreamReader;, +import java.io.Reader;, +import java.io.StringReader;, +import java.lang.reflect.Field;, +, +import org.assertj.core.api.Assertions;, +, +import org.springframework.beans.BeansException;, +import org.springframework.beans.factory.ObjectFactory;, +import org.springframework.core.ResolvableType;, +import org.springframework.core.io.ByteArrayResource;, +import org.springframework.core.io.ClassPathResource;, +import org.springframework.core.io.FileSystemResource;, +import org.springframework.core.io.InputStreamResource;, +import org.springframework.core.io.Resource;, +import org.springframework.util.Assert;, +import org.springframework.util.ReflectionUtils;, +import org.springframework.util.ReflectionUtils.FieldCallback;, +, +/**, + * Base class for AssertJ based JSON marshal testers. Exposes specific Asserts following a, + * {@code read}, {@code write} or {@code parse} of JSON content. Typically used in, + * combination with an AssertJ {@link Assertions#assertThat(Object) assertThat} call. For, + * example: <pre class="code">, + * public class ExampleObjectJsonTests {, + *, + *     private AbstractJsonTester&lt;ExampleObject&gt; json = //..., + *, + *     &#064;Test, + *     public void testWriteJson() {, + *         ExampleObject object = //..., + *         assertThat(json.write(object)).isEqualToJson("expected.json");, + *         assertThat(json.read("expected.json)).isEqualTo(object);, + *     }, + *, + * }]