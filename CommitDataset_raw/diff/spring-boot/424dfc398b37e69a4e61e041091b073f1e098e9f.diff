[+++ /dev/null, +++ /dev/null, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.java, +	@EnableConfigurationProperties(HttpProperties.class), +		private final HttpProperties.Encoding properties;, +		protected StringHttpMessageConverterConfiguration(HttpProperties httpProperties) {, +			this.properties = httpProperties.getEncoding();, +					this.properties.getCharset());, +++ /dev/null, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.java, +	@EnableConfigurationProperties(HttpProperties.class), +		private final HttpProperties.Encoding properties;, +		protected StringHttpMessageConverterConfiguration(HttpProperties httpProperties) {, +			this.properties = httpProperties.getEncoding();, +					this.properties.getCharset());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/HttpProperties.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.http;, +, +import java.nio.charset.Charset;, +import java.nio.charset.StandardCharsets;, +import java.util.Locale;, +import java.util.Map;, +, +import org.springframework.boot.context.properties.ConfigurationProperties;, +, +/**, + * HTTP properties., + *, + * @author Phillip Webb, + * @author Stephane Nicoll, + * @author Brian Clozel, + * @since 2.1.0, + */, +@ConfigurationProperties(prefix = "spring.http"), +public class HttpProperties {, +, +	/**, +	 * Whether logging of (potentially sensitive) request details at DEBUG and TRACE level, +	 * is allowed., +	 */, +	private boolean logRequestDetails;, +, +	/**, +	 * HTTP encoding properties., +	 */, +	private Encoding encoding = new Encoding();, +, +	public boolean isLogRequestDetails() {, +		return this.logRequestDetails;, +	}, +, +	public void setLogRequestDetails(boolean logRequestDetails) {, +		this.logRequestDetails = logRequestDetails;, +	}, +, +	public Encoding getEncoding() {, +		return this.encoding;, +	}, +, +	public void setEncoding(Encoding encoding) {, +		this.encoding = encoding;, +	}, +, +	/**, +	 * Configuration properties for http encoding., +	 */, +	public static class Encoding {, +, +		public static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;, +, +		/**, +		 * Charset of HTTP requests and responses. Added to the "Content-Type" header if, +		 * not set explicitly., +		 */, +		private Charset charset = DEFAULT_CHARSET;, +, +		/**, +		 * Whether to force the encoding to the configured charset on HTTP requests and, +		 * responses., +		 */, +		private Boolean force;, +, +		/**, +		 * Whether to force the encoding to the configured charset on HTTP requests.]