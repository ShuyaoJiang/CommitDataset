[+++ b/CONTRIBUTING.adoc, += Contributing to Spring Boot, +, +Spring Boot is released under the non-restrictive Apache 2.0 license. If you would like, +to contribute something, or simply want to hack on the code this document should help, +you get started., +, +== Sign the Contributor License Agreement, +Before we accept a non-trivial patch or pull request we will need you to sign the, +https://support.springsource.com/spring_committer_signup[contributor's agreement]., +Signing the contributor's agreement does not grant anyone commit rights to the main, +repository, but it does mean that we can accept your contributions, and you will get an, +author credit if we do.  Active contributors might be asked to join the core team, and, +given the ability to merge pull requests., +, +== Code Conventions and Housekeeping, +None of these is essential for a pull request, but they will all help.  They can also be, +added after the original pull request but before a merge., +, +* Use the Spring Framework code format conventions. Import `eclipse-code-formatter.xml`, +  from the `eclipse` folder of the project if you are using Eclipse. If using IntelliJ,, +  copy `spring-intellij-code-style.xml` to `~/.IntelliJIdea*/config/codestyles` and select, +  spring-intellij-code-style from Settings -> Code Styles., +* Make sure all new `.java` files to have a simple Javadoc class comment with at least an, +  `@author` tag identifying you, and preferably at least a paragraph on what the class is, +  for., +* Add the ASF license header comment to all new `.java` files (copy from existing files, +  in the project), +* Add yourself as an `@author` to the .java files that you modify substantially (more, +  than cosmetic changes)., +* Add some Javadocs and, if you change the namespace, some XSD doc elements., +* A few unit tests would help a lot as well -- someone has to do it., +* If no-one else is using your branch, please rebase it against the current master (or, +  other target branch in the main project)., +, +== Working with the code, +If you don't have an IDE preference we would recommend that you use, +http://www.springsource.com/developer/sts[Spring Tools Suite] or, +http://eclipse.org[Eclipse] when working with the code. We use the, +http://eclipse.org/m2e/[m2eclipe] eclipse plugin for maven support. Other IDEs and tools, +should also work without issue., +, +=== Building from source, +To build the source you will need to install, +http://maven.apache.org/run-maven/index.html[Apache Maven] v3.0 or above., +, +==== Default build, +The project can be built from the root directory using the standard maven command:, +, +[indent=0], +----, +	$ mvn clean install, +----, +, +NOTE: You may need to increase the amount of memory available to Maven by setting, +a `MAVEN_OPTS` environment variable with the value `-Xmx512m -XX:MaxPermSize=128m`, +, +If you are rebuilding often, you might also want to skip the tests until you are ready, +to submit a pull request:, +, +[indent=0], +----, +	$ mvn clean install -DskipTests, +----, +, +==== Full Build, +Multi-module Maven builds cannot directly include maven plugins that are part of the, +reactor unless they have previously been built. Unfortunately this restriction causes, +some compilations for Spring Boot as we include a maven plugin and use it within the, +samples. The standard build works around this restriction by launching the samples via, +the `maven-invoker-plugin` so that they are not part of the reactor. This works fine, +most of the time, however, sometimes it useful to run a build that includes all modules, +(for example when using `maven-versions-plugin`. We use the full build on our CI servers, +and during the release process., +, +Running a full build is a two phase process., +, +1) Prepare the build, +, +Preparing the build will compile and install the `spring-boot-maven-plugin` so that it, +can be referenced during the full build. It also generates a `settings.xml` file that, +enables a `snapshot`, `milestone` or `release` profiles based on the version being, +build. To prepare the build, from the root directory use:, +, +[indent=0], +----, +	$ mvn -P snapshot,prepare install, +----, +, +NOTE: You may notice that preparing the build also changes the, +`spring-boot-starter-parent` POM. This is required for our release process to work, +correctly., +, +2) Run the full build, +, +Once the build has been prepared, you can run a full build using the following commands:, +, +[indent=0], +----, +	$ cd spring-boot-full-build]