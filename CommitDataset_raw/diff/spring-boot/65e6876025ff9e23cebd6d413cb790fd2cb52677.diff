[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryProperties.java, +	public Boolean isEnabled() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryProperties.java, +	public Boolean isEnabled() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryPropertiesConfigAdapter.java, +import io.micrometer.core.instrument.step.StepRegistryConfig;, +		return get(T::isEnabled, C::enabled);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryProperties.java, +	public Boolean isEnabled() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryPropertiesConfigAdapter.java, +import io.micrometer.core.instrument.step.StepRegistryConfig;, +		return get(T::isEnabled, C::enabled);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryProperties.java, +	public Boolean isEnabled() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryPropertiesConfigAdapter.java, +import io.micrometer.core.instrument.step.StepRegistryConfig;, +		return get(T::isEnabled, C::enabled);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasExportConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryProperties.java, +	public Boolean isEnabled() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryPropertiesConfigAdapter.java, +import io.micrometer.core.instrument.step.StepRegistryConfig;, +		return get(T::isEnabled, C::enabled);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasExportConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasPropertiesConfigAdapter.java, +		return get(AtlasProperties::isEnabled, AtlasConfig::enabled);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryProperties.java, +	public Boolean isEnabled() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryPropertiesConfigAdapter.java, +import io.micrometer.core.instrument.step.StepRegistryConfig;, +		return get(T::isEnabled, C::enabled);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasExportConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/atlas/AtlasPropertiesConfigAdapter.java, +		return get(AtlasProperties::isEnabled, AtlasConfig::enabled);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/datadog/DatadogExportConfiguration.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MeterBindersConfiguration.java, +import io.micrometer.core.instrument.binder.system.ProcessorMetrics;, +	@Bean, +	@ConditionalOnMissingBean(ProcessorMetrics.class), +	public ProcessorMetrics processorMetrics() {, +		return new ProcessorMetrics();, +	}, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryProperties.java, +	public Boolean isEnabled() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/export/StepRegistryPropertiesConfigAdapter.java, +import io.micrometer.core.instrument.step.StepRegistryConfig;, +		return get(T::isEnabled, C::enabled);]