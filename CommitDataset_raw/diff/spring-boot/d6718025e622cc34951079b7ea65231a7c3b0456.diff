[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.hateoas.LinkDiscoverers;, + * @author Oliver Gierke, +@ConditionalOnMissingBean(LinkDiscoverers.class), +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.hateoas.LinkDiscoverers;, + * @author Oliver Gierke, +@ConditionalOnMissingBean(LinkDiscoverers.class), +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfigurationTests.java, +import org.springframework.context.annotation.Configuration;, +import org.springframework.hateoas.config.EnableHypermediaSupport;, +import org.springframework.hateoas.config.EnableHypermediaSupport.HypermediaType;, + * @author Oliver Gierke, +	@Test, +	public void doesBackOffIfEnableHypermediaSupportIsDeclaredManually() {, +		, +		this.context = new AnnotationConfigWebApplicationContext();, +		this.context.register(SampleConfig.class, HypermediaAutoConfiguration.class);, +		this.context.refresh();, +		, +		this.context.getBean(LinkDiscoverers.class);, +	}, +	, +	@Configuration, +	@EnableHypermediaSupport(type = HypermediaType.HAL), +	static class SampleConfig {, +		, +	}, +]