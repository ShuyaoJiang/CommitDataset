[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.cloud.CloudPlatform;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class ServerProperties implements EmbeddedServletContainerCustomizer,, +		EnvironmentAware, Ordered {, +	private Boolean useForwardHeaders;, +	private Environment environment;, +, +	public void setEnvironment(Environment environment) {, +		this.environment = environment;, +	}, +, +	@Override, +	public Boolean isUseForwardHeaders() {, +	public void setUseForwardHeaders(Boolean useForwardHeaders) {, +	protected final boolean getOrDeduceUseForwardHeaders() {, +		if (this.useForwardHeaders != null) {, +			return this.useForwardHeaders;, +		}, +		CloudPlatform platform = CloudPlatform.getActive(this.environment);, +		return (platform == null ? false : platform.isUsingForwardHeaders());, +	}, +, +					|| properties.getOrDeduceUseForwardHeaders()) {, +			factory.setUseForwardHeaders(serverProperties.getOrDeduceUseForwardHeaders());, +			factory.setUseForwardHeaders(serverProperties.getOrDeduceUseForwardHeaders());, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.cloud.CloudPlatform;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class ServerProperties implements EmbeddedServletContainerCustomizer,, +		EnvironmentAware, Ordered {, +	private Boolean useForwardHeaders;, +	private Environment environment;, +, +	public void setEnvironment(Environment environment) {, +		this.environment = environment;, +	}, +, +	@Override, +	public Boolean isUseForwardHeaders() {, +	public void setUseForwardHeaders(Boolean useForwardHeaders) {, +	protected final boolean getOrDeduceUseForwardHeaders() {, +		if (this.useForwardHeaders != null) {, +			return this.useForwardHeaders;, +		}, +		CloudPlatform platform = CloudPlatform.getActive(this.environment);, +		return (platform == null ? false : platform.isUsingForwardHeaders());, +	}, +, +					|| properties.getOrDeduceUseForwardHeaders()) {, +			factory.setUseForwardHeaders(serverProperties.getOrDeduceUseForwardHeaders());, +			factory.setUseForwardHeaders(serverProperties.getOrDeduceUseForwardHeaders());, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/ServerPropertiesTests.java, +import org.springframework.mock.env.MockEnvironment;, + * @author Phillip Webb, +	@Test, +	public void deduceUseForwardHeadersTomcat() throws Exception {, +		this.properties.setEnvironment(new MockEnvironment().withProperty("DYNO", "-"));, +		testRemoteIpValveConfigured();, +	}, +, +	public void defaultUseForwardHeadersUndertow() throws Exception {, +		UndertowEmbeddedServletContainerFactory container = spy(new UndertowEmbeddedServletContainerFactory());, +		this.properties.customize(container);, +		verify(container).setUseForwardHeaders(false);, +	}, +, +	@Test, +	public void deduceUseForwardHeadersUndertow() throws Exception {, +		this.properties.setEnvironment(new MockEnvironment().withProperty("DYNO", "-"));, +		UndertowEmbeddedServletContainerFactory container = spy(new UndertowEmbeddedServletContainerFactory());, +		this.properties.customize(container);, +		verify(container).setUseForwardHeaders(true);, +	}, +, +	@Test, +	public void defaultUseForwardHeadersJetty() throws Exception {, +		JettyEmbeddedServletContainerFactory container = spy(new JettyEmbeddedServletContainerFactory());, +		this.properties.customize(container);, +		verify(container).setUseForwardHeaders(false);, +	}, +, +	@Test, +	@Test, +	public void deduceUseForwardHeadersJetty() throws Exception {, +		this.properties.setEnvironment(new MockEnvironment().withProperty("DYNO", "-"));, +		JettyEmbeddedServletContainerFactory container = spy(new JettyEmbeddedServletContainerFactory());, +		this.properties.customize(container);, +		verify(container).setUseForwardHeaders(true);, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/ServerProperties.java, +import org.springframework.boot.cloud.CloudPlatform;, +import org.springframework.context.EnvironmentAware;, +import org.springframework.core.env.Environment;, +public class ServerProperties implements EmbeddedServletContainerCustomizer,, +		EnvironmentAware, Ordered {, +	private Boolean useForwardHeaders;]