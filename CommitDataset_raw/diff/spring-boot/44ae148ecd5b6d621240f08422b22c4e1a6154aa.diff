[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/session/SessionsEndpointAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("endpoints.sessions.enabled:false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SessionsEndpoint.class), +						.doesNotHaveBean(SessionsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/session/SessionsEndpointAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("endpoints.sessions.enabled:false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SessionsEndpoint.class), +						.doesNotHaveBean(SessionsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Couchbase., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/session/SessionsEndpointAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("endpoints.sessions.enabled:false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SessionsEndpoint.class), +						.doesNotHaveBean(SessionsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Couchbase., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, +		LettuceClientConfiguration clientConfig = getLettuceClientConfiguration(clientResources,, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/session/SessionsEndpointAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("endpoints.sessions.enabled:false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SessionsEndpoint.class), +						.doesNotHaveBean(SessionsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Couchbase., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, +		LettuceClientConfiguration clientConfig = getLettuceClientConfiguration(clientResources,, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +	public void providerDisablesAutoCommitIsNotConfiguredWithJta() {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/session/SessionsEndpointAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("endpoints.sessions.enabled:false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SessionsEndpoint.class), +						.doesNotHaveBean(SessionsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Couchbase., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, +		LettuceClientConfiguration clientConfig = getLettuceClientConfiguration(clientResources,, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +	public void providerDisablesAutoCommitIsNotConfiguredWithJta() {, +++ b/spring-boot-project/spring-boot-cli/src/main/content/INSTALL.txt, +Alternatively, you can set the JAVA_HOME environment variable to point a suitable JDK., +To test if you have successfully installed the CLI you can run the following command:, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/session/SessionsEndpointAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("endpoints.sessions.enabled:false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SessionsEndpoint.class), +						.doesNotHaveBean(SessionsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Couchbase., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, +		LettuceClientConfiguration clientConfig = getLettuceClientConfiguration(clientResources,, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +	public void providerDisablesAutoCommitIsNotConfiguredWithJta() {, +++ b/spring-boot-project/spring-boot-cli/src/main/content/INSTALL.txt, +Alternatively, you can set the JAVA_HOME environment variable to point a suitable JDK., +To test if you have successfully installed the CLI you can run the following command:, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	# ENDPOINTS WEB CONFIGURATION ({sc-spring-boot-actuator-autoconfigure}/endpoint/web/WebEndpointProperties.{sc-ext}[WebEndpointProperties]), +	management.endpoints.web.base-path=/application # Base path for Web endpoints. Relative to server.context-path or management.server.context-path if management.server.port is configured., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfigurationTests.java, +						.doesNotHaveBean(AuditEventsJmxEndpointExtension.class), +						.doesNotHaveBean(AuditEventsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/session/SessionsEndpointAutoConfigurationTests.java, +		this.contextRunner.withPropertyValues("endpoints.sessions.enabled:false"), +				.run((context) -> assertThat(context), +						.doesNotHaveBean(SessionsEndpoint.class), +						.doesNotHaveBean(SessionsWebEndpointExtension.class));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, + * {@link EnableAutoConfiguration Auto-configuration} for Couchbase., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, +		LettuceClientConfiguration clientConfig = getLettuceClientConfiguration(clientResources,, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfigurationTests.java, +	public void providerDisablesAutoCommitIsNotConfiguredWithJta() {, +++ b/spring-boot-project/spring-boot-cli/src/main/content/INSTALL.txt, +Alternatively, you can set the JAVA_HOME environment variable to point a suitable JDK.]