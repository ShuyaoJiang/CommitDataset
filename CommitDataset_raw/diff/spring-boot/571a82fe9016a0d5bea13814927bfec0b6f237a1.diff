[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java, +import org.springframework.hateoas.EntityLinks;, +import org.springframework.hateoas.config.EnableEntityLinks;, +import org.springframework.web.bind.annotation.RequestMapping;, +@ConditionalOnClass({ Resource.class, RequestMapping.class, Plugin.class }), +@ConditionalOnWebApplication, +	@ConditionalOnMissingBean(LinkDiscoverers.class), +	}, +	@Configuration, +	@ConditionalOnMissingBean(EntityLinks.class), +	@EnableEntityLinks, +	protected static class EntityLinksConfiguration {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java, +import org.springframework.hateoas.EntityLinks;, +import org.springframework.hateoas.config.EnableEntityLinks;, +import org.springframework.web.bind.annotation.RequestMapping;, +@ConditionalOnClass({ Resource.class, RequestMapping.class, Plugin.class }), +@ConditionalOnWebApplication, +	@ConditionalOnMissingBean(LinkDiscoverers.class), +	}, +	@Configuration, +	@ConditionalOnMissingBean(EntityLinks.class), +	@EnableEntityLinks, +	protected static class EntityLinksConfiguration {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfigurationTests.java, +import org.springframework.hateoas.EntityLinks;, +	public void entityLinksCreated() throws Exception {, +		this.context = new AnnotationConfigWebApplicationContext();, +		this.context.register(HypermediaAutoConfiguration.class);, +		this.context.refresh();, +		EntityLinks discoverers = this.context.getBean(EntityLinks.class);, +		assertNotNull(discoverers);, +	}, +, +	@Test]