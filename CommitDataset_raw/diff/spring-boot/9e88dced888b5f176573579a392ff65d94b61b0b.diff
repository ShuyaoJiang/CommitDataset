[+++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteUrlPropertyExtractor.java, +import org.springframework.core.Ordered;, + * @author Andy Wilkinson, +		ApplicationListener<ApplicationEnvironmentPreparedEvent>, Ordered {, +	@Override, +	public int getOrder() {, +		return Ordered.HIGHEST_PRECEDENCE;, +	}, +, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteUrlPropertyExtractor.java, +import org.springframework.core.Ordered;, + * @author Andy Wilkinson, +		ApplicationListener<ApplicationEnvironmentPreparedEvent>, Ordered {, +	@Override, +	public int getOrder() {, +		return Ordered.HIGHEST_PRECEDENCE;, +	}, +, +++ /dev/null, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteUrlPropertyExtractor.java, +import org.springframework.core.Ordered;, + * @author Andy Wilkinson, +		ApplicationListener<ApplicationEnvironmentPreparedEvent>, Ordered {, +	@Override, +	public int getOrder() {, +		return Ordered.HIGHEST_PRECEDENCE;, +	}, +, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteUrlPropertyExtractor.java, +import org.springframework.core.Ordered;, + * @author Andy Wilkinson, +		ApplicationListener<ApplicationEnvironmentPreparedEvent>, Ordered {, +	@Override, +	public int getOrder() {, +		return Ordered.HIGHEST_PRECEDENCE;, +	}, +, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration.java, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/RemoteUrlPropertyExtractor.java, +import org.springframework.core.Ordered;, + * @author Andy Wilkinson, +		ApplicationListener<ApplicationEnvironmentPreparedEvent>, Ordered {, +	@Override, +	public int getOrder() {, +		return Ordered.HIGHEST_PRECEDENCE;, +	}, +, +++ /dev/null, +++ /dev/null, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration.java, +++ b/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/env/DevToolsHomePropertiesPostProcessor.java, +/*, + * Copyright 2012-2015 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.devtools.env;, +, +import java.io.File;, +import java.io.IOException;, +import java.util.Properties;, +, +import org.springframework.boot.SpringApplication;, +import org.springframework.boot.env.EnvironmentPostProcessor;, +import org.springframework.core.env.ConfigurableEnvironment;, +import org.springframework.core.env.PropertiesPropertySource;, +import org.springframework.core.io.FileSystemResource;, +import org.springframework.core.io.support.PropertiesLoaderUtils;, +import org.springframework.util.StringUtils;, +, +/**, + * {@link EnvironmentPostProcessor} to add devtools properties from the user's home, + * folder., + *, + * @author Phillip Webb, + * @author Andy Wilkinson, + * @since 1.3.0, + */, +public class DevToolsHomePropertiesPostProcessor implements EnvironmentPostProcessor {, +, +	private static final String FILE_NAME = ".spring-boot-devtools.properties";, +, +	@Override, +	public void postProcessEnvironment(ConfigurableEnvironment environment,, +			SpringApplication application) {]