[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.java, +import org.springframework.context.support.AbstractApplicationContext;, +@ConditionalOnMissingBean(name = AbstractApplicationContext.MESSAGE_SOURCE_BEAN_NAME, search = SearchStrategy.CURRENT), +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.java, +import org.springframework.context.support.AbstractApplicationContext;, +@ConditionalOnMissingBean(name = AbstractApplicationContext.MESSAGE_SOURCE_BEAN_NAME, search = SearchStrategy.CURRENT), +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/context/MessageSourceAutoConfigurationTests.java, +	@Test, +	public void messageSourceDeclaredWithNonStandardNameDoesNotBreakAutoConfig() {, +		this.contextRunner.withPropertyValues("spring.messages.basename:test/messages"), +				.withUserConfiguration(ConfigWithNonStandardMessageSourceBeanName.class), +				.run((context) -> {, +					assertThat(context.getMessage("foo", null, Locale.US)), +							.isEqualTo("bar");, +				});, +	}, +, +	private static class CodeReturningMessageSource implements MessageSource {, +, +		@Override, +		public String getMessage(String code, Object[] args, String defaultMessage,, +				Locale locale) {, +			return code;, +		}, +, +		@Override, +		public String getMessage(String code, Object[] args, Locale locale), +				throws NoSuchMessageException {, +			return code;, +		}, +, +		@Override, +		public String getMessage(MessageSourceResolvable resolvable, Locale locale), +				throws NoSuchMessageException {, +			return resolvable.getCodes()[0];, +		}, +, +	}, +, +	@Configuration, +	protected static class ConfigWithNonStandardMessageSourceBeanName {, +, +		@Bean, +		public MessageSource codeReturningMessageSource() {, +			return new CodeReturningMessageSource();, +		}, +, +	}, +, +			return new CodeReturningMessageSource();]