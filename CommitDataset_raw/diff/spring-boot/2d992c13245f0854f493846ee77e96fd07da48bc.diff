[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, +		 * @return the {@link DefaultCouchbaseEnvironment} builder., +		protected DefaultCouchbaseEnvironment.Builder initializeEnvironmentBuilder(, +				CouchbaseProperties properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, +		 * @return the {@link DefaultCouchbaseEnvironment} builder., +		protected DefaultCouchbaseEnvironment.Builder initializeEnvironmentBuilder(, +				CouchbaseProperties properties) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfigurationTests.java, +		load(CustomCouchbaseConfiguration.class,, +				"spring.couchbase.bootstrap-hosts=localhost",, +		DefaultCouchbaseEnvironment env = this.context, +				.getBean(DefaultCouchbaseEnvironment.class);, +		return new CouchbaseConfiguration(properties).couchbaseEnvironment();, +		protected DefaultCouchbaseEnvironment.Builder initializeEnvironmentBuilder(, +				CouchbaseProperties properties) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfiguration.java, +		 * @return the {@link DefaultCouchbaseEnvironment} builder., +		protected DefaultCouchbaseEnvironment.Builder initializeEnvironmentBuilder(, +				CouchbaseProperties properties) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/couchbase/CouchbaseAutoConfigurationTests.java, +		load(CustomCouchbaseConfiguration.class,, +				"spring.couchbase.bootstrap-hosts=localhost",, +		DefaultCouchbaseEnvironment env = this.context, +				.getBean(DefaultCouchbaseEnvironment.class);, +		return new CouchbaseConfiguration(properties).couchbaseEnvironment();, +		protected DefaultCouchbaseEnvironment.Builder initializeEnvironmentBuilder(, +				CouchbaseProperties properties) {, +++ b/spring-boot/src/main/java/org/springframework/boot/jta/narayana/NarayanaProperties.java, +	 * Enable one phase commit optimization.]