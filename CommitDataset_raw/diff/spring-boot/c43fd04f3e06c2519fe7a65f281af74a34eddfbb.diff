[+++ b/spring-boot-autoconfigure/.gitignore, +data, +++ b/spring-boot-autoconfigure/.gitignore, +data, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.alt.mongo.CityMongoDbRepository;, +import org.springframework.boot.autoconfigure.data.alt.solr.CitySolrRepository;, +	@After, +	public void close() {, +		this.context.close();, +	}, +, +				.getBean(org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class));, +	@EnableJpaRepositories(basePackageClasses = org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class, excludeFilters = {, +++ b/spring-boot-autoconfigure/.gitignore, +data, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.alt.mongo.CityMongoDbRepository;, +import org.springframework.boot.autoconfigure.data.alt.solr.CitySolrRepository;, +	@After, +	public void close() {, +		this.context.close();, +	}, +, +				.getBean(org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class));, +	@EnableJpaRepositories(basePackageClasses = org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class, excludeFilters = {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaWebAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.JpaRepositoriesAutoConfiguration.JpaWebConfiguration;, + * Tests for {@link JpaWebConfiguration}., + * , +	@After, +	public void close() {, +		this.context.close();, +	}, +, +++ b/spring-boot-autoconfigure/.gitignore, +data, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.alt.mongo.CityMongoDbRepository;, +import org.springframework.boot.autoconfigure.data.alt.solr.CitySolrRepository;, +	@After, +	public void close() {, +		this.context.close();, +	}, +, +				.getBean(org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class));, +	@EnableJpaRepositories(basePackageClasses = org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class, excludeFilters = {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaWebAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.JpaRepositoriesAutoConfiguration.JpaWebConfiguration;, + * Tests for {@link JpaWebConfiguration}., + * , +	@After, +	public void close() {, +		this.context.close();, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.alt.mongo.CityMongoDbRepository;, +import org.springframework.boot.autoconfigure.data.empty.EmptyDataPackage;, +	@After, +	public void close() {, +		this.context.close();, +	}, +, +	@TestAutoConfigurationPackage(EmptyDataPackage.class), +++ b/spring-boot-autoconfigure/.gitignore, +data, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaRepositoriesAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.alt.mongo.CityMongoDbRepository;, +import org.springframework.boot.autoconfigure.data.alt.solr.CitySolrRepository;, +	@After, +	public void close() {, +		this.context.close();, +	}, +, +				.getBean(org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class));, +	@EnableJpaRepositories(basePackageClasses = org.springframework.boot.autoconfigure.data.alt.jpa.CityJpaRepository.class, excludeFilters = {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/JpaWebAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.JpaRepositoriesAutoConfiguration.JpaWebConfiguration;, + * Tests for {@link JpaWebConfiguration}., + * , +	@After, +	public void close() {, +		this.context.close();, +	}, +, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/data/MongoRepositoriesAutoConfigurationTests.java, +import org.junit.After;, +import org.springframework.boot.autoconfigure.data.alt.mongo.CityMongoDbRepository;, +import org.springframework.boot.autoconfigure.data.empty.EmptyDataPackage;, +	@After, +	public void close() {]