[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration.java, + * @author Eddú Meléndez, +			Hooks.onOperator(Hooks.OperatorHook::operatorStacktrace);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration.java, + * @author Eddú Meléndez, +			Hooks.onOperator(Hooks.OperatorHook::operatorStacktrace);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration.java, + * @author Eddú Meléndez, +			Hooks.onOperator(Hooks.OperatorHook::operatorStacktrace);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.java, + * @author Eddú Meléndez, +				this.viewResolvers.forEach(registry::viewResolver);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration.java, + * @author Eddú Meléndez, +			Hooks.onOperator(Hooks.OperatorHook::operatorStacktrace);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.java, + * @author Eddú Meléndez, +				this.viewResolvers.forEach(registry::viewResolver);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AbstractPropertyMapperTests.java, + * @author Eddú Meléndez, +				.stream().map(PropertyMapping::getPropertySourceName).iterator();, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/reactor/core/ReactorCoreAutoConfiguration.java, + * @author Eddú Meléndez, +			Hooks.onOperator(Hooks.OperatorHook::operatorStacktrace);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java, +					.getIfAvailable(Collections::emptyList);, +					.getIfAvailable(Collections::emptyList);, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.java, + * @author Eddú Meléndez, +				this.viewResolvers.forEach(registry::viewResolver);, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/source/AbstractPropertyMapperTests.java, + * @author Eddú Meléndez, +				.stream().map(PropertyMapping::getPropertySourceName).iterator();, +++ b/spring-boot/src/test/java/org/springframework/boot/context/properties/source/ConfigurationPropertyNameTests.java, + * @author Eddú Meléndez, +		return ConfigurationPropertyName.of(name).stream().map(Element::toString)]