[+++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedConversionService.java, +import java.util.EnumSet;, +import java.util.Set;, +, +				source = source.trim();, +				for (T candidate : (Set<T>) EnumSet.allOf(this.enumType)) {, +					if (candidate.name().equalsIgnoreCase(source)) {, +						return candidate;, +					}, +				}, +				throw new IllegalArgumentException("No enum constant ", +						+ this.enumType.getCanonicalName() + "." + source);, +++ b/spring-boot/src/main/java/org/springframework/boot/bind/RelaxedConversionService.java, +import java.util.EnumSet;, +import java.util.Set;, +, +				source = source.trim();, +				for (T candidate : (Set<T>) EnumSet.allOf(this.enumType)) {, +					if (candidate.name().equalsIgnoreCase(source)) {, +						return candidate;, +					}, +				}, +				throw new IllegalArgumentException("No enum constant ", +						+ this.enumType.getCanonicalName() + "." + source);, +++ b/spring-boot/src/test/java/org/springframework/boot/bind/RelaxedDataBinderTests.java, +		assertThat(target.getBingo(), equalTo(Bingo.or));, +		THIS, or, THAT]