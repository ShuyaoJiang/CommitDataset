[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchAutoConfiguration.java, +import org.springframework.data.elasticsearch.client.NodeClientFactoryBean;, +import org.springframework.data.elasticsearch.client.TransportClientFactoryBean;, +import org.springframework.util.StringUtils;, + * @author Andy Wilkinson, +@ConditionalOnClass({ Client.class, TransportClientFactoryBean.class,, +		NodeClientFactoryBean.class }), +		try {, +			if (StringUtils.hasLength(this.properties.getClusterNodes())) {, +				this.client = createTransportClient();, +			}, +			else {, +				this.client = createNodeClient();, +			}, +		}, +		catch (Exception ex) {, +			throw new IllegalStateException(ex);, +		}, +	private Client createNodeClient() throws Exception {, +		NodeClientFactoryBean factory = new NodeClientFactoryBean(true);, +		factory.setClusterName(this.properties.getClusterName());, +		factory.afterPropertiesSet();, +		return factory.getObject();, +	}, +, +	private Client createTransportClient() throws Exception {, +		TransportClientFactoryBean factory = new TransportClientFactoryBean();, +		factory.setClusterName(this.properties.getClusterName());, +		factory.setClusterNodes(this.properties.getClusterNodes());, +		factory.afterPropertiesSet();, +		return factory.getObject();, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchAutoConfiguration.java, +import org.springframework.data.elasticsearch.client.NodeClientFactoryBean;, +import org.springframework.data.elasticsearch.client.TransportClientFactoryBean;, +import org.springframework.util.StringUtils;, + * @author Andy Wilkinson, +@ConditionalOnClass({ Client.class, TransportClientFactoryBean.class,, +		NodeClientFactoryBean.class }), +		try {, +			if (StringUtils.hasLength(this.properties.getClusterNodes())) {, +				this.client = createTransportClient();, +			}, +			else {, +				this.client = createNodeClient();, +			}, +		}, +		catch (Exception ex) {, +			throw new IllegalStateException(ex);, +		}, +	private Client createNodeClient() throws Exception {, +		NodeClientFactoryBean factory = new NodeClientFactoryBean(true);, +		factory.setClusterName(this.properties.getClusterName());, +		factory.afterPropertiesSet();, +		return factory.getObject();, +	}, +, +	private Client createTransportClient() throws Exception {, +		TransportClientFactoryBean factory = new TransportClientFactoryBean();, +		factory.setClusterName(this.properties.getClusterName());, +		factory.setClusterNodes(this.properties.getClusterNodes());, +		factory.afterPropertiesSet();, +		return factory.getObject();, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/elasticsearch/ElasticsearchProperties.java]