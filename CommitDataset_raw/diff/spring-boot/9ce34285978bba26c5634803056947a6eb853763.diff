[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedServletContainer.java, +		public void start() throws EmbeddedServletContainerException {, +			// Do nothing, +		};, +, +	 * Starts the embedded servlet container. Calling this method on an already started, +	 * container has no effect., +	 * @throws EmbeddedServletContainerException of the container cannot be stopped, +	 */, +	void start() throws EmbeddedServletContainerException;, +, +	/**, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedServletContainer.java, +		public void start() throws EmbeddedServletContainerException {, +			// Do nothing, +		};, +, +	 * Starts the embedded servlet container. Calling this method on an already started, +	 * container has no effect., +	 * @throws EmbeddedServletContainerException of the container cannot be stopped, +	 */, +	void start() throws EmbeddedServletContainerException;, +, +	/**, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedServletContainerFactory.java, +import org.apache.catalina.core.ApplicationContext;, +	 * Gets a new fully configured but paused {@link EmbeddedServletContainer} instance., +	 * Clients should not be able to connect to the returned server until, +	 * {@link EmbeddedServletContainer#start()} is called (which happens when the, +	 * {@link ApplicationContext} has been fully refreshed)., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedServletContainer.java, +		public void start() throws EmbeddedServletContainerException {, +			// Do nothing, +		};, +, +	 * Starts the embedded servlet container. Calling this method on an already started, +	 * container has no effect., +	 * @throws EmbeddedServletContainerException of the container cannot be stopped, +	 */, +	void start() throws EmbeddedServletContainerException;, +, +	/**, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedServletContainerFactory.java, +import org.apache.catalina.core.ApplicationContext;, +	 * Gets a new fully configured but paused {@link EmbeddedServletContainer} instance., +	 * Clients should not be able to connect to the returned server until, +	 * {@link EmbeddedServletContainer#start()} is called (which happens when the, +	 * {@link ApplicationContext} has been fully refreshed)., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java, +		createEmbeddedServletContainer();, +	}, +, +	@Override, +	protected void finishRefresh() {, +		super.finishRefresh();, +		startEmbeddedServletContainer();, +	private synchronized void createEmbeddedServletContainer() {, +	private void startEmbeddedServletContainer() {, +		if (this.embeddedServletContainer != null) {, +			this.embeddedServletContainer.start();, +		}, +	}, +, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactory.java, +		ConfigurableEmbeddedServletContainerFactory {, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedServletContainer.java, +		public void start() throws EmbeddedServletContainerException {, +			// Do nothing, +		};, +, +	 * Starts the embedded servlet container. Calling this method on an already started, +	 * container has no effect., +	 * @throws EmbeddedServletContainerException of the container cannot be stopped, +	 */, +	void start() throws EmbeddedServletContainerException;, +, +	/**, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedServletContainerFactory.java, +import org.apache.catalina.core.ApplicationContext;, +	 * Gets a new fully configured but paused {@link EmbeddedServletContainer} instance., +	 * Clients should not be able to connect to the returned server until, +	 * {@link EmbeddedServletContainer#start()} is called (which happens when the, +	 * {@link ApplicationContext} has been fully refreshed)., +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/embedded/EmbeddedWebApplicationContext.java, +		createEmbeddedServletContainer();, +	}, +, +	@Override, +	protected void finishRefresh() {, +		super.finishRefresh();, +		startEmbeddedServletContainer();, +	private synchronized void createEmbeddedServletContainer() {]