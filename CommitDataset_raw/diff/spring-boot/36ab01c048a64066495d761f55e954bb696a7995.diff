[+++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.core.env.Environment;, + * Interface class for writing a banner programmatically., + * @author Michael Stummvoll, + * @since 1.2.0, +public interface Banner {, +	 * @param environment the spring environment, +	 * @param out the output print stream, +	void write(Environment environment, PrintStream out);, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.core.env.Environment;, + * Interface class for writing a banner programmatically., + * @author Michael Stummvoll, + * @since 1.2.0, +public interface Banner {, +	 * @param environment the spring environment, +	 * @param out the output print stream, +	void write(Environment environment, PrintStream out);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	private static final Banner DEFAULT_BANNER = new SpringBootBanner();, +, +	private Banner banner;, +, +			printBannerResource(environment, resource);, +			return;, +		}, +, +		if (this.banner != null) {, +			this.banner.write(environment, System.out);, +			return;, +		}, +, +		printBanner();, +	}, +, +	private void printBannerResource(Environment environment, Resource resource) {, +	 * @deprecated since 1.2.0 in favor of {@link #setBanner(Banner)}, +	@Deprecated, +		DEFAULT_BANNER.write(null, System.out);, +	 * Sets the {@link Banner} instance which will be used to print the banner when no, +	 * static banner file is provided., +	 * @param banner The Banner instance to use, +	 */, +	public void setBanner(Banner banner) {, +		this.banner = banner;, +	}, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/Banner.java, + * Copyright 2012-2014 the original author or authors., +import org.springframework.core.env.Environment;, + * Interface class for writing a banner programmatically., + * @author Michael Stummvoll, + * @since 1.2.0, +public interface Banner {, +	 * @param environment the spring environment, +	 * @param out the output print stream, +	void write(Environment environment, PrintStream out);, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +	private static final Banner DEFAULT_BANNER = new SpringBootBanner();, +, +	private Banner banner;, +, +			printBannerResource(environment, resource);, +			return;, +		}, +, +		if (this.banner != null) {, +			this.banner.write(environment, System.out);, +			return;, +		}, +, +		printBanner();, +	}, +, +	private void printBannerResource(Environment environment, Resource resource) {, +	 * @deprecated since 1.2.0 in favor of {@link #setBanner(Banner)}, +	@Deprecated, +		DEFAULT_BANNER.write(null, System.out);, +	 * Sets the {@link Banner} instance which will be used to print the banner when no, +	 * static banner file is provided., +	 * @param banner The Banner instance to use, +	 */, +	public void setBanner(Banner banner) {, +		this.banner = banner;, +	}, +, +	/**, +++ b/spring-boot/src/main/java/org/springframework/boot/SpringBootBanner.java, +/*, + * Copyright 2012-2013 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *]