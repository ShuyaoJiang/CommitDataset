[+++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-dependencies/pom.xml, +		<tomcat.version>8.5.4</tomcat.version>, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-dependencies/pom.xml, +		<tomcat.version>8.5.4</tomcat.version>, +++ b/spring-boot-devtools/pom.xml, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-dependencies/pom.xml, +		<tomcat.version>8.5.4</tomcat.version>, +++ b/spring-boot-devtools/pom.xml, +++ b/spring-boot-docs/pom.xml, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-dependencies/pom.xml, +		<tomcat.version>8.5.4</tomcat.version>, +++ b/spring-boot-devtools/pom.xml, +++ b/spring-boot-docs/pom.xml, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +=== Use Tomcat 7.x or 8.0, +Tomcat 7 & 8.0 work with Spring Boot, but the default is to use Tomcat 8.5. If you cannot, +use Tomcat 8.5 (for example, because you are using Java 1.6) you will need to change your, +classpath to reference a different version., +==== Use Tomcat 7.x or 8.0 with Maven, +If you are using the starters and parent you can change the Tomcat version property, +and additionally import `tomcat-juli`. E.g. for a simple webapp or service:, +		<dependency>, +			<groupId>org.apache.tomcat</groupId>, +			<artifactId>tomcat-juli</artifactId>, +			<version>${tomcat.version}</version>, +		</dependency>, +==== Use Tomcat 7.x or 8.0 with Gradle, +With Gradle, you can change the Tomcat version by setting the `tomcat.version` property, +and then additionally include `tomcat-juli`:, +		compile group:'org.apache.tomcat', name:'tomcat-juli', version:property('tomcat.version'), +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-dependencies/pom.xml, +		<tomcat.version>8.5.4</tomcat.version>, +++ b/spring-boot-devtools/pom.xml, +++ b/spring-boot-docs/pom.xml, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +=== Use Tomcat 7.x or 8.0, +Tomcat 7 & 8.0 work with Spring Boot, but the default is to use Tomcat 8.5. If you cannot, +use Tomcat 8.5 (for example, because you are using Java 1.6) you will need to change your, +classpath to reference a different version., +==== Use Tomcat 7.x or 8.0 with Maven, +If you are using the starters and parent you can change the Tomcat version property, +and additionally import `tomcat-juli`. E.g. for a simple webapp or service:, +		<dependency>, +			<groupId>org.apache.tomcat</groupId>, +			<artifactId>tomcat-juli</artifactId>, +			<version>${tomcat.version}</version>, +		</dependency>, +==== Use Tomcat 7.x or 8.0 with Gradle, +With Gradle, you can change the Tomcat version by setting the `tomcat.version` property, +and then additionally include `tomcat-juli`:, +		compile group:'org.apache.tomcat', name:'tomcat-juli', version:property('tomcat.version'), +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +ext['h2.version'] = '1.4.192', +, +	compile group:"com.h2database", name:"h2", version:property('h2.version'), +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-dependencies/pom.xml, +		<tomcat.version>8.5.4</tomcat.version>, +++ b/spring-boot-devtools/pom.xml, +++ b/spring-boot-docs/pom.xml, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +=== Use Tomcat 7.x or 8.0, +Tomcat 7 & 8.0 work with Spring Boot, but the default is to use Tomcat 8.5. If you cannot, +use Tomcat 8.5 (for example, because you are using Java 1.6) you will need to change your, +classpath to reference a different version., +==== Use Tomcat 7.x or 8.0 with Maven, +If you are using the starters and parent you can change the Tomcat version property, +and additionally import `tomcat-juli`. E.g. for a simple webapp or service:, +		<dependency>, +			<groupId>org.apache.tomcat</groupId>, +			<artifactId>tomcat-juli</artifactId>, +			<version>${tomcat.version}</version>, +		</dependency>, +==== Use Tomcat 7.x or 8.0 with Gradle, +With Gradle, you can change the Tomcat version by setting the `tomcat.version` property, +and then additionally include `tomcat-juli`:, +		compile group:'org.apache.tomcat', name:'tomcat-juli', version:property('tomcat.version'), +++ b/spring-boot-samples/spring-boot-sample-actuator/build.gradle, +ext['h2.version'] = '1.4.192', +, +	compile group:"com.h2database", name:"h2", version:property('h2.version'), +++ b/spring-boot-samples/spring-boot-sample-tomcat-jsp/pom.xml, +++ b/spring-boot-actuator/pom.xml, +++ b/spring-boot-dependencies/pom.xml, +		<tomcat.version>8.5.4</tomcat.version>, +++ b/spring-boot-devtools/pom.xml, +++ b/spring-boot-docs/pom.xml, +++ b/spring-boot-docs/src/main/asciidoc/howto.adoc, +=== Use Tomcat 7.x or 8.0, +Tomcat 7 & 8.0 work with Spring Boot, but the default is to use Tomcat 8.5. If you cannot, +use Tomcat 8.5 (for example, because you are using Java 1.6) you will need to change your, +classpath to reference a different version., +==== Use Tomcat 7.x or 8.0 with Maven, +If you are using the starters and parent you can change the Tomcat version property]