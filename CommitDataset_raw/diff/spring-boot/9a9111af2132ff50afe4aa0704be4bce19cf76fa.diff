[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context, +					.getBean(DispatcherServletPath.class);, +			return new ServletEndpointRegistrar(, +					dispatcherServletPath.getRelativePath(properties.getBasePath()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context, +					.getBean(DispatcherServletPath.class);, +			return new ServletEndpointRegistrar(, +					dispatcherServletPath.getRelativePath(properties.getBasePath()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +				String pathPrefix = getPathPrefix(context);, +				return createDelegate(context, new RequestMatcherFactory(pathPrefix));, +		private String getPathPrefix(WebApplicationContext context) {, +				return context.getBean(DispatcherServletPath.class).getPrefix();, +				return "";, +				delegateMatchers.add(, +					.map((path) -> requestMatcherFactory.antPath(path, "/**")), +				return requestMatcherFactory.antPath(properties.getBasePath());, +		private final String prefix;, +		RequestMatcherFactory(String prefix) {, +			this.prefix = prefix;, +		public RequestMatcher antPath(String... parts) {, +			String pattern = this.prefix;, +			for (String part : parts) {, +				pattern += part;, +			}, +			return new AntPathRequestMatcher(pattern);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context, +					.getBean(DispatcherServletPath.class);, +			return new ServletEndpointRegistrar(, +					dispatcherServletPath.getRelativePath(properties.getBasePath()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +				String pathPrefix = getPathPrefix(context);, +				return createDelegate(context, new RequestMatcherFactory(pathPrefix));, +		private String getPathPrefix(WebApplicationContext context) {, +				return context.getBean(DispatcherServletPath.class).getPrefix();, +				return "";, +				delegateMatchers.add(, +					.map((path) -> requestMatcherFactory.antPath(path, "/**")), +				return requestMatcherFactory.antPath(properties.getBasePath());, +		private final String prefix;, +		RequestMatcherFactory(String prefix) {, +			this.prefix = prefix;, +		public RequestMatcher antPath(String... parts) {, +			String pattern = this.prefix;, +			for (String part : parts) {, +				pattern += part;, +			}, +			return new AntPathRequestMatcher(pattern);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean;, +	@Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME), +	public DispatcherServletRegistrationBean dispatcherServletRegistrationBean(, +			DispatcherServlet dispatcherServlet) {, +		return new DispatcherServletRegistrationBean(dispatcherServlet, "/");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			DispatcherServletPath dispatcherServletPath = this.context, +					.getBean(DispatcherServletPath.class);, +			return new ServletEndpointRegistrar(, +					dispatcherServletPath.getRelativePath(properties.getBasePath()),, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +				String pathPrefix = getPathPrefix(context);, +				return createDelegate(context, new RequestMatcherFactory(pathPrefix));, +		private String getPathPrefix(WebApplicationContext context) {, +				return context.getBean(DispatcherServletPath.class).getPrefix();, +				return "";, +				delegateMatchers.add(, +					.map((path) -> requestMatcherFactory.antPath(path, "/**")), +				return requestMatcherFactory.antPath(properties.getBasePath());, +		private final String prefix;, +		RequestMatcherFactory(String prefix) {, +			this.prefix = prefix;, +		public RequestMatcher antPath(String... parts) {, +			String pattern = this.prefix;, +			for (String part : parts) {, +				pattern += part;, +			}, +			return new AntPathRequestMatcher(pattern);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean;, +	@Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME), +	public DispatcherServletRegistrationBean dispatcherServletRegistrationBean(, +			DispatcherServlet dispatcherServlet) {, +		return new DispatcherServletRegistrationBean(dispatcherServlet, "/");, +	}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfigurationTests.java, +import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath;, +			String basePath = (String) ReflectionTestUtils.getField(bean, "basePath");]