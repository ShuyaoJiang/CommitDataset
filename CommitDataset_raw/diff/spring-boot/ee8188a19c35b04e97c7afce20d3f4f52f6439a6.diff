[+++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +++ b/ci/pipeline.yml, +      - task: determine-email-body, +        image: spring-boot-ci-image, +        file: git-repo/ci/tasks/determine-email-body.yml, +        params:, +          STATE: failure, +          subject: email-details/subject, +          body: email-details/body, +  - do:, +    - task: determine-email-body, +      image: spring-boot-ci-image, +      file: git-repo/ci/tasks/determine-email-body.yml, +      params:, +        STATE: success, +  - put: email-notification, +    params:, +      subject: email-details/subject, +      body: email-details/body, +++ b/ci/README.adoc, +$ fly -t spring set-pipeline -p spring-boot-2.0.x -c ci/pipeline.yml -l ci/parameters.yml, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-milestone, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-rc, +$ fly -t spring trigger-job -j spring-boot-2.0.x/stage-release, +$ fly -t spring trigger-job -j spring-boot-2.0.x/promote-release, +++ b/ci/parameters.yml, +branch: "2.0.x", +++ b/ci/pipeline.yml, +      - task: determine-email-body, +        image: spring-boot-ci-image, +        file: git-repo/ci/tasks/determine-email-body.yml, +        params:, +          STATE: failure, +          subject: email-details/subject, +          body: email-details/body, +  - do:, +    - task: determine-email-body, +      image: spring-boot-ci-image, +      file: git-repo/ci/tasks/determine-email-body.yml, +      params:, +        STATE: success, +  - put: email-notification, +    params:, +      subject: email-details/subject, +      body: email-details/body, +++ b/ci/scripts/determine-email-body.sh, +#!/bin/bash, +set -e, +, +mkdir email-details, +, +PREV_SHA=$(git rev-parse HEAD^1), +PREV_STATUSES=$(curl https://api.github.com/repos/spring-projects/spring-boot/commits/$PREV_SHA/statuses), +PREV_STATES=echo $PREV_STATUSES | jq -r '.[]  | select(.context == "build") | .state', +WAS_PREV_SUCCESSFUL=$(echo $PREV_STATES | grep 'success'), +, +if [[ $STATE == "success" ]];then, +	echo "Build SUCCESSFUL ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME} / ${BUILD_NAME}" > email-details/subject, +	if [[ $WAS_PREV_SUCCESSFUL == "" ]];then, +    	echo "Build ${ATC_EXTERNAL_URL}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME} is successful!" > email-details/body, +	elif [[ $WAS_PREV_SUCCESSFUL == "success" ]];then, +		echo "" > email-details/body, +	fi, +fi, +elif [[ $STATE == "failure" ]];then, +	echo "Build ${ATC_EXTERNAL_URL}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME} has failed!" > email-details/body, +	if [[ $WAS_PREV_SUCCESSFUL == "" ]];then, +		echo "Still FAILING ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME} / ${BUILD_NAME}" > email-details/subject, +	elif [[ $WAS_PREV_SUCCESSFUL == "success" ]];then, +		echo "Build FAILURE ${BUILD_PIPELINE_NAME} / ${BUILD_JOB_NAME} / ${BUILD_NAME}" > email-details/subject, +	fi]