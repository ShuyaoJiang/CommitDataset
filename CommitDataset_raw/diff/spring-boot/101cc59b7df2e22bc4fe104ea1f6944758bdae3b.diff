[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactory.java, +		Boolean uniqueNames = environment.getProperty("spring.jmx.unique-names",, +		if (uniqueNames == null) {, +		if (endpointUniqueNames != null & !uniqueNames.equals(endpointUniqueNames)) {, +		return uniqueNames;, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactory.java, +		Boolean uniqueNames = environment.getProperty("spring.jmx.unique-names",, +		if (uniqueNames == null) {, +		if (endpointUniqueNames != null & !uniqueNames.equals(endpointUniqueNames)) {, +		return uniqueNames;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +			if (this.properties.isCheckLocation()) {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactory.java, +		Boolean uniqueNames = environment.getProperty("spring.jmx.unique-names",, +		if (uniqueNames == null) {, +		if (endpointUniqueNames != null & !uniqueNames.equals(endpointUniqueNames)) {, +		return uniqueNames;, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +			if (this.properties.isCheckLocation()) {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java, +		boolean uniqueNames = this.environment.getProperty("spring.jmx.unique-names",, +		namingStrategy.setEnsureUniqueRuntimeObjectNames(uniqueNames);]