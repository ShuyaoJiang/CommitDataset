[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +		if ((message != null || errorAttributes.get("message") == null) && !(error instanceof BindingResult)) {, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/DefaultErrorAttributes.java, +		if ((message != null || errorAttributes.get("message") == null) && !(error instanceof BindingResult)) {, +++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/BasicErrorControllerIntegrationTests.java, +import org.springframework.http.HttpStatus;, +import org.springframework.web.bind.annotation.ResponseStatus;, +				+ "exception=java.lang.IllegalStateException, ", +				+ "message=Server Error, " + "path=/}"));, +	}, +, +	@Test, +	@SuppressWarnings("rawtypes"), +	public void testErrorForAnnotatedException() throws Exception {, +		ResponseEntity<Map> entity = new TestRestTemplate().getForEntity(, +				"http://localhost:" + this.port + "/annotated", Map.class);, +		assertThat(, +				entity.getBody().toString(),, +				endsWith("status=400, ", +						+ "error=Bad Request, ", +						+ "exception=org.springframework.boot.autoconfigure.web.BasicErrorControllerIntegrationTests$TestConfiguration$Errors$ExpectedException, ", +						+ "message=Expected!, " + "path=/annotated}"));, +			@RequestMapping("/annotated"), +			public String annotated() {, +				throw new ExpectedException();, +			}, +, +			@ResponseStatus(value = HttpStatus.BAD_REQUEST, reason = "Expected!"), +			@SuppressWarnings("serial"), +			private static class ExpectedException extends RuntimeException {, +, +			}, +]