[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/AuditAutoConfiguration.java, +			ObjectProvider<AuditEventRepository> auditEventRepository) {, +		this.auditEventRepository = auditEventRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/AuditAutoConfiguration.java, +			ObjectProvider<AuditEventRepository> auditEventRepository) {, +		this.auditEventRepository = auditEventRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				ObjectProvider<ManagementServerProperties> management) {, +			this.management = management.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/AuditAutoConfiguration.java, +			ObjectProvider<AuditEventRepository> auditEventRepository) {, +		this.auditEventRepository = auditEventRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				ObjectProvider<ManagementServerProperties> management) {, +			this.management = management.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public EndpointAutoConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +			ObjectProvider<Map<String, HealthIndicator>> healthIndicators,, +			ObjectProvider<List<InfoContributor>> infoContributors,, +			ObjectProvider<Collection<PublicMetrics>> publicMetrics,, +			ObjectProvider<TraceRepository> traceRepository) {, +		this.healthAggregator = healthAggregator.getIfAvailable();, +		this.healthIndicators = healthIndicators.getIfAvailable();, +		this.infoContributors = infoContributors.getIfAvailable();, +		this.publicMetrics = publicMetrics.getIfAvailable();, +		this.traceRepository = traceRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/AuditAutoConfiguration.java, +			ObjectProvider<AuditEventRepository> auditEventRepository) {, +		this.auditEventRepository = auditEventRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				ObjectProvider<ManagementServerProperties> management) {, +			this.management = management.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public EndpointAutoConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +			ObjectProvider<Map<String, HealthIndicator>> healthIndicators,, +			ObjectProvider<List<InfoContributor>> infoContributors,, +			ObjectProvider<Collection<PublicMetrics>> publicMetrics,, +			ObjectProvider<TraceRepository> traceRepository) {, +		this.healthAggregator = healthAggregator.getIfAvailable();, +		this.healthIndicators = healthIndicators.getIfAvailable();, +		this.infoContributors = infoContributors.getIfAvailable();, +		this.publicMetrics = publicMetrics.getIfAvailable();, +		this.traceRepository = traceRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +			ObjectProvider<ObjectMapper> objectMapper) {, +		this.objectMapper = objectMapper.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/AuditAutoConfiguration.java, +			ObjectProvider<AuditEventRepository> auditEventRepository) {, +		this.auditEventRepository = auditEventRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				ObjectProvider<ManagementServerProperties> management) {, +			this.management = management.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public EndpointAutoConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +			ObjectProvider<Map<String, HealthIndicator>> healthIndicators,, +			ObjectProvider<List<InfoContributor>> infoContributors,, +			ObjectProvider<Collection<PublicMetrics>> publicMetrics,, +			ObjectProvider<TraceRepository> traceRepository) {, +		this.healthAggregator = healthAggregator.getIfAvailable();, +		this.healthIndicators = healthIndicators.getIfAvailable();, +		this.infoContributors = infoContributors.getIfAvailable();, +		this.publicMetrics = publicMetrics.getIfAvailable();, +		this.traceRepository = traceRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +			ObjectProvider<ObjectMapper> objectMapper) {, +		this.objectMapper = objectMapper.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.java, +			ObjectProvider<List<EndpointHandlerMappingCustomizer>> mappingCustomizers) {, +		List<EndpointHandlerMappingCustomizer> providedCustomizers = mappingCustomizers, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/AuditAutoConfiguration.java, +			ObjectProvider<AuditEventRepository> auditEventRepository) {, +		this.auditEventRepository = auditEventRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/CrshAutoConfiguration.java, +				ObjectProvider<ManagementServerProperties> management) {, +			this.management = management.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +	public EndpointAutoConfiguration(ObjectProvider<HealthAggregator> healthAggregator,, +			ObjectProvider<Map<String, HealthIndicator>> healthIndicators,, +			ObjectProvider<List<InfoContributor>> infoContributors,, +			ObjectProvider<Collection<PublicMetrics>> publicMetrics,, +			ObjectProvider<TraceRepository> traceRepository) {, +		this.healthAggregator = healthAggregator.getIfAvailable();, +		this.healthIndicators = healthIndicators.getIfAvailable();, +		this.infoContributors = infoContributors.getIfAvailable();, +		this.publicMetrics = publicMetrics.getIfAvailable();, +		this.traceRepository = traceRepository.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointMBeanExportAutoConfiguration.java, +			ObjectProvider<ObjectMapper> objectMapper) {, +		this.objectMapper = objectMapper.getIfAvailable();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.java, +			ObjectProvider<List<EndpointHandlerMappingCustomizer>> mappingCustomizers) {, +		List<EndpointHandlerMappingCustomizer> providedCustomizers = mappingCustomizers, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java, +				ObjectProvider<Map<String, DataSource>> dataSources,, +				ObjectProvider<Collection<DataSourcePoolMetadataProvider>> metadataProviders) {, +			this.dataSources = filterDataSources(dataSources.getIfAvailable());, +			this.metadataProviders = metadataProviders.getIfAvailable();, +				ObjectProvider<Map<String, JavaMailSenderImpl>> mailSenders) {, +			this.mailSenders = mailSenders.getIfAvailable();, +				ObjectProvider<Map<String, ConnectionFactory>> connectionFactories) {]