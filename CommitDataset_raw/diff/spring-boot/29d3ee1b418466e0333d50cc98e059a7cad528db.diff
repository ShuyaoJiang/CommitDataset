[+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.java, +import java.util.Collections;, +			headers.put(name, Collections.list(this.request.getHeaders(name)));, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.java, +import java.util.Collections;, +			headers.put(name, Collections.list(this.request.getHeaders(name)));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java, +		public void setMixedBoolean(Boolean mixedBoolean) {, +			this.mixedBoolean = mixedBoolean;, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.java, +import java.util.Collections;, +			headers.put(name, Collections.list(this.request.getHeaders(name)));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java, +		public void setMixedBoolean(Boolean mixedBoolean) {, +			this.mixedBoolean = mixedBoolean;, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.java, +import java.util.Collections;, +			headers.put(name, Collections.list(this.request.getHeaders(name)));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java, +		public void setMixedBoolean(Boolean mixedBoolean) {, +			this.mixedBoolean = mixedBoolean;, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +		switch (deduceType(metadata)) {, +		case SERVLET:, +, +		case REACTIVE:, +, +		default:, +		return new ConditionOutcome(servletOutcome.isMatch() || reactiveOutcome.isMatch(),, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.java, +import java.util.Collections;, +			headers.put(name, Collections.list(this.request.getHeaders(name)));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java, +		public void setMixedBoolean(Boolean mixedBoolean) {, +			this.mixedBoolean = mixedBoolean;, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +		switch (deduceType(metadata)) {, +		case SERVLET:, +, +		case REACTIVE:, +, +		default:, +		return new ConditionOutcome(servletOutcome.isMatch() || reactiveOutcome.isMatch(),, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, + * Copyright 2012-2018 the original author or authors., +		private GenericObjectPoolConfig<?> getPoolConfig(Pool properties) {, +			GenericObjectPoolConfig<?> config = new GenericObjectPoolConfig<>();, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.java, +import java.util.Collections;, +			headers.put(name, Collections.list(this.request.getHeaders(name)));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java, +		public void setMixedBoolean(Boolean mixedBoolean) {, +			this.mixedBoolean = mixedBoolean;, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +		switch (deduceType(metadata)) {, +		case SERVLET:, +, +		case REACTIVE:, +, +		default:, +		return new ConditionOutcome(servletOutcome.isMatch() || reactiveOutcome.isMatch(),, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, + * Copyright 2012-2018 the original author or authors., +		private GenericObjectPoolConfig<?> getPoolConfig(Pool properties) {, +			GenericObjectPoolConfig<?> config = new GenericObjectPoolConfig<>();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/mongo/ReactiveMongoClientFactory.java, +		builder.retryWrites(connection.getRetryWrites());, +++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/web/trace/servlet/TraceableHttpServletRequest.java, +import java.util.Collections;, +			headers.put(name, Collections.list(this.request.getHeaders(name)));, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/context/properties/ConfigurationPropertiesReportEndpointTests.java, +		public void setMixedBoolean(Boolean mixedBoolean) {, +			this.mixedBoolean = mixedBoolean;, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/liquibase/LiquibaseEndpointTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/OnWebApplicationCondition.java, +		switch (deduceType(metadata)) {, +		case SERVLET:, +, +		case REACTIVE:, +, +		default:, +		return new ConditionOutcome(servletOutcome.isMatch() || reactiveOutcome.isMatch(),, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.java, + * Copyright 2012-2018 the original author or authors.]