[+++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/java/org/springframework/boot/launchscript/SysVinitLaunchScriptIT.java, +	public void forceStopWhenStopped() throws Exception {, +		String output = doTest("force-stop-when-stopped.sh");, +		assertThat(output).contains("Status: 0");, +		assertThat(output), +				.has(coloredString(AnsiColor.YELLOW, "Not running (pidfile not found)"));, +	}, +, +	@Test, +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/java/org/springframework/boot/launchscript/SysVinitLaunchScriptIT.java, +	public void forceStopWhenStopped() throws Exception {, +		String output = doTest("force-stop-when-stopped.sh");, +		assertThat(output).contains("Status: 0");, +		assertThat(output), +				.has(coloredString(AnsiColor.YELLOW, "Not running (pidfile not found)"));, +	}, +, +	@Test, +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/force-stop-when-stopped.sh, +source ./test-functions.sh, +install_service, +force_stop_service, +echo "Status: $?", +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/java/org/springframework/boot/launchscript/SysVinitLaunchScriptIT.java, +	public void forceStopWhenStopped() throws Exception {, +		String output = doTest("force-stop-when-stopped.sh");, +		assertThat(output).contains("Status: 0");, +		assertThat(output), +				.has(coloredString(AnsiColor.YELLOW, "Not running (pidfile not found)"));, +	}, +, +	@Test, +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/force-stop-when-stopped.sh, +source ./test-functions.sh, +install_service, +force_stop_service, +echo "Status: $?", +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/test-functions.sh, +force_stop_service() {, +  service spring-boot-app force-stop, +}, +, +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/java/org/springframework/boot/launchscript/SysVinitLaunchScriptIT.java, +	public void forceStopWhenStopped() throws Exception {, +		String output = doTest("force-stop-when-stopped.sh");, +		assertThat(output).contains("Status: 0");, +		assertThat(output), +				.has(coloredString(AnsiColor.YELLOW, "Not running (pidfile not found)"));, +	}, +, +	@Test, +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/force-stop-when-stopped.sh, +source ./test-functions.sh, +install_service, +force_stop_service, +echo "Status: $?", +++ b/spring-boot-integration-tests/spring-boot-launch-script-tests/src/test/resources/scripts/test-functions.sh, +force_stop_service() {, +  service spring-boot-app force-stop, +}, +, +++ b/spring-boot-tools/spring-boot-loader-tools/src/main/resources/org/springframework/boot/loader/tools/launch.script, +force_stop() {, +  [[ -f $pid_file ]] || { echoYellow "Not running (pidfile not found)"; return 0; }, +  pid=$(cat "$pid_file"), +  isRunning "$pid" || { echoYellow "Not running (process ${pid}). Removing stale pid file."; rm -f "$pid_file"; return 0; }, +  do_force_stop "$pid" "$pid_file", +}, +, +do_force_stop() {, +  kill -9 "$1" &> /dev/null || { echoRed "Unable to kill process $1"; return 1; }, +  for i in $(seq 1 60); do, +    isRunning "$1" || { echoGreen "Stopped [$1]"; rm -f "$2"; return 0; }, +    [[ $i -eq 30 ]] && kill -9 "$1" &> /dev/null, +    sleep 1, +  done, +  echoRed "Unable to kill process $1";, +  return 1;, +}, +, +force-stop), +  force_stop "$@"; exit $?;;]