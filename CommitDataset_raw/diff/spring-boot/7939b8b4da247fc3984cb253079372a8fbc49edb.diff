[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.java, +		@SuppressWarnings("deprecation"), +			String config = getLogFileConfig(environment, LogFile.FILE_NAME_PROPERTY,, +					LogFile.FILE_PROPERTY);, +			config = getLogFileConfig(environment, LogFile.FILE_PATH_PROPERTY,, +					LogFile.PATH_PROPERTY);, +		private String getLogFileConfig(Environment environment, String configName,, +				String deprecatedConfigName) {, +			String config = environment.resolvePlaceholders("${" + configName + ":}");, +			if (StringUtils.hasText(config)) {, +				return config;, +			}, +			return environment.resolvePlaceholders("${" + deprecatedConfigName + ":}");, +		}, +, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.java, +		@SuppressWarnings("deprecation"), +			String config = getLogFileConfig(environment, LogFile.FILE_NAME_PROPERTY,, +					LogFile.FILE_PROPERTY);, +			config = getLogFileConfig(environment, LogFile.FILE_PATH_PROPERTY,, +					LogFile.PATH_PROPERTY);, +		private String getLogFileConfig(Environment environment, String configName,, +				String deprecatedConfigName) {, +			String config = environment.resolvePlaceholders("${" + configName + ":}");, +			if (StringUtils.hasText(config)) {, +				return config;, +			}, +			return environment.resolvePlaceholders("${" + deprecatedConfigName + ":}");, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LogFileWebEndpointTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.java, +		@SuppressWarnings("deprecation"), +			String config = getLogFileConfig(environment, LogFile.FILE_NAME_PROPERTY,, +					LogFile.FILE_PROPERTY);, +			config = getLogFileConfig(environment, LogFile.FILE_PATH_PROPERTY,, +					LogFile.PATH_PROPERTY);, +		private String getLogFileConfig(Environment environment, String configName,, +				String deprecatedConfigName) {, +			String config = environment.resolvePlaceholders("${" + configName + ":}");, +			if (StringUtils.hasText(config)) {, +				return config;, +			}, +			return environment.resolvePlaceholders("${" + deprecatedConfigName + ":}");, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LogFileWebEndpointTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LogFileWebEndpointWebIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.java, +		@SuppressWarnings("deprecation"), +			String config = getLogFileConfig(environment, LogFile.FILE_NAME_PROPERTY,, +					LogFile.FILE_PROPERTY);, +			config = getLogFileConfig(environment, LogFile.FILE_PATH_PROPERTY,, +					LogFile.PATH_PROPERTY);, +		private String getLogFileConfig(Environment environment, String configName,, +				String deprecatedConfigName) {, +			String config = environment.resolvePlaceholders("${" + configName + ":}");, +			if (StringUtils.hasText(config)) {, +				return config;, +			}, +			return environment.resolvePlaceholders("${" + deprecatedConfigName + ":}");, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LogFileWebEndpointTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LogFileWebEndpointWebIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.file.name= # Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory., +	logging.file.path= # Location of the log file. For instance, `/var/log`., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.java, +		@SuppressWarnings("deprecation"), +			String config = getLogFileConfig(environment, LogFile.FILE_NAME_PROPERTY,, +					LogFile.FILE_PROPERTY);, +			config = getLogFileConfig(environment, LogFile.FILE_PATH_PROPERTY,, +					LogFile.PATH_PROPERTY);, +		private String getLogFileConfig(Environment environment, String configName,, +				String deprecatedConfigName) {, +			String config = environment.resolvePlaceholders("${" + configName + ":}");, +			if (StringUtils.hasText(config)) {, +				return config;, +			}, +			return environment.resolvePlaceholders("${" + deprecatedConfigName + ":}");, +		}, +, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LogFileWebEndpointTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/logging/LogFileWebEndpointWebIntegrationTests.java, + * Copyright 2012-2018 the original author or authors., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.file.name= # Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory., +	logging.file.path= # Location of the log file. For instance, `/var/log`., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/production-ready-features.adoc, +|Returns the contents of the logfile (if `logging.file.name` or `logging.file.path`, +properties have been set). Supports the use of the HTTP `Range` header to retrieve part of, +the log file's content., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.java]