[+++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/initializer/LoggingApplicationContextInitializer.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +import org.springframework.util.ResourceUtils;, +		private final Log logger = LogFactory, +				.getLog(LoggingApplicationContextInitializer.class);, +, +				String value = environment.getProperty("logging.config");, +				try {, +					ResourceUtils.getURL(value).openStream().close();, +					return value;, +				}, +				catch (Exception ex) {, +					// Swallow exception and continue, +				}, +				this.logger.warn("Logging environment value '" + value, +						+ "' cannot be opened and will be ignored");, +++ b/spring-bootstrap/src/main/java/org/springframework/bootstrap/context/initializer/LoggingApplicationContextInitializer.java, +import org.apache.commons.logging.Log;, +import org.apache.commons.logging.LogFactory;, +import org.springframework.util.ResourceUtils;, +		private final Log logger = LogFactory, +				.getLog(LoggingApplicationContextInitializer.class);, +, +				String value = environment.getProperty("logging.config");, +				try {, +					ResourceUtils.getURL(value).openStream().close();, +					return value;, +				}, +				catch (Exception ex) {, +					// Swallow exception and continue, +				}, +				this.logger.warn("Logging environment value '" + value, +						+ "' cannot be opened and will be ignored");, +++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/logging/LoggingApplicationContextInitializerTests.java, +	public void testOverrideConfigDoesNotExist() throws Exception {, +		GenericApplicationContext context = new GenericApplicationContext();, +		context.getEnvironment().getPropertySources(), +				.addFirst(new PropertySource<String>("manual") {, +					@Override, +					public Object getProperty(String name) {, +						if ("logging.config".equals(name)) {, +							return "doesnotexist.xml";, +						}, +						return null;, +					}, +				});, +		this.initializer.initialize(context);, +		// Should not throw, +	}, +, +	@Test]