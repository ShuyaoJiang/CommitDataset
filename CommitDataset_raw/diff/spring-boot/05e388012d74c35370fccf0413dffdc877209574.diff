[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/DataSourcePublicMetrics.java, +		if (name.length() > DATASOURCE_SUFFIX.length(), +				&& name.toLowerCase().endsWith(DATASOURCE_SUFFIX.toLowerCase())) {, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/DataSourcePublicMetrics.java, +		if (name.length() > DATASOURCE_SUFFIX.length(), +				&& name.toLowerCase().endsWith(DATASOURCE_SUFFIX.toLowerCase())) {, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/PublicMetricsAutoConfigurationTests.java, +	public void multipleDataSourcesWithCustomPrimary() {, +		load(MultipleDataSourcesWithCustomPrimaryConfig.class);, +		PublicMetrics bean = this.context.getBean(DataSourcePublicMetrics.class);, +		Collection<Metric<?>> metrics = bean.metrics();, +		assertMetrics(metrics, "datasource.primary.active", "datasource.primary.usage",, +				"datasource.dataSource.active", "datasource.dataSource.usage");, +	}, +, +	@Test, +	static class MultipleDataSourcesWithCustomPrimaryConfig {, +, +		@Bean, +		@Primary, +		public DataSource myDataSource() {, +			return initializeBuilder().type(org.apache.tomcat.jdbc.pool.DataSource.class), +					.build();, +		}, +, +		@Bean, +		public DataSource dataSource() {, +			return initializeBuilder().type(BasicDataSource.class).build();, +		}, +	}, +, +	@Configuration]