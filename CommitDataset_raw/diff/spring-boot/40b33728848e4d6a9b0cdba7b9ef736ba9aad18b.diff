[+++ b/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java, +		process((properties, map) -> {, +	 * {@link Constructor} that tracks property origins., +				replaceMappingNodeKeys((MappingNode) node);, +		private void replaceMappingNodeKeys(MappingNode node) {, +			node.setValue(node.getValue().stream().map(KeyScalarNode::get), +					.collect(Collectors.toList()));, +		}, +, +			super(node.getTag(), node.getValue(), node.getStartMark(), node.getEndMark(),, +					node.getStyle());, +		}, +, +		public static NodeTuple get(NodeTuple nodeTuple) {, +			Node keyNode = nodeTuple.getKeyNode();, +			Node valueNode = nodeTuple.getValueNode();, +			return new NodeTuple(KeyScalarNode.get(keyNode), valueNode);, +	/**, +	 * {@link SpringProfileDocumentMatcher} that deals with {@link OriginTrackedValue, +	 * OriginTrackedValues}., +	 */, +++ b/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java, +		process((properties, map) -> {, +	 * {@link Constructor} that tracks property origins., +				replaceMappingNodeKeys((MappingNode) node);, +		private void replaceMappingNodeKeys(MappingNode node) {, +			node.setValue(node.getValue().stream().map(KeyScalarNode::get), +					.collect(Collectors.toList()));, +		}, +, +			super(node.getTag(), node.getValue(), node.getStartMark(), node.getEndMark(),, +					node.getStyle());, +		}, +, +		public static NodeTuple get(NodeTuple nodeTuple) {, +			Node keyNode = nodeTuple.getKeyNode();, +			Node valueNode = nodeTuple.getValueNode();, +			return new NodeTuple(KeyScalarNode.get(keyNode), valueNode);, +	/**, +	 * {@link SpringProfileDocumentMatcher} that deals with {@link OriginTrackedValue, +	 * OriginTrackedValues}., +	 */, +++ b/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/AnnotationConfigServletWebServerApplicationContextTests.java, +import org.springframework.boot.web.servlet.context.config.ExampleServletWebServerApplicationConfiguration;, +				ExampleServletWebServerApplicationConfiguration.class.getPackage(), +						.getName());, +				ExampleServletWebServerApplicationConfiguration.class,, +				ExampleServletWebServerApplicationConfiguration.class,, +				ExampleServletWebServerApplicationConfiguration.class);, +		this.context.register(ExampleServletWebServerApplicationConfiguration.class);, +		this.context.scan(ExampleServletWebServerApplicationConfiguration.class, +				.getPackage().getName());, +++ b/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java, +		process((properties, map) -> {, +	 * {@link Constructor} that tracks property origins., +				replaceMappingNodeKeys((MappingNode) node);, +		private void replaceMappingNodeKeys(MappingNode node) {, +			node.setValue(node.getValue().stream().map(KeyScalarNode::get), +					.collect(Collectors.toList()));, +		}, +, +			super(node.getTag(), node.getValue(), node.getStartMark(), node.getEndMark(),, +					node.getStyle());, +		}, +, +		public static NodeTuple get(NodeTuple nodeTuple) {, +			Node keyNode = nodeTuple.getKeyNode();, +			Node valueNode = nodeTuple.getValueNode();, +			return new NodeTuple(KeyScalarNode.get(keyNode), valueNode);, +	/**, +	 * {@link SpringProfileDocumentMatcher} that deals with {@link OriginTrackedValue, +	 * OriginTrackedValues}., +	 */, +++ b/spring-boot/src/test/java/org/springframework/boot/web/servlet/context/AnnotationConfigServletWebServerApplicationContextTests.java, +import org.springframework.boot.web.servlet.context.config.ExampleServletWebServerApplicationConfiguration;, +				ExampleServletWebServerApplicationConfiguration.class.getPackage(), +						.getName());, +				ExampleServletWebServerApplicationConfiguration.class,, +				ExampleServletWebServerApplicationConfiguration.class,, +				ExampleServletWebServerApplicationConfiguration.class);, +		this.context.register(ExampleServletWebServerApplicationConfiguration.class);, +		this.context.scan(ExampleServletWebServerApplicationConfiguration.class, +				.getPackage().getName());, +++ /dev/null, +++ b/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java, +		process((properties, map) -> {, +	 * {@link Constructor} that tracks property origins., +				replaceMappingNodeKeys((MappingNode) node);, +		private void replaceMappingNodeKeys(MappingNode node) {, +			node.setValue(node.getValue().stream().map(KeyScalarNode::get), +					.collect(Collectors.toList()));, +		}, +, +			super(node.getTag(), node.getValue(), node.getStartMark(), node.getEndMark(),, +					node.getStyle());, +		}, +, +		public static NodeTuple get(NodeTuple nodeTuple) {, +			Node keyNode = nodeTuple.getKeyNode();, +			Node valueNode = nodeTuple.getValueNode();]