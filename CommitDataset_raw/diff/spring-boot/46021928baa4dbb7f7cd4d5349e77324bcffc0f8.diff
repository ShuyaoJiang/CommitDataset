[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementChildContextConfiguration.java, +import org.springframework.boot.actuate.autoconfigure.web.server.ManagementWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer;, +	public ReactiveManagementWebServerFactoryCustomizer reactiveManagementWebServerFactoryCustomizer(, +		return new ReactiveManagementWebServerFactoryCustomizer(beanFactory);, +	class ReactiveManagementWebServerFactoryCustomizer extends, +			ManagementWebServerFactoryCustomizer<ConfigurableReactiveWebServerFactory> {, +		ReactiveManagementWebServerFactoryCustomizer(ListableBeanFactory beanFactory) {, +			super(beanFactory, ReactiveWebServerFactoryCustomizer.class,, +					TomcatWebServerFactoryCustomizer.class,, +					JettyWebServerFactoryCustomizer.class,, +					UndertowWebServerFactoryCustomizer.class);, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementChildContextConfiguration.java, +import org.springframework.boot.actuate.autoconfigure.web.server.ManagementWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer;, +	public ReactiveManagementWebServerFactoryCustomizer reactiveManagementWebServerFactoryCustomizer(, +		return new ReactiveManagementWebServerFactoryCustomizer(beanFactory);, +	class ReactiveManagementWebServerFactoryCustomizer extends, +			ManagementWebServerFactoryCustomizer<ConfigurableReactiveWebServerFactory> {, +		ReactiveManagementWebServerFactoryCustomizer(ListableBeanFactory beanFactory) {, +			super(beanFactory, ReactiveWebServerFactoryCustomizer.class,, +					TomcatWebServerFactoryCustomizer.class,, +					JettyWebServerFactoryCustomizer.class,, +					UndertowWebServerFactoryCustomizer.class);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementChildContextConfiguration.java, +import org.springframework.boot.actuate.autoconfigure.web.server.ManagementWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer;, +import org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer;, +	public ReactiveManagementWebServerFactoryCustomizer reactiveManagementWebServerFactoryCustomizer(, +		return new ReactiveManagementWebServerFactoryCustomizer(beanFactory);, +	class ReactiveManagementWebServerFactoryCustomizer extends, +			ManagementWebServerFactoryCustomizer<ConfigurableReactiveWebServerFactory> {, +		ReactiveManagementWebServerFactoryCustomizer(ListableBeanFactory beanFactory) {, +			super(beanFactory, ReactiveWebServerFactoryCustomizer.class,, +					TomcatWebServerFactoryCustomizer.class,, +					JettyWebServerFactoryCustomizer.class,, +					UndertowWebServerFactoryCustomizer.class);, +++ /dev/null, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/web/server/ManagementWebServerFactoryCustomizer.java, +/*, + * Copyright 2012-2018 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.actuate.autoconfigure.web.server;, +, +import java.util.Arrays;, +import java.util.Collections;, +import java.util.List;, +import java.util.Objects;, +import java.util.stream.Collectors;, +, +import org.springframework.beans.factory.BeanFactoryUtils;, +import org.springframework.beans.factory.ListableBeanFactory;, +import org.springframework.beans.factory.NoSuchBeanDefinitionException;, +import org.springframework.boot.autoconfigure.web.ServerProperties;, +import org.springframework.boot.util.LambdaSafe;, +import org.springframework.boot.web.server.ConfigurableWebServerFactory;, +import org.springframework.boot.web.server.ErrorPage;, +import org.springframework.boot.web.server.Ssl;, +import org.springframework.boot.web.server.WebServerFactory;, +import org.springframework.boot.web.server.WebServerFactoryCustomizer;, +import org.springframework.core.Ordered;, +, +/**, + * {@link WebServerFactoryCustomizer} that customizes the {@link WebServerFactory} used to, + * create the management context's web server., + *, + * @param <T> the type of web server factory to customize, + * @author Andy Wilkinson, + * @since 2.0.0, + */, +public abstract class ManagementWebServerFactoryCustomizer<T extends ConfigurableWebServerFactory>, +		implements WebServerFactoryCustomizer<T>, Ordered {, +, +	private final ListableBeanFactory beanFactory;, +, +	private final Class<? extends WebServerFactoryCustomizer<?>>[] customizerClasses;, +, +	@SafeVarargs]