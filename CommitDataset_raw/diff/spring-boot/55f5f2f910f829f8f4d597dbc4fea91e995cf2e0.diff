[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler.java, +		if (message != null && message.toLowerCase().contains("broken pipe")) {, +			return true;, +		}, +		return DISCONNECTED_CLIENT_EXCEPTIONS.contains(ex.getClass().getSimpleName());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler.java, +		if (message != null && message.toLowerCase().contains("broken pipe")) {, +			return true;, +		}, +		return DISCONNECTED_CLIENT_EXCEPTIONS.contains(ex.getClass().getSimpleName());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +	public void whenReactiveWebApplicationHttpMessageConvertersIsNotConfigured() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler.java, +		if (message != null && message.toLowerCase().contains("broken pipe")) {, +			return true;, +		}, +		return DISCONNECTED_CLIENT_EXCEPTIONS.contains(ex.getClass().getSimpleName());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +	public void whenReactiveWebApplicationHttpMessageConvertersIsNotConfigured() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationTests.java, +			.withUserConfiguration(ResourceConfigConfiguration.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler.java, +		if (message != null && message.toLowerCase().contains("broken pipe")) {, +			return true;, +		}, +		return DISCONNECTED_CLIENT_EXCEPTIONS.contains(ex.getClass().getSimpleName());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +	public void whenReactiveWebApplicationHttpMessageConvertersIsNotConfigured() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationTests.java, +			.withUserConfiguration(ResourceConfigConfiguration.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfigurationTests.java, +	public void whenReactiveWebApplicationRestTemplateBuilderIsNotConfigured() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler.java, +		if (message != null && message.toLowerCase().contains("broken pipe")) {, +			return true;, +		}, +		return DISCONNECTED_CLIENT_EXCEPTIONS.contains(ex.getClass().getSimpleName());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfigurationTests.java, +	public void whenReactiveWebApplicationHttpMessageConvertersIsNotConfigured() {, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jersey/JerseyAutoConfigurationTests.java, +			.withUserConfiguration(ResourceConfigConfiguration.class);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfigurationTests.java, +	public void whenReactiveWebApplicationRestTemplateBuilderIsNotConfigured() {, +++ b/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/autoconfigure/ConditionEvaluationDeltaLoggingListener.java, +				if (logger.isInfoEnabled()) {, +					logger.info("Condition evaluation delta:", +				logger.info("Condition evaluation unchanged");]