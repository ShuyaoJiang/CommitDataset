[+++ b/spring-boot-samples/spring-boot-sample-web-secure/pom.xml, +			<artifactId>spring-boot-starter-jdbc</artifactId>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<groupId>com.h2database</groupId>, +			<artifactId>h2</artifactId>, +		</dependency>, +		<dependency>, +++ b/spring-boot-samples/spring-boot-sample-web-secure/pom.xml, +			<artifactId>spring-boot-starter-jdbc</artifactId>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<groupId>com.h2database</groupId>, +			<artifactId>h2</artifactId>, +		</dependency>, +		<dependency>, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/java/sample/ui/secure/SampleWebSecureApplication.java, +import javax.sql.DataSource;, +, +import org.springframework.context.annotation.DependsOn;, +import org.springframework.core.Ordered;, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, +import org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter;, +	@Bean, +	@DependsOn("dataSourceAutoConfigurationInitializer"), +	public AuthenticationSecurity authenticationSecurity() {, +		return new AuthenticationSecurity();, +	}, +, +	@Order(Ordered.HIGHEST_PRECEDENCE + 10), +	protected static class AuthenticationSecurity extends GlobalAuthenticationConfigurerAdapter {, +, +		@Autowired, +		private DataSource dataSource;, +, +		@Override, +		public void init(AuthenticationManagerBuilder auth) throws Exception {, +			// @formatter:off, +			auth.jdbcAuthentication().dataSource(dataSource).withUser("admin").password("admin"), +					.roles("ADMIN", "USER").and().withUser("user").password("user"), +					.roles("USER");, +			// @formatter:on, +		}, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-web-secure/pom.xml, +			<artifactId>spring-boot-starter-jdbc</artifactId>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.boot</groupId>, +			<groupId>com.h2database</groupId>, +			<artifactId>h2</artifactId>, +		</dependency>, +		<dependency>, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/java/sample/ui/secure/SampleWebSecureApplication.java, +import javax.sql.DataSource;, +, +import org.springframework.context.annotation.DependsOn;, +import org.springframework.core.Ordered;, +import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;, +import org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter;, +	@Bean, +	@DependsOn("dataSourceAutoConfigurationInitializer"), +	public AuthenticationSecurity authenticationSecurity() {, +		return new AuthenticationSecurity();, +	}, +, +	@Order(Ordered.HIGHEST_PRECEDENCE + 10), +	protected static class AuthenticationSecurity extends GlobalAuthenticationConfigurerAdapter {, +, +		@Autowired, +		private DataSource dataSource;, +, +		@Override, +		public void init(AuthenticationManagerBuilder auth) throws Exception {, +			// @formatter:off, +			auth.jdbcAuthentication().dataSource(dataSource).withUser("admin").password("admin"), +					.roles("ADMIN", "USER").and().withUser("user").password("user"), +					.roles("USER");, +			// @formatter:on, +		}, +	}, +, +++ b/spring-boot-samples/spring-boot-sample-web-secure/src/main/resources/schema.sql, +create table users (, +  username varchar(256),, +  password varchar(256),, +  enabled boolean, +);, +, +create table authorities (, +  username varchar(256),, +  authority varchar(256), +);, +++ b/spring-boot-samples/spring-boot-sample-web-secure/pom.xml, +			<artifactId>spring-boot-starter-jdbc</artifactId>, +		</dependency>, +		<dependency>]