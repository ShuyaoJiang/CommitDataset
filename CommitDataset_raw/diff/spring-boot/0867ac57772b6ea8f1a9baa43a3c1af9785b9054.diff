[+++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunArguments.java, +import org.springframework.util.StringUtils;, +, +	private final LinkedList<String> args = new LinkedList<>();, +		if (args != null) {, +			Arrays.stream(args).filter(StringUtils::hasLength).forEach(this.args::add);, +		}, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunArguments.java, +import org.springframework.util.StringUtils;, +, +	private final LinkedList<String> args = new LinkedList<>();, +		if (args != null) {, +			Arrays.stream(args).filter(StringUtils::hasLength).forEach(this.args::add);, +		}, +++ b/spring-boot-tools/spring-boot-maven-plugin/src/test/java/org/springframework/boot/maven/RunArgumentsTests.java, +	public void parseNullArray() {, +		String[] args = new RunArguments((String[]) null).asArray();, +		assertThat(args).isNotNull();, +		assertThat(args.length).isEqualTo(0);, +	}, +, +	@Test, +	public void parseArrayContainingNullValue() {, +		String[] args = new RunArguments(new String[]{null}).asArray();, +		assertThat(args).isNotNull();, +		assertThat(args.length).isEqualTo(0);, +	}, +, +	@Test]