[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +import java.util.Map;, +import javax.persistence.EntityManager;, +import javax.sql.DataSource;, +, +import org.hibernate.jpa.boot.spi.Bootstrap;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, +public class HibernateJpaAutoConfiguration extends JpaBaseConfiguration implements, +		ApplicationListener<ContextRefreshedEvent> {, +, +	@Autowired, +	private JpaProperties properties;, +, +	@Autowired, +	private DataSource dataSource;, +, +	@Autowired, +	private BeanFactory beanFactory;, +	@Override, +	protected Map<String, Object> getVendorProperties() {, +		return this.properties.getInitialHibernateProperties(this.dataSource);, +	}, +, +	@Override, +	public void onApplicationEvent(ContextRefreshedEvent event) {, +		Map<String, Object> map = this.properties.getHibernateProperties(this.dataSource);, +		if ("none".equals(map.get("hibernate.hbm2ddl.auto"))) {, +			return;, +		}, +		LocalContainerEntityManagerFactoryBean factory = this.beanFactory, +				.getBean(LocalContainerEntityManagerFactoryBean.class);, +		Bootstrap.getEntityManagerFactoryBuilder(factory.getPersistenceUnitInfo(), map), +				.generateSchema();, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +import java.util.Map;, +import javax.persistence.EntityManager;, +import javax.sql.DataSource;, +, +import org.hibernate.jpa.boot.spi.Bootstrap;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.context.ApplicationListener;, +import org.springframework.context.event.ContextRefreshedEvent;, +public class HibernateJpaAutoConfiguration extends JpaBaseConfiguration implements, +		ApplicationListener<ContextRefreshedEvent> {, +, +	@Autowired, +	private JpaProperties properties;, +, +	@Autowired, +	private DataSource dataSource;, +, +	@Autowired, +	private BeanFactory beanFactory;, +	@Override, +	protected Map<String, Object> getVendorProperties() {, +		return this.properties.getInitialHibernateProperties(this.dataSource);, +	}, +, +	@Override, +	public void onApplicationEvent(ContextRefreshedEvent event) {, +		Map<String, Object> map = this.properties.getHibernateProperties(this.dataSource);, +		if ("none".equals(map.get("hibernate.hbm2ddl.auto"))) {, +			return;, +		}, +		LocalContainerEntityManagerFactoryBean factory = this.beanFactory, +				.getBean(LocalContainerEntityManagerFactoryBean.class);, +		Bootstrap.getEntityManagerFactoryBuilder(factory.getPersistenceUnitInfo(), map), +				.generateSchema();, +	}, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration.java, +import java.util.Map;, +		return factory.dataSource(this.dataSource).packages(getPackagesToScan()), +				.properties(getVendorProperties()).build();, +	protected abstract Map<String, Object> getVendorProperties();, +, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryBuilder.java, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java, +import java.util.Map;, +import javax.persistence.EntityManager;, +import javax.sql.DataSource;, +, +import org.hibernate.jpa.boot.spi.Bootstrap;, +import org.springframework.beans.factory.BeanFactory;, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.context.ApplicationListener;]