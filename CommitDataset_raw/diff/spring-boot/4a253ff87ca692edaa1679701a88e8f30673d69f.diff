[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		this.initializers = new ArrayList<>(initializers);, +		this.listeners = new ArrayList<>(listeners);, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		this.initializers = new ArrayList<>(initializers);, +		this.listeners = new ArrayList<>(listeners);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		this.initializers = new ArrayList<>(initializers);, +		this.listeners = new ArrayList<>(listeners);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrar.java, + * Copyright 2012-2019 the original author or authors., +		Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		this.initializers = new ArrayList<>(initializers);, +		this.listeners = new ArrayList<>(listeners);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrar.java, + * Copyright 2012-2019 the original author or authors., +		Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletContextInitializerBeans.java, + * Copyright 2012-2019 the original author or authors., +		List<Entry<String, T>> beans = new ArrayList<>(map.entrySet());, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		this.initializers = new ArrayList<>(initializers);, +		this.listeners = new ArrayList<>(listeners);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrar.java, + * Copyright 2012-2019 the original author or authors., +		Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletContextInitializerBeans.java, + * Copyright 2012-2019 the original author or authors., +		List<Entry<String, T>> beans = new ArrayList<>(map.entrySet());, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		application.setInitializers(Collections.singletonList(, +		application.setListeners(Collections.singletonList(new InitializerListener()));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		this.initializers = new ArrayList<>(initializers);, +		this.listeners = new ArrayList<>(listeners);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrar.java, + * Copyright 2012-2019 the original author or authors., +		Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletContextInitializerBeans.java, + * Copyright 2012-2019 the original author or authors., +		List<Entry<String, T>> beans = new ArrayList<>(map.entrySet());, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		application.setInitializers(Collections.singletonList(, +		application.setListeners(Collections.singletonList(new InitializerListener()));, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/annotation/ConfigurationsTests.java, + * Copyright 2012-2019 the original author or authors., +import java.util.Collections;, +		Configurations c2 = new TestConfigurations(, +				Collections.singletonList(Short.class));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/domain/EntityScanPackages.java, + * Copyright 2012-2019 the original author or authors., +			Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java, +		this.initializers = new ArrayList<>(initializers);, +		this.listeners = new ArrayList<>(listeners);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java, + * Copyright 2012-2019 the original author or authors., +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentScanRegistrar.java, + * Copyright 2012-2019 the original author or authors., +		Set<String> packagesToScan = new LinkedHashSet<>(Arrays.asList(basePackages));, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletContextInitializerBeans.java, + * Copyright 2012-2019 the original author or authors., +		List<Entry<String, T>> beans = new ArrayList<>(map.entrySet());, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/SpringApplicationTests.java, +		application.setInitializers(Collections.singletonList(, +		application.setListeners(Collections.singletonList(new InitializerListener()));, +++ b/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/annotation/ConfigurationsTests.java, + * Copyright 2012-2019 the original author or authors.]