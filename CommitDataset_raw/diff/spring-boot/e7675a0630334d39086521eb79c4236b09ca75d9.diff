[+++ b/spring-boot/src/test/java/org/springframework/boot/config/YamlProcessorTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +import org.yaml.snakeyaml.scanner.ScannerException;, +	@Rule, +	public ExpectedException exception = ExpectedException.none();, +, +	public void testBadResource() throws Exception {, +		this.processor.setResources(new Resource[] { new ByteArrayResource(, +				"foo: bar\ncd\nspam:\n  foo: baz".getBytes()) });, +		this.exception.expect(ScannerException.class);, +		this.exception.expectMessage("line 3, column 1");, +		this.processor.process(new MatchCallback() {, +			@Override, +			public void process(Properties properties, Map<String, Object> map) {, +			}, +		});, +	}, +, +	@Test, +++ b/spring-boot/src/test/java/org/springframework/boot/config/YamlProcessorTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +import org.yaml.snakeyaml.scanner.ScannerException;, +	@Rule, +	public ExpectedException exception = ExpectedException.none();, +, +	public void testBadResource() throws Exception {, +		this.processor.setResources(new Resource[] { new ByteArrayResource(, +				"foo: bar\ncd\nspam:\n  foo: baz".getBytes()) });, +		this.exception.expect(ScannerException.class);, +		this.exception.expectMessage("line 3, column 1");, +		this.processor.process(new MatchCallback() {, +			@Override, +			public void process(Properties properties, Map<String, Object> map) {, +			}, +		});, +	}, +, +	@Test, +++ b/spring-boot/src/test/java/org/springframework/boot/config/YamlPropertiesFactoryBeanTests.java, +import org.junit.Rule;, +import org.junit.rules.ExpectedException;, +import org.yaml.snakeyaml.scanner.ScannerException;, +	@Rule, +	public ExpectedException exception = ExpectedException.none();, +, +	public void testBadResource() throws Exception {, +		YamlPropertiesFactoryBean factory = new YamlPropertiesFactoryBean();, +		factory.setResources(new Resource[] { new ByteArrayResource(, +				"foo: bar\ncd\nspam:\n  foo: baz".getBytes()) });, +		this.exception.expect(ScannerException.class);, +		this.exception.expectMessage("line 3, column 1");, +		factory.getObject();, +	}, +, +	@Test]