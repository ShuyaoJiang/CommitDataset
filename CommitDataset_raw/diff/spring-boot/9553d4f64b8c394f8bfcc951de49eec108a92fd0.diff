[+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +		public DefaultCookieSerializer cookieSerializer(, +				ServerProperties serverProperties) {, +			Cookie cookie = serverProperties.getServlet().getSession().getCookie();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/session/SessionAutoConfiguration.java, +		public DefaultCookieSerializer cookieSerializer(, +				ServerProperties serverProperties) {, +			Cookie cookie = serverProperties.getServlet().getSession().getCookie();, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/session/SessionAutoConfigurationTests.java, +	public void sessionCookieConfigurationIsAppliedToAutoConfiguredCookieSerializer() {, +	public void autoConfiguredCookieSerializerIsUsedBySessionRepositoryFilter() {, +		this.contextRunner.withUserConfiguration(SessionRepositoryConfiguration.class), +				.withPropertyValues("server.port=0").run((context) -> {, +					SessionRepositoryFilter<?> filter = context, +							.getBean(SessionRepositoryFilter.class);, +					CookieHttpSessionIdResolver sessionIdResolver = (CookieHttpSessionIdResolver) ReflectionTestUtils, +							.getField(filter, "httpSessionIdResolver");, +					DefaultCookieSerializer cookieSerializer = (DefaultCookieSerializer) ReflectionTestUtils, +							.getField(sessionIdResolver, "cookieSerializer");, +					assertThat(cookieSerializer), +							.isSameAs(context.getBean(DefaultCookieSerializer.class));, +	public void autoConfiguredCookieSerializerBacksOffWhenUserConfiguresACookieSerializer() {, +		this.contextRunner, +				.withUserConfiguration(UserProvidedCookieSerializerConfiguration.class), +				.run((context) -> {, +					assertThat(context).hasSingleBean(DefaultCookieSerializer.class);, +					assertThat(context).hasBean("myCookieSerializer");, +				});, +	}, +, +	@Test, +	public void cookiesSerializerIsAutoConfiguredWhenUserConfiguresCookieHttpSessionIdResolver() {, +	public void autoConfiguredCookieSerializerBacksOffWhenUserConfiguresHeaderHttpSessionIdResolver() {, +	public void autoConfiguredCookieSerializerBacksOffWhenUserConfiguresCustomHttpSessionIdResolver() {]