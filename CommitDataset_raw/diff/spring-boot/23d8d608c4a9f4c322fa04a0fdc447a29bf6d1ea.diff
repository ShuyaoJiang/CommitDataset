[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +		CompositeMeterRegistry composite = metricsProperties.isUseGlobalRegistry(), +				? Metrics.globalRegistry : new CompositeMeterRegistry();, +		exporters.getIfAvailable(Collections::emptyList).forEach((exporter) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +		CompositeMeterRegistry composite = metricsProperties.isUseGlobalRegistry(), +				? Metrics.globalRegistry : new CompositeMeterRegistry();, +		exporters.getIfAvailable(Collections::emptyList).forEach((exporter) -> {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterAutoTimedTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +		CompositeMeterRegistry composite = metricsProperties.isUseGlobalRegistry(), +				? Metrics.globalRegistry : new CompositeMeterRegistry();, +		exporters.getIfAvailable(Collections::emptyList).forEach((exporter) -> {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterAutoTimedTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsIntegrationTests.java, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +		CompositeMeterRegistry composite = metricsProperties.isUseGlobalRegistry(), +				? Metrics.globalRegistry : new CompositeMeterRegistry();, +		exporters.getIfAvailable(Collections::emptyList).forEach((exporter) -> {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterAutoTimedTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsIntegrationTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.java, +		customizers.forEach((c) -> c.customize(builder));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +		CompositeMeterRegistry composite = metricsProperties.isUseGlobalRegistry(), +				? Metrics.globalRegistry : new CompositeMeterRegistry();, +		exporters.getIfAvailable(Collections::emptyList).forEach((exporter) -> {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterAutoTimedTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsIntegrationTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.java, +		customizers.forEach((c) -> c.customize(builder));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/gson/GsonAutoConfigurationTests.java, +		this.contextRunner.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +		this.contextRunner.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +		this.contextRunner.run((context) -> {, +		this.contextRunner.withPropertyValues("spring.gson.lenient:true"), +				.run((context) -> {, +					 * It seems that lenient setting not work in version 2.8.2. We get, +					 * access to it via reflection, +		this.contextRunner.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +		CompositeMeterRegistry composite = metricsProperties.isUseGlobalRegistry(), +				? Metrics.globalRegistry : new CompositeMeterRegistry();, +		exporters.getIfAvailable(Collections::emptyList).forEach((exporter) -> {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterAutoTimedTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsIntegrationTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.java, +		customizers.forEach((c) -> c.customize(builder));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/gson/GsonAutoConfigurationTests.java, +		this.contextRunner.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +		this.contextRunner.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +		this.contextRunner.run((context) -> {, +		this.contextRunner.withPropertyValues("spring.gson.lenient:true"), +				.run((context) -> {, +					 * It seems that lenient setting not work in version 2.8.2. We get, +					 * access to it via reflection, +		this.contextRunner.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/ConfigurableUndertowWebServerFactory.java, +import io.undertow.Undertow.Builder;, +	 * Undertow {@link Builder}., +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.java, +		CompositeMeterRegistry composite = metricsProperties.isUseGlobalRegistry(), +				? Metrics.globalRegistry : new CompositeMeterRegistry();, +		exporters.getIfAvailable(Collections::emptyList).forEach((exporter) -> {, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilterAutoTimedTests.java, +++ b/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsIntegrationTests.java, +++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.java, +		customizers.forEach((c) -> c.customize(builder));, +++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/gson/GsonAutoConfigurationTests.java, +		this.contextRunner.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +				.run((context) -> {, +		this.contextRunner.run((context) -> {, +				.run((context) -> {]