[+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/amqp/RabbitMetricsAutoConfigurationTests.java, +			.with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(, +					RabbitAutoConfiguration.class, RabbitMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/amqp/RabbitMetricsAutoConfigurationTests.java, +			.with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(, +					RabbitAutoConfiguration.class, RabbitMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(CacheAutoConfiguration.class,, +					CacheMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/amqp/RabbitMetricsAutoConfigurationTests.java, +			.with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(, +					RabbitAutoConfiguration.class, RabbitMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(CacheAutoConfiguration.class,, +					CacheMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +import org.springframework.boot.test.context.runner.AbstractApplicationContextRunner;, +			MetricsAutoConfiguration.class,, +			CompositeMeterRegistryAutoConfiguration.class);, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> simple() {, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> limitedTo(, +	private static <T extends AbstractApplicationContextRunner<?, ?, ?>> T apply(, +			T contextRunner, Class<?>[] exportAutoConfigurations) {, +		return (T) contextRunner, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/amqp/RabbitMetricsAutoConfigurationTests.java, +			.with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(, +					RabbitAutoConfiguration.class, RabbitMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(CacheAutoConfiguration.class,, +					CacheMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +import org.springframework.boot.test.context.runner.AbstractApplicationContextRunner;, +			MetricsAutoConfiguration.class,, +			CompositeMeterRegistryAutoConfiguration.class);, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> simple() {, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> limitedTo(, +	private static <T extends AbstractApplicationContextRunner<?, ?, ?>> T apply(, +			T contextRunner, Class<?>[] exportAutoConfigurations) {, +		return (T) contextRunner, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +			.with(MetricsRun.simple()), +			.withConfiguration(AutoConfigurations.of(RestTemplateAutoConfiguration.class,, +					HttpClientMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/amqp/RabbitMetricsAutoConfigurationTests.java, +			.with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(, +					RabbitAutoConfiguration.class, RabbitMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(CacheAutoConfiguration.class,, +					CacheMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +import org.springframework.boot.test.context.runner.AbstractApplicationContextRunner;, +			MetricsAutoConfiguration.class,, +			CompositeMeterRegistryAutoConfiguration.class);, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> simple() {, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> limitedTo(, +	private static <T extends AbstractApplicationContextRunner<?, ?, ?>> T apply(, +			T contextRunner, Class<?>[] exportAutoConfigurations) {, +		return (T) contextRunner, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +			.with(MetricsRun.simple()), +			.withConfiguration(AutoConfigurations.of(RestTemplateAutoConfiguration.class,, +					HttpClientMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(WebClientAutoConfiguration.class,, +					HttpClientMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/amqp/RabbitMetricsAutoConfigurationTests.java, +			.with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(, +					RabbitAutoConfiguration.class, RabbitMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(CacheAutoConfiguration.class,, +					CacheMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +import org.springframework.boot.test.context.runner.AbstractApplicationContextRunner;, +			MetricsAutoConfiguration.class,, +			CompositeMeterRegistryAutoConfiguration.class);, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> simple() {, +	public static <T extends AbstractApplicationContextRunner<?, ?, ?>> Function<T, T> limitedTo(, +	private static <T extends AbstractApplicationContextRunner<?, ?, ?>> T apply(, +			T contextRunner, Class<?>[] exportAutoConfigurations) {, +		return (T) contextRunner, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/RestTemplateMetricsConfigurationTests.java, +			.with(MetricsRun.simple()), +			.withConfiguration(AutoConfigurations.of(RestTemplateAutoConfiguration.class,, +					HttpClientMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/client/WebClientMetricsConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(WebClientAutoConfiguration.class,, +					HttpClientMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/web/reactive/WebFluxMetricsAutoConfigurationTests.java, +import org.springframework.boot.actuate.autoconfigure.metrics.test.MetricsRun;, +			.with(MetricsRun.simple()).withConfiguration(, +					AutoConfigurations.of(WebFluxMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/amqp/RabbitMetricsAutoConfigurationTests.java, +			.with(MetricsRun.simple()).withConfiguration(AutoConfigurations.of(, +					RabbitAutoConfiguration.class, RabbitMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfigurationTests.java, +			.withConfiguration(AutoConfigurations.of(CacheAutoConfiguration.class,, +					CacheMetricsAutoConfiguration.class));, +++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/metrics/test/MetricsRun.java, +import org.springframework.boot.test.context.runner.AbstractApplicationContextRunner;, +			MetricsAutoConfiguration.class,]