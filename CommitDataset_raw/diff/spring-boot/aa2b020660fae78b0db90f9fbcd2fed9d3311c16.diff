[+++ b/spring-boot-actuator/pom.xml, +		<dependency>, +			<groupId>org.springframework</groupId>, +			<artifactId>spring-messaging</artifactId>, +		</dependency>, +			<groupId>com.codahale.metrics</groupId>, +			<artifactId>metrics-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>com.lambdaworks</groupId>, +			<artifactId>lettuce</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/pom.xml, +		<dependency>, +			<groupId>org.springframework</groupId>, +			<artifactId>spring-messaging</artifactId>, +		</dependency>, +			<groupId>com.codahale.metrics</groupId>, +			<artifactId>metrics-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>com.lambdaworks</groupId>, +			<artifactId>lettuce</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.reader.MetricReader;, +import org.springframework.boot.actuate.metrics.repository.InMemoryMetricRepository;, +	private MetricReader metricRepository = new InMemoryMetricRepository();, +++ b/spring-boot-actuator/pom.xml, +		<dependency>, +			<groupId>org.springframework</groupId>, +			<artifactId>spring-messaging</artifactId>, +		</dependency>, +			<groupId>com.codahale.metrics</groupId>, +			<artifactId>metrics-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>com.lambdaworks</groupId>, +			<artifactId>lettuce</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.reader.MetricReader;, +import org.springframework.boot.actuate.metrics.repository.InMemoryMetricRepository;, +	private MetricReader metricRepository = new InMemoryMetricRepository();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricFilterAutoConfiguration.java, +				MetricFilterAutoConfiguration.this.gaugeService.submit(gaugeKey,, +++ b/spring-boot-actuator/pom.xml, +		<dependency>, +			<groupId>org.springframework</groupId>, +			<artifactId>spring-messaging</artifactId>, +		</dependency>, +			<groupId>com.codahale.metrics</groupId>, +			<artifactId>metrics-core</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>com.lambdaworks</groupId>, +			<artifactId>lettuce</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +			<groupId>org.springframework.data</groupId>, +			<artifactId>spring-data-redis</artifactId>, +			<optional>true</optional>, +		</dependency>, +		<dependency>, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/EndpointAutoConfiguration.java, +import org.springframework.boot.actuate.metrics.reader.MetricReader;, +import org.springframework.boot.actuate.metrics.repository.InMemoryMetricRepository;, +	private MetricReader metricRepository = new InMemoryMetricRepository();, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricFilterAutoConfiguration.java, +				MetricFilterAutoConfiguration.this.gaugeService.submit(gaugeKey,, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricRepositoryAutoConfiguration.java, +import java.util.List;, +import java.util.concurrent.Executor;, +import java.util.concurrent.Executors;]