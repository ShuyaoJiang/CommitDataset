[+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jms;, +, +import javax.jms.ConnectionFactory;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.jms.annotation.EnableJms;, +import org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor;, +import org.springframework.jms.config.DefaultJmsListenerContainerFactory;, +import org.springframework.jms.support.destination.DestinationResolver;, +import org.springframework.transaction.PlatformTransactionManager;, +, +/**, + * Configuration for Spring 4.1 annotation driven JMS., + *, + * @author Phillip Webb, + * @author Stephane Nicoll, + * @since 1.2.0, + */, +@Configuration, +@ConditionalOnClass(EnableJms.class), +@ConditionalOnBean(JmsListenerAnnotationBeanPostProcessor.class), +class JmsAnnotationDrivenConfiguration {, +, +	@Autowired(required = false), +	private DestinationResolver destinationResolver;, +, +	@Autowired(required = false), +	private PlatformTransactionManager transactionManager;, +, +	@Bean, +	@ConditionalOnMissingBean(name = "jmsListenerContainerFactory"), +	public DefaultJmsListenerContainerFactory jmsListenerContainerFactory(, +			ConnectionFactory connectionFactory) {, +		DefaultJmsListenerContainerFactory factory = new DefaultJmsListenerContainerFactory();, +		factory.setConnectionFactory(connectionFactory);, +		if (this.transactionManager != null) {, +			factory.setTransactionManager(this.transactionManager);, +		}, +		if (this.destinationResolver != null) {, +			factory.setDestinationResolver(this.destinationResolver);, +		}, +		return factory;, +	}, +, +}, +++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jms/JmsAnnotationDrivenConfiguration.java, +/*, + * Copyright 2012-2014 the original author or authors., + *, + * Licensed under the Apache License, Version 2.0 (the "License");, + * you may not use this file except in compliance with the License., + * You may obtain a copy of the License at, + *, + *      http://www.apache.org/licenses/LICENSE-2.0, + *, + * Unless required by applicable law or agreed to in writing, software, + * distributed under the License is distributed on an "AS IS" BASIS,, + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied., + * See the License for the specific language governing permissions and, + * limitations under the License., + */, +, +package org.springframework.boot.autoconfigure.jms;, +, +import javax.jms.ConnectionFactory;, +, +import org.springframework.beans.factory.annotation.Autowired;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;, +import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;, +import org.springframework.context.annotation.Bean;, +import org.springframework.context.annotation.Configuration;, +import org.springframework.jms.annotation.EnableJms;, +import org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor;, +import org.springframework.jms.config.DefaultJmsListenerContainerFactory;, +import org.springframework.jms.support.destination.DestinationResolver;, +import org.springframework.transaction.PlatformTransactionManager;, +]