[+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AutoConfigurationReportEndpoint.java, +import java.util.Set;, +	@JsonPropertyOrder({ "positiveMatches", "negativeMatches", "exclusions", "unconditionalClasses" }), +		private final Set<String> unconditionalClasses;, +, +			this.unconditionalClasses = report.getUnconditionalClasses();, +		public Set<String> getUnconditionalClasses() {, +			return this.unconditionalClasses;, +		}, +, +++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/AutoConfigurationReportEndpoint.java, +import java.util.Set;, +	@JsonPropertyOrder({ "positiveMatches", "negativeMatches", "exclusions", "unconditionalClasses" }), +		private final Set<String> unconditionalClasses;, +, +			this.unconditionalClasses = report.getUnconditionalClasses();, +		public Set<String> getUnconditionalClasses() {, +			return this.unconditionalClasses;, +		}, +, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/AutoConfigurationReportEndpointTests.java, +		assertThat(report.getUnconditionalClasses()).contains("b");, +			report.recordEvaluationCandidates(Arrays.asList("a", "b"));]