[+++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +`builder.basicAuthentication("user", "password").build()`., +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +`builder.basicAuthentication("user", "password").build()`., +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +		interceptors.removeIf(BasicAuthenticationInterceptor.class::isInstance);, +		interceptors.add(new BasicAuthenticationInterceptor(username, password));, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +`builder.basicAuthentication("user", "password").build()`., +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +		interceptors.removeIf(BasicAuthenticationInterceptor.class::isInstance);, +		interceptors.add(new BasicAuthenticationInterceptor(username, password));, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/TestRestTemplateTests.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +		assertThat(interceptor).isInstanceOf(BasicAuthenticationInterceptor.class);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +`builder.basicAuthentication("user", "password").build()`., +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +		interceptors.removeIf(BasicAuthenticationInterceptor.class::isInstance);, +		interceptors.add(new BasicAuthenticationInterceptor(username, password));, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/TestRestTemplateTests.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +		assertThat(interceptor).isInstanceOf(BasicAuthenticationInterceptor.class);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +	private final BasicAuthenticationInterceptor basicAuthentication;, +		this.basicAuthentication = null;, +			BasicAuthenticationInterceptor basicAuthentication,, +		this.basicAuthentication = basicAuthentication;, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.basicAuthentication, this.restTemplateCustomizers,, +				this.basicAuthentication, this.restTemplateCustomizers,, +				this.basicAuthentication, this.restTemplateCustomizers,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.errorHandler, this.basicAuthentication, this.restTemplateCustomizers,, +				this.errorHandler, this.basicAuthentication, this.restTemplateCustomizers,, +				this.uriTemplateHandler, errorHandler, this.basicAuthentication,, +	 * {@link BasicAuthenticationInterceptor} for details., +	 * @deprecated since 2.1.0 in favor of, +	 * {@link #basicAuthentication(String username, String password)}, +		return basicAuthentication(username, password);, +	}, +, +	/**, +	 * Add HTTP basic authentication to requests. See, +	 * {@link BasicAuthenticationInterceptor} for details., +	 * @param username the user name, +	 * @param password the password, +	 * @return a new builder instance, +	 * @since 2.1.0, +	 */, +	public RestTemplateBuilder basicAuthentication(String username, String password) {, +				new BasicAuthenticationInterceptor(username, password),, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +		if (this.basicAuthentication != null) {, +			restTemplate.getInterceptors().add(this.basicAuthentication);, +++ b/spring-boot-project/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +`builder.basicAuthentication("user", "password").build()`., +++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/client/TestRestTemplate.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +		interceptors.removeIf(BasicAuthenticationInterceptor.class::isInstance);, +		interceptors.add(new BasicAuthenticationInterceptor(username, password));, +++ b/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/TestRestTemplateTests.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +		assertThat(interceptor).isInstanceOf(BasicAuthenticationInterceptor.class);, +++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java, +import org.springframework.http.client.support.BasicAuthenticationInterceptor;, +	private final BasicAuthenticationInterceptor basicAuthentication;, +		this.basicAuthentication = null;, +			BasicAuthenticationInterceptor basicAuthentication,, +		this.basicAuthentication = basicAuthentication;, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.basicAuthentication, this.restTemplateCustomizers,, +				this.basicAuthentication, this.restTemplateCustomizers,, +				this.basicAuthentication, this.restTemplateCustomizers,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.uriTemplateHandler, this.errorHandler, this.basicAuthentication,, +				this.errorHandler, this.basicAuthentication, this.restTemplateCustomizers,, +				this.errorHandler, this.basicAuthentication, this.restTemplateCustomizers,, +				this.uriTemplateHandler, errorHandler, this.basicAuthentication,, +	 * {@link BasicAuthenticationInterceptor} for details., +	 * @deprecated since 2.1.0 in favor of, +	 * {@link #basicAuthentication(String username, String password)}, +		return basicAuthentication(username, password);, +	}, +, +	/**, +	 * Add HTTP basic authentication to requests. See, +	 * {@link BasicAuthenticationInterceptor} for details., +	 * @param username the user name, +	 * @param password the password]