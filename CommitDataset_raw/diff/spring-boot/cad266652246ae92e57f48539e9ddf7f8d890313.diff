[+++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.level= # appender pattern for the log level (default %5p, only supported with the default logback setup), +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.level= # appender pattern for the log level (default %5p, only supported with the default logback setup), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|`logging.pattern.console`, +|`CONSOLE_LOG_PATTERN`, +|The log pattern to use on the console (stdout). (Not supported with JDK logger.), +, +|`logging.pattern.file`, +|`FILE_LOG_PATTERN`, +|The log pattern to use in a file (if LOG_FILE enabled). (Not supported with JDK logger.), +, +|`logging.pattern.level`, +|`LOG_LEVEL_PATTERN`, +|The format to use to render the log level (default `%5p`). (The `logging.pattern.level` form is only supported by Logback.), +, +[TIP], +====, +, +You can add MDC and other ad-hoc content to log lines by overriding, +only the `LOG_LEVEL_PATTERN` (or `logging.pattern.level` with, +Logback). For example, if you use `logging.pattern.level=user:%X{user}, +%5p` then the default log format will contain an MDC entry for "user", +if it exists, e.g., +, +----, +2015-09-30 12:30:04.031 user:juergen INFO 22174 --- [  nio-8080-exec-0] demo.Controller Handling authenticated request, +----, +====, +, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.level= # appender pattern for the log level (default %5p, only supported with the default logback setup), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|`logging.pattern.console`, +|`CONSOLE_LOG_PATTERN`, +|The log pattern to use on the console (stdout). (Not supported with JDK logger.), +, +|`logging.pattern.file`, +|`FILE_LOG_PATTERN`, +|The log pattern to use in a file (if LOG_FILE enabled). (Not supported with JDK logger.), +, +|`logging.pattern.level`, +|`LOG_LEVEL_PATTERN`, +|The format to use to render the log level (default `%5p`). (The `logging.pattern.level` form is only supported by Logback.), +, +[TIP], +====, +, +You can add MDC and other ad-hoc content to log lines by overriding, +only the `LOG_LEVEL_PATTERN` (or `logging.pattern.level` with, +Logback). For example, if you use `logging.pattern.level=user:%X{user}, +%5p` then the default log format will contain an MDC entry for "user", +if it exists, e.g., +, +----, +2015-09-30 12:30:04.031 user:juergen INFO 22174 --- [  nio-8080-exec-0] demo.Controller Handling authenticated request, +----, +====, +, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/logback/DefaultLogbackConfiguration.java, +			+ "%clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} ", +	private static final String FILE_LOG_PATTERN = "%d{yyyy-MM-dd HH:mm:ss.SSS} ", +			+ "${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%rEx}";, +++ b/spring-boot-docs/src/main/asciidoc/appendix-application-properties.adoc, +	logging.pattern.level= # appender pattern for the log level (default %5p, only supported with the default logback setup), +++ b/spring-boot-docs/src/main/asciidoc/spring-boot-features.adoc, +|`logging.pattern.console`, +|`CONSOLE_LOG_PATTERN`, +|The log pattern to use on the console (stdout). (Not supported with JDK logger.), +, +|`logging.pattern.file`, +|`FILE_LOG_PATTERN`, +|The log pattern to use in a file (if LOG_FILE enabled). (Not supported with JDK logger.), +, +|`logging.pattern.level`, +|`LOG_LEVEL_PATTERN`, +|The format to use to render the log level (default `%5p`). (The `logging.pattern.level` form is only supported by Logback.), +, +[TIP], +====, +, +You can add MDC and other ad-hoc content to log lines by overriding, +only the `LOG_LEVEL_PATTERN` (or `logging.pattern.level` with, +Logback). For example, if you use `logging.pattern.level=user:%X{user}, +%5p` then the default log format will contain an MDC entry for "user", +if it exists, e.g., +, +----, +2015-09-30 12:30:04.031 user:juergen INFO 22174 --- [  nio-8080-exec-0] demo.Controller Handling authenticated request, +----, +====, +, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/logback/DefaultLogbackConfiguration.java, +			+ "%clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} ", +	private static final String FILE_LOG_PATTERN = "%d{yyyy-MM-dd HH:mm:ss.SSS} ", +			+ "${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%rEx}";, +++ b/spring-boot/src/main/java/org/springframework/boot/logging/logback/LogbackLoggingSystem.java, +, +		return new String[] { "logback-test.groovy", "logback-test.xml", "logback.groovy",]