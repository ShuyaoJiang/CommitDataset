[+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpointTests.java, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("bean", "method"));, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("bean", "method"));, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("method"));, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("method"));, +++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/RequestMappingEndpointTests.java, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("bean", "method"));, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("bean", "method"));, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("method"));, +				.hasOnlyOneElementSatisfying(, +						(key) -> assertThat((Map<String, Object>) result.get(key)), +								.containsOnlyKeys("method"));, +++ b/spring-boot/src/test/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedWebappClassLoaderTests.java, +		withWebappClassLoader(war,, +				(classLoader) -> assertThat(classLoader.getResource("test.txt")), +						.isEqualTo(new URL(webInfClassesUrlString(war) + "test.txt")));]