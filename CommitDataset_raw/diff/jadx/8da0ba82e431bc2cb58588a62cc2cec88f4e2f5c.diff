[+++ b/src/main/java/jadx/Consts.java, +	public static final String DALVIK_ANNOTATION_PKG = "dalvik.annotation.";, +	public static final String DALVIK_INNER_CLASS = "dalvik.annotation.InnerClass";, +	public static final String DALVIK_THROWS = "dalvik.annotation.Throws";, +	public static final String DALVIK_ANNOTATION_DEFAULT = "dalvik.annotation.AnnotationDefault";, +, +	public static final String DEFAULT_PACKAGE_NAME = "defpackage";, +++ b/src/main/java/jadx/Consts.java, +	public static final String DALVIK_ANNOTATION_PKG = "dalvik.annotation.";, +	public static final String DALVIK_INNER_CLASS = "dalvik.annotation.InnerClass";, +	public static final String DALVIK_THROWS = "dalvik.annotation.Throws";, +	public static final String DALVIK_ANNOTATION_DEFAULT = "dalvik.annotation.AnnotationDefault";, +, +	public static final String DEFAULT_PACKAGE_NAME = "defpackage";, +++ b/src/main/java/jadx/codegen/AnnotationGen.java, +			if (aCls.startsWith(Consts.DALVIK_ANNOTATION_PKG)) {, +		Annotation an = mth.getAttributes().getAnnotation(Consts.DALVIK_THROWS);, +		Annotation an = cls.getAttributes().getAnnotation(Consts.DALVIK_ANNOTATION_DEFAULT);, +++ b/src/main/java/jadx/Consts.java, +	public static final String DALVIK_ANNOTATION_PKG = "dalvik.annotation.";, +	public static final String DALVIK_INNER_CLASS = "dalvik.annotation.InnerClass";, +	public static final String DALVIK_THROWS = "dalvik.annotation.Throws";, +	public static final String DALVIK_ANNOTATION_DEFAULT = "dalvik.annotation.AnnotationDefault";, +, +	public static final String DEFAULT_PACKAGE_NAME = "defpackage";, +++ b/src/main/java/jadx/codegen/AnnotationGen.java, +			if (aCls.startsWith(Consts.DALVIK_ANNOTATION_PKG)) {, +		Annotation an = mth.getAttributes().getAnnotation(Consts.DALVIK_THROWS);, +		Annotation an = cls.getAttributes().getAnnotation(Consts.DALVIK_ANNOTATION_DEFAULT);, +++ b/src/main/java/jadx/codegen/ClassGen.java, +import jadx.dex.attributes.AttrNode;, +import jadx.dex.attributes.IAttribute;, +import jadx.dex.attributes.SourceFileAttr;, +		insertSourceFileInfo(clsCode, cls);, +, +					insertSourceFileInfo(code, mth);, +	private void insertSourceFileInfo(CodeWriter code, AttrNode node) {, +		IAttribute sourceFileAttr = node.getAttributes().get(AttributeType.SOURCE_FILE);, +		if(sourceFileAttr != null) {, +			code.startLine(1, "// compiled from: ");, +			code.add(((SourceFileAttr)sourceFileAttr).getFileName());, +		}, +	}, +, +++ b/src/main/java/jadx/Consts.java, +	public static final String DALVIK_ANNOTATION_PKG = "dalvik.annotation.";, +	public static final String DALVIK_INNER_CLASS = "dalvik.annotation.InnerClass";, +	public static final String DALVIK_THROWS = "dalvik.annotation.Throws";, +	public static final String DALVIK_ANNOTATION_DEFAULT = "dalvik.annotation.AnnotationDefault";, +, +	public static final String DEFAULT_PACKAGE_NAME = "defpackage";, +++ b/src/main/java/jadx/codegen/AnnotationGen.java, +			if (aCls.startsWith(Consts.DALVIK_ANNOTATION_PKG)) {, +		Annotation an = mth.getAttributes().getAnnotation(Consts.DALVIK_THROWS);, +		Annotation an = cls.getAttributes().getAnnotation(Consts.DALVIK_ANNOTATION_DEFAULT);, +++ b/src/main/java/jadx/codegen/ClassGen.java, +import jadx.dex.attributes.AttrNode;, +import jadx.dex.attributes.IAttribute;, +import jadx.dex.attributes.SourceFileAttr;, +		insertSourceFileInfo(clsCode, cls);, +, +					insertSourceFileInfo(code, mth);, +	private void insertSourceFileInfo(CodeWriter code, AttrNode node) {, +		IAttribute sourceFileAttr = node.getAttributes().get(AttributeType.SOURCE_FILE);, +		if(sourceFileAttr != null) {, +			code.startLine(1, "// compiled from: ");, +			code.add(((SourceFileAttr)sourceFileAttr).getFileName());, +		}, +	}, +, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	private static final String[] INDENT_CACHE = new String[] {, +		int curIndent = indent;, +		if (curIndent < 6) {, +			this.indentStr = INDENT_CACHE[curIndent];, +			StringBuilder s = new StringBuilder(curIndent * INDENT.length());, +			for (int i = 0; i < curIndent; i++) {, +++ b/src/main/java/jadx/Consts.java, +	public static final String DALVIK_ANNOTATION_PKG = "dalvik.annotation.";, +	public static final String DALVIK_INNER_CLASS = "dalvik.annotation.InnerClass";, +	public static final String DALVIK_THROWS = "dalvik.annotation.Throws";, +	public static final String DALVIK_ANNOTATION_DEFAULT = "dalvik.annotation.AnnotationDefault";, +, +	public static final String DEFAULT_PACKAGE_NAME = "defpackage";, +++ b/src/main/java/jadx/codegen/AnnotationGen.java, +			if (aCls.startsWith(Consts.DALVIK_ANNOTATION_PKG)) {, +		Annotation an = mth.getAttributes().getAnnotation(Consts.DALVIK_THROWS);, +		Annotation an = cls.getAttributes().getAnnotation(Consts.DALVIK_ANNOTATION_DEFAULT);, +++ b/src/main/java/jadx/codegen/ClassGen.java, +import jadx.dex.attributes.AttrNode;, +import jadx.dex.attributes.IAttribute;, +import jadx.dex.attributes.SourceFileAttr;, +		insertSourceFileInfo(clsCode, cls);, +, +					insertSourceFileInfo(code, mth);, +	private void insertSourceFileInfo(CodeWriter code, AttrNode node) {, +		IAttribute sourceFileAttr = node.getAttributes().get(AttributeType.SOURCE_FILE);, +		if(sourceFileAttr != null) {, +			code.startLine(1, "// compiled from: ");, +			code.add(((SourceFileAttr)sourceFileAttr).getFileName());]