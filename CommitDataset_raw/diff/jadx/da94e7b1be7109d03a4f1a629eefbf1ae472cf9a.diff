[+++ b/.gitignore, +classes/, +++ b/.gitignore, +classes/, +++ b/.travis.yml, +++ b/.gitignore, +classes/, +++ b/.travis.yml, +++ b/jadx-core/build.gradle, +    compile files('lib/dx-1.13.jar'), +++ b/.gitignore, +classes/, +++ b/.travis.yml, +++ b/jadx-core/build.gradle, +    compile files('lib/dx-1.13.jar'), +++ b/jadx-core/lib/dx-1.13.jar, +++ b/.gitignore, +classes/, +++ b/.travis.yml, +++ b/jadx-core/build.gradle, +    compile files('lib/dx-1.13.jar'), +++ b/jadx-core/lib/dx-1.13.jar, +++ b/jadx-core/src/main/java/jadx/core/utils/files/JavaToDex.java, +import com.android.dx.command.dexer.DxContext;, +import jadx.core.utils.exceptions.JadxException;, +, +		ByteArrayOutputStream out = new ByteArrayOutputStream();, +			DxContext context = new DxContext(out, errOut);, +			int result = (new Main(context)).runDx(args);, +			if (result != 0) {, +				throw new JadxException("Java to dex conversion error, code: " + result);, +			}, +			dxErrors = errOut.toString(CHARSET_NAME);, +			return out.toByteArray();, +		} catch (Exception e) {, +			close(out);, +			close(errOut);]