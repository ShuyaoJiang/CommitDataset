[+++ b/jadx-core/src/main/java/jadx/core/dex/regions/AbstractRegion.java, +	private IRegion parent;, +	public void setParent(IRegion parent) {, +		this.parent = parent;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/AbstractRegion.java, +	private IRegion parent;, +	public void setParent(IRegion parent) {, +		this.parent = parent;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessTryCatchRegions.java, +import jadx.core.dex.regions.AbstractRegion;, +, +			// fix parents, +			for (IContainer cont : newRegion.getSubBlocks()) {, +				if (cont instanceof AbstractRegion) {, +					AbstractRegion aReg = (AbstractRegion) cont;, +					aReg.setParent(newRegion);, +				}, +			}, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/AbstractRegion.java, +	private IRegion parent;, +	public void setParent(IRegion parent) {, +		this.parent = parent;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessTryCatchRegions.java, +import jadx.core.dex.regions.AbstractRegion;, +, +			// fix parents, +			for (IContainer cont : newRegion.getSubBlocks()) {, +				if (cont instanceof AbstractRegion) {, +					AbstractRegion aReg = (AbstractRegion) cont;, +					aReg.setParent(newRegion);, +				}, +			}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessVariables.java, +			return arg + ", a:" + assigns + ", u:" + usage;, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/AbstractRegion.java, +	private IRegion parent;, +	public void setParent(IRegion parent) {, +		this.parent = parent;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessTryCatchRegions.java, +import jadx.core.dex.regions.AbstractRegion;, +, +			// fix parents, +			for (IContainer cont : newRegion.getSubBlocks()) {, +				if (cont instanceof AbstractRegion) {, +					AbstractRegion aReg = (AbstractRegion) cont;, +					aReg.setParent(newRegion);, +				}, +			}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessVariables.java, +			return arg + ", a:" + assigns + ", u:" + usage;, +++ b/jadx-core/src/test/java/jadx/tests/internal/TestVariablesDefinitions.java, +import java.util.Iterator;, +import org.junit.Test;, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.hamcrest.CoreMatchers.not;, +import static org.junit.Assert.assertThat;, +, +				Iterator<IDexTreeVisitor> iterator = passes.iterator();, +				while (iterator.hasNext()) {, +					DepthTraverser.visit(iterator.next(), cls);, +	@Test, +, +		// 'iterator' variable must be declared inside 'try' block, +		assertThat(code, containsString(makeIndent(3) + "Iterator<IDexTreeVisitor> iterator = "));, +		assertThat(code, not(containsString("iterator;")));]