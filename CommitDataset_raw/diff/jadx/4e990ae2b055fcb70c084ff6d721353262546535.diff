[+++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (arguments == null || arguments.isEmpty()) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (arguments == null || arguments.isEmpty()) {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +, +	public InsnArg duplicate() {, +		return this;, +	}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (arguments == null || arguments.isEmpty()) {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +, +	public InsnArg duplicate() {, +		return this;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +, +	@Override, +	public RegisterArg duplicate() {, +		return duplicate(getRegNum(), getSVar());, +	}, +, +	@Override, +	public RegisterArg duplicate(int regNum, SSAVar sVar) {, +		RegisterArg dup = new TypeImmutableArg(regNum, getInitType());, +		if (sVar != null) {, +			dup.setSVar(sVar);, +		}, +		dup.copyAttributesFrom(this);, +		return dup;, +	}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (arguments == null || arguments.isEmpty()) {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +, +	public InsnArg duplicate() {, +		return this;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +, +	@Override, +	public RegisterArg duplicate() {, +		return duplicate(getRegNum(), getSVar());, +	}, +, +	@Override, +	public RegisterArg duplicate(int regNum, SSAVar sVar) {, +		RegisterArg dup = new TypeImmutableArg(regNum, getInitType());, +		if (sVar != null) {, +			dup.setSVar(sVar);, +		}, +		dup.copyAttributesFrom(this);, +		return dup;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +import org.jetbrains.annotations.Nullable;, +	public void setResult(@Nullable RegisterArg res) {, +			SSAVar ssaVar = res.getSVar();, +			if (ssaVar != null) {, +				ssaVar.setAssign(res);, +			}, +		arg.setParentInsn(this);, +		if (arg.isRegister()) {, +			RegisterArg reg = (RegisterArg) arg;, +			SSAVar ssaVar = reg.getSVar();, +			if (ssaVar != null) {, +				ssaVar.use(reg);, +			}, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		if (arguments == null || arguments.isEmpty()) {, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java, +, +	public InsnArg duplicate() {, +		return this;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +, +	@Override, +	public RegisterArg duplicate() {, +		return duplicate(getRegNum(), getSVar());, +	}, +, +	@Override, +	public RegisterArg duplicate(int regNum, SSAVar sVar) {, +		RegisterArg dup = new TypeImmutableArg(regNum, getInitType());, +		if (sVar != null) {, +			dup.setSVar(sVar);, +		}, +		dup.copyAttributesFrom(this);, +		return dup;, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +import org.jetbrains.annotations.Nullable;, +	public void setResult(@Nullable RegisterArg res) {, +			SSAVar ssaVar = res.getSVar();, +			if (ssaVar != null) {, +				ssaVar.setAssign(res);, +			}]