[+++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		// don't add 'abstract' and 'public' to methods in interface, +			ai = ai.remove(AccessFlags.ACC_PUBLIC);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		// don't add 'abstract' and 'public' to methods in interface, +			ai = ai.remove(AccessFlags.ACC_PUBLIC);, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		if (tryCatchBlock.getFinalRegion() != null) {, +			makeRegionIndent(code, tryCatchBlock.getFinalRegion());, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		// don't add 'abstract' and 'public' to methods in interface, +			ai = ai.remove(AccessFlags.ACC_PUBLIC);, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		if (tryCatchBlock.getFinalRegion() != null) {, +			makeRegionIndent(code, tryCatchBlock.getFinalRegion());, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +					if (ct1 != ct2 && ct2.containsAllHandlers(ct1)) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		// don't add 'abstract' and 'public' to methods in interface, +			ai = ai.remove(AccessFlags.ACC_PUBLIC);, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		if (tryCatchBlock.getFinalRegion() != null) {, +			makeRegionIndent(code, tryCatchBlock.getFinalRegion());, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +					if (ct1 != ct2 && ct2.containsAllHandlers(ct1)) {, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java, +	private BlockNode handlerBlock;, +	public BlockNode getHandlerBlock() {, +		return handlerBlock;, +	public void setHandlerBlock(BlockNode handlerBlock) {, +		this.handlerBlock = handlerBlock;, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		// don't add 'abstract' and 'public' to methods in interface, +			ai = ai.remove(AccessFlags.ACC_PUBLIC);, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		if (tryCatchBlock.getFinalRegion() != null) {, +			makeRegionIndent(code, tryCatchBlock.getFinalRegion());, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +					if (ct1 != ct2 && ct2.containsAllHandlers(ct1)) {, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java, +	private BlockNode handlerBlock;, +	public BlockNode getHandlerBlock() {, +		return handlerBlock;, +	public void setHandlerBlock(BlockNode handlerBlock) {, +		this.handlerBlock = handlerBlock;, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +	private IContainer finalRegion;, +	public Iterable<ExceptionHandler> getHandlers() {, +		return handlers;, +	}, +, +	public int getHandlersCount() {, +		return handlers.size();, +	}, +, +	public boolean containsAllHandlers(TryCatchBlock tb) {, +		return handlers.containsAll(tb.handlers);, +		if (finalRegion != null) {, +							tb.setFinalRegionFromInsns(mth, ((IBlock) finalRegion).getInstructions());, +	public IContainer getFinalRegion() {, +		return finalRegion;, +	public void setFinalRegion(IContainer finalRegion) {, +		this.finalRegion = finalRegion;, +	public void setFinalRegionFromInsns(MethodNode mth, List<InsnNode> insns) {, +		setFinalRegion(new InsnContainer(finalBlockInsns));, +		this.handlers.addAll(tryBlock.handlers);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		// don't add 'abstract' and 'public' to methods in interface, +			ai = ai.remove(AccessFlags.ACC_PUBLIC);, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		if (tryCatchBlock.getFinalRegion() != null) {, +			makeRegionIndent(code, tryCatchBlock.getFinalRegion());, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +					if (ct1 != ct2 && ct2.containsAllHandlers(ct1)) {, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java, +	private BlockNode handlerBlock;, +	public BlockNode getHandlerBlock() {, +		return handlerBlock;, +	public void setHandlerBlock(BlockNode handlerBlock) {, +		this.handlerBlock = handlerBlock;, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +	private IContainer finalRegion;, +	public Iterable<ExceptionHandler> getHandlers() {, +		return handlers;, +	}, +, +	public int getHandlersCount() {, +		return handlers.size();, +	}, +, +	public boolean containsAllHandlers(TryCatchBlock tb) {, +		return handlers.containsAll(tb.handlers);, +		if (finalRegion != null) {, +							tb.setFinalRegionFromInsns(mth, ((IBlock) finalRegion).getInstructions());, +	public IContainer getFinalRegion() {, +		return finalRegion;, +	public void setFinalRegion(IContainer finalRegion) {, +		this.finalRegion = finalRegion;, +	public void setFinalRegionFromInsns(MethodNode mth, List<InsnNode> insns) {, +		setFinalRegion(new InsnContainer(finalBlockInsns));]