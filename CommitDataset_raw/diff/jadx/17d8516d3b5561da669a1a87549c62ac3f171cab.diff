[+++ b/build.gradle, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				code.add("new ").add(insn.getResult().getInitType().toString());, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				code.add("new ").add(insn.getResult().getInitType().toString());, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/PhiInsn.java, +import jadx.core.utils.InsnRemover;, +			InsnRemover.fixUsedInPhiFlag(reg);, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				code.add("new ").add(insn.getResult().getInitType().toString());, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/PhiInsn.java, +import jadx.core.utils.InsnRemover;, +			InsnRemover.fixUsedInPhiFlag(reg);, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +import jadx.core.utils.InsnRemover;, +		attachArg(arg);, +	}, +, +	public void setArg(int n, InsnArg arg) {, +		arguments.set(n, arg);, +		attachArg(arg);, +	}, +, +	private void attachArg(InsnArg arg) {, +				InsnRemover.unbindArgUsage(null, arg);, +				InsnRemover.unbindArgUsage(null, arg);, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				code.add("new ").add(insn.getResult().getInitType().toString());, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/PhiInsn.java, +import jadx.core.utils.InsnRemover;, +			InsnRemover.fixUsedInPhiFlag(reg);, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +import jadx.core.utils.InsnRemover;, +		attachArg(arg);, +	}, +, +	public void setArg(int n, InsnArg arg) {, +		arguments.set(n, arg);, +		attachArg(arg);, +	}, +, +	private void attachArg(InsnArg arg) {, +				InsnRemover.unbindArgUsage(null, arg);, +				InsnRemover.unbindArgUsage(null, arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InsnRemover;, +		InsnRemover.remove(mth, block, insn);, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				code.add("new ").add(insn.getResult().getInitType().toString());, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/PhiInsn.java, +import jadx.core.utils.InsnRemover;, +			InsnRemover.fixUsedInPhiFlag(reg);, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +import jadx.core.utils.InsnRemover;, +		attachArg(arg);, +	}, +, +	public void setArg(int n, InsnArg arg) {, +		arguments.set(n, arg);, +		attachArg(arg);, +	}, +, +	private void attachArg(InsnArg arg) {, +				InsnRemover.unbindArgUsage(null, arg);, +				InsnRemover.unbindArgUsage(null, arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InsnRemover;, +		InsnRemover.remove(mth, block, insn);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java, +import jadx.core.utils.InsnRemover;, +			InsnRemover.removeAllAndUnbind(mth, block, toRemove);, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				code.add("new ").add(insn.getResult().getInitType().toString());, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/PhiInsn.java, +import jadx.core.utils.InsnRemover;, +			InsnRemover.fixUsedInPhiFlag(reg);, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +import jadx.core.utils.InsnRemover;, +		attachArg(arg);, +	}, +, +	public void setArg(int n, InsnArg arg) {, +		arguments.set(n, arg);, +		attachArg(arg);, +	}, +, +	private void attachArg(InsnArg arg) {, +				InsnRemover.unbindArgUsage(null, arg);, +				InsnRemover.unbindArgUsage(null, arg);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java, +import jadx.core.utils.InsnRemover;, +		InsnRemover.remove(mth, block, insn);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java, +import jadx.core.utils.InsnRemover;]