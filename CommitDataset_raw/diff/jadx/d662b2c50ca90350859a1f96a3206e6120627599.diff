[+++ b/src/main/java/jadx/codegen/InsnGen.java, +		String type = TypeGen.translate(mgen.getClassGen(), arg.getType());, +		String generic = arg.getType().getGeneric();, +		if (generic != null), +			type += " /* " + generic + " */";, +		return type + " " + arg(arg);, +++ b/src/main/java/jadx/codegen/InsnGen.java, +		String type = TypeGen.translate(mgen.getClassGen(), arg.getType());, +		String generic = arg.getType().getGeneric();, +		if (generic != null), +			type += " /* " + generic + " */";, +		return type + " " + arg(arg);, +++ b/src/main/java/jadx/dex/info/LocalVarInfo.java, +	private int startAddr;, +	private int endAddr;, +, +		if (sign != null) {, +			type.setGeneric(sign);, +		}, +		this.startAddr = addr;, +		this.endAddr = addr;, +, +	public int getStartAddr() {, +		return startAddr;, +	}, +, +	public int getEndAddr() {, +		return endAddr;, +	}, +, +	@Override, +	public String toString() {, +		return super.toString() + " " + (isEnd ? "end" : "active");, +	}, +++ b/src/main/java/jadx/codegen/InsnGen.java, +		String type = TypeGen.translate(mgen.getClassGen(), arg.getType());, +		String generic = arg.getType().getGeneric();, +		if (generic != null), +			type += " /* " + generic + " */";, +		return type + " " + arg(arg);, +++ b/src/main/java/jadx/dex/info/LocalVarInfo.java, +	private int startAddr;, +	private int endAddr;, +, +		if (sign != null) {, +			type.setGeneric(sign);, +		}, +		this.startAddr = addr;, +		this.endAddr = addr;, +, +	public int getStartAddr() {, +		return startAddr;, +	}, +, +	public int getEndAddr() {, +		return endAddr;, +	}, +, +	@Override, +	public String toString() {, +		return super.toString() + " " + (isEnd ? "end" : "active");, +	}, +++ b/src/main/java/jadx/dex/instructions/args/ArgType.java, +	private String generic; // TODO extract generic info from signature, +, +	public String getGeneric() {, +		return generic;, +	}, +, +	public void setGeneric(String generic) {, +		this.generic = generic;, +	}, +, +++ b/src/main/java/jadx/codegen/InsnGen.java, +		String type = TypeGen.translate(mgen.getClassGen(), arg.getType());, +		String generic = arg.getType().getGeneric();, +		if (generic != null), +			type += " /* " + generic + " */";, +		return type + " " + arg(arg);, +++ b/src/main/java/jadx/dex/info/LocalVarInfo.java, +	private int startAddr;, +	private int endAddr;, +, +		if (sign != null) {, +			type.setGeneric(sign);, +		}, +		this.startAddr = addr;, +		this.endAddr = addr;, +, +	public int getStartAddr() {, +		return startAddr;, +	}, +, +	public int getEndAddr() {, +		return endAddr;, +	}, +, +	@Override, +	public String toString() {, +		return super.toString() + " " + (isEnd ? "end" : "active");]