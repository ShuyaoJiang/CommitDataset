[+++ b/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java, +		if (block.getAttributes().contains(AttributeFlag.LOOP_END)) {, +					// don't follow back edge, +					if (loop.getStart() == b) {, +						continue;, +					}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java, +		if (block.getAttributes().contains(AttributeFlag.LOOP_END)) {, +					// don't follow back edge, +					if (loop.getStart() == b) {, +						continue;, +					}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockMakerVisitor.java, +					if (pred != otherPred) {, +						// merge, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java, +		if (block.getAttributes().contains(AttributeFlag.LOOP_END)) {, +					// don't follow back edge, +					if (loop.getStart() == b) {, +						continue;, +					}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockMakerVisitor.java, +					if (pred != otherPred) {, +						// merge, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java, +			IfInfo mergedIf = mergeNestedIfNodes(condBlock, ifnode, merged);, +			// block already included in other 'if' region, +			return ifnode.getThenBlock();, +		final BlockNode thenBlock;, +		final BlockNode elseBlock;, +		IfInfo mergedIf = mergeNestedIfNodes(block, ifnode, null);, +			final BlockNode bThen = ifnode.getThenBlock();, +			final BlockNode bElse = ifnode.getElseBlock();, +			// select 'then', 'else' and 'exit' blocks, +			if (bElse.getPredecessors().size() != 1, +					&& BlockUtils.isPathExists(bThen, bElse)) {, +				elseBlock = null;, +				out = bElse;, +			} else if (bThen.getPredecessors().size() != 1, +					&& BlockUtils.isPathExists(bElse, bThen)) {, +				ifnode.invertCondition();, +				thenBlock = ifnode.getThenBlock();, +				elseBlock = null;, +				out = ifnode.getElseBlock();, +			} else if (block.getDominatesOn().size() == 2) {, +				thenBlock = bThen;, +				out = BlockUtils.getPathCrossBlockFor(mth, bThen, bElse);, +			} else if (bElse.getPredecessors().size() != 1) {, +				thenBlock = bThen;, +				elseBlock = null;, +				thenBlock = bThen;, +		if (elseBlock == null || stack.containsExit(elseBlock)) {, +			ifRegion.setElseRegion(null);, +		} else {, +			ifRegion.setElseRegion(makeRegion(elseBlock, stack));, +		}, +	private IfInfo mergeNestedIfNodes(BlockNode block, IfNode ifnode, List<BlockNode> merged) {, +		info.setThenBlock(ifnode.getThenBlock());, +		info.setElseBlock(ifnode.getElseBlock());, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java, +		if (block.getAttributes().contains(AttributeFlag.LOOP_END)) {, +					// don't follow back edge, +					if (loop.getStart() == b) {, +						continue;, +					}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockMakerVisitor.java, +					if (pred != otherPred) {, +						// merge, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java, +			IfInfo mergedIf = mergeNestedIfNodes(condBlock, ifnode, merged);, +			// block already included in other 'if' region, +			return ifnode.getThenBlock();, +		final BlockNode thenBlock;, +		final BlockNode elseBlock;, +		IfInfo mergedIf = mergeNestedIfNodes(block, ifnode, null);, +			final BlockNode bThen = ifnode.getThenBlock();, +			final BlockNode bElse = ifnode.getElseBlock();, +			// select 'then', 'else' and 'exit' blocks, +			if (bElse.getPredecessors().size() != 1, +					&& BlockUtils.isPathExists(bThen, bElse)) {, +				elseBlock = null;, +				out = bElse;, +			} else if (bThen.getPredecessors().size() != 1, +					&& BlockUtils.isPathExists(bElse, bThen)) {, +				ifnode.invertCondition();, +				thenBlock = ifnode.getThenBlock();, +				elseBlock = null;, +				out = ifnode.getElseBlock();, +			} else if (block.getDominatesOn().size() == 2) {, +				thenBlock = bThen;, +				out = BlockUtils.getPathCrossBlockFor(mth, bThen, bElse);, +			} else if (bElse.getPredecessors().size() != 1) {, +				thenBlock = bThen;, +				elseBlock = null;, +				thenBlock = bThen;, +		if (elseBlock == null || stack.containsExit(elseBlock)) {, +			ifRegion.setElseRegion(null);]