[+++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +	private final boolean showInconsistentCode;, +	public ClassGen(ClassNode cls, IJadxArgs jadxArgs) {, +		this(cls, null, jadxArgs.isFallbackMode(), jadxArgs.isShowInconsistentCode());, +	public ClassGen(ClassNode cls, ClassGen parentClsGen) {, +		this(cls, parentClsGen, parentClsGen.fallback, parentClsGen.showInconsistentCode);, +	}, +, +	public ClassGen(ClassNode cls, ClassGen parentClsGen, boolean fallback, boolean showBadCode) {, +		this.showInconsistentCode = showBadCode;, +			ClassGen inClGen = new ClassGen(innerCls, getParentGen());, +					badCode = false;, +				new ClassGen(f.getCls(), this).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +	private final boolean showInconsistentCode;, +	public ClassGen(ClassNode cls, IJadxArgs jadxArgs) {, +		this(cls, null, jadxArgs.isFallbackMode(), jadxArgs.isShowInconsistentCode());, +	public ClassGen(ClassNode cls, ClassGen parentClsGen) {, +		this(cls, parentClsGen, parentClsGen.fallback, parentClsGen.showInconsistentCode);, +	}, +, +	public ClassGen(ClassNode cls, ClassGen parentClsGen, boolean fallback, boolean showBadCode) {, +		this.showInconsistentCode = showBadCode;, +			ClassGen inClGen = new ClassGen(innerCls, getParentGen());, +					badCode = false;, +				new ClassGen(f.getCls(), this).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +		ClassGen clsGen = new ClassGen(cls, args);, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +	private final boolean showInconsistentCode;, +	public ClassGen(ClassNode cls, IJadxArgs jadxArgs) {, +		this(cls, null, jadxArgs.isFallbackMode(), jadxArgs.isShowInconsistentCode());, +	public ClassGen(ClassNode cls, ClassGen parentClsGen) {, +		this(cls, parentClsGen, parentClsGen.fallback, parentClsGen.showInconsistentCode);, +	}, +, +	public ClassGen(ClassNode cls, ClassGen parentClsGen, boolean fallback, boolean showBadCode) {, +		this.showInconsistentCode = showBadCode;, +			ClassGen inClGen = new ClassGen(innerCls, getParentGen());, +					badCode = false;, +				new ClassGen(f.getCls(), this).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +		ClassGen clsGen = new ClassGen(cls, args);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			new ClassGen(cls, mgen.getClassGen().getParentGen()).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +	private final boolean showInconsistentCode;, +	public ClassGen(ClassNode cls, IJadxArgs jadxArgs) {, +		this(cls, null, jadxArgs.isFallbackMode(), jadxArgs.isShowInconsistentCode());, +	public ClassGen(ClassNode cls, ClassGen parentClsGen) {, +		this(cls, parentClsGen, parentClsGen.fallback, parentClsGen.showInconsistentCode);, +	}, +, +	public ClassGen(ClassNode cls, ClassGen parentClsGen, boolean fallback, boolean showBadCode) {, +		this.showInconsistentCode = showBadCode;, +			ClassGen inClGen = new ClassGen(innerCls, getParentGen());, +					badCode = false;, +				new ClassGen(f.getCls(), this).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +		ClassGen clsGen = new ClassGen(cls, args);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			new ClassGen(cls, mgen.getClassGen().getParentGen()).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		ClassGen clsGen = new ClassGen(mth.getParentClass(), null, true, true);, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +	private final boolean showInconsistentCode;, +	public ClassGen(ClassNode cls, IJadxArgs jadxArgs) {, +		this(cls, null, jadxArgs.isFallbackMode(), jadxArgs.isShowInconsistentCode());, +	public ClassGen(ClassNode cls, ClassGen parentClsGen) {, +		this(cls, parentClsGen, parentClsGen.fallback, parentClsGen.showInconsistentCode);, +	}, +, +	public ClassGen(ClassNode cls, ClassGen parentClsGen, boolean fallback, boolean showBadCode) {, +		this.showInconsistentCode = showBadCode;, +			ClassGen inClGen = new ClassGen(innerCls, getParentGen());, +					badCode = false;, +				new ClassGen(f.getCls(), this).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +		ClassGen clsGen = new ClassGen(cls, args);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +			new ClassGen(cls, mgen.getClassGen().getParentGen()).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +		ClassGen clsGen = new ClassGen(mth.getParentClass(), null, true, true);, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +		if (mth.getBasicBlocks() != null) {, +	}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +	private final boolean showInconsistentCode;, +	public ClassGen(ClassNode cls, IJadxArgs jadxArgs) {, +		this(cls, null, jadxArgs.isFallbackMode(), jadxArgs.isShowInconsistentCode());, +	public ClassGen(ClassNode cls, ClassGen parentClsGen) {, +		this(cls, parentClsGen, parentClsGen.fallback, parentClsGen.showInconsistentCode);, +	}, +, +	public ClassGen(ClassNode cls, ClassGen parentClsGen, boolean fallback, boolean showBadCode) {, +		this.showInconsistentCode = showBadCode;, +			ClassGen inClGen = new ClassGen(innerCls, getParentGen());, +					badCode = false;, +				new ClassGen(f.getCls(), this).addClassBody(code);, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java]