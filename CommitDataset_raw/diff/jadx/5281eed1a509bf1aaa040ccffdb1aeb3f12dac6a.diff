[+++ b/jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java, +		openAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("file.open_action"));, +++ b/jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java, +		openAction.putValue(Action.SHORT_DESCRIPTION, NLS.str("file.open_action"));, +++ b/jadx-gui/src/main/java/jadx/gui/utils/NLS.java, +import java.io.IOException;, +import java.io.InputStreamReader;, +import java.io.Reader;, +import java.net.URL;, +import java.nio.charset.StandardCharsets;, +import java.util.*;, +	private static Map<LangLocale, ResourceBundle> i18nMessagesMap = new HashMap<>();, +	private static ResourceBundle localizedMessagesMap;, +	private static ResourceBundle fallbackMessagesMap;, +		ResourceBundle bundle;, +		ClassLoader classLoader = ClassLoader.getSystemClassLoader();, +		String resName = String.format("i18n/Messages_%s.properties", locale.get());, +		URL bundleUrl = classLoader.getResource(resName);, +		try (Reader reader = new InputStreamReader(bundleUrl.openStream(), StandardCharsets.UTF_8)) {, +			bundle = new PropertyResourceBundle(reader);, +		} catch (IOException e) {, +			throw new RuntimeException("Failed to load " + resName, e);, +		i18nMessagesMap.put(locale, bundle);, +		try {, +			return localizedMessagesMap.getString(key);, +		} catch (MissingResourceException e) {, +			return fallbackMessagesMap.getString(key); // definitely exists, +		ResourceBundle bundle = i18nMessagesMap.get(locale);, +		if (bundle != null) {, +			try {, +				return bundle.getString(key);, +			} catch (MissingResourceException e) {, +		return fallbackMessagesMap.getString(key); // definitely exists]