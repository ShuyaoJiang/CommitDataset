[+++ b/src/main/java/jadx/dex/visitors/MethodInlinerVisitor.java, +import jadx.dex.info.AccessInfo;, +		AccessInfo accessFlags = mth.getAccessFlags();, +		if (accessFlags.isSynthetic() && accessFlags.isStatic()) {, +			if (mth.getBasicBlocks().size() == 2) {, +				BlockNode block = mth.getBasicBlocks().get(1);, +				if (block.getAttributes().contains(AttributeFlag.RETURN)) {, +					inlineMth(mth);, +				}, +			}, +		}, +	}, +, +	private static void inlineMth(MethodNode mth) {, +		BlockNode firstBlock = mth.getBasicBlocks().get(0);, +		if (firstBlock.getInstructions().isEmpty()) {, +			BlockNode block = mth.getBasicBlocks().get(1);, +		} else {, +			// synthetic field setter or method invoke, +			if (firstBlock.getInstructions().size() == 1) {, +				addInlineAttr(mth, firstBlock.getInstructions().get(0));, +++ b/src/main/java/jadx/dex/visitors/MethodInlinerVisitor.java, +import jadx.dex.info.AccessInfo;, +		AccessInfo accessFlags = mth.getAccessFlags();, +		if (accessFlags.isSynthetic() && accessFlags.isStatic()) {, +			if (mth.getBasicBlocks().size() == 2) {, +				BlockNode block = mth.getBasicBlocks().get(1);, +				if (block.getAttributes().contains(AttributeFlag.RETURN)) {, +					inlineMth(mth);, +				}, +			}, +		}, +	}, +, +	private static void inlineMth(MethodNode mth) {, +		BlockNode firstBlock = mth.getBasicBlocks().get(0);, +		if (firstBlock.getInstructions().isEmpty()) {, +			BlockNode block = mth.getBasicBlocks().get(1);, +		} else {, +			// synthetic field setter or method invoke, +			if (firstBlock.getInstructions().size() == 1) {, +				addInlineAttr(mth, firstBlock.getInstructions().get(0));, +++ b/src/samples/java/jadx/samples/AbstractTest.java, +	public static void assertTrue(boolean condition, String msg) {, +		if (!condition) {, +			throw new AssertionError(msg);, +		}, +	}, +, +++ b/src/main/java/jadx/dex/visitors/MethodInlinerVisitor.java, +import jadx.dex.info.AccessInfo;, +		AccessInfo accessFlags = mth.getAccessFlags();, +		if (accessFlags.isSynthetic() && accessFlags.isStatic()) {, +			if (mth.getBasicBlocks().size() == 2) {, +				BlockNode block = mth.getBasicBlocks().get(1);, +				if (block.getAttributes().contains(AttributeFlag.RETURN)) {, +					inlineMth(mth);, +				}, +			}, +		}, +	}, +, +	private static void inlineMth(MethodNode mth) {, +		BlockNode firstBlock = mth.getBasicBlocks().get(0);, +		if (firstBlock.getInstructions().isEmpty()) {, +			BlockNode block = mth.getBasicBlocks().get(1);, +		} else {, +			// synthetic field setter or method invoke, +			if (firstBlock.getInstructions().size() == 1) {, +				addInlineAttr(mth, firstBlock.getInstructions().get(0));, +++ b/src/samples/java/jadx/samples/AbstractTest.java, +	public static void assertTrue(boolean condition, String msg) {, +		if (!condition) {, +			throw new AssertionError(msg);, +		}, +	}, +, +++ b/src/samples/java/jadx/samples/TestInner2.java, +import java.lang.reflect.Method;, +, +	private String c;, +, +	private void setC(String c) {, +		this.c = c;, +	}, +, +	public class C {, +		public String c() {, +			setC("c");, +			return c;, +		}, +	}, +, +	private static String d;, +, +	private static void setD(String s) {, +		d = s;, +	}, +, +	public static class D {]