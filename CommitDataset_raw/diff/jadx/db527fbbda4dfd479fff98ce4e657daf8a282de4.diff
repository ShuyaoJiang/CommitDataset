[+++ b/jadx-core/build.gradle, +    runtime files(jadxClasspath), +, +, +    testCompile 'org.smali:smali:2.0.3', +++ b/jadx-core/build.gradle, +    runtime files(jadxClasspath), +, +, +    testCompile 'org.smali:smali:2.0.3', +++ b/jadx-core/src/test/java/jadx/api/InternalJadxTest.java, +import jadx.core.utils.exceptions.JadxException;, +	protected boolean deleteTmpFiles = true;, +			File jar = getJarForClass(clazz);, +			return getClassNodeFromFile(jar, clazz.getName());, +		return null;, +	}, +, +	public ClassNode getClassNodeFromFile(File file, String clsName) {, +		JadxDecompiler d = new JadxDecompiler();, +		try {, +			d.loadFile(file);, +		} catch (JadxException e) {, +			fail(e.getMessage());, +		}, +		assertEquals(cls.getFullName(), clsName);, +		File temp = createTempFile(".jar");, +		return temp;, +	}, +, +	protected File createTempFile(String suffix) {, +		File temp = null;, +		try {, +			temp = File.createTempFile("jadx-tmp-", System.nanoTime() + suffix);, +			if (deleteTmpFiles) {, +				System.out.println("Temporary file path: " + temp.getAbsolutePath());, +			}, +		} catch (IOException e) {, +			fail(e.getMessage());, +		this.deleteTmpFiles = false;, +++ b/jadx-core/build.gradle, +    runtime files(jadxClasspath), +, +, +    testCompile 'org.smali:smali:2.0.3', +++ b/jadx-core/src/test/java/jadx/api/InternalJadxTest.java, +import jadx.core.utils.exceptions.JadxException;, +	protected boolean deleteTmpFiles = true;, +			File jar = getJarForClass(clazz);, +			return getClassNodeFromFile(jar, clazz.getName());, +		return null;, +	}, +, +	public ClassNode getClassNodeFromFile(File file, String clsName) {, +		JadxDecompiler d = new JadxDecompiler();, +		try {, +			d.loadFile(file);, +		} catch (JadxException e) {, +			fail(e.getMessage());, +		}, +		assertEquals(cls.getFullName(), clsName);, +		File temp = createTempFile(".jar");, +		return temp;, +	}, +, +	protected File createTempFile(String suffix) {, +		File temp = null;, +		try {, +			temp = File.createTempFile("jadx-tmp-", System.nanoTime() + suffix);, +			if (deleteTmpFiles) {, +				System.out.println("Temporary file path: " + temp.getAbsolutePath());, +			}, +		} catch (IOException e) {, +			fail(e.getMessage());, +		this.deleteTmpFiles = false;, +++ b/jadx-core/src/test/java/jadx/api/SmaliTest.java, +package jadx.api;, +, +import jadx.core.Consts;, +import jadx.core.dex.nodes.ClassNode;, +, +import java.io.File;, +import java.util.ArrayList;, +import java.util.List;, +, +import org.jf.smali.main;, +, +import static org.junit.Assert.fail;, +, +public class SmaliTest extends InternalJadxTest {, +, +	private static final String SMALI_TESTS_PROJECT = "jadx-core";, +	private static final String SMALI_TESTS_DIR = "src/test/smali";, +	private static final String SMALI_TESTS_EXT = ".smali";, +, +	protected ClassNode getClassNodeFromSmali(String clsName) {, +		File smaliFile = getSmaliFile(clsName);, +		File outDex = createTempFile(".dex");, +		compileSmali(smaliFile, outDex);, +		String fullClsName = Consts.DEFAULT_PACKAGE_NAME + "." + clsName;]