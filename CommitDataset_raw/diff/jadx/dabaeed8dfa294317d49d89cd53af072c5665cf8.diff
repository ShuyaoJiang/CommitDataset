[+++ b/jadx-core/src/main/java/jadx/core/Consts.java, +, +	public static final String MTH_TOSTRING_SIGNATURE = "toString()Ljava/lang/String;";, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +, +	public static final String MTH_TOSTRING_SIGNATURE = "toString()Ljava/lang/String;";, +++ b/jadx-core/src/main/java/jadx/core/dex/info/MethodInfo.java, +		StringBuilder signature = new StringBuilder();, +		signature.append(name);, +		signature.append('(');, +		for (ArgType arg : args) {, +			signature.append(TypeGen.signature(arg));, +		}, +		signature.append(')');, +		signature.append(TypeGen.signature(retType));, +		shortId = signature.toString();, +		return declClass.getFullName() + "." + name, +				+ "(" + Utils.listToString(args) + "):" + retType;, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +, +	public static final String MTH_TOSTRING_SIGNATURE = "toString()Ljava/lang/String;";, +++ b/jadx-core/src/main/java/jadx/core/dex/info/MethodInfo.java, +		StringBuilder signature = new StringBuilder();, +		signature.append(name);, +		signature.append('(');, +		for (ArgType arg : args) {, +			signature.append(TypeGen.signature(arg));, +		}, +		signature.append(')');, +		signature.append(TypeGen.signature(retType));, +		shortId = signature.toString();, +		return declClass.getFullName() + "." + name, +				+ "(" + Utils.listToString(args) + "):" + retType;, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +		return parentClass.getFullName() + "." + mthInfo.getName(), +				+ "(" + Utils.listToString(mthInfo.getArgumentsTypes()) + "):", +				+ retType;, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +, +	public static final String MTH_TOSTRING_SIGNATURE = "toString()Ljava/lang/String;";, +++ b/jadx-core/src/main/java/jadx/core/dex/info/MethodInfo.java, +		StringBuilder signature = new StringBuilder();, +		signature.append(name);, +		signature.append('(');, +		for (ArgType arg : args) {, +			signature.append(TypeGen.signature(arg));, +		}, +		signature.append(')');, +		signature.append(TypeGen.signature(retType));, +		shortId = signature.toString();, +		return declClass.getFullName() + "." + name, +				+ "(" + Utils.listToString(args) + "):" + retType;, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +		return parentClass.getFullName() + "." + mthInfo.getName(), +				+ "(" + Utils.listToString(mthInfo.getArgumentsTypes()) + "):", +				+ retType;, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java, +import jadx.core.codegen.TypeGen;, +import jadx.core.dex.instructions.args.ArgType;, +		if (!cls.isEnum()) {, +		}, +		ArgType clsType = cls.getClassInfo().getType();, +		String enumConstructor = "<init>(Ljava/lang/String;I)V";, +		String valuesOfMethod = "valueOf(Ljava/lang/String;)" + TypeGen.signature(clsType);, +		String valuesMethod = "values()" + TypeGen.signature(ArgType.array(clsType));, +, +			} else {, +				String shortId = mi.getShortId();, +				boolean isSynthetic = mth.getAccessFlags().isSynthetic();, +				if (mi.isConstructor() && !isSynthetic) {, +					if (shortId.equals(enumConstructor)) {, +					}, +				} else if (isSynthetic, +						|| shortId.equals(valuesMethod), +						|| shortId.equals(valuesOfMethod)) {, +		}, +					if (i == size - 1) {, +					} else {, +					}, +				if (insn.getArgsCount() < 2) {, +				}, +				if (constrCls == null) {, +				}, +				if (!clsInfo.equals(cls.getClassInfo()) && !constrCls.getAccessFlags().isEnum()) {, +				}, +						if (constrArg == null) {, +					}, +								if (innerMth.getAccessFlags().isConstructor()) {, +							}, +++ b/jadx-core/src/main/java/jadx/core/Consts.java, +, +	public static final String MTH_TOSTRING_SIGNATURE = "toString()Ljava/lang/String;";, +++ b/jadx-core/src/main/java/jadx/core/dex/info/MethodInfo.java, +		StringBuilder signature = new StringBuilder();, +		signature.append(name);, +		signature.append('(');, +		for (ArgType arg : args) {, +			signature.append(TypeGen.signature(arg));, +		}, +		signature.append(')');]