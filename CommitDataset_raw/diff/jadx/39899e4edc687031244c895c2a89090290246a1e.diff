[+++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + * <p/>, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + * <p/>, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.searchField(field);, +		while (fieldNode == null, +				&& pCls.getParentClass() != pCls, +				&& pCls.getParentClass() != null) {, +			pCls = pCls.getParentClass();, +			fieldNode = pCls.searchField(field);, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().resolveField(field);, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + * <p/>, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.searchField(field);, +		while (fieldNode == null, +				&& pCls.getParentClass() != pCls, +				&& pCls.getParentClass() != null) {, +			pCls = pCls.getParentClass();, +			fieldNode = pCls.searchField(field);, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().resolveField(field);, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ArgType superClass = cls.getSuperClass();, +				ClassNode superNode = cls.dex().resolveClass(superClass);, +				if (superNode != null) {, +					collectClassHierarchy(superNode, collected);, +				}, +			for (ArgType argType : cls.getInterfaces()) {, +				ClassNode interfaceNode = cls.dex().resolveClass(argType);, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + * <p/>, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.searchField(field);, +		while (fieldNode == null, +				&& pCls.getParentClass() != pCls, +				&& pCls.getParentClass() != null) {, +			pCls = pCls.getParentClass();, +			fieldNode = pCls.searchField(field);, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().resolveField(field);, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ArgType superClass = cls.getSuperClass();, +				ClassNode superNode = cls.dex().resolveClass(superClass);, +				if (superNode != null) {, +					collectClassHierarchy(superNode, collected);, +				}, +			for (ArgType argType : cls.getInterfaces()) {, +				ClassNode interfaceNode = cls.dex().resolveClass(argType);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + * <p/>, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.searchField(field);, +		while (fieldNode == null, +				&& pCls.getParentClass() != pCls, +				&& pCls.getParentClass() != null) {, +			pCls = pCls.getParentClass();, +			fieldNode = pCls.searchField(field);, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().resolveField(field);, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ArgType superClass = cls.getSuperClass();, +				ClassNode superNode = cls.dex().resolveClass(superClass);, +				if (superNode != null) {, +					collectClassHierarchy(superNode, collected);, +				}, +			for (ArgType argType : cls.getInterfaces()) {, +				ClassNode interfaceNode = cls.dex().resolveClass(argType);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + * <p/>, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		FieldNode fieldNode = pCls.searchField(field);, +		while (fieldNode == null, +				&& pCls.getParentClass() != pCls, +				&& pCls.getParentClass() != null) {, +			pCls = pCls.getParentClass();, +			fieldNode = pCls.searchField(field);, +		}, +		FieldNode fieldNode = clsGen.getClassNode().dex().resolveField(field);, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +			ArgType superClass = cls.getSuperClass();, +				ClassNode superNode = cls.dex().resolveClass(superClass);, +				if (superNode != null) {, +					collectClassHierarchy(superNode, collected);, +				}, +			for (ArgType argType : cls.getInterfaces()) {, +				ClassNode interfaceNode = cls.dex().resolveClass(argType);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +				this.interfaces.add(dex.getType(interfaceIdx));, +	@TestOnly, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, + * <p/>, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java]