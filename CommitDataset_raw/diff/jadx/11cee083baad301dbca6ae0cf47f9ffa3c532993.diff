[+++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +		return parent.getFullName() + '.' + getName();, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +		return parent.getFullName() + '.' + getName();, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +		return "ResourceFile{name='" + name + '\'' + ", type=" + type + '}';, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +		return parent.getFullName() + '.' + getName();, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +		return "ResourceFile{name='" + name + '\'' + ", type=" + type + '}';, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +					out.putNextEntry(new ZipEntry(CLST_PKG_PATH + '/' + CLST_FILENAME));, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +		return parent.getFullName() + '.' + getName();, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +		return "ResourceFile{name='" + name + '\'' + ", type=" + type + '}';, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +					out.putNextEntry(new ZipEntry(CLST_PKG_PATH + '/' + CLST_FILENAME));, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +			throw new JadxRuntimeException("Can't decode value: " + val + " (" + val.getClass() + ')');, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +		return parent.getFullName() + '.' + getName();, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +		return "ResourceFile{name='" + name + '\'' + ", type=" + type + '}';, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +					out.putNextEntry(new ZipEntry(CLST_PKG_PATH + '/' + CLST_FILENAME));, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +			throw new JadxRuntimeException("Can't decode value: " + val + " (" + val.getClass() + ')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					return parent + '.' + shortName;, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +		return parent.getFullName() + '.' + getName();, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +		return "ResourceFile{name='" + name + '\'' + ", type=" + type + '}';, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +					out.putNextEntry(new ZipEntry(CLST_PKG_PATH + '/' + CLST_FILENAME));, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +			throw new JadxRuntimeException("Can't decode value: " + val + " (" + val.getClass() + ')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +					return parent + '.' + shortName;, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +				code.add(insn.getType().toString()).add('(');, +				code.add(')');, +++ b/jadx-cli/src/main/java/jadx/cli/JCommanderWrapper.java, +				opt.append(" (default: ").append(val).append(')');, +++ b/jadx-core/src/main/java/jadx/api/CodePosition.java, +		return line + ':' + offset + (node != null ? " " + node : "");, +++ b/jadx-core/src/main/java/jadx/api/JadxArgsValidator.java, +			outDirName = name + '-' + JadxArgs.DEFAULT_OUT_DIR;, +++ b/jadx-core/src/main/java/jadx/api/JavaField.java, +		return parent.getFullName() + '.' + getName();, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java]