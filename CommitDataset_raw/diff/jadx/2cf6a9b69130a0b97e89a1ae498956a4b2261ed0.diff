[+++ b/jadx-gui/src/main/java/jadx/gui/JadxGUI.java, +import jadx.gui.utils.logs.LogCollector;, +++ b/jadx-gui/src/main/java/jadx/gui/JadxGUI.java, +import jadx.gui.utils.logs.LogCollector;, +++ b/jadx-gui/src/main/java/jadx/gui/ui/LogViewer.java, +import jadx.gui.utils.logs.ILogListener;, +import jadx.gui.utils.logs.LogCollector;, +		logCollector.registerListener(new ILogListener() {, +				SwingUtilities.invokeLater(() -> textPane.append(logStr));, +++ b/jadx-gui/src/main/java/jadx/gui/JadxGUI.java, +import jadx.gui.utils.logs.LogCollector;, +++ b/jadx-gui/src/main/java/jadx/gui/ui/LogViewer.java, +import jadx.gui.utils.logs.ILogListener;, +import jadx.gui.utils.logs.LogCollector;, +		logCollector.registerListener(new ILogListener() {, +				SwingUtilities.invokeLater(() -> textPane.append(logStr));, +++ /dev/null, +++ b/jadx-gui/src/main/java/jadx/gui/JadxGUI.java, +import jadx.gui.utils.logs.LogCollector;, +++ b/jadx-gui/src/main/java/jadx/gui/ui/LogViewer.java, +import jadx.gui.utils.logs.ILogListener;, +import jadx.gui.utils.logs.LogCollector;, +		logCollector.registerListener(new ILogListener() {, +				SwingUtilities.invokeLater(() -> textPane.append(logStr));, +++ /dev/null, +++ b/jadx-gui/src/main/java/jadx/gui/utils/logs/ILogListener.java, +package jadx.gui.utils.logs;, +, +import ch.qos.logback.classic.Level;, +, +public interface ILogListener {, +	Level getFilterLevel();, +, +	void onAppend(String logStr);, +}, +++ b/jadx-gui/src/main/java/jadx/gui/JadxGUI.java, +import jadx.gui.utils.logs.LogCollector;, +++ b/jadx-gui/src/main/java/jadx/gui/ui/LogViewer.java, +import jadx.gui.utils.logs.ILogListener;, +import jadx.gui.utils.logs.LogCollector;, +		logCollector.registerListener(new ILogListener() {, +				SwingUtilities.invokeLater(() -> textPane.append(logStr));, +++ /dev/null, +++ b/jadx-gui/src/main/java/jadx/gui/utils/logs/ILogListener.java, +package jadx.gui.utils.logs;, +, +import ch.qos.logback.classic.Level;, +, +public interface ILogListener {, +	Level getFilterLevel();, +, +	void onAppend(String logStr);, +}, +++ b/jadx-gui/src/main/java/jadx/gui/utils/logs/LogCollector.java, +package jadx.gui.utils.logs;, +, +import java.util.Deque;, +import java.util.LinkedList;, +, +import ch.qos.logback.classic.Level;, +import ch.qos.logback.classic.Logger;, +import ch.qos.logback.classic.LoggerContext;, +import ch.qos.logback.classic.PatternLayout;, +import ch.qos.logback.classic.spi.ILoggingEvent;, +import ch.qos.logback.core.AppenderBase;, +import ch.qos.logback.core.Layout;, +import org.jetbrains.annotations.NotNull;, +import org.jetbrains.annotations.Nullable;, +import org.slf4j.LoggerFactory;, +, +public class LogCollector extends AppenderBase<ILoggingEvent> {, +	public static final int BUFFER_SIZE = 5000;, +, +	private static final LogCollector INSTANCE = new LogCollector();, +	public static LogCollector getInstance() {, +		return INSTANCE;, +	}, +, +	public static void register() {, +		Logger rootLogger = (Logger) LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);, +		LoggerContext loggerContext = rootLogger.getLoggerContext();, +, +		PatternLayout layout = new PatternLayout();, +		layout.setContext(loggerContext);, +		layout.setPattern("%-5level: %msg%n");, +		layout.start();, +, +		INSTANCE.setContext(loggerContext);, +		INSTANCE.setLayout(layout);, +		INSTANCE.start();, +, +		rootLogger.addAppender(INSTANCE);, +	}, +, +	private Layout<ILoggingEvent> layout;, +, +	@Nullable, +	private ILogListener listener;, +, +	private final Deque<LogEvent> buffer = new LinkedList<>();]