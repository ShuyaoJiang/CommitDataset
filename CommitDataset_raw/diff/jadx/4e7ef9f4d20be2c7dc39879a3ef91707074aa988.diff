[+++ b/src/main/java/jadx/codegen/CodeWriter.java, +	public CodeWriter startLine(char c) {, +		buf.append(NL);, +		buf.append(indentStr);, +		buf.append(c);, +		return this;, +	}, +, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	public CodeWriter startLine(char c) {, +		buf.append(NL);, +		buf.append(indentStr);, +		buf.append(c);, +		return this;, +	}, +, +++ b/src/main/java/jadx/codegen/RegionGen.java, +		code.startLine('}');, +			code.add('{');, +			code.startLine('}');, +			code.startLine('}');, +			code.startLine('}');, +			code.startLine("} while ").add(makeCondition(insn)).add(';');, +		code.startLine('}');, +				code.startLine("case ");, +				code.add(TypeGen.literalToString(k, arg.getType()));, +				code.add(':');, +			makeCaseBlock(c, code);, +			makeCaseBlock(sw.getDefaultCase(), code);, +		code.startLine('}');, +	private void makeCaseBlock(IContainer c, CodeWriter code) throws CodegenException {, +		if (RegionUtils.notEmpty(c)) {, +			boolean closeBlock = RegionUtils.hasExitEdge(c);, +			if (closeBlock) {, +				code.add(" {");, +			}, +			makeRegionIndent(code, c);, +			if (closeBlock) {, +				code.startLine(1, "break;");, +				code.startLine('}');, +			}, +		} else {, +			code.startLine(1, "break;");, +		}, +	}, +, +		code.startLine('}');, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	public CodeWriter startLine(char c) {, +		buf.append(NL);, +		buf.append(indentStr);, +		buf.append(c);, +		return this;, +	}, +, +++ b/src/main/java/jadx/codegen/RegionGen.java, +		code.startLine('}');, +			code.add('{');, +			code.startLine('}');, +			code.startLine('}');, +			code.startLine('}');, +			code.startLine("} while ").add(makeCondition(insn)).add(';');, +		code.startLine('}');, +				code.startLine("case ");, +				code.add(TypeGen.literalToString(k, arg.getType()));, +				code.add(':');, +			makeCaseBlock(c, code);, +			makeCaseBlock(sw.getDefaultCase(), code);, +		code.startLine('}');, +	private void makeCaseBlock(IContainer c, CodeWriter code) throws CodegenException {, +		if (RegionUtils.notEmpty(c)) {, +			boolean closeBlock = RegionUtils.hasExitEdge(c);, +			if (closeBlock) {, +				code.add(" {");, +			}, +			makeRegionIndent(code, c);, +			if (closeBlock) {, +				code.startLine(1, "break;");, +				code.startLine('}');, +			}, +		} else {, +			code.startLine(1, "break;");, +		}, +	}, +, +		code.startLine('}');, +++ b/src/main/java/jadx/dex/visitors/ModVisitor.java, +						if (insn.getArgsCount() == 0) {, +							if (mth.getBasicBlocks().size() == 1 && i == size - 1) {, +							} else if (mth.getMethodInfo().isClassInit()) {, +								remover.add(insn);, +							}, +						}, +++ b/src/main/java/jadx/codegen/CodeWriter.java, +	public CodeWriter startLine(char c) {, +		buf.append(NL);, +		buf.append(indentStr);, +		buf.append(c);, +		return this;, +	}]