[+++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +	protected boolean highlightTextCaseInsensitive = false;, +				searchContext.setMatchCase(!highlightTextCaseInsensitive);, +++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +	protected boolean highlightTextCaseInsensitive = false;, +				searchContext.setMatchCase(!highlightTextCaseInsensitive);, +++ b/jadx-gui/src/main/java/jadx/gui/ui/SearchDialog.java, +	private JCheckBox caseChBox;, +		boolean caseInsensitive = caseChBox.isSelected();, +			resultsModel.addAll(index.searchClsName(text, caseInsensitive));, +			resultsModel.addAll(index.searchMthName(text, caseInsensitive));, +			resultsModel.addAll(index.searchFldName(text, caseInsensitive));, +			resultsModel.addAll(index.searchCode(text, caseInsensitive));, +		highlightTextCaseInsensitive = caseInsensitive;, +		caseChBox = new JCheckBox(NLS.str("search_dialog.ignorecase"));, +		caseChBox.addItemListener(new ItemListener() {, +			public void itemStateChanged(ItemEvent e) {, +				performSearch();, +			}, +		});, +, +		JPanel searchInPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));, +		searchInPanel.setBorder(BorderFactory.createTitledBorder(NLS.str("search_dialog.search_in")));, +		searchInPanel.add(clsChBox);, +		searchInPanel.add(mthChBox);, +		searchInPanel.add(fldChBox);, +		searchInPanel.add(codeChBox);, +, +		searchOptions.setBorder(BorderFactory.createTitledBorder(NLS.str("search_dialog.options")));, +		searchOptions.add(caseChBox);, +, +		Box box = Box.createHorizontalBox();, +		box.setAlignmentX(LEFT_ALIGNMENT);, +		box.add(searchInPanel);, +		box.add(searchOptions);, +		searchPane.add(box);, +++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +	protected boolean highlightTextCaseInsensitive = false;, +				searchContext.setMatchCase(!highlightTextCaseInsensitive);, +++ b/jadx-gui/src/main/java/jadx/gui/ui/SearchDialog.java, +	private JCheckBox caseChBox;, +		boolean caseInsensitive = caseChBox.isSelected();, +			resultsModel.addAll(index.searchClsName(text, caseInsensitive));, +			resultsModel.addAll(index.searchMthName(text, caseInsensitive));, +			resultsModel.addAll(index.searchFldName(text, caseInsensitive));, +			resultsModel.addAll(index.searchCode(text, caseInsensitive));, +		highlightTextCaseInsensitive = caseInsensitive;, +		caseChBox = new JCheckBox(NLS.str("search_dialog.ignorecase"));, +		caseChBox.addItemListener(new ItemListener() {, +			public void itemStateChanged(ItemEvent e) {, +				performSearch();, +			}, +		});, +, +		JPanel searchInPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));, +		searchInPanel.setBorder(BorderFactory.createTitledBorder(NLS.str("search_dialog.search_in")));, +		searchInPanel.add(clsChBox);, +		searchInPanel.add(mthChBox);, +		searchInPanel.add(fldChBox);, +		searchInPanel.add(codeChBox);, +, +		searchOptions.setBorder(BorderFactory.createTitledBorder(NLS.str("search_dialog.options")));, +		searchOptions.add(caseChBox);, +, +		Box box = Box.createHorizontalBox();, +		box.setAlignmentX(LEFT_ALIGNMENT);, +		box.add(searchInPanel);, +		box.add(searchOptions);, +		searchPane.add(box);, +++ b/jadx-gui/src/main/java/jadx/gui/utils/Utils.java, +, +	/**, +	 * Adapt character case for case insensitive searches, +	 */, +	public static char caseChar(char ch, boolean toLower) {, +		return toLower ? Character.toLowerCase(ch) : ch;, +	}, +++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +	protected boolean highlightTextCaseInsensitive = false;, +				searchContext.setMatchCase(!highlightTextCaseInsensitive);, +++ b/jadx-gui/src/main/java/jadx/gui/ui/SearchDialog.java, +	private JCheckBox caseChBox;, +		boolean caseInsensitive = caseChBox.isSelected();, +			resultsModel.addAll(index.searchClsName(text, caseInsensitive));, +			resultsModel.addAll(index.searchMthName(text, caseInsensitive));, +			resultsModel.addAll(index.searchFldName(text, caseInsensitive));, +			resultsModel.addAll(index.searchCode(text, caseInsensitive));, +		highlightTextCaseInsensitive = caseInsensitive;, +		caseChBox = new JCheckBox(NLS.str("search_dialog.ignorecase"));, +		caseChBox.addItemListener(new ItemListener() {, +			public void itemStateChanged(ItemEvent e) {, +				performSearch();, +			}, +		});, +, +		JPanel searchInPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));, +		searchInPanel.setBorder(BorderFactory.createTitledBorder(NLS.str("search_dialog.search_in")));, +		searchInPanel.add(clsChBox);, +		searchInPanel.add(mthChBox);, +		searchInPanel.add(fldChBox);]