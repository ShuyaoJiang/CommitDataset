[+++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			// don't add import if this class from same package, +			if(classInfo.getPackage().equals(cls.getPackage())), +				return shortName;, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			// don't add import if this class from same package, +			if(classInfo.getPackage().equals(cls.getPackage())), +				return shortName;, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			// don't add import if this class from same package, +			if(classInfo.getPackage().equals(cls.getPackage())), +				return shortName;, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import jadx.core.dex.instructions.ConstClassInsn;, +import jadx.core.dex.instructions.ConstStringInsn;, +			case CONST_STR:, +				String str = ((ConstStringInsn) insn).getString();, +				code.add(StringUtils.unescapeString(str));, +				break;, +, +			case CONST_CLASS:, +				ArgType clsType = ((ConstClassInsn) insn).getClsType();, +				code.add(useType(clsType)).add(".class");, +				break;, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			// don't add import if this class from same package, +			if(classInfo.getPackage().equals(cls.getPackage())), +				return shortName;, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import jadx.core.dex.instructions.ConstClassInsn;, +import jadx.core.dex.instructions.ConstStringInsn;, +			case CONST_STR:, +				String str = ((ConstStringInsn) insn).getString();, +				code.add(StringUtils.unescapeString(str));, +				break;, +, +			case CONST_CLASS:, +				ArgType clsType = ((ConstClassInsn) insn).getClsType();, +				code.add(useType(clsType)).add(".class");, +				break;, +, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/ConstClassInsn.java, +package jadx.core.dex.instructions;, +, +import jadx.core.dex.instructions.args.ArgType;, +import jadx.core.dex.nodes.InsnNode;, +, +public class ConstClassInsn extends InsnNode {, +, +	private final ArgType clsType;, +, +	public ConstClassInsn(ArgType clsType) {, +		super(InsnType.CONST_CLASS, 0);, +		this.clsType = clsType;, +	}, +, +	public ArgType getClsType() {, +		return clsType;, +	}, +, +	@Override, +	public String toString() {, +		return super.toString() + " " + clsType;, +	}, +}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			// don't add import if this class from same package, +			if(classInfo.getPackage().equals(cls.getPackage())), +				return shortName;, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import jadx.core.dex.instructions.ConstClassInsn;, +import jadx.core.dex.instructions.ConstStringInsn;, +			case CONST_STR:, +				String str = ((ConstStringInsn) insn).getString();, +				code.add(StringUtils.unescapeString(str));, +				break;, +, +			case CONST_CLASS:, +				ArgType clsType = ((ConstClassInsn) insn).getClsType();, +				code.add(useType(clsType)).add(".class");, +				break;, +, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/ConstClassInsn.java, +package jadx.core.dex.instructions;, +, +import jadx.core.dex.instructions.args.ArgType;, +import jadx.core.dex.nodes.InsnNode;, +, +public class ConstClassInsn extends InsnNode {, +]