[+++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +		addLineIndent();, +		addLineIndent();, +		addLineIndent();, +	private CodeWriter addLineIndent() {, +	public CodeWriter addIndent() {, +		add(INDENT);, +		return this;, +	}, +, +	public int getLine() {, +		return line;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +		addLineIndent();, +		addLineIndent();, +		addLineIndent();, +	private CodeWriter addLineIndent() {, +	public CodeWriter addIndent() {, +		add(INDENT);, +		return this;, +	}, +, +	public int getLine() {, +		return line;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		code.incIndent();, +		code.decIndent();, +		boolean addBreak = true;, +			if (!RegionUtils.hasExitEdge(c)) {, +				addBreak = false;, +		}, +		if (addBreak) {, +			code.startLine().addIndent().add("break;");, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +		addLineIndent();, +		addLineIndent();, +		addLineIndent();, +	private CodeWriter addLineIndent() {, +	public CodeWriter addIndent() {, +		add(INDENT);, +		return this;, +	}, +, +	public int getLine() {, +		return line;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		code.incIndent();, +		code.decIndent();, +		boolean addBreak = true;, +			if (!RegionUtils.hasExitEdge(c)) {, +				addBreak = false;, +		}, +		if (addBreak) {, +			code.startLine().addIndent().add("break;");, +++ b/jadx-core/src/test/java/jadx/api/InternalJadxTest.java, +public abstract class InternalJadxTest extends TestUtils {, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +		addLineIndent();, +		addLineIndent();, +		addLineIndent();, +	private CodeWriter addLineIndent() {, +	public CodeWriter addIndent() {, +		add(INDENT);, +		return this;, +	}, +, +	public int getLine() {, +		return line;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +		code.incIndent();, +		code.decIndent();, +		boolean addBreak = true;, +			if (!RegionUtils.hasExitEdge(c)) {, +				addBreak = false;, +		}, +		if (addBreak) {, +			code.startLine().addIndent().add("break;");, +++ b/jadx-core/src/test/java/jadx/api/InternalJadxTest.java, +public abstract class InternalJadxTest extends TestUtils {, +++ b/jadx-core/src/test/java/jadx/api/TestUtils.java, +package jadx.api;, +, +import jadx.core.codegen.CodeWriter;, +, +public class TestUtils {, +, +	public static String indent(int indent) {, +		StringBuilder sb = new StringBuilder(indent * CodeWriter.INDENT.length());, +		for (int i = 0; i < indent; i++) {, +			sb.append(CodeWriter.INDENT);, +		}, +		return sb.toString();]