[+++ b/jadx-core/src/main/java/jadx/core/utils/files/ZipSecurity.java, +import java.io.IOException;, +	private static boolean isInSubDirectoryInternal(File baseDir, File canonFile) {, +		if (canonFile == null) {, +		if (canonFile.equals(baseDir)) {, +		return isInSubDirectoryInternal(baseDir, canonFile.getParentFile());, +	}, +	, +	public static boolean isInSubDirectory(File baseDir, File file) {, +		try {, +			file = file.getCanonicalFile();, +		}, +		catch(IOException e) {, +			return false;, +		}, +		return isInSubDirectoryInternal(baseDir, file);, +			if (isInSubDirectoryInternal(currentPath, canonical)) {, +++ b/jadx-core/src/main/java/jadx/core/utils/files/ZipSecurity.java, +import java.io.IOException;, +	private static boolean isInSubDirectoryInternal(File baseDir, File canonFile) {, +		if (canonFile == null) {, +		if (canonFile.equals(baseDir)) {, +		return isInSubDirectoryInternal(baseDir, canonFile.getParentFile());, +	}, +	, +	public static boolean isInSubDirectory(File baseDir, File file) {, +		try {, +			file = file.getCanonicalFile();, +		}, +		catch(IOException e) {, +			return false;, +		}, +		return isInSubDirectoryInternal(baseDir, file);, +			if (isInSubDirectoryInternal(currentPath, canonical)) {, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResourcesSaver.java, +import jadx.core.utils.files.ZipSecurity;, +				, +				if(!ZipSecurity.isInSubDirectory(outDir, outFile)) {, +					LOG.error("Path traversal attack detected, invalid resource name: {}",, +							outFile.getPath());, +					return;, +				}, +				, +		, +		if(!ZipSecurity.isInSubDirectory(outDir, outFile)) {, +			LOG.error("Path traversal attack detected, invalid resource name: {}",, +					rc.getFileName());, +			return;, +		}]