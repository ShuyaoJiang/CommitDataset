[+++ b/build.gradle, +version = file('version').readLines().get(0), +manifest.mainAttributes("jadx-version" : version), +++ b/build.gradle, +version = file('version').readLines().get(0), +manifest.mainAttributes("jadx-version" : version), +++ b/src/main/java/jadx/Consts.java, +import jadx.utils.Utils;, +, +	public static final String JADX_VERSION = Utils.getJadxVersion();, +++ b/build.gradle, +version = file('version').readLines().get(0), +manifest.mainAttributes("jadx-version" : version), +++ b/src/main/java/jadx/Consts.java, +import jadx.utils.Utils;, +, +	public static final String JADX_VERSION = Utils.getJadxVersion();, +++ b/src/main/java/jadx/JadxArgs.java, +		out.println("jadx - dex to java decompiler, version: " + Consts.JADX_VERSION);, +++ b/build.gradle, +version = file('version').readLines().get(0), +manifest.mainAttributes("jadx-version" : version), +++ b/src/main/java/jadx/Consts.java, +import jadx.utils.Utils;, +, +	public static final String JADX_VERSION = Utils.getJadxVersion();, +++ b/src/main/java/jadx/JadxArgs.java, +		out.println("jadx - dex to java decompiler, version: " + Consts.JADX_VERSION);, +++ b/src/main/java/jadx/utils/Utils.java, +import java.io.IOException;, +import java.net.URL;, +import java.util.Enumeration;, +import java.util.jar.Manifest;, +, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +	private static final Logger LOG = LoggerFactory.getLogger(Utils.class);, +, +	public static String getJadxVersion() {, +		try {, +			Enumeration<URL> resources =, +					new Utils().getClass().getClassLoader().getResources("META-INF/MANIFEST.MF");, +			while (resources.hasMoreElements()) {, +				Manifest manifest = new Manifest(resources.nextElement().openStream());, +				String ver = manifest.getMainAttributes().getValue("jadx-version");, +				if (ver != null), +					return ver;, +			}, +		} catch (IOException e) {, +			LOG.error("Can't get manifest file", e);, +		}, +		return "dev";, +	}, +++ b/build.gradle, +version = file('version').readLines().get(0), +manifest.mainAttributes("jadx-version" : version), +++ b/src/main/java/jadx/Consts.java, +import jadx.utils.Utils;, +, +	public static final String JADX_VERSION = Utils.getJadxVersion();, +++ b/src/main/java/jadx/JadxArgs.java, +		out.println("jadx - dex to java decompiler, version: " + Consts.JADX_VERSION);, +++ b/src/main/java/jadx/utils/Utils.java, +import java.io.IOException;, +import java.net.URL;, +import java.util.Enumeration;, +import java.util.jar.Manifest;, +, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +	private static final Logger LOG = LoggerFactory.getLogger(Utils.class);, +, +	public static String getJadxVersion() {, +		try {, +			Enumeration<URL> resources =, +					new Utils().getClass().getClassLoader().getResources("META-INF/MANIFEST.MF");, +			while (resources.hasMoreElements()) {, +				Manifest manifest = new Manifest(resources.nextElement().openStream());, +				String ver = manifest.getMainAttributes().getValue("jadx-version");, +				if (ver != null), +					return ver;, +			}, +		} catch (IOException e) {, +			LOG.error("Can't get manifest file", e);, +		}, +		return "dev";, +	}, +++ b/version, +0.4]