[+++ b/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumMapAttr.java, +import java.util.HashMap;, +import java.util.Map;, +, +import org.jetbrains.annotations.Nullable;, +, +	@Nullable, +	private Map<FieldNode, KeyValueMap> fieldsMap;, +	@Nullable, +		if (fieldsMap == null) {, +			return null;, +		}, +			if (fieldsMap == null) {, +				fieldsMap = new HashMap<>();, +			}, +	public boolean isEmpty() {, +		return fieldsMap == null || fieldsMap.isEmpty();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumMapAttr.java, +import java.util.HashMap;, +import java.util.Map;, +, +import org.jetbrains.annotations.Nullable;, +, +	@Nullable, +	private Map<FieldNode, KeyValueMap> fieldsMap;, +	@Nullable, +		if (fieldsMap == null) {, +			return null;, +		}, +			if (fieldsMap == null) {, +				fieldsMap = new HashMap<>();, +			}, +	public boolean isEmpty() {, +		return fieldsMap == null || fieldsMap.isEmpty();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ReSugarCode.java, +import java.util.List;, +, +import org.jetbrains.annotations.Nullable;, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +, +import jadx.core.dex.nodes.DexNode;, +	public boolean visit(ClassNode cls) throws JadxException {, +		initClsEnumMap(cls);, +		return true;, +	}, +, +	@Override, +		EnumMapInfo enumMapInfo = checkEnumMapAccess(mth.dex(), wrapInsn);, +	private static void initClsEnumMap(ClassNode enumCls) {, +		MethodNode clsInitMth = enumCls.getClassInitMth();, +			return;, +		EnumMapAttr mapAttr = new EnumMapAttr();, +					addToEnumMap(enumCls.dex(), mapAttr, insn);, +		if (!mapAttr.isEmpty()) {, +			enumCls.addAttr(mapAttr);, +	@Nullable, +	private static EnumMapAttr.KeyValueMap getEnumMap(MethodNode mth, FieldNode field) {, +		ClassNode syntheticClass = field.getParentClass();, +		EnumMapAttr mapAttr = syntheticClass.get(AType.ENUM_MAP);, +		if (mapAttr == null) {, +			return null;, +		}, +		return mapAttr.getMap(field);, +	}, +, +	private static void addToEnumMap(DexNode dex, EnumMapAttr mapAttr, InsnNode aputInsn) {, +		EnumMapInfo mapInfo = checkEnumMapAccess(dex, aputInsn);, +		FieldNode fieldNode = dex.resolveField((FieldInfo) index);, +	public static EnumMapInfo checkEnumMapAccess(DexNode dex, InsnNode checkInsn) {, +		ClassNode enumCls = dex.resolveClass(inv.getCallMth().getDeclClass());, +		FieldNode enumMapField = dex.resolveField((FieldInfo) index);, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumMapAttr.java, +import java.util.HashMap;, +import java.util.Map;, +, +import org.jetbrains.annotations.Nullable;, +, +	@Nullable, +	private Map<FieldNode, KeyValueMap> fieldsMap;, +	@Nullable, +		if (fieldsMap == null) {, +			return null;, +		}, +			if (fieldsMap == null) {, +				fieldsMap = new HashMap<>();, +			}, +	public boolean isEmpty() {, +		return fieldsMap == null || fieldsMap.isEmpty();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ReSugarCode.java, +import java.util.List;, +, +import org.jetbrains.annotations.Nullable;, +import org.slf4j.Logger;]