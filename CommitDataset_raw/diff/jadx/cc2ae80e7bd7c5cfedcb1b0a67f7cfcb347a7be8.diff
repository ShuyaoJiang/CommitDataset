[+++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	@Parameter(names = {"-ds", "--output-dir-src"}, description = "output directory for sources"), +	protected String outDirNameSrc;, +, +	@Parameter(names = {"-dr", "--output-dir-res"}, description = "output directory for resources"), +	protected String outDirNameRes;, +, +	private File outputDirSrc;, +	private File outputDirRes;, +			if(outDirNameSrc != null) {, +				outputDirSrc = new File(outDirNameSrc);, +			}, +			if(outDirNameRes != null) {, +				outputDirRes = new File(outDirNameRes);, +			}, +				if(outputDirSrc == null) {, +					outputDirSrc = new File(outputDir, "source");, +				if(outputDirRes == null) {, +					outputDirRes = new File(outputDir, "res");, +				}, +			}, +			, +	@Override, +	public File getOutDirSrc() {, +		return outputDirSrc;, +	}, +, +	@Override, +	public File getOutDirRes() {, +		return outputDirRes;, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	@Parameter(names = {"-ds", "--output-dir-src"}, description = "output directory for sources"), +	protected String outDirNameSrc;, +, +	@Parameter(names = {"-dr", "--output-dir-res"}, description = "output directory for resources"), +	protected String outDirNameRes;, +, +	private File outputDirSrc;, +	private File outputDirRes;, +			if(outDirNameSrc != null) {, +				outputDirSrc = new File(outDirNameSrc);, +			}, +			if(outDirNameRes != null) {, +				outputDirRes = new File(outDirNameRes);, +			}, +				if(outputDirSrc == null) {, +					outputDirSrc = new File(outputDir, "source");, +				if(outputDirRes == null) {, +					outputDirRes = new File(outputDir, "res");, +				}, +			}, +			, +	@Override, +	public File getOutDirSrc() {, +		return outputDirSrc;, +	}, +, +	@Override, +	public File getOutDirRes() {, +		return outputDirRes;, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/IJadxArgs.java, +	, +	File getOutDirSrc();, +	, +	File getOutDirRes();, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	@Parameter(names = {"-ds", "--output-dir-src"}, description = "output directory for sources"), +	protected String outDirNameSrc;, +, +	@Parameter(names = {"-dr", "--output-dir-res"}, description = "output directory for resources"), +	protected String outDirNameRes;, +, +	private File outputDirSrc;, +	private File outputDirRes;, +			if(outDirNameSrc != null) {, +				outputDirSrc = new File(outDirNameSrc);, +			}, +			if(outDirNameRes != null) {, +				outputDirRes = new File(outDirNameRes);, +			}, +				if(outputDirSrc == null) {, +					outputDirSrc = new File(outputDir, "source");, +				if(outputDirRes == null) {, +					outputDirRes = new File(outputDir, "res");, +				}, +			}, +			, +	@Override, +	public File getOutDirSrc() {, +		return outputDirSrc;, +	}, +, +	@Override, +	public File getOutDirRes() {, +		return outputDirRes;, +	}]