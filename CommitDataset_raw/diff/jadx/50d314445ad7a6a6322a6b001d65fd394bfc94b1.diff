[+++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +		if (cls == null) {, +			LOG.debug("Missing class: {}", implClsName);, +			return null;, +		}, +			}, +		if (cls == null) {, +			LOG.debug("Missing class: {}", clsName);, +			return Collections.emptySet();, +		}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +		if (cls == null) {, +			LOG.debug("Missing class: {}", implClsName);, +			return null;, +		}, +			}, +		if (cls == null) {, +			LOG.debug("Missing class: {}", clsName);, +			return Collections.emptySet();, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +import jadx.core.dex.regions.IfCondition.Mode;, +		String mode = condition.getMode() == Mode.AND ? " && " : " || ";, +		return !condition.isCompare() && condition.getMode() != Mode.NOT;, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +		if (cls == null) {, +			LOG.debug("Missing class: {}", implClsName);, +			return null;, +		}, +			}, +		if (cls == null) {, +			LOG.debug("Missing class: {}", clsName);, +			return Collections.emptySet();, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +import jadx.core.dex.regions.IfCondition.Mode;, +		String mode = condition.getMode() == Mode.AND ? " && " : " || ";, +		return !condition.isCompare() && condition.getMode() != Mode.NOT;, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	private enum Flags {, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +		if (cls == null) {, +			LOG.debug("Missing class: {}", implClsName);, +			return null;, +		}, +			}, +		if (cls == null) {, +			LOG.debug("Missing class: {}", clsName);, +			return Collections.emptySet();, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +import jadx.core.dex.regions.IfCondition.Mode;, +		String mode = condition.getMode() == Mode.AND ? " && " : " || ";, +		return !condition.isCompare() && condition.getMode() != Mode.NOT;, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	private enum Flags {, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +		if (cls == null) {, +			LOG.debug("Missing class: {}", implClsName);, +			return null;, +		}, +			}, +		if (cls == null) {, +			LOG.debug("Missing class: {}", clsName);, +			return Collections.emptySet();, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +import jadx.core.dex.regions.IfCondition.Mode;, +		String mode = condition.getMode() == Mode.AND ? " && " : " || ";, +		return !condition.isCompare() && condition.getMode() != Mode.NOT;, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	private enum Flags {, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/TypeGen.java, +		PrimitiveType stype = type.getPrimitiveType();, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +		if (cls == null) {, +			LOG.debug("Missing class: {}", implClsName);, +			return null;, +		}, +			}, +		if (cls == null) {, +			LOG.debug("Missing class: {}", clsName);, +			return Collections.emptySet();, +		}, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +import jadx.core.dex.regions.IfCondition.Mode;, +		String mode = condition.getMode() == Mode.AND ? " && " : " || ";, +		return !condition.isCompare() && condition.getMode() != Mode.NOT;, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +	private enum Flags {, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/TypeGen.java, +		PrimitiveType stype = type.getPrimitiveType();, +++ b/jadx-core/src/main/java/jadx/core/dex/attributes/annotations/Annotation.java, +	public enum Visibility {, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +		if (cls == null) {, +			LOG.debug("Missing class: {}", implClsName);]