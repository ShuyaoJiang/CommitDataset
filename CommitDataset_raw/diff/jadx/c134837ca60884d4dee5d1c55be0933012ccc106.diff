[+++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +import java.util.*;, +	public static final int RESULTS_PER_PAGE = 100;, +	protected JLabel resultsInfoLabel;, +	protected synchronized void performSearch() {, +		resultsTable.updateTable();, +		updateProgressLabel();, +	}, +, +		resultsModel.addTableModelListener((e) -> updateProgressLabel());, +		resultsTable.setDefaultRenderer(Object.class, renderer);, +, +		JPanel paginationPanel = new JPanel();, +		paginationPanel.setAlignmentX( Component.LEFT_ALIGNMENT );, +		paginationPanel.setLayout(new BoxLayout(paginationPanel, BoxLayout.X_AXIS));, +		resultsInfoLabel = new JLabel("");, +, +		JButton nextPageButton = new JButton("->");, +		nextPageButton.setToolTipText(NLS.str("search_dialog.next_page"));, +		nextPageButton.addActionListener((e) -> {, +			resultsModel.nextPage();, +			resultsTable.updateTable();, +			resultsTable.scrollRectToVisible(new Rectangle(0,0,1,1));, +		});, +, +		JButton prevPageButton = new JButton("<-");, +		prevPageButton.setToolTipText(NLS.str("search_dialog.prev_page"));, +		prevPageButton.addActionListener((e) -> {, +			resultsModel.prevPage();, +			resultsTable.updateTable();, +			resultsTable.scrollRectToVisible(new Rectangle(0,0,1,1));, +		});, +, +		paginationPanel.add(prevPageButton);, +		paginationPanel.add(nextPageButton);, +		paginationPanel.add(resultsInfoLabel);, +, +		resultsPanel.add(paginationPanel);, +	protected void updateProgressLabel() {, +		String statusText = String.format(NLS.str("search_dialog.info_label"), resultsModel.getDisplayedResultsStart(),, +				resultsModel.getDisplayedResultsEnd(), resultsModel.getResultCount());, +		resultsInfoLabel.setText(statusText);, +	}, +, +		private final transient ArrayList<JNode> rows = new ArrayList<>();, +		private transient int start = 0;, +		protected void addAll(Collection<? extends JNode> nodes) {, +			rows.ensureCapacity(rows.size() + nodes.size());, +			start = 0;, +		public int getResultCount() {, +			return rows.size();, +		}, +, +		public int getDisplayedResultsStart() {, +			if (rows.size() == 0), +				return 0;, +			return start + 1;, +		}, +, +		public int getDisplayedResultsEnd() {, +			return Math.min(rows.size(), start + RESULTS_PER_PAGE);, +		}, +, +		public void nextPage() {, +			if (start + RESULTS_PER_PAGE < rows.size()) {, +				renderer.clear();, +				start += RESULTS_PER_PAGE;, +				fireTableStructureChanged();, +			}, +		}, +, +		public void prevPage() {, +			if (start - RESULTS_PER_PAGE >= 0) {, +				renderer.clear();, +				start -= RESULTS_PER_PAGE;, +				fireTableStructureChanged();, +			}, +		}, +, +			return rows.size() - start;, +			return rows.get(rowIndex + start);, +++ b/jadx-gui/src/main/java/jadx/gui/ui/CommonSearchDialog.java, +import java.util.*;, +	public static final int RESULTS_PER_PAGE = 100;, +	protected JLabel resultsInfoLabel;, +	protected synchronized void performSearch() {, +		resultsTable.updateTable();, +		updateProgressLabel();, +	}, +, +		resultsModel.addTableModelListener((e) -> updateProgressLabel());, +		resultsTable.setDefaultRenderer(Object.class, renderer);, +, +		JPanel paginationPanel = new JPanel();, +		paginationPanel.setAlignmentX( Component.LEFT_ALIGNMENT );, +		paginationPanel.setLayout(new BoxLayout(paginationPanel, BoxLayout.X_AXIS));, +		resultsInfoLabel = new JLabel("");, +, +		JButton nextPageButton = new JButton("->");, +		nextPageButton.setToolTipText(NLS.str("search_dialog.next_page"));]