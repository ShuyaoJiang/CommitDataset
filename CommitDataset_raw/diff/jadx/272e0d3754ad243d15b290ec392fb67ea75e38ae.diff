[+++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		} else if (field.getDeclClass().getFullName().startsWith(mth.getParentClass().getPackage() + ".R")) {, +			return  field.getDeclClass().getNameWithoutPackage() + '.' + field.getName();, +				assert isFallback();, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		} else if (field.getDeclClass().getFullName().startsWith(mth.getParentClass().getPackage() + ".R")) {, +			return  field.getDeclClass().getNameWithoutPackage() + '.' + field.getName();, +				assert isFallback();, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +						if (accFlags.isPublic()), +						else, +	public FieldNode getConstField(Object o) {, +            field = cn.constFields.get(o);, +		if (field == null), +			field = dex.getConstFields().get(o);, +		ArgType type = arg.getType();, +, +		if (type.equals(ArgType.DOUBLE)), +			return getConstField(Double.longBitsToDouble(literal));, +		else if (type.equals(ArgType.FLOAT)), +			return getConstField(Float.intBitsToFloat((int) literal));, +		else if (Math.abs(literal) > 0x1) {, +			if (type.equals(ArgType.INT)), +				return getConstField((int) literal);, +			else if (type.equals(ArgType.LONG)), +				return getConstField(literal);, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		} else if (field.getDeclClass().getFullName().startsWith(mth.getParentClass().getPackage() + ".R")) {, +			return  field.getDeclClass().getNameWithoutPackage() + '.' + field.getName();, +				assert isFallback();, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +						if (accFlags.isPublic()), +						else, +	public FieldNode getConstField(Object o) {, +            field = cn.constFields.get(o);, +		if (field == null), +			field = dex.getConstFields().get(o);, +		ArgType type = arg.getType();, +, +		if (type.equals(ArgType.DOUBLE)), +			return getConstField(Double.longBitsToDouble(literal));, +		else if (type.equals(ArgType.FLOAT)), +			return getConstField(Float.intBitsToFloat((int) literal));, +		else if (Math.abs(literal) > 0x1) {, +			if (type.equals(ArgType.INT)), +				return getConstField((int) literal);, +			else if (type.equals(ArgType.LONG)), +				return getConstField(literal);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockMakerVisitor.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		} else if (field.getDeclClass().getFullName().startsWith(mth.getParentClass().getPackage() + ".R")) {, +			return  field.getDeclClass().getNameWithoutPackage() + '.' + field.getName();, +				assert isFallback();, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +						if (accFlags.isPublic()), +						else, +	public FieldNode getConstField(Object o) {, +            field = cn.constFields.get(o);, +		if (field == null), +			field = dex.getConstFields().get(o);, +		ArgType type = arg.getType();, +, +		if (type.equals(ArgType.DOUBLE)), +			return getConstField(Double.longBitsToDouble(literal));, +		else if (type.equals(ArgType.FLOAT)), +			return getConstField(Float.intBitsToFloat((int) literal));, +		else if (Math.abs(literal) > 0x1) {, +			if (type.equals(ArgType.INT)), +				return getConstField((int) literal);, +			else if (type.equals(ArgType.LONG)), +				return getConstField(literal);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/BlockMakerVisitor.java, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java, +						} else {, +							if (inv.getArgsCount() > 0) {, +								for (int j = 0; j < inv.getArgsCount(); j++) {, +									InsnArg arg = inv.getArg(j);, +									if (arg.isLiteral()) {, +										f = parentClass.getConstFieldByLiteralArg((LiteralArg) arg);, +										if (f != null) {, +											arg.wrapInstruction(new IndexInsnNode(InsnType.SGET, f.getFieldInfo(), 0));, +										}, +									}, +								}, +							}, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +		} else if (field.getDeclClass().getFullName().startsWith(mth.getParentClass().getPackage() + ".R")) {, +			return  field.getDeclClass().getNameWithoutPackage() + '.' + field.getName();, +				assert isFallback();, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +						if (accFlags.isPublic()), +						else, +	public FieldNode getConstField(Object o) {, +            field = cn.constFields.get(o);, +		if (field == null), +			field = dex.getConstFields().get(o);, +		ArgType type = arg.getType();, +, +		if (type.equals(ArgType.DOUBLE)), +			return getConstField(Double.longBitsToDouble(literal));]