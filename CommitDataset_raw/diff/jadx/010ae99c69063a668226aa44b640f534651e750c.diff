[+++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +import jadx.core.dex.regions.loops.ForLoop;, +			if (type instanceof ForLoop) {, +				ForLoop forLoop = (ForLoop) type;, +				makeInsn(forLoop.getInitInsn(), code, Flags.INLINE);, +				makeInsn(forLoop.getIncrInsn(), code, Flags.INLINE);, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +import jadx.core.dex.regions.loops.ForLoop;, +			if (type instanceof ForLoop) {, +				ForLoop forLoop = (ForLoop) type;, +				makeInsn(forLoop.getInitInsn(), code, Flags.INLINE);, +				makeInsn(forLoop.getIncrInsn(), code, Flags.INLINE);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java, +	public static boolean isInstanceOf(ArgType type, ArgType of) {, +		if (type.equals(of)) {, +			return true;, +		}, +		if (!type.isObject() || !of.isObject()) {, +			return false;, +		}, +		return clsp.isImplements(type.getObject(), of.getObject());, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +import jadx.core.dex.regions.loops.ForLoop;, +			if (type instanceof ForLoop) {, +				ForLoop forLoop = (ForLoop) type;, +				makeInsn(forLoop.getInitInsn(), code, Flags.INLINE);, +				makeInsn(forLoop.getIncrInsn(), code, Flags.INLINE);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java, +	public static boolean isInstanceOf(ArgType type, ArgType of) {, +		if (type.equals(of)) {, +			return true;, +		}, +		if (!type.isObject() || !of.isObject()) {, +			return false;, +		}, +		return clsp.isImplements(type.getObject(), of.getObject());, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/mods/TernaryInsn.java, +import java.util.List;, +, +public final class TernaryInsn extends InsnNode {, +	public void getRegisterArgs(List<RegisterArg> list) {, +		super.getRegisterArgs(list);, +		list.addAll(condition.getRegisterArgs());, +	}, +, +	@Override, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +import jadx.core.dex.regions.loops.ForLoop;, +			if (type instanceof ForLoop) {, +				ForLoop forLoop = (ForLoop) type;, +				makeInsn(forLoop.getInitInsn(), code, Flags.INLINE);, +				makeInsn(forLoop.getIncrInsn(), code, Flags.INLINE);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java, +	public static boolean isInstanceOf(ArgType type, ArgType of) {, +		if (type.equals(of)) {, +			return true;, +		}, +		if (!type.isObject() || !of.isObject()) {, +			return false;, +		}, +		return clsp.isImplements(type.getObject(), of.getObject());, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/mods/TernaryInsn.java, +import java.util.List;, +, +public final class TernaryInsn extends InsnNode {, +	public void getRegisterArgs(List<RegisterArg> list) {, +		super.getRegisterArgs(list);, +		list.addAll(condition.getRegisterArgs());, +	}, +, +	@Override, +++ b/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfCondition.java, +			compare.getInsn().getRegisterArgs(list);, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +import jadx.core.dex.regions.loops.ForLoop;, +			if (type instanceof ForLoop) {, +				ForLoop forLoop = (ForLoop) type;, +				makeInsn(forLoop.getInitInsn(), code, Flags.INLINE);, +				makeInsn(forLoop.getIncrInsn(), code, Flags.INLINE);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java, +	public static boolean isInstanceOf(ArgType type, ArgType of) {, +		if (type.equals(of)) {, +			return true;, +		}, +		if (!type.isObject() || !of.isObject()) {, +			return false;, +		}, +		return clsp.isImplements(type.getObject(), of.getObject());, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/mods/TernaryInsn.java, +import java.util.List;, +, +public final class TernaryInsn extends InsnNode {]