[+++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java, +				LOG.error("Failed to decode 9-patch png image, path: {}", name, e);, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java, +				LOG.error("Failed to decode 9-patch png image, path: {}", name, e);, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JClass.java, +public class JClass extends JLoadableNode {, +	@Override, +	public void loadNode() {, +		getRootClass().load();, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java, +				LOG.error("Failed to decode 9-patch png image, path: {}", name, e);, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JClass.java, +public class JClass extends JLoadableNode {, +	@Override, +	public void loadNode() {, +		getRootClass().load();, +	}, +, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JLoadableNode.java, +package jadx.gui.treemodel;, +, +public abstract class JLoadableNode extends JNode {, +	public abstract void loadNode();, +}, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java, +				LOG.error("Failed to decode 9-patch png image, path: {}", name, e);, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JClass.java, +public class JClass extends JLoadableNode {, +	@Override, +	public void loadNode() {, +		getRootClass().load();, +	}, +, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JLoadableNode.java, +package jadx.gui.treemodel;, +, +public abstract class JLoadableNode extends JNode {, +	public abstract void loadNode();, +}, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JResource.java, +import org.jetbrains.annotations.NotNull;, +import jadx.gui.utils.NLS;, +import static jadx.api.ResourceFileContent.createResourceFileContentInstance;, +, +public class JResource extends JLoadableNode implements Comparable<JResource> {, +		this.loaded = false;, +		if (!loaded) {, +			if (type == JResType.DIR, +					|| type == JResType.ROOT, +					|| resFile.getType() == ResourceType.ARSC) {, +				add(new TextNode(NLS.str("tree.loading")));, +			}, +		} else {, +			loadContent();, +	}, +, +	@Override, +	public void loadNode() {, +		loadContent();, +		loaded = true;, +		update();, +	}, +				ResourceFileContent fileContent = createResourceFileContentInstance(resShortName, ResourceType.XML, cw);, +	public int compareTo(@NotNull JResource o) {, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java, +				LOG.error("Failed to decode 9-patch png image, path: {}", name, e);, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JClass.java, +public class JClass extends JLoadableNode {, +	@Override, +	public void loadNode() {, +		getRootClass().load();, +	}, +, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JLoadableNode.java, +package jadx.gui.treemodel;, +, +public abstract class JLoadableNode extends JNode {, +	public abstract void loadNode();, +}, +++ b/jadx-gui/src/main/java/jadx/gui/treemodel/JResource.java, +import org.jetbrains.annotations.NotNull;, +import jadx.gui.utils.NLS;, +import static jadx.api.ResourceFileContent.createResourceFileContentInstance;, +, +public class JResource extends JLoadableNode implements Comparable<JResource> {, +		this.loaded = false;, +		if (!loaded) {, +			if (type == JResType.DIR, +					|| type == JResType.ROOT, +					|| resFile.getType() == ResourceType.ARSC) {, +				add(new TextNode(NLS.str("tree.loading")));, +			}, +		} else {, +			loadContent();, +	}, +, +	@Override, +	public void loadNode() {]