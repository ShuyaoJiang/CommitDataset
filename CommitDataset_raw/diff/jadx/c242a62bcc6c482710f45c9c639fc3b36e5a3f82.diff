[+++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +		BinaryXMLParser bxp = new BinaryXMLParser(args[0],args[1]);, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +		BinaryXMLParser bxp = new BinaryXMLParser(args[0],args[1]);, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java, +import java.io.PrintWriter;, +	PrintWriter writer;, +	public BinaryXMLParser(String xmlfilepath, String xmloutfilepath) {, +		//System.out.println(xmlfilepath);, +		try {, +			writer = new PrintWriter(xmloutfilepath,"UTF-8");, +		} catch(FileNotFoundException fnfe) { die("FNFE"); }, +		catch(UnsupportedEncodingException uee) { die("UEE"); }, +		if(null==writer) die("null==writer");, +		writer.close();, +			//System.out.println("index i["+i+"] string: " + strings[i]);, +		//System.out.println("RHeader Size: " + rhsize);, +			//System.out.println("i["+i+"] ID: "+ids[i]);, +			//System.out.println("Hex: 0x0" + Integer.toHexString(ids[i]) + " should be: " + strings[i]);, +		//System.out.println("Prefix: " + strings[beginPrefix]);, +		//System.out.println("URI: " + strings[beginURI]);, +		//System.out.println("Prefix: " + strings[endPrefix]);, +		//System.out.println("URI: " + strings[endURI]);, +		for(int i=0; i<numtabs; i++) writer.print("\t");, +		writer.print("<" + strings[startNSName]);, +		if(attributeCount>0) writer.print(" ");, +			if(attributeNS != -1) writer.print(nsPrefix+":");, +			if(attrValDataType==0x3) writer.print(strings[attributeName] + "=\"" + strings[attrValData]+"\"");, +			else if(attrValDataType==0x10) writer.print(strings[attributeName] + "=\"" + attrValData+"\"");, +				if(attrValData==0) writer.print(strings[attributeName] + "=\"false\"");, +				else if(attrValData==1 || attrValData==-1) writer.print(strings[attributeName] + "=\"true\"");, +				else writer.print(strings[attributeName] + "=\"UNKNOWN\"");, +			else writer.print(strings[attributeName] + " = UNKNOWN DATA TYPE: " + attrValDataType);, +			writer.print(" ");, +		writer.println(">");, +		for(int i=0; i<numtabs; i++) writer.print("\t");, +		writer.print("</");, +		if(elementNS != -1) writer.print(strings[elementNS]+":");, +		writer.println(strings[elementName]+">");]