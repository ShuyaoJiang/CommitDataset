[+++ b/.travis.yml, +      if: branch = master AND env(BINTRAY_KEY) IS present, +++ b/.travis.yml, +      if: branch = master AND env(BINTRAY_KEY) IS present, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +, +	public boolean canThrowException() {, +		switch (getType()) {, +			case RETURN:, +			case IF:, +			case GOTO:, +			case MOVE:, +			case MOVE_EXCEPTION:, +			case NEG:, +			case CONST:, +			case CONST_STR:, +			case CONST_CLASS:, +			case CMP_L:, +			case CMP_G:, +				return false;, +, +			default:, +				return true;, +		}, +	}, +++ b/.travis.yml, +      if: branch = master AND env(BINTRAY_KEY) IS present, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +, +	public boolean canThrowException() {, +		switch (getType()) {, +			case RETURN:, +			case IF:, +			case GOTO:, +			case MOVE:, +			case MOVE_EXCEPTION:, +			case NEG:, +			case CONST:, +			case CONST_STR:, +			case CONST_CLASS:, +			case CMP_L:, +			case CMP_G:, +				return false;, +, +			default:, +				return true;, +		}, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +			boolean tryBlockStarted = false;, +			InsnNode insn = null;, +				if (insn != null) {, +					if (tryBlockStarted) {, +					} else if (insn.canThrowException()) {, +						insn.add(AFlag.TRY_ENTER);, +						catchBlock.addInsn(insn);, +						tryBlockStarted = true;, +					}, +				}, +			} else if (insn != null) {, +++ b/.travis.yml, +      if: branch = master AND env(BINTRAY_KEY) IS present, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java, +, +	public boolean canThrowException() {, +		switch (getType()) {, +			case RETURN:, +			case IF:, +			case GOTO:, +			case MOVE:, +			case MOVE_EXCEPTION:, +			case NEG:, +			case CONST:, +			case CONST_STR:, +			case CONST_CLASS:, +			case CMP_L:, +			case CMP_G:, +				return false;, +, +			default:, +				return true;, +		}, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +			boolean tryBlockStarted = false;, +			InsnNode insn = null;, +				if (insn != null) {, +					if (tryBlockStarted) {, +					} else if (insn.canThrowException()) {, +						insn.add(AFlag.TRY_ENTER);, +						catchBlock.addInsn(insn);, +						tryBlockStarted = true;, +					}, +				}, +			} else if (insn != null) {, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/DependencyCollector.java, +import jadx.core.dex.nodes.parser.FieldInitAttr;, +, +			// process instructions from field init, +			FieldInitAttr fieldInitAttr = fieldNode.get(AType.FIELD_INIT);]