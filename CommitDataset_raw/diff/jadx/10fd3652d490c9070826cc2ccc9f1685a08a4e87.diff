[+++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				try {, +				} catch (Exception e) {, +					LOG.error("Error saving class: {}", cls.getFullName(), e);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				try {, +				} catch (Exception e) {, +					LOG.error("Error saving class: {}", cls.getFullName(), e);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +	public synchronized void unload() {, +		cls.unload();, +	}, +, +			mths.sort(Comparator.comparing(JavaMethod::getName));, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				try {, +				} catch (Exception e) {, +					LOG.error("Error saving class: {}", cls.getFullName(), e);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +	public synchronized void unload() {, +		cls.unload();, +	}, +, +			mths.sort(Comparator.comparing(JavaMethod::getName));, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				try {, +				} catch (Exception e) {, +					LOG.error("Error saving class: {}", cls.getFullName(), e);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +	public synchronized void unload() {, +		cls.unload();, +	}, +, +			mths.sort(Comparator.comparing(JavaMethod::getName));, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +public class CodeGen {, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				try {, +				} catch (Exception e) {, +					LOG.error("Error saving class: {}", cls.getFullName(), e);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +	public synchronized void unload() {, +		cls.unload();, +	}, +, +			mths.sort(Comparator.comparing(JavaMethod::getName));, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +public class CodeGen {, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +import static jadx.core.dex.nodes.ProcessState.UNLOADED;, +, +		setState(UNLOADED);, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				try {, +				} catch (Exception e) {, +					LOG.error("Error saving class: {}", cls.getFullName(), e);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +	public synchronized void unload() {, +		cls.unload();, +	}, +, +			mths.sort(Comparator.comparing(JavaMethod::getName));, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java, +public class CodeGen {, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +import static jadx.core.dex.nodes.ProcessState.UNLOADED;, +, +		setState(UNLOADED);, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java, +		trimList(blocks);, +		trimList(exitBlocks);, +	private void trimList(List<BlockNode> blocks) {, +		if (blocks instanceof ArrayList) {, +			((ArrayList<BlockNode>)blocks).trimToSize();, +		}, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +				try {, +				} catch (Exception e) {, +					LOG.error("Error saving class: {}", cls.getFullName(), e);, +				}, +++ b/jadx-core/src/main/java/jadx/api/JavaClass.java, +	public synchronized void unload() {, +		cls.unload();, +	}, +, +			mths.sort(Comparator.comparing(JavaMethod::getName));, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeGen.java]