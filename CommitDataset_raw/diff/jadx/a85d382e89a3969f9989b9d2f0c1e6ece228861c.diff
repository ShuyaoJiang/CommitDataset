[+++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnContainer.java, +	public InsnContainer(List<InsnNode> insns) {, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnContainer.java, +	public InsnContainer(List<InsnNode> insns) {, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import java.util.Iterator;, +import java.util.LinkedList;, +		handlers = new LinkedList<ExceptionHandler>();, +		for (Iterator<ExceptionHandler> it = handlers.iterator(); it.hasNext(); ) {, +			ExceptionHandler h = it.next();, +			if (h == handler) {, +				it.remove();, +		} else {, +			for (InsnNode insn : insns) {, +			}, +			for (BlockNode block : mth.getBasicBlocks()) {, +		}, +	}, +		setFinalBlock(new InsnContainer(finalBlockInsns));, +			for (BlockNode ehb : h.getBlocks()) {, +		}, +			if (attr == ca) {, +	}, +		for (InsnNode insn : tryBlock.getInsns()) {, +		}, +		for (ExceptionHandler eh : handlers) {, +		}, +		return handlers.hashCode();, +		if (this == obj) {, +		if (obj == null || getClass() != obj.getClass()) {, +			return false;, +		}, +		TryCatchBlock other = (TryCatchBlock) obj;, +		return handlers.equals(other.handlers);, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/InsnContainer.java, +	public InsnContainer(List<InsnNode> insns) {, +++ b/jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java, +import java.util.Iterator;, +import java.util.LinkedList;, +		handlers = new LinkedList<ExceptionHandler>();, +		for (Iterator<ExceptionHandler> it = handlers.iterator(); it.hasNext(); ) {, +			ExceptionHandler h = it.next();, +			if (h == handler) {, +				it.remove();, +		} else {, +			for (InsnNode insn : insns) {, +			}, +			for (BlockNode block : mth.getBasicBlocks()) {, +		}, +	}, +		setFinalBlock(new InsnContainer(finalBlockInsns));, +			for (BlockNode ehb : h.getBlocks()) {, +		}, +			if (attr == ca) {, +	}, +		for (InsnNode insn : tryBlock.getInsns()) {, +		}, +		for (ExceptionHandler eh : handlers) {, +		}, +		return handlers.hashCode();, +		if (this == obj) {, +		if (obj == null || getClass() != obj.getClass()) {, +			return false;, +		}, +		TryCatchBlock other = (TryCatchBlock) obj;, +		return handlers.equals(other.handlers);, +	}, +++ b/jadx-core/src/test/java/jadx/tests/internal/TestTryCatch.java, +package jadx.tests.internal;, +, +import jadx.api.InternalJadxTest;, +import jadx.core.dex.nodes.ClassNode;, +, +import org.junit.Test;, +, +import static org.hamcrest.CoreMatchers.containsString;, +import static org.junit.Assert.assertThat;, +, +public class TestTryCatch extends InternalJadxTest {, +, +	public static class TestCls {, +		private void f() {, +			try {, +				Thread.sleep(50);, +			} catch (InterruptedException e) {, +				// ignore, +			}, +		}, +	}, +, +	@Test, +	public void test() {, +		ClassNode cls = getClassNode(TestCls.class);, +		String code = cls.getCode().toString();, +, +		assertThat(code, containsString("try {"));, +		assertThat(code, containsString("Thread.sleep(50);"));, +		assertThat(code, containsString("} catch (InterruptedException e) {"));, +	}]