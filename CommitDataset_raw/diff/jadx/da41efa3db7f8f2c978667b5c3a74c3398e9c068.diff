[+++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +	public void forceRenameField(FieldNode field) {, +		field.getFieldInfo().setAlias(makeFieldAlias(field));, +	}, +, +	public void forceRenameMethod(MethodNode mth) {, +		mth.getMethodInfo().setAlias(makeMethodAlias(mth));, +		if (mth.isVirtual()) {, +			resolveOverriding(mth);, +		}, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +	public void forceRenameField(FieldNode field) {, +		field.getFieldInfo().setAlias(makeFieldAlias(field));, +	}, +, +	public void forceRenameMethod(MethodNode mth) {, +		mth.getMethodInfo().setAlias(makeMethodAlias(mth));, +		if (mth.isVirtual()) {, +			resolveOverriding(mth);, +		}, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +	public boolean equalsNameAndType(FieldInfo other) {, +		return name.equals(other.name) && type.equals(other.type);, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +	public void forceRenameField(FieldNode field) {, +		field.getFieldInfo().setAlias(makeFieldAlias(field));, +	}, +, +	public void forceRenameMethod(MethodNode mth) {, +		mth.getMethodInfo().setAlias(makeMethodAlias(mth));, +		if (mth.isVirtual()) {, +			resolveOverriding(mth);, +		}, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +	public boolean equalsNameAndType(FieldInfo other) {, +		return name.equals(other.name) && type.equals(other.type);, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +	public FieldNode searchFieldByNameAndType(FieldInfo field) {, +		for (FieldNode f : fields) {, +			if (f.getFieldInfo().equalsNameAndType(field)) {, +				return f;, +			}, +		}, +		return null;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +	public void forceRenameField(FieldNode field) {, +		field.getFieldInfo().setAlias(makeFieldAlias(field));, +	}, +, +	public void forceRenameMethod(MethodNode mth) {, +		mth.getMethodInfo().setAlias(makeMethodAlias(mth));, +		if (mth.isVirtual()) {, +			resolveOverriding(mth);, +		}, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java, +	public boolean equalsNameAndType(FieldInfo other) {, +		return name.equals(other.name) && type.equals(other.type);, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +	public FieldNode searchFieldByNameAndType(FieldInfo field) {, +		for (FieldNode f : fields) {, +			if (f.getFieldInfo().equalsNameAndType(field)) {, +				return f;, +			}, +		}, +		return null;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/DexNode.java, +		FieldNode field = cls.searchFieldByNameAndType(fieldInfo);, +				FieldNode found = deepResolveField(superNode, fieldInfo);, +				FieldNode found = deepResolveField(iFaceNode, fieldInfo);, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +	public void forceRenameField(FieldNode field) {, +		field.getFieldInfo().setAlias(makeFieldAlias(field));, +	}, +, +	public void forceRenameMethod(MethodNode mth) {, +		mth.getMethodInfo().setAlias(makeMethodAlias(mth));, +		if (mth.isVirtual()) {, +			resolveOverriding(mth);, +		}, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/dex/info/FieldInfo.java]