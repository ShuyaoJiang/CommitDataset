[+++ b/.gitignore, +*.orig, +++ b/.gitignore, +*.orig, +++ b/jadx-core/src/main/java/jadx/api/JadxArgs.java, +++ b/.gitignore, +*.orig, +++ b/jadx-core/src/main/java/jadx/api/JadxArgs.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	List<IDexTreeVisitor> getPasses() {, +		return passes;, +	}, +, +++ b/.gitignore, +*.orig, +++ b/jadx-core/src/main/java/jadx/api/JadxArgs.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	List<IDexTreeVisitor> getPasses() {, +		return passes;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.ConstructorVisitor;, +import jadx.core.dex.visitors.InitCodeVariables;, +import jadx.core.dex.visitors.MarkFinallyVisitor;, +import jadx.core.dex.visitors.debuginfo.DebugInfoApplyVisitor;, +import jadx.core.dex.visitors.debuginfo.DebugInfoParseVisitor;, +import jadx.core.dex.visitors.regions.CleanRegions;, +import jadx.core.dex.visitors.regions.variables.ProcessVariables;, +import jadx.core.dex.visitors.typeinference.TypeInferenceVisitor;, +			passes.add(new DebugInfoParseVisitor());, +			passes.add(new BlockProcessor());, +			passes.add(new BlockExceptionHandler());, +			passes.add(new BlockFinish());, +, +			passes.add(new SSATransform());, +			passes.add(new ConstructorVisitor());, +			passes.add(new InitCodeVariables());, +			passes.add(new MarkFinallyVisitor());, +			passes.add(new TypeInferenceVisitor());, +			passes.add(new DebugInfoApplyVisitor());, +			passes.add(new CleanRegions());, +			passes.add(new ProcessVariables());, +			passes.add(new PrepareForCodeGen());, +++ b/.gitignore, +*.orig, +++ b/jadx-core/src/main/java/jadx/api/JadxArgs.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	List<IDexTreeVisitor> getPasses() {, +		return passes;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.ConstructorVisitor;, +import jadx.core.dex.visitors.InitCodeVariables;, +import jadx.core.dex.visitors.MarkFinallyVisitor;, +import jadx.core.dex.visitors.debuginfo.DebugInfoApplyVisitor;, +import jadx.core.dex.visitors.debuginfo.DebugInfoParseVisitor;, +import jadx.core.dex.visitors.regions.CleanRegions;, +import jadx.core.dex.visitors.regions.variables.ProcessVariables;, +import jadx.core.dex.visitors.typeinference.TypeInferenceVisitor;, +			passes.add(new DebugInfoParseVisitor());, +			passes.add(new BlockProcessor());, +			passes.add(new BlockExceptionHandler());, +			passes.add(new BlockFinish());, +, +			passes.add(new SSATransform());, +			passes.add(new ConstructorVisitor());, +			passes.add(new InitCodeVariables());, +			passes.add(new MarkFinallyVisitor());, +			passes.add(new TypeInferenceVisitor());, +			passes.add(new DebugInfoApplyVisitor());, +			passes.add(new CleanRegions());, +			passes.add(new ProcessVariables());, +			passes.add(new PrepareForCodeGen());, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +	private static final NClass[] EMPTY_NCLASS_ARRAY = new NClass[0];, +, +		int size = parents.size();, +		if (size == 0) {, +			return EMPTY_NCLASS_ARRAY;, +		}, +		return parents.toArray(new NClass[size]);, +++ b/.gitignore, +*.orig, +++ b/jadx-core/src/main/java/jadx/api/JadxArgs.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +	List<IDexTreeVisitor> getPasses() {, +		return passes;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/Jadx.java, +import jadx.core.dex.visitors.ConstructorVisitor;, +import jadx.core.dex.visitors.InitCodeVariables;, +import jadx.core.dex.visitors.MarkFinallyVisitor;, +import jadx.core.dex.visitors.debuginfo.DebugInfoApplyVisitor;, +import jadx.core.dex.visitors.debuginfo.DebugInfoParseVisitor;, +import jadx.core.dex.visitors.regions.CleanRegions;, +import jadx.core.dex.visitors.regions.variables.ProcessVariables;, +import jadx.core.dex.visitors.typeinference.TypeInferenceVisitor;]