[+++ b/README.md, +     --deobf-use-sourcename - use source file name as class name alias, +     --escape-unicode       - escape non latin characters in strings (with \u), +++ b/README.md, +     --deobf-use-sourcename - use source file name as class name alias, +     --escape-unicode       - escape non latin characters in strings (with \u), +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +import ch.qos.logback.classic.spi.ILoggingEvent;, +import ch.qos.logback.core.Appender;, +	@Parameter(names = {"--escape-unicode"}, description = "escape non latin characters in strings (with \\u)"), +	protected boolean escapeUnicode = false;, +, +				Appender<ILoggingEvent> appender = rootLogger.getAppender("STDOUT");, +				if (appender != null) {, +					appender.clearAllFilters();, +				}, +, +	@Override, +	public boolean escapeUnicode() {, +		return escapeUnicode;, +	}, +++ b/README.md, +     --deobf-use-sourcename - use source file name as class name alias, +     --escape-unicode       - escape non latin characters in strings (with \u), +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +import ch.qos.logback.classic.spi.ILoggingEvent;, +import ch.qos.logback.core.Appender;, +	@Parameter(names = {"--escape-unicode"}, description = "escape non latin characters in strings (with \\u)"), +	protected boolean escapeUnicode = false;, +, +				Appender<ILoggingEvent> appender = rootLogger.getAppender("STDOUT");, +				if (appender != null) {, +					appender.clearAllFilters();, +				}, +, +	@Override, +	public boolean escapeUnicode() {, +		return escapeUnicode;, +	}, +++ b/jadx-core/src/main/java/jadx/api/IJadxArgs.java, +, +	boolean escapeUnicode();, +++ b/README.md, +     --deobf-use-sourcename - use source file name as class name alias, +     --escape-unicode       - escape non latin characters in strings (with \u), +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +import ch.qos.logback.classic.spi.ILoggingEvent;, +import ch.qos.logback.core.Appender;, +	@Parameter(names = {"--escape-unicode"}, description = "escape non latin characters in strings (with \\u)"), +	protected boolean escapeUnicode = false;, +, +				Appender<ILoggingEvent> appender = rootLogger.getAppender("STDOUT");, +				if (appender != null) {, +					appender.clearAllFilters();, +				}, +, +	@Override, +	public boolean escapeUnicode() {, +		return escapeUnicode;, +	}, +++ b/jadx-core/src/main/java/jadx/api/IJadxArgs.java, +, +	boolean escapeUnicode();, +++ b/jadx-core/src/main/java/jadx/api/JadxArgs.java, +	private boolean escapeUnicode = false;, +, +, +	@Override, +	public boolean escapeUnicode() {, +		return escapeUnicode;, +	}, +, +	public void setEscapeUnicode(boolean escapeUnicode) {, +		this.escapeUnicode = escapeUnicode;, +	}, +++ b/README.md, +     --deobf-use-sourcename - use source file name as class name alias, +     --escape-unicode       - escape non latin characters in strings (with \u), +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +import ch.qos.logback.classic.spi.ILoggingEvent;, +import ch.qos.logback.core.Appender;, +	@Parameter(names = {"--escape-unicode"}, description = "escape non latin characters in strings (with \\u)"), +	protected boolean escapeUnicode = false;, +, +				Appender<ILoggingEvent> appender = rootLogger.getAppender("STDOUT");, +				if (appender != null) {, +					appender.clearAllFilters();, +				}, +, +	@Override, +	public boolean escapeUnicode() {, +		return escapeUnicode;, +	}, +++ b/jadx-core/src/main/java/jadx/api/IJadxArgs.java, +, +	boolean escapeUnicode();, +++ b/jadx-core/src/main/java/jadx/api/JadxArgs.java, +	private boolean escapeUnicode = false;, +, +]