[+++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			af = af.remove(AccessFlags.ACC_ABSTRACT), +					.remove(AccessFlags.ACC_STATIC);, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			af = af.remove(AccessFlags.ACC_ABSTRACT), +					.remove(AccessFlags.ACC_STATIC);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/AccessInfo.java, +			return new AccessInfo(accFlags & ~flag, type);, +		return this;, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			af = af.remove(AccessFlags.ACC_ABSTRACT), +					.remove(AccessFlags.ACC_STATIC);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/AccessInfo.java, +			return new AccessInfo(accFlags & ~flag, type);, +		return this;, +++ b/jadx-core/src/test/java/jadx/tests/integration/TestClassGen.java, +		public interface I {, +		assertThat(code, containsString("public interface I {"));, +++ b/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java, +			af = af.remove(AccessFlags.ACC_ABSTRACT), +					.remove(AccessFlags.ACC_STATIC);, +++ b/jadx-core/src/main/java/jadx/core/dex/info/AccessInfo.java, +			return new AccessInfo(accFlags & ~flag, type);, +		return this;, +++ b/jadx-core/src/test/java/jadx/tests/integration/TestClassGen.java, +		public interface I {, +		assertThat(code, containsString("public interface I {"));, +++ b/jadx-core/src/test/java/jadx/tests/integration/annotations/TestAnnotations2.java, +		public @interface A {, +		assertThat(code, containsString("public @interface A {"));]