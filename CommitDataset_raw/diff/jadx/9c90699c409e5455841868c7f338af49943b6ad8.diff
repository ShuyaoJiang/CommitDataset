[+++ b/jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java, +			String obj;, +			if (incompleteType) {, +				obj = slice().replace('/', '.');, +			} else {, +				obj = inclusiveSlice();, +			}, +			return ArgType.object(obj);, +		List<ArgType> list = new LinkedList<ArgType>();, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java, +			String obj;, +			if (incompleteType) {, +				obj = slice().replace('/', '.');, +			} else {, +				obj = inclusiveSlice();, +			}, +			return ArgType.object(obj);, +		List<ArgType> list = new LinkedList<ArgType>();, +++ b/jadx-core/src/main/java/jadx/core/utils/Utils.java, +		return obj;, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java, +			String obj;, +			if (incompleteType) {, +				obj = slice().replace('/', '.');, +			} else {, +				obj = inclusiveSlice();, +			}, +			return ArgType.object(obj);, +		List<ArgType> list = new LinkedList<ArgType>();, +++ b/jadx-core/src/main/java/jadx/core/utils/Utils.java, +		return obj;, +++ b/jadx-core/src/test/groovy/jadx/tests/TestSignatureParser.groovy, +        "La/b/C<Ld/E<Lf/G;>;>;" | generic("La/b/C;", generic("Ld/E;", object("Lf/G;"))), +        "La<TD;>.c/d;"          | genericInner(generic("La;", genericType("D")), "c.d", null), +    def "method args 2"() {, +        when:, +        def argTypes = new SignatureParser("(La/b/C<TT;>.d/E;)V").consumeMethodArgs(), +        then:, +        argTypes.size() == 1, +        def argType = argTypes.get(0), +        argType.getObject().indexOf('/') == -1, +        argTypes.get(0) == genericInner(generic("La/b/C;", genericType("T")), "d.E", null), +    }, +]