[+++ b/src/main/java/jadx/codegen/RegionGen.java, +			if (RegionUtils.hasExitEdge(c)) {, +			code.startLine('}');, +++ b/src/main/java/jadx/codegen/RegionGen.java, +			if (RegionUtils.hasExitEdge(c)) {, +			code.startLine('}');, +++ b/src/main/java/jadx/dex/instructions/mods/ConstructorInsn.java, +	private CallType callType;, +					// self constructor, +				} else if (mth.getMethodInfo().isConstructor()) {, +		}, +		if (callType == null) {, +++ b/src/main/java/jadx/codegen/RegionGen.java, +			if (RegionUtils.hasExitEdge(c)) {, +			code.startLine('}');, +++ b/src/main/java/jadx/dex/instructions/mods/ConstructorInsn.java, +	private CallType callType;, +					// self constructor, +				} else if (mth.getMethodInfo().isConstructor()) {, +		}, +		if (callType == null) {, +++ b/src/main/java/jadx/dex/visitors/regions/RegionMaker.java, +							if (r != null, +									&& r.getAttributes().contains(AttributeFlag.RETURN), +									&& r.getInstructions().size() > 0, +									&& r.getInstructions().get(0).getType() == InsnType.RETURN) {, +++ b/src/main/java/jadx/codegen/RegionGen.java, +			if (RegionUtils.hasExitEdge(c)) {, +			code.startLine('}');, +++ b/src/main/java/jadx/dex/instructions/mods/ConstructorInsn.java, +	private CallType callType;, +					// self constructor, +				} else if (mth.getMethodInfo().isConstructor()) {, +		}, +		if (callType == null) {, +++ b/src/main/java/jadx/dex/visitors/regions/RegionMaker.java, +							if (r != null, +									&& r.getAttributes().contains(AttributeFlag.RETURN), +									&& r.getInstructions().size() > 0, +									&& r.getInstructions().get(0).getType() == InsnType.RETURN) {, +++ b/src/samples/java/jadx/samples/TestInvoke.java, +	public TestInvoke() {, +		this(-1);, +	}, +, +	public TestInvoke(int f) {, +		this.f = f;, +	}, +, +	public TestInvoke testConstructor(int flag) {, +		if (getF() == flag), +			return new TestInvoke(flag);, +		else, +			return this;, +	}, +, +, +		assertTrue(testConstructor(f) != this);]