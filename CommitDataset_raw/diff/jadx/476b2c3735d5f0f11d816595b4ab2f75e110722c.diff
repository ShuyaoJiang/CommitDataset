[+++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +import java.util.Collections;, +		for (ClassNode cls : classes) {, +			size += cls.getInnerClasses().size();, +		}, +		int k = 0;, +		for (ClassNode cls : classes) {, +			nClasses[k++] = addClass(cls);, +			for (ClassNode inner : cls.getInnerClasses()) {, +				nClasses[k++] = addClass(inner);, +			}, +	private NClass addClass(ClassNode cls) {, +		NClass nClass = new NClass(cls.getRawName(), -1);, +		nameMap.put(cls.getRawName(), nClass);, +		return nClass;, +	}, +, +		if (clsName.equals(implClsName)) {, +			return clsName;, +		}, +		NClass cls = nameMap.get(implClsName);, +		if (cls != null) {, +		}, +		if (result != null) {, +			return result;, +		}, +			result = new HashSet<String>();, +			if (result.isEmpty()) {, +				result = Collections.emptySet();, +			ancestorCache.put(clsName, result);, +		LOG.debug("Missing class: {}", clsName);, +		return Collections.emptySet();, +	}, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +import java.util.Collections;, +		for (ClassNode cls : classes) {, +			size += cls.getInnerClasses().size();, +		}, +		int k = 0;, +		for (ClassNode cls : classes) {, +			nClasses[k++] = addClass(cls);, +			for (ClassNode inner : cls.getInnerClasses()) {, +				nClasses[k++] = addClass(inner);, +			}, +	private NClass addClass(ClassNode cls) {, +		NClass nClass = new NClass(cls.getRawName(), -1);, +		nameMap.put(cls.getRawName(), nClass);, +		return nClass;, +	}, +, +		if (clsName.equals(implClsName)) {, +			return clsName;, +		}, +		NClass cls = nameMap.get(implClsName);, +		if (cls != null) {, +		}, +		if (result != null) {, +			return result;, +		}, +			result = new HashSet<String>();, +			if (result.isEmpty()) {, +				result = Collections.emptySet();, +			ancestorCache.put(clsName, result);, +		LOG.debug("Missing class: {}", clsName);, +		return Collections.emptySet();, +	}, +++ b/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java, +			String parClsName = pkg + "." + clsName.substring(0, sep);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java, +import java.util.Collections;, +		for (ClassNode cls : classes) {, +			size += cls.getInnerClasses().size();, +		}, +		int k = 0;, +		for (ClassNode cls : classes) {, +			nClasses[k++] = addClass(cls);, +			for (ClassNode inner : cls.getInnerClasses()) {, +				nClasses[k++] = addClass(inner);, +			}, +	private NClass addClass(ClassNode cls) {, +		NClass nClass = new NClass(cls.getRawName(), -1);, +		nameMap.put(cls.getRawName(), nClass);, +		return nClass;, +	}, +, +		if (clsName.equals(implClsName)) {, +			return clsName;, +		}, +		NClass cls = nameMap.get(implClsName);, +		if (cls != null) {, +		}, +		if (result != null) {, +			return result;, +		}, +			result = new HashSet<String>();, +			if (result.isEmpty()) {, +				result = Collections.emptySet();, +			ancestorCache.put(clsName, result);, +		LOG.debug("Missing class: {}", clsName);, +		return Collections.emptySet();]