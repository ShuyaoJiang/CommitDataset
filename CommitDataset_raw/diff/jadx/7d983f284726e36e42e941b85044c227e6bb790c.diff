[+++ b/jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockExceptionHandler.java, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +, +import jadx.core.dex.instructions.args.NamedArg;, +	private static final Logger LOG = LoggerFactory.getLogger(BlockExceptionHandler.class);, +, +		if (handlerAttr == null) {, +		ArgType argType = excHandler.isCatchAll() ? ArgType.THROWABLE : excHandler.getCatchType().getType();, +		if (me.getType() == InsnType.MOVE_EXCEPTION) {, +			RegisterArg resArg = InsnArg.reg(me.getResult().getRegNum(), argType);, +		} else {, +			// handler arguments not used, +			excHandler.setArg(new NamedArg("unused", argType));, +		}, +		if (handler.getHandlerBlock() == null) {, +			LOG.warn("Exception handler block not set for {}, mth: {}", handler, mth);, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockExceptionHandler.java, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +, +import jadx.core.dex.instructions.args.NamedArg;, +	private static final Logger LOG = LoggerFactory.getLogger(BlockExceptionHandler.class);, +, +		if (handlerAttr == null) {, +		ArgType argType = excHandler.isCatchAll() ? ArgType.THROWABLE : excHandler.getCatchType().getType();, +		if (me.getType() == InsnType.MOVE_EXCEPTION) {, +			RegisterArg resArg = InsnArg.reg(me.getResult().getRegNum(), argType);, +		} else {, +			// handler arguments not used, +			excHandler.setArg(new NamedArg("unused", argType));, +		}, +		if (handler.getHandlerBlock() == null) {, +			LOG.warn("Exception handler block not set for {}, mth: {}", handler, mth);, +		}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessTryCatchRegions.java, +					throw new JadxRuntimeException("Exception block dominator not found, method:" + mth + ", dom blocks: " + domBlocks);]