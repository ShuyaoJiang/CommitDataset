[+++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +	private static final String[] INDENT_CACHE = {, +			"",, +			INDENT,, +			INDENT + INDENT,, +			INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT + INDENT,, +	};, +, +	public CodeWriter add(Object obj) {, +		buf.append(obj);, +		return this;, +	}, +, +		if (curIndent < INDENT_CACHE.length) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +	private static final String[] INDENT_CACHE = {, +			"",, +			INDENT,, +			INDENT + INDENT,, +			INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT + INDENT,, +	};, +, +	public CodeWriter add(Object obj) {, +		buf.append(obj);, +		return this;, +	}, +, +		if (curIndent < INDENT_CACHE.length) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +			switch (((ArithNode) insn).getOp()) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +	private static final String[] INDENT_CACHE = {, +			"",, +			INDENT,, +			INDENT + INDENT,, +			INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT + INDENT,, +	};, +, +	public CodeWriter add(Object obj) {, +		buf.append(obj);, +		return this;, +	}, +, +		if (curIndent < INDENT_CACHE.length) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +			switch (((ArithNode) insn).getOp()) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +					code.add('(');, +				code.add('(');, +				code.add(useType((ArgType) ((IndexInsnNode) insn).getIndex()));, +					code.add(')');, +					code.startLine("case ").add(sw.getKeys()[i]).add(": goto ");, +					code.add(MethodGen.getLabelName(sw.getTargets()[i])).add(';');, +				code.startLine("default: goto ");, +				code.add(MethodGen.getLabelName(sw.getDefaultCaseOffset())).add(';');, +				code.add("((").add(cond).add(')').add(" ? ").add(th).add(" : ").add(els).add(')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +	private static final String[] INDENT_CACHE = {, +			"",, +			INDENT,, +			INDENT + INDENT,, +			INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT,, +			INDENT + INDENT + INDENT + INDENT + INDENT,, +	};, +, +	public CodeWriter add(Object obj) {, +		buf.append(obj);, +		return this;, +	}, +, +		if (curIndent < INDENT_CACHE.length) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java, +			switch (((ArithNode) insn).getOp()) {, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +					code.add('(');, +				code.add('(');, +				code.add(useType((ArgType) ((IndexInsnNode) insn).getIndex()));, +					code.add(')');, +					code.startLine("case ").add(sw.getKeys()[i]).add(": goto ");, +					code.add(MethodGen.getLabelName(sw.getTargets()[i])).add(';');, +				code.startLine("default: goto ");, +				code.add(MethodGen.getLabelName(sw.getDefaultCaseOffset())).add(';');, +				code.add("((").add(cond).add(')').add(" ? ").add(th).add(" : ").add(els).add(')');, +++ b/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java, +			return base;, +				if (Consts.DEBUG) {, +					return base + "_" + name;, +				return name;, +			// load original instructions, +++ b/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java, +	private static final String[] INDENT_CACHE = {, +			"",, +			INDENT,]