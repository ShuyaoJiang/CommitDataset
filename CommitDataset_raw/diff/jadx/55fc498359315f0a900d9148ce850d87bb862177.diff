[+++ b/jadx-core/src/main/java/jadx/core/deobf/DeobfPresets.java, +import static java.nio.charset.StandardCharsets.UTF_8;, +, +import java.nio.charset.Charset;, +import java.nio.file.Files;, +import java.nio.file.Path;, +	private static final Charset MAP_FILE_CHARSET = UTF_8;, +	private final Path deobfMapFile;, +	public DeobfPresets(Deobfuscator deobfuscator, Path deobfMapFile) {, +		if (!Files.exists(deobfMapFile)) {, +		LOG.info("Loading obfuscation map from: {}", deobfMapFile.toAbsolutePath());, +			List<String> lines = Files.readAllLines(deobfMapFile, MAP_FILE_CHARSET);, +			LOG.error("Failed to load deobfuscation map file '{}'", deobfMapFile.toAbsolutePath(), e);, +			if (Files.exists(deobfMapFile)) {, +							deobfMapFile.toAbsolutePath());, +			LOG.error("Failed to load deobfuscation map file '{}'", deobfMapFile.toAbsolutePath(), e);, +		Files.write(deobfMapFile, list, MAP_FILE_CHARSET);, +++ b/jadx-core/src/main/java/jadx/core/deobf/DeobfPresets.java, +import static java.nio.charset.StandardCharsets.UTF_8;, +, +import java.nio.charset.Charset;, +import java.nio.file.Files;, +import java.nio.file.Path;, +	private static final Charset MAP_FILE_CHARSET = UTF_8;, +	private final Path deobfMapFile;, +	public DeobfPresets(Deobfuscator deobfuscator, Path deobfMapFile) {, +		if (!Files.exists(deobfMapFile)) {, +		LOG.info("Loading obfuscation map from: {}", deobfMapFile.toAbsolutePath());, +			List<String> lines = Files.readAllLines(deobfMapFile, MAP_FILE_CHARSET);, +			LOG.error("Failed to load deobfuscation map file '{}'", deobfMapFile.toAbsolutePath(), e);, +			if (Files.exists(deobfMapFile)) {, +							deobfMapFile.toAbsolutePath());, +			LOG.error("Failed to load deobfuscation map file '{}'", deobfMapFile.toAbsolutePath(), e);, +		Files.write(deobfMapFile, list, MAP_FILE_CHARSET);, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +import java.nio.file.Path;, +	@Deprecated, +		this(args, dexNodes, deobfMapFile.toPath());, +	}, +, +	public Deobfuscator(JadxArgs args, @NotNull List<DexNode> dexNodes, Path deobfMapFile) {, +++ b/jadx-core/src/main/java/jadx/core/deobf/DeobfPresets.java, +import static java.nio.charset.StandardCharsets.UTF_8;, +, +import java.nio.charset.Charset;, +import java.nio.file.Files;, +import java.nio.file.Path;, +	private static final Charset MAP_FILE_CHARSET = UTF_8;, +	private final Path deobfMapFile;, +	public DeobfPresets(Deobfuscator deobfuscator, Path deobfMapFile) {, +		if (!Files.exists(deobfMapFile)) {, +		LOG.info("Loading obfuscation map from: {}", deobfMapFile.toAbsolutePath());, +			List<String> lines = Files.readAllLines(deobfMapFile, MAP_FILE_CHARSET);, +			LOG.error("Failed to load deobfuscation map file '{}'", deobfMapFile.toAbsolutePath(), e);, +			if (Files.exists(deobfMapFile)) {, +							deobfMapFile.toAbsolutePath());, +			LOG.error("Failed to load deobfuscation map file '{}'", deobfMapFile.toAbsolutePath(), e);, +		Files.write(deobfMapFile, list, MAP_FILE_CHARSET);, +++ b/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java, +import java.nio.file.Path;, +	@Deprecated, +		this(args, dexNodes, deobfMapFile.toPath());, +	}, +, +	public Deobfuscator(JadxArgs args, @NotNull List<DexNode> dexNodes, Path deobfMapFile) {, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/RenameVisitor.java, +import java.nio.file.Path;, +		Path inputFilePath = firstInputFile.getFile().toPath();, +		String inputName = inputFilePath.getFileName().toString();, +		inputName = inputName.substring(0, inputName.lastIndexOf('.'));, +, +		Path deobfMapPath = inputFilePath.getParent().resolve(inputName + ".jobf");, +		deobfuscator = new Deobfuscator(args, dexNodes, deobfMapPath);]