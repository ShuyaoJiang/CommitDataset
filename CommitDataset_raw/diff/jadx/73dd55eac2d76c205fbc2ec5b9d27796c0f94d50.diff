[+++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);, +			LOG.info("Classes count: {}", classes.length);, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);, +			LOG.info("Classes count: {}", classes.length);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +			LOG.info("Loaded: {}", inputFile.getFile());, +		LOG.info("Output: {}", output);, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);, +			LOG.info("Classes count: {}", classes.length);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +			LOG.info("Loaded: {}", inputFile.getFile());, +		LOG.info("Output: {}", output);, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +		} else if (val instanceof Iterable) {, +			Iterator<?> it = ((Iterable) val).iterator();, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);, +			LOG.info("Classes count: {}", classes.length);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +			LOG.info("Loaded: {}", inputFile.getFile());, +		LOG.info("Output: {}", output);, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +		} else if (val instanceof Iterable) {, +			Iterator<?> it = ((Iterable) val).iterator();, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import jadx.core.dex.instructions.args.Named;, +			code.add(((Named) arg).getName());, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);, +			LOG.info("Classes count: {}", classes.length);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +			LOG.info("Loaded: {}", inputFile.getFile());, +		LOG.info("Output: {}", output);, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +		} else if (val instanceof Iterable) {, +			Iterator<?> it = ((Iterable) val).iterator();, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import jadx.core.dex.instructions.args.Named;, +			code.add(((Named) arg).getName());, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +					LOG.warn("Several 'all' handlers in try/catch block in {}", mth);, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);, +			LOG.info("Classes count: {}", classes.length);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +			LOG.info("Loaded: {}", inputFile.getFile());, +		LOG.info("Output: {}", output);, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +		} else if (val instanceof Iterable) {, +			Iterator<?> it = ((Iterable) val).iterator();, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import jadx.core.dex.instructions.args.Named;, +			code.add(((Named) arg).getName());, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +					LOG.warn("Several 'all' handlers in try/catch block in {}", mth);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +		// not allowed, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);, +			LOG.info("Classes count: {}", classes.length);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java, +			LOG.info("Loaded: {}", inputFile.getFile());, +		LOG.info("Output: {}", output);, +++ b/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java, +		} else if (val instanceof Iterable) {, +			Iterator<?> it = ((Iterable) val).iterator();, +++ b/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java, +import jadx.core.dex.instructions.args.Named;, +			code.add(((Named) arg).getName());, +++ b/jadx-core/src/main/java/jadx/core/codegen/RegionGen.java, +					LOG.warn("Several 'all' handlers in try/catch block in {}", mth);, +++ b/jadx-core/src/main/java/jadx/core/dex/instructions/args/TypeImmutableArg.java, +		// not allowed, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +				LOG.error("Error parsing annotations in {}", this, e);, +			LOG.error("Class signature parse error: {}", this, e);, +					LOG.error("Field signature parse error: {}", field, e);, +++ b/jadx-core/src/main/java/jadx/core/ProcessClass.java, +			LOG.error("Class process exception: {}", cls, e);, +++ b/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java, +			LOG.warn("Class not found: {}", fullName);]