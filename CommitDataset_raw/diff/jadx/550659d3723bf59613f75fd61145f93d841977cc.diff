[+++ b/src/main/java/jadx/dex/nodes/MethodNode.java, +		this.noCode = (methodData.getCodeOffset() == 0);, +			if (noCode) {, +				regsCount = 0;, +				initMethodTypes();, +				return;, +			}, +, +			initMethodTypes();, +	private void initMethodTypes() {, +		if (!parseSignature()) {, +			retType = mthInfo.getReturnType();, +			initArguments(mthInfo.getArgumentsTypes());, +		}, +	}, +, +		if (noCode) {, +			pos = 1;, +		} else {, +++ b/src/main/java/jadx/dex/nodes/MethodNode.java, +		this.noCode = (methodData.getCodeOffset() == 0);, +			if (noCode) {, +				regsCount = 0;, +				initMethodTypes();, +				return;, +			}, +, +			initMethodTypes();, +	private void initMethodTypes() {, +		if (!parseSignature()) {, +			retType = mthInfo.getReturnType();, +			initArguments(mthInfo.getArgumentsTypes());, +		}, +	}, +, +		if (noCode) {, +			pos = 1;, +		} else {, +++ b/src/samples/java/jadx/samples/TestGenerics.java, +	public interface MyComparable<T> {, +		public int compareTo(T o);, +	}, +, +	public static class GenericClass implements MyComparable<String> {]