[+++ b/jadx-core/src/main/java/jadx/api/ResourceType.java, +++ b/jadx-core/src/main/java/jadx/api/ResourceType.java, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +			case CODE:, +			case LIB:, +			case FONT:, +			case UNKNOWN:, +				return ResContainer.singleBinaryFile(rf.getName(), inputStream);, +, +++ b/jadx-core/src/main/java/jadx/api/ResourceType.java, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +			case CODE:, +			case LIB:, +			case FONT:, +			case UNKNOWN:, +				return ResContainer.singleBinaryFile(rf.getName(), inputStream);, +, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java, +import java.io.IOException;, +import org.apache.commons.io.IOUtils;, +	@Nullable, +	private InputStream binary;, +	public static ResContainer singleBinaryFile(String name, InputStream content) {, +		ResContainer resContainer = new ResContainer(name, Collections.emptyList());, +		try {, +			resContainer.binary = new ByteArrayInputStream(IOUtils.toByteArray(content));, +		}, +		catch(IOException e) {, +			LOG.warn("Contents of the binary resource '{}' not saved, got exception {}", name, e);, +		}, +		return resContainer;, +	}, +, +	@Nullable, +	public InputStream getBinary() {, +		return binary;, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/ResourceType.java, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +			case CODE:, +			case LIB:, +			case FONT:, +			case UNKNOWN:, +				return ResContainer.singleBinaryFile(rf.getName(), inputStream);, +, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java, +import java.io.IOException;, +import org.apache.commons.io.IOUtils;, +	@Nullable, +	private InputStream binary;, +	public static ResContainer singleBinaryFile(String name, InputStream content) {, +		ResContainer resContainer = new ResContainer(name, Collections.emptyList());, +		try {, +			resContainer.binary = new ByteArrayInputStream(IOUtils.toByteArray(content));, +		}, +		catch(IOException e) {, +			LOG.warn("Contents of the binary resource '{}' not saved, got exception {}", name, e);, +		}, +		return resContainer;, +	}, +, +	@Nullable, +	public InputStream getBinary() {, +		return binary;, +	}, +, +++ b/jadx-core/src/main/java/jadx/core/xmlgen/ResourcesSaver.java, +import java.io.FileOutputStream;, +import java.io.InputStream;, +import org.apache.commons.io.IOUtils;, +import org.mockito.internal.util.io.IOUtil;, +		InputStream binary = rc.getBinary();, +		if(binary != null) {, +			try {, +				outFile.getParentFile().mkdirs();, +				FileOutputStream binaryFileStream = new FileOutputStream(outFile);, +				IOUtils.copy(binary, binaryFileStream);, +				binaryFileStream.close();, +				binary.close();, +			}, +			catch(IOException e) {, +				LOG.warn("Resource '{}' not saved, got exception {}", rc.getName(), e);, +			}, +			return;, +		}]