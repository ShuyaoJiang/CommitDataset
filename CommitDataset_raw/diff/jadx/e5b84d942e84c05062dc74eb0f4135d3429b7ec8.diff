[+++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +		if (obj instanceof Integer) {, +				ResRefField resField = new ResRefField(dex, str.replace('/', '.'));, +				if (field == null) {, +					return resField;, +				}, +				if (!field.getName().equals(resField.getName())) {, +					field = resField;, +				}, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java, +		if (obj instanceof Integer) {, +				ResRefField resField = new ResRefField(dex, str.replace('/', '.'));, +				if (field == null) {, +					return resField;, +				}, +				if (!field.getName().equals(resField.getName())) {, +					field = resField;, +				}, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlinerVisitor.java, +import jadx.core.dex.instructions.args.PrimitiveType;, +import jadx.core.dex.visitors.typeinference.PostTypeInference;, +				FieldNode f = null;, +				ArgType litArgType = litArg.getType();, +				if (litArgType.isTypeKnown()) {, +					f = mth.getParentClass().getConstFieldByLiteralArg(litArg);, +				} else if (litArgType.contains(PrimitiveType.INT)) {, +					f = mth.getParentClass().getConstField((int) literal, false);, +				}, +		PostTypeInference.process(mth, insn);]