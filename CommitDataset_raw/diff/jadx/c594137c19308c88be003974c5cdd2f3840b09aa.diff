[+++ b/build.gradle, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +import java.io.File;, +, +	ZipRef getZipRef() {, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +import java.io.File;, +, +	ZipRef getZipRef() {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.api.ResourceFile.ZipRef;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.JadxException;, +import jadx.core.utils.files.InputFile;, +import jadx.core.xmlgen.ResContainer;, +import jadx.core.xmlgen.ResTableParser;, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +		ZipRef zipRef = rf.getZipRef();, +		if (zipRef == null) {, +			return null;, +		}, +			result = decoder.decode(entry.getSize(), inputStream);, +			throw new JadxException("Error decode: " + zipRef.getEntryName(), e);, +				LOG.error("Error close zip file: {}", zipRef, e);, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +import java.io.File;, +, +	ZipRef getZipRef() {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.api.ResourceFile.ZipRef;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.JadxException;, +import jadx.core.utils.files.InputFile;, +import jadx.core.xmlgen.ResContainer;, +import jadx.core.xmlgen.ResTableParser;, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +		ZipRef zipRef = rf.getZipRef();, +		if (zipRef == null) {, +			return null;, +		}, +			result = decoder.decode(entry.getSize(), inputStream);, +			throw new JadxException("Error decode: " + zipRef.getEntryName(), e);, +				LOG.error("Error close zip file: {}", zipRef, e);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/RenameVisitor.java, +		InputFile firstInputFile = root.getDexNodes().get(0).getDexFile().getInputFile();, +		deobfuscator = new Deobfuscator(args, root.getDexNodes(), deobfMapFile);, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +import java.io.File;, +, +	ZipRef getZipRef() {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.api.ResourceFile.ZipRef;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.JadxException;, +import jadx.core.utils.files.InputFile;, +import jadx.core.xmlgen.ResContainer;, +import jadx.core.xmlgen.ResTableParser;, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +		ZipRef zipRef = rf.getZipRef();, +		if (zipRef == null) {, +			return null;, +		}, +			result = decoder.decode(entry.getSize(), inputStream);, +			throw new JadxException("Error decode: " + zipRef.getEntryName(), e);, +				LOG.error("Error close zip file: {}", zipRef, e);, +++ b/jadx-core/src/main/java/jadx/core/dex/visitors/RenameVisitor.java, +		InputFile firstInputFile = root.getDexNodes().get(0).getDexFile().getInputFile();, +		deobfuscator = new Deobfuscator(args, root.getDexNodes(), deobfMapFile);, +++ b/jadx-core/src/main/java/jadx/core/utils/android/AndroidResourcesUtils.java, +		DexNode firstDex = root.getDexNodes().get(0);, +++ b/build.gradle, +++ b/jadx-core/src/main/java/jadx/api/ResourceFile.java, +import java.io.File;, +, +	ZipRef getZipRef() {, +++ b/jadx-core/src/main/java/jadx/api/ResourcesLoader.java, +import jadx.api.ResourceFile.ZipRef;, +import jadx.core.codegen.CodeWriter;, +import jadx.core.utils.Utils;, +import jadx.core.utils.exceptions.JadxException;, +import jadx.core.utils.files.InputFile;, +import jadx.core.xmlgen.ResContainer;, +import jadx.core.xmlgen.ResTableParser;, +import org.slf4j.Logger;, +import org.slf4j.LoggerFactory;, +		ZipRef zipRef = rf.getZipRef();, +		if (zipRef == null) {, +			return null;, +		}, +			result = decoder.decode(entry.getSize(), inputStream);]