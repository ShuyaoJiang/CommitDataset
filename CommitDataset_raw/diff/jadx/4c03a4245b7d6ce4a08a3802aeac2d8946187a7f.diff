[+++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +import jadx.core.utils.ErrorsCounter;, +			processAndSave(jadxArgs);, +		} catch (JadxException e) {, +	private static void processAndSave(JadxCLIArgs jadxArgs) {, +		try {, +			Decompiler jadx = new Decompiler(jadxArgs);, +			jadx.loadFiles(jadxArgs.getInput());, +			jadx.setOutputDir(jadxArgs.getOutDir());, +			jadx.save();, +			LOG.info("done");, +		} catch (Throwable e) {, +			LOG.error("jadx error:", e);, +		}, +		int errorsCount = ErrorsCounter.getErrorCount();, +		if (errorsCount != 0) {, +			ErrorsCounter.printReport();, +		}, +		System.exit(errorsCount);, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +import jadx.core.utils.ErrorsCounter;, +			processAndSave(jadxArgs);, +		} catch (JadxException e) {, +	private static void processAndSave(JadxCLIArgs jadxArgs) {, +		try {, +			Decompiler jadx = new Decompiler(jadxArgs);, +			jadx.loadFiles(jadxArgs.getInput());, +			jadx.setOutputDir(jadxArgs.getOutDir());, +			jadx.save();, +			LOG.info("done");, +		} catch (Throwable e) {, +			LOG.error("jadx error:", e);, +		}, +		int errorsCount = ErrorsCounter.getErrorCount();, +		if (errorsCount != 0) {, +			ErrorsCounter.printReport();, +		}, +		System.exit(errorsCount);, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	public List<File> getInput() {, +		return input;, +	}, +, +	public boolean isPrintHelp() {, +		return printHelp;, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLI.java, +import jadx.core.utils.ErrorsCounter;, +			processAndSave(jadxArgs);, +		} catch (JadxException e) {, +	private static void processAndSave(JadxCLIArgs jadxArgs) {, +		try {, +			Decompiler jadx = new Decompiler(jadxArgs);, +			jadx.loadFiles(jadxArgs.getInput());, +			jadx.setOutputDir(jadxArgs.getOutDir());, +			jadx.save();, +			LOG.info("done");, +		} catch (Throwable e) {, +			LOG.error("jadx error:", e);, +		}, +		int errorsCount = ErrorsCounter.getErrorCount();, +		if (errorsCount != 0) {, +			ErrorsCounter.printReport();, +		}, +		System.exit(errorsCount);, +	}, +, +++ b/jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java, +	public List<File> getInput() {, +		return input;, +	}, +, +	public boolean isPrintHelp() {, +		return printHelp;, +	}, +, +++ b/jadx-core/src/main/java/jadx/api/Decompiler.java, +import jadx.core.utils.exceptions.JadxRuntimeException;, +import java.util.Arrays;, +/**, + * Jadx API usage example:, + * <pre><code>, + *  Decompiler jadx = new Decompiler();, + *  jadx.loadFile(new File("classes.dex"));, + *  jadx.setOutputDir(new File("out"));, + *  jadx.save();, + * </code></pre>, + * <p/>, + * Instead of 'save()' you can get list of decompiled classes:, + * <pre><code>, + *  for(JavaClass cls : jadx.getClasses()) {, + *      System.out.println(cls.getCode());, + *  }, + * </code></pre>, + */]