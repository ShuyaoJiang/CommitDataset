[+++ b/src/main/java/jadx/IJadxArgs.java, +package jadx;, +, +import jadx.utils.files.InputFile;, +, +import java.io.File;, +import java.util.List;, +, +public interface IJadxArgs {, +    File getOutDir();, +, +    int getThreadsCount();, +, +    boolean isCFGOutput();, +, +    boolean isRawCFGOutput();, +, +    List<InputFile> getInput();, +, +    boolean isFallbackMode();, +, +    boolean isNotObfuscated();, +, +    boolean isVerbose();, +, +    boolean isPrintHelp();, +}, +++ b/src/main/java/jadx/IJadxArgs.java, +package jadx;, +, +import jadx.utils.files.InputFile;, +, +import java.io.File;, +import java.util.List;, +, +public interface IJadxArgs {, +    File getOutDir();, +, +    int getThreadsCount();, +, +    boolean isCFGOutput();, +, +    boolean isRawCFGOutput();, +, +    List<InputFile> getInput();, +, +    boolean isFallbackMode();, +, +    boolean isNotObfuscated();, +, +    boolean isVerbose();, +, +    boolean isPrintHelp();, +}, +++ b/src/main/java/jadx/Jadx.java, +public class Jadx implements Runnable {, +	private final IJadxArgs args;, +	private int errorsCount;, +, +	public Jadx(IJadxArgs args) {, +		this.args = args;, +	}, +, +	public void run() {, +			errorsCount = ErrorsCounter.getErrorCount();, +			if (errorsCount != 0), +	private static List<IDexTreeVisitor> getPassesList(IJadxArgs args) {, +, +	public int getErrorsCount() {, +		return errorsCount;, +	}, +++ b/src/main/java/jadx/IJadxArgs.java, +package jadx;, +, +import jadx.utils.files.InputFile;, +, +import java.io.File;, +import java.util.List;, +, +public interface IJadxArgs {, +    File getOutDir();, +, +    int getThreadsCount();, +, +    boolean isCFGOutput();, +, +    boolean isRawCFGOutput();, +, +    List<InputFile> getInput();, +, +    boolean isFallbackMode();, +, +    boolean isNotObfuscated();, +, +    boolean isVerbose();, +, +    boolean isPrintHelp();, +}, +++ b/src/main/java/jadx/Jadx.java, +public class Jadx implements Runnable {]