[+++ b/jadx-gui/build.gradle, +    compile 'com.fifesoft:rsyntaxtextarea:2.5.4', +++ b/jadx-gui/build.gradle, +    compile 'com.fifesoft:rsyntaxtextarea:2.5.4', +++ b/jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java, +import jadx.gui.update.JadxUpdate.IUpdateCallback;, +		checkForUpdate();, +	}, +, +	private void checkForUpdate() {, +		// TODO: add option for disable update checks, +		JadxUpdate.check(new IUpdateCallback() {, +++ b/jadx-gui/build.gradle, +    compile 'com.fifesoft:rsyntaxtextarea:2.5.4', +++ b/jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java, +import jadx.gui.update.JadxUpdate.IUpdateCallback;, +		checkForUpdate();, +	}, +, +	private void checkForUpdate() {, +		// TODO: add option for disable update checks, +		JadxUpdate.check(new IUpdateCallback() {, +++ b/jadx-gui/src/main/java/jadx/gui/ui/SearchBar.java, +import org.fife.ui.rtextarea.SearchResult;, +		context.setMarkAll(markAllCB.isSelected());, +		SearchResult result = SearchEngine.find(rTextArea, context);, +		if (!result.wasFound()) {, +++ b/jadx-gui/build.gradle, +    compile 'com.fifesoft:rsyntaxtextarea:2.5.4', +++ b/jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java, +import jadx.gui.update.JadxUpdate.IUpdateCallback;, +		checkForUpdate();, +	}, +, +	private void checkForUpdate() {, +		// TODO: add option for disable update checks, +		JadxUpdate.check(new IUpdateCallback() {, +++ b/jadx-gui/src/main/java/jadx/gui/ui/SearchBar.java, +import org.fife.ui.rtextarea.SearchResult;, +		context.setMarkAll(markAllCB.isSelected());, +		SearchResult result = SearchEngine.find(rTextArea, context);, +		if (!result.wasFound()) {, +++ b/jadx-gui/src/main/java/jadx/gui/update/JadxUpdate.java, +					|| release.isPreRelease()) {, +		if (VersionComparator.checkAndCompare(version, latest.getName()) >= 0) {, +		LOG.info("Found new jadx version: {}", latest);, +++ b/jadx-gui/build.gradle, +    compile 'com.fifesoft:rsyntaxtextarea:2.5.4', +++ b/jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java, +import jadx.gui.update.JadxUpdate.IUpdateCallback;, +		checkForUpdate();, +	}, +, +	private void checkForUpdate() {, +		// TODO: add option for disable update checks, +		JadxUpdate.check(new IUpdateCallback() {, +++ b/jadx-gui/src/main/java/jadx/gui/ui/SearchBar.java, +import org.fife.ui.rtextarea.SearchResult;, +		context.setMarkAll(markAllCB.isSelected());, +		SearchResult result = SearchEngine.find(rTextArea, context);, +		if (!result.wasFound()) {, +++ b/jadx-gui/src/main/java/jadx/gui/update/JadxUpdate.java, +					|| release.isPreRelease()) {, +		if (VersionComparator.checkAndCompare(version, latest.getName()) >= 0) {, +		LOG.info("Found new jadx version: {}", latest);, +++ b/jadx-gui/src/main/java/jadx/gui/update/data/Asset.java, +import com.google.gson.annotations.SerializedName;, +, +, +	@SerializedName("download_count"), +	private int downloadCount;, +, +	@SerializedName("browser_download_url"), +	private String downloadUrl;, +, +	@SerializedName("created_at"), +	private String createdAt;, +	public int getDownloadCount() {, +		return downloadCount;, +	public void setDownloadCount(int downloadCount) {, +		this.downloadCount = downloadCount;, +	}, +, +	public String getDownloadUrl() {, +		return downloadUrl;, +	}, +, +	public void setDownloadUrl(String downloadUrl) {, +		this.downloadUrl = downloadUrl;, +	}, +, +	public String getCreatedAt() {, +		return createdAt;, +	}, +, +	public void setCreatedAt(String createdAt) {, +		this.createdAt = createdAt;, +	}, +, +	@Override]