[+++ b/.gitmodules, +[submodule "jadx-test-app/test-app"], +	path = jadx-test-app/test-app, +	url = git://github.com/skylot/jadx-test-app.git, +++ b/.gitmodules, +[submodule "jadx-test-app/test-app"], +	path = jadx-test-app/test-app, +	url = git://github.com/skylot/jadx-test-app.git, +++ b/build.gradle, +task testAppCheck(dependsOn: 'jadx-test-app:testAppCheck') {, +}, +, +++ b/.gitmodules, +[submodule "jadx-test-app/test-app"], +	path = jadx-test-app/test-app, +	url = git://github.com/skylot/jadx-test-app.git, +++ b/build.gradle, +task testAppCheck(dependsOn: 'jadx-test-app:testAppCheck') {, +}, +, +++ b/jadx-test-app/README.md, +### Run jadx on test android application, +, +This module contains build scripts for test recompilation of simple android app from:, +https://github.com/skylot/jadx-test-app, +, +For run tests type follow commands in jadx root directory:, +, +```java, +git submodule init, +git submodule update, +./gradlew testAppCheck, +```, +, +Note: You will need connected device or emulator for success, +++ b/.gitmodules, +[submodule "jadx-test-app/test-app"], +	path = jadx-test-app/test-app, +	url = git://github.com/skylot/jadx-test-app.git, +++ b/build.gradle, +task testAppCheck(dependsOn: 'jadx-test-app:testAppCheck') {, +}, +, +++ b/jadx-test-app/README.md, +### Run jadx on test android application, +, +This module contains build scripts for test recompilation of simple android app from:, +https://github.com/skylot/jadx-test-app, +, +For run tests type follow commands in jadx root directory:, +, +```java, +git submodule init, +git submodule update, +./gradlew testAppCheck, +```, +, +Note: You will need connected device or emulator for success, +++ b/jadx-test-app/build.gradle, +project.ext {, +    testAppDir = 'test-app', +    testAppTmpDir = 'test-app-tmp', +, +    buildFile = "${testAppTmpDir}/build.gradle", +    apkFile = "${testAppTmpDir}/build/outputs/apk/test-app-tmp-debug.apk", +    outSrcDir = "${testAppTmpDir}/src/main/java", +    outResDir = "${testAppTmpDir}/src/main", +    checkTask = 'connectedCheck', +}, +, +dependencies {, +    compile(project(":jadx-cli")), +}, +, +sonarRunner {, +    skipProject = true, +}, +, +task deleteTmp(type:Delete) {, +    delete testAppTmpDir, +}, +, +task copyApp(type:Copy, dependsOn: deleteTmp) {, +    from testAppDir, +    into testAppTmpDir, +}, +, +task buildApp(type:Exec, dependsOn: copyApp) {, +    workingDir testAppTmpDir, +    commandLine "./gradlew clean build ${checkTask}".split(' '), +}, +, +task removeSource(type:Delete, dependsOn: buildApp) {, +    delete "${outResDir}/**", +}, +, +task runJadxSrc(type: JavaExec, dependsOn: removeSource) {, +    classpath = sourceSets.main.output + configurations.compile, +    main = project(':jadx-cli').mainClassName, +    args = ['-d', outSrcDir, '-r', apkFile, '-v']]