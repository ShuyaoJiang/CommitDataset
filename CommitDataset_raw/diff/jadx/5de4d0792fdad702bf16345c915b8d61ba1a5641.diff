[+++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java, +		appResClass = AndroidResourcesUtils.searchAppResClass(this, resStorage);, +++ b/jadx-core/src/main/java/jadx/api/JadxDecompiler.java, +++ b/jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java, +		appResClass = AndroidResourcesUtils.searchAppResClass(this, resStorage);, +++ b/jadx-core/src/main/java/jadx/core/utils/android/AndroidResourcesUtils.java, +import java.util.HashMap;, +import java.util.HashSet;, +import java.util.LinkedList;, +import java.util.Map;, +import java.util.Set;, +import jadx.core.xmlgen.ResourceStorage;, +import jadx.core.xmlgen.entry.ResourceEntry;, +	public static ClassNode searchAppResClass(RootNode root, ResourceStorage resStorage) {, +		return makeClass(root, fullName, resStorage);, +	private static ClassNode makeClass(RootNode root, String clsName, ResourceStorage resStorage) {, +		ClassNode classNode = new ClassNode(dexNodes.get(0), r);, +		generateMissingRCode(classNode, resStorage);, +		return classNode;, +	}, +	, +	private static void generateMissingRCode(ClassNode cls, ResourceStorage resStorage) {, +		Map<String, List<ResourceEntry>> sortedMap = new HashMap<>();, +		for(ResourceEntry ri : resStorage.getResources()) {, +			List<ResourceEntry> entries = sortedMap.get(ri.getTypeName());, +			if(entries == null) {, +				entries = new LinkedList<>();, +				sortedMap.put(ri.getTypeName(), entries);, +			}, +			entries.add(ri);, +		}, +		, +		Set<String> addedValues = new HashSet<>();, +		CodeWriter clsCode = new CodeWriter();, +		if (!"".equals(cls.getPackage())) {, +			clsCode.add("package ").add(cls.getPackage()).add(';').newLine();, +		}, +		clsCode.startLine("public final class ").add(cls.getShortName()).add(" {").incIndent();, +		for(String typeName : sortedMap.keySet()) {, +			clsCode.startLine("public static final class ").add(typeName).add(" {").incIndent();, +			for(ResourceEntry ri : sortedMap.get(typeName)) {, +				if(addedValues.add(ri.getTypeName() + "." + ri.getKeyName())) {, +					clsCode.startLine("public static final int ").add(ri.getKeyName()).add(" = "), +						.add("" + ri.getId()).add(";");, +				}, +			}, +			clsCode.decIndent();, +			clsCode.add("}");, +		}, +		clsCode.decIndent();, +		clsCode.add("}");, +		, +		cls.setCode(clsCode);]